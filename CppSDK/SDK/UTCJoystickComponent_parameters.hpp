#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UTCJoystickComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function UTCJoystickComponent.UTCJoystickComponent_C.UpdateWidgetSize
// 0x00B8 (0x00B8 - 0x0000)
struct UTCJoystickComponent_C_UpdateWidgetSize final
{
public:
	class UClass*                                 Widget_Class;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Widget_Size_0;                                 // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hide_If_Unpossessed;                               // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Initialized;                                    // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Is_Pawn_Possessed_by_PC_Is_Possessed_By_PC; // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Is_Pawn_Possessed_by_PC_Is_Locally_Controlled; // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIUTCWidget_C>         K2Node_DynamicCast_AsIUTCWidget;                   // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIUTCWidget_C>         K2Node_DynamicCast_AsIUTCWidget_1;                 // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIUTCWidget_C>         K2Node_DynamicCast_AsIUTCWidget_2;                 // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Max_Size_Value;                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue_1;           // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_Vector2DFloat_B_ImplicitCast;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCJoystickComponent_C_UpdateWidgetSize) == 0x000008, "Wrong alignment on UTCJoystickComponent_C_UpdateWidgetSize");
static_assert(sizeof(UTCJoystickComponent_C_UpdateWidgetSize) == 0x0000B8, "Wrong size on UTCJoystickComponent_C_UpdateWidgetSize");
static_assert(offsetof(UTCJoystickComponent_C_UpdateWidgetSize, Widget_Class) == 0x000000, "Member 'UTCJoystickComponent_C_UpdateWidgetSize::Widget_Class' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_UpdateWidgetSize, Use_Widget_Size_0) == 0x000008, "Member 'UTCJoystickComponent_C_UpdateWidgetSize::Use_Widget_Size_0' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_UpdateWidgetSize, Hide_If_Unpossessed) == 0x000009, "Member 'UTCJoystickComponent_C_UpdateWidgetSize::Hide_If_Unpossessed' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_UpdateWidgetSize, Is_Initialized) == 0x00000A, "Member 'UTCJoystickComponent_C_UpdateWidgetSize::Is_Initialized' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_UpdateWidgetSize, CallFunc_Get_Is_Pawn_Possessed_by_PC_Is_Possessed_By_PC) == 0x00000B, "Member 'UTCJoystickComponent_C_UpdateWidgetSize::CallFunc_Get_Is_Pawn_Possessed_by_PC_Is_Possessed_By_PC' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_UpdateWidgetSize, CallFunc_Get_Is_Pawn_Possessed_by_PC_Is_Locally_Controlled) == 0x00000C, "Member 'UTCJoystickComponent_C_UpdateWidgetSize::CallFunc_Get_Is_Pawn_Possessed_by_PC_Is_Locally_Controlled' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_UpdateWidgetSize, CallFunc_IsValid_ReturnValue) == 0x00000D, "Member 'UTCJoystickComponent_C_UpdateWidgetSize::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_UpdateWidgetSize, CallFunc_Not_PreBool_ReturnValue) == 0x00000E, "Member 'UTCJoystickComponent_C_UpdateWidgetSize::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_UpdateWidgetSize, CallFunc_Not_PreBool_ReturnValue_1) == 0x00000F, "Member 'UTCJoystickComponent_C_UpdateWidgetSize::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_UpdateWidgetSize, K2Node_DynamicCast_AsIUTCWidget) == 0x000010, "Member 'UTCJoystickComponent_C_UpdateWidgetSize::K2Node_DynamicCast_AsIUTCWidget' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_UpdateWidgetSize, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'UTCJoystickComponent_C_UpdateWidgetSize::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_UpdateWidgetSize, K2Node_DynamicCast_AsIUTCWidget_1) == 0x000028, "Member 'UTCJoystickComponent_C_UpdateWidgetSize::K2Node_DynamicCast_AsIUTCWidget_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_UpdateWidgetSize, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'UTCJoystickComponent_C_UpdateWidgetSize::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_UpdateWidgetSize, K2Node_DynamicCast_AsIUTCWidget_2) == 0x000040, "Member 'UTCJoystickComponent_C_UpdateWidgetSize::K2Node_DynamicCast_AsIUTCWidget_2' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_UpdateWidgetSize, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'UTCJoystickComponent_C_UpdateWidgetSize::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_UpdateWidgetSize, CallFunc_Get_Max_Size_Value) == 0x000058, "Member 'UTCJoystickComponent_C_UpdateWidgetSize::CallFunc_Get_Max_Size_Value' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_UpdateWidgetSize, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000060, "Member 'UTCJoystickComponent_C_UpdateWidgetSize::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_UpdateWidgetSize, CallFunc_BooleanAND_ReturnValue) == 0x000061, "Member 'UTCJoystickComponent_C_UpdateWidgetSize::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_UpdateWidgetSize, CallFunc_BooleanAND_ReturnValue_1) == 0x000062, "Member 'UTCJoystickComponent_C_UpdateWidgetSize::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_UpdateWidgetSize, CallFunc_BooleanOR_ReturnValue) == 0x000063, "Member 'UTCJoystickComponent_C_UpdateWidgetSize::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_UpdateWidgetSize, CallFunc_GetViewportScale_ReturnValue) == 0x000064, "Member 'UTCJoystickComponent_C_UpdateWidgetSize::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_UpdateWidgetSize, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000068, "Member 'UTCJoystickComponent_C_UpdateWidgetSize::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_UpdateWidgetSize, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000078, "Member 'UTCJoystickComponent_C_UpdateWidgetSize::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_UpdateWidgetSize, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000080, "Member 'UTCJoystickComponent_C_UpdateWidgetSize::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_UpdateWidgetSize, CallFunc_GetViewportScale_ReturnValue_1) == 0x000088, "Member 'UTCJoystickComponent_C_UpdateWidgetSize::CallFunc_GetViewportScale_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_UpdateWidgetSize, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000090, "Member 'UTCJoystickComponent_C_UpdateWidgetSize::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_UpdateWidgetSize, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000098, "Member 'UTCJoystickComponent_C_UpdateWidgetSize::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_UpdateWidgetSize, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x0000A0, "Member 'UTCJoystickComponent_C_UpdateWidgetSize::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_UpdateWidgetSize, CallFunc_Divide_Vector2DFloat_B_ImplicitCast) == 0x0000A8, "Member 'UTCJoystickComponent_C_UpdateWidgetSize::CallFunc_Divide_Vector2DFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_UpdateWidgetSize, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x0000B0, "Member 'UTCJoystickComponent_C_UpdateWidgetSize::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function UTCJoystickComponent.UTCJoystickComponent_C.UpdateDebugWidget
// 0x0028 (0x0028 - 0x0000)
struct UTCJoystickComponent_C_UpdateDebugWidget final
{
public:
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue_1;      // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCJoystickComponent_C_UpdateDebugWidget) == 0x000008, "Wrong alignment on UTCJoystickComponent_C_UpdateDebugWidget");
static_assert(sizeof(UTCJoystickComponent_C_UpdateDebugWidget) == 0x000028, "Wrong size on UTCJoystickComponent_C_UpdateDebugWidget");
static_assert(offsetof(UTCJoystickComponent_C_UpdateDebugWidget, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000000, "Member 'UTCJoystickComponent_C_UpdateDebugWidget::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_UpdateDebugWidget, CallFunc_Conv_VectorToVector2D_ReturnValue_1) == 0x000010, "Member 'UTCJoystickComponent_C_UpdateDebugWidget::CallFunc_Conv_VectorToVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_UpdateDebugWidget, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'UTCJoystickComponent_C_UpdateDebugWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function UTCJoystickComponent.UTCJoystickComponent_C.Update Temp Variables
// 0x0048 (0x0048 - 0x0000)
struct UTCJoystickComponent_C_Update_Temp_Variables final
{
public:
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAcos_ReturnValue;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCJoystickComponent_C_Update_Temp_Variables) == 0x000008, "Wrong alignment on UTCJoystickComponent_C_Update_Temp_Variables");
static_assert(sizeof(UTCJoystickComponent_C_Update_Temp_Variables) == 0x000048, "Wrong size on UTCJoystickComponent_C_Update_Temp_Variables");
static_assert(offsetof(UTCJoystickComponent_C_Update_Temp_Variables, CallFunc_Dot_VectorVector_ReturnValue) == 0x000000, "Member 'UTCJoystickComponent_C_Update_Temp_Variables::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Temp_Variables, CallFunc_DegAcos_ReturnValue) == 0x000008, "Member 'UTCJoystickComponent_C_Update_Temp_Variables::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Temp_Variables, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000010, "Member 'UTCJoystickComponent_C_Update_Temp_Variables::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Temp_Variables, CallFunc_Normal_ReturnValue) == 0x000028, "Member 'UTCJoystickComponent_C_Update_Temp_Variables::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Temp_Variables, CallFunc_VSize_ReturnValue) == 0x000040, "Member 'UTCJoystickComponent_C_Update_Temp_Variables::CallFunc_VSize_ReturnValue' has a wrong offset!");

// Function UTCJoystickComponent.UTCJoystickComponent_C.Update Magnituge By Widget Size
// 0x0058 (0x0058 - 0x0000)
struct UTCJoystickComponent_C_Update_Magnituge_By_Widget_Size final
{
public:
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIUTCWidget_C>         K2Node_DynamicCast_AsIUTCWidget;                   // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Max_Size_Value;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCJoystickComponent_C_Update_Magnituge_By_Widget_Size) == 0x000008, "Wrong alignment on UTCJoystickComponent_C_Update_Magnituge_By_Widget_Size");
static_assert(sizeof(UTCJoystickComponent_C_Update_Magnituge_By_Widget_Size) == 0x000058, "Wrong size on UTCJoystickComponent_C_Update_Magnituge_By_Widget_Size");
static_assert(offsetof(UTCJoystickComponent_C_Update_Magnituge_By_Widget_Size, CallFunc_GetViewportScale_ReturnValue) == 0x000000, "Member 'UTCJoystickComponent_C_Update_Magnituge_By_Widget_Size::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Magnituge_By_Widget_Size, K2Node_DynamicCast_AsIUTCWidget) == 0x000008, "Member 'UTCJoystickComponent_C_Update_Magnituge_By_Widget_Size::K2Node_DynamicCast_AsIUTCWidget' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Magnituge_By_Widget_Size, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'UTCJoystickComponent_C_Update_Magnituge_By_Widget_Size::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Magnituge_By_Widget_Size, CallFunc_Get_Max_Size_Value) == 0x000020, "Member 'UTCJoystickComponent_C_Update_Magnituge_By_Widget_Size::CallFunc_Get_Max_Size_Value' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Magnituge_By_Widget_Size, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000028, "Member 'UTCJoystickComponent_C_Update_Magnituge_By_Widget_Size::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Magnituge_By_Widget_Size, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'UTCJoystickComponent_C_Update_Magnituge_By_Widget_Size::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Magnituge_By_Widget_Size, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000038, "Member 'UTCJoystickComponent_C_Update_Magnituge_By_Widget_Size::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Magnituge_By_Widget_Size, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'UTCJoystickComponent_C_Update_Magnituge_By_Widget_Size::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Magnituge_By_Widget_Size, CallFunc_BooleanAND_ReturnValue) == 0x000048, "Member 'UTCJoystickComponent_C_Update_Magnituge_By_Widget_Size::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Magnituge_By_Widget_Size, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000050, "Member 'UTCJoystickComponent_C_Update_Magnituge_By_Widget_Size::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function UTCJoystickComponent.UTCJoystickComponent_C.Update Lock Axes
// 0x0110 (0x0110 - 0x0000)
struct UTCJoystickComponent_C_Update_Lock_Axes final
{
public:
	double                                        CallFunc_BreakVector_X;                            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_1;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_2;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_3;          // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_3;                          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_1;                  // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCJoystickComponent_C_Update_Lock_Axes) == 0x000008, "Wrong alignment on UTCJoystickComponent_C_Update_Lock_Axes");
static_assert(sizeof(UTCJoystickComponent_C_Update_Lock_Axes) == 0x000110, "Wrong size on UTCJoystickComponent_C_Update_Lock_Axes");
static_assert(offsetof(UTCJoystickComponent_C_Update_Lock_Axes, CallFunc_BreakVector_X) == 0x000000, "Member 'UTCJoystickComponent_C_Update_Lock_Axes::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Lock_Axes, CallFunc_BreakVector_Y) == 0x000008, "Member 'UTCJoystickComponent_C_Update_Lock_Axes::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Lock_Axes, CallFunc_BreakVector_Z) == 0x000010, "Member 'UTCJoystickComponent_C_Update_Lock_Axes::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Lock_Axes, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000018, "Member 'UTCJoystickComponent_C_Update_Lock_Axes::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Lock_Axes, CallFunc_BreakVector_X_1) == 0x000020, "Member 'UTCJoystickComponent_C_Update_Lock_Axes::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Lock_Axes, CallFunc_BreakVector_Y_1) == 0x000028, "Member 'UTCJoystickComponent_C_Update_Lock_Axes::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Lock_Axes, CallFunc_BreakVector_Z_1) == 0x000030, "Member 'UTCJoystickComponent_C_Update_Lock_Axes::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Lock_Axes, CallFunc_BooleanAND_ReturnValue) == 0x000038, "Member 'UTCJoystickComponent_C_Update_Lock_Axes::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Lock_Axes, CallFunc_MakeVector_ReturnValue) == 0x000040, "Member 'UTCJoystickComponent_C_Update_Lock_Axes::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Lock_Axes, CallFunc_MakeVector_ReturnValue_1) == 0x000058, "Member 'UTCJoystickComponent_C_Update_Lock_Axes::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Lock_Axes, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000070, "Member 'UTCJoystickComponent_C_Update_Lock_Axes::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Lock_Axes, CallFunc_SelectVector_ReturnValue) == 0x000078, "Member 'UTCJoystickComponent_C_Update_Lock_Axes::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Lock_Axes, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000090, "Member 'UTCJoystickComponent_C_Update_Lock_Axes::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Lock_Axes, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x000098, "Member 'UTCJoystickComponent_C_Update_Lock_Axes::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Lock_Axes, CallFunc_BreakVector_X_2) == 0x0000A0, "Member 'UTCJoystickComponent_C_Update_Lock_Axes::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Lock_Axes, CallFunc_BreakVector_Y_2) == 0x0000A8, "Member 'UTCJoystickComponent_C_Update_Lock_Axes::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Lock_Axes, CallFunc_BreakVector_Z_2) == 0x0000B0, "Member 'UTCJoystickComponent_C_Update_Lock_Axes::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Lock_Axes, CallFunc_NotEqual_ByteByte_ReturnValue_3) == 0x0000B8, "Member 'UTCJoystickComponent_C_Update_Lock_Axes::CallFunc_NotEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Lock_Axes, CallFunc_BreakVector_X_3) == 0x0000C0, "Member 'UTCJoystickComponent_C_Update_Lock_Axes::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Lock_Axes, CallFunc_BreakVector_Y_3) == 0x0000C8, "Member 'UTCJoystickComponent_C_Update_Lock_Axes::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Lock_Axes, CallFunc_BreakVector_Z_3) == 0x0000D0, "Member 'UTCJoystickComponent_C_Update_Lock_Axes::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Lock_Axes, CallFunc_FInterpTo_ReturnValue) == 0x0000D8, "Member 'UTCJoystickComponent_C_Update_Lock_Axes::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Lock_Axes, CallFunc_FInterpTo_ReturnValue_1) == 0x0000E0, "Member 'UTCJoystickComponent_C_Update_Lock_Axes::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Lock_Axes, CallFunc_SelectFloat_ReturnValue) == 0x0000E8, "Member 'UTCJoystickComponent_C_Update_Lock_Axes::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Lock_Axes, CallFunc_SelectFloat_ReturnValue_1) == 0x0000F0, "Member 'UTCJoystickComponent_C_Update_Lock_Axes::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Lock_Axes, CallFunc_MakeVector_ReturnValue_2) == 0x0000F8, "Member 'UTCJoystickComponent_C_Update_Lock_Axes::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");

// Function UTCJoystickComponent.UTCJoystickComponent_C.Update Floating
// 0x01C8 (0x01C8 - 0x0000)
struct UTCJoystickComponent_C_Update_Floating final
{
public:
	struct FVector                                JoystickLocation;                                  // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PickerLocation;                                    // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Old_Magnitude;                                     // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMagnitudeLowerThanMax_IsLowerThanMax;   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMagnitudeLowerThanMax_IsLowerThanMax_1; // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMagnitudeLowerThanMax_IsLowerThanMax_2; // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMagnitudeLowerThanMax_IsLowerThanMax_3; // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_Bounds_In_Bounds;                   // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_Bounds_W_out_Bounds;                // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_Bounds_In_Bounds_by_X;              // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_Bounds_In_Bounds_by_Y;              // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E6[0x2];                                       // 0x00E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue_1;               // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue_1;                      // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_2;               // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_3;               // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VLerp_Alpha_ImplicitCast;                 // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VLerp_Alpha_ImplicitCast_1;               // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCJoystickComponent_C_Update_Floating) == 0x000008, "Wrong alignment on UTCJoystickComponent_C_Update_Floating");
static_assert(sizeof(UTCJoystickComponent_C_Update_Floating) == 0x0001C8, "Wrong size on UTCJoystickComponent_C_Update_Floating");
static_assert(offsetof(UTCJoystickComponent_C_Update_Floating, JoystickLocation) == 0x000000, "Member 'UTCJoystickComponent_C_Update_Floating::JoystickLocation' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Floating, PickerLocation) == 0x000018, "Member 'UTCJoystickComponent_C_Update_Floating::PickerLocation' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Floating, Old_Magnitude) == 0x000030, "Member 'UTCJoystickComponent_C_Update_Floating::Old_Magnitude' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Floating, CallFunc_IsMagnitudeLowerThanMax_IsLowerThanMax) == 0x000038, "Member 'UTCJoystickComponent_C_Update_Floating::CallFunc_IsMagnitudeLowerThanMax_IsLowerThanMax' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Floating, CallFunc_IsMagnitudeLowerThanMax_IsLowerThanMax_1) == 0x000039, "Member 'UTCJoystickComponent_C_Update_Floating::CallFunc_IsMagnitudeLowerThanMax_IsLowerThanMax_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Floating, CallFunc_IsMagnitudeLowerThanMax_IsLowerThanMax_2) == 0x00003A, "Member 'UTCJoystickComponent_C_Update_Floating::CallFunc_IsMagnitudeLowerThanMax_IsLowerThanMax_2' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Floating, CallFunc_IsMagnitudeLowerThanMax_IsLowerThanMax_3) == 0x00003B, "Member 'UTCJoystickComponent_C_Update_Floating::CallFunc_IsMagnitudeLowerThanMax_IsLowerThanMax_3' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Floating, CallFunc_Not_PreBool_ReturnValue) == 0x00003C, "Member 'UTCJoystickComponent_C_Update_Floating::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Floating, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x00003D, "Member 'UTCJoystickComponent_C_Update_Floating::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Floating, CallFunc_SelectFloat_ReturnValue) == 0x000040, "Member 'UTCJoystickComponent_C_Update_Floating::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Floating, CallFunc_Not_PreBool_ReturnValue_1) == 0x000048, "Member 'UTCJoystickComponent_C_Update_Floating::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Floating, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000050, "Member 'UTCJoystickComponent_C_Update_Floating::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Floating, CallFunc_Add_VectorVector_ReturnValue) == 0x000068, "Member 'UTCJoystickComponent_C_Update_Floating::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Floating, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000080, "Member 'UTCJoystickComponent_C_Update_Floating::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Floating, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000098, "Member 'UTCJoystickComponent_C_Update_Floating::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Floating, CallFunc_SelectVector_ReturnValue) == 0x0000B0, "Member 'UTCJoystickComponent_C_Update_Floating::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Floating, CallFunc_BreakVector_X) == 0x0000C8, "Member 'UTCJoystickComponent_C_Update_Floating::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Floating, CallFunc_BreakVector_Y) == 0x0000D0, "Member 'UTCJoystickComponent_C_Update_Floating::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Floating, CallFunc_BreakVector_Z) == 0x0000D8, "Member 'UTCJoystickComponent_C_Update_Floating::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Floating, CallFunc_Check_Bounds_In_Bounds) == 0x0000E0, "Member 'UTCJoystickComponent_C_Update_Floating::CallFunc_Check_Bounds_In_Bounds' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Floating, CallFunc_Check_Bounds_W_out_Bounds) == 0x0000E1, "Member 'UTCJoystickComponent_C_Update_Floating::CallFunc_Check_Bounds_W_out_Bounds' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Floating, CallFunc_Check_Bounds_In_Bounds_by_X) == 0x0000E2, "Member 'UTCJoystickComponent_C_Update_Floating::CallFunc_Check_Bounds_In_Bounds_by_X' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Floating, CallFunc_Check_Bounds_In_Bounds_by_Y) == 0x0000E3, "Member 'UTCJoystickComponent_C_Update_Floating::CallFunc_Check_Bounds_In_Bounds_by_Y' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Floating, CallFunc_BooleanAND_ReturnValue) == 0x0000E4, "Member 'UTCJoystickComponent_C_Update_Floating::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Floating, CallFunc_BooleanAND_ReturnValue_1) == 0x0000E5, "Member 'UTCJoystickComponent_C_Update_Floating::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Floating, CallFunc_SelectVector_ReturnValue_1) == 0x0000E8, "Member 'UTCJoystickComponent_C_Update_Floating::CallFunc_SelectVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Floating, CallFunc_BooleanAND_ReturnValue_2) == 0x000100, "Member 'UTCJoystickComponent_C_Update_Floating::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Floating, CallFunc_Not_PreBool_ReturnValue_2) == 0x000101, "Member 'UTCJoystickComponent_C_Update_Floating::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Floating, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000108, "Member 'UTCJoystickComponent_C_Update_Floating::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Floating, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000110, "Member 'UTCJoystickComponent_C_Update_Floating::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Floating, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000118, "Member 'UTCJoystickComponent_C_Update_Floating::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Floating, CallFunc_VLerp_ReturnValue) == 0x000120, "Member 'UTCJoystickComponent_C_Update_Floating::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Floating, CallFunc_VLerp_ReturnValue_1) == 0x000138, "Member 'UTCJoystickComponent_C_Update_Floating::CallFunc_VLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Floating, CallFunc_BreakVector_X_1) == 0x000150, "Member 'UTCJoystickComponent_C_Update_Floating::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Floating, CallFunc_BreakVector_Y_1) == 0x000158, "Member 'UTCJoystickComponent_C_Update_Floating::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Floating, CallFunc_BreakVector_Z_1) == 0x000160, "Member 'UTCJoystickComponent_C_Update_Floating::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Floating, CallFunc_SelectVector_ReturnValue_2) == 0x000168, "Member 'UTCJoystickComponent_C_Update_Floating::CallFunc_SelectVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Floating, CallFunc_SelectFloat_ReturnValue_1) == 0x000180, "Member 'UTCJoystickComponent_C_Update_Floating::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Floating, CallFunc_SelectFloat_ReturnValue_2) == 0x000188, "Member 'UTCJoystickComponent_C_Update_Floating::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Floating, CallFunc_MakeVector_ReturnValue) == 0x000190, "Member 'UTCJoystickComponent_C_Update_Floating::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Floating, CallFunc_SelectVector_ReturnValue_3) == 0x0001A8, "Member 'UTCJoystickComponent_C_Update_Floating::CallFunc_SelectVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Floating, CallFunc_VLerp_Alpha_ImplicitCast) == 0x0001C0, "Member 'UTCJoystickComponent_C_Update_Floating::CallFunc_VLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Floating, CallFunc_VLerp_Alpha_ImplicitCast_1) == 0x0001C4, "Member 'UTCJoystickComponent_C_Update_Floating::CallFunc_VLerp_Alpha_ImplicitCast_1' has a wrong offset!");

// Function UTCJoystickComponent.UTCJoystickComponent_C.Update Fixed Location
// 0x0020 (0x0020 - 0x0000)
struct UTCJoystickComponent_C_Update_Fixed_Location final
{
public:
	bool                                          Is_Viewport_Size_Changed;                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Get_Screen_Size_By_Size_In_Percents_ReturnValue; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCJoystickComponent_C_Update_Fixed_Location) == 0x000008, "Wrong alignment on UTCJoystickComponent_C_Update_Fixed_Location");
static_assert(sizeof(UTCJoystickComponent_C_Update_Fixed_Location) == 0x000020, "Wrong size on UTCJoystickComponent_C_Update_Fixed_Location");
static_assert(offsetof(UTCJoystickComponent_C_Update_Fixed_Location, Is_Viewport_Size_Changed) == 0x000000, "Member 'UTCJoystickComponent_C_Update_Fixed_Location::Is_Viewport_Size_Changed' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Fixed_Location, CallFunc_Get_Screen_Size_By_Size_In_Percents_ReturnValue) == 0x000008, "Member 'UTCJoystickComponent_C_Update_Fixed_Location::CallFunc_Get_Screen_Size_By_Size_In_Percents_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Fixed_Location, CallFunc_BooleanAND_ReturnValue) == 0x000018, "Member 'UTCJoystickComponent_C_Update_Fixed_Location::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Fixed_Location, CallFunc_BooleanAND_ReturnValue_1) == 0x000019, "Member 'UTCJoystickComponent_C_Update_Fixed_Location::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function UTCJoystickComponent.UTCJoystickComponent_C.Update Axis Vector
// 0x00E8 (0x00E8 - 0x0000)
struct UTCJoystickComponent_C_Update_Axis_Vector final
{
public:
	struct FVector2D                              Axis;                                              // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegSin_ReturnValue;                       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegCos_ReturnValue;                       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_4;                // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_5;                // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_6;                // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCJoystickComponent_C_Update_Axis_Vector) == 0x000008, "Wrong alignment on UTCJoystickComponent_C_Update_Axis_Vector");
static_assert(sizeof(UTCJoystickComponent_C_Update_Axis_Vector) == 0x0000E8, "Wrong size on UTCJoystickComponent_C_Update_Axis_Vector");
static_assert(offsetof(UTCJoystickComponent_C_Update_Axis_Vector, Axis) == 0x000000, "Member 'UTCJoystickComponent_C_Update_Axis_Vector::Axis' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Axis_Vector, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000010, "Member 'UTCJoystickComponent_C_Update_Axis_Vector::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Axis_Vector, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000011, "Member 'UTCJoystickComponent_C_Update_Axis_Vector::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Axis_Vector, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'UTCJoystickComponent_C_Update_Axis_Vector::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Axis_Vector, CallFunc_BreakVector_X) == 0x000020, "Member 'UTCJoystickComponent_C_Update_Axis_Vector::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Axis_Vector, CallFunc_BreakVector_Y) == 0x000028, "Member 'UTCJoystickComponent_C_Update_Axis_Vector::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Axis_Vector, CallFunc_BreakVector_Z) == 0x000030, "Member 'UTCJoystickComponent_C_Update_Axis_Vector::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Axis_Vector, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000038, "Member 'UTCJoystickComponent_C_Update_Axis_Vector::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Axis_Vector, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000039, "Member 'UTCJoystickComponent_C_Update_Axis_Vector::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Axis_Vector, CallFunc_SelectFloat_ReturnValue) == 0x000040, "Member 'UTCJoystickComponent_C_Update_Axis_Vector::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Axis_Vector, CallFunc_SelectFloat_ReturnValue_1) == 0x000048, "Member 'UTCJoystickComponent_C_Update_Axis_Vector::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Axis_Vector, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'UTCJoystickComponent_C_Update_Axis_Vector::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Axis_Vector, CallFunc_SelectFloat_ReturnValue_2) == 0x000058, "Member 'UTCJoystickComponent_C_Update_Axis_Vector::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Axis_Vector, CallFunc_DegSin_ReturnValue) == 0x000060, "Member 'UTCJoystickComponent_C_Update_Axis_Vector::CallFunc_DegSin_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Axis_Vector, CallFunc_DegCos_ReturnValue) == 0x000068, "Member 'UTCJoystickComponent_C_Update_Axis_Vector::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Axis_Vector, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000070, "Member 'UTCJoystickComponent_C_Update_Axis_Vector::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Axis_Vector, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000078, "Member 'UTCJoystickComponent_C_Update_Axis_Vector::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Axis_Vector, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000080, "Member 'UTCJoystickComponent_C_Update_Axis_Vector::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Axis_Vector, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000088, "Member 'UTCJoystickComponent_C_Update_Axis_Vector::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Axis_Vector, CallFunc_Abs_ReturnValue) == 0x000090, "Member 'UTCJoystickComponent_C_Update_Axis_Vector::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Axis_Vector, CallFunc_Abs_ReturnValue_1) == 0x000098, "Member 'UTCJoystickComponent_C_Update_Axis_Vector::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Axis_Vector, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x0000A0, "Member 'UTCJoystickComponent_C_Update_Axis_Vector::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Axis_Vector, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x0000A1, "Member 'UTCJoystickComponent_C_Update_Axis_Vector::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Axis_Vector, CallFunc_SelectFloat_ReturnValue_3) == 0x0000A8, "Member 'UTCJoystickComponent_C_Update_Axis_Vector::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Axis_Vector, CallFunc_SelectFloat_ReturnValue_4) == 0x0000B0, "Member 'UTCJoystickComponent_C_Update_Axis_Vector::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Axis_Vector, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0000B8, "Member 'UTCJoystickComponent_C_Update_Axis_Vector::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Axis_Vector, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0000C0, "Member 'UTCJoystickComponent_C_Update_Axis_Vector::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Axis_Vector, CallFunc_SelectFloat_ReturnValue_5) == 0x0000C8, "Member 'UTCJoystickComponent_C_Update_Axis_Vector::CallFunc_SelectFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Axis_Vector, CallFunc_SelectFloat_ReturnValue_6) == 0x0000D0, "Member 'UTCJoystickComponent_C_Update_Axis_Vector::CallFunc_SelectFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Update_Axis_Vector, CallFunc_MakeVector2D_ReturnValue) == 0x0000D8, "Member 'UTCJoystickComponent_C_Update_Axis_Vector::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function UTCJoystickComponent.UTCJoystickComponent_C.Snap Widget to Bounds
// 0x0048 (0x0048 - 0x0000)
struct UTCJoystickComponent_C_Snap_Widget_to_Bounds final
{
public:
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue;        // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIUTCWidget_C>         K2Node_DynamicCast_AsIUTCWidget;                   // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIUTCWidget_C>         K2Node_DynamicCast_AsIUTCWidget_1;                 // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCJoystickComponent_C_Snap_Widget_to_Bounds) == 0x000008, "Wrong alignment on UTCJoystickComponent_C_Snap_Widget_to_Bounds");
static_assert(sizeof(UTCJoystickComponent_C_Snap_Widget_to_Bounds) == 0x000048, "Wrong size on UTCJoystickComponent_C_Snap_Widget_to_Bounds");
static_assert(offsetof(UTCJoystickComponent_C_Snap_Widget_to_Bounds, CallFunc_Conv_Vector2DToVector_ReturnValue) == 0x000000, "Member 'UTCJoystickComponent_C_Snap_Widget_to_Bounds::CallFunc_Conv_Vector2DToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Snap_Widget_to_Bounds, K2Node_DynamicCast_AsIUTCWidget) == 0x000018, "Member 'UTCJoystickComponent_C_Snap_Widget_to_Bounds::K2Node_DynamicCast_AsIUTCWidget' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Snap_Widget_to_Bounds, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'UTCJoystickComponent_C_Snap_Widget_to_Bounds::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Snap_Widget_to_Bounds, K2Node_DynamicCast_AsIUTCWidget_1) == 0x000030, "Member 'UTCJoystickComponent_C_Snap_Widget_to_Bounds::K2Node_DynamicCast_AsIUTCWidget_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Snap_Widget_to_Bounds, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'UTCJoystickComponent_C_Snap_Widget_to_Bounds::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function UTCJoystickComponent.UTCJoystickComponent_C.Snap Bounds to Fixed Location
// 0x0038 (0x0038 - 0x0000)
struct UTCJoystickComponent_C_Snap_Bounds_to_Fixed_Location final
{
public:
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCJoystickComponent_C_Snap_Bounds_to_Fixed_Location) == 0x000008, "Wrong alignment on UTCJoystickComponent_C_Snap_Bounds_to_Fixed_Location");
static_assert(sizeof(UTCJoystickComponent_C_Snap_Bounds_to_Fixed_Location) == 0x000038, "Wrong size on UTCJoystickComponent_C_Snap_Bounds_to_Fixed_Location");
static_assert(offsetof(UTCJoystickComponent_C_Snap_Bounds_to_Fixed_Location, CallFunc_BooleanAND_ReturnValue) == 0x000000, "Member 'UTCJoystickComponent_C_Snap_Bounds_to_Fixed_Location::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Snap_Bounds_to_Fixed_Location, CallFunc_MakeVector2D_ReturnValue) == 0x000008, "Member 'UTCJoystickComponent_C_Snap_Bounds_to_Fixed_Location::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Snap_Bounds_to_Fixed_Location, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000018, "Member 'UTCJoystickComponent_C_Snap_Bounds_to_Fixed_Location::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Snap_Bounds_to_Fixed_Location, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000028, "Member 'UTCJoystickComponent_C_Snap_Bounds_to_Fixed_Location::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");

// Function UTCJoystickComponent.UTCJoystickComponent_C.SetWidgetVisibility
// 0x0002 (0x0002 - 0x0000)
struct UTCJoystickComponent_C_SetWidgetVisibility final
{
public:
	bool                                          NewVisibility;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCJoystickComponent_C_SetWidgetVisibility) == 0x000001, "Wrong alignment on UTCJoystickComponent_C_SetWidgetVisibility");
static_assert(sizeof(UTCJoystickComponent_C_SetWidgetVisibility) == 0x000002, "Wrong size on UTCJoystickComponent_C_SetWidgetVisibility");
static_assert(offsetof(UTCJoystickComponent_C_SetWidgetVisibility, NewVisibility) == 0x000000, "Member 'UTCJoystickComponent_C_SetWidgetVisibility::NewVisibility' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_SetWidgetVisibility, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'UTCJoystickComponent_C_SetWidgetVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function UTCJoystickComponent.UTCJoystickComponent_C.Setup Widget
// 0x0018 (0x0018 - 0x0000)
struct UTCJoystickComponent_C_Setup_Widget final
{
public:
	class UClass*                                 Widget__with_IUTCWIdget_Interface_;                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Widget_Size__back_texture_size_;               // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hide_if_Pawn_Unpossessed;                          // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            JoystickWgt;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCJoystickComponent_C_Setup_Widget) == 0x000008, "Wrong alignment on UTCJoystickComponent_C_Setup_Widget");
static_assert(sizeof(UTCJoystickComponent_C_Setup_Widget) == 0x000018, "Wrong size on UTCJoystickComponent_C_Setup_Widget");
static_assert(offsetof(UTCJoystickComponent_C_Setup_Widget, Widget__with_IUTCWIdget_Interface_) == 0x000000, "Member 'UTCJoystickComponent_C_Setup_Widget::Widget__with_IUTCWIdget_Interface_' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Setup_Widget, Use_Widget_Size__back_texture_size_) == 0x000008, "Member 'UTCJoystickComponent_C_Setup_Widget::Use_Widget_Size__back_texture_size_' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Setup_Widget, Hide_if_Pawn_Unpossessed) == 0x000009, "Member 'UTCJoystickComponent_C_Setup_Widget::Hide_if_Pawn_Unpossessed' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Setup_Widget, JoystickWgt) == 0x000010, "Member 'UTCJoystickComponent_C_Setup_Widget::JoystickWgt' has a wrong offset!");

// Function UTCJoystickComponent.UTCJoystickComponent_C.Setup Fixed Location
// 0x0020 (0x0020 - 0x0000)
struct UTCJoystickComponent_C_Setup_Fixed_Location final
{
public:
	bool                                          Is_Enabled;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Fixed_Location_0;                                  // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          In_Percent;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Imeediate_Recalculation;                           // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Adjust_Bounds_to_Fixed_Location_0;                 // 0x001A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCJoystickComponent_C_Setup_Fixed_Location) == 0x000008, "Wrong alignment on UTCJoystickComponent_C_Setup_Fixed_Location");
static_assert(sizeof(UTCJoystickComponent_C_Setup_Fixed_Location) == 0x000020, "Wrong size on UTCJoystickComponent_C_Setup_Fixed_Location");
static_assert(offsetof(UTCJoystickComponent_C_Setup_Fixed_Location, Is_Enabled) == 0x000000, "Member 'UTCJoystickComponent_C_Setup_Fixed_Location::Is_Enabled' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Setup_Fixed_Location, Fixed_Location_0) == 0x000008, "Member 'UTCJoystickComponent_C_Setup_Fixed_Location::Fixed_Location_0' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Setup_Fixed_Location, In_Percent) == 0x000018, "Member 'UTCJoystickComponent_C_Setup_Fixed_Location::In_Percent' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Setup_Fixed_Location, Imeediate_Recalculation) == 0x000019, "Member 'UTCJoystickComponent_C_Setup_Fixed_Location::Imeediate_Recalculation' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_Setup_Fixed_Location, Adjust_Bounds_to_Fixed_Location_0) == 0x00001A, "Member 'UTCJoystickComponent_C_Setup_Fixed_Location::Adjust_Bounds_to_Fixed_Location_0' has a wrong offset!");

// Function UTCJoystickComponent.UTCJoystickComponent_C.SetJoystickMode
// 0x0001 (0x0001 - 0x0000)
struct UTCJoystickComponent_C_SetJoystickMode final
{
public:
	bool                                          JoystickMode;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCJoystickComponent_C_SetJoystickMode) == 0x000001, "Wrong alignment on UTCJoystickComponent_C_SetJoystickMode");
static_assert(sizeof(UTCJoystickComponent_C_SetJoystickMode) == 0x000001, "Wrong size on UTCJoystickComponent_C_SetJoystickMode");
static_assert(offsetof(UTCJoystickComponent_C_SetJoystickMode, JoystickMode) == 0x000000, "Member 'UTCJoystickComponent_C_SetJoystickMode::JoystickMode' has a wrong offset!");

// Function UTCJoystickComponent.UTCJoystickComponent_C.ResetWidgetPos
// 0x0038 (0x0038 - 0x0000)
struct UTCJoystickComponent_C_ResetWidgetPos final
{
public:
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCJoystickComponent_C_ResetWidgetPos) == 0x000008, "Wrong alignment on UTCJoystickComponent_C_ResetWidgetPos");
static_assert(sizeof(UTCJoystickComponent_C_ResetWidgetPos) == 0x000038, "Wrong size on UTCJoystickComponent_C_ResetWidgetPos");
static_assert(offsetof(UTCJoystickComponent_C_ResetWidgetPos, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000000, "Member 'UTCJoystickComponent_C_ResetWidgetPos::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ResetWidgetPos, CallFunc_BreakVector2D_X) == 0x000010, "Member 'UTCJoystickComponent_C_ResetWidgetPos::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ResetWidgetPos, CallFunc_BreakVector2D_Y) == 0x000018, "Member 'UTCJoystickComponent_C_ResetWidgetPos::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ResetWidgetPos, CallFunc_MakeVector_ReturnValue) == 0x000020, "Member 'UTCJoystickComponent_C_ResetWidgetPos::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function UTCJoystickComponent.UTCJoystickComponent_C.ReleaseTouch
// 0x0020 (0x0020 - 0x0000)
struct UTCJoystickComponent_C_ReleaseTouch final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCJoystickComponent_C_ReleaseTouch) == 0x000008, "Wrong alignment on UTCJoystickComponent_C_ReleaseTouch");
static_assert(sizeof(UTCJoystickComponent_C_ReleaseTouch) == 0x000020, "Wrong size on UTCJoystickComponent_C_ReleaseTouch");
static_assert(offsetof(UTCJoystickComponent_C_ReleaseTouch, Location) == 0x000000, "Member 'UTCJoystickComponent_C_ReleaseTouch::Location' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ReleaseTouch, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'UTCJoystickComponent_C_ReleaseTouch::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function UTCJoystickComponent.UTCJoystickComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct UTCJoystickComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCJoystickComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on UTCJoystickComponent_C_ReceiveTick");
static_assert(sizeof(UTCJoystickComponent_C_ReceiveTick) == 0x000004, "Wrong size on UTCJoystickComponent_C_ReceiveTick");
static_assert(offsetof(UTCJoystickComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'UTCJoystickComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function UTCJoystickComponent.UTCJoystickComponent_C.On Y Axis Changed Event
// 0x0008 (0x0008 - 0x0000)
struct UTCJoystickComponent_C_On_Y_Axis_Changed_Event final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCJoystickComponent_C_On_Y_Axis_Changed_Event) == 0x000008, "Wrong alignment on UTCJoystickComponent_C_On_Y_Axis_Changed_Event");
static_assert(sizeof(UTCJoystickComponent_C_On_Y_Axis_Changed_Event) == 0x000008, "Wrong size on UTCJoystickComponent_C_On_Y_Axis_Changed_Event");
static_assert(offsetof(UTCJoystickComponent_C_On_Y_Axis_Changed_Event, Value) == 0x000000, "Member 'UTCJoystickComponent_C_On_Y_Axis_Changed_Event::Value' has a wrong offset!");

// Function UTCJoystickComponent.UTCJoystickComponent_C.On X Axis Changed Event
// 0x0008 (0x0008 - 0x0000)
struct UTCJoystickComponent_C_On_X_Axis_Changed_Event final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCJoystickComponent_C_On_X_Axis_Changed_Event) == 0x000008, "Wrong alignment on UTCJoystickComponent_C_On_X_Axis_Changed_Event");
static_assert(sizeof(UTCJoystickComponent_C_On_X_Axis_Changed_Event) == 0x000008, "Wrong size on UTCJoystickComponent_C_On_X_Axis_Changed_Event");
static_assert(offsetof(UTCJoystickComponent_C_On_X_Axis_Changed_Event, Value) == 0x000000, "Member 'UTCJoystickComponent_C_On_X_Axis_Changed_Event::Value' has a wrong offset!");

// Function UTCJoystickComponent.UTCJoystickComponent_C.On Viewport Size Changed Event
// 0x0020 (0x0020 - 0x0000)
struct UTCJoystickComponent_C_On_Viewport_Size_Changed_Event final
{
public:
	struct FVector2D                              Previous_Size;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Updated_Size;                                      // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCJoystickComponent_C_On_Viewport_Size_Changed_Event) == 0x000008, "Wrong alignment on UTCJoystickComponent_C_On_Viewport_Size_Changed_Event");
static_assert(sizeof(UTCJoystickComponent_C_On_Viewport_Size_Changed_Event) == 0x000020, "Wrong size on UTCJoystickComponent_C_On_Viewport_Size_Changed_Event");
static_assert(offsetof(UTCJoystickComponent_C_On_Viewport_Size_Changed_Event, Previous_Size) == 0x000000, "Member 'UTCJoystickComponent_C_On_Viewport_Size_Changed_Event::Previous_Size' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_On_Viewport_Size_Changed_Event, Updated_Size) == 0x000010, "Member 'UTCJoystickComponent_C_On_Viewport_Size_Changed_Event::Updated_Size' has a wrong offset!");

// Function UTCJoystickComponent.UTCJoystickComponent_C.On Picker Location Changed Event
// 0x0018 (0x0018 - 0x0000)
struct UTCJoystickComponent_C_On_Picker_Location_Changed_Event final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCJoystickComponent_C_On_Picker_Location_Changed_Event) == 0x000008, "Wrong alignment on UTCJoystickComponent_C_On_Picker_Location_Changed_Event");
static_assert(sizeof(UTCJoystickComponent_C_On_Picker_Location_Changed_Event) == 0x000018, "Wrong size on UTCJoystickComponent_C_On_Picker_Location_Changed_Event");
static_assert(offsetof(UTCJoystickComponent_C_On_Picker_Location_Changed_Event, Location) == 0x000000, "Member 'UTCJoystickComponent_C_On_Picker_Location_Changed_Event::Location' has a wrong offset!");

// Function UTCJoystickComponent.UTCJoystickComponent_C.On Pawn Unpossesed
// 0x0008 (0x0008 - 0x0000)
struct UTCJoystickComponent_C_On_Pawn_Unpossesed final
{
public:
	class AController*                            Old_Controller;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCJoystickComponent_C_On_Pawn_Unpossesed) == 0x000008, "Wrong alignment on UTCJoystickComponent_C_On_Pawn_Unpossesed");
static_assert(sizeof(UTCJoystickComponent_C_On_Pawn_Unpossesed) == 0x000008, "Wrong size on UTCJoystickComponent_C_On_Pawn_Unpossesed");
static_assert(offsetof(UTCJoystickComponent_C_On_Pawn_Unpossesed, Old_Controller) == 0x000000, "Member 'UTCJoystickComponent_C_On_Pawn_Unpossesed::Old_Controller' has a wrong offset!");

// Function UTCJoystickComponent.UTCJoystickComponent_C.On Pawn Possesed
// 0x0008 (0x0008 - 0x0000)
struct UTCJoystickComponent_C_On_Pawn_Possesed final
{
public:
	class AController*                            New_Controller;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCJoystickComponent_C_On_Pawn_Possesed) == 0x000008, "Wrong alignment on UTCJoystickComponent_C_On_Pawn_Possesed");
static_assert(sizeof(UTCJoystickComponent_C_On_Pawn_Possesed) == 0x000008, "Wrong size on UTCJoystickComponent_C_On_Pawn_Possesed");
static_assert(offsetof(UTCJoystickComponent_C_On_Pawn_Possesed, New_Controller) == 0x000000, "Member 'UTCJoystickComponent_C_On_Pawn_Possesed::New_Controller' has a wrong offset!");

// Function UTCJoystickComponent.UTCJoystickComponent_C.On Joystick Released Event
// 0x0018 (0x0018 - 0x0000)
struct UTCJoystickComponent_C_On_Joystick_Released_Event final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCJoystickComponent_C_On_Joystick_Released_Event) == 0x000008, "Wrong alignment on UTCJoystickComponent_C_On_Joystick_Released_Event");
static_assert(sizeof(UTCJoystickComponent_C_On_Joystick_Released_Event) == 0x000018, "Wrong size on UTCJoystickComponent_C_On_Joystick_Released_Event");
static_assert(offsetof(UTCJoystickComponent_C_On_Joystick_Released_Event, Location) == 0x000000, "Member 'UTCJoystickComponent_C_On_Joystick_Released_Event::Location' has a wrong offset!");

// Function UTCJoystickComponent.UTCJoystickComponent_C.On Joystick Pressed Event
// 0x0018 (0x0018 - 0x0000)
struct UTCJoystickComponent_C_On_Joystick_Pressed_Event final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCJoystickComponent_C_On_Joystick_Pressed_Event) == 0x000008, "Wrong alignment on UTCJoystickComponent_C_On_Joystick_Pressed_Event");
static_assert(sizeof(UTCJoystickComponent_C_On_Joystick_Pressed_Event) == 0x000018, "Wrong size on UTCJoystickComponent_C_On_Joystick_Pressed_Event");
static_assert(offsetof(UTCJoystickComponent_C_On_Joystick_Pressed_Event, Location) == 0x000000, "Member 'UTCJoystickComponent_C_On_Joystick_Pressed_Event::Location' has a wrong offset!");

// Function UTCJoystickComponent.UTCJoystickComponent_C.On Joystick Location Changed Event
// 0x0018 (0x0018 - 0x0000)
struct UTCJoystickComponent_C_On_Joystick_Location_Changed_Event final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCJoystickComponent_C_On_Joystick_Location_Changed_Event) == 0x000008, "Wrong alignment on UTCJoystickComponent_C_On_Joystick_Location_Changed_Event");
static_assert(sizeof(UTCJoystickComponent_C_On_Joystick_Location_Changed_Event) == 0x000018, "Wrong size on UTCJoystickComponent_C_On_Joystick_Location_Changed_Event");
static_assert(offsetof(UTCJoystickComponent_C_On_Joystick_Location_Changed_Event, Location) == 0x000000, "Member 'UTCJoystickComponent_C_On_Joystick_Location_Changed_Event::Location' has a wrong offset!");

// Function UTCJoystickComponent.UTCJoystickComponent_C.On Event Touch Released
// 0x0020 (0x0020 - 0x0000)
struct UTCJoystickComponent_C_On_Event_Touch_Released final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETouchIndex                                   FingerIndex;                                       // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCJoystickComponent_C_On_Event_Touch_Released) == 0x000008, "Wrong alignment on UTCJoystickComponent_C_On_Event_Touch_Released");
static_assert(sizeof(UTCJoystickComponent_C_On_Event_Touch_Released) == 0x000020, "Wrong size on UTCJoystickComponent_C_On_Event_Touch_Released");
static_assert(offsetof(UTCJoystickComponent_C_On_Event_Touch_Released, Location) == 0x000000, "Member 'UTCJoystickComponent_C_On_Event_Touch_Released::Location' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_On_Event_Touch_Released, FingerIndex) == 0x000018, "Member 'UTCJoystickComponent_C_On_Event_Touch_Released::FingerIndex' has a wrong offset!");

// Function UTCJoystickComponent.UTCJoystickComponent_C.On Event Touch Pressed
// 0x0020 (0x0020 - 0x0000)
struct UTCJoystickComponent_C_On_Event_Touch_Pressed final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETouchIndex                                   FingerIndex;                                       // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCJoystickComponent_C_On_Event_Touch_Pressed) == 0x000008, "Wrong alignment on UTCJoystickComponent_C_On_Event_Touch_Pressed");
static_assert(sizeof(UTCJoystickComponent_C_On_Event_Touch_Pressed) == 0x000020, "Wrong size on UTCJoystickComponent_C_On_Event_Touch_Pressed");
static_assert(offsetof(UTCJoystickComponent_C_On_Event_Touch_Pressed, Location) == 0x000000, "Member 'UTCJoystickComponent_C_On_Event_Touch_Pressed::Location' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_On_Event_Touch_Pressed, FingerIndex) == 0x000018, "Member 'UTCJoystickComponent_C_On_Event_Touch_Pressed::FingerIndex' has a wrong offset!");

// Function UTCJoystickComponent.UTCJoystickComponent_C.On Event Touch Moved
// 0x0020 (0x0020 - 0x0000)
struct UTCJoystickComponent_C_On_Event_Touch_Moved final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETouchIndex                                   FingerIndex;                                       // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCJoystickComponent_C_On_Event_Touch_Moved) == 0x000008, "Wrong alignment on UTCJoystickComponent_C_On_Event_Touch_Moved");
static_assert(sizeof(UTCJoystickComponent_C_On_Event_Touch_Moved) == 0x000020, "Wrong size on UTCJoystickComponent_C_On_Event_Touch_Moved");
static_assert(offsetof(UTCJoystickComponent_C_On_Event_Touch_Moved, Location) == 0x000000, "Member 'UTCJoystickComponent_C_On_Event_Touch_Moved::Location' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_On_Event_Touch_Moved, FingerIndex) == 0x000018, "Member 'UTCJoystickComponent_C_On_Event_Touch_Moved::FingerIndex' has a wrong offset!");

// Function UTCJoystickComponent.UTCJoystickComponent_C.On Event Touch Canceled
// 0x0020 (0x0020 - 0x0000)
struct UTCJoystickComponent_C_On_Event_Touch_Canceled final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETouchIndex                                   FingerIndex;                                       // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCJoystickComponent_C_On_Event_Touch_Canceled) == 0x000008, "Wrong alignment on UTCJoystickComponent_C_On_Event_Touch_Canceled");
static_assert(sizeof(UTCJoystickComponent_C_On_Event_Touch_Canceled) == 0x000020, "Wrong size on UTCJoystickComponent_C_On_Event_Touch_Canceled");
static_assert(offsetof(UTCJoystickComponent_C_On_Event_Touch_Canceled, Location) == 0x000000, "Member 'UTCJoystickComponent_C_On_Event_Touch_Canceled::Location' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_On_Event_Touch_Canceled, FingerIndex) == 0x000018, "Member 'UTCJoystickComponent_C_On_Event_Touch_Canceled::FingerIndex' has a wrong offset!");

// Function UTCJoystickComponent.UTCJoystickComponent_C.On Axes Changed Event
// 0x0028 (0x0028 - 0x0000)
struct UTCJoystickComponent_C_On_Axes_Changed_Event final
{
public:
	double                                        XAxis;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        YAxis;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction_0;                                       // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCJoystickComponent_C_On_Axes_Changed_Event) == 0x000008, "Wrong alignment on UTCJoystickComponent_C_On_Axes_Changed_Event");
static_assert(sizeof(UTCJoystickComponent_C_On_Axes_Changed_Event) == 0x000028, "Wrong size on UTCJoystickComponent_C_On_Axes_Changed_Event");
static_assert(offsetof(UTCJoystickComponent_C_On_Axes_Changed_Event, XAxis) == 0x000000, "Member 'UTCJoystickComponent_C_On_Axes_Changed_Event::XAxis' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_On_Axes_Changed_Event, YAxis) == 0x000008, "Member 'UTCJoystickComponent_C_On_Axes_Changed_Event::YAxis' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_On_Axes_Changed_Event, Direction_0) == 0x000010, "Member 'UTCJoystickComponent_C_On_Axes_Changed_Event::Direction_0' has a wrong offset!");

// Function UTCJoystickComponent.UTCJoystickComponent_C.IsWidgetVisible
// 0x0004 (0x0004 - 0x0000)
struct UTCJoystickComponent_C_IsWidgetVisible final
{
public:
	bool                                          IsVisible;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCJoystickComponent_C_IsWidgetVisible) == 0x000001, "Wrong alignment on UTCJoystickComponent_C_IsWidgetVisible");
static_assert(sizeof(UTCJoystickComponent_C_IsWidgetVisible) == 0x000004, "Wrong size on UTCJoystickComponent_C_IsWidgetVisible");
static_assert(offsetof(UTCJoystickComponent_C_IsWidgetVisible, IsVisible) == 0x000000, "Member 'UTCJoystickComponent_C_IsWidgetVisible::IsVisible' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_IsWidgetVisible, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'UTCJoystickComponent_C_IsWidgetVisible::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_IsWidgetVisible, CallFunc_IsVisible_ReturnValue) == 0x000002, "Member 'UTCJoystickComponent_C_IsWidgetVisible::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_IsWidgetVisible, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'UTCJoystickComponent_C_IsWidgetVisible::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function UTCJoystickComponent.UTCJoystickComponent_C.IsMagnitudeLowerThanMax
// 0x0018 (0x0018 - 0x0000)
struct UTCJoystickComponent_C_IsMagnitudeLowerThanMax final
{
public:
	bool                                          IsLowerThanMax;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCJoystickComponent_C_IsMagnitudeLowerThanMax) == 0x000008, "Wrong alignment on UTCJoystickComponent_C_IsMagnitudeLowerThanMax");
static_assert(sizeof(UTCJoystickComponent_C_IsMagnitudeLowerThanMax) == 0x000018, "Wrong size on UTCJoystickComponent_C_IsMagnitudeLowerThanMax");
static_assert(offsetof(UTCJoystickComponent_C_IsMagnitudeLowerThanMax, IsLowerThanMax) == 0x000000, "Member 'UTCJoystickComponent_C_IsMagnitudeLowerThanMax::IsLowerThanMax' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_IsMagnitudeLowerThanMax, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'UTCJoystickComponent_C_IsMagnitudeLowerThanMax::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_IsMagnitudeLowerThanMax, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000010, "Member 'UTCJoystickComponent_C_IsMagnitudeLowerThanMax::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_IsMagnitudeLowerThanMax, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000011, "Member 'UTCJoystickComponent_C_IsMagnitudeLowerThanMax::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_IsMagnitudeLowerThanMax, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000012, "Member 'UTCJoystickComponent_C_IsMagnitudeLowerThanMax::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_IsMagnitudeLowerThanMax, CallFunc_BooleanAND_ReturnValue) == 0x000013, "Member 'UTCJoystickComponent_C_IsMagnitudeLowerThanMax::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_IsMagnitudeLowerThanMax, CallFunc_BooleanOR_ReturnValue) == 0x000014, "Member 'UTCJoystickComponent_C_IsMagnitudeLowerThanMax::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function UTCJoystickComponent.UTCJoystickComponent_C.InitializeDebugWidget
// 0x0028 (0x0028 - 0x0000)
struct UTCJoystickComponent_C_InitializeDebugWidget final
{
public:
	class UUTCJoystickDebugWidget_C*              CallFunc_Create_ReturnValue;                       // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue_1;      // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCJoystickComponent_C_InitializeDebugWidget) == 0x000008, "Wrong alignment on UTCJoystickComponent_C_InitializeDebugWidget");
static_assert(sizeof(UTCJoystickComponent_C_InitializeDebugWidget) == 0x000028, "Wrong size on UTCJoystickComponent_C_InitializeDebugWidget");
static_assert(offsetof(UTCJoystickComponent_C_InitializeDebugWidget, CallFunc_Create_ReturnValue) == 0x000000, "Member 'UTCJoystickComponent_C_InitializeDebugWidget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_InitializeDebugWidget, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000008, "Member 'UTCJoystickComponent_C_InitializeDebugWidget::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_InitializeDebugWidget, CallFunc_Conv_VectorToVector2D_ReturnValue_1) == 0x000018, "Member 'UTCJoystickComponent_C_InitializeDebugWidget::CallFunc_Conv_VectorToVector2D_ReturnValue_1' has a wrong offset!");

// Function UTCJoystickComponent.UTCJoystickComponent_C.GetEdgeGapModifiedLocation
// 0x00A8 (0x00A8 - 0x0000)
struct UTCJoystickComponent_C_GetEdgeGapModifiedLocation final
{
public:
	struct FVector                                PressLocation;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ModifiedLocation;                                  // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCJoystickComponent_C_GetEdgeGapModifiedLocation) == 0x000008, "Wrong alignment on UTCJoystickComponent_C_GetEdgeGapModifiedLocation");
static_assert(sizeof(UTCJoystickComponent_C_GetEdgeGapModifiedLocation) == 0x0000A8, "Wrong size on UTCJoystickComponent_C_GetEdgeGapModifiedLocation");
static_assert(offsetof(UTCJoystickComponent_C_GetEdgeGapModifiedLocation, PressLocation) == 0x000000, "Member 'UTCJoystickComponent_C_GetEdgeGapModifiedLocation::PressLocation' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_GetEdgeGapModifiedLocation, ModifiedLocation) == 0x000018, "Member 'UTCJoystickComponent_C_GetEdgeGapModifiedLocation::ModifiedLocation' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_GetEdgeGapModifiedLocation, CallFunc_GetViewportSize_ReturnValue) == 0x000030, "Member 'UTCJoystickComponent_C_GetEdgeGapModifiedLocation::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_GetEdgeGapModifiedLocation, CallFunc_BreakVector_X) == 0x000040, "Member 'UTCJoystickComponent_C_GetEdgeGapModifiedLocation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_GetEdgeGapModifiedLocation, CallFunc_BreakVector_Y) == 0x000048, "Member 'UTCJoystickComponent_C_GetEdgeGapModifiedLocation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_GetEdgeGapModifiedLocation, CallFunc_BreakVector_Z) == 0x000050, "Member 'UTCJoystickComponent_C_GetEdgeGapModifiedLocation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_GetEdgeGapModifiedLocation, CallFunc_BreakVector2D_X) == 0x000058, "Member 'UTCJoystickComponent_C_GetEdgeGapModifiedLocation::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_GetEdgeGapModifiedLocation, CallFunc_BreakVector2D_Y) == 0x000060, "Member 'UTCJoystickComponent_C_GetEdgeGapModifiedLocation::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_GetEdgeGapModifiedLocation, CallFunc_BreakVector2D_X_1) == 0x000068, "Member 'UTCJoystickComponent_C_GetEdgeGapModifiedLocation::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_GetEdgeGapModifiedLocation, CallFunc_BreakVector2D_Y_1) == 0x000070, "Member 'UTCJoystickComponent_C_GetEdgeGapModifiedLocation::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_GetEdgeGapModifiedLocation, CallFunc_FMax_ReturnValue) == 0x000078, "Member 'UTCJoystickComponent_C_GetEdgeGapModifiedLocation::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_GetEdgeGapModifiedLocation, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000080, "Member 'UTCJoystickComponent_C_GetEdgeGapModifiedLocation::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_GetEdgeGapModifiedLocation, CallFunc_FMin_ReturnValue) == 0x000088, "Member 'UTCJoystickComponent_C_GetEdgeGapModifiedLocation::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_GetEdgeGapModifiedLocation, CallFunc_MakeVector_ReturnValue) == 0x000090, "Member 'UTCJoystickComponent_C_GetEdgeGapModifiedLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function UTCJoystickComponent.UTCJoystickComponent_C.Get Joystick Widget Instance
// 0x0008 (0x0008 - 0x0000)
struct UTCJoystickComponent_C_Get_Joystick_Widget_Instance final
{
public:
	class UUserWidget*                            Joystick_Widget_Instance;                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCJoystickComponent_C_Get_Joystick_Widget_Instance) == 0x000008, "Wrong alignment on UTCJoystickComponent_C_Get_Joystick_Widget_Instance");
static_assert(sizeof(UTCJoystickComponent_C_Get_Joystick_Widget_Instance) == 0x000008, "Wrong size on UTCJoystickComponent_C_Get_Joystick_Widget_Instance");
static_assert(offsetof(UTCJoystickComponent_C_Get_Joystick_Widget_Instance, Joystick_Widget_Instance) == 0x000000, "Member 'UTCJoystickComponent_C_Get_Joystick_Widget_Instance::Joystick_Widget_Instance' has a wrong offset!");

// Function UTCJoystickComponent.UTCJoystickComponent_C.ExecuteUbergraph_UTCJoystickComponent
// 0x0500 (0x0500 - 0x0000)
struct UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FVector& Location)> K2Node_CreateDelegate_OutputDelegate;            // 0x0038(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FVector& Location)> K2Node_CreateDelegate_OutputDelegate_1;          // 0x0094(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Update_Floating_JoystickLocation;         // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Update_Floating_PickerLocation;           // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_1;      // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F3[0x5];                                       // 0x00F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Update_Axis_Vector_Axis;                  // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FVector& Location)> K2Node_CreateDelegate_OutputDelegate_2;          // 0x0118(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location_3;                     // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location_2;                     // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location_1;                     // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Value_1;                        // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Value;                          // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_XAxis;                          // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_YAxis;                          // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Direction;                      // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIUTCWidget_C>         K2Node_DynamicCast_AsIUTCWidget;                   // 0x0208(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIUTCWidget_C>         K2Node_DynamicCast_AsIUTCWidget_1;                 // 0x0220(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIUTCWidget_C>         K2Node_DynamicCast_AsIUTCWidget_2;                 // 0x0238(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIUTCWidget_C>         K2Node_DynamicCast_AsIUTCWidget_3;                 // 0x0250(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIUTCWidget_C>         K2Node_DynamicCast_AsIUTCWidget_4;                 // 0x0268(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIUTCWidget_C>         K2Node_DynamicCast_AsIUTCWidget_5;                 // 0x0280(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIUTCWidget_C>         K2Node_DynamicCast_AsIUTCWidget_6;                 // 0x0298(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIUTCWidget_C>         K2Node_DynamicCast_AsIUTCWidget_7;                 // 0x02B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x3];                                      // 0x02C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FVector& Location)> K2Node_CreateDelegate_OutputDelegate_3;          // 0x02C4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_CustomEvent_Widget__with_IUTCWIdget_Interface_; // 0x02E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Use_Widget_Size__back_texture_size_; // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Hide_if_pawn_Unpossessed;       // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F2[0x6];                                      // 0x02F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            K2Node_CustomEvent_JoystickWgt;                    // 0x02F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateWidgetSize_Is_Initialized;          // 0x0301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0302(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0303(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_304[0x4];                                      // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_Location_3;                           // 0x0308(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETouchIndex                                   K2Node_Event_FingerIndex_3;                        // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AjustLocation_res;                        // 0x0321(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_322[0x6];                                      // 0x0322(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_Location_2;                           // 0x0328(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETouchIndex                                   K2Node_Event_FingerIndex_2;                        // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341[0x7];                                      // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_Old_Controller;                       // 0x0348(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Location_1;                           // 0x0350(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETouchIndex                                   K2Node_Event_FingerIndex_1;                        // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0369(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x036A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x036B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Finger_Location_Exists_Result;         // 0x036C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x036D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36E[0x2];                                      // 0x036E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_CustomEvent_Previous_Size;                  // 0x0370(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_CustomEvent_Updated_Size;                   // 0x0380(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391[0x7];                                      // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue;        // 0x0398(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_1;               // 0x03B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEdgeGapModifiedLocation_ModifiedLocation; // 0x03C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_New_Controller;                       // 0x03E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x03E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x03F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F2[0x6];                                      // 0x03F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_Location;                             // 0x03F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETouchIndex                                   K2Node_Event_FingerIndex;                          // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0411(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0412(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0413(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0414(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0415(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0416(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0417(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FVector2D& Previous_Size, const struct FVector2D& Updated_Size)> K2Node_CreateDelegate_OutputDelegate_4; // 0x0418(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(double XAxis, double YAxis, const struct FVector& Direction)> K2Node_CreateDelegate_OutputDelegate_5; // 0x0428(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(double Value)>                 K2Node_CreateDelegate_OutputDelegate_6;            // 0x0438(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(double Value)>                 K2Node_CreateDelegate_OutputDelegate_7;            // 0x0448(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue_1;      // 0x0458(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0470(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Update_Floating_JoystickLocation_1;       // 0x0490(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Update_Floating_PickerLocation_1;         // 0x04A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x04C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C2[0x6];                                      // 0x04C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue_2;      // 0x04C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_2;               // 0x04E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGamePaused_ReturnValue;                 // 0x04F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGamePaused_ReturnValue_1;               // 0x04F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x04FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x04FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGamePaused_ReturnValue_2;               // 0x04FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent) == 0x000008, "Wrong alignment on UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent");
static_assert(sizeof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent) == 0x000500, "Wrong size on UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, EntryPoint) == 0x000000, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000004, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_BreakVector_X) == 0x000008, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_BreakVector_Y) == 0x000010, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_BreakVector_Z) == 0x000018, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_BreakVector_X_1) == 0x000020, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_BreakVector_Y_1) == 0x000028, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_BreakVector_Z_1) == 0x000030, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000038, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_MakeVector_ReturnValue) == 0x000048, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_MakeVector_ReturnValue_1) == 0x000060, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_SelectVector_ReturnValue) == 0x000078, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000090, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_BooleanAND_ReturnValue) == 0x000091, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_CreateDelegate_OutputDelegate_1) == 0x000094, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_Not_PreBool_ReturnValue) == 0x0000A4, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_Update_Floating_JoystickLocation) == 0x0000A8, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_Update_Floating_JoystickLocation' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_Update_Floating_PickerLocation) == 0x0000C0, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_Update_Floating_PickerLocation' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_Event_DeltaSeconds) == 0x0000D8, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_BreakVector2D_X) == 0x0000E0, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_BreakVector2D_Y) == 0x0000E8, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x0000F0, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_NotEqual_DoubleDouble_ReturnValue_1) == 0x0000F1, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_NotEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_BooleanOR_ReturnValue) == 0x0000F2, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_Update_Axis_Vector_Axis) == 0x0000F8, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_Update_Axis_Vector_Axis' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_BreakVector2D_X_1) == 0x000108, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_BreakVector2D_Y_1) == 0x000110, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_CreateDelegate_OutputDelegate_2) == 0x000118, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_CustomEvent_Location_3) == 0x000128, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_CustomEvent_Location_3' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_CustomEvent_Location_2) == 0x000140, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_CustomEvent_Location_2' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_CustomEvent_Location_1) == 0x000158, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_CustomEvent_Location_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_CustomEvent_Location) == 0x000170, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_CustomEvent_Value_1) == 0x000188, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_CustomEvent_Value_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_CustomEvent_Value) == 0x000190, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_MakeVector_ReturnValue_2) == 0x000198, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_MakeVector_ReturnValue_3) == 0x0001B0, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_CustomEvent_XAxis) == 0x0001C8, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_CustomEvent_XAxis' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_CustomEvent_YAxis) == 0x0001D0, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_CustomEvent_YAxis' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_CustomEvent_Direction) == 0x0001D8, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_CustomEvent_Direction' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_MakeVector_ReturnValue_4) == 0x0001F0, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_DynamicCast_AsIUTCWidget) == 0x000208, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_DynamicCast_AsIUTCWidget' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_DynamicCast_bSuccess) == 0x000218, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_DynamicCast_AsIUTCWidget_1) == 0x000220, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_DynamicCast_AsIUTCWidget_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_DynamicCast_bSuccess_1) == 0x000230, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_DynamicCast_AsIUTCWidget_2) == 0x000238, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_DynamicCast_AsIUTCWidget_2' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_DynamicCast_bSuccess_2) == 0x000248, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_DynamicCast_AsIUTCWidget_3) == 0x000250, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_DynamicCast_AsIUTCWidget_3' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_DynamicCast_bSuccess_3) == 0x000260, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_DynamicCast_AsIUTCWidget_4) == 0x000268, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_DynamicCast_AsIUTCWidget_4' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_DynamicCast_bSuccess_4) == 0x000278, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_DynamicCast_AsIUTCWidget_5) == 0x000280, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_DynamicCast_AsIUTCWidget_5' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_DynamicCast_bSuccess_5) == 0x000290, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_DynamicCast_AsIUTCWidget_6) == 0x000298, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_DynamicCast_AsIUTCWidget_6' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_DynamicCast_bSuccess_6) == 0x0002A8, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_DynamicCast_AsIUTCWidget_7) == 0x0002B0, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_DynamicCast_AsIUTCWidget_7' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_DynamicCast_bSuccess_7) == 0x0002C0, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_CreateDelegate_OutputDelegate_3) == 0x0002C4, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_BreakVector2D_X_2) == 0x0002D8, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_BreakVector2D_Y_2) == 0x0002E0, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_CustomEvent_Widget__with_IUTCWIdget_Interface_) == 0x0002E8, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_CustomEvent_Widget__with_IUTCWIdget_Interface_' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_CustomEvent_Use_Widget_Size__back_texture_size_) == 0x0002F0, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_CustomEvent_Use_Widget_Size__back_texture_size_' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_CustomEvent_Hide_if_pawn_Unpossessed) == 0x0002F1, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_CustomEvent_Hide_if_pawn_Unpossessed' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_CustomEvent_JoystickWgt) == 0x0002F8, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_CustomEvent_JoystickWgt' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_Not_PreBool_ReturnValue_1) == 0x000300, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_UpdateWidgetSize_Is_Initialized) == 0x000301, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_UpdateWidgetSize_Is_Initialized' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_IsValid_ReturnValue) == 0x000302, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_IsValid_ReturnValue_1) == 0x000303, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_Event_Location_3) == 0x000308, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_Event_Location_3' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_Event_FingerIndex_3) == 0x000320, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_Event_FingerIndex_3' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_AjustLocation_res) == 0x000321, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_AjustLocation_res' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_Event_Location_2) == 0x000328, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_Event_Location_2' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_Event_FingerIndex_2) == 0x000340, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_Event_FingerIndex_2' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_Event_Old_Controller) == 0x000348, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_Event_Old_Controller' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_Event_Location_1) == 0x000350, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_Event_Location_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_Event_FingerIndex_1) == 0x000368, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_Event_FingerIndex_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, Temp_bool_Has_Been_Initd_Variable) == 0x000369, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00036A, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_BooleanAND_ReturnValue_1) == 0x00036B, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_Is_Finger_Location_Exists_Result) == 0x00036C, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_Is_Finger_Location_Exists_Result' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00036D, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_CustomEvent_Previous_Size) == 0x000370, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_CustomEvent_Previous_Size' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_CustomEvent_Updated_Size) == 0x000380, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_CustomEvent_Updated_Size' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_BooleanAND_ReturnValue_2) == 0x000390, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_Conv_Vector2DToVector_ReturnValue) == 0x000398, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_Conv_Vector2DToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_SelectVector_ReturnValue_1) == 0x0003B0, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_SelectVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_GetEdgeGapModifiedLocation_ModifiedLocation) == 0x0003C8, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_GetEdgeGapModifiedLocation_ModifiedLocation' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_Event_New_Controller) == 0x0003E0, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_Event_New_Controller' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_DynamicCast_AsPlayer_Controller) == 0x0003E8, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_DynamicCast_bSuccess_8) == 0x0003F0, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, Temp_bool_IsClosed_Variable) == 0x0003F1, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_Event_Location) == 0x0003F8, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_Event_Location' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_Event_FingerIndex) == 0x000410, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_Event_FingerIndex' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000411, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_Not_PreBool_ReturnValue_2) == 0x000412, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_BooleanAND_ReturnValue_3) == 0x000413, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_BooleanAND_ReturnValue_4) == 0x000414, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000415, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_Not_PreBool_ReturnValue_3) == 0x000416, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_BooleanAND_ReturnValue_5) == 0x000417, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_CreateDelegate_OutputDelegate_4) == 0x000418, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_CreateDelegate_OutputDelegate_5) == 0x000428, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_CreateDelegate_OutputDelegate_6) == 0x000438, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, K2Node_CreateDelegate_OutputDelegate_7) == 0x000448, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_Conv_Vector2DToVector_ReturnValue_1) == 0x000458, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_Conv_Vector2DToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000470, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_VSize_ReturnValue) == 0x000488, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_Update_Floating_JoystickLocation_1) == 0x000490, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_Update_Floating_JoystickLocation_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_Update_Floating_PickerLocation_1) == 0x0004A8, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_Update_Floating_PickerLocation_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0004C0, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_Not_PreBool_ReturnValue_4) == 0x0004C1, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_Conv_Vector2DToVector_ReturnValue_2) == 0x0004C8, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_Conv_Vector2DToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_SelectVector_ReturnValue_2) == 0x0004E0, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_SelectVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_IsGamePaused_ReturnValue) == 0x0004F8, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_IsGamePaused_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_IsGamePaused_ReturnValue_1) == 0x0004F9, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_IsGamePaused_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_Not_PreBool_ReturnValue_5) == 0x0004FA, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_BooleanAND_ReturnValue_6) == 0x0004FB, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent, CallFunc_IsGamePaused_ReturnValue_2) == 0x0004FC, "Member 'UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent::CallFunc_IsGamePaused_ReturnValue_2' has a wrong offset!");

// Function UTCJoystickComponent.UTCJoystickComponent_C.CheckJoystickMode
// 0x0001 (0x0001 - 0x0000)
struct UTCJoystickComponent_C_CheckJoystickMode final
{
public:
	bool                                          CurrentJoystickMode;                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCJoystickComponent_C_CheckJoystickMode) == 0x000001, "Wrong alignment on UTCJoystickComponent_C_CheckJoystickMode");
static_assert(sizeof(UTCJoystickComponent_C_CheckJoystickMode) == 0x000001, "Wrong size on UTCJoystickComponent_C_CheckJoystickMode");
static_assert(offsetof(UTCJoystickComponent_C_CheckJoystickMode, CurrentJoystickMode) == 0x000000, "Member 'UTCJoystickComponent_C_CheckJoystickMode::CurrentJoystickMode' has a wrong offset!");

// Function UTCJoystickComponent.UTCJoystickComponent_C.AjustLocation
// 0x0080 (0x0080 - 0x0000)
struct UTCJoystickComponent_C_AjustLocation final
{
public:
	struct FVector                                Pos;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          res;                                               // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCJoystickComponent_C_AjustLocation) == 0x000008, "Wrong alignment on UTCJoystickComponent_C_AjustLocation");
static_assert(sizeof(UTCJoystickComponent_C_AjustLocation) == 0x000080, "Wrong size on UTCJoystickComponent_C_AjustLocation");
static_assert(offsetof(UTCJoystickComponent_C_AjustLocation, Pos) == 0x000000, "Member 'UTCJoystickComponent_C_AjustLocation::Pos' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_AjustLocation, res) == 0x000018, "Member 'UTCJoystickComponent_C_AjustLocation::res' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_AjustLocation, CallFunc_BreakVector_X) == 0x000020, "Member 'UTCJoystickComponent_C_AjustLocation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_AjustLocation, CallFunc_BreakVector_Y) == 0x000028, "Member 'UTCJoystickComponent_C_AjustLocation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_AjustLocation, CallFunc_BreakVector_Z) == 0x000030, "Member 'UTCJoystickComponent_C_AjustLocation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_AjustLocation, CallFunc_GetViewportSize_ReturnValue) == 0x000038, "Member 'UTCJoystickComponent_C_AjustLocation::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_AjustLocation, CallFunc_BreakVector2D_X) == 0x000048, "Member 'UTCJoystickComponent_C_AjustLocation::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_AjustLocation, CallFunc_BreakVector2D_Y) == 0x000050, "Member 'UTCJoystickComponent_C_AjustLocation::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_AjustLocation, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000058, "Member 'UTCJoystickComponent_C_AjustLocation::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_AjustLocation, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000060, "Member 'UTCJoystickComponent_C_AjustLocation::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_AjustLocation, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000068, "Member 'UTCJoystickComponent_C_AjustLocation::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_AjustLocation, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000070, "Member 'UTCJoystickComponent_C_AjustLocation::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_AjustLocation, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x000078, "Member 'UTCJoystickComponent_C_AjustLocation::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_AjustLocation, CallFunc_BooleanAND_ReturnValue) == 0x000079, "Member 'UTCJoystickComponent_C_AjustLocation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function UTCJoystickComponent.UTCJoystickComponent_C.AddEventInput
// 0x0050 (0x0050 - 0x0000)
struct UTCJoystickComponent_C_AddEventInput final
{
public:
	class FName                                   PropertyName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Value;                                             // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAccumulate;                                      // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UX6EnhancedInputLocalPlayerSubsystem*   CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IX6EnhancedInputSubsystemInterface> CallFunc_AddEventInput_self_CastInput; // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCJoystickComponent_C_AddEventInput) == 0x000008, "Wrong alignment on UTCJoystickComponent_C_AddEventInput");
static_assert(sizeof(UTCJoystickComponent_C_AddEventInput) == 0x000050, "Wrong size on UTCJoystickComponent_C_AddEventInput");
static_assert(offsetof(UTCJoystickComponent_C_AddEventInput, PropertyName) == 0x000000, "Member 'UTCJoystickComponent_C_AddEventInput::PropertyName' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_AddEventInput, Value) == 0x000008, "Member 'UTCJoystickComponent_C_AddEventInput::Value' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_AddEventInput, IsAccumulate) == 0x000020, "Member 'UTCJoystickComponent_C_AddEventInput::IsAccumulate' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_AddEventInput, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'UTCJoystickComponent_C_AddEventInput::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_AddEventInput, CallFunc_GetPlayerController_ReturnValue) == 0x000030, "Member 'UTCJoystickComponent_C_AddEventInput::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_AddEventInput, CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue) == 0x000038, "Member 'UTCJoystickComponent_C_AddEventInput::CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCJoystickComponent_C_AddEventInput, CallFunc_AddEventInput_self_CastInput) == 0x000040, "Member 'UTCJoystickComponent_C_AddEventInput::CallFunc_AddEventInput_self_CastInput' has a wrong offset!");

// Function UTCJoystickComponent.UTCJoystickComponent_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct UTCJoystickComponent_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(UTCJoystickComponent_C_GetModuleName) == 0x000008, "Wrong alignment on UTCJoystickComponent_C_GetModuleName");
static_assert(sizeof(UTCJoystickComponent_C_GetModuleName) == 0x000010, "Wrong size on UTCJoystickComponent_C_GetModuleName");
static_assert(offsetof(UTCJoystickComponent_C_GetModuleName, ReturnValue) == 0x000000, "Member 'UTCJoystickComponent_C_GetModuleName::ReturnValue' has a wrong offset!");

}

