#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HttpDownloader

#include "Basic.hpp"


namespace SDK
{

// Enum HttpDownloader.EDownloadTaskInfoStatus
// NumValues: 0x0003
enum class EDownloadTaskInfoStatus : uint8
{
	TaskStatusDownloading                    = 1,
	TaskStatusDownloaded                     = 2,
	EDownloadTaskInfoStatus_MAX              = 3,
};

// ScriptStruct HttpDownloader.SimpleHttpDownloadTaskInfo
// 0x00D8 (0x00D8 - 0x0000)
struct FSimpleHttpDownloadTaskInfo final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LocalTmpFileURL;                                   // 0x0010(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Size;                                              // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReTryCount;                                        // 0x0024(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 Hash;                                              // 0x0028(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                         AdditionalParams;                                  // 0x0038(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                 HttpVerbMethod;                                    // 0x0048(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 HttpRequestPayLoadAsString;                        // 0x0058(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 HttpRequestPayLoadAsFileName;                      // 0x0068(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>            HttpHeader;                                        // 0x0078(0x0050)(Edit, NativeAccessSpecifierPublic)
	int32                                         rangeStart;                                        // 0x00C8(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         rangeEnd;                                          // 0x00CC(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceUseStreamMode;                               // 0x00D0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FSimpleHttpDownloadTaskInfo) == 0x000008, "Wrong alignment on FSimpleHttpDownloadTaskInfo");
static_assert(sizeof(FSimpleHttpDownloadTaskInfo) == 0x0000D8, "Wrong size on FSimpleHttpDownloadTaskInfo");
static_assert(offsetof(FSimpleHttpDownloadTaskInfo, URL) == 0x000000, "Member 'FSimpleHttpDownloadTaskInfo::URL' has a wrong offset!");
static_assert(offsetof(FSimpleHttpDownloadTaskInfo, LocalTmpFileURL) == 0x000010, "Member 'FSimpleHttpDownloadTaskInfo::LocalTmpFileURL' has a wrong offset!");
static_assert(offsetof(FSimpleHttpDownloadTaskInfo, Size) == 0x000020, "Member 'FSimpleHttpDownloadTaskInfo::Size' has a wrong offset!");
static_assert(offsetof(FSimpleHttpDownloadTaskInfo, ReTryCount) == 0x000024, "Member 'FSimpleHttpDownloadTaskInfo::ReTryCount' has a wrong offset!");
static_assert(offsetof(FSimpleHttpDownloadTaskInfo, Hash) == 0x000028, "Member 'FSimpleHttpDownloadTaskInfo::Hash' has a wrong offset!");
static_assert(offsetof(FSimpleHttpDownloadTaskInfo, AdditionalParams) == 0x000038, "Member 'FSimpleHttpDownloadTaskInfo::AdditionalParams' has a wrong offset!");
static_assert(offsetof(FSimpleHttpDownloadTaskInfo, HttpVerbMethod) == 0x000048, "Member 'FSimpleHttpDownloadTaskInfo::HttpVerbMethod' has a wrong offset!");
static_assert(offsetof(FSimpleHttpDownloadTaskInfo, HttpRequestPayLoadAsString) == 0x000058, "Member 'FSimpleHttpDownloadTaskInfo::HttpRequestPayLoadAsString' has a wrong offset!");
static_assert(offsetof(FSimpleHttpDownloadTaskInfo, HttpRequestPayLoadAsFileName) == 0x000068, "Member 'FSimpleHttpDownloadTaskInfo::HttpRequestPayLoadAsFileName' has a wrong offset!");
static_assert(offsetof(FSimpleHttpDownloadTaskInfo, HttpHeader) == 0x000078, "Member 'FSimpleHttpDownloadTaskInfo::HttpHeader' has a wrong offset!");
static_assert(offsetof(FSimpleHttpDownloadTaskInfo, rangeStart) == 0x0000C8, "Member 'FSimpleHttpDownloadTaskInfo::rangeStart' has a wrong offset!");
static_assert(offsetof(FSimpleHttpDownloadTaskInfo, rangeEnd) == 0x0000CC, "Member 'FSimpleHttpDownloadTaskInfo::rangeEnd' has a wrong offset!");
static_assert(offsetof(FSimpleHttpDownloadTaskInfo, bForceUseStreamMode) == 0x0000D0, "Member 'FSimpleHttpDownloadTaskInfo::bForceUseStreamMode' has a wrong offset!");

}

