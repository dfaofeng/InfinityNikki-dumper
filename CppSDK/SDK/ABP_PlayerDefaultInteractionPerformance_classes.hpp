#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_PlayerDefaultInteractionPerformance

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "ABP_PlayerDefaultInteractionPerformance_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "SMSystem_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_PlayerDefaultInteractionPerformance.ABP_PlayerDefaultInteractionPerformance_C
// 0x1800 (0x1BD0 - 0x03D0)
class UABP_PlayerDefaultInteractionPerformance_C : public UAnimInstance
{
public:
	uint8                                         Pad_3C8[0x8];                                      // 0x03C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_PlayerDefaultInteractionPerformance::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables; // 0x03D8(0x0028)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0400(0x0008)()
	struct FAnimSubsystemInstance_NodeRelevancy   AnimBlueprintExtension_NodeRelevancy;              // 0x0408(0x00A8)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x04B0(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root_5;                              // 0x04B8(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_4;                   // 0x04D8(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_4;                              // 0x0590(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_3;                   // 0x05B0(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_3;                              // 0x0668(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_2;                   // 0x0688(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_2;                              // 0x0740(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_1;                   // 0x0760(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x0818(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x0838(0x00B8)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x08F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0918(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0940(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0968(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_5;                   // 0x09B0(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_9;                     // 0x09F8(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_3;                  // 0x0A20(0x00F0)()
	struct FAnimNode_Mirror                       AnimGraphNode_Mirror_2;                            // 0x0B10(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0B58(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0BA0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0BC0(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_4;                   // 0x0C08(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_8;                     // 0x0C50(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_2;                  // 0x0C78(0x00F0)()
	struct FAnimNode_Mirror                       AnimGraphNode_Mirror_1;                            // 0x0D68(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0DB0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0DF8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0E18(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0x0E60(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7;                     // 0x0EA8(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x0ED0(0x00F0)()
	struct FAnimNode_Mirror                       AnimGraphNode_Mirror;                              // 0x0FC0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x1008(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x1050(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x1070(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1098(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x10B8(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_3;                    // 0x1180(0x0080)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x1200(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x1280(0x0048)()
	struct FAnimNode_PoseSnapshot                 AnimGraphNode_PoseSnapshot;                        // 0x12C8(0x0090)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x1358(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x13A0(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x13E8(0x0080)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x1468(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x14B0(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x14D8(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x1520(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x1548(0x00F0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x1638(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x1660(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x1688(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x16D0(0x0080)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_1;                 // 0x1750(0x0040)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x1790(0x0040)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x17D0(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x17F8(0x00C8)()
	struct FAnimNode_MakeDynamicAdditive          AnimGraphNode_MakeDynamicAdditive;                 // 0x18C0(0x0038)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x18F8(0x0028)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x1920(0x0020)()
	class UAnimSequenceBase*                      TransitionAnim;                                    // 0x1940(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         ActiveCacheIndex;                                  // 0x1948(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LastActiveCacheIndex;                              // 0x194C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bStanceChange;                                     // 0x1950(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAnimTransiotion;                                  // 0x1951(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1952[0x6];                                     // 0x1952(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerAnimStatesComponent_C*        PlayerAnimStatesComponent;                         // 0x1958(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ActivePerformanceStanceTag;                        // 0x1960(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FSMBlendSetting                        TransitionConfig;                                  // 0x1968(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	bool                                          bLeftInteractionPerformance;                       // 0x1988(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bMirror;                                           // 0x1989(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_198A[0x6];                                     // 0x198A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      GestureAnim;                                       // 0x1990(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      ActiveStanceCache1;                                // 0x1998(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      ActiveStanceCache2;                                // 0x19A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bFullBodyGesture;                                  // 0x19A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnableGesture;                                    // 0x19A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFreezePose;                                       // 0x19AA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19AB[0x5];                                     // 0x19AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SlotName_RootM;                                    // 0x19B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	double                                        RootM_Alpha;                                       // 0x19C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C8[0x8];                                     // 0x19C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RootMCompTransform;                                // 0x19D0(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SKMeshComponent;                                   // 0x1A30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 SlotName_AnkleLeft;                                // 0x1A38(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	uint8                                         Pad_1A48[0x8];                                     // 0x1A48(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             AnkleLeftCompTransform;                            // 0x1A50(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 SlotName_AnkleRight;                               // 0x1AB0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	struct FTransform                             AnkleRightCompTransform;                           // 0x1AC0(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CurveName_AdjustSittingPostureIK_Alpha;            // 0x1B20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AdjustSittingPostureIK_Alpha;                      // 0x1B28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CurveName_AdjustSittingPosture_WristLeftHeight_Alpha; // 0x1B30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CurveName_AdjustSittingPosture_WristRightHeight_Alpha; // 0x1B38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Clothes_Thickness_RootM;                           // 0x1B40(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Clothes_Thickness_WristL;                          // 0x1B58(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Clothes_Thickness_WristR;                          // 0x1B70(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CacheStanceNameArray;                              // 0x1B88(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bFullBodyStance;                                   // 0x1B98(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B99[0x7];                                     // 0x1B99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DesiredStancePercent;                              // 0x1BA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        StancePlayRate;                                    // 0x1BA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurStanceAccumulatedTime;                          // 0x1BB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerFeedBackPerformanceComponent_C* PlayerFeedbackComponent;                         // 0x1BB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bExpectedAdditiveGesture;                          // 0x1BC0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bNeedClearStanceSMTransitions;                     // 0x1BC1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void AnimLayer_AttractorBehavior(const struct FPoseLink& InPose_AttractorBehavior, struct FPoseLink* AnimLayer_AttractorBehavior_0);
	void AnimLayer_CustomBehavior(const struct FPoseLink& InPose, struct FPoseLink* AnimLayer_CustomBehavior_0);
	void AnimLayer_DialogueBehavior(const struct FPoseLink& InPose_DIalogueBehavior, struct FPoseLink* AnimLayer_DialogueBehavior_0);
	void AnimLayer_InteractionPerformanceBehavior(const struct FPoseLink& InPose_InterationPerformance, struct FPoseLink* AnimLayer_InteractionPerformanceBehavior_0);
	void AnimLayer_SituationFeedbackBehavior(const struct FPoseLink& InPose_SituationFeedback, struct FPoseLink* AnimLayer_SituationFeedbackBehavior_0);
	void BlueprintLinkedAnimationLayersInitialized();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void BP_FreePose();
	void BP_SnapPose();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PlayerDefaultInteractionPerformance_AnimGraphNode_TransitionResult_2D3FDAE441E44F45C08246BA2AD83731();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PlayerDefaultInteractionPerformance_AnimGraphNode_TransitionResult_382437D44DF086E7EA91CAB244EC422B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PlayerDefaultInteractionPerformance_AnimGraphNode_TransitionResult_5AD8A99D4572542DC588D5A00BC4B5F7();
	void ExecuteUbergraph_ABP_PlayerDefaultInteractionPerformance(int32 EntryPoint);
	void InitializeFeedbackComponent();
	void OnBecomeRelevant_OutputPose(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void OnBecomeRelevant_StanceSM(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void OnBecomeRelevant_StanceTransition(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void Update_Stance_State_Machine_Config();
	void Update_StanceSequencePlayer(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void Update_StateMachineTransition(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void UpdateAdjustSittingPostureState();
	void UpdateCacheIndex();
	void UpdateGestureStateMachineConfig();
	void UpdateStanceChange();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_PlayerDefaultInteractionPerformance_C">();
	}
	static class UABP_PlayerDefaultInteractionPerformance_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_PlayerDefaultInteractionPerformance_C>();
	}
};
static_assert(alignof(UABP_PlayerDefaultInteractionPerformance_C) == 0x000010, "Wrong alignment on UABP_PlayerDefaultInteractionPerformance_C");
static_assert(sizeof(UABP_PlayerDefaultInteractionPerformance_C) == 0x001BD0, "Wrong size on UABP_PlayerDefaultInteractionPerformance_C");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, UberGraphFrame) == 0x0003D0, "Member 'UABP_PlayerDefaultInteractionPerformance_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, __AnimBlueprintMutables) == 0x0003D8, "Member 'UABP_PlayerDefaultInteractionPerformance_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimBlueprintExtension_PropertyAccess) == 0x000400, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimBlueprintExtension_NodeRelevancy) == 0x000408, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimBlueprintExtension_NodeRelevancy' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimBlueprintExtension_Base) == 0x0004B0, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_Root_5) == 0x0004B8, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_Root_5' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_LinkedInputPose_4) == 0x0004D8, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_LinkedInputPose_4' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_Root_4) == 0x000590, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_Root_4' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_LinkedInputPose_3) == 0x0005B0, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_LinkedInputPose_3' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_Root_3) == 0x000668, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_Root_3' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_LinkedInputPose_2) == 0x000688, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_LinkedInputPose_2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_Root_2) == 0x000740, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_Root_2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_LinkedInputPose_1) == 0x000760, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_LinkedInputPose_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_Root_1) == 0x000818, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_LinkedInputPose) == 0x000838, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_TransitionResult_2) == 0x0008F0, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_TransitionResult_1) == 0x000918, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_TransitionResult) == 0x000940, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_SequencePlayer_5) == 0x000968, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_BlendListByBool_5) == 0x0009B0, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_BlendListByBool_5' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_UseCachedPose_9) == 0x0009F8, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_UseCachedPose_9' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_LayeredBoneBlend_3) == 0x000A20, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_LayeredBoneBlend_3' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_Mirror_2) == 0x000B10, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_Mirror_2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_SequencePlayer_4) == 0x000B58, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_StateResult_3) == 0x000BA0, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_SequencePlayer_3) == 0x000BC0, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_BlendListByBool_4) == 0x000C08, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_BlendListByBool_4' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_UseCachedPose_8) == 0x000C50, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_UseCachedPose_8' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_LayeredBoneBlend_2) == 0x000C78, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_LayeredBoneBlend_2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_Mirror_1) == 0x000D68, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_Mirror_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_SequencePlayer_2) == 0x000DB0, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_StateResult_2) == 0x000DF8, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_SequencePlayer_1) == 0x000E18, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_BlendListByBool_3) == 0x000E60, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_UseCachedPose_7) == 0x000EA8, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_UseCachedPose_7' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_LayeredBoneBlend_1) == 0x000ED0, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_Mirror) == 0x000FC0, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_Mirror' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_SequencePlayer) == 0x001008, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_StateResult_1) == 0x001050, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_UseCachedPose_6) == 0x001070, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_StateResult) == 0x001098, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_StateMachine) == 0x0010B8, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_SaveCachedPose_3) == 0x001180, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_SaveCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_SaveCachedPose_2) == 0x001200, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_BlendListByBool_2) == 0x001280, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_PoseSnapshot) == 0x0012C8, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_PoseSnapshot' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_Slot_2) == 0x001358, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_BlendListByBool_1) == 0x0013A0, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_SaveCachedPose_1) == 0x0013E8, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_Slot_1) == 0x001468, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_UseCachedPose_5) == 0x0014B0, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_BlendListByBool) == 0x0014D8, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_UseCachedPose_4) == 0x001520, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_LayeredBoneBlend) == 0x001548, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_UseCachedPose_3) == 0x001638, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_UseCachedPose_2) == 0x001660, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_Slot) == 0x001688, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_SaveCachedPose) == 0x0016D0, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_SequenceEvaluator_1) == 0x001750, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_SequenceEvaluator_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_SequenceEvaluator) == 0x001790, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_UseCachedPose_1) == 0x0017D0, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_ApplyAdditive) == 0x0017F8, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_MakeDynamicAdditive) == 0x0018C0, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_MakeDynamicAdditive' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_UseCachedPose) == 0x0018F8, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnimGraphNode_Root) == 0x001920, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, TransitionAnim) == 0x001940, "Member 'UABP_PlayerDefaultInteractionPerformance_C::TransitionAnim' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, ActiveCacheIndex) == 0x001948, "Member 'UABP_PlayerDefaultInteractionPerformance_C::ActiveCacheIndex' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, LastActiveCacheIndex) == 0x00194C, "Member 'UABP_PlayerDefaultInteractionPerformance_C::LastActiveCacheIndex' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, bStanceChange) == 0x001950, "Member 'UABP_PlayerDefaultInteractionPerformance_C::bStanceChange' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, bAnimTransiotion) == 0x001951, "Member 'UABP_PlayerDefaultInteractionPerformance_C::bAnimTransiotion' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, PlayerAnimStatesComponent) == 0x001958, "Member 'UABP_PlayerDefaultInteractionPerformance_C::PlayerAnimStatesComponent' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, ActivePerformanceStanceTag) == 0x001960, "Member 'UABP_PlayerDefaultInteractionPerformance_C::ActivePerformanceStanceTag' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, TransitionConfig) == 0x001968, "Member 'UABP_PlayerDefaultInteractionPerformance_C::TransitionConfig' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, bLeftInteractionPerformance) == 0x001988, "Member 'UABP_PlayerDefaultInteractionPerformance_C::bLeftInteractionPerformance' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, bMirror) == 0x001989, "Member 'UABP_PlayerDefaultInteractionPerformance_C::bMirror' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, GestureAnim) == 0x001990, "Member 'UABP_PlayerDefaultInteractionPerformance_C::GestureAnim' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, ActiveStanceCache1) == 0x001998, "Member 'UABP_PlayerDefaultInteractionPerformance_C::ActiveStanceCache1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, ActiveStanceCache2) == 0x0019A0, "Member 'UABP_PlayerDefaultInteractionPerformance_C::ActiveStanceCache2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, bFullBodyGesture) == 0x0019A8, "Member 'UABP_PlayerDefaultInteractionPerformance_C::bFullBodyGesture' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, bEnableGesture) == 0x0019A9, "Member 'UABP_PlayerDefaultInteractionPerformance_C::bEnableGesture' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, bFreezePose) == 0x0019AA, "Member 'UABP_PlayerDefaultInteractionPerformance_C::bFreezePose' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, SlotName_RootM) == 0x0019B0, "Member 'UABP_PlayerDefaultInteractionPerformance_C::SlotName_RootM' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, RootM_Alpha) == 0x0019C0, "Member 'UABP_PlayerDefaultInteractionPerformance_C::RootM_Alpha' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, RootMCompTransform) == 0x0019D0, "Member 'UABP_PlayerDefaultInteractionPerformance_C::RootMCompTransform' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, SKMeshComponent) == 0x001A30, "Member 'UABP_PlayerDefaultInteractionPerformance_C::SKMeshComponent' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, SlotName_AnkleLeft) == 0x001A38, "Member 'UABP_PlayerDefaultInteractionPerformance_C::SlotName_AnkleLeft' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnkleLeftCompTransform) == 0x001A50, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnkleLeftCompTransform' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, SlotName_AnkleRight) == 0x001AB0, "Member 'UABP_PlayerDefaultInteractionPerformance_C::SlotName_AnkleRight' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AnkleRightCompTransform) == 0x001AC0, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AnkleRightCompTransform' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, CurveName_AdjustSittingPostureIK_Alpha) == 0x001B20, "Member 'UABP_PlayerDefaultInteractionPerformance_C::CurveName_AdjustSittingPostureIK_Alpha' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, AdjustSittingPostureIK_Alpha) == 0x001B28, "Member 'UABP_PlayerDefaultInteractionPerformance_C::AdjustSittingPostureIK_Alpha' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, CurveName_AdjustSittingPosture_WristLeftHeight_Alpha) == 0x001B30, "Member 'UABP_PlayerDefaultInteractionPerformance_C::CurveName_AdjustSittingPosture_WristLeftHeight_Alpha' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, CurveName_AdjustSittingPosture_WristRightHeight_Alpha) == 0x001B38, "Member 'UABP_PlayerDefaultInteractionPerformance_C::CurveName_AdjustSittingPosture_WristRightHeight_Alpha' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, Clothes_Thickness_RootM) == 0x001B40, "Member 'UABP_PlayerDefaultInteractionPerformance_C::Clothes_Thickness_RootM' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, Clothes_Thickness_WristL) == 0x001B58, "Member 'UABP_PlayerDefaultInteractionPerformance_C::Clothes_Thickness_WristL' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, Clothes_Thickness_WristR) == 0x001B70, "Member 'UABP_PlayerDefaultInteractionPerformance_C::Clothes_Thickness_WristR' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, CacheStanceNameArray) == 0x001B88, "Member 'UABP_PlayerDefaultInteractionPerformance_C::CacheStanceNameArray' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, bFullBodyStance) == 0x001B98, "Member 'UABP_PlayerDefaultInteractionPerformance_C::bFullBodyStance' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, DesiredStancePercent) == 0x001BA0, "Member 'UABP_PlayerDefaultInteractionPerformance_C::DesiredStancePercent' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, StancePlayRate) == 0x001BA8, "Member 'UABP_PlayerDefaultInteractionPerformance_C::StancePlayRate' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, CurStanceAccumulatedTime) == 0x001BB0, "Member 'UABP_PlayerDefaultInteractionPerformance_C::CurStanceAccumulatedTime' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, PlayerFeedbackComponent) == 0x001BB8, "Member 'UABP_PlayerDefaultInteractionPerformance_C::PlayerFeedbackComponent' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, bExpectedAdditiveGesture) == 0x001BC0, "Member 'UABP_PlayerDefaultInteractionPerformance_C::bExpectedAdditiveGesture' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDefaultInteractionPerformance_C, bNeedClearStanceSMTransitions) == 0x001BC1, "Member 'UABP_PlayerDefaultInteractionPerformance_C::bNeedClearStanceSMTransitions' has a wrong offset!");

}

