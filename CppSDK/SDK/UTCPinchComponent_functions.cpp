#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UTCPinchComponent

#include "Basic.hpp"

#include "UTCPinchComponent_classes.hpp"
#include "UTCPinchComponent_parameters.hpp"


namespace SDK
{

// Function UTCPinchComponent.UTCPinchComponent_C.UpdateBanAreaSize
// (Public, BlueprintCallable, BlueprintEvent)

void UUTCPinchComponent_C::UpdateBanAreaSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCPinchComponent_C", "UpdateBanAreaSize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UTCPinchComponent.UTCPinchComponent_C.UpdateBanAreaInfo
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    BanAreaEnable                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   BanAreaLocation                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCPinchComponent_C::UpdateBanAreaInfo(bool BanAreaEnable, const struct FVector& BanAreaLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCPinchComponent_C", "UpdateBanAreaInfo");

	Params::UTCPinchComponent_C_UpdateBanAreaInfo Parms{};

	Parms.BanAreaEnable = BanAreaEnable;
	Parms.BanAreaLocation = std::move(BanAreaLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCPinchComponent.UTCPinchComponent_C.Update Debug Widget
// (Public, BlueprintCallable, BlueprintEvent)

void UUTCPinchComponent_C::Update_Debug_Widget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCPinchComponent_C", "Update Debug Widget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UTCPinchComponent.UTCPinchComponent_C.Uninitialize Debug Widget
// (Public, BlueprintCallable, BlueprintEvent)

void UUTCPinchComponent_C::Uninitialize_Debug_Widget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCPinchComponent_C", "Uninitialize Debug Widget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UTCPinchComponent.UTCPinchComponent_C.Remove Debug Touch Location
// (Public, BlueprintCallable, BlueprintEvent)

void UUTCPinchComponent_C::Remove_Debug_Touch_Location()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCPinchComponent_C", "Remove Debug Touch Location");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UTCPinchComponent.UTCPinchComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCPinchComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCPinchComponent_C", "ReceiveTick");

	Params::UTCPinchComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCPinchComponent.UTCPinchComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UUTCPinchComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCPinchComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UTCPinchComponent.UTCPinchComponent_C.OnJoystickReleased
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCPinchComponent_C::OnJoystickReleased(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCPinchComponent_C", "OnJoystickReleased");

	Params::UTCPinchComponent_C_OnJoystickReleased Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCPinchComponent.UTCPinchComponent_C.On Viewport Size Is Changed
// (Public, BlueprintCallable, BlueprintEvent)

void UUTCPinchComponent_C::On_Viewport_Size_Is_Changed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCPinchComponent_C", "On Viewport Size Is Changed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UTCPinchComponent.UTCPinchComponent_C.On Event Touch Released
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETouchIndex                             FingerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCPinchComponent_C::On_Event_Touch_Released(const struct FVector& Location, ETouchIndex FingerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCPinchComponent_C", "On Event Touch Released");

	Params::UTCPinchComponent_C_On_Event_Touch_Released Parms{};

	Parms.Location = std::move(Location);
	Parms.FingerIndex = FingerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCPinchComponent.UTCPinchComponent_C.On Event Touch Pressed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETouchIndex                             FingerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCPinchComponent_C::On_Event_Touch_Pressed(const struct FVector& Location, ETouchIndex FingerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCPinchComponent_C", "On Event Touch Pressed");

	Params::UTCPinchComponent_C_On_Event_Touch_Pressed Parms{};

	Parms.Location = std::move(Location);
	Parms.FingerIndex = FingerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCPinchComponent.UTCPinchComponent_C.On Event Touch Moved
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETouchIndex                             FingerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCPinchComponent_C::On_Event_Touch_Moved(const struct FVector& Location, ETouchIndex FingerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCPinchComponent_C", "On Event Touch Moved");

	Params::UTCPinchComponent_C_On_Event_Touch_Moved Parms{};

	Parms.Location = std::move(Location);
	Parms.FingerIndex = FingerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCPinchComponent.UTCPinchComponent_C.On Event Touch Canceled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETouchIndex                             FingerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCPinchComponent_C::On_Event_Touch_Canceled(const struct FVector& Location, ETouchIndex FingerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCPinchComponent_C", "On Event Touch Canceled");

	Params::UTCPinchComponent_C_On_Event_Touch_Canceled Parms{};

	Parms.Location = std::move(Location);
	Parms.FingerIndex = FingerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCPinchComponent.UTCPinchComponent_C.Initialize Debug Widget
// (Public, BlueprintCallable, BlueprintEvent)

void UUTCPinchComponent_C::Initialize_Debug_Widget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCPinchComponent_C", "Initialize Debug Widget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UTCPinchComponent.UTCPinchComponent_C.Get Length and Angle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double*                                 Length                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 Angle                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         Halfway_Vector                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCPinchComponent_C::Get_Length_and_Angle(double* Length, double* Angle, struct FVector* Halfway_Vector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCPinchComponent_C", "Get Length and Angle");

	Params::UTCPinchComponent_C_Get_Length_and_Angle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Length != nullptr)
		*Length = Parms.Length;

	if (Angle != nullptr)
		*Angle = Parms.Angle;

	if (Halfway_Vector != nullptr)
		*Halfway_Vector = std::move(Parms.Halfway_Vector);
}


// Function UTCPinchComponent.UTCPinchComponent_C.ExecuteUbergraph_UTCPinchComponent
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCPinchComponent_C::ExecuteUbergraph_UTCPinchComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCPinchComponent_C", "ExecuteUbergraph_UTCPinchComponent");

	Params::UTCPinchComponent_C_ExecuteUbergraph_UTCPinchComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCPinchComponent.UTCPinchComponent_C.CheckFingerLocationBan
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETouchIndex                             FingerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   FixedBan                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCPinchComponent_C::CheckFingerLocationBan(const struct FVector& Location, ETouchIndex FingerIndex, bool* FixedBan)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCPinchComponent_C", "CheckFingerLocationBan");

	Params::UTCPinchComponent_C_CheckFingerLocationBan Parms{};

	Parms.Location = std::move(Location);
	Parms.FingerIndex = FingerIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (FixedBan != nullptr)
		*FixedBan = Parms.FixedBan;
}


// Function UTCPinchComponent.UTCPinchComponent_C.Check Debug Touch Location
// (Public, BlueprintCallable, BlueprintEvent)

void UUTCPinchComponent_C::Check_Debug_Touch_Location()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCPinchComponent_C", "Check Debug Touch Location");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UTCPinchComponent.UTCPinchComponent_C.Add Debug Touch Location
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCPinchComponent_C::Add_Debug_Touch_Location(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCPinchComponent_C", "Add Debug Touch Location");

	Params::UTCPinchComponent_C_Add_Debug_Touch_Location Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}

}

