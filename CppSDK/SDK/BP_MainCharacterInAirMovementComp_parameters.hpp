#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MainCharacterInAirMovementComp

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_MainCharacterInAirMovementComp.BP_MainCharacterInAirMovementComp_C.BP_GetumpPromptLineProcessor
// 0x0008 (0x0008 - 0x0000)
struct BP_MainCharacterInAirMovementComp_C_BP_GetumpPromptLineProcessor final
{
public:
	class UBP_PlayerJumpPromptLineProcessor_C*    CurJumpPromptLineProcessor_0;                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterInAirMovementComp_C_BP_GetumpPromptLineProcessor) == 0x000008, "Wrong alignment on BP_MainCharacterInAirMovementComp_C_BP_GetumpPromptLineProcessor");
static_assert(sizeof(BP_MainCharacterInAirMovementComp_C_BP_GetumpPromptLineProcessor) == 0x000008, "Wrong size on BP_MainCharacterInAirMovementComp_C_BP_GetumpPromptLineProcessor");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_BP_GetumpPromptLineProcessor, CurJumpPromptLineProcessor_0) == 0x000000, "Member 'BP_MainCharacterInAirMovementComp_C_BP_GetumpPromptLineProcessor::CurJumpPromptLineProcessor_0' has a wrong offset!");

// Function BP_MainCharacterInAirMovementComp.BP_MainCharacterInAirMovementComp_C.BP_OnMulticast_PhxLeaderEnterFloat
// 0x0008 (0x0008 - 0x0000)
struct BP_MainCharacterInAirMovementComp_C_BP_OnMulticast_PhxLeaderEnterFloat final
{
public:
	bool                                          bPhxFloat;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         FloatCount;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterInAirMovementComp_C_BP_OnMulticast_PhxLeaderEnterFloat) == 0x000004, "Wrong alignment on BP_MainCharacterInAirMovementComp_C_BP_OnMulticast_PhxLeaderEnterFloat");
static_assert(sizeof(BP_MainCharacterInAirMovementComp_C_BP_OnMulticast_PhxLeaderEnterFloat) == 0x000008, "Wrong size on BP_MainCharacterInAirMovementComp_C_BP_OnMulticast_PhxLeaderEnterFloat");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_BP_OnMulticast_PhxLeaderEnterFloat, bPhxFloat) == 0x000000, "Member 'BP_MainCharacterInAirMovementComp_C_BP_OnMulticast_PhxLeaderEnterFloat::bPhxFloat' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_BP_OnMulticast_PhxLeaderEnterFloat, FloatCount) == 0x000004, "Member 'BP_MainCharacterInAirMovementComp_C_BP_OnMulticast_PhxLeaderEnterFloat::FloatCount' has a wrong offset!");

// Function BP_MainCharacterInAirMovementComp.BP_MainCharacterInAirMovementComp_C.BP_TryPointToPointJumping
// 0x0078 (0x0078 - 0x0000)
struct BP_MainCharacterInAirMovementComp_C_BP_TryPointToPointJumping final
{
public:
	struct FVector                                SourcePoint;                                       // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetPoint;                                       // 0x0018(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SteppingSimulationTime;                            // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CosntGravityZ;                                     // 0x0034(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxSimulationTime;                                 // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableDebugDraw;                                   // 0x003C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCanJump;                                          // 0x003D(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                OutVelocity;                                       // 0x0040(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TryPointToPointJumping_OutVelocity;       // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryPointToPointJumping_ReturnValue;       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterInAirMovementComp_C_BP_TryPointToPointJumping) == 0x000008, "Wrong alignment on BP_MainCharacterInAirMovementComp_C_BP_TryPointToPointJumping");
static_assert(sizeof(BP_MainCharacterInAirMovementComp_C_BP_TryPointToPointJumping) == 0x000078, "Wrong size on BP_MainCharacterInAirMovementComp_C_BP_TryPointToPointJumping");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_BP_TryPointToPointJumping, SourcePoint) == 0x000000, "Member 'BP_MainCharacterInAirMovementComp_C_BP_TryPointToPointJumping::SourcePoint' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_BP_TryPointToPointJumping, TargetPoint) == 0x000018, "Member 'BP_MainCharacterInAirMovementComp_C_BP_TryPointToPointJumping::TargetPoint' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_BP_TryPointToPointJumping, SteppingSimulationTime) == 0x000030, "Member 'BP_MainCharacterInAirMovementComp_C_BP_TryPointToPointJumping::SteppingSimulationTime' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_BP_TryPointToPointJumping, CosntGravityZ) == 0x000034, "Member 'BP_MainCharacterInAirMovementComp_C_BP_TryPointToPointJumping::CosntGravityZ' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_BP_TryPointToPointJumping, MaxSimulationTime) == 0x000038, "Member 'BP_MainCharacterInAirMovementComp_C_BP_TryPointToPointJumping::MaxSimulationTime' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_BP_TryPointToPointJumping, EnableDebugDraw) == 0x00003C, "Member 'BP_MainCharacterInAirMovementComp_C_BP_TryPointToPointJumping::EnableDebugDraw' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_BP_TryPointToPointJumping, bCanJump) == 0x00003D, "Member 'BP_MainCharacterInAirMovementComp_C_BP_TryPointToPointJumping::bCanJump' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_BP_TryPointToPointJumping, OutVelocity) == 0x000040, "Member 'BP_MainCharacterInAirMovementComp_C_BP_TryPointToPointJumping::OutVelocity' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_BP_TryPointToPointJumping, CallFunc_TryPointToPointJumping_OutVelocity) == 0x000058, "Member 'BP_MainCharacterInAirMovementComp_C_BP_TryPointToPointJumping::CallFunc_TryPointToPointJumping_OutVelocity' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_BP_TryPointToPointJumping, CallFunc_TryPointToPointJumping_ReturnValue) == 0x000070, "Member 'BP_MainCharacterInAirMovementComp_C_BP_TryPointToPointJumping::CallFunc_TryPointToPointJumping_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_BP_TryPointToPointJumping, CallFunc_IsValid_ReturnValue) == 0x000071, "Member 'BP_MainCharacterInAirMovementComp_C_BP_TryPointToPointJumping::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_MainCharacterInAirMovementComp.BP_MainCharacterInAirMovementComp_C.CaculateSinglePredictLineByGravityScaleCurve
// 0x0250 (0x0250 - 0x0000)
struct BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve final
{
public:
	TArray<struct FVector>                        CurveTrack;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	double                                        JumpVelocityZ;                                     // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InitVelocityZ;                                     // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InitStartTime;                                     // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TargetVelocityZ;                                   // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            UpGravityScaleCurve;                               // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            DownGravityScaleCurve;                             // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        AddtiveUpGravityScale;                             // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AddtiveDownGravityScale;                           // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurCharacterVelocity;                              // 0x0050(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AdvanceTime;                                       // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ConstGravityZ;                                     // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxSimulationTime;                                 // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndLocation;                                       // 0x0080(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InnerAdvanceTime;                                  // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurAbsoluteVelocityZ;                              // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        CurAppendTrack;                                    // 0x00A8(0x0010)(Edit, BlueprintVisible)
	int32                                         CurIndex;                                          // 0x00B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CurSampleTime;                                     // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurStartLocation;                                  // 0x00C8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurStartTime;                                      // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurRelativeVelocityZ;                              // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2[0x6];                                       // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SignOfFloat_ReturnValue;                  // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12A[0x6];                                      // 0x012A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SignOfFloat_ReturnValue_1;                // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14A[0x6];                                      // 0x014A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            K2Node_Select_Default;                             // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17D[0x3];                                      // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2;  // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_192[0x6];                                      // 0x0192(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_5;           // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_6;           // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast_1;      // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve) == 0x000008, "Wrong alignment on BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve");
static_assert(sizeof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve) == 0x000250, "Wrong size on BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CurveTrack) == 0x000000, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CurveTrack' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, JumpVelocityZ) == 0x000010, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::JumpVelocityZ' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, InitVelocityZ) == 0x000018, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::InitVelocityZ' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, InitStartTime) == 0x000020, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::InitStartTime' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, TargetVelocityZ) == 0x000028, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::TargetVelocityZ' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, UpGravityScaleCurve) == 0x000030, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::UpGravityScaleCurve' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, DownGravityScaleCurve) == 0x000038, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::DownGravityScaleCurve' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, AddtiveUpGravityScale) == 0x000040, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::AddtiveUpGravityScale' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, AddtiveDownGravityScale) == 0x000048, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::AddtiveDownGravityScale' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CurCharacterVelocity) == 0x000050, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CurCharacterVelocity' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, AdvanceTime) == 0x000068, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::AdvanceTime' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, ConstGravityZ) == 0x000070, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::ConstGravityZ' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, MaxSimulationTime) == 0x000078, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::MaxSimulationTime' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, EndLocation) == 0x000080, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::EndLocation' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, InnerAdvanceTime) == 0x000098, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::InnerAdvanceTime' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CurAbsoluteVelocityZ) == 0x0000A0, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CurAbsoluteVelocityZ' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CurAppendTrack) == 0x0000A8, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CurAppendTrack' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CurIndex) == 0x0000B8, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CurIndex' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CurSampleTime) == 0x0000C0, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CurSampleTime' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CurStartLocation) == 0x0000C8, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CurStartLocation' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CurStartTime) == 0x0000E0, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CurStartTime' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CurRelativeVelocityZ) == 0x0000E8, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CurRelativeVelocityZ' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CallFunc_IsValid_ReturnValue) == 0x0000F0, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CallFunc_IsValid_ReturnValue_1) == 0x0000F1, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0000F8, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000110, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000118, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CallFunc_SignOfFloat_ReturnValue) == 0x000120, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CallFunc_SignOfFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000128, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000129, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000130, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CallFunc_SignOfFloat_ReturnValue_1) == 0x000138, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CallFunc_SignOfFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000140, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000148, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000149, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CallFunc_SelectFloat_ReturnValue) == 0x000150, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, Temp_bool_Variable) == 0x000158, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, K2Node_Select_Default) == 0x000160, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CallFunc_GetFloatValue_ReturnValue) == 0x000168, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000170, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CallFunc_GetFloatValue_ReturnValue_1) == 0x000178, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x00017C, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000180, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000188, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2) == 0x000190, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CallFunc_BooleanAND_ReturnValue) == 0x000191, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x000198, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CallFunc_BreakVector_X) == 0x0001A0, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CallFunc_BreakVector_Y) == 0x0001A8, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CallFunc_BreakVector_Z) == 0x0001B0, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CallFunc_Array_Add_ReturnValue) == 0x0001B8, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CallFunc_MakeVector_ReturnValue) == 0x0001C0, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, Temp_bool_Variable_1) == 0x0001D8, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0001E0, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CallFunc_Add_VectorVector_ReturnValue) == 0x0001F8, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, K2Node_Select_Default_1) == 0x000210, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CallFunc_Add_DoubleDouble_ReturnValue_5) == 0x000218, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CallFunc_Add_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000220, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000228, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CallFunc_Add_DoubleDouble_ReturnValue_6) == 0x000230, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CallFunc_Add_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000238, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CallFunc_GetFloatValue_InTime_ImplicitCast_1) == 0x00023C, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CallFunc_GetFloatValue_InTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000240, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000248, "Member 'BP_MainCharacterInAirMovementComp_C_CaculateSinglePredictLineByGravityScaleCurve::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_MainCharacterInAirMovementComp.BP_MainCharacterInAirMovementComp_C.CanDrawPredictJumpCurve
// 0x0005 (0x0005 - 0x0000)
struct BP_MainCharacterInAirMovementComp_C_CanDrawPredictJumpCurve final
{
public:
	bool                                          Ret;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterInAirMovementComp_C_CanDrawPredictJumpCurve) == 0x000001, "Wrong alignment on BP_MainCharacterInAirMovementComp_C_CanDrawPredictJumpCurve");
static_assert(sizeof(BP_MainCharacterInAirMovementComp_C_CanDrawPredictJumpCurve) == 0x000005, "Wrong size on BP_MainCharacterInAirMovementComp_C_CanDrawPredictJumpCurve");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CanDrawPredictJumpCurve, Ret) == 0x000000, "Member 'BP_MainCharacterInAirMovementComp_C_CanDrawPredictJumpCurve::Ret' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CanDrawPredictJumpCurve, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_MainCharacterInAirMovementComp_C_CanDrawPredictJumpCurve::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CanDrawPredictJumpCurve, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'BP_MainCharacterInAirMovementComp_C_CanDrawPredictJumpCurve::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CanDrawPredictJumpCurve, CallFunc_IsValid_ReturnValue) == 0x000003, "Member 'BP_MainCharacterInAirMovementComp_C_CanDrawPredictJumpCurve::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CanDrawPredictJumpCurve, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000004, "Member 'BP_MainCharacterInAirMovementComp_C_CanDrawPredictJumpCurve::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_MainCharacterInAirMovementComp.BP_MainCharacterInAirMovementComp_C.CanDrawRealTimeJumpCurve
// 0x0010 (0x0010 - 0x0000)
struct BP_MainCharacterInAirMovementComp_C_CanDrawRealTimeJumpCurve final
{
public:
	double                                        CurrentSpeedXY;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret;                                               // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterInAirMovementComp_C_CanDrawRealTimeJumpCurve) == 0x000008, "Wrong alignment on BP_MainCharacterInAirMovementComp_C_CanDrawRealTimeJumpCurve");
static_assert(sizeof(BP_MainCharacterInAirMovementComp_C_CanDrawRealTimeJumpCurve) == 0x000010, "Wrong size on BP_MainCharacterInAirMovementComp_C_CanDrawRealTimeJumpCurve");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CanDrawRealTimeJumpCurve, CurrentSpeedXY) == 0x000000, "Member 'BP_MainCharacterInAirMovementComp_C_CanDrawRealTimeJumpCurve::CurrentSpeedXY' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CanDrawRealTimeJumpCurve, Ret) == 0x000008, "Member 'BP_MainCharacterInAirMovementComp_C_CanDrawRealTimeJumpCurve::Ret' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CanDrawRealTimeJumpCurve, Temp_bool_Variable) == 0x000009, "Member 'BP_MainCharacterInAirMovementComp_C_CanDrawRealTimeJumpCurve::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CanDrawRealTimeJumpCurve, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00000A, "Member 'BP_MainCharacterInAirMovementComp_C_CanDrawRealTimeJumpCurve::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CanDrawRealTimeJumpCurve, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x00000B, "Member 'BP_MainCharacterInAirMovementComp_C_CanDrawRealTimeJumpCurve::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CanDrawRealTimeJumpCurve, K2Node_Select_Default) == 0x00000C, "Member 'BP_MainCharacterInAirMovementComp_C_CanDrawRealTimeJumpCurve::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_CanDrawRealTimeJumpCurve, CallFunc_BooleanAND_ReturnValue) == 0x00000D, "Member 'BP_MainCharacterInAirMovementComp_C_CanDrawRealTimeJumpCurve::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_MainCharacterInAirMovementComp.BP_MainCharacterInAirMovementComp_C.DebugDrawPredicJumpCurveLineInWorldSpace
// 0x00D8 (0x00D8 - 0x0000)
struct BP_MainCharacterInAirMovementComp_C_DebugDrawPredicJumpCurveLineInWorldSpace final
{
public:
	struct FVector                                WorldStartLocation;                                // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        CurveTrack;                                        // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FLinearColor                           LineColor;                                         // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_wildcard_Variable;                            // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item_1;                         // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterInAirMovementComp_C_DebugDrawPredicJumpCurveLineInWorldSpace) == 0x000008, "Wrong alignment on BP_MainCharacterInAirMovementComp_C_DebugDrawPredicJumpCurveLineInWorldSpace");
static_assert(sizeof(BP_MainCharacterInAirMovementComp_C_DebugDrawPredicJumpCurveLineInWorldSpace) == 0x0000D8, "Wrong size on BP_MainCharacterInAirMovementComp_C_DebugDrawPredicJumpCurveLineInWorldSpace");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_DebugDrawPredicJumpCurveLineInWorldSpace, WorldStartLocation) == 0x000000, "Member 'BP_MainCharacterInAirMovementComp_C_DebugDrawPredicJumpCurveLineInWorldSpace::WorldStartLocation' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_DebugDrawPredicJumpCurveLineInWorldSpace, CurveTrack) == 0x000018, "Member 'BP_MainCharacterInAirMovementComp_C_DebugDrawPredicJumpCurveLineInWorldSpace::CurveTrack' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_DebugDrawPredicJumpCurveLineInWorldSpace, LineColor) == 0x000028, "Member 'BP_MainCharacterInAirMovementComp_C_DebugDrawPredicJumpCurveLineInWorldSpace::LineColor' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_DebugDrawPredicJumpCurveLineInWorldSpace, Temp_wildcard_Variable) == 0x000038, "Member 'BP_MainCharacterInAirMovementComp_C_DebugDrawPredicJumpCurveLineInWorldSpace::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_DebugDrawPredicJumpCurveLineInWorldSpace, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_MainCharacterInAirMovementComp_C_DebugDrawPredicJumpCurveLineInWorldSpace::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_DebugDrawPredicJumpCurveLineInWorldSpace, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'BP_MainCharacterInAirMovementComp_C_DebugDrawPredicJumpCurveLineInWorldSpace::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_DebugDrawPredicJumpCurveLineInWorldSpace, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_MainCharacterInAirMovementComp_C_DebugDrawPredicJumpCurveLineInWorldSpace::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_DebugDrawPredicJumpCurveLineInWorldSpace, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BP_MainCharacterInAirMovementComp_C_DebugDrawPredicJumpCurveLineInWorldSpace::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_DebugDrawPredicJumpCurveLineInWorldSpace, Temp_int_Array_Index_Variable) == 0x000060, "Member 'BP_MainCharacterInAirMovementComp_C_DebugDrawPredicJumpCurveLineInWorldSpace::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_DebugDrawPredicJumpCurveLineInWorldSpace, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_MainCharacterInAirMovementComp_C_DebugDrawPredicJumpCurveLineInWorldSpace::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_DebugDrawPredicJumpCurveLineInWorldSpace, CallFunc_Add_IntInt_ReturnValue_1) == 0x000080, "Member 'BP_MainCharacterInAirMovementComp_C_DebugDrawPredicJumpCurveLineInWorldSpace::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_DebugDrawPredicJumpCurveLineInWorldSpace, CallFunc_Array_Get_Item_1) == 0x000088, "Member 'BP_MainCharacterInAirMovementComp_C_DebugDrawPredicJumpCurveLineInWorldSpace::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_DebugDrawPredicJumpCurveLineInWorldSpace, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000A0, "Member 'BP_MainCharacterInAirMovementComp_C_DebugDrawPredicJumpCurveLineInWorldSpace::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_DebugDrawPredicJumpCurveLineInWorldSpace, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A8, "Member 'BP_MainCharacterInAirMovementComp_C_DebugDrawPredicJumpCurveLineInWorldSpace::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_DebugDrawPredicJumpCurveLineInWorldSpace, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000C0, "Member 'BP_MainCharacterInAirMovementComp_C_DebugDrawPredicJumpCurveLineInWorldSpace::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");

// Function BP_MainCharacterInAirMovementComp.BP_MainCharacterInAirMovementComp_C.EnableJumpPromptLineFeature
// 0x0020 (0x0020 - 0x0000)
struct BP_MainCharacterInAirMovementComp_C_EnableJumpPromptLineFeature final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Tag;                                               // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterInAirMovementComp_C_EnableJumpPromptLineFeature) == 0x000004, "Wrong alignment on BP_MainCharacterInAirMovementComp_C_EnableJumpPromptLineFeature");
static_assert(sizeof(BP_MainCharacterInAirMovementComp_C_EnableJumpPromptLineFeature) == 0x000020, "Wrong size on BP_MainCharacterInAirMovementComp_C_EnableJumpPromptLineFeature");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_EnableJumpPromptLineFeature, bEnable) == 0x000000, "Member 'BP_MainCharacterInAirMovementComp_C_EnableJumpPromptLineFeature::bEnable' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_EnableJumpPromptLineFeature, Tag) == 0x000004, "Member 'BP_MainCharacterInAirMovementComp_C_EnableJumpPromptLineFeature::Tag' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_EnableJumpPromptLineFeature, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'BP_MainCharacterInAirMovementComp_C_EnableJumpPromptLineFeature::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_EnableJumpPromptLineFeature, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_MainCharacterInAirMovementComp_C_EnableJumpPromptLineFeature::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_MainCharacterInAirMovementComp.BP_MainCharacterInAirMovementComp_C.ExecuteUbergraph_BP_MainCharacterInAirMovementComp
// 0x0060 (0x0060 - 0x0000)
struct BP_MainCharacterInAirMovementComp_C_ExecuteUbergraph_BP_MainCharacterInAirMovementComp final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnableJumpPromptLineFeature_ReturnValue; // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ENetRole                                      CallFunc_GetLocalRole_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bPhxFloat;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_FloatCount;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTime;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGravityZ_ReturnValue;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_B_ImplicitCast;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_A_ImplicitCast;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DrawPredictJumpCurve_CosntGravityZ_ImplicitCast; // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterInAirMovementComp_C_ExecuteUbergraph_BP_MainCharacterInAirMovementComp) == 0x000008, "Wrong alignment on BP_MainCharacterInAirMovementComp_C_ExecuteUbergraph_BP_MainCharacterInAirMovementComp");
static_assert(sizeof(BP_MainCharacterInAirMovementComp_C_ExecuteUbergraph_BP_MainCharacterInAirMovementComp) == 0x000060, "Wrong size on BP_MainCharacterInAirMovementComp_C_ExecuteUbergraph_BP_MainCharacterInAirMovementComp");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_ExecuteUbergraph_BP_MainCharacterInAirMovementComp, EntryPoint) == 0x000000, "Member 'BP_MainCharacterInAirMovementComp_C_ExecuteUbergraph_BP_MainCharacterInAirMovementComp::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_ExecuteUbergraph_BP_MainCharacterInAirMovementComp, CallFunc_IsEnableJumpPromptLineFeature_ReturnValue) == 0x000004, "Member 'BP_MainCharacterInAirMovementComp_C_ExecuteUbergraph_BP_MainCharacterInAirMovementComp::CallFunc_IsEnableJumpPromptLineFeature_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_ExecuteUbergraph_BP_MainCharacterInAirMovementComp, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_MainCharacterInAirMovementComp_C_ExecuteUbergraph_BP_MainCharacterInAirMovementComp::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_ExecuteUbergraph_BP_MainCharacterInAirMovementComp, CallFunc_GetLocalRole_ReturnValue) == 0x000010, "Member 'BP_MainCharacterInAirMovementComp_C_ExecuteUbergraph_BP_MainCharacterInAirMovementComp::CallFunc_GetLocalRole_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_ExecuteUbergraph_BP_MainCharacterInAirMovementComp, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_MainCharacterInAirMovementComp_C_ExecuteUbergraph_BP_MainCharacterInAirMovementComp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_ExecuteUbergraph_BP_MainCharacterInAirMovementComp, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000012, "Member 'BP_MainCharacterInAirMovementComp_C_ExecuteUbergraph_BP_MainCharacterInAirMovementComp::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_ExecuteUbergraph_BP_MainCharacterInAirMovementComp, CallFunc_BooleanAND_ReturnValue) == 0x000013, "Member 'BP_MainCharacterInAirMovementComp_C_ExecuteUbergraph_BP_MainCharacterInAirMovementComp::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_ExecuteUbergraph_BP_MainCharacterInAirMovementComp, K2Node_CustomEvent_bPhxFloat) == 0x000014, "Member 'BP_MainCharacterInAirMovementComp_C_ExecuteUbergraph_BP_MainCharacterInAirMovementComp::K2Node_CustomEvent_bPhxFloat' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_ExecuteUbergraph_BP_MainCharacterInAirMovementComp, K2Node_CustomEvent_FloatCount) == 0x000018, "Member 'BP_MainCharacterInAirMovementComp_C_ExecuteUbergraph_BP_MainCharacterInAirMovementComp::K2Node_CustomEvent_FloatCount' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_ExecuteUbergraph_BP_MainCharacterInAirMovementComp, K2Node_Event_DeltaSeconds) == 0x00001C, "Member 'BP_MainCharacterInAirMovementComp_C_ExecuteUbergraph_BP_MainCharacterInAirMovementComp::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_ExecuteUbergraph_BP_MainCharacterInAirMovementComp, K2Node_Event_DeltaTime) == 0x000020, "Member 'BP_MainCharacterInAirMovementComp_C_ExecuteUbergraph_BP_MainCharacterInAirMovementComp::K2Node_Event_DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_ExecuteUbergraph_BP_MainCharacterInAirMovementComp, CallFunc_IsValid_ReturnValue_1) == 0x000024, "Member 'BP_MainCharacterInAirMovementComp_C_ExecuteUbergraph_BP_MainCharacterInAirMovementComp::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_ExecuteUbergraph_BP_MainCharacterInAirMovementComp, CallFunc_IsValid_ReturnValue_2) == 0x000025, "Member 'BP_MainCharacterInAirMovementComp_C_ExecuteUbergraph_BP_MainCharacterInAirMovementComp::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_ExecuteUbergraph_BP_MainCharacterInAirMovementComp, CallFunc_GetGravityZ_ReturnValue) == 0x000028, "Member 'BP_MainCharacterInAirMovementComp_C_ExecuteUbergraph_BP_MainCharacterInAirMovementComp::CallFunc_GetGravityZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_ExecuteUbergraph_BP_MainCharacterInAirMovementComp, CallFunc_SafeDivide_ReturnValue) == 0x000030, "Member 'BP_MainCharacterInAirMovementComp_C_ExecuteUbergraph_BP_MainCharacterInAirMovementComp::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_ExecuteUbergraph_BP_MainCharacterInAirMovementComp, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000038, "Member 'BP_MainCharacterInAirMovementComp_C_ExecuteUbergraph_BP_MainCharacterInAirMovementComp::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_ExecuteUbergraph_BP_MainCharacterInAirMovementComp, CallFunc_SelectFloat_ReturnValue) == 0x000040, "Member 'BP_MainCharacterInAirMovementComp_C_ExecuteUbergraph_BP_MainCharacterInAirMovementComp::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_ExecuteUbergraph_BP_MainCharacterInAirMovementComp, CallFunc_SafeDivide_B_ImplicitCast) == 0x000048, "Member 'BP_MainCharacterInAirMovementComp_C_ExecuteUbergraph_BP_MainCharacterInAirMovementComp::CallFunc_SafeDivide_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_ExecuteUbergraph_BP_MainCharacterInAirMovementComp, CallFunc_SafeDivide_A_ImplicitCast) == 0x000050, "Member 'BP_MainCharacterInAirMovementComp_C_ExecuteUbergraph_BP_MainCharacterInAirMovementComp::CallFunc_SafeDivide_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_ExecuteUbergraph_BP_MainCharacterInAirMovementComp, CallFunc_DrawPredictJumpCurve_CosntGravityZ_ImplicitCast) == 0x000058, "Member 'BP_MainCharacterInAirMovementComp_C_ExecuteUbergraph_BP_MainCharacterInAirMovementComp::CallFunc_DrawPredictJumpCurve_CosntGravityZ_ImplicitCast' has a wrong offset!");

// Function BP_MainCharacterInAirMovementComp.BP_MainCharacterInAirMovementComp_C.Multicast_PhxLeaderEnterFloat
// 0x0008 (0x0008 - 0x0000)
struct BP_MainCharacterInAirMovementComp_C_Multicast_PhxLeaderEnterFloat final
{
public:
	bool                                          bPhxFloat;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         FloatCount;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterInAirMovementComp_C_Multicast_PhxLeaderEnterFloat) == 0x000004, "Wrong alignment on BP_MainCharacterInAirMovementComp_C_Multicast_PhxLeaderEnterFloat");
static_assert(sizeof(BP_MainCharacterInAirMovementComp_C_Multicast_PhxLeaderEnterFloat) == 0x000008, "Wrong size on BP_MainCharacterInAirMovementComp_C_Multicast_PhxLeaderEnterFloat");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_Multicast_PhxLeaderEnterFloat, bPhxFloat) == 0x000000, "Member 'BP_MainCharacterInAirMovementComp_C_Multicast_PhxLeaderEnterFloat::bPhxFloat' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_Multicast_PhxLeaderEnterFloat, FloatCount) == 0x000004, "Member 'BP_MainCharacterInAirMovementComp_C_Multicast_PhxLeaderEnterFloat::FloatCount' has a wrong offset!");

// Function BP_MainCharacterInAirMovementComp.BP_MainCharacterInAirMovementComp_C.ReceivePostPhysicsTick
// 0x0004 (0x0004 - 0x0000)
struct BP_MainCharacterInAirMovementComp_C_ReceivePostPhysicsTick final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterInAirMovementComp_C_ReceivePostPhysicsTick) == 0x000004, "Wrong alignment on BP_MainCharacterInAirMovementComp_C_ReceivePostPhysicsTick");
static_assert(sizeof(BP_MainCharacterInAirMovementComp_C_ReceivePostPhysicsTick) == 0x000004, "Wrong size on BP_MainCharacterInAirMovementComp_C_ReceivePostPhysicsTick");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_ReceivePostPhysicsTick, DeltaTime) == 0x000000, "Member 'BP_MainCharacterInAirMovementComp_C_ReceivePostPhysicsTick::DeltaTime' has a wrong offset!");

// Function BP_MainCharacterInAirMovementComp.BP_MainCharacterInAirMovementComp_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_MainCharacterInAirMovementComp_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterInAirMovementComp_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_MainCharacterInAirMovementComp_C_ReceiveTick");
static_assert(sizeof(BP_MainCharacterInAirMovementComp_C_ReceiveTick) == 0x000004, "Wrong size on BP_MainCharacterInAirMovementComp_C_ReceiveTick");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_MainCharacterInAirMovementComp_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_MainCharacterInAirMovementComp.BP_MainCharacterInAirMovementComp_C.SweepLastPostionByProjectilePath
// 0x0910 (0x0910 - 0x0000)
struct BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath final
{
public:
	TArray<struct FVector>                        RelativeCurvePostitionPath;                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                AbsoluteCurveStartLocation;                        // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        RealCurvePositionTrace;                            // 0x0028(0x0010)(Parm, OutParm)
	struct FHitResult                             HitResult;                                         // 0x0038(0x00F8)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CurveLength;                                       // 0x0130(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OutCurveLength;                                    // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SphereTraceRadius;                                 // 0x0140(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             OutputHitResult;                                   // 0x0148(0x00F8)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          bUseSphereTrace;                                   // 0x0240(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        OutCurvePositionTrace;                             // 0x0248(0x0010)(Edit, BlueprintVisible)
	TArray<class AActor*>                         IgnoreActors;                                      // 0x0258(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0268(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x027D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27E[0x2];                                      // 0x027E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_285[0x3];                                      // 0x0285(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28D[0x3];                                      // 0x028D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_294[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_32ByteByte_ReturnValue;          // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x3];                                      // 0x02B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BB[0x5];                                      // 0x02BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x02C0(0x0010)(ConstParm, ReferenceParm)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x02D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DA[0x2];                                      // 0x02DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E4[0x4];                                      // 0x02E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x02E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0300(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0318(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0330(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0348(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0350(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0358(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0380(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0398(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E1[0x3];                                      // 0x03E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue;       // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0400(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0420(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0440(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0478(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_2;                            // 0x04A8(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Variable;                                 // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BC[0x4];                                      // 0x04BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D4[0x4];                                      // 0x04D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x04E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x04F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_511[0x7];                                      // 0x0511(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_SphereTraceSingleByProfile_OutHit;        // 0x0518(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleByProfile_ReturnValue;   // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0611(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0612(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_613[0x1];                                      // 0x0613(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_1; // 0x0614(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0618(0x0010)(ReferenceParm)
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue_1;     // 0x0628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62C[0x4];                                      // 0x062C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0630(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_4;                          // 0x0648(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_4;                          // 0x0650(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_4;                          // 0x0658(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0660(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0678(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_5;                          // 0x0680(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_5;                          // 0x0688(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_5;                          // 0x0690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0698(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x06B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingleByProfile_OutHit_1;      // 0x06B8(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleByProfile_ReturnValue_1; // 0x07B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B1[0x7];                                      // 0x07B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x07B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_CapsuleTraceSingleByProfile_OutHit;       // 0x07D0(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CapsuleTraceSingleByProfile_ReturnValue;  // 0x08C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C9[0x7];                                      // 0x08C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x08D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x08D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x08E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SphereTraceSingleByProfile_Radius_ImplicitCast; // 0x08E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SphereTraceSingleByProfile_Radius_ImplicitCast_1; // 0x08E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8EC[0x4];                                      // 0x08EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x08F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1;   // 0x08F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0900(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0908(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath) == 0x000008, "Wrong alignment on BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath");
static_assert(sizeof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath) == 0x000910, "Wrong size on BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, RelativeCurvePostitionPath) == 0x000000, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::RelativeCurvePostitionPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, AbsoluteCurveStartLocation) == 0x000010, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::AbsoluteCurveStartLocation' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, RealCurvePositionTrace) == 0x000028, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::RealCurvePositionTrace' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, HitResult) == 0x000038, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::HitResult' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CurveLength) == 0x000130, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CurveLength' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, OutCurveLength) == 0x000138, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::OutCurveLength' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, SphereTraceRadius) == 0x000140, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::SphereTraceRadius' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, OutputHitResult) == 0x000148, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::OutputHitResult' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, bUseSphereTrace) == 0x000240, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::bUseSphereTrace' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, OutCurvePositionTrace) == 0x000248, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::OutCurvePositionTrace' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, IgnoreActors) == 0x000258, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::IgnoreActors' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, Temp_object_Variable) == 0x000268, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_Array_Length_ReturnValue) == 0x000278, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, Temp_bool_Variable) == 0x00027C, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_Not_PreBool_ReturnValue) == 0x00027D, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, Temp_int_Loop_Counter_Variable) == 0x000280, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_Less_IntInt_ReturnValue) == 0x000284, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_Add_IntInt_ReturnValue) == 0x000288, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, Temp_bool_True_if_break_was_hit_Variable) == 0x00028C, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, Temp_int_Array_Index_Variable) == 0x000290, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_Array_Get_Item) == 0x000298, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_NotEqual_32ByteByte_ReturnValue) == 0x0002B0, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_NotEqual_32ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_Add_IntInt_ReturnValue_1) == 0x0002B4, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0002B8, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_Not_PreBool_ReturnValue_1) == 0x0002B9, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_BooleanAND_ReturnValue) == 0x0002BA, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, Temp_object_Variable_1) == 0x0002C0, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0002D0, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_BreakHitResult_bBlockingHit) == 0x0002D8, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_BreakHitResult_bInitialOverlap) == 0x0002D9, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_BreakHitResult_Time) == 0x0002DC, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_BreakHitResult_Distance) == 0x0002E0, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_BreakHitResult_Location) == 0x0002E8, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_BreakHitResult_ImpactPoint) == 0x000300, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_BreakHitResult_Normal) == 0x000318, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_BreakHitResult_ImpactNormal) == 0x000330, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_BreakHitResult_PhysMat) == 0x000348, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_BreakHitResult_HitActor) == 0x000350, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_BreakHitResult_HitComponent) == 0x000358, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_BreakHitResult_HitBoneName) == 0x000360, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_BreakHitResult_BoneName) == 0x000368, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_BreakHitResult_HitItem) == 0x000370, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_BreakHitResult_ElementIndex) == 0x000374, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_BreakHitResult_FaceIndex) == 0x000378, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_BreakHitResult_TraceStart) == 0x000380, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_BreakHitResult_TraceEnd) == 0x000398, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_BreakVector_X) == 0x0003B0, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_BreakVector_Y) == 0x0003B8, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_BreakVector_Z) == 0x0003C0, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_BreakVector_X_1) == 0x0003C8, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_BreakVector_Y_1) == 0x0003D0, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_BreakVector_Z_1) == 0x0003D8, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x0003E0, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_GetScaledCapsuleRadius_ReturnValue) == 0x0003E4, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_GetScaledCapsuleRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x0003E8, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0003F0, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0003F8, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000400, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000418, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000420, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000438, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000440, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000458, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_BreakVector_X_2) == 0x000460, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_BreakVector_Y_2) == 0x000468, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_BreakVector_Z_2) == 0x000470, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_Add_VectorVector_ReturnValue) == 0x000478, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_BreakVector_X_3) == 0x000490, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_BreakVector_Y_3) == 0x000498, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_BreakVector_Z_3) == 0x0004A0, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, Temp_object_Variable_2) == 0x0004A8, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, Temp_int_Variable) == 0x0004B8, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0004C0, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0004C8, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_Add_IntInt_ReturnValue_2) == 0x0004D0, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0004D8, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_MakeVector_ReturnValue) == 0x0004E0, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_MakeVector_ReturnValue_1) == 0x0004F8, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000510, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_SphereTraceSingleByProfile_OutHit) == 0x000518, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_SphereTraceSingleByProfile_OutHit' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_SphereTraceSingleByProfile_ReturnValue) == 0x000610, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_SphereTraceSingleByProfile_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_BooleanAND_ReturnValue_1) == 0x000611, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_Not_PreBool_ReturnValue_2) == 0x000612, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_1) == 0x000614, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, K2Node_MakeArray_Array) == 0x000618, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_GetScaledCapsuleRadius_ReturnValue_1) == 0x000628, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_GetScaledCapsuleRadius_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000630, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_BreakVector_X_4) == 0x000648, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_BreakVector_Y_4) == 0x000650, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_BreakVector_Z_4) == 0x000658, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000660, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000678, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_BreakVector_X_5) == 0x000680, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_BreakVector_Y_5) == 0x000688, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_BreakVector_Z_5) == 0x000690, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_MakeVector_ReturnValue_2) == 0x000698, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x0006B0, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_SphereTraceSingleByProfile_OutHit_1) == 0x0006B8, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_SphereTraceSingleByProfile_OutHit_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_SphereTraceSingleByProfile_ReturnValue_1) == 0x0007B0, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_SphereTraceSingleByProfile_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_MakeVector_ReturnValue_3) == 0x0007B8, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_CapsuleTraceSingleByProfile_OutHit) == 0x0007D0, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_CapsuleTraceSingleByProfile_OutHit' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_CapsuleTraceSingleByProfile_ReturnValue) == 0x0008C8, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_CapsuleTraceSingleByProfile_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_Vector_Distance_ReturnValue) == 0x0008D0, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x0008D8, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_Array_Add_ReturnValue) == 0x0008E0, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_SphereTraceSingleByProfile_Radius_ImplicitCast) == 0x0008E4, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_SphereTraceSingleByProfile_Radius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_SphereTraceSingleByProfile_Radius_ImplicitCast_1) == 0x0008E8, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_SphereTraceSingleByProfile_Radius_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x0008F0, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1) == 0x0008F8, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000900, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000908, "Member 'BP_MainCharacterInAirMovementComp_C_SweepLastPostionByProjectilePath::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_MainCharacterInAirMovementComp.BP_MainCharacterInAirMovementComp_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct BP_MainCharacterInAirMovementComp_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterInAirMovementComp_C_GetModuleName) == 0x000008, "Wrong alignment on BP_MainCharacterInAirMovementComp_C_GetModuleName");
static_assert(sizeof(BP_MainCharacterInAirMovementComp_C_GetModuleName) == 0x000010, "Wrong size on BP_MainCharacterInAirMovementComp_C_GetModuleName");
static_assert(offsetof(BP_MainCharacterInAirMovementComp_C_GetModuleName, ReturnValue) == 0x000000, "Member 'BP_MainCharacterInAirMovementComp_C_GetModuleName::ReturnValue' has a wrong offset!");

}

