#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PSDKCustomerServiceCommon

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function PSDKCustomerServiceCommon.CustomerServicePSNQRCodeWidget.NativeOnFocusLost
// 0x0008 (0x0008 - 0x0000)
struct CustomerServicePSNQRCodeWidget_NativeOnFocusLost final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(CustomerServicePSNQRCodeWidget_NativeOnFocusLost) == 0x000004, "Wrong alignment on CustomerServicePSNQRCodeWidget_NativeOnFocusLost");
static_assert(sizeof(CustomerServicePSNQRCodeWidget_NativeOnFocusLost) == 0x000008, "Wrong size on CustomerServicePSNQRCodeWidget_NativeOnFocusLost");
static_assert(offsetof(CustomerServicePSNQRCodeWidget_NativeOnFocusLost, InFocusEvent) == 0x000000, "Member 'CustomerServicePSNQRCodeWidget_NativeOnFocusLost::InFocusEvent' has a wrong offset!");

// Function PSDKCustomerServiceCommon.CustomerServicePSNQRCodeWidget.OnGamepadEvent
// 0x0040 (0x0040 - 0x0000)
struct CustomerServicePSNQRCodeWidget_OnGamepadEvent final
{
public:
	struct FKeyEvent                              InKeyEvent;                                        // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CustomerServicePSNQRCodeWidget_OnGamepadEvent) == 0x000008, "Wrong alignment on CustomerServicePSNQRCodeWidget_OnGamepadEvent");
static_assert(sizeof(CustomerServicePSNQRCodeWidget_OnGamepadEvent) == 0x000040, "Wrong size on CustomerServicePSNQRCodeWidget_OnGamepadEvent");
static_assert(offsetof(CustomerServicePSNQRCodeWidget_OnGamepadEvent, InKeyEvent) == 0x000000, "Member 'CustomerServicePSNQRCodeWidget_OnGamepadEvent::InKeyEvent' has a wrong offset!");

// Function PSDKCustomerServiceCommon.CustomerServicePSNQRCodeWidget.SetRouter
// 0x0010 (0x0010 - 0x0000)
struct CustomerServicePSNQRCodeWidget_SetRouter final
{
public:
	class FString                                 Router;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CustomerServicePSNQRCodeWidget_SetRouter) == 0x000008, "Wrong alignment on CustomerServicePSNQRCodeWidget_SetRouter");
static_assert(sizeof(CustomerServicePSNQRCodeWidget_SetRouter) == 0x000010, "Wrong size on CustomerServicePSNQRCodeWidget_SetRouter");
static_assert(offsetof(CustomerServicePSNQRCodeWidget_SetRouter, Router) == 0x000000, "Member 'CustomerServicePSNQRCodeWidget_SetRouter::Router' has a wrong offset!");

// Function PSDKCustomerServiceCommon.CustomerServicePSNQRCodeWidget.UpdateQrCodeImage
// 0x0010 (0x0010 - 0x0000)
struct CustomerServicePSNQRCodeWidget_UpdateQrCodeImage final
{
public:
	class FString                                 ImageUrl;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CustomerServicePSNQRCodeWidget_UpdateQrCodeImage) == 0x000008, "Wrong alignment on CustomerServicePSNQRCodeWidget_UpdateQrCodeImage");
static_assert(sizeof(CustomerServicePSNQRCodeWidget_UpdateQrCodeImage) == 0x000010, "Wrong size on CustomerServicePSNQRCodeWidget_UpdateQrCodeImage");
static_assert(offsetof(CustomerServicePSNQRCodeWidget_UpdateQrCodeImage, ImageUrl) == 0x000000, "Member 'CustomerServicePSNQRCodeWidget_UpdateQrCodeImage::ImageUrl' has a wrong offset!");

// Function PSDKCustomerServiceCommon.CustomerServicePSNQRCodeWidget.UpdateTimeoutSeconds
// 0x0004 (0x0004 - 0x0000)
struct CustomerServicePSNQRCodeWidget_UpdateTimeoutSeconds final
{
public:
	int32                                         TimeoutSeconds;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CustomerServicePSNQRCodeWidget_UpdateTimeoutSeconds) == 0x000004, "Wrong alignment on CustomerServicePSNQRCodeWidget_UpdateTimeoutSeconds");
static_assert(sizeof(CustomerServicePSNQRCodeWidget_UpdateTimeoutSeconds) == 0x000004, "Wrong size on CustomerServicePSNQRCodeWidget_UpdateTimeoutSeconds");
static_assert(offsetof(CustomerServicePSNQRCodeWidget_UpdateTimeoutSeconds, TimeoutSeconds) == 0x000000, "Member 'CustomerServicePSNQRCodeWidget_UpdateTimeoutSeconds::TimeoutSeconds' has a wrong offset!");

}

