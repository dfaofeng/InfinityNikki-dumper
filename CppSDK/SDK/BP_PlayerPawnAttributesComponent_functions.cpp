#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerPawnAttributesComponent

#include "Basic.hpp"

#include "BP_PlayerPawnAttributesComponent_classes.hpp"
#include "BP_PlayerPawnAttributesComponent_parameters.hpp"


namespace SDK
{

// Function BP_PlayerPawnAttributesComponent.BP_PlayerPawnAttributesComponent_C.BP_SetPlayerToUsingCarrier
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           CarrierActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerPawnAttributesComponent_C::BP_SetPlayerToUsingCarrier(class AActor* CarrierActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPawnAttributesComponent_C", "BP_SetPlayerToUsingCarrier");

	Params::BP_PlayerPawnAttributesComponent_C_BP_SetPlayerToUsingCarrier Parms{};

	Parms.CarrierActor = CarrierActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerPawnAttributesComponent.BP_PlayerPawnAttributesComponent_C.BP_SetPlayerToControlActor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           ActorToControl                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerPawnAttributesComponent_C::BP_SetPlayerToControlActor(class AActor* ActorToControl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPawnAttributesComponent_C", "BP_SetPlayerToControlActor");

	Params::BP_PlayerPawnAttributesComponent_C_BP_SetPlayerToControlActor Parms{};

	Parms.ActorToControl = ActorToControl;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerPawnAttributesComponent.BP_PlayerPawnAttributesComponent_C.BP_Public_SwitchNikkiGamePlayMovementMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerGamePlayMovementMode             NewGamePlayMovementMode                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   SwitchSucessful                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerPawnAttributesComponent_C::BP_Public_SwitchNikkiGamePlayMovementMode(EPlayerGamePlayMovementMode NewGamePlayMovementMode, bool* SwitchSucessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPawnAttributesComponent_C", "BP_Public_SwitchNikkiGamePlayMovementMode");

	Params::BP_PlayerPawnAttributesComponent_C_BP_Public_SwitchNikkiGamePlayMovementMode Parms{};

	Parms.NewGamePlayMovementMode = NewGamePlayMovementMode;

	UObject::ProcessEvent(Func, &Parms);

	if (SwitchSucessful != nullptr)
		*SwitchSucessful = Parms.SwitchSucessful;
}


// Function BP_PlayerPawnAttributesComponent.BP_PlayerPawnAttributesComponent_C.BP_Public_SwitchCharacterGamePlayInAirMovementMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerGamePlayMovementMode             NewGamePlayMovementMode                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerPawnAttributesComponent_C::BP_Public_SwitchCharacterGamePlayInAirMovementMode(EPlayerGamePlayMovementMode NewGamePlayMovementMode, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPawnAttributesComponent_C", "BP_Public_SwitchCharacterGamePlayInAirMovementMode");

	Params::BP_PlayerPawnAttributesComponent_C_BP_Public_SwitchCharacterGamePlayInAirMovementMode Parms{};

	Parms.NewGamePlayMovementMode = NewGamePlayMovementMode;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BP_PlayerPawnAttributesComponent.BP_PlayerPawnAttributesComponent_C.BP_Public_ExitGamePlayMovementMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerGamePlayMovementMode             NewGamePlayMovementMode                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   SwitchSucessful                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerPawnAttributesComponent_C::BP_Public_ExitGamePlayMovementMode(EPlayerGamePlayMovementMode NewGamePlayMovementMode, bool* SwitchSucessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPawnAttributesComponent_C", "BP_Public_ExitGamePlayMovementMode");

	Params::BP_PlayerPawnAttributesComponent_C_BP_Public_ExitGamePlayMovementMode Parms{};

	Parms.NewGamePlayMovementMode = NewGamePlayMovementMode;

	UObject::ProcessEvent(Func, &Parms);

	if (SwitchSucessful != nullptr)
		*SwitchSucessful = Parms.SwitchSucessful;
}


// Function BP_PlayerPawnAttributesComponent.BP_PlayerPawnAttributesComponent_C.BP_Public_ExitGamePlayInAirMovementMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerGamePlayMovementMode             NewGamePlayMovementMode                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerPawnAttributesComponent_C::BP_Public_ExitGamePlayInAirMovementMode(EPlayerGamePlayMovementMode NewGamePlayMovementMode, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPawnAttributesComponent_C", "BP_Public_ExitGamePlayInAirMovementMode");

	Params::BP_PlayerPawnAttributesComponent_C_BP_Public_ExitGamePlayInAirMovementMode Parms{};

	Parms.NewGamePlayMovementMode = NewGamePlayMovementMode;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BP_PlayerPawnAttributesComponent.BP_PlayerPawnAttributesComponent_C.AnimNotify_StartGatherHandIK
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerPawnAttributesComponent_C::AnimNotify_StartGatherHandIK()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPawnAttributesComponent_C", "AnimNotify_StartGatherHandIK");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerPawnAttributesComponent.BP_PlayerPawnAttributesComponent_C.AnimNotify_PlayerStepOnLand
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerPawnAttributesComponent_C::AnimNotify_PlayerStepOnLand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPawnAttributesComponent_C", "AnimNotify_PlayerStepOnLand");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerPawnAttributesComponent.BP_PlayerPawnAttributesComponent_C.AnimNotify_FinishGatherHandIK
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerPawnAttributesComponent_C::AnimNotify_FinishGatherHandIK()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPawnAttributesComponent_C", "AnimNotify_FinishGatherHandIK");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerPawnAttributesComponent.BP_PlayerPawnAttributesComponent_C.AnimNotify_DoInteractionLogic
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerPawnAttributesComponent_C::AnimNotify_DoInteractionLogic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPawnAttributesComponent_C", "AnimNotify_DoInteractionLogic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerPawnAttributesComponent.BP_PlayerPawnAttributesComponent_C.AnimNotify_DetachInteractiveActor
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerPawnAttributesComponent_C::AnimNotify_DetachInteractiveActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPawnAttributesComponent_C", "AnimNotify_DetachInteractiveActor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerPawnAttributesComponent.BP_PlayerPawnAttributesComponent_C.AnimNotify_AttachInteractiveActor
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerPawnAttributesComponent_C::AnimNotify_AttachInteractiveActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPawnAttributesComponent_C", "AnimNotify_AttachInteractiveActor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerPawnAttributesComponent.BP_PlayerPawnAttributesComponent_C.GetModuleName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UBP_PlayerPawnAttributesComponent_C::GetModuleName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPawnAttributesComponent_C", "GetModuleName");

	Params::BP_PlayerPawnAttributesComponent_C_GetModuleName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

