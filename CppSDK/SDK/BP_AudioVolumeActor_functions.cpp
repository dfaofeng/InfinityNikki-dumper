#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AudioVolumeActor

#include "Basic.hpp"

#include "BP_AudioVolumeActor_classes.hpp"
#include "BP_AudioVolumeActor_parameters.hpp"


namespace SDK
{

// Function BP_AudioVolumeActor.BP_AudioVolumeActor_C.ExecuteUbergraph_BP_AudioVolumeActor
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AudioVolumeActor_C::ExecuteUbergraph_BP_AudioVolumeActor(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioVolumeActor_C", "ExecuteUbergraph_BP_AudioVolumeActor");

	Params::BP_AudioVolumeActor_C_ExecuteUbergraph_BP_AudioVolumeActor Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioVolumeActor.BP_AudioVolumeActor_C.PostServerInit
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bServer                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AudioVolumeActor_C::PostServerInit(bool bServer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioVolumeActor_C", "PostServerInit");

	Params::BP_AudioVolumeActor_C_PostServerInit Parms{};

	Parms.bServer = bServer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioVolumeActor.BP_AudioVolumeActor_C.ServerInit
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bServer                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AudioVolumeActor_C::ServerInit(bool bServer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioVolumeActor_C", "ServerInit");

	Params::BP_AudioVolumeActor_C_ServerInit Parms{};

	Parms.bServer = bServer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioVolumeActor.BP_AudioVolumeActor_C.SetEnable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewEnable                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AudioVolumeActor_C::SetEnable(bool bNewEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioVolumeActor_C", "SetEnable");

	Params::BP_AudioVolumeActor_C_SetEnable Parms{};

	Parms.bNewEnable = bNewEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioVolumeActor.BP_AudioVolumeActor_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AudioVolumeActor_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioVolumeActor_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AudioVolumeActor.BP_AudioVolumeActor_C.GetModuleName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString ABP_AudioVolumeActor_C::GetModuleName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioVolumeActor_C", "GetModuleName");

	Params::BP_AudioVolumeActor_C_GetModuleName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

