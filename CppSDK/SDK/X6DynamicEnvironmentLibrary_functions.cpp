#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: X6DynamicEnvironmentLibrary

#include "Basic.hpp"

#include "X6DynamicEnvironmentLibrary_classes.hpp"
#include "X6DynamicEnvironmentLibrary_parameters.hpp"


namespace SDK
{

// Function X6DynamicEnvironmentLibrary.X6DynamicEnvironmentLibrary_C.UpdateWeatherInternal
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Context                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FS_WeatherState&           weatherParams                                          (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UX6DynamicEnvironmentLibrary_C::UpdateWeatherInternal(class UObject* Context, const struct FS_WeatherState& weatherParams, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6DynamicEnvironmentLibrary_C", "UpdateWeatherInternal");

	Params::X6DynamicEnvironmentLibrary_C_UpdateWeatherInternal Parms{};

	Parms.Context = Context;
	Parms.weatherParams = std::move(weatherParams);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function X6DynamicEnvironmentLibrary.X6DynamicEnvironmentLibrary_C.UpdateWeather
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Context                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const class FString&                    WeatherName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Immediate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DayNight                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Intensity                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  TransitionTime                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  StartBlendAlpha                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UX6DynamicEnvironmentLibrary_C::UpdateWeather(class UObject* Context, const class FString& WeatherName, bool Immediate, int32 DayNight, int32 Intensity, double TransitionTime, double StartBlendAlpha, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6DynamicEnvironmentLibrary_C", "UpdateWeather");

	Params::X6DynamicEnvironmentLibrary_C_UpdateWeather Parms{};

	Parms.Context = Context;
	Parms.WeatherName = std::move(WeatherName);
	Parms.Immediate = Immediate;
	Parms.DayNight = DayNight;
	Parms.Intensity = Intensity;
	Parms.TransitionTime = TransitionTime;
	Parms.StartBlendAlpha = StartBlendAlpha;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function X6DynamicEnvironmentLibrary.X6DynamicEnvironmentLibrary_C.ToggleStreetLamps
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Context                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    On                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UX6DynamicEnvironmentLibrary_C::ToggleStreetLamps(class UObject* Context, bool On, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6DynamicEnvironmentLibrary_C", "ToggleStreetLamps");

	Params::X6DynamicEnvironmentLibrary_C_ToggleStreetLamps Parms{};

	Parms.Context = Context;
	Parms.On = On;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function X6DynamicEnvironmentLibrary.X6DynamicEnvironmentLibrary_C.TODLevelBeginPlay
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Context                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FTimeStamp*                      TimeConfigInfo                                         (Parm, OutParm, NoDestructor)

void UX6DynamicEnvironmentLibrary_C::TODLevelBeginPlay(class UObject* Context, class UObject* __WorldContext, struct FTimeStamp* TimeConfigInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6DynamicEnvironmentLibrary_C", "TODLevelBeginPlay");

	Params::X6DynamicEnvironmentLibrary_C_TODLevelBeginPlay Parms{};

	Parms.Context = Context;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (TimeConfigInfo != nullptr)
		*TimeConfigInfo = std::move(Parms.TimeConfigInfo);
}


// Function X6DynamicEnvironmentLibrary.X6DynamicEnvironmentLibrary_C.SetWindForce
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FLinearColor&              Force                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UX6DynamicEnvironmentLibrary_C::SetWindForce(const struct FLinearColor& Force, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6DynamicEnvironmentLibrary_C", "SetWindForce");

	Params::X6DynamicEnvironmentLibrary_C_SetWindForce Parms{};

	Parms.Force = std::move(Force);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function X6DynamicEnvironmentLibrary.X6DynamicEnvironmentLibrary_C.SetWindCfg
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FWeatherBaseLerpConfig&    cfg                                                    (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UX6DynamicEnvironmentLibrary_C::SetWindCfg(const struct FWeatherBaseLerpConfig& cfg, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6DynamicEnvironmentLibrary_C", "SetWindCfg");

	Params::X6DynamicEnvironmentLibrary_C_SetWindCfg Parms{};

	Parms.cfg = std::move(cfg);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function X6DynamicEnvironmentLibrary.X6DynamicEnvironmentLibrary_C.SetWeatherCfg
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FWeatherBaseLerpConfig&    cfg                                                    (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UX6DynamicEnvironmentLibrary_C::SetWeatherCfg(const struct FWeatherBaseLerpConfig& cfg, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6DynamicEnvironmentLibrary_C", "SetWeatherCfg");

	Params::X6DynamicEnvironmentLibrary_C_SetWeatherCfg Parms{};

	Parms.cfg = std::move(cfg);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function X6DynamicEnvironmentLibrary.X6DynamicEnvironmentLibrary_C.SetRegionLampsPercent
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Context                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Percent                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UX6DynamicEnvironmentLibrary_C::SetRegionLampsPercent(class UObject* Context, double Percent, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6DynamicEnvironmentLibrary_C", "SetRegionLampsPercent");

	Params::X6DynamicEnvironmentLibrary_C_SetRegionLampsPercent Parms{};

	Parms.Context = Context;
	Parms.Percent = Percent;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function X6DynamicEnvironmentLibrary.X6DynamicEnvironmentLibrary_C.ResumeWind
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Context                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UX6DynamicEnvironmentLibrary_C::ResumeWind(class UObject* Context, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6DynamicEnvironmentLibrary_C", "ResumeWind");

	Params::X6DynamicEnvironmentLibrary_C_ResumeWind Parms{};

	Parms.Context = Context;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function X6DynamicEnvironmentLibrary.X6DynamicEnvironmentLibrary_C.GetWindIntensity
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          Context                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// Enum_WindIntensity*                     Intensity                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UX6DynamicEnvironmentLibrary_C::GetWindIntensity(class UObject* Context, class UObject* __WorldContext, Enum_WindIntensity* Intensity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6DynamicEnvironmentLibrary_C", "GetWindIntensity");

	Params::X6DynamicEnvironmentLibrary_C_GetWindIntensity Parms{};

	Parms.Context = Context;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Intensity != nullptr)
		*Intensity = Parms.Intensity;
}


// Function X6DynamicEnvironmentLibrary.X6DynamicEnvironmentLibrary_C.GetWindForce
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor*                    Force                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UX6DynamicEnvironmentLibrary_C::GetWindForce(class UObject* __WorldContext, struct FLinearColor* Force)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6DynamicEnvironmentLibrary_C", "GetWindForce");

	Params::X6DynamicEnvironmentLibrary_C_GetWindForce Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Force != nullptr)
		*Force = std::move(Parms.Force);
}


// Function X6DynamicEnvironmentLibrary.X6DynamicEnvironmentLibrary_C.GetWindDirectionVec
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          Context                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         Direction                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UX6DynamicEnvironmentLibrary_C::GetWindDirectionVec(class UObject* Context, class UObject* __WorldContext, struct FVector* Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6DynamicEnvironmentLibrary_C", "GetWindDirectionVec");

	Params::X6DynamicEnvironmentLibrary_C_GetWindDirectionVec Parms{};

	Parms.Context = Context;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Direction != nullptr)
		*Direction = std::move(Parms.Direction);
}


// Function X6DynamicEnvironmentLibrary.X6DynamicEnvironmentLibrary_C.GetWindDirection
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          Context                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// Enum_WindDirection*                     WindDirection                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UX6DynamicEnvironmentLibrary_C::GetWindDirection(class UObject* Context, class UObject* __WorldContext, Enum_WindDirection* WindDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6DynamicEnvironmentLibrary_C", "GetWindDirection");

	Params::X6DynamicEnvironmentLibrary_C_GetWindDirection Parms{};

	Parms.Context = Context;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (WindDirection != nullptr)
		*WindDirection = Parms.WindDirection;
}


// Function X6DynamicEnvironmentLibrary.X6DynamicEnvironmentLibrary_C.GetWeatherType
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          Context                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// Enum_WeatherType*                       WeatherType                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UX6DynamicEnvironmentLibrary_C::GetWeatherType(class UObject* Context, class UObject* __WorldContext, Enum_WeatherType* WeatherType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6DynamicEnvironmentLibrary_C", "GetWeatherType");

	Params::X6DynamicEnvironmentLibrary_C_GetWeatherType Parms{};

	Parms.Context = Context;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (WeatherType != nullptr)
		*WeatherType = Parms.WeatherType;
}


// Function X6DynamicEnvironmentLibrary.X6DynamicEnvironmentLibrary_C.GetWeatherIntensity
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          Context                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// Enum_WeatherIntensity*                  Intensity                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UX6DynamicEnvironmentLibrary_C::GetWeatherIntensity(class UObject* Context, class UObject* __WorldContext, Enum_WeatherIntensity* Intensity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6DynamicEnvironmentLibrary_C", "GetWeatherIntensity");

	Params::X6DynamicEnvironmentLibrary_C_GetWeatherIntensity Parms{};

	Parms.Context = Context;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Intensity != nullptr)
		*Intensity = Parms.Intensity;
}


// Function X6DynamicEnvironmentLibrary.X6DynamicEnvironmentLibrary_C.GetNikkiBodyTemperatureType
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          Context                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// Enum_TemperatureBodyType*               Type                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UX6DynamicEnvironmentLibrary_C::GetNikkiBodyTemperatureType(class UObject* Context, class UObject* __WorldContext, Enum_TemperatureBodyType* Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6DynamicEnvironmentLibrary_C", "GetNikkiBodyTemperatureType");

	Params::X6DynamicEnvironmentLibrary_C_GetNikkiBodyTemperatureType Parms{};

	Parms.Context = Context;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Type != nullptr)
		*Type = Parms.Type;
}


// Function X6DynamicEnvironmentLibrary.X6DynamicEnvironmentLibrary_C.GetEnvTemperature
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          Context                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32*                                  Temperature                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UX6DynamicEnvironmentLibrary_C::GetEnvTemperature(class UObject* Context, class UObject* __WorldContext, int32* Temperature)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6DynamicEnvironmentLibrary_C", "GetEnvTemperature");

	Params::X6DynamicEnvironmentLibrary_C_GetEnvTemperature Parms{};

	Parms.Context = Context;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Temperature != nullptr)
		*Temperature = Parms.Temperature;
}


// Function X6DynamicEnvironmentLibrary.X6DynamicEnvironmentLibrary_C.CheckUseServerTime
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Context                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UX6DynamicEnvironmentLibrary_C::CheckUseServerTime(class UObject* Context, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6DynamicEnvironmentLibrary_C", "CheckUseServerTime");

	Params::X6DynamicEnvironmentLibrary_C_CheckUseServerTime Parms{};

	Parms.Context = Context;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function X6DynamicEnvironmentLibrary.X6DynamicEnvironmentLibrary_C.ChangeWindLocal
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Context                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// Enum_WindDirection                      WindDirection                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// Enum_WindIntensity                      windIntensity                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UX6DynamicEnvironmentLibrary_C::ChangeWindLocal(class UObject* Context, Enum_WindDirection WindDirection, Enum_WindIntensity windIntensity, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6DynamicEnvironmentLibrary_C", "ChangeWindLocal");

	Params::X6DynamicEnvironmentLibrary_C_ChangeWindLocal Parms{};

	Parms.Context = Context;
	Parms.WindDirection = WindDirection;
	Parms.windIntensity = windIntensity;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function X6DynamicEnvironmentLibrary.X6DynamicEnvironmentLibrary_C.ChangeWeatherLocal
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Context                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// Enum_WeatherType                        WeatherType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// Enum_WeatherType                        WeatherIntensity                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Immediate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  TransitionTime                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UX6DynamicEnvironmentLibrary_C::ChangeWeatherLocal(class UObject* Context, Enum_WeatherType WeatherType, Enum_WeatherType WeatherIntensity, bool Immediate, double TransitionTime, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6DynamicEnvironmentLibrary_C", "ChangeWeatherLocal");

	Params::X6DynamicEnvironmentLibrary_C_ChangeWeatherLocal Parms{};

	Parms.Context = Context;
	Parms.WeatherType = WeatherType;
	Parms.WeatherIntensity = WeatherIntensity;
	Parms.Immediate = Immediate;
	Parms.TransitionTime = TransitionTime;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function X6DynamicEnvironmentLibrary.X6DynamicEnvironmentLibrary_C.ChangeFunctionalAtmosphereForScene
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_FunctionalAtmosphereType           Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    atOnce                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  TransitionTime                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UX6DynamicEnvironmentLibrary_C::ChangeFunctionalAtmosphereForScene(Enum_FunctionalAtmosphereType Type, bool atOnce, double TransitionTime, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6DynamicEnvironmentLibrary_C", "ChangeFunctionalAtmosphereForScene");

	Params::X6DynamicEnvironmentLibrary_C_ChangeFunctionalAtmosphereForScene Parms{};

	Parms.Type = Type;
	Parms.atOnce = atOnce;
	Parms.TransitionTime = TransitionTime;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function X6DynamicEnvironmentLibrary.X6DynamicEnvironmentLibrary_C.Change Weather Local by Name
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Context                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const class FString&                    WeatherName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// Enum_WeatherIntensity                   WeatherIntensity                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Immediate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  TransitionTime                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UX6DynamicEnvironmentLibrary_C::Change_Weather_Local_by_Name(class UObject* Context, const class FString& WeatherName, Enum_WeatherIntensity WeatherIntensity, bool Immediate, double TransitionTime, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6DynamicEnvironmentLibrary_C", "Change Weather Local by Name");

	Params::X6DynamicEnvironmentLibrary_C_Change_Weather_Local_by_Name Parms{};

	Parms.Context = Context;
	Parms.WeatherName = std::move(WeatherName);
	Parms.WeatherIntensity = WeatherIntensity;
	Parms.Immediate = Immediate;
	Parms.TransitionTime = TransitionTime;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function X6DynamicEnvironmentLibrary.X6DynamicEnvironmentLibrary_C.CancelFunctionalAtmosphereForScene
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    atOnce                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  TransitionTime                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UX6DynamicEnvironmentLibrary_C::CancelFunctionalAtmosphereForScene(bool atOnce, double TransitionTime, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6DynamicEnvironmentLibrary_C", "CancelFunctionalAtmosphereForScene");

	Params::X6DynamicEnvironmentLibrary_C_CancelFunctionalAtmosphereForScene Parms{};

	Parms.atOnce = atOnce;
	Parms.TransitionTime = TransitionTime;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}

}

