#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FEmotionPartBlendWeight

#include "Basic.hpp"


namespace SDK
{

// UserDefinedStruct FEmotionPartBlendWeight.FEmotionPartBlendWeight
// 0x0040 (0x0040 - 0x0000)
struct FFEmotionPartBlendWeight final
{
public:
	double                                        Brow_12_542E1F244145DE61C4C6D4BEB5B21252;          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        UpperLid_9_EF74E1E74BE9AC2E61495293BC6FE41D;       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LowerLid_10_942B55A74E702A8FDB73F3B239BA1C28;      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Cheek_13_E70A7F5641CD4018A0324C9D9F580927;         // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Face_14_16B7A3DB415F0FF410E60EB777C26AFB;          // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Nose_15_FA1DA67A4BB0D39D15944EB6E3DA10AE;          // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MouthRound_18_A13E231E46DB0B1DE7EC59A9A2013E3A;    // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Lip_19_C445C864404D754D1CE1BFB91A04064E;           // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FFEmotionPartBlendWeight) == 0x000008, "Wrong alignment on FFEmotionPartBlendWeight");
static_assert(sizeof(FFEmotionPartBlendWeight) == 0x000040, "Wrong size on FFEmotionPartBlendWeight");
static_assert(offsetof(FFEmotionPartBlendWeight, Brow_12_542E1F244145DE61C4C6D4BEB5B21252) == 0x000000, "Member 'FFEmotionPartBlendWeight::Brow_12_542E1F244145DE61C4C6D4BEB5B21252' has a wrong offset!");
static_assert(offsetof(FFEmotionPartBlendWeight, UpperLid_9_EF74E1E74BE9AC2E61495293BC6FE41D) == 0x000008, "Member 'FFEmotionPartBlendWeight::UpperLid_9_EF74E1E74BE9AC2E61495293BC6FE41D' has a wrong offset!");
static_assert(offsetof(FFEmotionPartBlendWeight, LowerLid_10_942B55A74E702A8FDB73F3B239BA1C28) == 0x000010, "Member 'FFEmotionPartBlendWeight::LowerLid_10_942B55A74E702A8FDB73F3B239BA1C28' has a wrong offset!");
static_assert(offsetof(FFEmotionPartBlendWeight, Cheek_13_E70A7F5641CD4018A0324C9D9F580927) == 0x000018, "Member 'FFEmotionPartBlendWeight::Cheek_13_E70A7F5641CD4018A0324C9D9F580927' has a wrong offset!");
static_assert(offsetof(FFEmotionPartBlendWeight, Face_14_16B7A3DB415F0FF410E60EB777C26AFB) == 0x000020, "Member 'FFEmotionPartBlendWeight::Face_14_16B7A3DB415F0FF410E60EB777C26AFB' has a wrong offset!");
static_assert(offsetof(FFEmotionPartBlendWeight, Nose_15_FA1DA67A4BB0D39D15944EB6E3DA10AE) == 0x000028, "Member 'FFEmotionPartBlendWeight::Nose_15_FA1DA67A4BB0D39D15944EB6E3DA10AE' has a wrong offset!");
static_assert(offsetof(FFEmotionPartBlendWeight, MouthRound_18_A13E231E46DB0B1DE7EC59A9A2013E3A) == 0x000030, "Member 'FFEmotionPartBlendWeight::MouthRound_18_A13E231E46DB0B1DE7EC59A9A2013E3A' has a wrong offset!");
static_assert(offsetof(FFEmotionPartBlendWeight, Lip_19_C445C864404D754D1CE1BFB91A04064E) == 0x000038, "Member 'FFEmotionPartBlendWeight::Lip_19_C445C864404D754D1CE1BFB91A04064E' has a wrong offset!");

}

