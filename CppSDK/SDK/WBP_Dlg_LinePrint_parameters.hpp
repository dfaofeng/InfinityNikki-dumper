#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Dlg_LinePrint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_Dlg_LinePrint.WBP_Dlg_LinePrint_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_Dlg_LinePrint_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Dlg_LinePrint_C_Tick) == 0x000004, "Wrong alignment on WBP_Dlg_LinePrint_C_Tick");
static_assert(sizeof(WBP_Dlg_LinePrint_C_Tick) == 0x00003C, "Wrong size on WBP_Dlg_LinePrint_C_Tick");
static_assert(offsetof(WBP_Dlg_LinePrint_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_Dlg_LinePrint_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_Dlg_LinePrint_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_Dlg_LinePrint.WBP_Dlg_LinePrint_C.SetTextWrapInfo
// 0x0018 (0x0018 - 0x0000)
struct WBP_Dlg_LinePrint_C_SetTextWrapInfo final
{
public:
	bool                                          bAutoWrap;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        WrapTextAt;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_WrapTextAt_ImplicitCast;        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_WrapTextAt_ImplicitCast_1;      // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Dlg_LinePrint_C_SetTextWrapInfo) == 0x000008, "Wrong alignment on WBP_Dlg_LinePrint_C_SetTextWrapInfo");
static_assert(sizeof(WBP_Dlg_LinePrint_C_SetTextWrapInfo) == 0x000018, "Wrong size on WBP_Dlg_LinePrint_C_SetTextWrapInfo");
static_assert(offsetof(WBP_Dlg_LinePrint_C_SetTextWrapInfo, bAutoWrap) == 0x000000, "Member 'WBP_Dlg_LinePrint_C_SetTextWrapInfo::bAutoWrap' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_SetTextWrapInfo, WrapTextAt) == 0x000008, "Member 'WBP_Dlg_LinePrint_C_SetTextWrapInfo::WrapTextAt' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_SetTextWrapInfo, K2Node_VariableSet_WrapTextAt_ImplicitCast) == 0x000010, "Member 'WBP_Dlg_LinePrint_C_SetTextWrapInfo::K2Node_VariableSet_WrapTextAt_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_SetTextWrapInfo, K2Node_VariableSet_WrapTextAt_ImplicitCast_1) == 0x000014, "Member 'WBP_Dlg_LinePrint_C_SetTextWrapInfo::K2Node_VariableSet_WrapTextAt_ImplicitCast_1' has a wrong offset!");

// Function WBP_Dlg_LinePrint.WBP_Dlg_LinePrint_C.ReplaceSpecifics
// 0x0088 (0x0088 - 0x0000)
struct WBP_Dlg_LinePrint_C_ReplaceSpecifics final
{
public:
	class FString                                 InStr;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 OutStr;                                            // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 ToStr;                                             // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 InString;                                          // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCurrentLanguage_ReturnValue;           // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Left_ReturnValue;                         // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue_1;                    // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Dlg_LinePrint_C_ReplaceSpecifics) == 0x000008, "Wrong alignment on WBP_Dlg_LinePrint_C_ReplaceSpecifics");
static_assert(sizeof(WBP_Dlg_LinePrint_C_ReplaceSpecifics) == 0x000088, "Wrong size on WBP_Dlg_LinePrint_C_ReplaceSpecifics");
static_assert(offsetof(WBP_Dlg_LinePrint_C_ReplaceSpecifics, InStr) == 0x000000, "Member 'WBP_Dlg_LinePrint_C_ReplaceSpecifics::InStr' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_ReplaceSpecifics, OutStr) == 0x000010, "Member 'WBP_Dlg_LinePrint_C_ReplaceSpecifics::OutStr' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_ReplaceSpecifics, ToStr) == 0x000020, "Member 'WBP_Dlg_LinePrint_C_ReplaceSpecifics::ToStr' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_ReplaceSpecifics, InString) == 0x000030, "Member 'WBP_Dlg_LinePrint_C_ReplaceSpecifics::InString' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_ReplaceSpecifics, CallFunc_GetCurrentLanguage_ReturnValue) == 0x000040, "Member 'WBP_Dlg_LinePrint_C_ReplaceSpecifics::CallFunc_GetCurrentLanguage_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_ReplaceSpecifics, CallFunc_Replace_ReturnValue) == 0x000050, "Member 'WBP_Dlg_LinePrint_C_ReplaceSpecifics::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_ReplaceSpecifics, CallFunc_Left_ReturnValue) == 0x000060, "Member 'WBP_Dlg_LinePrint_C_ReplaceSpecifics::CallFunc_Left_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_ReplaceSpecifics, K2Node_SwitchString_CmpSuccess) == 0x000070, "Member 'WBP_Dlg_LinePrint_C_ReplaceSpecifics::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_ReplaceSpecifics, CallFunc_Replace_ReturnValue_1) == 0x000078, "Member 'WBP_Dlg_LinePrint_C_ReplaceSpecifics::CallFunc_Replace_ReturnValue_1' has a wrong offset!");

// Function WBP_Dlg_LinePrint.WBP_Dlg_LinePrint_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Dlg_LinePrint_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Dlg_LinePrint_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Dlg_LinePrint_C_PreConstruct");
static_assert(sizeof(WBP_Dlg_LinePrint_C_PreConstruct) == 0x000001, "Wrong size on WBP_Dlg_LinePrint_C_PreConstruct");
static_assert(offsetof(WBP_Dlg_LinePrint_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Dlg_LinePrint_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Dlg_LinePrint.WBP_Dlg_LinePrint_C.ExecuteUbergraph_WBP_Dlg_LinePrint
// 0x0080 (0x0080 - 0x0000)
struct WBP_Dlg_LinePrint_C_ExecuteUbergraph_WBP_Dlg_LinePrint final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0048(0x0010)()
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0068(0x0010)()
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Dlg_LinePrint_C_ExecuteUbergraph_WBP_Dlg_LinePrint) == 0x000008, "Wrong alignment on WBP_Dlg_LinePrint_C_ExecuteUbergraph_WBP_Dlg_LinePrint");
static_assert(sizeof(WBP_Dlg_LinePrint_C_ExecuteUbergraph_WBP_Dlg_LinePrint) == 0x000080, "Wrong size on WBP_Dlg_LinePrint_C_ExecuteUbergraph_WBP_Dlg_LinePrint");
static_assert(offsetof(WBP_Dlg_LinePrint_C_ExecuteUbergraph_WBP_Dlg_LinePrint, EntryPoint) == 0x000000, "Member 'WBP_Dlg_LinePrint_C_ExecuteUbergraph_WBP_Dlg_LinePrint::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_ExecuteUbergraph_WBP_Dlg_LinePrint, K2Node_Event_MyGeometry) == 0x000004, "Member 'WBP_Dlg_LinePrint_C_ExecuteUbergraph_WBP_Dlg_LinePrint::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_ExecuteUbergraph_WBP_Dlg_LinePrint, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'WBP_Dlg_LinePrint_C_ExecuteUbergraph_WBP_Dlg_LinePrint::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_ExecuteUbergraph_WBP_Dlg_LinePrint, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000040, "Member 'WBP_Dlg_LinePrint_C_ExecuteUbergraph_WBP_Dlg_LinePrint::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_ExecuteUbergraph_WBP_Dlg_LinePrint, CallFunc_Conv_StringToText_ReturnValue) == 0x000048, "Member 'WBP_Dlg_LinePrint_C_ExecuteUbergraph_WBP_Dlg_LinePrint::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_ExecuteUbergraph_WBP_Dlg_LinePrint, K2Node_Event_IsDesignTime) == 0x000058, "Member 'WBP_Dlg_LinePrint_C_ExecuteUbergraph_WBP_Dlg_LinePrint::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_ExecuteUbergraph_WBP_Dlg_LinePrint, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000059, "Member 'WBP_Dlg_LinePrint_C_ExecuteUbergraph_WBP_Dlg_LinePrint::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_ExecuteUbergraph_WBP_Dlg_LinePrint, CallFunc_Conv_StringToName_ReturnValue) == 0x00005C, "Member 'WBP_Dlg_LinePrint_C_ExecuteUbergraph_WBP_Dlg_LinePrint::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_ExecuteUbergraph_WBP_Dlg_LinePrint, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000068, "Member 'WBP_Dlg_LinePrint_C_ExecuteUbergraph_WBP_Dlg_LinePrint::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_ExecuteUbergraph_WBP_Dlg_LinePrint, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000078, "Member 'WBP_Dlg_LinePrint_C_ExecuteUbergraph_WBP_Dlg_LinePrint::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function WBP_Dlg_LinePrint.WBP_Dlg_LinePrint_C.CheckCurLanguageIsThai
// 0x0030 (0x0030 - 0x0000)
struct WBP_Dlg_LinePrint_C_CheckCurLanguageIsThai final
{
public:
	bool                                          bIsThai;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLanguage_ReturnValue;           // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Dlg_LinePrint_C_CheckCurLanguageIsThai) == 0x000008, "Wrong alignment on WBP_Dlg_LinePrint_C_CheckCurLanguageIsThai");
static_assert(sizeof(WBP_Dlg_LinePrint_C_CheckCurLanguageIsThai) == 0x000030, "Wrong size on WBP_Dlg_LinePrint_C_CheckCurLanguageIsThai");
static_assert(offsetof(WBP_Dlg_LinePrint_C_CheckCurLanguageIsThai, bIsThai) == 0x000000, "Member 'WBP_Dlg_LinePrint_C_CheckCurLanguageIsThai::bIsThai' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_CheckCurLanguageIsThai, CallFunc_GetCurrentLanguage_ReturnValue) == 0x000008, "Member 'WBP_Dlg_LinePrint_C_CheckCurLanguageIsThai::CallFunc_GetCurrentLanguage_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_CheckCurLanguageIsThai, CallFunc_GetSubstring_ReturnValue) == 0x000018, "Member 'WBP_Dlg_LinePrint_C_CheckCurLanguageIsThai::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_CheckCurLanguageIsThai, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000028, "Member 'WBP_Dlg_LinePrint_C_CheckCurLanguageIsThai::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function WBP_Dlg_LinePrint.WBP_Dlg_LinePrint_C.BP_SetWordSpeed
// 0x0008 (0x0008 - 0x0000)
struct WBP_Dlg_LinePrint_C_BP_SetWordSpeed final
{
public:
	double                                        Speed;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Dlg_LinePrint_C_BP_SetWordSpeed) == 0x000008, "Wrong alignment on WBP_Dlg_LinePrint_C_BP_SetWordSpeed");
static_assert(sizeof(WBP_Dlg_LinePrint_C_BP_SetWordSpeed) == 0x000008, "Wrong size on WBP_Dlg_LinePrint_C_BP_SetWordSpeed");
static_assert(offsetof(WBP_Dlg_LinePrint_C_BP_SetWordSpeed, Speed) == 0x000000, "Member 'WBP_Dlg_LinePrint_C_BP_SetWordSpeed::Speed' has a wrong offset!");

// Function WBP_Dlg_LinePrint.WBP_Dlg_LinePrint_C.BP_PrintWord
// 0x0020 (0x0020 - 0x0000)
struct WBP_Dlg_LinePrint_C_BP_PrintWord final
{
public:
	int32                                         TempTotalPrintLetterNum;                           // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         printNumber;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckCurLanguageIsThai_bIsThai;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Dlg_LinePrint_C_BP_PrintWord) == 0x000008, "Wrong alignment on WBP_Dlg_LinePrint_C_BP_PrintWord");
static_assert(sizeof(WBP_Dlg_LinePrint_C_BP_PrintWord) == 0x000020, "Wrong size on WBP_Dlg_LinePrint_C_BP_PrintWord");
static_assert(offsetof(WBP_Dlg_LinePrint_C_BP_PrintWord, TempTotalPrintLetterNum) == 0x000000, "Member 'WBP_Dlg_LinePrint_C_BP_PrintWord::TempTotalPrintLetterNum' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_BP_PrintWord, printNumber) == 0x000004, "Member 'WBP_Dlg_LinePrint_C_BP_PrintWord::printNumber' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_BP_PrintWord, CallFunc_CheckCurLanguageIsThai_bIsThai) == 0x000008, "Member 'WBP_Dlg_LinePrint_C_BP_PrintWord::CallFunc_CheckCurLanguageIsThai_bIsThai' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_BP_PrintWord, CallFunc_Greater_IntInt_ReturnValue) == 0x000009, "Member 'WBP_Dlg_LinePrint_C_BP_PrintWord::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_BP_PrintWord, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_Dlg_LinePrint_C_BP_PrintWord::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_BP_PrintWord, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'WBP_Dlg_LinePrint_C_BP_PrintWord::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_BP_PrintWord, CallFunc_FTrunc_ReturnValue) == 0x000018, "Member 'WBP_Dlg_LinePrint_C_BP_PrintWord::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_BP_PrintWord, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_Dlg_LinePrint_C_BP_PrintWord::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_Dlg_LinePrint.WBP_Dlg_LinePrint_C.BP_PrintAll
// 0x0001 (0x0001 - 0x0000)
struct WBP_Dlg_LinePrint_C_BP_PrintAll final
{
public:
	bool                                          CallFunc_CheckCurLanguageIsThai_bIsThai;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Dlg_LinePrint_C_BP_PrintAll) == 0x000001, "Wrong alignment on WBP_Dlg_LinePrint_C_BP_PrintAll");
static_assert(sizeof(WBP_Dlg_LinePrint_C_BP_PrintAll) == 0x000001, "Wrong size on WBP_Dlg_LinePrint_C_BP_PrintAll");
static_assert(offsetof(WBP_Dlg_LinePrint_C_BP_PrintAll, CallFunc_CheckCurLanguageIsThai_bIsThai) == 0x000000, "Member 'WBP_Dlg_LinePrint_C_BP_PrintAll::CallFunc_CheckCurLanguageIsThai_bIsThai' has a wrong offset!");

// Function WBP_Dlg_LinePrint.WBP_Dlg_LinePrint_C.BP_PreprocessLineText
// 0x0108 (0x0108 - 0x0000)
struct WBP_Dlg_LinePrint_C_BP_PreprocessLineText final
{
public:
	bool                                          bLetterBoxUI;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SpeakerTag;                                        // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   SpeakerName;                                       // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   SpeakerLine;                                       // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   OutText;                                           // 0x0030(0x0010)(Parm, OutParm)
	class FText                                   StringFormat;                                      // 0x0040(0x0010)(Edit, BlueprintVisible)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0098(0x0048)(HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F8(0x0010)()
};
static_assert(alignof(WBP_Dlg_LinePrint_C_BP_PreprocessLineText) == 0x000008, "Wrong alignment on WBP_Dlg_LinePrint_C_BP_PreprocessLineText");
static_assert(sizeof(WBP_Dlg_LinePrint_C_BP_PreprocessLineText) == 0x000108, "Wrong size on WBP_Dlg_LinePrint_C_BP_PreprocessLineText");
static_assert(offsetof(WBP_Dlg_LinePrint_C_BP_PreprocessLineText, bLetterBoxUI) == 0x000000, "Member 'WBP_Dlg_LinePrint_C_BP_PreprocessLineText::bLetterBoxUI' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_BP_PreprocessLineText, SpeakerTag) == 0x000004, "Member 'WBP_Dlg_LinePrint_C_BP_PreprocessLineText::SpeakerTag' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_BP_PreprocessLineText, SpeakerName) == 0x000010, "Member 'WBP_Dlg_LinePrint_C_BP_PreprocessLineText::SpeakerName' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_BP_PreprocessLineText, SpeakerLine) == 0x000020, "Member 'WBP_Dlg_LinePrint_C_BP_PreprocessLineText::SpeakerLine' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_BP_PreprocessLineText, OutText) == 0x000030, "Member 'WBP_Dlg_LinePrint_C_BP_PreprocessLineText::OutText' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_BP_PreprocessLineText, StringFormat) == 0x000040, "Member 'WBP_Dlg_LinePrint_C_BP_PreprocessLineText::StringFormat' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_BP_PreprocessLineText, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'WBP_Dlg_LinePrint_C_BP_PreprocessLineText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_BP_PreprocessLineText, K2Node_MakeStruct_FormatArgumentData_1) == 0x000098, "Member 'WBP_Dlg_LinePrint_C_BP_PreprocessLineText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_BP_PreprocessLineText, K2Node_SwitchName_CmpSuccess) == 0x0000E0, "Member 'WBP_Dlg_LinePrint_C_BP_PreprocessLineText::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_BP_PreprocessLineText, K2Node_MakeArray_Array) == 0x0000E8, "Member 'WBP_Dlg_LinePrint_C_BP_PreprocessLineText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_BP_PreprocessLineText, CallFunc_Format_ReturnValue) == 0x0000F8, "Member 'WBP_Dlg_LinePrint_C_BP_PreprocessLineText::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_Dlg_LinePrint.WBP_Dlg_LinePrint_C.BP_InitText
// 0x0050 (0x0050 - 0x0000)
struct WBP_Dlg_LinePrint_C_BP_InitText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ReplaceSpecifics_OutStr;                  // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0038(0x0010)()
	bool                                          CallFunc_CheckCurLanguageIsThai_bIsThai;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_InitRichText_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Dlg_LinePrint_C_BP_InitText) == 0x000008, "Wrong alignment on WBP_Dlg_LinePrint_C_BP_InitText");
static_assert(sizeof(WBP_Dlg_LinePrint_C_BP_InitText) == 0x000050, "Wrong size on WBP_Dlg_LinePrint_C_BP_InitText");
static_assert(offsetof(WBP_Dlg_LinePrint_C_BP_InitText, Text) == 0x000000, "Member 'WBP_Dlg_LinePrint_C_BP_InitText::Text' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_BP_InitText, CallFunc_Conv_TextToString_ReturnValue) == 0x000010, "Member 'WBP_Dlg_LinePrint_C_BP_InitText::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_BP_InitText, CallFunc_ReplaceSpecifics_OutStr) == 0x000020, "Member 'WBP_Dlg_LinePrint_C_BP_InitText::CallFunc_ReplaceSpecifics_OutStr' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_BP_InitText, CallFunc_Len_ReturnValue) == 0x000030, "Member 'WBP_Dlg_LinePrint_C_BP_InitText::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_BP_InitText, CallFunc_Conv_StringToText_ReturnValue) == 0x000038, "Member 'WBP_Dlg_LinePrint_C_BP_InitText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_BP_InitText, CallFunc_CheckCurLanguageIsThai_bIsThai) == 0x000048, "Member 'WBP_Dlg_LinePrint_C_BP_InitText::CallFunc_CheckCurLanguageIsThai_bIsThai' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_BP_InitText, CallFunc_InitRichText_ReturnValue) == 0x00004C, "Member 'WBP_Dlg_LinePrint_C_BP_InitText::CallFunc_InitRichText_ReturnValue' has a wrong offset!");

// Function WBP_Dlg_LinePrint.WBP_Dlg_LinePrint_C.BP_GetTextInfo
// 0x0038 (0x0038 - 0x0000)
struct WBP_Dlg_LinePrint_C_BP_GetTextInfo final
{
public:
	class FText                                   OutPutText;                                        // 0x0000(0x0010)(Parm, OutParm)
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0010(0x0010)()
	class FText                                   CallFunc_GetText_ReturnValue_1;                    // 0x0020(0x0010)()
	bool                                          CallFunc_CheckCurLanguageIsThai_bIsThai;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Dlg_LinePrint_C_BP_GetTextInfo) == 0x000008, "Wrong alignment on WBP_Dlg_LinePrint_C_BP_GetTextInfo");
static_assert(sizeof(WBP_Dlg_LinePrint_C_BP_GetTextInfo) == 0x000038, "Wrong size on WBP_Dlg_LinePrint_C_BP_GetTextInfo");
static_assert(offsetof(WBP_Dlg_LinePrint_C_BP_GetTextInfo, OutPutText) == 0x000000, "Member 'WBP_Dlg_LinePrint_C_BP_GetTextInfo::OutPutText' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_BP_GetTextInfo, CallFunc_GetText_ReturnValue) == 0x000010, "Member 'WBP_Dlg_LinePrint_C_BP_GetTextInfo::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_BP_GetTextInfo, CallFunc_GetText_ReturnValue_1) == 0x000020, "Member 'WBP_Dlg_LinePrint_C_BP_GetTextInfo::CallFunc_GetText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_LinePrint_C_BP_GetTextInfo, CallFunc_CheckCurLanguageIsThai_bIsThai) == 0x000030, "Member 'WBP_Dlg_LinePrint_C_BP_GetTextInfo::CallFunc_CheckCurLanguageIsThai_bIsThai' has a wrong offset!");

// Function WBP_Dlg_LinePrint.WBP_Dlg_LinePrint_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct WBP_Dlg_LinePrint_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Dlg_LinePrint_C_GetModuleName) == 0x000008, "Wrong alignment on WBP_Dlg_LinePrint_C_GetModuleName");
static_assert(sizeof(WBP_Dlg_LinePrint_C_GetModuleName) == 0x000010, "Wrong size on WBP_Dlg_LinePrint_C_GetModuleName");
static_assert(offsetof(WBP_Dlg_LinePrint_C_GetModuleName, ReturnValue) == 0x000000, "Member 'WBP_Dlg_LinePrint_C_GetModuleName::ReturnValue' has a wrong offset!");

}

