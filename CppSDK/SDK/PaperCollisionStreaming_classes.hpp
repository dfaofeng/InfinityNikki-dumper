#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PaperCollisionStreaming

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class PaperCollisionStreaming.PaperCollisionStreamingMgr
// 0x02C8 (0x02F0 - 0x0028)
class alignas(0x10) UPaperCollisionStreamingMgr final : public UObject
{
public:
	uint8                                         Pad_28[0x248];                                     // 0x0028(0x0248)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UObject*, int32>                   BodySetupPackage;                                  // 0x0270(0x0050)(NativeAccessSpecifierPrivate)
	TSubclassOf<class UUserWidget>                CollisionDebugUIWidgetClass;                       // 0x02C0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                            CollisionDebugUIWidget;                            // 0x02C8(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2D0[0x20];                                     // 0x02D0(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UPaperCollisionStreamingMgr* GetInstance();

	bool CheckOwnerLevelLoaded(struct FVector* ActorLocation);
	void EnterBoostMode();
	void LeaveBoostMode();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PaperCollisionStreamingMgr">();
	}
	static class UPaperCollisionStreamingMgr* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPaperCollisionStreamingMgr>();
	}
};
static_assert(alignof(UPaperCollisionStreamingMgr) == 0x000010, "Wrong alignment on UPaperCollisionStreamingMgr");
static_assert(sizeof(UPaperCollisionStreamingMgr) == 0x0002F0, "Wrong size on UPaperCollisionStreamingMgr");
static_assert(offsetof(UPaperCollisionStreamingMgr, BodySetupPackage) == 0x000270, "Member 'UPaperCollisionStreamingMgr::BodySetupPackage' has a wrong offset!");
static_assert(offsetof(UPaperCollisionStreamingMgr, CollisionDebugUIWidgetClass) == 0x0002C0, "Member 'UPaperCollisionStreamingMgr::CollisionDebugUIWidgetClass' has a wrong offset!");
static_assert(offsetof(UPaperCollisionStreamingMgr, CollisionDebugUIWidget) == 0x0002C8, "Member 'UPaperCollisionStreamingMgr::CollisionDebugUIWidget' has a wrong offset!");

// Class PaperCollisionStreaming.SplineMeshArrayActor
// 0x0018 (0x03C0 - 0x03A8)
class ASplineMeshArrayActor final : public AActor
{
public:
	TArray<class UStaticMeshComponent*>           SplineMeshComponents;                              // 0x03A8(0x0010)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class USceneComponent*                        SceneRootComponent;                                // 0x03B8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SplineMeshArrayActor">();
	}
	static class ASplineMeshArrayActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASplineMeshArrayActor>();
	}
};
static_assert(alignof(ASplineMeshArrayActor) == 0x000008, "Wrong alignment on ASplineMeshArrayActor");
static_assert(sizeof(ASplineMeshArrayActor) == 0x0003C0, "Wrong size on ASplineMeshArrayActor");
static_assert(offsetof(ASplineMeshArrayActor, SplineMeshComponents) == 0x0003A8, "Member 'ASplineMeshArrayActor::SplineMeshComponents' has a wrong offset!");
static_assert(offsetof(ASplineMeshArrayActor, SceneRootComponent) == 0x0003B8, "Member 'ASplineMeshArrayActor::SceneRootComponent' has a wrong offset!");

}

