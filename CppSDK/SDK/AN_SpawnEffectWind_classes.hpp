#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AN_SpawnEffectWind

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass AN_SpawnEffectWind.AN_SpawnEffectWind_C
// 0x0028 (0x0060 - 0x0038)
class UAN_SpawnEffectWind_C final : public UAnimNotify
{
public:
	class UBP_EffectWindDataAsset_C*              WindDataAsset;                                     // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        StaticSpeed;                                       // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Size;                                              // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Intensity;                                         // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 WindActorClass;                                    // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	class FString GetModuleName() const;
	bool Received_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, const struct FAnimNotifyEventReference& EventReference) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AN_SpawnEffectWind_C">();
	}
	static class UAN_SpawnEffectWind_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAN_SpawnEffectWind_C>();
	}
};
static_assert(alignof(UAN_SpawnEffectWind_C) == 0x000008, "Wrong alignment on UAN_SpawnEffectWind_C");
static_assert(sizeof(UAN_SpawnEffectWind_C) == 0x000060, "Wrong size on UAN_SpawnEffectWind_C");
static_assert(offsetof(UAN_SpawnEffectWind_C, WindDataAsset) == 0x000038, "Member 'UAN_SpawnEffectWind_C::WindDataAsset' has a wrong offset!");
static_assert(offsetof(UAN_SpawnEffectWind_C, StaticSpeed) == 0x000040, "Member 'UAN_SpawnEffectWind_C::StaticSpeed' has a wrong offset!");
static_assert(offsetof(UAN_SpawnEffectWind_C, Size) == 0x000048, "Member 'UAN_SpawnEffectWind_C::Size' has a wrong offset!");
static_assert(offsetof(UAN_SpawnEffectWind_C, Intensity) == 0x000050, "Member 'UAN_SpawnEffectWind_C::Intensity' has a wrong offset!");
static_assert(offsetof(UAN_SpawnEffectWind_C, WindActorClass) == 0x000058, "Member 'UAN_SpawnEffectWind_C::WindActorClass' has a wrong offset!");

}

