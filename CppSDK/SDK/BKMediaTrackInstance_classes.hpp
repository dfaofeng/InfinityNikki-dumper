#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BKMediaTrackInstance

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "X6CustomizableSequencerTracks_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BKMediaTrackInstance.BKMediaTrackInstance_C
// 0x0050 (0x00A0 - 0x0050)
class UBKMediaTrackInstance_C final : public UX6SequencerTrackInstanceBP
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0050(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBinkMediaPlayer*                       BinkMediaPlayer;                                   // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FString                                 URL;                                               // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class AActor>                  PostProcessHelpBlackActor;                         // 0x0070(0x0028)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, HasGetValueTypeHash)
	struct FTimerHandle                           SetEnableWorldRenderingHandle;                     // 0x0098(0x0008)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void UnluaLog(const class FString& LogString);
	void SetEnableWorldRenderingHandleEvent();
	void SetEnableWorldRendering(bool bEnable);
	void SetBinkMediaPlayer(class UBinkMediaPlayer* BinkMediaPlayer_0);
	void PostSetBinkMediaPlayer();
	void OnInitialize_Interal();
	void OnDestroyed_Interal();
	void K2_OnInputAdded(const struct FX6SequencerTrackInstanceInput& Input);
	void K2_OnInitialize();
	void K2_OnDestroyed();
	void GetNikkiSkin(int32* Skin);
	void ExecuteUbergraph_BKMediaTrackInstance(int32 EntryPoint);

	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BKMediaTrackInstance_C">();
	}
	static class UBKMediaTrackInstance_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBKMediaTrackInstance_C>();
	}
};
static_assert(alignof(UBKMediaTrackInstance_C) == 0x000008, "Wrong alignment on UBKMediaTrackInstance_C");
static_assert(sizeof(UBKMediaTrackInstance_C) == 0x0000A0, "Wrong size on UBKMediaTrackInstance_C");
static_assert(offsetof(UBKMediaTrackInstance_C, UberGraphFrame) == 0x000050, "Member 'UBKMediaTrackInstance_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBKMediaTrackInstance_C, BinkMediaPlayer) == 0x000058, "Member 'UBKMediaTrackInstance_C::BinkMediaPlayer' has a wrong offset!");
static_assert(offsetof(UBKMediaTrackInstance_C, URL) == 0x000060, "Member 'UBKMediaTrackInstance_C::URL' has a wrong offset!");
static_assert(offsetof(UBKMediaTrackInstance_C, PostProcessHelpBlackActor) == 0x000070, "Member 'UBKMediaTrackInstance_C::PostProcessHelpBlackActor' has a wrong offset!");
static_assert(offsetof(UBKMediaTrackInstance_C, SetEnableWorldRenderingHandle) == 0x000098, "Member 'UBKMediaTrackInstance_C::SetEnableWorldRenderingHandle' has a wrong offset!");

}

