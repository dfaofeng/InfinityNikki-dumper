#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PaperCollisionStreaming

#include "Basic.hpp"

#include "PaperCollisionStreaming_classes.hpp"
#include "PaperCollisionStreaming_parameters.hpp"


namespace SDK
{

// Function PaperCollisionStreaming.PaperCollisionStreamingMgr.GetInstance
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPaperCollisionStreamingMgr*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPaperCollisionStreamingMgr* UPaperCollisionStreamingMgr::GetInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PaperCollisionStreamingMgr", "GetInstance");

	Params::PaperCollisionStreamingMgr_GetInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperCollisionStreaming.PaperCollisionStreamingMgr.CheckOwnerLevelLoaded
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                         ActorLocation                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPaperCollisionStreamingMgr::CheckOwnerLevelLoaded(struct FVector* ActorLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperCollisionStreamingMgr", "CheckOwnerLevelLoaded");

	Params::PaperCollisionStreamingMgr_CheckOwnerLevelLoaded Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ActorLocation != nullptr)
		*ActorLocation = std::move(Parms.ActorLocation);

	return Parms.ReturnValue;
}


// Function PaperCollisionStreaming.PaperCollisionStreamingMgr.EnterBoostMode
// (Final, Native, Public, BlueprintCallable)

void UPaperCollisionStreamingMgr::EnterBoostMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperCollisionStreamingMgr", "EnterBoostMode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PaperCollisionStreaming.PaperCollisionStreamingMgr.LeaveBoostMode
// (Final, Native, Public, BlueprintCallable)

void UPaperCollisionStreamingMgr::LeaveBoostMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperCollisionStreamingMgr", "LeaveBoostMode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

