#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SplineTrackComponent

#include "Basic.hpp"

#include "F_SplineTrackKeyFrameData_structs.hpp"
#include "X6Game_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Enum_SplineTrackState_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.AddKeyFrameDataBlend
// 0x00A0 (0x00A0 - 0x0000)
struct BP_SplineTrackComponent_C_AddKeyFrameDataBlend final
{
public:
	struct FF_SplineTrackKeyFrameData             OldData;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NewSpeed;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BlendTime;                                         // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_SplineTrackKeyFrameData             NewData;                                           // 0x0028(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_SplineTrackKeyFrameData             Data;                                              // 0x0040(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_SplineTrackKeyFrameData             K2Node_MakeStruct_F_SplineTrackKeyFrameData;       // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_AddKeyFrameDataBlend) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_AddKeyFrameDataBlend");
static_assert(sizeof(BP_SplineTrackComponent_C_AddKeyFrameDataBlend) == 0x0000A0, "Wrong size on BP_SplineTrackComponent_C_AddKeyFrameDataBlend");
static_assert(offsetof(BP_SplineTrackComponent_C_AddKeyFrameDataBlend, OldData) == 0x000000, "Member 'BP_SplineTrackComponent_C_AddKeyFrameDataBlend::OldData' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AddKeyFrameDataBlend, NewSpeed) == 0x000018, "Member 'BP_SplineTrackComponent_C_AddKeyFrameDataBlend::NewSpeed' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AddKeyFrameDataBlend, BlendTime) == 0x000020, "Member 'BP_SplineTrackComponent_C_AddKeyFrameDataBlend::BlendTime' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AddKeyFrameDataBlend, NewData) == 0x000028, "Member 'BP_SplineTrackComponent_C_AddKeyFrameDataBlend::NewData' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AddKeyFrameDataBlend, Data) == 0x000040, "Member 'BP_SplineTrackComponent_C_AddKeyFrameDataBlend::Data' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AddKeyFrameDataBlend, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000058, "Member 'BP_SplineTrackComponent_C_AddKeyFrameDataBlend::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AddKeyFrameDataBlend, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000060, "Member 'BP_SplineTrackComponent_C_AddKeyFrameDataBlend::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AddKeyFrameDataBlend, CallFunc_Array_Add_ReturnValue) == 0x000068, "Member 'BP_SplineTrackComponent_C_AddKeyFrameDataBlend::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AddKeyFrameDataBlend, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000070, "Member 'BP_SplineTrackComponent_C_AddKeyFrameDataBlend::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AddKeyFrameDataBlend, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000078, "Member 'BP_SplineTrackComponent_C_AddKeyFrameDataBlend::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AddKeyFrameDataBlend, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000080, "Member 'BP_SplineTrackComponent_C_AddKeyFrameDataBlend::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AddKeyFrameDataBlend, K2Node_MakeStruct_F_SplineTrackKeyFrameData) == 0x000088, "Member 'BP_SplineTrackComponent_C_AddKeyFrameDataBlend::K2Node_MakeStruct_F_SplineTrackKeyFrameData' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.AddKeyFrameDataConst
// 0x0090 (0x0090 - 0x0000)
struct BP_SplineTrackComponent_C_AddKeyFrameDataConst final
{
public:
	struct FF_SplineTrackKeyFrameData             OldData;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        EndDistance;                                       // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_SplineTrackKeyFrameData             NewData;                                           // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_SplineTrackKeyFrameData             Data;                                              // 0x0038(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_SplineTrackKeyFrameData             K2Node_MakeStruct_F_SplineTrackKeyFrameData;       // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_AddKeyFrameDataConst) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_AddKeyFrameDataConst");
static_assert(sizeof(BP_SplineTrackComponent_C_AddKeyFrameDataConst) == 0x000090, "Wrong size on BP_SplineTrackComponent_C_AddKeyFrameDataConst");
static_assert(offsetof(BP_SplineTrackComponent_C_AddKeyFrameDataConst, OldData) == 0x000000, "Member 'BP_SplineTrackComponent_C_AddKeyFrameDataConst::OldData' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AddKeyFrameDataConst, EndDistance) == 0x000018, "Member 'BP_SplineTrackComponent_C_AddKeyFrameDataConst::EndDistance' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AddKeyFrameDataConst, NewData) == 0x000020, "Member 'BP_SplineTrackComponent_C_AddKeyFrameDataConst::NewData' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AddKeyFrameDataConst, Data) == 0x000038, "Member 'BP_SplineTrackComponent_C_AddKeyFrameDataConst::Data' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AddKeyFrameDataConst, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_SplineTrackComponent_C_AddKeyFrameDataConst::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AddKeyFrameDataConst, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000058, "Member 'BP_SplineTrackComponent_C_AddKeyFrameDataConst::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AddKeyFrameDataConst, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000060, "Member 'BP_SplineTrackComponent_C_AddKeyFrameDataConst::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AddKeyFrameDataConst, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000068, "Member 'BP_SplineTrackComponent_C_AddKeyFrameDataConst::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AddKeyFrameDataConst, K2Node_MakeStruct_F_SplineTrackKeyFrameData) == 0x000070, "Member 'BP_SplineTrackComponent_C_AddKeyFrameDataConst::K2Node_MakeStruct_F_SplineTrackKeyFrameData' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AddKeyFrameDataConst, CallFunc_Array_Add_ReturnValue) == 0x000088, "Member 'BP_SplineTrackComponent_C_AddKeyFrameDataConst::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.AddKeyFrameDataStay
// 0x0078 (0x0078 - 0x0000)
struct BP_SplineTrackComponent_C_AddKeyFrameDataStay final
{
public:
	struct FF_SplineTrackKeyFrameData             OldData;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        StayTime;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_SplineTrackKeyFrameData             NewData;                                           // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_SplineTrackKeyFrameData             Data;                                              // 0x0038(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_SplineTrackKeyFrameData             K2Node_MakeStruct_F_SplineTrackKeyFrameData;       // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_AddKeyFrameDataStay) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_AddKeyFrameDataStay");
static_assert(sizeof(BP_SplineTrackComponent_C_AddKeyFrameDataStay) == 0x000078, "Wrong size on BP_SplineTrackComponent_C_AddKeyFrameDataStay");
static_assert(offsetof(BP_SplineTrackComponent_C_AddKeyFrameDataStay, OldData) == 0x000000, "Member 'BP_SplineTrackComponent_C_AddKeyFrameDataStay::OldData' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AddKeyFrameDataStay, StayTime) == 0x000018, "Member 'BP_SplineTrackComponent_C_AddKeyFrameDataStay::StayTime' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AddKeyFrameDataStay, NewData) == 0x000020, "Member 'BP_SplineTrackComponent_C_AddKeyFrameDataStay::NewData' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AddKeyFrameDataStay, Data) == 0x000038, "Member 'BP_SplineTrackComponent_C_AddKeyFrameDataStay::Data' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AddKeyFrameDataStay, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_SplineTrackComponent_C_AddKeyFrameDataStay::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AddKeyFrameDataStay, K2Node_MakeStruct_F_SplineTrackKeyFrameData) == 0x000058, "Member 'BP_SplineTrackComponent_C_AddKeyFrameDataStay::K2Node_MakeStruct_F_SplineTrackKeyFrameData' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AddKeyFrameDataStay, CallFunc_Array_Add_ReturnValue) == 0x000070, "Member 'BP_SplineTrackComponent_C_AddKeyFrameDataStay::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.AlignToInitPosition
// 0x0630 (0x0630 - 0x0000)
struct BP_SplineTrackComponent_C_AlignToInitPosition final
{
public:
	struct FTransform                             TempWorldTransform;                                // 0x0000(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0xE];                                       // 0x0062(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0070(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x00D0(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_GetRotationAtSplineInputKey_ReturnValue;  // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetRotationAtSplinePoint_ReturnValue;     // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0220(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0318(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_411[0x7];                                      // 0x0411(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLocationAtSplineInputKey_ReturnValue;  // 0x0418(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_431[0x7];                                      // 0x0431(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_1;     // 0x0438(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult_1;     // 0x0530(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue_1;        // 0x0628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_AlignToInitPosition) == 0x000010, "Wrong alignment on BP_SplineTrackComponent_C_AlignToInitPosition");
static_assert(sizeof(BP_SplineTrackComponent_C_AlignToInitPosition) == 0x000630, "Wrong size on BP_SplineTrackComponent_C_AlignToInitPosition");
static_assert(offsetof(BP_SplineTrackComponent_C_AlignToInitPosition, TempWorldTransform) == 0x000000, "Member 'BP_SplineTrackComponent_C_AlignToInitPosition::TempWorldTransform' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AlignToInitPosition, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_SplineTrackComponent_C_AlignToInitPosition::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AlignToInitPosition, CallFunc_IsValid_ReturnValue_1) == 0x000061, "Member 'BP_SplineTrackComponent_C_AlignToInitPosition::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AlignToInitPosition, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000070, "Member 'BP_SplineTrackComponent_C_AlignToInitPosition::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AlignToInitPosition, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x0000D0, "Member 'BP_SplineTrackComponent_C_AlignToInitPosition::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AlignToInitPosition, CallFunc_GetRotationAtSplineInputKey_ReturnValue) == 0x0001C8, "Member 'BP_SplineTrackComponent_C_AlignToInitPosition::CallFunc_GetRotationAtSplineInputKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AlignToInitPosition, CallFunc_GetRotationAtSplinePoint_ReturnValue) == 0x0001E0, "Member 'BP_SplineTrackComponent_C_AlignToInitPosition::CallFunc_GetRotationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AlignToInitPosition, CallFunc_GetOwner_ReturnValue) == 0x0001F8, "Member 'BP_SplineTrackComponent_C_AlignToInitPosition::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AlignToInitPosition, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x000200, "Member 'BP_SplineTrackComponent_C_AlignToInitPosition::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AlignToInitPosition, CallFunc_GetOwner_ReturnValue_1) == 0x000218, "Member 'BP_SplineTrackComponent_C_AlignToInitPosition::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AlignToInitPosition, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000220, "Member 'BP_SplineTrackComponent_C_AlignToInitPosition::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AlignToInitPosition, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000318, "Member 'BP_SplineTrackComponent_C_AlignToInitPosition::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AlignToInitPosition, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000410, "Member 'BP_SplineTrackComponent_C_AlignToInitPosition::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AlignToInitPosition, CallFunc_GetLocationAtSplineInputKey_ReturnValue) == 0x000418, "Member 'BP_SplineTrackComponent_C_AlignToInitPosition::CallFunc_GetLocationAtSplineInputKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AlignToInitPosition, K2Node_SwitchEnum_CmpSuccess) == 0x000430, "Member 'BP_SplineTrackComponent_C_AlignToInitPosition::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AlignToInitPosition, CallFunc_K2_SetWorldLocation_SweepHitResult_1) == 0x000438, "Member 'BP_SplineTrackComponent_C_AlignToInitPosition::CallFunc_K2_SetWorldLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AlignToInitPosition, CallFunc_K2_SetActorLocation_SweepHitResult_1) == 0x000530, "Member 'BP_SplineTrackComponent_C_AlignToInitPosition::CallFunc_K2_SetActorLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AlignToInitPosition, CallFunc_K2_SetActorLocation_ReturnValue_1) == 0x000628, "Member 'BP_SplineTrackComponent_C_AlignToInitPosition::CallFunc_K2_SetActorLocation_ReturnValue_1' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.AlmostArriveNextPoint
// 0x0060 (0x0060 - 0x0000)
struct BP_SplineTrackComponent_C_AlmostArriveNextPoint final
{
public:
	double                                        DeltaTime_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAlmostArrive;                                     // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_IntInt_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Less_DoubleDouble_B_ImplicitCast;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_AlmostArriveNextPoint) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_AlmostArriveNextPoint");
static_assert(sizeof(BP_SplineTrackComponent_C_AlmostArriveNextPoint) == 0x000060, "Wrong size on BP_SplineTrackComponent_C_AlmostArriveNextPoint");
static_assert(offsetof(BP_SplineTrackComponent_C_AlmostArriveNextPoint, DeltaTime_0) == 0x000000, "Member 'BP_SplineTrackComponent_C_AlmostArriveNextPoint::DeltaTime_0' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AlmostArriveNextPoint, bAlmostArrive) == 0x000008, "Member 'BP_SplineTrackComponent_C_AlmostArriveNextPoint::bAlmostArrive' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AlmostArriveNextPoint, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x00000C, "Member 'BP_SplineTrackComponent_C_AlmostArriveNextPoint::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AlmostArriveNextPoint, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'BP_SplineTrackComponent_C_AlmostArriveNextPoint::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AlmostArriveNextPoint, CallFunc_InRange_IntInt_ReturnValue) == 0x000014, "Member 'BP_SplineTrackComponent_C_AlmostArriveNextPoint::CallFunc_InRange_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AlmostArriveNextPoint, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue) == 0x000018, "Member 'BP_SplineTrackComponent_C_AlmostArriveNextPoint::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AlmostArriveNextPoint, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_SplineTrackComponent_C_AlmostArriveNextPoint::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AlmostArriveNextPoint, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_SplineTrackComponent_C_AlmostArriveNextPoint::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AlmostArriveNextPoint, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_SplineTrackComponent_C_AlmostArriveNextPoint::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AlmostArriveNextPoint, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1) == 0x000034, "Member 'BP_SplineTrackComponent_C_AlmostArriveNextPoint::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AlmostArriveNextPoint, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'BP_SplineTrackComponent_C_AlmostArriveNextPoint::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AlmostArriveNextPoint, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'BP_SplineTrackComponent_C_AlmostArriveNextPoint::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AlmostArriveNextPoint, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_SplineTrackComponent_C_AlmostArriveNextPoint::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AlmostArriveNextPoint, CallFunc_Less_DoubleDouble_B_ImplicitCast) == 0x000050, "Member 'BP_SplineTrackComponent_C_AlmostArriveNextPoint::CallFunc_Less_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_AlmostArriveNextPoint, CallFunc_Greater_DoubleDouble_B_ImplicitCast) == 0x000058, "Member 'BP_SplineTrackComponent_C_AlmostArriveNextPoint::CallFunc_Greater_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.BP_ForceSetStartTime
// 0x0008 (0x0008 - 0x0000)
struct BP_SplineTrackComponent_C_BP_ForceSetStartTime final
{
public:
	double                                        NewStartTime;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_BP_ForceSetStartTime) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_BP_ForceSetStartTime");
static_assert(sizeof(BP_SplineTrackComponent_C_BP_ForceSetStartTime) == 0x000008, "Wrong size on BP_SplineTrackComponent_C_BP_ForceSetStartTime");
static_assert(offsetof(BP_SplineTrackComponent_C_BP_ForceSetStartTime, NewStartTime) == 0x000000, "Member 'BP_SplineTrackComponent_C_BP_ForceSetStartTime::NewStartTime' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.BP_IsMultiPlayerModeAndEnableNetSync
// 0x0003 (0x0003 - 0x0000)
struct BP_SplineTrackComponent_C_BP_IsMultiPlayerModeAndEnableNetSync final
{
public:
	bool                                          bYes;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMultiPlayerMode_ret;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_BP_IsMultiPlayerModeAndEnableNetSync) == 0x000001, "Wrong alignment on BP_SplineTrackComponent_C_BP_IsMultiPlayerModeAndEnableNetSync");
static_assert(sizeof(BP_SplineTrackComponent_C_BP_IsMultiPlayerModeAndEnableNetSync) == 0x000003, "Wrong size on BP_SplineTrackComponent_C_BP_IsMultiPlayerModeAndEnableNetSync");
static_assert(offsetof(BP_SplineTrackComponent_C_BP_IsMultiPlayerModeAndEnableNetSync, bYes) == 0x000000, "Member 'BP_SplineTrackComponent_C_BP_IsMultiPlayerModeAndEnableNetSync::bYes' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_BP_IsMultiPlayerModeAndEnableNetSync, CallFunc_IsMultiPlayerMode_ret) == 0x000001, "Member 'BP_SplineTrackComponent_C_BP_IsMultiPlayerModeAndEnableNetSync::CallFunc_IsMultiPlayerMode_ret' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_BP_IsMultiPlayerModeAndEnableNetSync, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'BP_SplineTrackComponent_C_BP_IsMultiPlayerModeAndEnableNetSync::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.ChangeEffectLineColor
// 0x0090 (0x0090 - 0x0000)
struct BP_SplineTrackComponent_C_ChangeEffectLineColor final
{
public:
	struct FLinearColor                           NewColor;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               endPointRot;                                       // 0x0010(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               startPointRot;                                     // 0x0028(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                endPointLocation;                                  // 0x0040(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                startPointLocation;                                // 0x0058(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86[0x2];                                       // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_ChangeEffectLineColor) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_ChangeEffectLineColor");
static_assert(sizeof(BP_SplineTrackComponent_C_ChangeEffectLineColor) == 0x000090, "Wrong size on BP_SplineTrackComponent_C_ChangeEffectLineColor");
static_assert(offsetof(BP_SplineTrackComponent_C_ChangeEffectLineColor, NewColor) == 0x000000, "Member 'BP_SplineTrackComponent_C_ChangeEffectLineColor::NewColor' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ChangeEffectLineColor, endPointRot) == 0x000010, "Member 'BP_SplineTrackComponent_C_ChangeEffectLineColor::endPointRot' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ChangeEffectLineColor, startPointRot) == 0x000028, "Member 'BP_SplineTrackComponent_C_ChangeEffectLineColor::startPointRot' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ChangeEffectLineColor, endPointLocation) == 0x000040, "Member 'BP_SplineTrackComponent_C_ChangeEffectLineColor::endPointLocation' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ChangeEffectLineColor, startPointLocation) == 0x000058, "Member 'BP_SplineTrackComponent_C_ChangeEffectLineColor::startPointLocation' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ChangeEffectLineColor, Temp_int_Array_Index_Variable) == 0x000070, "Member 'BP_SplineTrackComponent_C_ChangeEffectLineColor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ChangeEffectLineColor, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'BP_SplineTrackComponent_C_ChangeEffectLineColor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ChangeEffectLineColor, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_SplineTrackComponent_C_ChangeEffectLineColor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ChangeEffectLineColor, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'BP_SplineTrackComponent_C_ChangeEffectLineColor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ChangeEffectLineColor, CallFunc_IsValid_ReturnValue) == 0x000084, "Member 'BP_SplineTrackComponent_C_ChangeEffectLineColor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ChangeEffectLineColor, CallFunc_Less_IntInt_ReturnValue) == 0x000085, "Member 'BP_SplineTrackComponent_C_ChangeEffectLineColor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ChangeEffectLineColor, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'BP_SplineTrackComponent_C_ChangeEffectLineColor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.ChangeEffectPointColor
// 0x0078 (0x0078 - 0x0000)
struct BP_SplineTrackComponent_C_ChangeEffectPointColor final
{
public:
	struct FLinearColor                           NewColor;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               endPointRot;                                       // 0x0010(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               startPointRot;                                     // 0x0028(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                endPointLocation;                                  // 0x0040(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                startPointLocation;                                // 0x0058(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_ChangeEffectPointColor) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_ChangeEffectPointColor");
static_assert(sizeof(BP_SplineTrackComponent_C_ChangeEffectPointColor) == 0x000078, "Wrong size on BP_SplineTrackComponent_C_ChangeEffectPointColor");
static_assert(offsetof(BP_SplineTrackComponent_C_ChangeEffectPointColor, NewColor) == 0x000000, "Member 'BP_SplineTrackComponent_C_ChangeEffectPointColor::NewColor' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ChangeEffectPointColor, endPointRot) == 0x000010, "Member 'BP_SplineTrackComponent_C_ChangeEffectPointColor::endPointRot' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ChangeEffectPointColor, startPointRot) == 0x000028, "Member 'BP_SplineTrackComponent_C_ChangeEffectPointColor::startPointRot' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ChangeEffectPointColor, endPointLocation) == 0x000040, "Member 'BP_SplineTrackComponent_C_ChangeEffectPointColor::endPointLocation' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ChangeEffectPointColor, startPointLocation) == 0x000058, "Member 'BP_SplineTrackComponent_C_ChangeEffectPointColor::startPointLocation' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ChangeEffectPointColor, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'BP_SplineTrackComponent_C_ChangeEffectPointColor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ChangeEffectPointColor, CallFunc_IsValid_ReturnValue_1) == 0x000071, "Member 'BP_SplineTrackComponent_C_ChangeEffectPointColor::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.CondtionallySetPlatformActorRotation
// 0x0140 (0x0140 - 0x0000)
struct BP_SplineTrackComponent_C_CondtionallySetPlatformActorRotation final
{
public:
	struct FRotator                               TargetRotation;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_TryConstrainRotationToPitch_OutRotation;  // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0038(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_CondtionallySetPlatformActorRotation) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_CondtionallySetPlatformActorRotation");
static_assert(sizeof(BP_SplineTrackComponent_C_CondtionallySetPlatformActorRotation) == 0x000140, "Wrong size on BP_SplineTrackComponent_C_CondtionallySetPlatformActorRotation");
static_assert(offsetof(BP_SplineTrackComponent_C_CondtionallySetPlatformActorRotation, TargetRotation) == 0x000000, "Member 'BP_SplineTrackComponent_C_CondtionallySetPlatformActorRotation::TargetRotation' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_CondtionallySetPlatformActorRotation, CallFunc_TryConstrainRotationToPitch_OutRotation) == 0x000018, "Member 'BP_SplineTrackComponent_C_CondtionallySetPlatformActorRotation::CallFunc_TryConstrainRotationToPitch_OutRotation' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_CondtionallySetPlatformActorRotation, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_SplineTrackComponent_C_CondtionallySetPlatformActorRotation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_CondtionallySetPlatformActorRotation, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000038, "Member 'BP_SplineTrackComponent_C_CondtionallySetPlatformActorRotation::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_CondtionallySetPlatformActorRotation, CallFunc_GetOwner_ReturnValue) == 0x000130, "Member 'BP_SplineTrackComponent_C_CondtionallySetPlatformActorRotation::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_CondtionallySetPlatformActorRotation, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000138, "Member 'BP_SplineTrackComponent_C_CondtionallySetPlatformActorRotation::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.DoesSegmentOverrideAnything
// 0x0024 (0x0024 - 0x0000)
struct BP_SplineTrackComponent_C_DoesSegmentOverrideAnything final
{
public:
	struct FTrackSegmentOverride                  Segment;                                           // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	bool                                          bOverrideSomething;                                // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_DoesSegmentOverrideAnything) == 0x000004, "Wrong alignment on BP_SplineTrackComponent_C_DoesSegmentOverrideAnything");
static_assert(sizeof(BP_SplineTrackComponent_C_DoesSegmentOverrideAnything) == 0x000024, "Wrong size on BP_SplineTrackComponent_C_DoesSegmentOverrideAnything");
static_assert(offsetof(BP_SplineTrackComponent_C_DoesSegmentOverrideAnything, Segment) == 0x000000, "Member 'BP_SplineTrackComponent_C_DoesSegmentOverrideAnything::Segment' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DoesSegmentOverrideAnything, bOverrideSomething) == 0x000020, "Member 'BP_SplineTrackComponent_C_DoesSegmentOverrideAnything::bOverrideSomething' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DoesSegmentOverrideAnything, CallFunc_BooleanOR_ReturnValue) == 0x000021, "Member 'BP_SplineTrackComponent_C_DoesSegmentOverrideAnything::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DoesSegmentOverrideAnything, CallFunc_BooleanOR_ReturnValue_1) == 0x000022, "Member 'BP_SplineTrackComponent_C_DoesSegmentOverrideAnything::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DoesSegmentOverrideAnything, CallFunc_BooleanOR_ReturnValue_2) == 0x000023, "Member 'BP_SplineTrackComponent_C_DoesSegmentOverrideAnything::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.DrawEffectLine
// 0x0028 (0x0028 - 0x0000)
struct BP_SplineTrackComponent_C_DrawEffectLine final
{
public:
	class UMaterialInstanceDynamic*               Mid;                                               // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   SplineMesh;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MyMaterialInstance;                                // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         curNextIndex;                                      // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurIndex;                                          // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_DrawEffectLine) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_DrawEffectLine");
static_assert(sizeof(BP_SplineTrackComponent_C_DrawEffectLine) == 0x000028, "Wrong size on BP_SplineTrackComponent_C_DrawEffectLine");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectLine, Mid) == 0x000000, "Member 'BP_SplineTrackComponent_C_DrawEffectLine::Mid' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectLine, SplineMesh) == 0x000008, "Member 'BP_SplineTrackComponent_C_DrawEffectLine::SplineMesh' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectLine, MyMaterialInstance) == 0x000010, "Member 'BP_SplineTrackComponent_C_DrawEffectLine::MyMaterialInstance' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectLine, curNextIndex) == 0x000018, "Member 'BP_SplineTrackComponent_C_DrawEffectLine::curNextIndex' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectLine, CurIndex) == 0x00001C, "Member 'BP_SplineTrackComponent_C_DrawEffectLine::CurIndex' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectLine, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_SplineTrackComponent_C_DrawEffectLine::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectLine, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'BP_SplineTrackComponent_C_DrawEffectLine::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.DrawEffectLineImpl
// 0x0240 (0x0240 - 0x0000)
struct BP_SplineTrackComponent_C_DrawEffectLineImpl final
{
public:
	class UMaterialInstanceDynamic*               Mid;                                               // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   SplineMesh;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MyMaterialInstance;                                // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         curNextIndex;                                      // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurIndex;                                          // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsClosedLoop_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   CallFunc_AddComponentByClass_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Conv_VectorToTransform_ReturnValue;       // 0x0060(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLeaveTangentAtSplinePoint_ReturnValue; // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAndTangentAtSplinePoint_Location; // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAndTangentAtSplinePoint_Tangent; // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAndTangentAtSplinePoint_Location_1; // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAndTangentAtSplinePoint_Tangent_1; // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESplinePointType                              CallFunc_GetSplinePointType_ReturnValue;           // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_182[0x6];                                      // 0x0182(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLeaveTangentAtSplinePoint_ReturnValue_1; // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetArriveTangentAtSplinePoint_ReturnValue; // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAndTangentAtSplinePoint_Location_2; // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAndTangentAtSplinePoint_Tangent_2; // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAndTangentAtSplinePoint_Location_3; // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAndTangentAtSplinePoint_Tangent_3; // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_DrawEffectLineImpl) == 0x000010, "Wrong alignment on BP_SplineTrackComponent_C_DrawEffectLineImpl");
static_assert(sizeof(BP_SplineTrackComponent_C_DrawEffectLineImpl) == 0x000240, "Wrong size on BP_SplineTrackComponent_C_DrawEffectLineImpl");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectLineImpl, Mid) == 0x000000, "Member 'BP_SplineTrackComponent_C_DrawEffectLineImpl::Mid' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectLineImpl, SplineMesh) == 0x000008, "Member 'BP_SplineTrackComponent_C_DrawEffectLineImpl::SplineMesh' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectLineImpl, MyMaterialInstance) == 0x000010, "Member 'BP_SplineTrackComponent_C_DrawEffectLineImpl::MyMaterialInstance' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectLineImpl, curNextIndex) == 0x000018, "Member 'BP_SplineTrackComponent_C_DrawEffectLineImpl::curNextIndex' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectLineImpl, CurIndex) == 0x00001C, "Member 'BP_SplineTrackComponent_C_DrawEffectLineImpl::CurIndex' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectLineImpl, CallFunc_IsClosedLoop_ReturnValue) == 0x000020, "Member 'BP_SplineTrackComponent_C_DrawEffectLineImpl::CallFunc_IsClosedLoop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectLineImpl, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000024, "Member 'BP_SplineTrackComponent_C_DrawEffectLineImpl::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectLineImpl, CallFunc_Subtract_IntInt_ReturnValue) == 0x000028, "Member 'BP_SplineTrackComponent_C_DrawEffectLineImpl::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectLineImpl, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00002C, "Member 'BP_SplineTrackComponent_C_DrawEffectLineImpl::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectLineImpl, CallFunc_SelectInt_ReturnValue) == 0x000030, "Member 'BP_SplineTrackComponent_C_DrawEffectLineImpl::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectLineImpl, CallFunc_IsValid_ReturnValue) == 0x000034, "Member 'BP_SplineTrackComponent_C_DrawEffectLineImpl::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectLineImpl, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x000038, "Member 'BP_SplineTrackComponent_C_DrawEffectLineImpl::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectLineImpl, CallFunc_AddComponentByClass_ReturnValue) == 0x000050, "Member 'BP_SplineTrackComponent_C_DrawEffectLineImpl::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectLineImpl, CallFunc_Conv_VectorToTransform_ReturnValue) == 0x000060, "Member 'BP_SplineTrackComponent_C_DrawEffectLineImpl::CallFunc_Conv_VectorToTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectLineImpl, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000C0, "Member 'BP_SplineTrackComponent_C_DrawEffectLineImpl::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectLineImpl, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000C8, "Member 'BP_SplineTrackComponent_C_DrawEffectLineImpl::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectLineImpl, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0000D0, "Member 'BP_SplineTrackComponent_C_DrawEffectLineImpl::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectLineImpl, CallFunc_SetStaticMesh_ReturnValue) == 0x0000D8, "Member 'BP_SplineTrackComponent_C_DrawEffectLineImpl::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectLineImpl, Temp_int_Variable) == 0x0000DC, "Member 'BP_SplineTrackComponent_C_DrawEffectLineImpl::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectLineImpl, CallFunc_Array_Add_ReturnValue) == 0x0000E0, "Member 'BP_SplineTrackComponent_C_DrawEffectLineImpl::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectLineImpl, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000E4, "Member 'BP_SplineTrackComponent_C_DrawEffectLineImpl::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectLineImpl, CallFunc_Add_IntInt_ReturnValue) == 0x0000E8, "Member 'BP_SplineTrackComponent_C_DrawEffectLineImpl::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectLineImpl, CallFunc_GetLeaveTangentAtSplinePoint_ReturnValue) == 0x0000F0, "Member 'BP_SplineTrackComponent_C_DrawEffectLineImpl::CallFunc_GetLeaveTangentAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectLineImpl, CallFunc_GetLocationAndTangentAtSplinePoint_Location) == 0x000108, "Member 'BP_SplineTrackComponent_C_DrawEffectLineImpl::CallFunc_GetLocationAndTangentAtSplinePoint_Location' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectLineImpl, CallFunc_GetLocationAndTangentAtSplinePoint_Tangent) == 0x000120, "Member 'BP_SplineTrackComponent_C_DrawEffectLineImpl::CallFunc_GetLocationAndTangentAtSplinePoint_Tangent' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectLineImpl, CallFunc_Add_VectorVector_ReturnValue) == 0x000138, "Member 'BP_SplineTrackComponent_C_DrawEffectLineImpl::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectLineImpl, CallFunc_GetLocationAndTangentAtSplinePoint_Location_1) == 0x000150, "Member 'BP_SplineTrackComponent_C_DrawEffectLineImpl::CallFunc_GetLocationAndTangentAtSplinePoint_Location_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectLineImpl, CallFunc_GetLocationAndTangentAtSplinePoint_Tangent_1) == 0x000168, "Member 'BP_SplineTrackComponent_C_DrawEffectLineImpl::CallFunc_GetLocationAndTangentAtSplinePoint_Tangent_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectLineImpl, CallFunc_GetSplinePointType_ReturnValue) == 0x000180, "Member 'BP_SplineTrackComponent_C_DrawEffectLineImpl::CallFunc_GetSplinePointType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectLineImpl, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000181, "Member 'BP_SplineTrackComponent_C_DrawEffectLineImpl::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectLineImpl, CallFunc_GetLeaveTangentAtSplinePoint_ReturnValue_1) == 0x000188, "Member 'BP_SplineTrackComponent_C_DrawEffectLineImpl::CallFunc_GetLeaveTangentAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectLineImpl, CallFunc_GetArriveTangentAtSplinePoint_ReturnValue) == 0x0001A0, "Member 'BP_SplineTrackComponent_C_DrawEffectLineImpl::CallFunc_GetArriveTangentAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectLineImpl, CallFunc_GetLocationAndTangentAtSplinePoint_Location_2) == 0x0001B8, "Member 'BP_SplineTrackComponent_C_DrawEffectLineImpl::CallFunc_GetLocationAndTangentAtSplinePoint_Location_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectLineImpl, CallFunc_GetLocationAndTangentAtSplinePoint_Tangent_2) == 0x0001D0, "Member 'BP_SplineTrackComponent_C_DrawEffectLineImpl::CallFunc_GetLocationAndTangentAtSplinePoint_Tangent_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectLineImpl, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0001E8, "Member 'BP_SplineTrackComponent_C_DrawEffectLineImpl::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectLineImpl, CallFunc_GetLocationAndTangentAtSplinePoint_Location_3) == 0x000200, "Member 'BP_SplineTrackComponent_C_DrawEffectLineImpl::CallFunc_GetLocationAndTangentAtSplinePoint_Location_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectLineImpl, CallFunc_GetLocationAndTangentAtSplinePoint_Tangent_3) == 0x000218, "Member 'BP_SplineTrackComponent_C_DrawEffectLineImpl::CallFunc_GetLocationAndTangentAtSplinePoint_Tangent_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectLineImpl, CallFunc_Add_IntInt_ReturnValue_1) == 0x000230, "Member 'BP_SplineTrackComponent_C_DrawEffectLineImpl::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.DrawEffectPoints
// 0x0068 (0x0068 - 0x0000)
struct BP_SplineTrackComponent_C_DrawEffectPoints final
{
public:
	struct FRotator                               endPointRot;                                       // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               startPointRot;                                     // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                endPointLocation;                                  // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                startPointLocation;                                // 0x0048(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_DrawEffectPoints) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_DrawEffectPoints");
static_assert(sizeof(BP_SplineTrackComponent_C_DrawEffectPoints) == 0x000068, "Wrong size on BP_SplineTrackComponent_C_DrawEffectPoints");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectPoints, endPointRot) == 0x000000, "Member 'BP_SplineTrackComponent_C_DrawEffectPoints::endPointRot' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectPoints, startPointRot) == 0x000018, "Member 'BP_SplineTrackComponent_C_DrawEffectPoints::startPointRot' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectPoints, endPointLocation) == 0x000030, "Member 'BP_SplineTrackComponent_C_DrawEffectPoints::endPointLocation' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectPoints, startPointLocation) == 0x000048, "Member 'BP_SplineTrackComponent_C_DrawEffectPoints::startPointLocation' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectPoints, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_SplineTrackComponent_C_DrawEffectPoints::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.DrawEffectPointsImpl
// 0x01C0 (0x01C0 - 0x0000)
struct BP_SplineTrackComponent_C_DrawEffectPointsImpl final
{
public:
	struct FRotator                               endPointRot;                                       // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               startPointRot;                                     // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                endPointLocation;                                  // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                startPointLocation;                                // 0x0048(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue_1;      // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetRotationAtSplinePoint_ReturnValue;     // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakRotIntoAxes_X;                       // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakRotIntoAxes_Y;                       // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakRotIntoAxes_Z;                       // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotationFromAxes_ReturnValue;         // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue_1;   // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetRotationAtSplinePoint_ReturnValue_1;   // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakRotIntoAxes_X_1;                     // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakRotIntoAxes_Y_1;                     // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakRotIntoAxes_Z_1;                     // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_NegateVector_ReturnValue;                 // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotationFromAxes_ReturnValue_1;       // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SplineTrackComponent_C_DrawEffectPointsImpl) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_DrawEffectPointsImpl");
static_assert(sizeof(BP_SplineTrackComponent_C_DrawEffectPointsImpl) == 0x0001C0, "Wrong size on BP_SplineTrackComponent_C_DrawEffectPointsImpl");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectPointsImpl, endPointRot) == 0x000000, "Member 'BP_SplineTrackComponent_C_DrawEffectPointsImpl::endPointRot' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectPointsImpl, startPointRot) == 0x000018, "Member 'BP_SplineTrackComponent_C_DrawEffectPointsImpl::startPointRot' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectPointsImpl, endPointLocation) == 0x000030, "Member 'BP_SplineTrackComponent_C_DrawEffectPointsImpl::endPointLocation' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectPointsImpl, startPointLocation) == 0x000048, "Member 'BP_SplineTrackComponent_C_DrawEffectPointsImpl::startPointLocation' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectPointsImpl, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_SplineTrackComponent_C_DrawEffectPointsImpl::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectPointsImpl, CallFunc_IsValid_ReturnValue_1) == 0x000061, "Member 'BP_SplineTrackComponent_C_DrawEffectPointsImpl::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectPointsImpl, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000068, "Member 'BP_SplineTrackComponent_C_DrawEffectPointsImpl::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectPointsImpl, CallFunc_SpawnSystemAtLocation_ReturnValue_1) == 0x000070, "Member 'BP_SplineTrackComponent_C_DrawEffectPointsImpl::CallFunc_SpawnSystemAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectPointsImpl, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x000078, "Member 'BP_SplineTrackComponent_C_DrawEffectPointsImpl::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectPointsImpl, CallFunc_GetRotationAtSplinePoint_ReturnValue) == 0x000090, "Member 'BP_SplineTrackComponent_C_DrawEffectPointsImpl::CallFunc_GetRotationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectPointsImpl, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x0000A8, "Member 'BP_SplineTrackComponent_C_DrawEffectPointsImpl::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectPointsImpl, CallFunc_BreakRotIntoAxes_X) == 0x0000B0, "Member 'BP_SplineTrackComponent_C_DrawEffectPointsImpl::CallFunc_BreakRotIntoAxes_X' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectPointsImpl, CallFunc_BreakRotIntoAxes_Y) == 0x0000C8, "Member 'BP_SplineTrackComponent_C_DrawEffectPointsImpl::CallFunc_BreakRotIntoAxes_Y' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectPointsImpl, CallFunc_BreakRotIntoAxes_Z) == 0x0000E0, "Member 'BP_SplineTrackComponent_C_DrawEffectPointsImpl::CallFunc_BreakRotIntoAxes_Z' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectPointsImpl, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000F8, "Member 'BP_SplineTrackComponent_C_DrawEffectPointsImpl::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectPointsImpl, CallFunc_MakeRotationFromAxes_ReturnValue) == 0x000100, "Member 'BP_SplineTrackComponent_C_DrawEffectPointsImpl::CallFunc_MakeRotationFromAxes_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectPointsImpl, CallFunc_GetLocationAtSplinePoint_ReturnValue_1) == 0x000118, "Member 'BP_SplineTrackComponent_C_DrawEffectPointsImpl::CallFunc_GetLocationAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectPointsImpl, CallFunc_GetRotationAtSplinePoint_ReturnValue_1) == 0x000130, "Member 'BP_SplineTrackComponent_C_DrawEffectPointsImpl::CallFunc_GetRotationAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectPointsImpl, CallFunc_BreakRotIntoAxes_X_1) == 0x000148, "Member 'BP_SplineTrackComponent_C_DrawEffectPointsImpl::CallFunc_BreakRotIntoAxes_X_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectPointsImpl, CallFunc_BreakRotIntoAxes_Y_1) == 0x000160, "Member 'BP_SplineTrackComponent_C_DrawEffectPointsImpl::CallFunc_BreakRotIntoAxes_Y_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectPointsImpl, CallFunc_BreakRotIntoAxes_Z_1) == 0x000178, "Member 'BP_SplineTrackComponent_C_DrawEffectPointsImpl::CallFunc_BreakRotIntoAxes_Z_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectPointsImpl, CallFunc_NegateVector_ReturnValue) == 0x000190, "Member 'BP_SplineTrackComponent_C_DrawEffectPointsImpl::CallFunc_NegateVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_DrawEffectPointsImpl, CallFunc_MakeRotationFromAxes_ReturnValue_1) == 0x0001A8, "Member 'BP_SplineTrackComponent_C_DrawEffectPointsImpl::CallFunc_MakeRotationFromAxes_ReturnValue_1' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.ExecuteUbergraph_BP_SplineTrackComponent
// 0x05F0 (0x05F0 - 0x0000)
struct BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      K2Node_DynamicCast_AsMaterial_Instance;            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_DynamicCast_AsNiagara_System;               // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 PointIndex)>             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bForward, int32 PointIndex)> K2Node_CreateDelegate_OutputDelegate_2;         // 0x0064(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0098(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00A8(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_UpdateAcceleration_NewAcceleration;       // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AlmostArriveNextPoint_bAlmostArrive;      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue; // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateSpeed_NewSpeed;                     // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateDistance_NewDistance;               // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_SplineTrackState                         CallFunc_UpdateState_NewState;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetSpeedOnSplineSegment_Speed;            // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldStayOnEnterSplineSegment_bStay;     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0xF];                                      // 0x0121(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0130(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0190(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_289[0x3];                                      // 0x0289(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_3;            // 0x028C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue_1;              // 0x02A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x02B8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x02C8(0x0048)(HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_4;            // 0x0310(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable_2;                            // 0x0328(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh;                  // 0x0330(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_2;                       // 0x0340(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetSpeedOnSplineSegment_Speed_1;          // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0351(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0352(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0353(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTrackActive_bActive;                    // 0x0354(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0355(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0356(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_357[0x1];                                      // 0x0357(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_PointIndex_1;                   // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C[0x4];                                      // 0x035C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0368(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x03B8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x03C8(0x0010)()
	bool                                          K2Node_CustomEvent_bForward;                       // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D9[0x3];                                      // 0x03D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_PointIndex;                     // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x03E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x03F8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0408(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0450(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue;              // 0x0498(0x0010)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x04A8(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x04B8(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0500(0x0010)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0510(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0520(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0530(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x0540(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_3;          // 0x0550(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0560(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x05A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x05B8(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_3;          // 0x05C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_DeltaTime_ImplicitCast;         // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_CurrentDistance_ImplicitCast;   // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent) == 0x000010, "Wrong alignment on BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent");
static_assert(sizeof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent) == 0x0005F0, "Wrong size on BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, EntryPoint) == 0x000000, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, K2Node_CustomEvent_Loaded_1) == 0x000018, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, Temp_object_Variable) == 0x000020, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, K2Node_DynamicCast_AsMaterial_Instance) == 0x000028, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::K2Node_DynamicCast_AsMaterial_Instance' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, K2Node_CustomEvent_Loaded) == 0x000038, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, Temp_object_Variable_1) == 0x000040, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, K2Node_DynamicCast_AsNiagara_System) == 0x000048, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::K2Node_DynamicCast_AsNiagara_System' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, K2Node_CreateDelegate_OutputDelegate_1) == 0x000054, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, K2Node_CreateDelegate_OutputDelegate_2) == 0x000064, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, CallFunc_GetOwner_ReturnValue) == 0x000078, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, CallFunc_GetObjectName_ReturnValue) == 0x000080, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, K2Node_Event_DeltaSeconds) == 0x000090, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, CallFunc_Conv_StringToText_ReturnValue) == 0x000098, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, K2Node_MakeStruct_FormatArgumentData) == 0x0000A8, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, CallFunc_UpdateAcceleration_NewAcceleration) == 0x0000F0, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::CallFunc_UpdateAcceleration_NewAcceleration' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, CallFunc_AlmostArriveNextPoint_bAlmostArrive) == 0x0000F8, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::CallFunc_AlmostArriveNextPoint_bAlmostArrive' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue) == 0x0000FC, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, CallFunc_UpdateSpeed_NewSpeed) == 0x000100, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::CallFunc_UpdateSpeed_NewSpeed' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, CallFunc_UpdateDistance_NewDistance) == 0x000108, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::CallFunc_UpdateDistance_NewDistance' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, CallFunc_UpdateState_NewState) == 0x000110, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::CallFunc_UpdateState_NewState' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, CallFunc_GetSpeedOnSplineSegment_Speed) == 0x000118, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::CallFunc_GetSpeedOnSplineSegment_Speed' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, CallFunc_ShouldStayOnEnterSplineSegment_bStay) == 0x000120, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::CallFunc_ShouldStayOnEnterSplineSegment_bStay' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000130, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000190, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000288, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, K2Node_CreateDelegate_OutputDelegate_3) == 0x00028C, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, CallFunc_GetOwner_ReturnValue_1) == 0x0002A0, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, CallFunc_GetObjectName_ReturnValue_1) == 0x0002A8, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::CallFunc_GetObjectName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0002B8, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, K2Node_MakeStruct_FormatArgumentData_1) == 0x0002C8, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, K2Node_CreateDelegate_OutputDelegate_4) == 0x000310, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, K2Node_Event_EndPlayReason) == 0x000320, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, Temp_object_Variable_2) == 0x000328, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, K2Node_DynamicCast_AsStatic_Mesh) == 0x000330, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::K2Node_DynamicCast_AsStatic_Mesh' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, K2Node_DynamicCast_bSuccess_2) == 0x000338, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, K2Node_CustomEvent_Loaded_2) == 0x000340, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::K2Node_CustomEvent_Loaded_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, CallFunc_GetSpeedOnSplineSegment_Speed_1) == 0x000348, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::CallFunc_GetSpeedOnSplineSegment_Speed_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000350, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, CallFunc_Not_PreBool_ReturnValue) == 0x000351, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, CallFunc_BooleanOR_ReturnValue) == 0x000352, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, CallFunc_BooleanOR_ReturnValue_1) == 0x000353, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, CallFunc_IsTrackActive_bActive) == 0x000354, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::CallFunc_IsTrackActive_bActive' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, CallFunc_BooleanAND_ReturnValue) == 0x000355, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, CallFunc_BooleanAND_ReturnValue_1) == 0x000356, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, K2Node_CustomEvent_PointIndex_1) == 0x000358, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::K2Node_CustomEvent_PointIndex_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000360, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, K2Node_MakeStruct_FormatArgumentData_2) == 0x000368, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x0003B0, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, K2Node_MakeArray_Array) == 0x0003B8, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, CallFunc_Format_ReturnValue) == 0x0003C8, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, K2Node_CustomEvent_bForward) == 0x0003D8, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::K2Node_CustomEvent_bForward' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, K2Node_CustomEvent_PointIndex) == 0x0003DC, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::K2Node_CustomEvent_PointIndex' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, CallFunc_Conv_TextToString_ReturnValue) == 0x0003E0, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x0003F0, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, CallFunc_Conv_StringToText_ReturnValue_2) == 0x0003F8, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, K2Node_MakeStruct_FormatArgumentData_3) == 0x000408, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, K2Node_MakeStruct_FormatArgumentData_4) == 0x000450, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, CallFunc_Conv_BoolToText_ReturnValue) == 0x000498, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::CallFunc_Conv_BoolToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, K2Node_MakeArray_Array_1) == 0x0004A8, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, K2Node_MakeStruct_FormatArgumentData_5) == 0x0004B8, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, CallFunc_Format_ReturnValue_1) == 0x000500, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, K2Node_MakeArray_Array_2) == 0x000510, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000520, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, CallFunc_Format_ReturnValue_2) == 0x000530, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, CallFunc_Conv_TextToString_ReturnValue_2) == 0x000540, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, CallFunc_Conv_StringToText_ReturnValue_3) == 0x000550, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::CallFunc_Conv_StringToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, K2Node_MakeStruct_FormatArgumentData_6) == 0x000560, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, K2Node_MakeArray_Array_3) == 0x0005A8, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, CallFunc_Format_ReturnValue_3) == 0x0005B8, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, CallFunc_Conv_TextToString_ReturnValue_3) == 0x0005C8, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::CallFunc_Conv_TextToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, K2Node_VariableSet_DeltaTime_ImplicitCast) == 0x0005D8, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::K2Node_VariableSet_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent, K2Node_VariableSet_CurrentDistance_ImplicitCast) == 0x0005E0, "Member 'BP_SplineTrackComponent_C_ExecuteUbergraph_BP_SplineTrackComponent::K2Node_VariableSet_CurrentDistance_ImplicitCast' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.FillSegmentOverrides
// 0x00AC (0x00AC - 0x0000)
struct BP_SplineTrackComponent_C_FillSegmentOverrides final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTrackSegmentOverride                  CallFunc_Map_Find_Value;                           // 0x0014(0x0020)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTrackSegmentOverride                  CallFunc_Map_Find_Value_1;                         // 0x003C(0x0020)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTrackSegmentOverride                  Temp_struct_Variable;                              // 0x0060(0x0020)(ConstParm, NoDestructor)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_1;    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTrackSegmentOverride                  Temp_struct_Variable_1;                            // 0x0084(0x0020)(ConstParm, NoDestructor)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_FillSegmentOverrides) == 0x000004, "Wrong alignment on BP_SplineTrackComponent_C_FillSegmentOverrides");
static_assert(sizeof(BP_SplineTrackComponent_C_FillSegmentOverrides) == 0x0000AC, "Wrong size on BP_SplineTrackComponent_C_FillSegmentOverrides");
static_assert(offsetof(BP_SplineTrackComponent_C_FillSegmentOverrides, Temp_int_Variable) == 0x000000, "Member 'BP_SplineTrackComponent_C_FillSegmentOverrides::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_FillSegmentOverrides, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_SplineTrackComponent_C_FillSegmentOverrides::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_FillSegmentOverrides, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000008, "Member 'BP_SplineTrackComponent_C_FillSegmentOverrides::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_FillSegmentOverrides, Temp_int_Variable_1) == 0x00000C, "Member 'BP_SplineTrackComponent_C_FillSegmentOverrides::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_FillSegmentOverrides, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'BP_SplineTrackComponent_C_FillSegmentOverrides::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_FillSegmentOverrides, CallFunc_Map_Find_Value) == 0x000014, "Member 'BP_SplineTrackComponent_C_FillSegmentOverrides::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_FillSegmentOverrides, CallFunc_Map_Find_ReturnValue) == 0x000034, "Member 'BP_SplineTrackComponent_C_FillSegmentOverrides::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_FillSegmentOverrides, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000035, "Member 'BP_SplineTrackComponent_C_FillSegmentOverrides::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_FillSegmentOverrides, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'BP_SplineTrackComponent_C_FillSegmentOverrides::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_FillSegmentOverrides, CallFunc_Map_Find_Value_1) == 0x00003C, "Member 'BP_SplineTrackComponent_C_FillSegmentOverrides::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_FillSegmentOverrides, CallFunc_Map_Find_ReturnValue_1) == 0x00005C, "Member 'BP_SplineTrackComponent_C_FillSegmentOverrides::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_FillSegmentOverrides, Temp_struct_Variable) == 0x000060, "Member 'BP_SplineTrackComponent_C_FillSegmentOverrides::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_FillSegmentOverrides, CallFunc_GetNumberOfSplinePoints_ReturnValue_1) == 0x000080, "Member 'BP_SplineTrackComponent_C_FillSegmentOverrides::CallFunc_GetNumberOfSplinePoints_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_FillSegmentOverrides, Temp_struct_Variable_1) == 0x000084, "Member 'BP_SplineTrackComponent_C_FillSegmentOverrides::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_FillSegmentOverrides, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000A4, "Member 'BP_SplineTrackComponent_C_FillSegmentOverrides::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_FillSegmentOverrides, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0000A8, "Member 'BP_SplineTrackComponent_C_FillSegmentOverrides::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.GetAccelerationByKetFrameTime
// 0x00B0 (0x00B0 - 0x0000)
struct BP_SplineTrackComponent_C_GetAccelerationByKetFrameTime final
{
public:
	double                                        Time;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Acceleration;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentAcceleration_local;                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TimeSinceLowerKey_local;                           // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_SplineTrackKeyFrameData             LowerData;                                         // 0x0020(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_SplineTrackKeyFrameData             UpperData;                                         // 0x0038(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_SplineTrackKeyFrameData             CallFunc_GetUpperKeyFrameDataByTime_NewParam;      // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_SplineTrackKeyFrameData             CallFunc_GetLowerKeyFrameDataByTime_NewParam;      // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_GetAccelerationByKetFrameTime) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_GetAccelerationByKetFrameTime");
static_assert(sizeof(BP_SplineTrackComponent_C_GetAccelerationByKetFrameTime) == 0x0000B0, "Wrong size on BP_SplineTrackComponent_C_GetAccelerationByKetFrameTime");
static_assert(offsetof(BP_SplineTrackComponent_C_GetAccelerationByKetFrameTime, Time) == 0x000000, "Member 'BP_SplineTrackComponent_C_GetAccelerationByKetFrameTime::Time' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetAccelerationByKetFrameTime, Acceleration) == 0x000008, "Member 'BP_SplineTrackComponent_C_GetAccelerationByKetFrameTime::Acceleration' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetAccelerationByKetFrameTime, CurrentAcceleration_local) == 0x000010, "Member 'BP_SplineTrackComponent_C_GetAccelerationByKetFrameTime::CurrentAcceleration_local' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetAccelerationByKetFrameTime, TimeSinceLowerKey_local) == 0x000018, "Member 'BP_SplineTrackComponent_C_GetAccelerationByKetFrameTime::TimeSinceLowerKey_local' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetAccelerationByKetFrameTime, LowerData) == 0x000020, "Member 'BP_SplineTrackComponent_C_GetAccelerationByKetFrameTime::LowerData' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetAccelerationByKetFrameTime, UpperData) == 0x000038, "Member 'BP_SplineTrackComponent_C_GetAccelerationByKetFrameTime::UpperData' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetAccelerationByKetFrameTime, CallFunc_GetUpperKeyFrameDataByTime_NewParam) == 0x000050, "Member 'BP_SplineTrackComponent_C_GetAccelerationByKetFrameTime::CallFunc_GetUpperKeyFrameDataByTime_NewParam' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetAccelerationByKetFrameTime, CallFunc_GetLowerKeyFrameDataByTime_NewParam) == 0x000068, "Member 'BP_SplineTrackComponent_C_GetAccelerationByKetFrameTime::CallFunc_GetLowerKeyFrameDataByTime_NewParam' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetAccelerationByKetFrameTime, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000080, "Member 'BP_SplineTrackComponent_C_GetAccelerationByKetFrameTime::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetAccelerationByKetFrameTime, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000088, "Member 'BP_SplineTrackComponent_C_GetAccelerationByKetFrameTime::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetAccelerationByKetFrameTime, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000090, "Member 'BP_SplineTrackComponent_C_GetAccelerationByKetFrameTime::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetAccelerationByKetFrameTime, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000098, "Member 'BP_SplineTrackComponent_C_GetAccelerationByKetFrameTime::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetAccelerationByKetFrameTime, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'BP_SplineTrackComponent_C_GetAccelerationByKetFrameTime::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetAccelerationByKetFrameTime, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x0000A8, "Member 'BP_SplineTrackComponent_C_GetAccelerationByKetFrameTime::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.GetAllMoveInfoByKeyFrameTime
// 0x01C0 (0x01C0 - 0x0000)
struct BP_SplineTrackComponent_C_GetAllMoveInfoByKeyFrameTime final
{
public:
	double                                        Time;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0010(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Velocity;                                          // 0x0070(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Acceleration;                                      // 0x0088(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SplineDistance;                                    // 0x0090(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Speed_local;                                       // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Distance_local;                                    // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetAccelerationByKetFrameTime_Acceleration; // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDistanceAndSpeedByKeyFrameData_Distance; // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDistanceAndSpeedByKeyFrameData_Speed;  // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D8[0x8];                                       // 0x00D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransformAtDistanceAlongSpline_ReturnValue; // 0x00E0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTransformAtDistanceAlongSpline_Distance_ImplicitCast; // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_GetAllMoveInfoByKeyFrameTime) == 0x000010, "Wrong alignment on BP_SplineTrackComponent_C_GetAllMoveInfoByKeyFrameTime");
static_assert(sizeof(BP_SplineTrackComponent_C_GetAllMoveInfoByKeyFrameTime) == 0x0001C0, "Wrong size on BP_SplineTrackComponent_C_GetAllMoveInfoByKeyFrameTime");
static_assert(offsetof(BP_SplineTrackComponent_C_GetAllMoveInfoByKeyFrameTime, Time) == 0x000000, "Member 'BP_SplineTrackComponent_C_GetAllMoveInfoByKeyFrameTime::Time' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetAllMoveInfoByKeyFrameTime, Transform) == 0x000010, "Member 'BP_SplineTrackComponent_C_GetAllMoveInfoByKeyFrameTime::Transform' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetAllMoveInfoByKeyFrameTime, Velocity) == 0x000070, "Member 'BP_SplineTrackComponent_C_GetAllMoveInfoByKeyFrameTime::Velocity' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetAllMoveInfoByKeyFrameTime, Acceleration) == 0x000088, "Member 'BP_SplineTrackComponent_C_GetAllMoveInfoByKeyFrameTime::Acceleration' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetAllMoveInfoByKeyFrameTime, SplineDistance) == 0x000090, "Member 'BP_SplineTrackComponent_C_GetAllMoveInfoByKeyFrameTime::SplineDistance' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetAllMoveInfoByKeyFrameTime, Speed_local) == 0x000098, "Member 'BP_SplineTrackComponent_C_GetAllMoveInfoByKeyFrameTime::Speed_local' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetAllMoveInfoByKeyFrameTime, Distance_local) == 0x0000A0, "Member 'BP_SplineTrackComponent_C_GetAllMoveInfoByKeyFrameTime::Distance_local' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetAllMoveInfoByKeyFrameTime, CallFunc_GetAccelerationByKetFrameTime_Acceleration) == 0x0000A8, "Member 'BP_SplineTrackComponent_C_GetAllMoveInfoByKeyFrameTime::CallFunc_GetAccelerationByKetFrameTime_Acceleration' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetAllMoveInfoByKeyFrameTime, CallFunc_GetDistanceAndSpeedByKeyFrameData_Distance) == 0x0000B0, "Member 'BP_SplineTrackComponent_C_GetAllMoveInfoByKeyFrameTime::CallFunc_GetDistanceAndSpeedByKeyFrameData_Distance' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetAllMoveInfoByKeyFrameTime, CallFunc_GetDistanceAndSpeedByKeyFrameData_Speed) == 0x0000B8, "Member 'BP_SplineTrackComponent_C_GetAllMoveInfoByKeyFrameTime::CallFunc_GetDistanceAndSpeedByKeyFrameData_Speed' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetAllMoveInfoByKeyFrameTime, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0000C0, "Member 'BP_SplineTrackComponent_C_GetAllMoveInfoByKeyFrameTime::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetAllMoveInfoByKeyFrameTime, CallFunc_GetTransformAtDistanceAlongSpline_ReturnValue) == 0x0000E0, "Member 'BP_SplineTrackComponent_C_GetAllMoveInfoByKeyFrameTime::CallFunc_GetTransformAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetAllMoveInfoByKeyFrameTime, CallFunc_BreakTransform_Location) == 0x000140, "Member 'BP_SplineTrackComponent_C_GetAllMoveInfoByKeyFrameTime::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetAllMoveInfoByKeyFrameTime, CallFunc_BreakTransform_Rotation) == 0x000158, "Member 'BP_SplineTrackComponent_C_GetAllMoveInfoByKeyFrameTime::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetAllMoveInfoByKeyFrameTime, CallFunc_BreakTransform_Scale) == 0x000170, "Member 'BP_SplineTrackComponent_C_GetAllMoveInfoByKeyFrameTime::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetAllMoveInfoByKeyFrameTime, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000188, "Member 'BP_SplineTrackComponent_C_GetAllMoveInfoByKeyFrameTime::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetAllMoveInfoByKeyFrameTime, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0001A0, "Member 'BP_SplineTrackComponent_C_GetAllMoveInfoByKeyFrameTime::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetAllMoveInfoByKeyFrameTime, CallFunc_GetTransformAtDistanceAlongSpline_Distance_ImplicitCast) == 0x0001B8, "Member 'BP_SplineTrackComponent_C_GetAllMoveInfoByKeyFrameTime::CallFunc_GetTransformAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.GetBlendTimeOnLeaveSplineSegment
// 0x0088 (0x0088 - 0x0000)
struct BP_SplineTrackComponent_C_GetBlendTimeOnLeaveSplineSegment final
{
public:
	int32                                         SegmentIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        BlendTime;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTrackSegmentOverride                  CallFunc_Map_Find_Value;                           // 0x0010(0x0020)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTrackSegmentOverride                  CallFunc_Map_Find_Value_1;                         // 0x0034(0x0020)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_BlendTime_ImplicitCast;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_BlendTime_ImplicitCast_1;    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_BlendTime_ImplicitCast_2;    // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_BlendTime_ImplicitCast_3;    // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_BlendTime_ImplicitCast_4;    // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_BlendTime_ImplicitCast_5;    // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_GetBlendTimeOnLeaveSplineSegment) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_GetBlendTimeOnLeaveSplineSegment");
static_assert(sizeof(BP_SplineTrackComponent_C_GetBlendTimeOnLeaveSplineSegment) == 0x000088, "Wrong size on BP_SplineTrackComponent_C_GetBlendTimeOnLeaveSplineSegment");
static_assert(offsetof(BP_SplineTrackComponent_C_GetBlendTimeOnLeaveSplineSegment, SegmentIndex) == 0x000000, "Member 'BP_SplineTrackComponent_C_GetBlendTimeOnLeaveSplineSegment::SegmentIndex' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetBlendTimeOnLeaveSplineSegment, BlendTime) == 0x000008, "Member 'BP_SplineTrackComponent_C_GetBlendTimeOnLeaveSplineSegment::BlendTime' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetBlendTimeOnLeaveSplineSegment, CallFunc_Map_Find_Value) == 0x000010, "Member 'BP_SplineTrackComponent_C_GetBlendTimeOnLeaveSplineSegment::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetBlendTimeOnLeaveSplineSegment, CallFunc_Map_Find_ReturnValue) == 0x000030, "Member 'BP_SplineTrackComponent_C_GetBlendTimeOnLeaveSplineSegment::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetBlendTimeOnLeaveSplineSegment, CallFunc_Map_Find_Value_1) == 0x000034, "Member 'BP_SplineTrackComponent_C_GetBlendTimeOnLeaveSplineSegment::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetBlendTimeOnLeaveSplineSegment, CallFunc_Map_Find_ReturnValue_1) == 0x000054, "Member 'BP_SplineTrackComponent_C_GetBlendTimeOnLeaveSplineSegment::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetBlendTimeOnLeaveSplineSegment, K2Node_FunctionResult_BlendTime_ImplicitCast) == 0x000058, "Member 'BP_SplineTrackComponent_C_GetBlendTimeOnLeaveSplineSegment::K2Node_FunctionResult_BlendTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetBlendTimeOnLeaveSplineSegment, K2Node_FunctionResult_BlendTime_ImplicitCast_1) == 0x000060, "Member 'BP_SplineTrackComponent_C_GetBlendTimeOnLeaveSplineSegment::K2Node_FunctionResult_BlendTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetBlendTimeOnLeaveSplineSegment, K2Node_FunctionResult_BlendTime_ImplicitCast_2) == 0x000068, "Member 'BP_SplineTrackComponent_C_GetBlendTimeOnLeaveSplineSegment::K2Node_FunctionResult_BlendTime_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetBlendTimeOnLeaveSplineSegment, K2Node_FunctionResult_BlendTime_ImplicitCast_3) == 0x000070, "Member 'BP_SplineTrackComponent_C_GetBlendTimeOnLeaveSplineSegment::K2Node_FunctionResult_BlendTime_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetBlendTimeOnLeaveSplineSegment, K2Node_FunctionResult_BlendTime_ImplicitCast_4) == 0x000078, "Member 'BP_SplineTrackComponent_C_GetBlendTimeOnLeaveSplineSegment::K2Node_FunctionResult_BlendTime_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetBlendTimeOnLeaveSplineSegment, K2Node_FunctionResult_BlendTime_ImplicitCast_5) == 0x000080, "Member 'BP_SplineTrackComponent_C_GetBlendTimeOnLeaveSplineSegment::K2Node_FunctionResult_BlendTime_ImplicitCast_5' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.GetClampedDistance
// 0x0020 (0x0020 - 0x0000)
struct BP_SplineTrackComponent_C_GetClampedDistance final
{
public:
	double                                        InDistance;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Ret;                                               // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Min;                                               // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Max;                                               // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_GetClampedDistance) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_GetClampedDistance");
static_assert(sizeof(BP_SplineTrackComponent_C_GetClampedDistance) == 0x000020, "Wrong size on BP_SplineTrackComponent_C_GetClampedDistance");
static_assert(offsetof(BP_SplineTrackComponent_C_GetClampedDistance, InDistance) == 0x000000, "Member 'BP_SplineTrackComponent_C_GetClampedDistance::InDistance' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetClampedDistance, Ret) == 0x000008, "Member 'BP_SplineTrackComponent_C_GetClampedDistance::Ret' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetClampedDistance, Min) == 0x000010, "Member 'BP_SplineTrackComponent_C_GetClampedDistance::Min' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetClampedDistance, Max) == 0x000018, "Member 'BP_SplineTrackComponent_C_GetClampedDistance::Max' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.GetClosedLoopClampDistance
// 0x00C0 (0x00C0 - 0x0000)
struct BP_SplineTrackComponent_C_GetClosedLoopClampDistance final
{
public:
	double                                        InDistance;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OutDistance;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TempDistance;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_1;    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_2; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_3; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_2;    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_4; // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_5; // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_B_ImplicitCast;                      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_B_ImplicitCast;         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1;   // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_B_ImplicitCast;                      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_GetClosedLoopClampDistance) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_GetClosedLoopClampDistance");
static_assert(sizeof(BP_SplineTrackComponent_C_GetClosedLoopClampDistance) == 0x0000C0, "Wrong size on BP_SplineTrackComponent_C_GetClosedLoopClampDistance");
static_assert(offsetof(BP_SplineTrackComponent_C_GetClosedLoopClampDistance, InDistance) == 0x000000, "Member 'BP_SplineTrackComponent_C_GetClosedLoopClampDistance::InDistance' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetClosedLoopClampDistance, OutDistance) == 0x000008, "Member 'BP_SplineTrackComponent_C_GetClosedLoopClampDistance::OutDistance' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetClosedLoopClampDistance, TempDistance) == 0x000010, "Member 'BP_SplineTrackComponent_C_GetClosedLoopClampDistance::TempDistance' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetClosedLoopClampDistance, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000018, "Member 'BP_SplineTrackComponent_C_GetClosedLoopClampDistance::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetClosedLoopClampDistance, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue) == 0x00001C, "Member 'BP_SplineTrackComponent_C_GetClosedLoopClampDistance::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetClosedLoopClampDistance, CallFunc_GetNumberOfSplinePoints_ReturnValue_1) == 0x000020, "Member 'BP_SplineTrackComponent_C_GetClosedLoopClampDistance::CallFunc_GetNumberOfSplinePoints_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetClosedLoopClampDistance, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1) == 0x000024, "Member 'BP_SplineTrackComponent_C_GetClosedLoopClampDistance::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetClosedLoopClampDistance, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_2) == 0x000028, "Member 'BP_SplineTrackComponent_C_GetClosedLoopClampDistance::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetClosedLoopClampDistance, CallFunc_FMin_ReturnValue) == 0x000030, "Member 'BP_SplineTrackComponent_C_GetClosedLoopClampDistance::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetClosedLoopClampDistance, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_3) == 0x000038, "Member 'BP_SplineTrackComponent_C_GetClosedLoopClampDistance::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetClosedLoopClampDistance, CallFunc_Less_DoubleDouble_ReturnValue) == 0x00003C, "Member 'BP_SplineTrackComponent_C_GetClosedLoopClampDistance::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetClosedLoopClampDistance, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_SplineTrackComponent_C_GetClosedLoopClampDistance::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetClosedLoopClampDistance, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'BP_SplineTrackComponent_C_GetClosedLoopClampDistance::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetClosedLoopClampDistance, CallFunc_GetNumberOfSplinePoints_ReturnValue_2) == 0x000050, "Member 'BP_SplineTrackComponent_C_GetClosedLoopClampDistance::CallFunc_GetNumberOfSplinePoints_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetClosedLoopClampDistance, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_4) == 0x000054, "Member 'BP_SplineTrackComponent_C_GetClosedLoopClampDistance::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetClosedLoopClampDistance, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_5) == 0x000058, "Member 'BP_SplineTrackComponent_C_GetClosedLoopClampDistance::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetClosedLoopClampDistance, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000060, "Member 'BP_SplineTrackComponent_C_GetClosedLoopClampDistance::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetClosedLoopClampDistance, CallFunc_FMax_ReturnValue) == 0x000068, "Member 'BP_SplineTrackComponent_C_GetClosedLoopClampDistance::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetClosedLoopClampDistance, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000070, "Member 'BP_SplineTrackComponent_C_GetClosedLoopClampDistance::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetClosedLoopClampDistance, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000078, "Member 'BP_SplineTrackComponent_C_GetClosedLoopClampDistance::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetClosedLoopClampDistance, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000080, "Member 'BP_SplineTrackComponent_C_GetClosedLoopClampDistance::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetClosedLoopClampDistance, CallFunc_FMin_B_ImplicitCast) == 0x000088, "Member 'BP_SplineTrackComponent_C_GetClosedLoopClampDistance::CallFunc_FMin_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetClosedLoopClampDistance, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000090, "Member 'BP_SplineTrackComponent_C_GetClosedLoopClampDistance::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetClosedLoopClampDistance, CallFunc_Less_DoubleDouble_B_ImplicitCast) == 0x000098, "Member 'BP_SplineTrackComponent_C_GetClosedLoopClampDistance::CallFunc_Less_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetClosedLoopClampDistance, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x0000A0, "Member 'BP_SplineTrackComponent_C_GetClosedLoopClampDistance::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetClosedLoopClampDistance, CallFunc_Greater_DoubleDouble_B_ImplicitCast) == 0x0000A8, "Member 'BP_SplineTrackComponent_C_GetClosedLoopClampDistance::CallFunc_Greater_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetClosedLoopClampDistance, CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1) == 0x0000B0, "Member 'BP_SplineTrackComponent_C_GetClosedLoopClampDistance::CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetClosedLoopClampDistance, CallFunc_FMax_B_ImplicitCast) == 0x0000B8, "Member 'BP_SplineTrackComponent_C_GetClosedLoopClampDistance::CallFunc_FMax_B_ImplicitCast' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.GetDistanceAndSpeedByKeyFrameData
// 0x0100 (0x0100 - 0x0000)
struct BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData final
{
public:
	double                                        Time;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Distance;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Speed;                                             // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentSpeed_local;                                // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentAcceleration_local;                         // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TimeSinceLowerKey_local;                           // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_SplineTrackKeyFrameData             LowerData;                                         // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_SplineTrackKeyFrameData             UpperData;                                         // 0x0048(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_SplineTrackKeyFrameData             CallFunc_GetUpperKeyFrameDataByTime_NewParam;      // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_SplineTrackKeyFrameData             CallFunc_GetLowerKeyFrameDataByTime_NewParam;      // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData");
static_assert(sizeof(BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData) == 0x000100, "Wrong size on BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData");
static_assert(offsetof(BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData, Time) == 0x000000, "Member 'BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData::Time' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData, Distance) == 0x000008, "Member 'BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData::Distance' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData, Speed) == 0x000010, "Member 'BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData::Speed' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData, CurrentSpeed_local) == 0x000018, "Member 'BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData::CurrentSpeed_local' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData, CurrentAcceleration_local) == 0x000020, "Member 'BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData::CurrentAcceleration_local' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData, TimeSinceLowerKey_local) == 0x000028, "Member 'BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData::TimeSinceLowerKey_local' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData, LowerData) == 0x000030, "Member 'BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData::LowerData' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData, UpperData) == 0x000048, "Member 'BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData::UpperData' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000060, "Member 'BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000068, "Member 'BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000070, "Member 'BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000078, "Member 'BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000080, "Member 'BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000088, "Member 'BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData, CallFunc_GetUpperKeyFrameDataByTime_NewParam) == 0x000090, "Member 'BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData::CallFunc_GetUpperKeyFrameDataByTime_NewParam' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000A8, "Member 'BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0000B0, "Member 'BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData, CallFunc_GetLowerKeyFrameDataByTime_NewParam) == 0x0000B8, "Member 'BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData::CallFunc_GetLowerKeyFrameDataByTime_NewParam' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000D0, "Member 'BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0000D8, "Member 'BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000E0, "Member 'BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x0000E8, "Member 'BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000F0, "Member 'BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x0000F8, "Member 'BP_SplineTrackComponent_C_GetDistanceAndSpeedByKeyFrameData::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.GetDistanceByKeyFrameTime
// 0x00E0 (0x00E0 - 0x0000)
struct BP_SplineTrackComponent_C_GetDistanceByKeyFrameTime final
{
public:
	double                                        Time;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Distance;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentAcceleration_local;                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TimeSinceLowerKey_local;                           // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_SplineTrackKeyFrameData             LowerData;                                         // 0x0020(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_SplineTrackKeyFrameData             UpperData;                                         // 0x0038(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_SplineTrackKeyFrameData             CallFunc_GetUpperKeyFrameDataByTime_NewParam;      // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_SplineTrackKeyFrameData             CallFunc_GetLowerKeyFrameDataByTime_NewParam;      // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_GetDistanceByKeyFrameTime) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_GetDistanceByKeyFrameTime");
static_assert(sizeof(BP_SplineTrackComponent_C_GetDistanceByKeyFrameTime) == 0x0000E0, "Wrong size on BP_SplineTrackComponent_C_GetDistanceByKeyFrameTime");
static_assert(offsetof(BP_SplineTrackComponent_C_GetDistanceByKeyFrameTime, Time) == 0x000000, "Member 'BP_SplineTrackComponent_C_GetDistanceByKeyFrameTime::Time' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetDistanceByKeyFrameTime, Distance) == 0x000008, "Member 'BP_SplineTrackComponent_C_GetDistanceByKeyFrameTime::Distance' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetDistanceByKeyFrameTime, CurrentAcceleration_local) == 0x000010, "Member 'BP_SplineTrackComponent_C_GetDistanceByKeyFrameTime::CurrentAcceleration_local' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetDistanceByKeyFrameTime, TimeSinceLowerKey_local) == 0x000018, "Member 'BP_SplineTrackComponent_C_GetDistanceByKeyFrameTime::TimeSinceLowerKey_local' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetDistanceByKeyFrameTime, LowerData) == 0x000020, "Member 'BP_SplineTrackComponent_C_GetDistanceByKeyFrameTime::LowerData' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetDistanceByKeyFrameTime, UpperData) == 0x000038, "Member 'BP_SplineTrackComponent_C_GetDistanceByKeyFrameTime::UpperData' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetDistanceByKeyFrameTime, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_SplineTrackComponent_C_GetDistanceByKeyFrameTime::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetDistanceByKeyFrameTime, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'BP_SplineTrackComponent_C_GetDistanceByKeyFrameTime::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetDistanceByKeyFrameTime, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000060, "Member 'BP_SplineTrackComponent_C_GetDistanceByKeyFrameTime::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetDistanceByKeyFrameTime, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000068, "Member 'BP_SplineTrackComponent_C_GetDistanceByKeyFrameTime::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetDistanceByKeyFrameTime, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000070, "Member 'BP_SplineTrackComponent_C_GetDistanceByKeyFrameTime::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetDistanceByKeyFrameTime, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000078, "Member 'BP_SplineTrackComponent_C_GetDistanceByKeyFrameTime::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetDistanceByKeyFrameTime, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000080, "Member 'BP_SplineTrackComponent_C_GetDistanceByKeyFrameTime::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetDistanceByKeyFrameTime, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000088, "Member 'BP_SplineTrackComponent_C_GetDistanceByKeyFrameTime::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetDistanceByKeyFrameTime, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000090, "Member 'BP_SplineTrackComponent_C_GetDistanceByKeyFrameTime::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetDistanceByKeyFrameTime, CallFunc_GetUpperKeyFrameDataByTime_NewParam) == 0x000098, "Member 'BP_SplineTrackComponent_C_GetDistanceByKeyFrameTime::CallFunc_GetUpperKeyFrameDataByTime_NewParam' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetDistanceByKeyFrameTime, CallFunc_GetLowerKeyFrameDataByTime_NewParam) == 0x0000B0, "Member 'BP_SplineTrackComponent_C_GetDistanceByKeyFrameTime::CallFunc_GetLowerKeyFrameDataByTime_NewParam' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetDistanceByKeyFrameTime, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x0000C8, "Member 'BP_SplineTrackComponent_C_GetDistanceByKeyFrameTime::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetDistanceByKeyFrameTime, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000D0, "Member 'BP_SplineTrackComponent_C_GetDistanceByKeyFrameTime::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetDistanceByKeyFrameTime, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x0000D8, "Member 'BP_SplineTrackComponent_C_GetDistanceByKeyFrameTime::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.GetInitializationSplineInuptKey
// 0x0010 (0x0010 - 0x0000)
struct BP_SplineTrackComponent_C_GetInitializationSplineInuptKey final
{
public:
	double                                        InitializationSplineInuptKey;                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_InitializationSplineInuptKey_ImplicitCast; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_GetInitializationSplineInuptKey) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_GetInitializationSplineInuptKey");
static_assert(sizeof(BP_SplineTrackComponent_C_GetInitializationSplineInuptKey) == 0x000010, "Wrong size on BP_SplineTrackComponent_C_GetInitializationSplineInuptKey");
static_assert(offsetof(BP_SplineTrackComponent_C_GetInitializationSplineInuptKey, InitializationSplineInuptKey) == 0x000000, "Member 'BP_SplineTrackComponent_C_GetInitializationSplineInuptKey::InitializationSplineInuptKey' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetInitializationSplineInuptKey, K2Node_FunctionResult_InitializationSplineInuptKey_ImplicitCast) == 0x000008, "Member 'BP_SplineTrackComponent_C_GetInitializationSplineInuptKey::K2Node_FunctionResult_InitializationSplineInuptKey_ImplicitCast' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.GetKeyFrameDataMaxTime
// 0x0048 (0x0048 - 0x0000)
struct BP_SplineTrackComponent_C_GetKeyFrameDataMaxTime final
{
public:
	double                                        MaxTime;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_SplineTrackKeyFrameData             Temp_wildcard_Variable;                            // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_SplineTrackKeyFrameData             CallFunc_Array_Get_Item;                           // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_GetKeyFrameDataMaxTime) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_GetKeyFrameDataMaxTime");
static_assert(sizeof(BP_SplineTrackComponent_C_GetKeyFrameDataMaxTime) == 0x000048, "Wrong size on BP_SplineTrackComponent_C_GetKeyFrameDataMaxTime");
static_assert(offsetof(BP_SplineTrackComponent_C_GetKeyFrameDataMaxTime, MaxTime) == 0x000000, "Member 'BP_SplineTrackComponent_C_GetKeyFrameDataMaxTime::MaxTime' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetKeyFrameDataMaxTime, Temp_wildcard_Variable) == 0x000008, "Member 'BP_SplineTrackComponent_C_GetKeyFrameDataMaxTime::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetKeyFrameDataMaxTime, CallFunc_Array_LastIndex_ReturnValue) == 0x000020, "Member 'BP_SplineTrackComponent_C_GetKeyFrameDataMaxTime::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetKeyFrameDataMaxTime, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_SplineTrackComponent_C_GetKeyFrameDataMaxTime::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetKeyFrameDataMaxTime, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000040, "Member 'BP_SplineTrackComponent_C_GetKeyFrameDataMaxTime::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.GetKeyFrameTimeByDistance
// 0x0118 (0x0118 - 0x0000)
struct BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance final
{
public:
	double                                        Distance;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bForward;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        KeyFrameTime;                                      // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        T;                                                 // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        S;                                                 // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        v0;                                                // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        A;                                                 // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        T_Total;                                           // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_SplineTrackKeyFrameData             LowerKeyFrameData;                                 // 0x0040(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_SplineTrackKeyFrameData             UpperKeyFrameData;                                 // 0x0058(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_SplineTrackKeyFrameData             CallFunc_GetLowerKeyFrameDataByDistance_NewParam;  // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_SplineTrackKeyFrameData             CallFunc_GetUpperKeyFrameDataByDistance_KeyFrameData; // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Square_ReturnValue;                       // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sqrt_ReturnValue;                         // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance");
static_assert(sizeof(BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance) == 0x000118, "Wrong size on BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance");
static_assert(offsetof(BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance, Distance) == 0x000000, "Member 'BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance::Distance' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance, bForward) == 0x000008, "Member 'BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance::bForward' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance, KeyFrameTime) == 0x000010, "Member 'BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance::KeyFrameTime' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance, T) == 0x000018, "Member 'BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance::T' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance, S) == 0x000020, "Member 'BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance::S' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance, v0) == 0x000028, "Member 'BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance::v0' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance, A) == 0x000030, "Member 'BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance::A' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance, T_Total) == 0x000038, "Member 'BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance::T_Total' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance, LowerKeyFrameData) == 0x000040, "Member 'BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance::LowerKeyFrameData' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance, UpperKeyFrameData) == 0x000058, "Member 'BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance::UpperKeyFrameData' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance, CallFunc_GetLowerKeyFrameDataByDistance_NewParam) == 0x000070, "Member 'BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance::CallFunc_GetLowerKeyFrameDataByDistance_NewParam' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance, CallFunc_GetUpperKeyFrameDataByDistance_KeyFrameData) == 0x000088, "Member 'BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance::CallFunc_GetUpperKeyFrameDataByDistance_KeyFrameData' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x0000A1, "Member 'BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x0000B8, "Member 'BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance, CallFunc_Square_ReturnValue) == 0x0000C8, "Member 'BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance::CallFunc_Square_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000D0, "Member 'BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000D8, "Member 'BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance, CallFunc_Sqrt_ReturnValue) == 0x0000E0, "Member 'BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance::CallFunc_Sqrt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000E8, "Member 'BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0000F0, "Member 'BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000F8, "Member 'BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000100, "Member 'BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000108, "Member 'BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x000110, "Member 'BP_SplineTrackComponent_C_GetKeyFrameTimeByDistance::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.GetLaunchTimeOnSplineSegment
// 0x0088 (0x0088 - 0x0000)
struct BP_SplineTrackComponent_C_GetLaunchTimeOnSplineSegment final
{
public:
	int32                                         SegmentIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LaunchTime;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTrackSegmentOverride                  CallFunc_Map_Find_Value;                           // 0x0010(0x0020)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTrackSegmentOverride                  CallFunc_Map_Find_Value_1;                         // 0x0034(0x0020)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_LaunchTime_ImplicitCast;     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_LaunchTime_ImplicitCast_1;   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_LaunchTime_ImplicitCast_2;   // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_LaunchTime_ImplicitCast_3;   // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_LaunchTime_ImplicitCast_4;   // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_LaunchTime_ImplicitCast_5;   // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_GetLaunchTimeOnSplineSegment) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_GetLaunchTimeOnSplineSegment");
static_assert(sizeof(BP_SplineTrackComponent_C_GetLaunchTimeOnSplineSegment) == 0x000088, "Wrong size on BP_SplineTrackComponent_C_GetLaunchTimeOnSplineSegment");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLaunchTimeOnSplineSegment, SegmentIndex) == 0x000000, "Member 'BP_SplineTrackComponent_C_GetLaunchTimeOnSplineSegment::SegmentIndex' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLaunchTimeOnSplineSegment, LaunchTime) == 0x000008, "Member 'BP_SplineTrackComponent_C_GetLaunchTimeOnSplineSegment::LaunchTime' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLaunchTimeOnSplineSegment, CallFunc_Map_Find_Value) == 0x000010, "Member 'BP_SplineTrackComponent_C_GetLaunchTimeOnSplineSegment::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLaunchTimeOnSplineSegment, CallFunc_Map_Find_ReturnValue) == 0x000030, "Member 'BP_SplineTrackComponent_C_GetLaunchTimeOnSplineSegment::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLaunchTimeOnSplineSegment, CallFunc_Map_Find_Value_1) == 0x000034, "Member 'BP_SplineTrackComponent_C_GetLaunchTimeOnSplineSegment::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLaunchTimeOnSplineSegment, CallFunc_Map_Find_ReturnValue_1) == 0x000054, "Member 'BP_SplineTrackComponent_C_GetLaunchTimeOnSplineSegment::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLaunchTimeOnSplineSegment, K2Node_FunctionResult_LaunchTime_ImplicitCast) == 0x000058, "Member 'BP_SplineTrackComponent_C_GetLaunchTimeOnSplineSegment::K2Node_FunctionResult_LaunchTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLaunchTimeOnSplineSegment, K2Node_FunctionResult_LaunchTime_ImplicitCast_1) == 0x000060, "Member 'BP_SplineTrackComponent_C_GetLaunchTimeOnSplineSegment::K2Node_FunctionResult_LaunchTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLaunchTimeOnSplineSegment, K2Node_FunctionResult_LaunchTime_ImplicitCast_2) == 0x000068, "Member 'BP_SplineTrackComponent_C_GetLaunchTimeOnSplineSegment::K2Node_FunctionResult_LaunchTime_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLaunchTimeOnSplineSegment, K2Node_FunctionResult_LaunchTime_ImplicitCast_3) == 0x000070, "Member 'BP_SplineTrackComponent_C_GetLaunchTimeOnSplineSegment::K2Node_FunctionResult_LaunchTime_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLaunchTimeOnSplineSegment, K2Node_FunctionResult_LaunchTime_ImplicitCast_4) == 0x000078, "Member 'BP_SplineTrackComponent_C_GetLaunchTimeOnSplineSegment::K2Node_FunctionResult_LaunchTime_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLaunchTimeOnSplineSegment, K2Node_FunctionResult_LaunchTime_ImplicitCast_5) == 0x000080, "Member 'BP_SplineTrackComponent_C_GetLaunchTimeOnSplineSegment::K2Node_FunctionResult_LaunchTime_ImplicitCast_5' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.GetLocationAndVelocityByKeyFrameTime
// 0x00D8 (0x00D8 - 0x0000)
struct BP_SplineTrackComponent_C_GetLocationAndVelocityByKeyFrameTime final
{
public:
	double                                        Time;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Velocity;                                          // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Speed_local;                                       // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Distance_local;                                    // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDistanceAndSpeedByKeyFrameData_Distance; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDistanceAndSpeedByKeyFrameData_Speed;  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetRotationAtDistanceAlongSpline_ReturnValue; // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRotationAtDistanceAlongSpline_Distance_ImplicitCast; // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast; // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_GetLocationAndVelocityByKeyFrameTime) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_GetLocationAndVelocityByKeyFrameTime");
static_assert(sizeof(BP_SplineTrackComponent_C_GetLocationAndVelocityByKeyFrameTime) == 0x0000D8, "Wrong size on BP_SplineTrackComponent_C_GetLocationAndVelocityByKeyFrameTime");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLocationAndVelocityByKeyFrameTime, Time) == 0x000000, "Member 'BP_SplineTrackComponent_C_GetLocationAndVelocityByKeyFrameTime::Time' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLocationAndVelocityByKeyFrameTime, Location) == 0x000008, "Member 'BP_SplineTrackComponent_C_GetLocationAndVelocityByKeyFrameTime::Location' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLocationAndVelocityByKeyFrameTime, Velocity) == 0x000020, "Member 'BP_SplineTrackComponent_C_GetLocationAndVelocityByKeyFrameTime::Velocity' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLocationAndVelocityByKeyFrameTime, Speed_local) == 0x000038, "Member 'BP_SplineTrackComponent_C_GetLocationAndVelocityByKeyFrameTime::Speed_local' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLocationAndVelocityByKeyFrameTime, Distance_local) == 0x000040, "Member 'BP_SplineTrackComponent_C_GetLocationAndVelocityByKeyFrameTime::Distance_local' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLocationAndVelocityByKeyFrameTime, CallFunc_GetDistanceAndSpeedByKeyFrameData_Distance) == 0x000048, "Member 'BP_SplineTrackComponent_C_GetLocationAndVelocityByKeyFrameTime::CallFunc_GetDistanceAndSpeedByKeyFrameData_Distance' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLocationAndVelocityByKeyFrameTime, CallFunc_GetDistanceAndSpeedByKeyFrameData_Speed) == 0x000050, "Member 'BP_SplineTrackComponent_C_GetLocationAndVelocityByKeyFrameTime::CallFunc_GetDistanceAndSpeedByKeyFrameData_Speed' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLocationAndVelocityByKeyFrameTime, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000058, "Member 'BP_SplineTrackComponent_C_GetLocationAndVelocityByKeyFrameTime::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLocationAndVelocityByKeyFrameTime, CallFunc_GetRotationAtDistanceAlongSpline_ReturnValue) == 0x000070, "Member 'BP_SplineTrackComponent_C_GetLocationAndVelocityByKeyFrameTime::CallFunc_GetRotationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLocationAndVelocityByKeyFrameTime, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000088, "Member 'BP_SplineTrackComponent_C_GetLocationAndVelocityByKeyFrameTime::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLocationAndVelocityByKeyFrameTime, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x0000A0, "Member 'BP_SplineTrackComponent_C_GetLocationAndVelocityByKeyFrameTime::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLocationAndVelocityByKeyFrameTime, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000B8, "Member 'BP_SplineTrackComponent_C_GetLocationAndVelocityByKeyFrameTime::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLocationAndVelocityByKeyFrameTime, CallFunc_GetRotationAtDistanceAlongSpline_Distance_ImplicitCast) == 0x0000D0, "Member 'BP_SplineTrackComponent_C_GetLocationAndVelocityByKeyFrameTime::CallFunc_GetRotationAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLocationAndVelocityByKeyFrameTime, CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast) == 0x0000D4, "Member 'BP_SplineTrackComponent_C_GetLocationAndVelocityByKeyFrameTime::CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.GetLowerKeyFrameDataByDistance
// 0x0068 (0x0068 - 0x0000)
struct BP_SplineTrackComponent_C_GetLowerKeyFrameDataByDistance final
{
public:
	double                                        Distance;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bForward;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_SplineTrackKeyFrameData             NewParam;                                          // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempKeyFrameDataIndex;                             // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_GetLowerKeyFrameDataByDistance) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_GetLowerKeyFrameDataByDistance");
static_assert(sizeof(BP_SplineTrackComponent_C_GetLowerKeyFrameDataByDistance) == 0x000068, "Wrong size on BP_SplineTrackComponent_C_GetLowerKeyFrameDataByDistance");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLowerKeyFrameDataByDistance, Distance) == 0x000000, "Member 'BP_SplineTrackComponent_C_GetLowerKeyFrameDataByDistance::Distance' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLowerKeyFrameDataByDistance, bForward) == 0x000008, "Member 'BP_SplineTrackComponent_C_GetLowerKeyFrameDataByDistance::bForward' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLowerKeyFrameDataByDistance, NewParam) == 0x000010, "Member 'BP_SplineTrackComponent_C_GetLowerKeyFrameDataByDistance::NewParam' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLowerKeyFrameDataByDistance, TempKeyFrameDataIndex) == 0x000028, "Member 'BP_SplineTrackComponent_C_GetLowerKeyFrameDataByDistance::TempKeyFrameDataIndex' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLowerKeyFrameDataByDistance, Temp_int_Variable) == 0x00002C, "Member 'BP_SplineTrackComponent_C_GetLowerKeyFrameDataByDistance::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLowerKeyFrameDataByDistance, Temp_int_Variable_1) == 0x000030, "Member 'BP_SplineTrackComponent_C_GetLowerKeyFrameDataByDistance::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLowerKeyFrameDataByDistance, CallFunc_Subtract_IntInt_ReturnValue) == 0x000034, "Member 'BP_SplineTrackComponent_C_GetLowerKeyFrameDataByDistance::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLowerKeyFrameDataByDistance, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'BP_SplineTrackComponent_C_GetLowerKeyFrameDataByDistance::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLowerKeyFrameDataByDistance, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_SplineTrackComponent_C_GetLowerKeyFrameDataByDistance::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLowerKeyFrameDataByDistance, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000040, "Member 'BP_SplineTrackComponent_C_GetLowerKeyFrameDataByDistance::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLowerKeyFrameDataByDistance, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000044, "Member 'BP_SplineTrackComponent_C_GetLowerKeyFrameDataByDistance::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLowerKeyFrameDataByDistance, CallFunc_Add_IntInt_ReturnValue_1) == 0x000048, "Member 'BP_SplineTrackComponent_C_GetLowerKeyFrameDataByDistance::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLowerKeyFrameDataByDistance, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'BP_SplineTrackComponent_C_GetLowerKeyFrameDataByDistance::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLowerKeyFrameDataByDistance, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_SplineTrackComponent_C_GetLowerKeyFrameDataByDistance::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLowerKeyFrameDataByDistance, CallFunc_Array_Length_ReturnValue_1) == 0x000054, "Member 'BP_SplineTrackComponent_C_GetLowerKeyFrameDataByDistance::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLowerKeyFrameDataByDistance, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000058, "Member 'BP_SplineTrackComponent_C_GetLowerKeyFrameDataByDistance::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLowerKeyFrameDataByDistance, CallFunc_Array_Length_ReturnValue_2) == 0x00005C, "Member 'BP_SplineTrackComponent_C_GetLowerKeyFrameDataByDistance::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLowerKeyFrameDataByDistance, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000060, "Member 'BP_SplineTrackComponent_C_GetLowerKeyFrameDataByDistance::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLowerKeyFrameDataByDistance, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000064, "Member 'BP_SplineTrackComponent_C_GetLowerKeyFrameDataByDistance::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLowerKeyFrameDataByDistance, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000065, "Member 'BP_SplineTrackComponent_C_GetLowerKeyFrameDataByDistance::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.GetLowerKeyFrameDataByTime
// 0x0048 (0x0048 - 0x0000)
struct BP_SplineTrackComponent_C_GetLowerKeyFrameDataByTime final
{
public:
	double                                        Time;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_SplineTrackKeyFrameData             NewParam;                                          // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_GetLowerKeyFrameDataByTime) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_GetLowerKeyFrameDataByTime");
static_assert(sizeof(BP_SplineTrackComponent_C_GetLowerKeyFrameDataByTime) == 0x000048, "Wrong size on BP_SplineTrackComponent_C_GetLowerKeyFrameDataByTime");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLowerKeyFrameDataByTime, Time) == 0x000000, "Member 'BP_SplineTrackComponent_C_GetLowerKeyFrameDataByTime::Time' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLowerKeyFrameDataByTime, NewParam) == 0x000008, "Member 'BP_SplineTrackComponent_C_GetLowerKeyFrameDataByTime::NewParam' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLowerKeyFrameDataByTime, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_SplineTrackComponent_C_GetLowerKeyFrameDataByTime::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLowerKeyFrameDataByTime, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'BP_SplineTrackComponent_C_GetLowerKeyFrameDataByTime::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLowerKeyFrameDataByTime, Temp_int_Variable) == 0x000028, "Member 'BP_SplineTrackComponent_C_GetLowerKeyFrameDataByTime::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLowerKeyFrameDataByTime, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00002C, "Member 'BP_SplineTrackComponent_C_GetLowerKeyFrameDataByTime::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLowerKeyFrameDataByTime, CallFunc_Greater_IntInt_ReturnValue) == 0x000030, "Member 'BP_SplineTrackComponent_C_GetLowerKeyFrameDataByTime::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLowerKeyFrameDataByTime, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_SplineTrackComponent_C_GetLowerKeyFrameDataByTime::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLowerKeyFrameDataByTime, CallFunc_Array_Length_ReturnValue_1) == 0x000038, "Member 'BP_SplineTrackComponent_C_GetLowerKeyFrameDataByTime::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLowerKeyFrameDataByTime, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00003C, "Member 'BP_SplineTrackComponent_C_GetLowerKeyFrameDataByTime::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLowerKeyFrameDataByTime, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000040, "Member 'BP_SplineTrackComponent_C_GetLowerKeyFrameDataByTime::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetLowerKeyFrameDataByTime, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000044, "Member 'BP_SplineTrackComponent_C_GetLowerKeyFrameDataByTime::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.GetNextSpeedBlendTime
// 0x0008 (0x0008 - 0x0000)
struct BP_SplineTrackComponent_C_GetNextSpeedBlendTime final
{
public:
	double                                        Time;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_GetNextSpeedBlendTime) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_GetNextSpeedBlendTime");
static_assert(sizeof(BP_SplineTrackComponent_C_GetNextSpeedBlendTime) == 0x000008, "Wrong size on BP_SplineTrackComponent_C_GetNextSpeedBlendTime");
static_assert(offsetof(BP_SplineTrackComponent_C_GetNextSpeedBlendTime, Time) == 0x000000, "Member 'BP_SplineTrackComponent_C_GetNextSpeedBlendTime::Time' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.GetSpeedOnSplineSegment
// 0x0018 (0x0018 - 0x0000)
struct BP_SplineTrackComponent_C_GetSpeedOnSplineSegment final
{
public:
	int32                                         SegmentIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Speed;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetSpeedOnSplineSegmentImpl_Speed;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_GetSpeedOnSplineSegment) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_GetSpeedOnSplineSegment");
static_assert(sizeof(BP_SplineTrackComponent_C_GetSpeedOnSplineSegment) == 0x000018, "Wrong size on BP_SplineTrackComponent_C_GetSpeedOnSplineSegment");
static_assert(offsetof(BP_SplineTrackComponent_C_GetSpeedOnSplineSegment, SegmentIndex) == 0x000000, "Member 'BP_SplineTrackComponent_C_GetSpeedOnSplineSegment::SegmentIndex' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetSpeedOnSplineSegment, Speed) == 0x000008, "Member 'BP_SplineTrackComponent_C_GetSpeedOnSplineSegment::Speed' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetSpeedOnSplineSegment, CallFunc_GetSpeedOnSplineSegmentImpl_Speed) == 0x000010, "Member 'BP_SplineTrackComponent_C_GetSpeedOnSplineSegment::CallFunc_GetSpeedOnSplineSegmentImpl_Speed' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.GetSpeedOnSplineSegmentImpl
// 0x00D8 (0x00D8 - 0x0000)
struct BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl final
{
public:
	int32                                         SegmentIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bForward;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Speed;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsClosedLoop_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTrackSegmentOverride                  CallFunc_Map_Find_Value;                           // 0x0048(0x0020)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTrackSegmentOverride                  CallFunc_Map_Find_Value_1;                         // 0x0078(0x0020)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_Speed_ImplicitCast;          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_Speed_ImplicitCast_1;        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_Speed_ImplicitCast_2;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_B_ImplicitCast;               // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2;   // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl");
static_assert(sizeof(BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl) == 0x0000D8, "Wrong size on BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl");
static_assert(offsetof(BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl, SegmentIndex) == 0x000000, "Member 'BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl::SegmentIndex' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl, bForward) == 0x000004, "Member 'BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl::bForward' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl, Speed) == 0x000008, "Member 'BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl::Speed' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl, CallFunc_IsClosedLoop_ReturnValue) == 0x000020, "Member 'BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl::CallFunc_IsClosedLoop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000024, "Member 'BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl, CallFunc_Subtract_IntInt_ReturnValue) == 0x000028, "Member 'BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl, CallFunc_SelectFloat_ReturnValue) == 0x000030, "Member 'BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000038, "Member 'BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl, CallFunc_BooleanOR_ReturnValue) == 0x000039, "Member 'BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl, CallFunc_Map_Find_Value) == 0x000048, "Member 'BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl, CallFunc_Map_Find_ReturnValue) == 0x000068, "Member 'BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000070, "Member 'BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl, CallFunc_Map_Find_Value_1) == 0x000078, "Member 'BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl, CallFunc_Map_Find_ReturnValue_1) == 0x000098, "Member 'BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl, K2Node_FunctionResult_Speed_ImplicitCast) == 0x0000A0, "Member 'BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl::K2Node_FunctionResult_Speed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl, K2Node_FunctionResult_Speed_ImplicitCast_1) == 0x0000A8, "Member 'BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl::K2Node_FunctionResult_Speed_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl, K2Node_FunctionResult_Speed_ImplicitCast_2) == 0x0000B0, "Member 'BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl::K2Node_FunctionResult_Speed_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0000B8, "Member 'BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl, CallFunc_SelectFloat_B_ImplicitCast) == 0x0000C0, "Member 'BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl::CallFunc_SelectFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x0000C8, "Member 'BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2) == 0x0000D0, "Member 'BP_SplineTrackComponent_C_GetSpeedOnSplineSegmentImpl::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.GetStayTimeOnEnterSplineSegment
// 0x0068 (0x0068 - 0x0000)
struct BP_SplineTrackComponent_C_GetStayTimeOnEnterSplineSegment final
{
public:
	int32                                         SegmentIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        StayTime;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTrackSegmentOverride                  CallFunc_Map_Find_Value;                           // 0x0010(0x0020)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTrackSegmentOverride                  CallFunc_Map_Find_Value_1;                         // 0x0034(0x0020)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_StayTime_ImplicitCast;       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_StayTime_ImplicitCast_1;     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_GetStayTimeOnEnterSplineSegment) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_GetStayTimeOnEnterSplineSegment");
static_assert(sizeof(BP_SplineTrackComponent_C_GetStayTimeOnEnterSplineSegment) == 0x000068, "Wrong size on BP_SplineTrackComponent_C_GetStayTimeOnEnterSplineSegment");
static_assert(offsetof(BP_SplineTrackComponent_C_GetStayTimeOnEnterSplineSegment, SegmentIndex) == 0x000000, "Member 'BP_SplineTrackComponent_C_GetStayTimeOnEnterSplineSegment::SegmentIndex' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetStayTimeOnEnterSplineSegment, StayTime) == 0x000008, "Member 'BP_SplineTrackComponent_C_GetStayTimeOnEnterSplineSegment::StayTime' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetStayTimeOnEnterSplineSegment, CallFunc_Map_Find_Value) == 0x000010, "Member 'BP_SplineTrackComponent_C_GetStayTimeOnEnterSplineSegment::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetStayTimeOnEnterSplineSegment, CallFunc_Map_Find_ReturnValue) == 0x000030, "Member 'BP_SplineTrackComponent_C_GetStayTimeOnEnterSplineSegment::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetStayTimeOnEnterSplineSegment, CallFunc_Map_Find_Value_1) == 0x000034, "Member 'BP_SplineTrackComponent_C_GetStayTimeOnEnterSplineSegment::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetStayTimeOnEnterSplineSegment, CallFunc_Map_Find_ReturnValue_1) == 0x000054, "Member 'BP_SplineTrackComponent_C_GetStayTimeOnEnterSplineSegment::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetStayTimeOnEnterSplineSegment, K2Node_FunctionResult_StayTime_ImplicitCast) == 0x000058, "Member 'BP_SplineTrackComponent_C_GetStayTimeOnEnterSplineSegment::K2Node_FunctionResult_StayTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetStayTimeOnEnterSplineSegment, K2Node_FunctionResult_StayTime_ImplicitCast_1) == 0x000060, "Member 'BP_SplineTrackComponent_C_GetStayTimeOnEnterSplineSegment::K2Node_FunctionResult_StayTime_ImplicitCast_1' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.GetUpperKeyFrameDataByDistance
// 0x0058 (0x0058 - 0x0000)
struct BP_SplineTrackComponent_C_GetUpperKeyFrameDataByDistance final
{
public:
	double                                        Distance;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bForward;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_SplineTrackKeyFrameData             KeyFrameData;                                      // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempKeyFrameDataIndex;                             // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_GetUpperKeyFrameDataByDistance) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_GetUpperKeyFrameDataByDistance");
static_assert(sizeof(BP_SplineTrackComponent_C_GetUpperKeyFrameDataByDistance) == 0x000058, "Wrong size on BP_SplineTrackComponent_C_GetUpperKeyFrameDataByDistance");
static_assert(offsetof(BP_SplineTrackComponent_C_GetUpperKeyFrameDataByDistance, Distance) == 0x000000, "Member 'BP_SplineTrackComponent_C_GetUpperKeyFrameDataByDistance::Distance' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetUpperKeyFrameDataByDistance, bForward) == 0x000008, "Member 'BP_SplineTrackComponent_C_GetUpperKeyFrameDataByDistance::bForward' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetUpperKeyFrameDataByDistance, KeyFrameData) == 0x000010, "Member 'BP_SplineTrackComponent_C_GetUpperKeyFrameDataByDistance::KeyFrameData' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetUpperKeyFrameDataByDistance, TempKeyFrameDataIndex) == 0x000028, "Member 'BP_SplineTrackComponent_C_GetUpperKeyFrameDataByDistance::TempKeyFrameDataIndex' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetUpperKeyFrameDataByDistance, Temp_int_Variable) == 0x00002C, "Member 'BP_SplineTrackComponent_C_GetUpperKeyFrameDataByDistance::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetUpperKeyFrameDataByDistance, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_SplineTrackComponent_C_GetUpperKeyFrameDataByDistance::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetUpperKeyFrameDataByDistance, Temp_int_Variable_1) == 0x000034, "Member 'BP_SplineTrackComponent_C_GetUpperKeyFrameDataByDistance::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetUpperKeyFrameDataByDistance, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000038, "Member 'BP_SplineTrackComponent_C_GetUpperKeyFrameDataByDistance::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetUpperKeyFrameDataByDistance, CallFunc_Add_IntInt_ReturnValue_1) == 0x00003C, "Member 'BP_SplineTrackComponent_C_GetUpperKeyFrameDataByDistance::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetUpperKeyFrameDataByDistance, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_SplineTrackComponent_C_GetUpperKeyFrameDataByDistance::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetUpperKeyFrameDataByDistance, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'BP_SplineTrackComponent_C_GetUpperKeyFrameDataByDistance::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetUpperKeyFrameDataByDistance, CallFunc_Array_Length_ReturnValue_1) == 0x000048, "Member 'BP_SplineTrackComponent_C_GetUpperKeyFrameDataByDistance::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetUpperKeyFrameDataByDistance, CallFunc_Subtract_IntInt_ReturnValue) == 0x00004C, "Member 'BP_SplineTrackComponent_C_GetUpperKeyFrameDataByDistance::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetUpperKeyFrameDataByDistance, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000050, "Member 'BP_SplineTrackComponent_C_GetUpperKeyFrameDataByDistance::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetUpperKeyFrameDataByDistance, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000051, "Member 'BP_SplineTrackComponent_C_GetUpperKeyFrameDataByDistance::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.GetUpperKeyFrameDataByTime
// 0x0038 (0x0038 - 0x0000)
struct BP_SplineTrackComponent_C_GetUpperKeyFrameDataByTime final
{
public:
	double                                        Time;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_SplineTrackKeyFrameData             NewParam;                                          // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_GetUpperKeyFrameDataByTime) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_GetUpperKeyFrameDataByTime");
static_assert(sizeof(BP_SplineTrackComponent_C_GetUpperKeyFrameDataByTime) == 0x000038, "Wrong size on BP_SplineTrackComponent_C_GetUpperKeyFrameDataByTime");
static_assert(offsetof(BP_SplineTrackComponent_C_GetUpperKeyFrameDataByTime, Time) == 0x000000, "Member 'BP_SplineTrackComponent_C_GetUpperKeyFrameDataByTime::Time' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetUpperKeyFrameDataByTime, NewParam) == 0x000008, "Member 'BP_SplineTrackComponent_C_GetUpperKeyFrameDataByTime::NewParam' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetUpperKeyFrameDataByTime, Temp_int_Variable) == 0x000020, "Member 'BP_SplineTrackComponent_C_GetUpperKeyFrameDataByTime::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetUpperKeyFrameDataByTime, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_SplineTrackComponent_C_GetUpperKeyFrameDataByTime::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetUpperKeyFrameDataByTime, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_SplineTrackComponent_C_GetUpperKeyFrameDataByTime::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetUpperKeyFrameDataByTime, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_SplineTrackComponent_C_GetUpperKeyFrameDataByTime::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetUpperKeyFrameDataByTime, CallFunc_Subtract_IntInt_ReturnValue) == 0x000030, "Member 'BP_SplineTrackComponent_C_GetUpperKeyFrameDataByTime::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_GetUpperKeyFrameDataByTime, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000034, "Member 'BP_SplineTrackComponent_C_GetUpperKeyFrameDataByTime::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.HasArrivedNextPoint
// 0x0040 (0x0040 - 0x0000)
struct BP_SplineTrackComponent_C_HasArrivedNextPoint final
{
public:
	bool                                          bArrived;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsClosedLoop_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_1;    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast;    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_HasArrivedNextPoint) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_HasArrivedNextPoint");
static_assert(sizeof(BP_SplineTrackComponent_C_HasArrivedNextPoint) == 0x000040, "Wrong size on BP_SplineTrackComponent_C_HasArrivedNextPoint");
static_assert(offsetof(BP_SplineTrackComponent_C_HasArrivedNextPoint, bArrived) == 0x000000, "Member 'BP_SplineTrackComponent_C_HasArrivedNextPoint::bArrived' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_HasArrivedNextPoint, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000004, "Member 'BP_SplineTrackComponent_C_HasArrivedNextPoint::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_HasArrivedNextPoint, CallFunc_IsClosedLoop_ReturnValue) == 0x000008, "Member 'BP_SplineTrackComponent_C_HasArrivedNextPoint::CallFunc_IsClosedLoop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_HasArrivedNextPoint, CallFunc_GetNumberOfSplinePoints_ReturnValue_1) == 0x00000C, "Member 'BP_SplineTrackComponent_C_HasArrivedNextPoint::CallFunc_GetNumberOfSplinePoints_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_HasArrivedNextPoint, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'BP_SplineTrackComponent_C_HasArrivedNextPoint::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_HasArrivedNextPoint, Temp_bool_Variable) == 0x000014, "Member 'BP_SplineTrackComponent_C_HasArrivedNextPoint::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_HasArrivedNextPoint, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue) == 0x000018, "Member 'BP_SplineTrackComponent_C_HasArrivedNextPoint::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_HasArrivedNextPoint, K2Node_Select_Default) == 0x00001C, "Member 'BP_SplineTrackComponent_C_HasArrivedNextPoint::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_HasArrivedNextPoint, CallFunc_InRange_IntInt_ReturnValue) == 0x000020, "Member 'BP_SplineTrackComponent_C_HasArrivedNextPoint::CallFunc_InRange_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_HasArrivedNextPoint, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000021, "Member 'BP_SplineTrackComponent_C_HasArrivedNextPoint::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_HasArrivedNextPoint, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1) == 0x000024, "Member 'BP_SplineTrackComponent_C_HasArrivedNextPoint::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_HasArrivedNextPoint, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_SplineTrackComponent_C_HasArrivedNextPoint::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_HasArrivedNextPoint, CallFunc_BooleanOR_ReturnValue) == 0x000029, "Member 'BP_SplineTrackComponent_C_HasArrivedNextPoint::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_HasArrivedNextPoint, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast) == 0x000030, "Member 'BP_SplineTrackComponent_C_HasArrivedNextPoint::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_HasArrivedNextPoint, CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast) == 0x000038, "Member 'BP_SplineTrackComponent_C_HasArrivedNextPoint::CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.HasReachedEnd
// 0x0014 (0x0014 - 0x0000)
struct BP_SplineTrackComponent_C_HasReachedEnd final
{
public:
	bool                                          bReachedEnd;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsClosedLoop_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_HasReachedEnd) == 0x000004, "Wrong alignment on BP_SplineTrackComponent_C_HasReachedEnd");
static_assert(sizeof(BP_SplineTrackComponent_C_HasReachedEnd) == 0x000014, "Wrong size on BP_SplineTrackComponent_C_HasReachedEnd");
static_assert(offsetof(BP_SplineTrackComponent_C_HasReachedEnd, bReachedEnd) == 0x000000, "Member 'BP_SplineTrackComponent_C_HasReachedEnd::bReachedEnd' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_HasReachedEnd, Temp_bool_Variable) == 0x000001, "Member 'BP_SplineTrackComponent_C_HasReachedEnd::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_HasReachedEnd, Temp_bool_Variable_1) == 0x000002, "Member 'BP_SplineTrackComponent_C_HasReachedEnd::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_HasReachedEnd, Temp_bool_Variable_2) == 0x000003, "Member 'BP_SplineTrackComponent_C_HasReachedEnd::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_HasReachedEnd, CallFunc_IsClosedLoop_ReturnValue) == 0x000004, "Member 'BP_SplineTrackComponent_C_HasReachedEnd::CallFunc_IsClosedLoop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_HasReachedEnd, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000005, "Member 'BP_SplineTrackComponent_C_HasReachedEnd::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_HasReachedEnd, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000008, "Member 'BP_SplineTrackComponent_C_HasReachedEnd::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_HasReachedEnd, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'BP_SplineTrackComponent_C_HasReachedEnd::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_HasReachedEnd, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000010, "Member 'BP_SplineTrackComponent_C_HasReachedEnd::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_HasReachedEnd, K2Node_Select_Default) == 0x000011, "Member 'BP_SplineTrackComponent_C_HasReachedEnd::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_HasReachedEnd, K2Node_Select_Default_1) == 0x000012, "Member 'BP_SplineTrackComponent_C_HasReachedEnd::K2Node_Select_Default_1' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.InitDistanceAndIndex
// 0x0960 (0x0960 - 0x0000)
struct BP_SplineTrackComponent_C_InitDistanceAndIndex final
{
public:
	TArray<int32>                                 SortedKeys_0;                                      // 0x0000(0x0010)(Edit, BlueprintVisible)
	TMap<int32, struct FTrackSegmentOverride>     TempMap_0;                                         // 0x0010(0x0050)(Edit, BlueprintVisible)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0080(0x0010)()
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0098(0x0048)(HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue_1;              // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0100(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0110(0x0048)(HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue_2;              // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0170(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0180(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_GetKeyFrameTimeByDistance_KeyFrameTime;   // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x3];                                      // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsClosedLoop_ReturnValue;                 // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplineInputKey_ReturnValue; // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_1;    // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0218(0x0048)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0268(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x02B0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x02F8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C[0x4];                                      // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0310(0x0010)()
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue; // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0328(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_3;          // 0x0338(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0348(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x0390(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_8;            // 0x03D8(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_2;    // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_424[0x4];                                      // 0x0424(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0428(0x0010)(ReferenceParm)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43C[0x4];                                      // 0x043C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0440(0x0010)()
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0458(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_4;          // 0x0468(0x0010)()
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_9;            // 0x0480(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x04C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CC[0x4];                                      // 0x04CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x04D0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Clamp_ReturnValue_1;                      // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E4[0x4];                                      // 0x04E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x04E8(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x04F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplineInputKey_ReturnValue_1; // 0x0508(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x050C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50D[0x3];                                      // 0x050D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_3;    // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasReachedEnd_bReachedEnd;                // 0x0514(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_515[0x3];                                      // 0x0515(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_5;            // 0x0518(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51C[0x4];                                      // 0x051C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_3;                   // 0x0520(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0528(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52C[0x4];                                      // 0x052C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue_3;              // 0x0530(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_5;          // 0x0540(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_10;           // 0x0550(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x0598(0x0010)(ReferenceParm)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_2;            // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x05B0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_11;           // 0x05C0(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_3;          // 0x0608(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_3;            // 0x0618(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_12;           // 0x0620(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_13;           // 0x0668(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_4;                          // 0x06B0(0x0010)(ReferenceParm)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_3;        // 0x06C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C1[0x7];                                      // 0x06C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_4;                     // 0x06C8(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_4;          // 0x06D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_6;          // 0x06E8(0x0010)()
	int32                                         CallFunc_Clamp_ReturnValue_2;                      // 0x06F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6FC[0x4];                                      // 0x06FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_14;           // 0x0700(0x0048)(HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1; // 0x0748(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74C[0x4];                                      // 0x074C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_5;                          // 0x0750(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_5;                     // 0x0760(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_5;          // 0x0770(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_15;           // 0x0780(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_4;    // 0x07C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7CC[0x4];                                      // 0x07CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_16;           // 0x07D0(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_6;            // 0x0818(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81C[0x4];                                      // 0x081C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_6;                          // 0x0820(0x0010)(ReferenceParm)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0830(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_6;                     // 0x0838(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_6;          // 0x0848(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_2;                     // 0x0858(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_7;          // 0x0860(0x0010)()
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0870(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_874[0x4];                                      // 0x0874(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_17;           // 0x0878(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue_3;                      // 0x08C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C4[0x4];                                      // 0x08C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_7;                          // 0x08C8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_7;                     // 0x08D8(0x0010)()
	float                                         CallFunc_GetDistanceAlongSplineAtSplineInputKey_ReturnValue_2; // 0x08E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8EC[0x4];                                      // 0x08EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_7;          // 0x08F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0900(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_901[0x7];                                      // 0x0901(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_Value_ImplicitCast;                // 0x0908(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplineInputKey_InKey_ImplicitCast; // 0x0910(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_914[0x4];                                      // 0x0914(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_CurrentDistance_ImplicitCast;   // 0x0918(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_CurrentDistance_ImplicitCast_1; // 0x0920(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Value_ImplicitCast_1;              // 0x0928(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplineInputKey_InKey_ImplicitCast_1; // 0x0930(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_934[0x4];                                      // 0x0934(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_CurrentDistance_ImplicitCast_2; // 0x0938(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_CurrentDistance_ImplicitCast_3; // 0x0940(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Value_ImplicitCast_2;              // 0x0948(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplineInputKey_InKey_ImplicitCast_2; // 0x0950(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_954[0x4];                                      // 0x0954(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_CurrentDistance_ImplicitCast_4; // 0x0958(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_InitDistanceAndIndex) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_InitDistanceAndIndex");
static_assert(sizeof(BP_SplineTrackComponent_C_InitDistanceAndIndex) == 0x000960, "Wrong size on BP_SplineTrackComponent_C_InitDistanceAndIndex");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, SortedKeys_0) == 0x000000, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::SortedKeys_0' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, TempMap_0) == 0x000010, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::TempMap_0' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_Subtract_IntInt_ReturnValue) == 0x000060, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_GetOwner_ReturnValue) == 0x000068, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_GetObjectName_ReturnValue) == 0x000070, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_Conv_StringToText_ReturnValue) == 0x000080, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000090, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, K2Node_MakeStruct_FormatArgumentData) == 0x000098, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_GetOwner_ReturnValue_1) == 0x0000E0, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_GetObjectName_ReturnValue_1) == 0x0000E8, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_GetObjectName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x0000F8, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000100, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, K2Node_MakeStruct_FormatArgumentData_1) == 0x000110, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_GetOwner_ReturnValue_2) == 0x000158, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_GetObjectName_ReturnValue_2) == 0x000160, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_GetObjectName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000170, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, K2Node_MakeStruct_FormatArgumentData_2) == 0x000180, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_GetKeyFrameTimeByDistance_KeyFrameTime) == 0x0001C8, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_GetKeyFrameTimeByDistance_KeyFrameTime' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_BooleanOR_ReturnValue) == 0x0001D0, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x0001D4, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x0001D8, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0001E0, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_IsClosedLoop_ReturnValue) == 0x0001E8, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_IsClosedLoop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_FClamp_ReturnValue) == 0x0001F0, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_GetDistanceAlongSplineAtSplineInputKey_ReturnValue) == 0x0001F8, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_GetDistanceAlongSplineAtSplineInputKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0001FC, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000200, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_GetNumberOfSplinePoints_ReturnValue_1) == 0x000204, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_GetNumberOfSplinePoints_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000208, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000210, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, K2Node_MakeStruct_FormatArgumentData_3) == 0x000218, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000260, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, K2Node_MakeStruct_FormatArgumentData_4) == 0x000268, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, K2Node_MakeStruct_FormatArgumentData_5) == 0x0002B0, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, K2Node_MakeArray_Array) == 0x0002F8, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_Clamp_ReturnValue) == 0x000308, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_Format_ReturnValue) == 0x000310, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue) == 0x000320, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_Conv_TextToString_ReturnValue) == 0x000328, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_Conv_StringToText_ReturnValue_3) == 0x000338, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_Conv_StringToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, K2Node_MakeStruct_FormatArgumentData_6) == 0x000348, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, K2Node_MakeStruct_FormatArgumentData_7) == 0x000390, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, K2Node_MakeStruct_FormatArgumentData_8) == 0x0003D8, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::K2Node_MakeStruct_FormatArgumentData_8' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_GetNumberOfSplinePoints_ReturnValue_2) == 0x000420, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_GetNumberOfSplinePoints_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, K2Node_MakeArray_Array_1) == 0x000428, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x000438, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_Format_ReturnValue_1) == 0x000440, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000450, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000458, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_Conv_StringToText_ReturnValue_4) == 0x000468, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_Conv_StringToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_FClamp_ReturnValue_1) == 0x000478, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, K2Node_MakeStruct_FormatArgumentData_9) == 0x000480, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::K2Node_MakeStruct_FormatArgumentData_9' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_FCeil_ReturnValue) == 0x0004C8, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, K2Node_MakeArray_Array_2) == 0x0004D0, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_Clamp_ReturnValue_1) == 0x0004E0, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_Clamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_Format_ReturnValue_2) == 0x0004E8, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_Conv_TextToString_ReturnValue_2) == 0x0004F8, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_GetDistanceAlongSplineAtSplineInputKey_ReturnValue_1) == 0x000508, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_GetDistanceAlongSplineAtSplineInputKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, K2Node_SwitchEnum_CmpSuccess) == 0x00050C, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_GetNumberOfSplinePoints_ReturnValue_3) == 0x000510, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_GetNumberOfSplinePoints_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_HasReachedEnd_bReachedEnd) == 0x000514, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_HasReachedEnd_bReachedEnd' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_Subtract_IntInt_ReturnValue_5) == 0x000518, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_Subtract_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_GetOwner_ReturnValue_3) == 0x000520, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_GetOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_Add_IntInt_ReturnValue_1) == 0x000528, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_GetObjectName_ReturnValue_3) == 0x000530, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_GetObjectName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_Conv_StringToText_ReturnValue_5) == 0x000540, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_Conv_StringToText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, K2Node_MakeStruct_FormatArgumentData_10) == 0x000550, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::K2Node_MakeStruct_FormatArgumentData_10' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, K2Node_MakeArray_Array_3) == 0x000598, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_Conv_IntToInt64_ReturnValue_2) == 0x0005A8, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_Conv_IntToInt64_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_Format_ReturnValue_3) == 0x0005B0, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, K2Node_MakeStruct_FormatArgumentData_11) == 0x0005C0, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::K2Node_MakeStruct_FormatArgumentData_11' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_Conv_TextToString_ReturnValue_3) == 0x000608, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_Conv_TextToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_Conv_IntToInt64_ReturnValue_3) == 0x000618, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_Conv_IntToInt64_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, K2Node_MakeStruct_FormatArgumentData_12) == 0x000620, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::K2Node_MakeStruct_FormatArgumentData_12' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, K2Node_MakeStruct_FormatArgumentData_13) == 0x000668, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::K2Node_MakeStruct_FormatArgumentData_13' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, K2Node_MakeArray_Array_4) == 0x0006B0, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_GreaterEqual_IntInt_ReturnValue_3) == 0x0006C0, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_GreaterEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_Format_ReturnValue_4) == 0x0006C8, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_Format_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_Conv_TextToString_ReturnValue_4) == 0x0006D8, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_Conv_TextToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_Conv_StringToText_ReturnValue_6) == 0x0006E8, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_Conv_StringToText_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_Clamp_ReturnValue_2) == 0x0006F8, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_Clamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, K2Node_MakeStruct_FormatArgumentData_14) == 0x000700, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::K2Node_MakeStruct_FormatArgumentData_14' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1) == 0x000748, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, K2Node_MakeArray_Array_5) == 0x000750, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_Format_ReturnValue_5) == 0x000760, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_Format_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_Conv_TextToString_ReturnValue_5) == 0x000770, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_Conv_TextToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, K2Node_MakeStruct_FormatArgumentData_15) == 0x000780, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::K2Node_MakeStruct_FormatArgumentData_15' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_GetNumberOfSplinePoints_ReturnValue_4) == 0x0007C8, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_GetNumberOfSplinePoints_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, K2Node_MakeStruct_FormatArgumentData_16) == 0x0007D0, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::K2Node_MakeStruct_FormatArgumentData_16' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_Subtract_IntInt_ReturnValue_6) == 0x000818, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_Subtract_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, K2Node_MakeArray_Array_6) == 0x000820, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::K2Node_MakeArray_Array_6' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000830, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_Format_ReturnValue_6) == 0x000838, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_Format_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_Conv_TextToString_ReturnValue_6) == 0x000848, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_Conv_TextToString_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_FClamp_ReturnValue_2) == 0x000858, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_Conv_StringToText_ReturnValue_7) == 0x000860, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_Conv_StringToText_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_FFloor_ReturnValue) == 0x000870, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, K2Node_MakeStruct_FormatArgumentData_17) == 0x000878, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::K2Node_MakeStruct_FormatArgumentData_17' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_Clamp_ReturnValue_3) == 0x0008C0, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_Clamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, K2Node_MakeArray_Array_7) == 0x0008C8, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::K2Node_MakeArray_Array_7' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_Format_ReturnValue_7) == 0x0008D8, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_Format_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_GetDistanceAlongSplineAtSplineInputKey_ReturnValue_2) == 0x0008E8, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_GetDistanceAlongSplineAtSplineInputKey_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_Conv_TextToString_ReturnValue_7) == 0x0008F0, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_Conv_TextToString_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, K2Node_SwitchEnum_CmpSuccess_1) == 0x000900, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_FClamp_Value_ImplicitCast) == 0x000908, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_FClamp_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_GetDistanceAlongSplineAtSplineInputKey_InKey_ImplicitCast) == 0x000910, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_GetDistanceAlongSplineAtSplineInputKey_InKey_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, K2Node_VariableSet_CurrentDistance_ImplicitCast) == 0x000918, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::K2Node_VariableSet_CurrentDistance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, K2Node_VariableSet_CurrentDistance_ImplicitCast_1) == 0x000920, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::K2Node_VariableSet_CurrentDistance_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_FClamp_Value_ImplicitCast_1) == 0x000928, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_FClamp_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_GetDistanceAlongSplineAtSplineInputKey_InKey_ImplicitCast_1) == 0x000930, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_GetDistanceAlongSplineAtSplineInputKey_InKey_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, K2Node_VariableSet_CurrentDistance_ImplicitCast_2) == 0x000938, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::K2Node_VariableSet_CurrentDistance_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, K2Node_VariableSet_CurrentDistance_ImplicitCast_3) == 0x000940, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::K2Node_VariableSet_CurrentDistance_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_FClamp_Value_ImplicitCast_2) == 0x000948, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_FClamp_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, CallFunc_GetDistanceAlongSplineAtSplineInputKey_InKey_ImplicitCast_2) == 0x000950, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::CallFunc_GetDistanceAlongSplineAtSplineInputKey_InKey_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitDistanceAndIndex, K2Node_VariableSet_CurrentDistance_ImplicitCast_4) == 0x000958, "Member 'BP_SplineTrackComponent_C_InitDistanceAndIndex::K2Node_VariableSet_CurrentDistance_ImplicitCast_4' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.InitKeyFrameData
// 0x0308 (0x0308 - 0x0000)
struct BP_SplineTrackComponent_C_InitKeyFrameData final
{
public:
	int32                                         NextSegmentIndex_Local;                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bForward;                                          // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SegmentIndex;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NextSplinePointDistance;                           // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BlendDistance;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NextSegmentSpeed;                                  // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        BlendTime;                                         // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasSegmentOverride;                               // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTrackSegmentOverride                  SegmentOverride;                                   // 0x002C(0x0020)(Edit, BlueprintVisible, NoDestructor)
	float                                         SegmentSpeed;                                      // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_SplineTrackKeyFrameData             LastKeyFrameData;                                  // 0x0050(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_32ByteByte_ReturnValue;        // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsClosedLoop_ReturnValue;                 // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsClosedLoop_ReturnValue_1;               // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_32ByteByte_ReturnValue_1;      // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsClosedLoop_ReturnValue_2;               // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsClosedLoop_ReturnValue_3;               // 0x007F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E[0x2];                                       // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue; // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetSpeedOnSplineSegmentImpl_Speed;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTrackSegmentOverride                  CallFunc_Map_Find_Value;                           // 0x00B4(0x0020)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D6[0x2];                                       // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_1;    // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_32ByteByte_ReturnValue_2;      // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_32ByteByte_ReturnValue_3;      // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E7[0x1];                                       // 0x00E7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetSpeedOnSplineSegmentImpl_Speed_1;      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_SplineTrackKeyFrameData             CallFunc_AddKeyFrameDataConst_NewData;             // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_SplineTrackKeyFrameData             CallFunc_AddKeyFrameDataConst_NewData_1;           // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_SplineTrackKeyFrameData             CallFunc_AddKeyFrameDataBlend_NewData;             // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0163(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_SplineTrackKeyFrameData             CallFunc_AddKeyFrameDataBlend_NewData_1;           // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_183[0x1];                                      // 0x0183(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_2;                  // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, struct FTrackSegmentOverride>     K2Node_Select_Default;                             // 0x0198(0x0050)()
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_1;      // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x3];                                      // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTrackSegmentOverride                  CallFunc_Map_Find_Value_1;                         // 0x01EC(0x0020)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x020D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x020E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x020F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTrackSegmentOverride                  CallFunc_Map_Find_Value_2;                         // 0x0210(0x0020)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_232[0x6];                                      // 0x0232(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_SplineTrackKeyFrameData             CallFunc_AddKeyFrameDataStay_NewData;              // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_2;    // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_SplineTrackKeyFrameData             K2Node_MakeStruct_F_SplineTrackKeyFrameData;       // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271[0x3];                                      // 0x0271(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_VariableSet_NextSegmentSpeed_ImplicitCast;  // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_SegmentSpeed_ImplicitCast;      // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27C[0x4];                                      // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_AddKeyFrameDataBlend_NewSpeed_ImplicitCast; // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_AddKeyFrameDataConst_EndDistance_ImplicitCast; // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_BlendTime_ImplicitCast;         // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_BlendTime_ImplicitCast_1;       // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_B_ImplicitCast;     // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast;     // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_AddKeyFrameDataBlend_NewSpeed_ImplicitCast_1; // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_BlendTime_ImplicitCast_2;       // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_1;    // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_BlendTime_ImplicitCast_3;       // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_B_ImplicitCast_1;   // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_AddKeyFrameDataStay_StayTime_ImplicitCast; // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_2;    // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_InitKeyFrameData) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_InitKeyFrameData");
static_assert(sizeof(BP_SplineTrackComponent_C_InitKeyFrameData) == 0x000308, "Wrong size on BP_SplineTrackComponent_C_InitKeyFrameData");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, NextSegmentIndex_Local) == 0x000000, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::NextSegmentIndex_Local' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, bForward) == 0x000004, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::bForward' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, SegmentIndex) == 0x000008, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::SegmentIndex' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, NextSplinePointDistance) == 0x00000C, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::NextSplinePointDistance' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, BlendDistance) == 0x000010, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::BlendDistance' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, NextSegmentSpeed) == 0x000018, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::NextSegmentSpeed' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, BlendTime) == 0x000020, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::BlendTime' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, bHasSegmentOverride) == 0x000028, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::bHasSegmentOverride' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, SegmentOverride) == 0x00002C, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::SegmentOverride' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, SegmentSpeed) == 0x00004C, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::SegmentSpeed' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, LastKeyFrameData) == 0x000050, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::LastKeyFrameData' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_EqualEqual_32ByteByte_ReturnValue) == 0x00006C, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_EqualEqual_32ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_IsClosedLoop_ReturnValue) == 0x00006D, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_IsClosedLoop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_IsClosedLoop_ReturnValue_1) == 0x00006E, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_IsClosedLoop_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_BooleanAND_ReturnValue) == 0x00006F, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_Not_PreBool_ReturnValue) == 0x000070, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000074, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_Subtract_IntInt_ReturnValue) == 0x000078, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_EqualEqual_32ByteByte_ReturnValue_1) == 0x00007C, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_EqualEqual_32ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_IsClosedLoop_ReturnValue_2) == 0x00007D, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_IsClosedLoop_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_BooleanAND_ReturnValue_1) == 0x00007E, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_IsClosedLoop_ReturnValue_3) == 0x00007F, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_IsClosedLoop_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_Not_PreBool_ReturnValue_1) == 0x000080, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_Not_PreBool_ReturnValue_2) == 0x000088, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000089, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00008A, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_BooleanOR_ReturnValue) == 0x00008B, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_BooleanOR_ReturnValue_1) == 0x00008C, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_BooleanAND_ReturnValue_2) == 0x00008D, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_SelectInt_ReturnValue) == 0x000090, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_SelectInt_ReturnValue_1) == 0x000094, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue) == 0x000098, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_GetSpeedOnSplineSegmentImpl_Speed) == 0x0000A0, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_GetSpeedOnSplineSegmentImpl_Speed' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, Temp_int_Variable) == 0x0000A8, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000AC, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0000B0, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_Map_Find_Value) == 0x0000B4, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_Map_Find_ReturnValue) == 0x0000D4, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000D5, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D8, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_GetNumberOfSplinePoints_ReturnValue_1) == 0x0000DC, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_GetNumberOfSplinePoints_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x0000E0, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_EqualEqual_32ByteByte_ReturnValue_2) == 0x0000E4, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_EqualEqual_32ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_EqualEqual_32ByteByte_ReturnValue_3) == 0x0000E5, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_EqualEqual_32ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_BooleanOR_ReturnValue_2) == 0x0000E6, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_GetSpeedOnSplineSegmentImpl_Speed_1) == 0x0000E8, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_GetSpeedOnSplineSegmentImpl_Speed_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_BooleanAND_ReturnValue_3) == 0x0000F0, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000F8, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_AddKeyFrameDataConst_NewData) == 0x000100, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_AddKeyFrameDataConst_NewData' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_AddKeyFrameDataConst_NewData_1) == 0x000118, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_AddKeyFrameDataConst_NewData_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_AddKeyFrameDataBlend_NewData) == 0x000130, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_AddKeyFrameDataBlend_NewData' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000148, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000150, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000158, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000160, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_BooleanAND_ReturnValue_4) == 0x000161, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_BooleanAND_ReturnValue_5) == 0x000162, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000163, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_AddKeyFrameDataBlend_NewData_1) == 0x000168, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_AddKeyFrameDataBlend_NewData_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000180, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_BooleanAND_ReturnValue_6) == 0x000181, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_BooleanAND_ReturnValue_7) == 0x000182, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, Temp_int_Variable_1) == 0x000184, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_Add_IntInt_ReturnValue_2) == 0x000188, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_SelectInt_ReturnValue_2) == 0x00018C, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_SelectInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, Temp_bool_Variable) == 0x000190, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, K2Node_Select_Default) == 0x000198, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_NotEqual_DoubleDouble_ReturnValue_1) == 0x0001E8, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_NotEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_Map_Find_Value_1) == 0x0001EC, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_Map_Find_ReturnValue_1) == 0x00020C, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_BooleanAND_ReturnValue_8) == 0x00020D, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x00020E, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_BooleanAND_ReturnValue_9) == 0x00020F, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_Map_Find_Value_2) == 0x000210, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_Map_Find_ReturnValue_2) == 0x000230, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_BooleanAND_ReturnValue_10) == 0x000231, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_AddKeyFrameDataStay_NewData) == 0x000238, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_AddKeyFrameDataStay_NewData' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_GetNumberOfSplinePoints_ReturnValue_2) == 0x000250, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_GetNumberOfSplinePoints_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x000254, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, K2Node_MakeStruct_F_SplineTrackKeyFrameData) == 0x000258, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::K2Node_MakeStruct_F_SplineTrackKeyFrameData' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000270, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, K2Node_VariableSet_NextSegmentSpeed_ImplicitCast) == 0x000274, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::K2Node_VariableSet_NextSegmentSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, K2Node_VariableSet_SegmentSpeed_ImplicitCast) == 0x000278, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::K2Node_VariableSet_SegmentSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_AddKeyFrameDataBlend_NewSpeed_ImplicitCast) == 0x000280, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_AddKeyFrameDataBlend_NewSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000288, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_AddKeyFrameDataConst_EndDistance_ImplicitCast) == 0x000290, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_AddKeyFrameDataConst_EndDistance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000298, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0002A0, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, K2Node_VariableSet_BlendTime_ImplicitCast) == 0x0002A8, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::K2Node_VariableSet_BlendTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0002B0, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, K2Node_VariableSet_BlendTime_ImplicitCast_1) == 0x0002B8, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::K2Node_VariableSet_BlendTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_NotEqual_DoubleDouble_B_ImplicitCast) == 0x0002C0, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_NotEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast) == 0x0002C8, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_AddKeyFrameDataBlend_NewSpeed_ImplicitCast_1) == 0x0002D0, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_AddKeyFrameDataBlend_NewSpeed_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, K2Node_VariableSet_BlendTime_ImplicitCast_2) == 0x0002D8, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::K2Node_VariableSet_BlendTime_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_Greater_DoubleDouble_A_ImplicitCast_1) == 0x0002E0, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_Greater_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, K2Node_VariableSet_BlendTime_ImplicitCast_3) == 0x0002E8, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::K2Node_VariableSet_BlendTime_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_NotEqual_DoubleDouble_B_ImplicitCast_1) == 0x0002F0, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_NotEqual_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_AddKeyFrameDataStay_StayTime_ImplicitCast) == 0x0002F8, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_AddKeyFrameDataStay_StayTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitKeyFrameData, CallFunc_Greater_DoubleDouble_A_ImplicitCast_2) == 0x000300, "Member 'BP_SplineTrackComponent_C_InitKeyFrameData::CallFunc_Greater_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.InitSegmentOverrides
// 0x0368 (0x0368 - 0x0000)
struct BP_SplineTrackComponent_C_InitSegmentOverrides final
{
public:
	struct FTrackSegmentOverride                  TempSegment;                                       // 0x0000(0x0020)(Edit, BlueprintVisible, NoDestructor)
	TArray<int32>                                 SortedKeys_0;                                      // 0x0020(0x0010)(Edit, BlueprintVisible)
	TMap<int32, struct FTrackSegmentOverride>     TempMap_0;                                         // 0x0030(0x0050)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_Map_Keys_Keys;                            // 0x00B8(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_Map_Keys_Keys_1;                          // 0x00D8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2[0x2];                                       // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTrackSegmentOverride                  CallFunc_Map_Find_Value;                           // 0x00F4(0x0020)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSegmentOverrideAnything_bOverrideSomething; // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_116[0x2];                                      // 0x0116(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_IntInt_ReturnValue;               // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_143[0x1];                                      // 0x0143(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTrackSegmentOverride                  K2Node_MakeStruct_TrackSegmentOverride;            // 0x0148(0x0020)(NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_7;                  // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTrackSegmentOverride                  K2Node_SetFieldsInStruct_StructOut;                // 0x016C(0x0020)(NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_8;                  // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_Map_Keys_Keys_2;                          // 0x0198(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AD[0x3];                                      // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_7;                   // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_8;                   // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_3;                         // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTrackSegmentOverride                  CallFunc_Map_Find_Value_1;                         // 0x01C0(0x0020)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E2[0x2];                                      // 0x01E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTrackSegmentOverride                  K2Node_MakeStruct_TrackSegmentOverride_1;          // 0x01E4(0x0020)(NoDestructor)
	struct FTrackSegmentOverride                  K2Node_SetFieldsInStruct_StructOut_1;              // 0x0204(0x0020)(NoDestructor)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_Map_Keys_Keys_3;                          // 0x0228(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item_4;                         // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_245[0x3];                                      // 0x0245(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTrackSegmentOverride                  CallFunc_Map_Find_Value_2;                         // 0x0248(0x0020)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_269[0x3];                                      // 0x0269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_5;                         // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_9;                  // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x0279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27A[0x2];                                      // 0x027A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTrackSegmentOverride                  CallFunc_Map_Find_Value_3;                         // 0x0280(0x0020)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x3];                                      // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_9;                   // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_6;                         // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_7;                         // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTrackSegmentOverride                  CallFunc_Map_Find_Value_4;                         // 0x02B0(0x0020)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue_4;                   // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x3];                                      // 0x02D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTrackSegmentOverride                  CallFunc_Map_Find_Value_5;                         // 0x02D4(0x0020)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue_5;                   // 0x02F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F5[0x3];                                      // 0x02F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_8;                // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FD[0x3];                                      // 0x02FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_8;                         // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0304(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_305[0x3];                                      // 0x0305(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_9;                // 0x030C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30D[0x3];                                      // 0x030D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_Map_Keys_Keys_4;                          // 0x0310(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_1;    // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_Map_Keys_Keys_5;                          // 0x0328(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_9;                         // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_10;               // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue_1;                 // 0x0341(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_IntInt_ReturnValue_1;             // 0x0342(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_343[0x1];                                      // 0x0343(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTrackSegmentOverride                  CallFunc_Map_Find_Value_6;                         // 0x0344(0x0020)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue_6;                   // 0x0364(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSegmentOverrideAnything_bOverrideSomething_1; // 0x0365(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0366(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_InitSegmentOverrides) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_InitSegmentOverrides");
static_assert(sizeof(BP_SplineTrackComponent_C_InitSegmentOverrides) == 0x000368, "Wrong size on BP_SplineTrackComponent_C_InitSegmentOverrides");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, TempSegment) == 0x000000, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::TempSegment' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, SortedKeys_0) == 0x000020, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::SortedKeys_0' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, TempMap_0) == 0x000030, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::TempMap_0' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, Temp_int_Array_Index_Variable) == 0x000080, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, Temp_int_Array_Index_Variable_1) == 0x000084, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, Temp_int_Loop_Counter_Variable) == 0x000088, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Add_IntInt_ReturnValue) == 0x00008C, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, Temp_int_Array_Index_Variable_2) == 0x000090, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, Temp_int_Loop_Counter_Variable_1) == 0x000094, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, Temp_int_Loop_Counter_Variable_2) == 0x000098, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Add_IntInt_ReturnValue_1) == 0x00009C, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000A0, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, Temp_int_Array_Index_Variable_3) == 0x0000A4, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, Temp_int_Array_Index_Variable_4) == 0x0000A8, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, Temp_int_Loop_Counter_Variable_3) == 0x0000AC, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000B0, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, Temp_int_Array_Index_Variable_5) == 0x0000B4, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Map_Keys_Keys) == 0x0000B8, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, Temp_int_Loop_Counter_Variable_4) == 0x0000C8, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000CC, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, Temp_int_Loop_Counter_Variable_5) == 0x0000D0, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Map_Keys_Keys_1) == 0x0000D8, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Map_Keys_Keys_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Array_Get_Item) == 0x0000E8, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Array_Length_ReturnValue) == 0x0000EC, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Map_Remove_ReturnValue) == 0x0000F0, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Less_IntInt_ReturnValue) == 0x0000F1, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Map_Find_Value) == 0x0000F4, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Map_Find_ReturnValue) == 0x000114, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_DoesSegmentOverrideAnything_bOverrideSomething) == 0x000115, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_DoesSegmentOverrideAnything_bOverrideSomething' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Add_IntInt_ReturnValue_5) == 0x000118, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Array_Length_ReturnValue_1) == 0x00011C, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Array_Length_ReturnValue_2) == 0x000120, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Array_Get_Item_1) == 0x000124, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Array_Length_ReturnValue_3) == 0x000128, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Less_IntInt_ReturnValue_1) == 0x00012C, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, Temp_int_Array_Index_Variable_6) == 0x000130, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000134, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, Temp_int_Loop_Counter_Variable_6) == 0x000138, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Subtract_IntInt_ReturnValue) == 0x00013C, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Less_IntInt_ReturnValue_2) == 0x000140, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_InRange_IntInt_ReturnValue) == 0x000141, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_InRange_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_BooleanAND_ReturnValue) == 0x000142, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Add_IntInt_ReturnValue_6) == 0x000144, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, K2Node_MakeStruct_TrackSegmentOverride) == 0x000148, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::K2Node_MakeStruct_TrackSegmentOverride' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, Temp_int_Loop_Counter_Variable_7) == 0x000168, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::Temp_int_Loop_Counter_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, K2Node_SetFieldsInStruct_StructOut) == 0x00016C, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Add_IntInt_ReturnValue_7) == 0x00018C, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, Temp_int_Loop_Counter_Variable_8) == 0x000190, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::Temp_int_Loop_Counter_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Add_IntInt_ReturnValue_8) == 0x000194, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Map_Keys_Keys_2) == 0x000198, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Map_Keys_Keys_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Array_Length_ReturnValue_4) == 0x0001A8, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Less_IntInt_ReturnValue_3) == 0x0001AC, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, Temp_int_Array_Index_Variable_7) == 0x0001B0, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::Temp_int_Array_Index_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, Temp_int_Array_Index_Variable_8) == 0x0001B4, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::Temp_int_Array_Index_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Array_Get_Item_2) == 0x0001B8, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Array_Get_Item_3) == 0x0001BC, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Map_Find_Value_1) == 0x0001C0, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Map_Find_ReturnValue_1) == 0x0001E0, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Less_IntInt_ReturnValue_4) == 0x0001E1, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, K2Node_MakeStruct_TrackSegmentOverride_1) == 0x0001E4, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::K2Node_MakeStruct_TrackSegmentOverride_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, K2Node_SetFieldsInStruct_StructOut_1) == 0x000204, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::K2Node_SetFieldsInStruct_StructOut_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Map_Keys_Keys_3) == 0x000228, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Map_Keys_Keys_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Array_Get_Item_4) == 0x000238, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Array_Length_ReturnValue_5) == 0x00023C, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000240, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Less_IntInt_ReturnValue_5) == 0x000244, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Map_Find_Value_2) == 0x000248, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Map_Find_ReturnValue_2) == 0x000268, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Array_Get_Item_5) == 0x00026C, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Array_Length_ReturnValue_6) == 0x000270, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, Temp_int_Loop_Counter_Variable_9) == 0x000274, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::Temp_int_Loop_Counter_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Less_IntInt_ReturnValue_6) == 0x000278, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Less_IntInt_ReturnValue_7) == 0x000279, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Add_IntInt_ReturnValue_9) == 0x00027C, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Map_Find_Value_3) == 0x000280, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Map_Find_ReturnValue_3) == 0x0002A0, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, Temp_int_Array_Index_Variable_9) == 0x0002A4, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::Temp_int_Array_Index_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Array_Get_Item_6) == 0x0002A8, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Array_Get_Item_7) == 0x0002AC, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Map_Find_Value_4) == 0x0002B0, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Map_Find_Value_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Map_Find_ReturnValue_4) == 0x0002D0, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Map_Find_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Map_Find_Value_5) == 0x0002D4, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Map_Find_Value_5' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Map_Find_ReturnValue_5) == 0x0002F4, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Map_Find_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Array_Length_ReturnValue_7) == 0x0002F8, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Less_IntInt_ReturnValue_8) == 0x0002FC, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Less_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Array_Get_Item_8) == 0x000300, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Greater_IntInt_ReturnValue) == 0x000304, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Array_Length_ReturnValue_8) == 0x000308, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Less_IntInt_ReturnValue_9) == 0x00030C, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Less_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Map_Keys_Keys_4) == 0x000310, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Map_Keys_Keys_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_GetNumberOfSplinePoints_ReturnValue_1) == 0x000320, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_GetNumberOfSplinePoints_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000324, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Map_Keys_Keys_5) == 0x000328, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Map_Keys_Keys_5' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Array_Length_ReturnValue_9) == 0x000338, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Array_Get_Item_9) == 0x00033C, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Less_IntInt_ReturnValue_10) == 0x000340, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Less_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Map_Remove_ReturnValue_1) == 0x000341, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Map_Remove_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_InRange_IntInt_ReturnValue_1) == 0x000342, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_InRange_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Map_Find_Value_6) == 0x000344, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Map_Find_Value_6' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_Map_Find_ReturnValue_6) == 0x000364, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_Map_Find_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_DoesSegmentOverrideAnything_bOverrideSomething_1) == 0x000365, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_DoesSegmentOverrideAnything_bOverrideSomething_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_InitSegmentOverrides, CallFunc_BooleanAND_ReturnValue_1) == 0x000366, "Member 'BP_SplineTrackComponent_C_InitSegmentOverrides::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.IsStaying
// 0x0002 (0x0002 - 0x0000)
struct BP_SplineTrackComponent_C_IsStaying final
{
public:
	bool                                          bIsStaying;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_IsStaying) == 0x000001, "Wrong alignment on BP_SplineTrackComponent_C_IsStaying");
static_assert(sizeof(BP_SplineTrackComponent_C_IsStaying) == 0x000002, "Wrong size on BP_SplineTrackComponent_C_IsStaying");
static_assert(offsetof(BP_SplineTrackComponent_C_IsStaying, bIsStaying) == 0x000000, "Member 'BP_SplineTrackComponent_C_IsStaying::bIsStaying' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_IsStaying, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_SplineTrackComponent_C_IsStaying::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.IsTrackActive
// 0x0001 (0x0001 - 0x0000)
struct BP_SplineTrackComponent_C_IsTrackActive final
{
public:
	bool                                          bActive;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_IsTrackActive) == 0x000001, "Wrong alignment on BP_SplineTrackComponent_C_IsTrackActive");
static_assert(sizeof(BP_SplineTrackComponent_C_IsTrackActive) == 0x000001, "Wrong size on BP_SplineTrackComponent_C_IsTrackActive");
static_assert(offsetof(BP_SplineTrackComponent_C_IsTrackActive, bActive) == 0x000000, "Member 'BP_SplineTrackComponent_C_IsTrackActive::bActive' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.MapTimeToKeyFrameDataRange
// 0x0050 (0x0050 - 0x0000)
struct BP_SplineTrackComponent_C_MapTimeToKeyFrameDataRange final
{
public:
	double                                        InTime;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ValidTime;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxTime;                                           // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetKeyFrameDataMaxTime_MaxTime;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_MapTimeToKeyFrameDataRange) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_MapTimeToKeyFrameDataRange");
static_assert(sizeof(BP_SplineTrackComponent_C_MapTimeToKeyFrameDataRange) == 0x000050, "Wrong size on BP_SplineTrackComponent_C_MapTimeToKeyFrameDataRange");
static_assert(offsetof(BP_SplineTrackComponent_C_MapTimeToKeyFrameDataRange, InTime) == 0x000000, "Member 'BP_SplineTrackComponent_C_MapTimeToKeyFrameDataRange::InTime' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_MapTimeToKeyFrameDataRange, ValidTime) == 0x000008, "Member 'BP_SplineTrackComponent_C_MapTimeToKeyFrameDataRange::ValidTime' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_MapTimeToKeyFrameDataRange, MaxTime) == 0x000010, "Member 'BP_SplineTrackComponent_C_MapTimeToKeyFrameDataRange::MaxTime' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_MapTimeToKeyFrameDataRange, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_SplineTrackComponent_C_MapTimeToKeyFrameDataRange::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_MapTimeToKeyFrameDataRange, CallFunc_GetKeyFrameDataMaxTime_MaxTime) == 0x000020, "Member 'BP_SplineTrackComponent_C_MapTimeToKeyFrameDataRange::CallFunc_GetKeyFrameDataMaxTime_MaxTime' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_MapTimeToKeyFrameDataRange, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_SplineTrackComponent_C_MapTimeToKeyFrameDataRange::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_MapTimeToKeyFrameDataRange, CallFunc_FFloor_ReturnValue) == 0x000030, "Member 'BP_SplineTrackComponent_C_MapTimeToKeyFrameDataRange::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_MapTimeToKeyFrameDataRange, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000038, "Member 'BP_SplineTrackComponent_C_MapTimeToKeyFrameDataRange::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_MapTimeToKeyFrameDataRange, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_SplineTrackComponent_C_MapTimeToKeyFrameDataRange::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_MapTimeToKeyFrameDataRange, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_SplineTrackComponent_C_MapTimeToKeyFrameDataRange::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.OnLaunchFromEndPoint
// 0x0040 (0x0040 - 0x0000)
struct BP_SplineTrackComponent_C_OnLaunchFromEndPoint final
{
public:
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldStayOnEnterSplineSegment_bStay;     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldStayOnEnterSplineSegment_bStay_1;   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_1;    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_5;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_2;    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldStayOnEnterSplineSegment_bStay_2;   // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_6;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_3;    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_7;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldStayOnEnterSplineSegment_bStay_3;   // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasReachedEnd_bReachedEnd;                // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_OnLaunchFromEndPoint) == 0x000004, "Wrong alignment on BP_SplineTrackComponent_C_OnLaunchFromEndPoint");
static_assert(sizeof(BP_SplineTrackComponent_C_OnLaunchFromEndPoint) == 0x000040, "Wrong size on BP_SplineTrackComponent_C_OnLaunchFromEndPoint");
static_assert(offsetof(BP_SplineTrackComponent_C_OnLaunchFromEndPoint, CallFunc_Subtract_IntInt_ReturnValue) == 0x000000, "Member 'BP_SplineTrackComponent_C_OnLaunchFromEndPoint::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_OnLaunchFromEndPoint, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000004, "Member 'BP_SplineTrackComponent_C_OnLaunchFromEndPoint::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_OnLaunchFromEndPoint, CallFunc_ShouldStayOnEnterSplineSegment_bStay) == 0x000008, "Member 'BP_SplineTrackComponent_C_OnLaunchFromEndPoint::CallFunc_ShouldStayOnEnterSplineSegment_bStay' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_OnLaunchFromEndPoint, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x00000C, "Member 'BP_SplineTrackComponent_C_OnLaunchFromEndPoint::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_OnLaunchFromEndPoint, CallFunc_ShouldStayOnEnterSplineSegment_bStay_1) == 0x000010, "Member 'BP_SplineTrackComponent_C_OnLaunchFromEndPoint::CallFunc_ShouldStayOnEnterSplineSegment_bStay_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_OnLaunchFromEndPoint, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000014, "Member 'BP_SplineTrackComponent_C_OnLaunchFromEndPoint::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_OnLaunchFromEndPoint, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000018, "Member 'BP_SplineTrackComponent_C_OnLaunchFromEndPoint::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_OnLaunchFromEndPoint, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x00001C, "Member 'BP_SplineTrackComponent_C_OnLaunchFromEndPoint::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_OnLaunchFromEndPoint, CallFunc_GetNumberOfSplinePoints_ReturnValue_1) == 0x000020, "Member 'BP_SplineTrackComponent_C_OnLaunchFromEndPoint::CallFunc_GetNumberOfSplinePoints_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_OnLaunchFromEndPoint, CallFunc_Subtract_IntInt_ReturnValue_5) == 0x000024, "Member 'BP_SplineTrackComponent_C_OnLaunchFromEndPoint::CallFunc_Subtract_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_OnLaunchFromEndPoint, CallFunc_GetNumberOfSplinePoints_ReturnValue_2) == 0x000028, "Member 'BP_SplineTrackComponent_C_OnLaunchFromEndPoint::CallFunc_GetNumberOfSplinePoints_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_OnLaunchFromEndPoint, CallFunc_ShouldStayOnEnterSplineSegment_bStay_2) == 0x00002C, "Member 'BP_SplineTrackComponent_C_OnLaunchFromEndPoint::CallFunc_ShouldStayOnEnterSplineSegment_bStay_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_OnLaunchFromEndPoint, CallFunc_Subtract_IntInt_ReturnValue_6) == 0x000030, "Member 'BP_SplineTrackComponent_C_OnLaunchFromEndPoint::CallFunc_Subtract_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_OnLaunchFromEndPoint, CallFunc_GetNumberOfSplinePoints_ReturnValue_3) == 0x000034, "Member 'BP_SplineTrackComponent_C_OnLaunchFromEndPoint::CallFunc_GetNumberOfSplinePoints_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_OnLaunchFromEndPoint, CallFunc_Subtract_IntInt_ReturnValue_7) == 0x000038, "Member 'BP_SplineTrackComponent_C_OnLaunchFromEndPoint::CallFunc_Subtract_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_OnLaunchFromEndPoint, CallFunc_ShouldStayOnEnterSplineSegment_bStay_3) == 0x00003C, "Member 'BP_SplineTrackComponent_C_OnLaunchFromEndPoint::CallFunc_ShouldStayOnEnterSplineSegment_bStay_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_OnLaunchFromEndPoint, CallFunc_HasReachedEnd_bReachedEnd) == 0x00003D, "Member 'BP_SplineTrackComponent_C_OnLaunchFromEndPoint::CallFunc_HasReachedEnd_bReachedEnd' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_OnLaunchFromEndPoint, K2Node_SwitchEnum_CmpSuccess) == 0x00003E, "Member 'BP_SplineTrackComponent_C_OnLaunchFromEndPoint::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.OnLoaded_001FCB834655C195935AE8ABB5056F2C
// 0x0008 (0x0008 - 0x0000)
struct BP_SplineTrackComponent_C_OnLoaded_001FCB834655C195935AE8ABB5056F2C final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_OnLoaded_001FCB834655C195935AE8ABB5056F2C) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_OnLoaded_001FCB834655C195935AE8ABB5056F2C");
static_assert(sizeof(BP_SplineTrackComponent_C_OnLoaded_001FCB834655C195935AE8ABB5056F2C) == 0x000008, "Wrong size on BP_SplineTrackComponent_C_OnLoaded_001FCB834655C195935AE8ABB5056F2C");
static_assert(offsetof(BP_SplineTrackComponent_C_OnLoaded_001FCB834655C195935AE8ABB5056F2C, Loaded) == 0x000000, "Member 'BP_SplineTrackComponent_C_OnLoaded_001FCB834655C195935AE8ABB5056F2C::Loaded' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.OnLoaded_6CED6E0242C047F2D28A56AA09B6CC63
// 0x0008 (0x0008 - 0x0000)
struct BP_SplineTrackComponent_C_OnLoaded_6CED6E0242C047F2D28A56AA09B6CC63 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_OnLoaded_6CED6E0242C047F2D28A56AA09B6CC63) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_OnLoaded_6CED6E0242C047F2D28A56AA09B6CC63");
static_assert(sizeof(BP_SplineTrackComponent_C_OnLoaded_6CED6E0242C047F2D28A56AA09B6CC63) == 0x000008, "Wrong size on BP_SplineTrackComponent_C_OnLoaded_6CED6E0242C047F2D28A56AA09B6CC63");
static_assert(offsetof(BP_SplineTrackComponent_C_OnLoaded_6CED6E0242C047F2D28A56AA09B6CC63, Loaded) == 0x000000, "Member 'BP_SplineTrackComponent_C_OnLoaded_6CED6E0242C047F2D28A56AA09B6CC63::Loaded' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.OnLoaded_7DB3D5DB4E70E356CCC6DE94FB30A177
// 0x0008 (0x0008 - 0x0000)
struct BP_SplineTrackComponent_C_OnLoaded_7DB3D5DB4E70E356CCC6DE94FB30A177 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_OnLoaded_7DB3D5DB4E70E356CCC6DE94FB30A177) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_OnLoaded_7DB3D5DB4E70E356CCC6DE94FB30A177");
static_assert(sizeof(BP_SplineTrackComponent_C_OnLoaded_7DB3D5DB4E70E356CCC6DE94FB30A177) == 0x000008, "Wrong size on BP_SplineTrackComponent_C_OnLoaded_7DB3D5DB4E70E356CCC6DE94FB30A177");
static_assert(offsetof(BP_SplineTrackComponent_C_OnLoaded_7DB3D5DB4E70E356CCC6DE94FB30A177, Loaded) == 0x000000, "Member 'BP_SplineTrackComponent_C_OnLoaded_7DB3D5DB4E70E356CCC6DE94FB30A177::Loaded' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.OnReachEnd_Debug
// 0x0008 (0x0008 - 0x0000)
struct BP_SplineTrackComponent_C_OnReachEnd_Debug final
{
public:
	bool                                          bForward;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PointIndex;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_OnReachEnd_Debug) == 0x000004, "Wrong alignment on BP_SplineTrackComponent_C_OnReachEnd_Debug");
static_assert(sizeof(BP_SplineTrackComponent_C_OnReachEnd_Debug) == 0x000008, "Wrong size on BP_SplineTrackComponent_C_OnReachEnd_Debug");
static_assert(offsetof(BP_SplineTrackComponent_C_OnReachEnd_Debug, bForward) == 0x000000, "Member 'BP_SplineTrackComponent_C_OnReachEnd_Debug::bForward' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_OnReachEnd_Debug, PointIndex) == 0x000004, "Member 'BP_SplineTrackComponent_C_OnReachEnd_Debug::PointIndex' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.OnReachPoint_Debug
// 0x0004 (0x0004 - 0x0000)
struct BP_SplineTrackComponent_C_OnReachPoint_Debug final
{
public:
	int32                                         PointIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_OnReachPoint_Debug) == 0x000004, "Wrong alignment on BP_SplineTrackComponent_C_OnReachPoint_Debug");
static_assert(sizeof(BP_SplineTrackComponent_C_OnReachPoint_Debug) == 0x000004, "Wrong size on BP_SplineTrackComponent_C_OnReachPoint_Debug");
static_assert(offsetof(BP_SplineTrackComponent_C_OnReachPoint_Debug, PointIndex) == 0x000000, "Member 'BP_SplineTrackComponent_C_OnReachPoint_Debug::PointIndex' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.PrintInfoOnUpdate
// 0x03A0 (0x03A0 - 0x0000)
struct BP_SplineTrackComponent_C_PrintInfoOnUpdate final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0020(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0088(0x0010)()
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A0(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00E8(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0130(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0140(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0188(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x01D0(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0218(0x0048)(HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue;          // 0x0278(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0288(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x0298(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x02E0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x02F0(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0300(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_3;          // 0x0310(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_8;            // 0x0320(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0368(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0378(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0388(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast; // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_PrintInfoOnUpdate) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_PrintInfoOnUpdate");
static_assert(sizeof(BP_SplineTrackComponent_C_PrintInfoOnUpdate) == 0x0003A0, "Wrong size on BP_SplineTrackComponent_C_PrintInfoOnUpdate");
static_assert(offsetof(BP_SplineTrackComponent_C_PrintInfoOnUpdate, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_SplineTrackComponent_C_PrintInfoOnUpdate::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_PrintInfoOnUpdate, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_SplineTrackComponent_C_PrintInfoOnUpdate::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_PrintInfoOnUpdate, CallFunc_GetObjectName_ReturnValue) == 0x000010, "Member 'BP_SplineTrackComponent_C_PrintInfoOnUpdate::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_PrintInfoOnUpdate, CallFunc_Conv_StringToText_ReturnValue) == 0x000020, "Member 'BP_SplineTrackComponent_C_PrintInfoOnUpdate::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_PrintInfoOnUpdate, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'BP_SplineTrackComponent_C_PrintInfoOnUpdate::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_PrintInfoOnUpdate, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000078, "Member 'BP_SplineTrackComponent_C_PrintInfoOnUpdate::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_PrintInfoOnUpdate, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000088, "Member 'BP_SplineTrackComponent_C_PrintInfoOnUpdate::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_PrintInfoOnUpdate, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000098, "Member 'BP_SplineTrackComponent_C_PrintInfoOnUpdate::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_PrintInfoOnUpdate, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A0, "Member 'BP_SplineTrackComponent_C_PrintInfoOnUpdate::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_PrintInfoOnUpdate, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000E8, "Member 'BP_SplineTrackComponent_C_PrintInfoOnUpdate::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_PrintInfoOnUpdate, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000130, "Member 'BP_SplineTrackComponent_C_PrintInfoOnUpdate::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_PrintInfoOnUpdate, K2Node_MakeStruct_FormatArgumentData_3) == 0x000140, "Member 'BP_SplineTrackComponent_C_PrintInfoOnUpdate::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_PrintInfoOnUpdate, K2Node_MakeStruct_FormatArgumentData_4) == 0x000188, "Member 'BP_SplineTrackComponent_C_PrintInfoOnUpdate::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_PrintInfoOnUpdate, K2Node_MakeStruct_FormatArgumentData_5) == 0x0001D0, "Member 'BP_SplineTrackComponent_C_PrintInfoOnUpdate::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_PrintInfoOnUpdate, K2Node_MakeStruct_FormatArgumentData_6) == 0x000218, "Member 'BP_SplineTrackComponent_C_PrintInfoOnUpdate::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_PrintInfoOnUpdate, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x000260, "Member 'BP_SplineTrackComponent_C_PrintInfoOnUpdate::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_PrintInfoOnUpdate, CallFunc_Conv_VectorToString_ReturnValue) == 0x000278, "Member 'BP_SplineTrackComponent_C_PrintInfoOnUpdate::CallFunc_Conv_VectorToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_PrintInfoOnUpdate, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000288, "Member 'BP_SplineTrackComponent_C_PrintInfoOnUpdate::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_PrintInfoOnUpdate, K2Node_MakeStruct_FormatArgumentData_7) == 0x000298, "Member 'BP_SplineTrackComponent_C_PrintInfoOnUpdate::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_PrintInfoOnUpdate, K2Node_MakeArray_Array) == 0x0002E0, "Member 'BP_SplineTrackComponent_C_PrintInfoOnUpdate::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_PrintInfoOnUpdate, CallFunc_Format_ReturnValue) == 0x0002F0, "Member 'BP_SplineTrackComponent_C_PrintInfoOnUpdate::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_PrintInfoOnUpdate, CallFunc_Conv_TextToString_ReturnValue) == 0x000300, "Member 'BP_SplineTrackComponent_C_PrintInfoOnUpdate::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_PrintInfoOnUpdate, CallFunc_Conv_StringToText_ReturnValue_3) == 0x000310, "Member 'BP_SplineTrackComponent_C_PrintInfoOnUpdate::CallFunc_Conv_StringToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_PrintInfoOnUpdate, K2Node_MakeStruct_FormatArgumentData_8) == 0x000320, "Member 'BP_SplineTrackComponent_C_PrintInfoOnUpdate::K2Node_MakeStruct_FormatArgumentData_8' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_PrintInfoOnUpdate, K2Node_MakeArray_Array_1) == 0x000368, "Member 'BP_SplineTrackComponent_C_PrintInfoOnUpdate::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_PrintInfoOnUpdate, CallFunc_Format_ReturnValue_1) == 0x000378, "Member 'BP_SplineTrackComponent_C_PrintInfoOnUpdate::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_PrintInfoOnUpdate, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000388, "Member 'BP_SplineTrackComponent_C_PrintInfoOnUpdate::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_PrintInfoOnUpdate, CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast) == 0x000398, "Member 'BP_SplineTrackComponent_C_PrintInfoOnUpdate::CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_SplineTrackComponent_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_SplineTrackComponent_C_ReceiveEndPlay");
static_assert(sizeof(BP_SplineTrackComponent_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_SplineTrackComponent_C_ReceiveEndPlay");
static_assert(offsetof(BP_SplineTrackComponent_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_SplineTrackComponent_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_SplineTrackComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_SplineTrackComponent_C_ReceiveTick");
static_assert(sizeof(BP_SplineTrackComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_SplineTrackComponent_C_ReceiveTick");
static_assert(offsetof(BP_SplineTrackComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_SplineTrackComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.RemoveAllEffect
// 0x0060 (0x0060 - 0x0000)
struct BP_SplineTrackComponent_C_RemoveAllEffect final
{
public:
	struct FRotator                               endPointRot;                                       // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               startPointRot;                                     // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                endPointLocation;                                  // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                startPointLocation;                                // 0x0048(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_RemoveAllEffect) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_RemoveAllEffect");
static_assert(sizeof(BP_SplineTrackComponent_C_RemoveAllEffect) == 0x000060, "Wrong size on BP_SplineTrackComponent_C_RemoveAllEffect");
static_assert(offsetof(BP_SplineTrackComponent_C_RemoveAllEffect, endPointRot) == 0x000000, "Member 'BP_SplineTrackComponent_C_RemoveAllEffect::endPointRot' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_RemoveAllEffect, startPointRot) == 0x000018, "Member 'BP_SplineTrackComponent_C_RemoveAllEffect::startPointRot' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_RemoveAllEffect, endPointLocation) == 0x000030, "Member 'BP_SplineTrackComponent_C_RemoveAllEffect::endPointLocation' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_RemoveAllEffect, startPointLocation) == 0x000048, "Member 'BP_SplineTrackComponent_C_RemoveAllEffect::startPointLocation' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.RemoveEffectLine
// 0x0068 (0x0068 - 0x0000)
struct BP_SplineTrackComponent_C_RemoveEffectLine final
{
public:
	struct FRotator                               endPointRot;                                       // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               startPointRot;                                     // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                endPointLocation;                                  // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                startPointLocation;                                // 0x0048(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_RemoveEffectLine) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_RemoveEffectLine");
static_assert(sizeof(BP_SplineTrackComponent_C_RemoveEffectLine) == 0x000068, "Wrong size on BP_SplineTrackComponent_C_RemoveEffectLine");
static_assert(offsetof(BP_SplineTrackComponent_C_RemoveEffectLine, endPointRot) == 0x000000, "Member 'BP_SplineTrackComponent_C_RemoveEffectLine::endPointRot' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_RemoveEffectLine, startPointRot) == 0x000018, "Member 'BP_SplineTrackComponent_C_RemoveEffectLine::startPointRot' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_RemoveEffectLine, endPointLocation) == 0x000030, "Member 'BP_SplineTrackComponent_C_RemoveEffectLine::endPointLocation' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_RemoveEffectLine, startPointLocation) == 0x000048, "Member 'BP_SplineTrackComponent_C_RemoveEffectLine::startPointLocation' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_RemoveEffectLine, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_SplineTrackComponent_C_RemoveEffectLine::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.RemoveEffectPoints
// 0x0068 (0x0068 - 0x0000)
struct BP_SplineTrackComponent_C_RemoveEffectPoints final
{
public:
	struct FRotator                               endPointRot;                                       // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               startPointRot;                                     // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                endPointLocation;                                  // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                startPointLocation;                                // 0x0048(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_RemoveEffectPoints) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_RemoveEffectPoints");
static_assert(sizeof(BP_SplineTrackComponent_C_RemoveEffectPoints) == 0x000068, "Wrong size on BP_SplineTrackComponent_C_RemoveEffectPoints");
static_assert(offsetof(BP_SplineTrackComponent_C_RemoveEffectPoints, endPointRot) == 0x000000, "Member 'BP_SplineTrackComponent_C_RemoveEffectPoints::endPointRot' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_RemoveEffectPoints, startPointRot) == 0x000018, "Member 'BP_SplineTrackComponent_C_RemoveEffectPoints::startPointRot' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_RemoveEffectPoints, endPointLocation) == 0x000030, "Member 'BP_SplineTrackComponent_C_RemoveEffectPoints::endPointLocation' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_RemoveEffectPoints, startPointLocation) == 0x000048, "Member 'BP_SplineTrackComponent_C_RemoveEffectPoints::startPointLocation' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_RemoveEffectPoints, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_SplineTrackComponent_C_RemoveEffectPoints::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_RemoveEffectPoints, CallFunc_IsValid_ReturnValue_1) == 0x000061, "Member 'BP_SplineTrackComponent_C_RemoveEffectPoints::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.RequestMultiStart
// 0x0010 (0x0010 - 0x0000)
struct BP_SplineTrackComponent_C_RequestMultiStart final
{
public:
	TArray<int32>                                 Params_0;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_SplineTrackComponent_C_RequestMultiStart) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_RequestMultiStart");
static_assert(sizeof(BP_SplineTrackComponent_C_RequestMultiStart) == 0x000010, "Wrong size on BP_SplineTrackComponent_C_RequestMultiStart");
static_assert(offsetof(BP_SplineTrackComponent_C_RequestMultiStart, Params_0) == 0x000000, "Member 'BP_SplineTrackComponent_C_RequestMultiStart::Params_0' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.RequestMultiStop
// 0x0010 (0x0010 - 0x0000)
struct BP_SplineTrackComponent_C_RequestMultiStop final
{
public:
	TArray<int32>                                 Params_0;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_SplineTrackComponent_C_RequestMultiStop) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_RequestMultiStop");
static_assert(sizeof(BP_SplineTrackComponent_C_RequestMultiStop) == 0x000010, "Wrong size on BP_SplineTrackComponent_C_RequestMultiStop");
static_assert(offsetof(BP_SplineTrackComponent_C_RequestMultiStop, Params_0) == 0x000000, "Member 'BP_SplineTrackComponent_C_RequestMultiStop::Params_0' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.SetDefaultTimeBySpeed
// 0x0028 (0x0028 - 0x0000)
struct BP_SplineTrackComponent_C_SetDefaultTimeBySpeed final
{
public:
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_DefaultSpeed_ImplicitCast;      // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_SetDefaultTimeBySpeed) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_SetDefaultTimeBySpeed");
static_assert(sizeof(BP_SplineTrackComponent_C_SetDefaultTimeBySpeed) == 0x000028, "Wrong size on BP_SplineTrackComponent_C_SetDefaultTimeBySpeed");
static_assert(offsetof(BP_SplineTrackComponent_C_SetDefaultTimeBySpeed, CallFunc_GetSplineLength_ReturnValue) == 0x000000, "Member 'BP_SplineTrackComponent_C_SetDefaultTimeBySpeed::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SetDefaultTimeBySpeed, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_SplineTrackComponent_C_SetDefaultTimeBySpeed::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SetDefaultTimeBySpeed, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000010, "Member 'BP_SplineTrackComponent_C_SetDefaultTimeBySpeed::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SetDefaultTimeBySpeed, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000018, "Member 'BP_SplineTrackComponent_C_SetDefaultTimeBySpeed::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SetDefaultTimeBySpeed, K2Node_VariableSet_DefaultSpeed_ImplicitCast) == 0x000020, "Member 'BP_SplineTrackComponent_C_SetDefaultTimeBySpeed::K2Node_VariableSet_DefaultSpeed_ImplicitCast' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.SetTrackActive
// 0x0030 (0x0030 - 0x0000)
struct BP_SplineTrackComponent_C_SetTrackActive final
{
public:
	bool                                          bNewActive;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Temp_int_Variable;                                 // 0x0008(0x0010)(ReferenceParm)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_SplineTrackComponent_C_SetTrackActive) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_SetTrackActive");
static_assert(sizeof(BP_SplineTrackComponent_C_SetTrackActive) == 0x000030, "Wrong size on BP_SplineTrackComponent_C_SetTrackActive");
static_assert(offsetof(BP_SplineTrackComponent_C_SetTrackActive, bNewActive) == 0x000000, "Member 'BP_SplineTrackComponent_C_SetTrackActive::bNewActive' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SetTrackActive, Temp_int_Variable) == 0x000008, "Member 'BP_SplineTrackComponent_C_SetTrackActive::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SetTrackActive, CallFunc_FFloor_ReturnValue) == 0x000018, "Member 'BP_SplineTrackComponent_C_SetTrackActive::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SetTrackActive, K2Node_MakeArray_Array) == 0x000020, "Member 'BP_SplineTrackComponent_C_SetTrackActive::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.SetTrackActiveImpl
// 0x0001 (0x0001 - 0x0000)
struct BP_SplineTrackComponent_C_SetTrackActiveImpl final
{
public:
	bool                                          bActive;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_SetTrackActiveImpl) == 0x000001, "Wrong alignment on BP_SplineTrackComponent_C_SetTrackActiveImpl");
static_assert(sizeof(BP_SplineTrackComponent_C_SetTrackActiveImpl) == 0x000001, "Wrong size on BP_SplineTrackComponent_C_SetTrackActiveImpl");
static_assert(offsetof(BP_SplineTrackComponent_C_SetTrackActiveImpl, bActive) == 0x000000, "Member 'BP_SplineTrackComponent_C_SetTrackActiveImpl::bActive' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.SetUpdatedComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_SplineTrackComponent_C_SetUpdatedComponent final
{
public:
	class USceneComponent*                        NewUpdatedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_SetUpdatedComponent) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_SetUpdatedComponent");
static_assert(sizeof(BP_SplineTrackComponent_C_SetUpdatedComponent) == 0x000008, "Wrong size on BP_SplineTrackComponent_C_SetUpdatedComponent");
static_assert(offsetof(BP_SplineTrackComponent_C_SetUpdatedComponent, NewUpdatedComponent) == 0x000000, "Member 'BP_SplineTrackComponent_C_SetUpdatedComponent::NewUpdatedComponent' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.ShouldStayOnEnterSplineSegment
// 0x0058 (0x0058 - 0x0000)
struct BP_SplineTrackComponent_C_ShouldStayOnEnterSplineSegment final
{
public:
	int32                                         SegmentIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bStay;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTrackSegmentOverride                  CallFunc_Map_Find_Value;                           // 0x0010(0x0020)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTrackSegmentOverride                  CallFunc_Map_Find_Value_1;                         // 0x0034(0x0020)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_ShouldStayOnEnterSplineSegment) == 0x000004, "Wrong alignment on BP_SplineTrackComponent_C_ShouldStayOnEnterSplineSegment");
static_assert(sizeof(BP_SplineTrackComponent_C_ShouldStayOnEnterSplineSegment) == 0x000058, "Wrong size on BP_SplineTrackComponent_C_ShouldStayOnEnterSplineSegment");
static_assert(offsetof(BP_SplineTrackComponent_C_ShouldStayOnEnterSplineSegment, SegmentIndex) == 0x000000, "Member 'BP_SplineTrackComponent_C_ShouldStayOnEnterSplineSegment::SegmentIndex' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ShouldStayOnEnterSplineSegment, bStay) == 0x000004, "Member 'BP_SplineTrackComponent_C_ShouldStayOnEnterSplineSegment::bStay' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ShouldStayOnEnterSplineSegment, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000005, "Member 'BP_SplineTrackComponent_C_ShouldStayOnEnterSplineSegment::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ShouldStayOnEnterSplineSegment, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000008, "Member 'BP_SplineTrackComponent_C_ShouldStayOnEnterSplineSegment::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ShouldStayOnEnterSplineSegment, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00000C, "Member 'BP_SplineTrackComponent_C_ShouldStayOnEnterSplineSegment::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ShouldStayOnEnterSplineSegment, CallFunc_BooleanOR_ReturnValue) == 0x00000D, "Member 'BP_SplineTrackComponent_C_ShouldStayOnEnterSplineSegment::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ShouldStayOnEnterSplineSegment, CallFunc_Map_Find_Value) == 0x000010, "Member 'BP_SplineTrackComponent_C_ShouldStayOnEnterSplineSegment::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ShouldStayOnEnterSplineSegment, CallFunc_Map_Find_ReturnValue) == 0x000030, "Member 'BP_SplineTrackComponent_C_ShouldStayOnEnterSplineSegment::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ShouldStayOnEnterSplineSegment, CallFunc_Map_Find_Value_1) == 0x000034, "Member 'BP_SplineTrackComponent_C_ShouldStayOnEnterSplineSegment::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_ShouldStayOnEnterSplineSegment, CallFunc_Map_Find_ReturnValue_1) == 0x000054, "Member 'BP_SplineTrackComponent_C_ShouldStayOnEnterSplineSegment::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.SnapToClosestPoint
// 0x0530 (0x0530 - 0x0000)
struct BP_SplineTrackComponent_C_SnapToClosestPoint final
{
public:
	struct FTransform                             TempWorldTransform;                                // 0x0000(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0088(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_FindInputKeyClosestToWorldLocation_ReturnValue; // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0xC];                                      // 0x0184(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0190(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetRotationAtSplineInputKey_ReturnValue;  // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0210(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0310(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplineInputKey_ReturnValue;  // 0x0318(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0330(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_429[0x7];                                      // 0x0429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0430(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_SplineTrackComponent_C_SnapToClosestPoint) == 0x000010, "Wrong alignment on BP_SplineTrackComponent_C_SnapToClosestPoint");
static_assert(sizeof(BP_SplineTrackComponent_C_SnapToClosestPoint) == 0x000530, "Wrong size on BP_SplineTrackComponent_C_SnapToClosestPoint");
static_assert(offsetof(BP_SplineTrackComponent_C_SnapToClosestPoint, TempWorldTransform) == 0x000000, "Member 'BP_SplineTrackComponent_C_SnapToClosestPoint::TempWorldTransform' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SnapToClosestPoint, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_SplineTrackComponent_C_SnapToClosestPoint::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SnapToClosestPoint, CallFunc_IsValid_ReturnValue_1) == 0x000061, "Member 'BP_SplineTrackComponent_C_SnapToClosestPoint::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SnapToClosestPoint, CallFunc_GetOwner_ReturnValue) == 0x000068, "Member 'BP_SplineTrackComponent_C_SnapToClosestPoint::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SnapToClosestPoint, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000070, "Member 'BP_SplineTrackComponent_C_SnapToClosestPoint::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SnapToClosestPoint, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000088, "Member 'BP_SplineTrackComponent_C_SnapToClosestPoint::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SnapToClosestPoint, CallFunc_FindInputKeyClosestToWorldLocation_ReturnValue) == 0x000180, "Member 'BP_SplineTrackComponent_C_SnapToClosestPoint::CallFunc_FindInputKeyClosestToWorldLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SnapToClosestPoint, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000190, "Member 'BP_SplineTrackComponent_C_SnapToClosestPoint::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SnapToClosestPoint, CallFunc_GetOwner_ReturnValue_1) == 0x0001F0, "Member 'BP_SplineTrackComponent_C_SnapToClosestPoint::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SnapToClosestPoint, CallFunc_GetRotationAtSplineInputKey_ReturnValue) == 0x0001F8, "Member 'BP_SplineTrackComponent_C_SnapToClosestPoint::CallFunc_GetRotationAtSplineInputKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SnapToClosestPoint, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000210, "Member 'BP_SplineTrackComponent_C_SnapToClosestPoint::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SnapToClosestPoint, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000308, "Member 'BP_SplineTrackComponent_C_SnapToClosestPoint::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SnapToClosestPoint, CallFunc_GetOwner_ReturnValue_2) == 0x000310, "Member 'BP_SplineTrackComponent_C_SnapToClosestPoint::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SnapToClosestPoint, CallFunc_GetLocationAtSplineInputKey_ReturnValue) == 0x000318, "Member 'BP_SplineTrackComponent_C_SnapToClosestPoint::CallFunc_GetLocationAtSplineInputKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SnapToClosestPoint, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000330, "Member 'BP_SplineTrackComponent_C_SnapToClosestPoint::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SnapToClosestPoint, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000428, "Member 'BP_SplineTrackComponent_C_SnapToClosestPoint::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SnapToClosestPoint, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000430, "Member 'BP_SplineTrackComponent_C_SnapToClosestPoint::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.SortSegmentOverrides
// 0x0158 (0x0158 - 0x0000)
struct BP_SplineTrackComponent_C_SortSegmentOverrides final
{
public:
	TArray<int32>                                 SortedKeys_0;                                      // 0x0000(0x0010)(Edit, BlueprintVisible)
	TMap<int32, struct FTrackSegmentOverride>     TempMap_0;                                         // 0x0010(0x0050)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_Map_Keys_Keys;                            // 0x0090(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C6[0x2];                                       // 0x00C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTrackSegmentOverride                  CallFunc_Map_Find_Value;                           // 0x00D0(0x0020)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTrackSegmentOverride                  CallFunc_Map_Find_Value_1;                         // 0x0100(0x0020)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_3;                         // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_4;                         // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_5;                         // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13E[0x2];                                      // 0x013E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_Map_Keys_Keys_1;                          // 0x0148(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_SplineTrackComponent_C_SortSegmentOverrides) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_SortSegmentOverrides");
static_assert(sizeof(BP_SplineTrackComponent_C_SortSegmentOverrides) == 0x000158, "Wrong size on BP_SplineTrackComponent_C_SortSegmentOverrides");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, SortedKeys_0) == 0x000000, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::SortedKeys_0' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, TempMap_0) == 0x000010, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::TempMap_0' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, Temp_int_Array_Index_Variable) == 0x000060, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, Temp_int_Loop_Counter_Variable_1) == 0x00006C, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, CallFunc_Add_IntInt_ReturnValue_1) == 0x000070, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, Temp_int_Array_Index_Variable_1) == 0x000074, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, Temp_int_Loop_Counter_Variable_2) == 0x000078, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, CallFunc_Add_IntInt_ReturnValue_2) == 0x00007C, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, Temp_int_Array_Index_Variable_2) == 0x000080, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, Temp_int_Loop_Counter_Variable_3) == 0x000084, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, CallFunc_Add_IntInt_ReturnValue_3) == 0x000088, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, Temp_int_Array_Index_Variable_3) == 0x00008C, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, CallFunc_Map_Keys_Keys) == 0x000090, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, Temp_int_Loop_Counter_Variable_4) == 0x0000A0, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, Temp_int_Loop_Counter_Variable_5) == 0x0000A4, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000A8, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, CallFunc_Add_IntInt_ReturnValue_5) == 0x0000AC, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, CallFunc_Array_Length_ReturnValue) == 0x0000B0, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, CallFunc_Less_IntInt_ReturnValue) == 0x0000B4, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, CallFunc_Array_Length_ReturnValue_1) == 0x0000BC, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, CallFunc_Array_Length_ReturnValue_2) == 0x0000C0, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000C4, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000C5, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, Temp_int_Array_Index_Variable_4) == 0x0000C8, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, CallFunc_Array_Get_Item_1) == 0x0000CC, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, CallFunc_Map_Find_Value) == 0x0000D0, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, CallFunc_Map_Find_ReturnValue) == 0x0000F0, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, CallFunc_Array_Get_Item_2) == 0x0000F4, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, CallFunc_Array_Length_ReturnValue_3) == 0x0000F8, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000FC, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, CallFunc_Map_Find_Value_1) == 0x000100, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, CallFunc_Map_Find_ReturnValue_1) == 0x000120, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, Temp_int_Array_Index_Variable_5) == 0x000124, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, CallFunc_Array_Get_Item_3) == 0x000128, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, CallFunc_Less_IntInt_ReturnValue_4) == 0x00012C, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, CallFunc_Array_Get_Item_4) == 0x000130, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, CallFunc_Array_Get_Item_5) == 0x000134, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, CallFunc_Array_Length_ReturnValue_4) == 0x000138, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, CallFunc_Greater_IntInt_ReturnValue) == 0x00013C, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, CallFunc_Less_IntInt_ReturnValue_5) == 0x00013D, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, CallFunc_Array_Length_ReturnValue_5) == 0x000140, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, CallFunc_Less_IntInt_ReturnValue_6) == 0x000144, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_SortSegmentOverrides, CallFunc_Map_Keys_Keys_1) == 0x000148, "Member 'BP_SplineTrackComponent_C_SortSegmentOverrides::CallFunc_Map_Keys_Keys_1' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.TryConstrainRotationToPitch
// 0x00A8 (0x00A8 - 0x0000)
struct BP_SplineTrackComponent_C_TryConstrainRotationToPitch final
{
public:
	struct FRotator                               InRotation;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               OutRotation;                                       // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_SelectRotator_ReturnValue;                // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SplineTrackComponent_C_TryConstrainRotationToPitch) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_TryConstrainRotationToPitch");
static_assert(sizeof(BP_SplineTrackComponent_C_TryConstrainRotationToPitch) == 0x0000A8, "Wrong size on BP_SplineTrackComponent_C_TryConstrainRotationToPitch");
static_assert(offsetof(BP_SplineTrackComponent_C_TryConstrainRotationToPitch, InRotation) == 0x000000, "Member 'BP_SplineTrackComponent_C_TryConstrainRotationToPitch::InRotation' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_TryConstrainRotationToPitch, OutRotation) == 0x000018, "Member 'BP_SplineTrackComponent_C_TryConstrainRotationToPitch::OutRotation' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_TryConstrainRotationToPitch, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000030, "Member 'BP_SplineTrackComponent_C_TryConstrainRotationToPitch::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_TryConstrainRotationToPitch, CallFunc_BreakVector_X) == 0x000048, "Member 'BP_SplineTrackComponent_C_TryConstrainRotationToPitch::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_TryConstrainRotationToPitch, CallFunc_BreakVector_Y) == 0x000050, "Member 'BP_SplineTrackComponent_C_TryConstrainRotationToPitch::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_TryConstrainRotationToPitch, CallFunc_BreakVector_Z) == 0x000058, "Member 'BP_SplineTrackComponent_C_TryConstrainRotationToPitch::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_TryConstrainRotationToPitch, CallFunc_MakeVector_ReturnValue) == 0x000060, "Member 'BP_SplineTrackComponent_C_TryConstrainRotationToPitch::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_TryConstrainRotationToPitch, CallFunc_MakeRotFromX_ReturnValue) == 0x000078, "Member 'BP_SplineTrackComponent_C_TryConstrainRotationToPitch::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_TryConstrainRotationToPitch, CallFunc_SelectRotator_ReturnValue) == 0x000090, "Member 'BP_SplineTrackComponent_C_TryConstrainRotationToPitch::CallFunc_SelectRotator_ReturnValue' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.UpdateAcceleration
// 0x00B8 (0x00B8 - 0x0000)
struct BP_SplineTrackComponent_C_UpdateAcceleration final
{
public:
	double                                        NewAcceleration;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetSpeedOnSplineSegment_Speed;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetLaunchTimeOnSplineSegment_LaunchTime;  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetBlendTimeOnLeaveSplineSegment_BlendTime; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_2;    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetBlendTimeOnLeaveSplineSegment_BlendTime_1; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetLaunchTimeOnSplineSegment_LaunchTime_1; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetSpeedOnSplineSegment_Speed_1;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1;   // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_UpdateAcceleration) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_UpdateAcceleration");
static_assert(sizeof(BP_SplineTrackComponent_C_UpdateAcceleration) == 0x0000B8, "Wrong size on BP_SplineTrackComponent_C_UpdateAcceleration");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateAcceleration, NewAcceleration) == 0x000000, "Member 'BP_SplineTrackComponent_C_UpdateAcceleration::NewAcceleration' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateAcceleration, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue) == 0x000008, "Member 'BP_SplineTrackComponent_C_UpdateAcceleration::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateAcceleration, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_SplineTrackComponent_C_UpdateAcceleration::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateAcceleration, CallFunc_GetSpeedOnSplineSegment_Speed) == 0x000018, "Member 'BP_SplineTrackComponent_C_UpdateAcceleration::CallFunc_GetSpeedOnSplineSegment_Speed' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateAcceleration, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_SplineTrackComponent_C_UpdateAcceleration::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateAcceleration, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_SplineTrackComponent_C_UpdateAcceleration::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateAcceleration, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1) == 0x000030, "Member 'BP_SplineTrackComponent_C_UpdateAcceleration::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateAcceleration, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000034, "Member 'BP_SplineTrackComponent_C_UpdateAcceleration::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateAcceleration, K2Node_SwitchEnum_CmpSuccess) == 0x000035, "Member 'BP_SplineTrackComponent_C_UpdateAcceleration::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateAcceleration, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'BP_SplineTrackComponent_C_UpdateAcceleration::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateAcceleration, CallFunc_GetLaunchTimeOnSplineSegment_LaunchTime) == 0x000040, "Member 'BP_SplineTrackComponent_C_UpdateAcceleration::CallFunc_GetLaunchTimeOnSplineSegment_LaunchTime' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateAcceleration, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_SplineTrackComponent_C_UpdateAcceleration::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateAcceleration, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x000049, "Member 'BP_SplineTrackComponent_C_UpdateAcceleration::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateAcceleration, CallFunc_GetBlendTimeOnLeaveSplineSegment_BlendTime) == 0x000050, "Member 'BP_SplineTrackComponent_C_UpdateAcceleration::CallFunc_GetBlendTimeOnLeaveSplineSegment_BlendTime' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateAcceleration, CallFunc_EqualEqual_DoubleDouble_ReturnValue_2) == 0x000058, "Member 'BP_SplineTrackComponent_C_UpdateAcceleration::CallFunc_EqualEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateAcceleration, CallFunc_GetBlendTimeOnLeaveSplineSegment_BlendTime_1) == 0x000060, "Member 'BP_SplineTrackComponent_C_UpdateAcceleration::CallFunc_GetBlendTimeOnLeaveSplineSegment_BlendTime_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateAcceleration, CallFunc_GetLaunchTimeOnSplineSegment_LaunchTime_1) == 0x000068, "Member 'BP_SplineTrackComponent_C_UpdateAcceleration::CallFunc_GetLaunchTimeOnSplineSegment_LaunchTime_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateAcceleration, CallFunc_GetSpeedOnSplineSegment_Speed_1) == 0x000070, "Member 'BP_SplineTrackComponent_C_UpdateAcceleration::CallFunc_GetSpeedOnSplineSegment_Speed_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateAcceleration, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000078, "Member 'BP_SplineTrackComponent_C_UpdateAcceleration::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateAcceleration, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000080, "Member 'BP_SplineTrackComponent_C_UpdateAcceleration::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateAcceleration, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000088, "Member 'BP_SplineTrackComponent_C_UpdateAcceleration::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateAcceleration, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1) == 0x000090, "Member 'BP_SplineTrackComponent_C_UpdateAcceleration::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateAcceleration, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x000098, "Member 'BP_SplineTrackComponent_C_UpdateAcceleration::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateAcceleration, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0000A0, "Member 'BP_SplineTrackComponent_C_UpdateAcceleration::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateAcceleration, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x0000A8, "Member 'BP_SplineTrackComponent_C_UpdateAcceleration::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateAcceleration, CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1) == 0x0000B0, "Member 'BP_SplineTrackComponent_C_UpdateAcceleration::CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.UpdateDistance
// 0x00A8 (0x00A8 - 0x0000)
struct BP_SplineTrackComponent_C_UpdateDistance final
{
public:
	double                                        DeltaTime_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NewDistance;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TempDistance;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsClosedLoop_ReturnValue;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldStayOnEnterSplineSegment_bStay;     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldStayOnEnterSplineSegment_bStay_1;   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_SplineTrackState                         Temp_byte_Variable;                                // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_2; // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_3; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetClosedLoopClampDistance_OutDistance;   // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_TempDistance_ImplicitCast;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_B_ImplicitCast;         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_TempDistance_ImplicitCast_1;    // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Min_ImplicitCast;                  // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Max_ImplicitCast;                  // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_UpdateDistance) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_UpdateDistance");
static_assert(sizeof(BP_SplineTrackComponent_C_UpdateDistance) == 0x0000A8, "Wrong size on BP_SplineTrackComponent_C_UpdateDistance");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateDistance, DeltaTime_0) == 0x000000, "Member 'BP_SplineTrackComponent_C_UpdateDistance::DeltaTime_0' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateDistance, NewDistance) == 0x000008, "Member 'BP_SplineTrackComponent_C_UpdateDistance::NewDistance' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateDistance, TempDistance) == 0x000010, "Member 'BP_SplineTrackComponent_C_UpdateDistance::TempDistance' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateDistance, CallFunc_IsClosedLoop_ReturnValue) == 0x000018, "Member 'BP_SplineTrackComponent_C_UpdateDistance::CallFunc_IsClosedLoop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateDistance, CallFunc_ShouldStayOnEnterSplineSegment_bStay) == 0x000019, "Member 'BP_SplineTrackComponent_C_UpdateDistance::CallFunc_ShouldStayOnEnterSplineSegment_bStay' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateDistance, CallFunc_ShouldStayOnEnterSplineSegment_bStay_1) == 0x00001A, "Member 'BP_SplineTrackComponent_C_UpdateDistance::CallFunc_ShouldStayOnEnterSplineSegment_bStay_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateDistance, Temp_byte_Variable) == 0x00001B, "Member 'BP_SplineTrackComponent_C_UpdateDistance::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateDistance, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue) == 0x00001C, "Member 'BP_SplineTrackComponent_C_UpdateDistance::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateDistance, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_SplineTrackComponent_C_UpdateDistance::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateDistance, CallFunc_BooleanAND_ReturnValue) == 0x000021, "Member 'BP_SplineTrackComponent_C_UpdateDistance::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateDistance, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1) == 0x000024, "Member 'BP_SplineTrackComponent_C_UpdateDistance::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateDistance, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_SplineTrackComponent_C_UpdateDistance::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateDistance, CallFunc_BooleanAND_ReturnValue_1) == 0x000029, "Member 'BP_SplineTrackComponent_C_UpdateDistance::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateDistance, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_2) == 0x00002C, "Member 'BP_SplineTrackComponent_C_UpdateDistance::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateDistance, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000030, "Member 'BP_SplineTrackComponent_C_UpdateDistance::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateDistance, CallFunc_Subtract_IntInt_ReturnValue) == 0x000034, "Member 'BP_SplineTrackComponent_C_UpdateDistance::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateDistance, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000038, "Member 'BP_SplineTrackComponent_C_UpdateDistance::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateDistance, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_3) == 0x000040, "Member 'BP_SplineTrackComponent_C_UpdateDistance::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateDistance, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_SplineTrackComponent_C_UpdateDistance::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateDistance, K2Node_Select_Default) == 0x000050, "Member 'BP_SplineTrackComponent_C_UpdateDistance::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateDistance, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000058, "Member 'BP_SplineTrackComponent_C_UpdateDistance::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateDistance, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'BP_SplineTrackComponent_C_UpdateDistance::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateDistance, CallFunc_FClamp_ReturnValue) == 0x000068, "Member 'BP_SplineTrackComponent_C_UpdateDistance::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateDistance, CallFunc_GetClosedLoopClampDistance_OutDistance) == 0x000070, "Member 'BP_SplineTrackComponent_C_UpdateDistance::CallFunc_GetClosedLoopClampDistance_OutDistance' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateDistance, K2Node_VariableSet_TempDistance_ImplicitCast) == 0x000078, "Member 'BP_SplineTrackComponent_C_UpdateDistance::K2Node_VariableSet_TempDistance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateDistance, CallFunc_Less_DoubleDouble_B_ImplicitCast) == 0x000080, "Member 'BP_SplineTrackComponent_C_UpdateDistance::CallFunc_Less_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateDistance, CallFunc_Greater_DoubleDouble_B_ImplicitCast) == 0x000088, "Member 'BP_SplineTrackComponent_C_UpdateDistance::CallFunc_Greater_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateDistance, K2Node_VariableSet_TempDistance_ImplicitCast_1) == 0x000090, "Member 'BP_SplineTrackComponent_C_UpdateDistance::K2Node_VariableSet_TempDistance_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateDistance, CallFunc_FClamp_Min_ImplicitCast) == 0x000098, "Member 'BP_SplineTrackComponent_C_UpdateDistance::CallFunc_FClamp_Min_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateDistance, CallFunc_FClamp_Max_ImplicitCast) == 0x0000A0, "Member 'BP_SplineTrackComponent_C_UpdateDistance::CallFunc_FClamp_Max_ImplicitCast' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.UpdateNextPoint
// 0x0590 (0x0590 - 0x0000)
struct BP_SplineTrackComponent_C_UpdateNextPoint final
{
public:
	double                                        DeltaTime_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TempDistance;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsClosedLoop_ReturnValue;                 // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_32ByteByte_ReturnValue;        // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsClosedLoop_ReturnValue_1;               // 0x0087(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldStayOnEnterSplineSegment_bStay;     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldStayOnEnterSplineSegment_bStay_1;   // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldStayOnEnterSplineSegment_bStay_2;   // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue_1;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00D8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00E8(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_ShouldStayOnEnterSplineSegment_bStay_3;   // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_132[0x6];                                      // 0x0132(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0138(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue;              // 0x0190(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x01A0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01B0(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x01F8(0x0048)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0248(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0290(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x02D8(0x0010)(ReferenceParm)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x02E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x02F8(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_3;          // 0x0308(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0318(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x0328(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_4;          // 0x0370(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_8;            // 0x0380(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue_1;            // 0x03C8(0x0010)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x03D8(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_9;            // 0x03E8(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0430(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0440(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_10;           // 0x0458(0x0048)(HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A4[0x4];                                      // 0x04A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x04A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x04B8(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x04C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D9[0x7];                                      // 0x04D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_5;          // 0x04E0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_11;           // 0x04F0(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x0538(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53C[0x4];                                      // 0x053C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x0540(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x0550(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_3;          // 0x0560(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0570(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_5;            // 0x0574(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x0578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_6;            // 0x057C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_581[0x3];                                      // 0x0581(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0584(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasReachedEnd_bReachedEnd;                // 0x0588(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasArrivedNextPoint_bArrived;             // 0x0589(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_UpdateNextPoint) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_UpdateNextPoint");
static_assert(sizeof(BP_SplineTrackComponent_C_UpdateNextPoint) == 0x000590, "Wrong size on BP_SplineTrackComponent_C_UpdateNextPoint");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, DeltaTime_0) == 0x000000, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::DeltaTime_0' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, TempDistance) == 0x000008, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::TempDistance' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_GetObjectName_ReturnValue) == 0x000018, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000080, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_IsClosedLoop_ReturnValue) == 0x000084, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_IsClosedLoop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_EqualEqual_32ByteByte_ReturnValue) == 0x000085, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_EqualEqual_32ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_BooleanAND_ReturnValue) == 0x000086, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_IsClosedLoop_ReturnValue_1) == 0x000087, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_IsClosedLoop_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_ShouldStayOnEnterSplineSegment_bStay) == 0x000088, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_ShouldStayOnEnterSplineSegment_bStay' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_ShouldStayOnEnterSplineSegment_bStay_1) == 0x000089, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_ShouldStayOnEnterSplineSegment_bStay_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_Add_IntInt_ReturnValue) == 0x00008C, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_Add_IntInt_ReturnValue_1) == 0x000090, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_Subtract_IntInt_ReturnValue) == 0x000094, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000098, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_ShouldStayOnEnterSplineSegment_bStay_2) == 0x00009C, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_ShouldStayOnEnterSplineSegment_bStay_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000A0, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000A4, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0000AC, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x0000B0, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000B4, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_GetOwner_ReturnValue_1) == 0x0000B8, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_Add_IntInt_ReturnValue_5) == 0x0000C0, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_GetObjectName_ReturnValue_1) == 0x0000C8, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_GetObjectName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000D8, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000E8, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_ShouldStayOnEnterSplineSegment_bStay_3) == 0x000130, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_ShouldStayOnEnterSplineSegment_bStay_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000131, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, K2Node_MakeStruct_FormatArgumentData_2) == 0x000138, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000180, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_Conv_BoolToText_ReturnValue) == 0x000190, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_Conv_BoolToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_Conv_StringToText_ReturnValue_2) == 0x0001A0, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001B0, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, K2Node_MakeStruct_FormatArgumentData_4) == 0x0001F8, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000240, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, K2Node_MakeStruct_FormatArgumentData_5) == 0x000248, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, K2Node_MakeStruct_FormatArgumentData_6) == 0x000290, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, K2Node_MakeArray_Array) == 0x0002D8, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x0002E8, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_Format_ReturnValue) == 0x0002F8, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_Conv_StringToText_ReturnValue_3) == 0x000308, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_Conv_StringToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_Conv_TextToString_ReturnValue) == 0x000318, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, K2Node_MakeStruct_FormatArgumentData_7) == 0x000328, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_Conv_StringToText_ReturnValue_4) == 0x000370, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_Conv_StringToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, K2Node_MakeStruct_FormatArgumentData_8) == 0x000380, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::K2Node_MakeStruct_FormatArgumentData_8' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_Conv_BoolToText_ReturnValue_1) == 0x0003C8, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_Conv_BoolToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, K2Node_MakeArray_Array_1) == 0x0003D8, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, K2Node_MakeStruct_FormatArgumentData_9) == 0x0003E8, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::K2Node_MakeStruct_FormatArgumentData_9' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_Format_ReturnValue_1) == 0x000430, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000440, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000450, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, K2Node_MakeStruct_FormatArgumentData_10) == 0x000458, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::K2Node_MakeStruct_FormatArgumentData_10' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, Temp_int_Variable) == 0x0004A0, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, K2Node_MakeArray_Array_2) == 0x0004A8, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_Format_ReturnValue_2) == 0x0004B8, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_Conv_TextToString_ReturnValue_2) == 0x0004C8, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, K2Node_SwitchEnum_CmpSuccess) == 0x0004D8, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_Conv_StringToText_ReturnValue_5) == 0x0004E0, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_Conv_StringToText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, K2Node_MakeStruct_FormatArgumentData_11) == 0x0004F0, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::K2Node_MakeStruct_FormatArgumentData_11' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x000538, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, K2Node_MakeArray_Array_3) == 0x000540, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_Format_ReturnValue_3) == 0x000550, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_Conv_TextToString_ReturnValue_3) == 0x000560, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_Conv_TextToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_Add_IntInt_ReturnValue_6) == 0x000570, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_Subtract_IntInt_ReturnValue_5) == 0x000574, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_Subtract_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_Add_IntInt_ReturnValue_7) == 0x000578, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_Subtract_IntInt_ReturnValue_6) == 0x00057C, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_Subtract_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, Temp_bool_Variable) == 0x000580, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, K2Node_Select_Default) == 0x000584, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_HasReachedEnd_bReachedEnd) == 0x000588, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_HasReachedEnd_bReachedEnd' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateNextPoint, CallFunc_HasArrivedNextPoint_bArrived) == 0x000589, "Member 'BP_SplineTrackComponent_C_UpdateNextPoint::CallFunc_HasArrivedNextPoint_bArrived' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.UpdatePlatformActor
// 0x0480 (0x0480 - 0x0000)
struct BP_SplineTrackComponent_C_UpdatePlatformActor final
{
public:
	double                                        DeltaTime_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TempDistance;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetRotationAtDistanceAlongSpline_ReturnValue; // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_TryConstrainRotationToPitch_OutRotation;  // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult; // 0x0068(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0160(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1; // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0280(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0378(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_471[0x3];                                      // 0x0471(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast; // 0x0474(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRotationAtDistanceAlongSpline_Distance_ImplicitCast; // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_1; // 0x047C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_UpdatePlatformActor) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_UpdatePlatformActor");
static_assert(sizeof(BP_SplineTrackComponent_C_UpdatePlatformActor) == 0x000480, "Wrong size on BP_SplineTrackComponent_C_UpdatePlatformActor");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdatePlatformActor, DeltaTime_0) == 0x000000, "Member 'BP_SplineTrackComponent_C_UpdatePlatformActor::DeltaTime_0' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdatePlatformActor, TempDistance) == 0x000008, "Member 'BP_SplineTrackComponent_C_UpdatePlatformActor::TempDistance' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdatePlatformActor, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_SplineTrackComponent_C_UpdatePlatformActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdatePlatformActor, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'BP_SplineTrackComponent_C_UpdatePlatformActor::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdatePlatformActor, CallFunc_GetRotationAtDistanceAlongSpline_ReturnValue) == 0x000018, "Member 'BP_SplineTrackComponent_C_UpdatePlatformActor::CallFunc_GetRotationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdatePlatformActor, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x000030, "Member 'BP_SplineTrackComponent_C_UpdatePlatformActor::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdatePlatformActor, CallFunc_TryConstrainRotationToPitch_OutRotation) == 0x000048, "Member 'BP_SplineTrackComponent_C_UpdatePlatformActor::CallFunc_TryConstrainRotationToPitch_OutRotation' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdatePlatformActor, CallFunc_GetOwner_ReturnValue) == 0x000060, "Member 'BP_SplineTrackComponent_C_UpdatePlatformActor::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdatePlatformActor, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult) == 0x000068, "Member 'BP_SplineTrackComponent_C_UpdatePlatformActor::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdatePlatformActor, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000160, "Member 'BP_SplineTrackComponent_C_UpdatePlatformActor::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdatePlatformActor, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x000258, "Member 'BP_SplineTrackComponent_C_UpdatePlatformActor::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdatePlatformActor, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1) == 0x000260, "Member 'BP_SplineTrackComponent_C_UpdatePlatformActor::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdatePlatformActor, CallFunc_GetOwner_ReturnValue_1) == 0x000278, "Member 'BP_SplineTrackComponent_C_UpdatePlatformActor::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdatePlatformActor, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000280, "Member 'BP_SplineTrackComponent_C_UpdatePlatformActor::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdatePlatformActor, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000378, "Member 'BP_SplineTrackComponent_C_UpdatePlatformActor::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdatePlatformActor, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000470, "Member 'BP_SplineTrackComponent_C_UpdatePlatformActor::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdatePlatformActor, CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast) == 0x000474, "Member 'BP_SplineTrackComponent_C_UpdatePlatformActor::CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdatePlatformActor, CallFunc_GetRotationAtDistanceAlongSpline_Distance_ImplicitCast) == 0x000478, "Member 'BP_SplineTrackComponent_C_UpdatePlatformActor::CallFunc_GetRotationAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdatePlatformActor, CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_1) == 0x00047C, "Member 'BP_SplineTrackComponent_C_UpdatePlatformActor::CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_1' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.UpdateSpeed
// 0x00B0 (0x00B0 - 0x0000)
struct BP_SplineTrackComponent_C_UpdateSpeed final
{
public:
	double                                        DeltaTime_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NewSpeed;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NewSpeedRaw;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetSpeedOnSplineSegment_Speed;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_1;                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetSpeedOnSplineSegment_Speed_1;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue_1;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetSpeedOnSplineSegment_Speed_2;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetSpeedOnSplineSegment_Speed_3;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_2;                       // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetSpeedOnSplineSegment_Speed_4;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue_2;                       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_UpdateSpeed) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_UpdateSpeed");
static_assert(sizeof(BP_SplineTrackComponent_C_UpdateSpeed) == 0x0000B0, "Wrong size on BP_SplineTrackComponent_C_UpdateSpeed");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateSpeed, DeltaTime_0) == 0x000000, "Member 'BP_SplineTrackComponent_C_UpdateSpeed::DeltaTime_0' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateSpeed, NewSpeed) == 0x000008, "Member 'BP_SplineTrackComponent_C_UpdateSpeed::NewSpeed' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateSpeed, NewSpeedRaw) == 0x000010, "Member 'BP_SplineTrackComponent_C_UpdateSpeed::NewSpeedRaw' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateSpeed, CallFunc_FMax_ReturnValue) == 0x000018, "Member 'BP_SplineTrackComponent_C_UpdateSpeed::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateSpeed, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_SplineTrackComponent_C_UpdateSpeed::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateSpeed, CallFunc_FMin_ReturnValue) == 0x000028, "Member 'BP_SplineTrackComponent_C_UpdateSpeed::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateSpeed, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_SplineTrackComponent_C_UpdateSpeed::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateSpeed, CallFunc_GetSpeedOnSplineSegment_Speed) == 0x000038, "Member 'BP_SplineTrackComponent_C_UpdateSpeed::CallFunc_GetSpeedOnSplineSegment_Speed' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateSpeed, CallFunc_FMax_ReturnValue_1) == 0x000040, "Member 'BP_SplineTrackComponent_C_UpdateSpeed::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateSpeed, CallFunc_GetSpeedOnSplineSegment_Speed_1) == 0x000048, "Member 'BP_SplineTrackComponent_C_UpdateSpeed::CallFunc_GetSpeedOnSplineSegment_Speed_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateSpeed, CallFunc_FMin_ReturnValue_1) == 0x000050, "Member 'BP_SplineTrackComponent_C_UpdateSpeed::CallFunc_FMin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateSpeed, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'BP_SplineTrackComponent_C_UpdateSpeed::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateSpeed, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'BP_SplineTrackComponent_C_UpdateSpeed::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateSpeed, CallFunc_GetSpeedOnSplineSegment_Speed_2) == 0x000068, "Member 'BP_SplineTrackComponent_C_UpdateSpeed::CallFunc_GetSpeedOnSplineSegment_Speed_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateSpeed, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000070, "Member 'BP_SplineTrackComponent_C_UpdateSpeed::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateSpeed, CallFunc_GetSpeedOnSplineSegment_Speed_3) == 0x000078, "Member 'BP_SplineTrackComponent_C_UpdateSpeed::CallFunc_GetSpeedOnSplineSegment_Speed_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateSpeed, CallFunc_FMax_ReturnValue_2) == 0x000080, "Member 'BP_SplineTrackComponent_C_UpdateSpeed::CallFunc_FMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateSpeed, CallFunc_GetSpeedOnSplineSegment_Speed_4) == 0x000088, "Member 'BP_SplineTrackComponent_C_UpdateSpeed::CallFunc_GetSpeedOnSplineSegment_Speed_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateSpeed, CallFunc_FMin_ReturnValue_2) == 0x000090, "Member 'BP_SplineTrackComponent_C_UpdateSpeed::CallFunc_FMin_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateSpeed, K2Node_SwitchEnum_CmpSuccess) == 0x000098, "Member 'BP_SplineTrackComponent_C_UpdateSpeed::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateSpeed, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000A0, "Member 'BP_SplineTrackComponent_C_UpdateSpeed::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateSpeed, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0000A8, "Member 'BP_SplineTrackComponent_C_UpdateSpeed::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.UpdateState
// 0x0100 (0x0100 - 0x0000)
struct BP_SplineTrackComponent_C_UpdateState final
{
public:
	double                                        DeltaTime_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_SplineTrackState                         NewState;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_32ByteByte_ReturnValue;        // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_32ByteByte_ReturnValue_1;      // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasReachedEnd_bReachedEnd;                // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetBlendTimeOnLeaveSplineSegment_BlendTime; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetBlendTimeOnLeaveSplineSegment_BlendTime_1; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetSpeedOnSplineSegment_Speed;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue; // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldStayOnEnterSplineSegment_bStay;     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetStayTimeOnEnterSplineSegment_StayTime; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldStayOnEnterSplineSegment_bStay_1;   // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1; // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetSpeedOnSplineSegment_Speed_1;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsClosedLoop_ReturnValue;                 // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetSpeedOnSplineSegment_Speed_2;          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_2; // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStaying_bIsStaying;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_2;                           // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast;      // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_B_ImplicitCast;         // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_B_ImplicitCast;   // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast_1;    // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_B_ImplicitCast_1;       // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_UpdateState) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_UpdateState");
static_assert(sizeof(BP_SplineTrackComponent_C_UpdateState) == 0x000100, "Wrong size on BP_SplineTrackComponent_C_UpdateState");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, DeltaTime_0) == 0x000000, "Member 'BP_SplineTrackComponent_C_UpdateState::DeltaTime_0' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, NewState) == 0x000008, "Member 'BP_SplineTrackComponent_C_UpdateState::NewState' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, Temp_bool_Variable) == 0x000009, "Member 'BP_SplineTrackComponent_C_UpdateState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, Temp_bool_Variable_1) == 0x00000A, "Member 'BP_SplineTrackComponent_C_UpdateState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, Temp_bool_Variable_2) == 0x00000B, "Member 'BP_SplineTrackComponent_C_UpdateState::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x00000C, "Member 'BP_SplineTrackComponent_C_UpdateState::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'BP_SplineTrackComponent_C_UpdateState::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, CallFunc_EqualEqual_32ByteByte_ReturnValue) == 0x000014, "Member 'BP_SplineTrackComponent_C_UpdateState::CallFunc_EqualEqual_32ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, CallFunc_EqualEqual_32ByteByte_ReturnValue_1) == 0x000015, "Member 'BP_SplineTrackComponent_C_UpdateState::CallFunc_EqualEqual_32ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, CallFunc_BooleanOR_ReturnValue) == 0x000016, "Member 'BP_SplineTrackComponent_C_UpdateState::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, CallFunc_HasReachedEnd_bReachedEnd) == 0x000017, "Member 'BP_SplineTrackComponent_C_UpdateState::CallFunc_HasReachedEnd_bReachedEnd' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, CallFunc_GetBlendTimeOnLeaveSplineSegment_BlendTime) == 0x000018, "Member 'BP_SplineTrackComponent_C_UpdateState::CallFunc_GetBlendTimeOnLeaveSplineSegment_BlendTime' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, CallFunc_GetBlendTimeOnLeaveSplineSegment_BlendTime_1) == 0x000020, "Member 'BP_SplineTrackComponent_C_UpdateState::CallFunc_GetBlendTimeOnLeaveSplineSegment_BlendTime_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, Temp_bool_Variable_3) == 0x000028, "Member 'BP_SplineTrackComponent_C_UpdateState::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000029, "Member 'BP_SplineTrackComponent_C_UpdateState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, CallFunc_GetSpeedOnSplineSegment_Speed) == 0x000030, "Member 'BP_SplineTrackComponent_C_UpdateState::CallFunc_GetSpeedOnSplineSegment_Speed' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000038, "Member 'BP_SplineTrackComponent_C_UpdateState::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue) == 0x00003C, "Member 'BP_SplineTrackComponent_C_UpdateState::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_SplineTrackComponent_C_UpdateState::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_SplineTrackComponent_C_UpdateState::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_SplineTrackComponent_C_UpdateState::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, CallFunc_ShouldStayOnEnterSplineSegment_bStay) == 0x000058, "Member 'BP_SplineTrackComponent_C_UpdateState::CallFunc_ShouldStayOnEnterSplineSegment_bStay' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000059, "Member 'BP_SplineTrackComponent_C_UpdateState::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00005A, "Member 'BP_SplineTrackComponent_C_UpdateState::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, K2Node_Select_Default) == 0x00005B, "Member 'BP_SplineTrackComponent_C_UpdateState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'BP_SplineTrackComponent_C_UpdateState::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, CallFunc_GetStayTimeOnEnterSplineSegment_StayTime) == 0x000068, "Member 'BP_SplineTrackComponent_C_UpdateState::CallFunc_GetStayTimeOnEnterSplineSegment_StayTime' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000070, "Member 'BP_SplineTrackComponent_C_UpdateState::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, CallFunc_ShouldStayOnEnterSplineSegment_bStay_1) == 0x000071, "Member 'BP_SplineTrackComponent_C_UpdateState::CallFunc_ShouldStayOnEnterSplineSegment_bStay_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1) == 0x000074, "Member 'BP_SplineTrackComponent_C_UpdateState::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000078, "Member 'BP_SplineTrackComponent_C_UpdateState::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, CallFunc_GetSpeedOnSplineSegment_Speed_1) == 0x000080, "Member 'BP_SplineTrackComponent_C_UpdateState::CallFunc_GetSpeedOnSplineSegment_Speed_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, CallFunc_BooleanAND_ReturnValue) == 0x000088, "Member 'BP_SplineTrackComponent_C_UpdateState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, CallFunc_IsClosedLoop_ReturnValue) == 0x000089, "Member 'BP_SplineTrackComponent_C_UpdateState::CallFunc_IsClosedLoop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, CallFunc_GetSpeedOnSplineSegment_Speed_2) == 0x000090, "Member 'BP_SplineTrackComponent_C_UpdateState::CallFunc_GetSpeedOnSplineSegment_Speed_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, K2Node_Select_Default_1) == 0x000098, "Member 'BP_SplineTrackComponent_C_UpdateState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, CallFunc_BooleanOR_ReturnValue_1) == 0x000099, "Member 'BP_SplineTrackComponent_C_UpdateState::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_2) == 0x00009C, "Member 'BP_SplineTrackComponent_C_UpdateState::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x0000A0, "Member 'BP_SplineTrackComponent_C_UpdateState::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0000A8, "Member 'BP_SplineTrackComponent_C_UpdateState::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000B0, "Member 'BP_SplineTrackComponent_C_UpdateState::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000B8, "Member 'BP_SplineTrackComponent_C_UpdateState::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, CallFunc_IsStaying_bIsStaying) == 0x0000C0, "Member 'BP_SplineTrackComponent_C_UpdateState::CallFunc_IsStaying_bIsStaying' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x0000C8, "Member 'BP_SplineTrackComponent_C_UpdateState::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x0000D0, "Member 'BP_SplineTrackComponent_C_UpdateState::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x0000D1, "Member 'BP_SplineTrackComponent_C_UpdateState::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, K2Node_Select_Default_2) == 0x0000D2, "Member 'BP_SplineTrackComponent_C_UpdateState::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, CallFunc_BooleanAND_ReturnValue_1) == 0x0000D3, "Member 'BP_SplineTrackComponent_C_UpdateState::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, CallFunc_Greater_DoubleDouble_B_ImplicitCast) == 0x0000D8, "Member 'BP_SplineTrackComponent_C_UpdateState::CallFunc_Greater_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, CallFunc_Less_DoubleDouble_B_ImplicitCast) == 0x0000E0, "Member 'BP_SplineTrackComponent_C_UpdateState::CallFunc_Less_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, CallFunc_EqualEqual_DoubleDouble_B_ImplicitCast) == 0x0000E8, "Member 'BP_SplineTrackComponent_C_UpdateState::CallFunc_EqualEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, CallFunc_Greater_DoubleDouble_B_ImplicitCast_1) == 0x0000F0, "Member 'BP_SplineTrackComponent_C_UpdateState::CallFunc_Greater_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateState, CallFunc_Less_DoubleDouble_B_ImplicitCast_1) == 0x0000F8, "Member 'BP_SplineTrackComponent_C_UpdateState::CallFunc_Less_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.UpdateUsingKeyFrameMode
// 0x0320 (0x0320 - 0x0000)
struct BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode final
{
public:
	double                                        DeltaTime_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LastUpdateTime;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bOldMovingForward;                                 // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OldPassedPointIndex;                               // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempPassedPointIndex;                              // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        NewSpeed;                                          // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NewDistance;                                       // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TimeSinceLowerKey;                                 // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_SplineTrackKeyFrameData             UpperData;                                         // 0x0038(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_SplineTrackKeyFrameData             LowerData;                                         // 0x0050(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsClosedLoop_ReturnValue;                 // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsClosedLoop_ReturnValue_1;               // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_1;    // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_2;    // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_5;            // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsMultiPlayerModeAndEnableNetSync_bYes; // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_6;            // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsMultiPlayerModeAndEnableNetSync_bYes_1; // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x012E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x012F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_3;    // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_7;            // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_4;    // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_5;    // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_8;            // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_9;            // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_6;    // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_7;    // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_10;           // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_11;           // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_2;                     // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_3;                     // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_3;           // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_2;          // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x01D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsClosedLoop_ReturnValue_2;               // 0x01D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_3;          // 0x01D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2;  // 0x01D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsClosedLoop_ReturnValue_3;               // 0x01D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_4;          // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DA[0x2];                                      // 0x01DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_12;           // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1[0x3];                                      // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_3;  // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EA[0x2];                                      // 0x01EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_8;    // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_13;           // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_14;           // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FD[0x3];                                      // 0x01FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_9;    // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_15;           // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x3];                                      // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_16;           // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputKeyValueAtDistanceAlongSpline_ReturnValue; // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_4;                     // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputKeyValueAtDistanceAlongSpline_ReturnValue_1; // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_4;  // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22D[0x3];                                      // 0x022D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_4;           // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_5;  // 0x0235(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0236(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_237[0x1];                                      // 0x0237(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_10;   // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_17;           // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_2;                  // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue; // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_4;      // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_5;      // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_4;        // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_6;      // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_7;      // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_SplineTrackKeyFrameData             CallFunc_GetLowerKeyFrameDataByTime_NewParam;      // 0x02C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_SplineTrackKeyFrameData             CallFunc_GetUpperKeyFrameDataByTime_NewParam;      // 0x02D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputKeyValueAtDistanceAlongSpline_Distance_ImplicitCast; // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FFloor_A_ImplicitCast;                    // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputKeyValueAtDistanceAlongSpline_Distance_ImplicitCast_1; // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_304[0x4];                                      // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FCeil_A_ImplicitCast;                     // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_CurrentDistance_ImplicitCast;   // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast;      // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode");
static_assert(sizeof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode) == 0x000320, "Wrong size on BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, DeltaTime_0) == 0x000000, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::DeltaTime_0' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, LastUpdateTime) == 0x000008, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::LastUpdateTime' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, bOldMovingForward) == 0x000010, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::bOldMovingForward' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, OldPassedPointIndex) == 0x000014, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::OldPassedPointIndex' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, TempPassedPointIndex) == 0x000018, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::TempPassedPointIndex' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, NewSpeed) == 0x000020, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::NewSpeed' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, NewDistance) == 0x000028, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::NewDistance' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, TimeSinceLowerKey) == 0x000030, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::TimeSinceLowerKey' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, UpperData) == 0x000038, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::UpperData' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, LowerData) == 0x000050, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::LowerData' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, Temp_int_Variable) == 0x000068, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000070, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_FFloor_ReturnValue) == 0x000078, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000080, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000088, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000090, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000098, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_IsClosedLoop_ReturnValue) == 0x0000A0, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_IsClosedLoop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000A8, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_FFloor_ReturnValue_1) == 0x0000B0, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x0000B8, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000C0, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0000C8, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x0000D0, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000D4, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Add_IntInt_ReturnValue) == 0x0000D8, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, Temp_int_Variable_1) == 0x0000DC, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000E0, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000E4, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_IsClosedLoop_ReturnValue_1) == 0x0000E8, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_IsClosedLoop_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000EC, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_GetNumberOfSplinePoints_ReturnValue_1) == 0x0000F0, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_GetNumberOfSplinePoints_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0000F4, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_SelectInt_ReturnValue) == 0x0000F8, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x0000FC, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000100, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x000104, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, Temp_int_Variable_2) == 0x000108, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_GetNumberOfSplinePoints_ReturnValue_2) == 0x00010C, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_GetNumberOfSplinePoints_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Subtract_IntInt_ReturnValue_5) == 0x000110, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Subtract_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000114, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Add_IntInt_ReturnValue_2) == 0x000118, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Add_IntInt_ReturnValue_3) == 0x00011C, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, Temp_int_Variable_3) == 0x000120, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_BP_IsMultiPlayerModeAndEnableNetSync_bYes) == 0x000124, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_BP_IsMultiPlayerModeAndEnableNetSync_bYes' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Subtract_IntInt_ReturnValue_6) == 0x000128, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Subtract_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_BP_IsMultiPlayerModeAndEnableNetSync_bYes_1) == 0x00012C, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_BP_IsMultiPlayerModeAndEnableNetSync_bYes_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Less_DoubleDouble_ReturnValue) == 0x00012D, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x00012E, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_BooleanAND_ReturnValue) == 0x00012F, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, Temp_int_Variable_4) == 0x000130, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_BooleanAND_ReturnValue_1) == 0x000134, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_GetNumberOfSplinePoints_ReturnValue_3) == 0x000138, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_GetNumberOfSplinePoints_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Subtract_IntInt_ReturnValue_7) == 0x00013C, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Subtract_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Add_IntInt_ReturnValue_4) == 0x000140, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000144, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Add_IntInt_ReturnValue_5) == 0x000148, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, K2Node_SwitchEnum_CmpSuccess) == 0x00014C, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_GetNumberOfSplinePoints_ReturnValue_4) == 0x000150, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_GetNumberOfSplinePoints_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_GetNumberOfSplinePoints_ReturnValue_5) == 0x000154, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_GetNumberOfSplinePoints_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Subtract_IntInt_ReturnValue_8) == 0x000158, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Subtract_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Subtract_IntInt_ReturnValue_9) == 0x00015C, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Subtract_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_GetNumberOfSplinePoints_ReturnValue_6) == 0x000160, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_GetNumberOfSplinePoints_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_GetNumberOfSplinePoints_ReturnValue_7) == 0x000164, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_GetNumberOfSplinePoints_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Subtract_IntInt_ReturnValue_10) == 0x000168, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Subtract_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Subtract_IntInt_ReturnValue_11) == 0x00016C, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Subtract_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000170, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_FClamp_ReturnValue) == 0x000178, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000180, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_FFloor_ReturnValue_2) == 0x000188, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_FFloor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000190, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000198, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0001A0, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_FFloor_ReturnValue_3) == 0x0001A8, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_FFloor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x0001B0, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Conv_IntToDouble_ReturnValue_3) == 0x0001B8, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Conv_IntToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0001C0, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x0001C8, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, K2Node_SwitchEnum_CmpSuccess_1) == 0x0001D0, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Less_DoubleDouble_ReturnValue_2) == 0x0001D1, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Less_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x0001D2, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_IsClosedLoop_ReturnValue_2) == 0x0001D3, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_IsClosedLoop_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_BooleanAND_ReturnValue_2) == 0x0001D4, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Less_DoubleDouble_ReturnValue_3) == 0x0001D5, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Less_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2) == 0x0001D6, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_IsClosedLoop_ReturnValue_3) == 0x0001D7, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_IsClosedLoop_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_BooleanAND_ReturnValue_3) == 0x0001D8, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Less_DoubleDouble_ReturnValue_4) == 0x0001D9, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Less_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Subtract_IntInt_ReturnValue_12) == 0x0001DC, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Subtract_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Not_PreBool_ReturnValue) == 0x0001E0, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Add_IntInt_ReturnValue_6) == 0x0001E4, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_3) == 0x0001E8, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_BooleanAND_ReturnValue_4) == 0x0001E9, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_GetNumberOfSplinePoints_ReturnValue_8) == 0x0001EC, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_GetNumberOfSplinePoints_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Subtract_IntInt_ReturnValue_13) == 0x0001F0, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Subtract_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Subtract_IntInt_ReturnValue_14) == 0x0001F4, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Subtract_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_SelectInt_ReturnValue_1) == 0x0001F8, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x0001FC, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_GetNumberOfSplinePoints_ReturnValue_9) == 0x000200, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_GetNumberOfSplinePoints_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Subtract_IntInt_ReturnValue_15) == 0x000204, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Subtract_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, Temp_int_Variable_5) == 0x000208, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, Temp_int_Variable_6) == 0x00020C, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x000210, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Add_IntInt_ReturnValue_7) == 0x000214, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Subtract_IntInt_ReturnValue_16) == 0x000218, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Subtract_IntInt_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_GetInputKeyValueAtDistanceAlongSpline_ReturnValue) == 0x00021C, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_GetInputKeyValueAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_FFloor_ReturnValue_4) == 0x000220, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_FFloor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_GetInputKeyValueAtDistanceAlongSpline_ReturnValue_1) == 0x000224, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_GetInputKeyValueAtDistanceAlongSpline_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_FCeil_ReturnValue) == 0x000228, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_4) == 0x00022C, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Add_IntInt_ReturnValue_8) == 0x000230, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_LessEqual_IntInt_ReturnValue_4) == 0x000234, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_LessEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_5) == 0x000235, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, K2Node_SwitchEnum_CmpSuccess_2) == 0x000236, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_GetNumberOfSplinePoints_ReturnValue_10) == 0x000238, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_GetNumberOfSplinePoints_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Subtract_IntInt_ReturnValue_17) == 0x00023C, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Subtract_IntInt_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_SelectInt_ReturnValue_2) == 0x000240, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_SelectInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue) == 0x000244, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000248, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000250, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000258, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000260, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000268, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000270, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000278, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x000280, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000288, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Subtract_DoubleDouble_ReturnValue_4) == 0x000290, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Subtract_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Subtract_DoubleDouble_ReturnValue_5) == 0x000298, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Subtract_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Divide_DoubleDouble_ReturnValue_4) == 0x0002A0, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Divide_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Subtract_DoubleDouble_ReturnValue_6) == 0x0002A8, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Subtract_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0002B0, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Subtract_DoubleDouble_ReturnValue_7) == 0x0002B8, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Subtract_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_GetLowerKeyFrameDataByTime_NewParam) == 0x0002C0, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_GetLowerKeyFrameDataByTime_NewParam' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_GetUpperKeyFrameDataByTime_NewParam) == 0x0002D8, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_GetUpperKeyFrameDataByTime_NewParam' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_GetInputKeyValueAtDistanceAlongSpline_Distance_ImplicitCast) == 0x0002F0, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_GetInputKeyValueAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_FFloor_A_ImplicitCast) == 0x0002F8, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_FFloor_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_GetInputKeyValueAtDistanceAlongSpline_Distance_ImplicitCast_1) == 0x000300, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_GetInputKeyValueAtDistanceAlongSpline_Distance_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_FCeil_A_ImplicitCast) == 0x000308, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_FCeil_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, K2Node_VariableSet_CurrentDistance_ImplicitCast) == 0x000310, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::K2Node_VariableSet_CurrentDistance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode, CallFunc_Greater_DoubleDouble_B_ImplicitCast) == 0x000318, "Member 'BP_SplineTrackComponent_C_UpdateUsingKeyFrameMode::CallFunc_Greater_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_SplineTrackComponent.BP_SplineTrackComponent_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct BP_SplineTrackComponent_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineTrackComponent_C_GetModuleName) == 0x000008, "Wrong alignment on BP_SplineTrackComponent_C_GetModuleName");
static_assert(sizeof(BP_SplineTrackComponent_C_GetModuleName) == 0x000010, "Wrong size on BP_SplineTrackComponent_C_GetModuleName");
static_assert(offsetof(BP_SplineTrackComponent_C_GetModuleName, ReturnValue) == 0x000000, "Member 'BP_SplineTrackComponent_C_GetModuleName::ReturnValue' has a wrong offset!");

}

