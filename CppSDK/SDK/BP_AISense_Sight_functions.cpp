#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AISense_Sight

#include "Basic.hpp"

#include "BP_AISense_Sight_classes.hpp"
#include "BP_AISense_Sight_parameters.hpp"


namespace SDK
{

// Function BP_AISense_Sight.BP_AISense_Sight_C.IsInterestedTarget
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class AActor*                     ListenerActor                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UX6AISenseConfig_Sight*           Config                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_AISense_Sight_C::IsInterestedTarget(const class AActor* ListenerActor, class AActor* TargetActor, class UX6AISenseConfig_Sight* Config)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AISense_Sight_C", "IsInterestedTarget");

	Params::BP_AISense_Sight_C_IsInterestedTarget Parms{};

	Parms.ListenerActor = ListenerActor;
	Parms.TargetActor = TargetActor;
	Parms.Config = Config;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AISense_Sight.BP_AISense_Sight_C.ReportStimulus
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class AActor*                     ListenerActor                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UX6AISenseConfig_Sight*           Config                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EX6AISenseSightResultType               ResultType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bLastResult                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_AISense_Sight_C::ReportStimulus(const class AActor* ListenerActor, class AActor* TargetActor, class UX6AISenseConfig_Sight* Config, EX6AISenseSightResultType ResultType, bool bLastResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AISense_Sight_C", "ReportStimulus");

	Params::BP_AISense_Sight_C_ReportStimulus Parms{};

	Parms.ListenerActor = ListenerActor;
	Parms.TargetActor = TargetActor;
	Parms.Config = Config;
	Parms.ResultType = ResultType;
	Parms.bLastResult = bLastResult;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AISense_Sight.BP_AISense_Sight_C.GetModuleName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UBP_AISense_Sight_C::GetModuleName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AISense_Sight_C", "GetModuleName");

	Params::BP_AISense_Sight_C_GetModuleName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

