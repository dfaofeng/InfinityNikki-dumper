#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LightningControl

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LightningControl.BP_LightningControl_C
// 0x00D0 (0x0478 - 0x03A8)
class ABP_LightningControl_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      Ns_Obscured;                                       // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         T_LightningStrength_F1_1FFA76CA4AC17227B01149A3DE819B47; // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            T_LightningStrength__Direction_1FFA76CA4AC17227B01149A3DE819B47; // 0x03C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C5[0x3];                                      // 0x03C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     T_LightningStrength;                               // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CameraLocation;                                    // 0x03D0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LightningAngleRange;                               // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LightningHeight;                                   // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LightningLocation;                                 // 0x03F8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LightningFlashLength;                              // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADirectionalLight*                      ref_SunLight;                                      // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            LightningStrengthCv;                               // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               SkymaterialLC;                                     // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_DyEnvSys_C*                         TodSysLC;                                          // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_DyEnvWeathers_C*                    DyWeatherLC;                                       // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          isLightning;                                       // 0x0440(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_441[0x7];                                      // 0x0441(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ScatteringRadius;                                  // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        打雷延迟;                                      // 0x0450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaterialLightningIntensity;                        // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DirLightningIntensity;                             // 0x0460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(double LightningIntensity, double Distance)> Event_Thunder;        // 0x0468(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ED_Lightning_Event_0();
	void ED_StopLightning_Event_0();
	void End_Lightning();
	void ExecuteUbergraph_BP_LightningControl(int32 EntryPoint);
	void Lightning();
	void PostConstruceion();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void T_LightningStrength__FinishedFunc();
	void T_LightningStrength__UpdateFunc();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LightningControl_C">();
	}
	static class ABP_LightningControl_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LightningControl_C>();
	}
};
static_assert(alignof(ABP_LightningControl_C) == 0x000008, "Wrong alignment on ABP_LightningControl_C");
static_assert(sizeof(ABP_LightningControl_C) == 0x000478, "Wrong size on ABP_LightningControl_C");
static_assert(offsetof(ABP_LightningControl_C, UberGraphFrame) == 0x0003A8, "Member 'ABP_LightningControl_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_LightningControl_C, Ns_Obscured) == 0x0003B0, "Member 'ABP_LightningControl_C::Ns_Obscured' has a wrong offset!");
static_assert(offsetof(ABP_LightningControl_C, DefaultSceneRoot) == 0x0003B8, "Member 'ABP_LightningControl_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_LightningControl_C, T_LightningStrength_F1_1FFA76CA4AC17227B01149A3DE819B47) == 0x0003C0, "Member 'ABP_LightningControl_C::T_LightningStrength_F1_1FFA76CA4AC17227B01149A3DE819B47' has a wrong offset!");
static_assert(offsetof(ABP_LightningControl_C, T_LightningStrength__Direction_1FFA76CA4AC17227B01149A3DE819B47) == 0x0003C4, "Member 'ABP_LightningControl_C::T_LightningStrength__Direction_1FFA76CA4AC17227B01149A3DE819B47' has a wrong offset!");
static_assert(offsetof(ABP_LightningControl_C, T_LightningStrength) == 0x0003C8, "Member 'ABP_LightningControl_C::T_LightningStrength' has a wrong offset!");
static_assert(offsetof(ABP_LightningControl_C, CameraLocation) == 0x0003D0, "Member 'ABP_LightningControl_C::CameraLocation' has a wrong offset!");
static_assert(offsetof(ABP_LightningControl_C, LightningAngleRange) == 0x0003E8, "Member 'ABP_LightningControl_C::LightningAngleRange' has a wrong offset!");
static_assert(offsetof(ABP_LightningControl_C, LightningHeight) == 0x0003F0, "Member 'ABP_LightningControl_C::LightningHeight' has a wrong offset!");
static_assert(offsetof(ABP_LightningControl_C, LightningLocation) == 0x0003F8, "Member 'ABP_LightningControl_C::LightningLocation' has a wrong offset!");
static_assert(offsetof(ABP_LightningControl_C, LightningFlashLength) == 0x000410, "Member 'ABP_LightningControl_C::LightningFlashLength' has a wrong offset!");
static_assert(offsetof(ABP_LightningControl_C, ref_SunLight) == 0x000418, "Member 'ABP_LightningControl_C::ref_SunLight' has a wrong offset!");
static_assert(offsetof(ABP_LightningControl_C, LightningStrengthCv) == 0x000420, "Member 'ABP_LightningControl_C::LightningStrengthCv' has a wrong offset!");
static_assert(offsetof(ABP_LightningControl_C, SkymaterialLC) == 0x000428, "Member 'ABP_LightningControl_C::SkymaterialLC' has a wrong offset!");
static_assert(offsetof(ABP_LightningControl_C, TodSysLC) == 0x000430, "Member 'ABP_LightningControl_C::TodSysLC' has a wrong offset!");
static_assert(offsetof(ABP_LightningControl_C, DyWeatherLC) == 0x000438, "Member 'ABP_LightningControl_C::DyWeatherLC' has a wrong offset!");
static_assert(offsetof(ABP_LightningControl_C, isLightning) == 0x000440, "Member 'ABP_LightningControl_C::isLightning' has a wrong offset!");
static_assert(offsetof(ABP_LightningControl_C, ScatteringRadius) == 0x000448, "Member 'ABP_LightningControl_C::ScatteringRadius' has a wrong offset!");
static_assert(offsetof(ABP_LightningControl_C, 打雷延迟) == 0x000450, "Member 'ABP_LightningControl_C::打雷延迟' has a wrong offset!");
static_assert(offsetof(ABP_LightningControl_C, MaterialLightningIntensity) == 0x000458, "Member 'ABP_LightningControl_C::MaterialLightningIntensity' has a wrong offset!");
static_assert(offsetof(ABP_LightningControl_C, DirLightningIntensity) == 0x000460, "Member 'ABP_LightningControl_C::DirLightningIntensity' has a wrong offset!");
static_assert(offsetof(ABP_LightningControl_C, Event_Thunder) == 0x000468, "Member 'ABP_LightningControl_C::Event_Thunder' has a wrong offset!");

}

