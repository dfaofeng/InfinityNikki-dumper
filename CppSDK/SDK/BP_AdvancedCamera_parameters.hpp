#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AdvancedCamera

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_AdvancedCamera.BP_AdvancedCamera_C.BP_AddZoomedTargetOffsetZByReason
// 0x0018 (0x0018 - 0x0000)
struct BP_AdvancedCamera_C_BP_AddZoomedTargetOffsetZByReason final
{
public:
	class FString                                 ReasonName;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	double                                        TargetOffsetZ;                                     // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AdvancedCamera_C_BP_AddZoomedTargetOffsetZByReason) == 0x000008, "Wrong alignment on BP_AdvancedCamera_C_BP_AddZoomedTargetOffsetZByReason");
static_assert(sizeof(BP_AdvancedCamera_C_BP_AddZoomedTargetOffsetZByReason) == 0x000018, "Wrong size on BP_AdvancedCamera_C_BP_AddZoomedTargetOffsetZByReason");
static_assert(offsetof(BP_AdvancedCamera_C_BP_AddZoomedTargetOffsetZByReason, ReasonName) == 0x000000, "Member 'BP_AdvancedCamera_C_BP_AddZoomedTargetOffsetZByReason::ReasonName' has a wrong offset!");
static_assert(offsetof(BP_AdvancedCamera_C_BP_AddZoomedTargetOffsetZByReason, TargetOffsetZ) == 0x000010, "Member 'BP_AdvancedCamera_C_BP_AddZoomedTargetOffsetZByReason::TargetOffsetZ' has a wrong offset!");

// Function BP_AdvancedCamera.BP_AdvancedCamera_C.BP_RemoveZoomedTargetOffsetZByReason
// 0x0010 (0x0010 - 0x0000)
struct BP_AdvancedCamera_C_BP_RemoveZoomedTargetOffsetZByReason final
{
public:
	class FString                                 ReasonName;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AdvancedCamera_C_BP_RemoveZoomedTargetOffsetZByReason) == 0x000008, "Wrong alignment on BP_AdvancedCamera_C_BP_RemoveZoomedTargetOffsetZByReason");
static_assert(sizeof(BP_AdvancedCamera_C_BP_RemoveZoomedTargetOffsetZByReason) == 0x000010, "Wrong size on BP_AdvancedCamera_C_BP_RemoveZoomedTargetOffsetZByReason");
static_assert(offsetof(BP_AdvancedCamera_C_BP_RemoveZoomedTargetOffsetZByReason, ReasonName) == 0x000000, "Member 'BP_AdvancedCamera_C_BP_RemoveZoomedTargetOffsetZByReason::ReasonName' has a wrong offset!");

// Function BP_AdvancedCamera.BP_AdvancedCamera_C.ExecuteUbergraph_BP_AdvancedCamera
// 0x0018 (0x0018 - 0x0000)
struct BP_AdvancedCamera_C_ExecuteUbergraph_BP_AdvancedCamera final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	const class AActor*                           K2Node_Event_OldLookAtTarget;                      // 0x0008(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class AActor*                           K2Node_Event_NewLookAtTarget;                      // 0x0010(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AdvancedCamera_C_ExecuteUbergraph_BP_AdvancedCamera) == 0x000008, "Wrong alignment on BP_AdvancedCamera_C_ExecuteUbergraph_BP_AdvancedCamera");
static_assert(sizeof(BP_AdvancedCamera_C_ExecuteUbergraph_BP_AdvancedCamera) == 0x000018, "Wrong size on BP_AdvancedCamera_C_ExecuteUbergraph_BP_AdvancedCamera");
static_assert(offsetof(BP_AdvancedCamera_C_ExecuteUbergraph_BP_AdvancedCamera, EntryPoint) == 0x000000, "Member 'BP_AdvancedCamera_C_ExecuteUbergraph_BP_AdvancedCamera::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AdvancedCamera_C_ExecuteUbergraph_BP_AdvancedCamera, K2Node_Event_EndPlayReason) == 0x000004, "Member 'BP_AdvancedCamera_C_ExecuteUbergraph_BP_AdvancedCamera::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_AdvancedCamera_C_ExecuteUbergraph_BP_AdvancedCamera, K2Node_Event_OldLookAtTarget) == 0x000008, "Member 'BP_AdvancedCamera_C_ExecuteUbergraph_BP_AdvancedCamera::K2Node_Event_OldLookAtTarget' has a wrong offset!");
static_assert(offsetof(BP_AdvancedCamera_C_ExecuteUbergraph_BP_AdvancedCamera, K2Node_Event_NewLookAtTarget) == 0x000010, "Member 'BP_AdvancedCamera_C_ExecuteUbergraph_BP_AdvancedCamera::K2Node_Event_NewLookAtTarget' has a wrong offset!");

// Function BP_AdvancedCamera.BP_AdvancedCamera_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_AdvancedCamera_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AdvancedCamera_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_AdvancedCamera_C_ReceiveEndPlay");
static_assert(sizeof(BP_AdvancedCamera_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_AdvancedCamera_C_ReceiveEndPlay");
static_assert(offsetof(BP_AdvancedCamera_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_AdvancedCamera_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_AdvancedCamera.BP_AdvancedCamera_C.ReceiveUpdateLookAtTarget
// 0x0010 (0x0010 - 0x0000)
struct BP_AdvancedCamera_C_ReceiveUpdateLookAtTarget final
{
public:
	const class AActor*                           OldLookAtTarget;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class AActor*                           NewLookAtTarget;                                   // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AdvancedCamera_C_ReceiveUpdateLookAtTarget) == 0x000008, "Wrong alignment on BP_AdvancedCamera_C_ReceiveUpdateLookAtTarget");
static_assert(sizeof(BP_AdvancedCamera_C_ReceiveUpdateLookAtTarget) == 0x000010, "Wrong size on BP_AdvancedCamera_C_ReceiveUpdateLookAtTarget");
static_assert(offsetof(BP_AdvancedCamera_C_ReceiveUpdateLookAtTarget, OldLookAtTarget) == 0x000000, "Member 'BP_AdvancedCamera_C_ReceiveUpdateLookAtTarget::OldLookAtTarget' has a wrong offset!");
static_assert(offsetof(BP_AdvancedCamera_C_ReceiveUpdateLookAtTarget, NewLookAtTarget) == 0x000008, "Member 'BP_AdvancedCamera_C_ReceiveUpdateLookAtTarget::NewLookAtTarget' has a wrong offset!");

// Function BP_AdvancedCamera.BP_AdvancedCamera_C.SetTargetPitch
// 0x0008 (0x0008 - 0x0000)
struct BP_AdvancedCamera_C_SetTargetPitch final
{
public:
	double                                        NewParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AdvancedCamera_C_SetTargetPitch) == 0x000008, "Wrong alignment on BP_AdvancedCamera_C_SetTargetPitch");
static_assert(sizeof(BP_AdvancedCamera_C_SetTargetPitch) == 0x000008, "Wrong size on BP_AdvancedCamera_C_SetTargetPitch");
static_assert(offsetof(BP_AdvancedCamera_C_SetTargetPitch, NewParam) == 0x000000, "Member 'BP_AdvancedCamera_C_SetTargetPitch::NewParam' has a wrong offset!");

// Function BP_AdvancedCamera.BP_AdvancedCamera_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct BP_AdvancedCamera_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_AdvancedCamera_C_GetModuleName) == 0x000008, "Wrong alignment on BP_AdvancedCamera_C_GetModuleName");
static_assert(sizeof(BP_AdvancedCamera_C_GetModuleName) == 0x000010, "Wrong size on BP_AdvancedCamera_C_GetModuleName");
static_assert(offsetof(BP_AdvancedCamera_C_GetModuleName, ReturnValue) == 0x000000, "Member 'BP_AdvancedCamera_C_GetModuleName::ReturnValue' has a wrong offset!");

}

