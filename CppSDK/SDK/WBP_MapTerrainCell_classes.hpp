#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MapTerrainCell

#include "Basic.hpp"

#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_MapTerrainCell.WBP_MapTerrainCell_C
// 0x0028 (0x0318 - 0x02F0)
class UWBP_MapTerrainCell_C final : public UUserWidget
{
public:
	class UImage*                                 Image_Terrain;                                     // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Pic_1;                                         // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Pic_2;                                         // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Pic_3;                                         // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Pic_4;                                         // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_MapTerrainCell_C">();
	}
	static class UWBP_MapTerrainCell_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_MapTerrainCell_C>();
	}
};
static_assert(alignof(UWBP_MapTerrainCell_C) == 0x000008, "Wrong alignment on UWBP_MapTerrainCell_C");
static_assert(sizeof(UWBP_MapTerrainCell_C) == 0x000318, "Wrong size on UWBP_MapTerrainCell_C");
static_assert(offsetof(UWBP_MapTerrainCell_C, Image_Terrain) == 0x0002F0, "Member 'UWBP_MapTerrainCell_C::Image_Terrain' has a wrong offset!");
static_assert(offsetof(UWBP_MapTerrainCell_C, Img_Pic_1) == 0x0002F8, "Member 'UWBP_MapTerrainCell_C::Img_Pic_1' has a wrong offset!");
static_assert(offsetof(UWBP_MapTerrainCell_C, Img_Pic_2) == 0x000300, "Member 'UWBP_MapTerrainCell_C::Img_Pic_2' has a wrong offset!");
static_assert(offsetof(UWBP_MapTerrainCell_C, Img_Pic_3) == 0x000308, "Member 'UWBP_MapTerrainCell_C::Img_Pic_3' has a wrong offset!");
static_assert(offsetof(UWBP_MapTerrainCell_C, Img_Pic_4) == 0x000310, "Member 'UWBP_MapTerrainCell_C::Img_Pic_4' has a wrong offset!");

}

