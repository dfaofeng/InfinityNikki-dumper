#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WeatherSensitiveActorManager

#include "Basic.hpp"

#include "BP_WeatherSensitiveActorManager_classes.hpp"
#include "BP_WeatherSensitiveActorManager_parameters.hpp"


namespace SDK
{

// Function BP_WeatherSensitiveActorManager.BP_WeatherSensitiveActorManager_C.BP_GetCurrentWeather
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// Enum_WeatherType*                       Weather                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WeatherSensitiveActorManager_C::BP_GetCurrentWeather(Enum_WeatherType* Weather)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeatherSensitiveActorManager_C", "BP_GetCurrentWeather");

	Params::BP_WeatherSensitiveActorManager_C_BP_GetCurrentWeather Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Weather != nullptr)
		*Weather = Parms.Weather;
}


// Function BP_WeatherSensitiveActorManager.BP_WeatherSensitiveActorManager_C.BP_GetDisplayedWeather
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// Enum_WeatherType*                       Weather                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WeatherSensitiveActorManager_C::BP_GetDisplayedWeather(Enum_WeatherType* Weather)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeatherSensitiveActorManager_C", "BP_GetDisplayedWeather");

	Params::BP_WeatherSensitiveActorManager_C_BP_GetDisplayedWeather Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Weather != nullptr)
		*Weather = Parms.Weather;
}


// Function BP_WeatherSensitiveActorManager.BP_WeatherSensitiveActorManager_C.BP_IsManagedActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TSoftObjectPtr<class AActor>            ActorSoftRef                                           (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool*                                   bIsManaged                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WeatherSensitiveActorManager_C::BP_IsManagedActor(TSoftObjectPtr<class AActor> ActorSoftRef, bool* bIsManaged)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeatherSensitiveActorManager_C", "BP_IsManagedActor");

	Params::BP_WeatherSensitiveActorManager_C_BP_IsManagedActor Parms{};

	Parms.ActorSoftRef = ActorSoftRef;

	UObject::ProcessEvent(Func, &Parms);

	if (bIsManaged != nullptr)
		*bIsManaged = Parms.bIsManaged;
}


// Function BP_WeatherSensitiveActorManager.BP_WeatherSensitiveActorManager_C.BP_IsManagedActorTemp
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   bIsManagedActor                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WeatherSensitiveActorManager_C::BP_IsManagedActorTemp(class AActor* Actor, bool* bIsManagedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeatherSensitiveActorManager_C", "BP_IsManagedActorTemp");

	Params::BP_WeatherSensitiveActorManager_C_BP_IsManagedActorTemp Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (bIsManagedActor != nullptr)
		*bIsManagedActor = Parms.bIsManagedActor;
}


// Function BP_WeatherSensitiveActorManager.BP_WeatherSensitiveActorManager_C.EditorOnly_GenerateBounds
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_WeatherSensitiveActorManager_C::EditorOnly_GenerateBounds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeatherSensitiveActorManager_C", "EditorOnly_GenerateBounds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WeatherSensitiveActorManager.BP_WeatherSensitiveActorManager_C.ExecuteUbergraph_BP_WeatherSensitiveActorManager
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WeatherSensitiveActorManager_C::ExecuteUbergraph_BP_WeatherSensitiveActorManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeatherSensitiveActorManager_C", "ExecuteUbergraph_BP_WeatherSensitiveActorManager");

	Params::BP_WeatherSensitiveActorManager_C_ExecuteUbergraph_BP_WeatherSensitiveActorManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WeatherSensitiveActorManager.BP_WeatherSensitiveActorManager_C.IsUsingLegacyMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   bLegacyMode                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WeatherSensitiveActorManager_C::IsUsingLegacyMode(bool* bLegacyMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeatherSensitiveActorManager_C", "IsUsingLegacyMode");

	Params::BP_WeatherSensitiveActorManager_C_IsUsingLegacyMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bLegacyMode != nullptr)
		*bLegacyMode = Parms.bLegacyMode;
}


// Function BP_WeatherSensitiveActorManager.BP_WeatherSensitiveActorManager_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WeatherSensitiveActorManager_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeatherSensitiveActorManager_C", "ReceiveTick");

	Params::BP_WeatherSensitiveActorManager_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WeatherSensitiveActorManager.BP_WeatherSensitiveActorManager_C.GetModuleName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString ABP_WeatherSensitiveActorManager_C::GetModuleName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeatherSensitiveActorManager_C", "GetModuleName");

	Params::BP_WeatherSensitiveActorManager_C_GetModuleName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

