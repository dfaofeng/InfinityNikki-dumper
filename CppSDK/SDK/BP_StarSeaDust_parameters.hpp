#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_StarSeaDust

#include "Basic.hpp"

#include "EStarSeaDust_Type_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "E_InteractionProcess_structs.hpp"
#include "X6StateMachine_structs.hpp"


namespace SDK::Params
{

// Function BP_StarSeaDust.BP_StarSeaDust_C.BndEvt__BP_StarSeaDust_BP_InteractiveActorComponent_K2Node_ComponentBoundEvent_2_ActiveInteractive__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct BP_StarSeaDust_C_BndEvt__BP_StarSeaDust_BP_InteractiveActorComponent_K2Node_ComponentBoundEvent_2_ActiveInteractive__DelegateSignature final
{
public:
	E_InteractionProcess                          Process;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         InteractMasterNetID;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 InteractMasterActor;                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPressBtnInteraction;                             // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 InteractedActor;                                   // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_InterAction_State_C*                InterAction_State;                                 // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StarSeaDust_C_BndEvt__BP_StarSeaDust_BP_InteractiveActorComponent_K2Node_ComponentBoundEvent_2_ActiveInteractive__DelegateSignature) == 0x000008, "Wrong alignment on BP_StarSeaDust_C_BndEvt__BP_StarSeaDust_BP_InteractiveActorComponent_K2Node_ComponentBoundEvent_2_ActiveInteractive__DelegateSignature");
static_assert(sizeof(BP_StarSeaDust_C_BndEvt__BP_StarSeaDust_BP_InteractiveActorComponent_K2Node_ComponentBoundEvent_2_ActiveInteractive__DelegateSignature) == 0x000030, "Wrong size on BP_StarSeaDust_C_BndEvt__BP_StarSeaDust_BP_InteractiveActorComponent_K2Node_ComponentBoundEvent_2_ActiveInteractive__DelegateSignature");
static_assert(offsetof(BP_StarSeaDust_C_BndEvt__BP_StarSeaDust_BP_InteractiveActorComponent_K2Node_ComponentBoundEvent_2_ActiveInteractive__DelegateSignature, Process) == 0x000000, "Member 'BP_StarSeaDust_C_BndEvt__BP_StarSeaDust_BP_InteractiveActorComponent_K2Node_ComponentBoundEvent_2_ActiveInteractive__DelegateSignature::Process' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BndEvt__BP_StarSeaDust_BP_InteractiveActorComponent_K2Node_ComponentBoundEvent_2_ActiveInteractive__DelegateSignature, InteractMasterNetID) == 0x000008, "Member 'BP_StarSeaDust_C_BndEvt__BP_StarSeaDust_BP_InteractiveActorComponent_K2Node_ComponentBoundEvent_2_ActiveInteractive__DelegateSignature::InteractMasterNetID' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BndEvt__BP_StarSeaDust_BP_InteractiveActorComponent_K2Node_ComponentBoundEvent_2_ActiveInteractive__DelegateSignature, InteractMasterActor) == 0x000010, "Member 'BP_StarSeaDust_C_BndEvt__BP_StarSeaDust_BP_InteractiveActorComponent_K2Node_ComponentBoundEvent_2_ActiveInteractive__DelegateSignature::InteractMasterActor' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BndEvt__BP_StarSeaDust_BP_InteractiveActorComponent_K2Node_ComponentBoundEvent_2_ActiveInteractive__DelegateSignature, IsPressBtnInteraction) == 0x000018, "Member 'BP_StarSeaDust_C_BndEvt__BP_StarSeaDust_BP_InteractiveActorComponent_K2Node_ComponentBoundEvent_2_ActiveInteractive__DelegateSignature::IsPressBtnInteraction' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BndEvt__BP_StarSeaDust_BP_InteractiveActorComponent_K2Node_ComponentBoundEvent_2_ActiveInteractive__DelegateSignature, InteractedActor) == 0x000020, "Member 'BP_StarSeaDust_C_BndEvt__BP_StarSeaDust_BP_InteractiveActorComponent_K2Node_ComponentBoundEvent_2_ActiveInteractive__DelegateSignature::InteractedActor' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BndEvt__BP_StarSeaDust_BP_InteractiveActorComponent_K2Node_ComponentBoundEvent_2_ActiveInteractive__DelegateSignature, InterAction_State) == 0x000028, "Member 'BP_StarSeaDust_C_BndEvt__BP_StarSeaDust_BP_InteractiveActorComponent_K2Node_ComponentBoundEvent_2_ActiveInteractive__DelegateSignature::InterAction_State' has a wrong offset!");

// Function BP_StarSeaDust.BP_StarSeaDust_C.BndEvt__BP_StarSeaDust_Niagara_Collect_K2Node_ComponentBoundEvent_1_OnNiagaraSystemFinished__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_StarSeaDust_C_BndEvt__BP_StarSeaDust_Niagara_Collect_K2Node_ComponentBoundEvent_1_OnNiagaraSystemFinished__DelegateSignature final
{
public:
	class UNiagaraComponent*                      PSystem;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StarSeaDust_C_BndEvt__BP_StarSeaDust_Niagara_Collect_K2Node_ComponentBoundEvent_1_OnNiagaraSystemFinished__DelegateSignature) == 0x000008, "Wrong alignment on BP_StarSeaDust_C_BndEvt__BP_StarSeaDust_Niagara_Collect_K2Node_ComponentBoundEvent_1_OnNiagaraSystemFinished__DelegateSignature");
static_assert(sizeof(BP_StarSeaDust_C_BndEvt__BP_StarSeaDust_Niagara_Collect_K2Node_ComponentBoundEvent_1_OnNiagaraSystemFinished__DelegateSignature) == 0x000008, "Wrong size on BP_StarSeaDust_C_BndEvt__BP_StarSeaDust_Niagara_Collect_K2Node_ComponentBoundEvent_1_OnNiagaraSystemFinished__DelegateSignature");
static_assert(offsetof(BP_StarSeaDust_C_BndEvt__BP_StarSeaDust_Niagara_Collect_K2Node_ComponentBoundEvent_1_OnNiagaraSystemFinished__DelegateSignature, PSystem) == 0x000000, "Member 'BP_StarSeaDust_C_BndEvt__BP_StarSeaDust_Niagara_Collect_K2Node_ComponentBoundEvent_1_OnNiagaraSystemFinished__DelegateSignature::PSystem' has a wrong offset!");

// Function BP_StarSeaDust.BP_StarSeaDust_C.BndEvt__BP_StarSeaDust_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct BP_StarSeaDust_C_BndEvt__BP_StarSeaDust_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_StarSeaDust_C_BndEvt__BP_StarSeaDust_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_StarSeaDust_C_BndEvt__BP_StarSeaDust_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_StarSeaDust_C_BndEvt__BP_StarSeaDust_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000118, "Wrong size on BP_StarSeaDust_C_BndEvt__BP_StarSeaDust_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_StarSeaDust_C_BndEvt__BP_StarSeaDust_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_StarSeaDust_C_BndEvt__BP_StarSeaDust_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BndEvt__BP_StarSeaDust_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_StarSeaDust_C_BndEvt__BP_StarSeaDust_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BndEvt__BP_StarSeaDust_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_StarSeaDust_C_BndEvt__BP_StarSeaDust_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BndEvt__BP_StarSeaDust_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_StarSeaDust_C_BndEvt__BP_StarSeaDust_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BndEvt__BP_StarSeaDust_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_StarSeaDust_C_BndEvt__BP_StarSeaDust_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BndEvt__BP_StarSeaDust_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_StarSeaDust_C_BndEvt__BP_StarSeaDust_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_StarSeaDust.BP_StarSeaDust_C.BP_ForceInteractSuccess
// 0x0001 (0x0001 - 0x0000)
struct BP_StarSeaDust_C_BP_ForceInteractSuccess final
{
public:
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StarSeaDust_C_BP_ForceInteractSuccess) == 0x000001, "Wrong alignment on BP_StarSeaDust_C_BP_ForceInteractSuccess");
static_assert(sizeof(BP_StarSeaDust_C_BP_ForceInteractSuccess) == 0x000001, "Wrong size on BP_StarSeaDust_C_BP_ForceInteractSuccess");
static_assert(offsetof(BP_StarSeaDust_C_BP_ForceInteractSuccess, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000000, "Member 'BP_StarSeaDust_C_BP_ForceInteractSuccess::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");

// Function BP_StarSeaDust.BP_StarSeaDust_C.BP_IsArriveAtPlayer
// 0x0050 (0x0050 - 0x0000)
struct BP_StarSeaDust_C_BP_IsArriveAtPlayer final
{
public:
	bool                                          isArrive;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetLocalPlayerPawn_LocalPlayerPawn;       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_DistanceSquared_ReturnValue;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StarSeaDust_C_BP_IsArriveAtPlayer) == 0x000008, "Wrong alignment on BP_StarSeaDust_C_BP_IsArriveAtPlayer");
static_assert(sizeof(BP_StarSeaDust_C_BP_IsArriveAtPlayer) == 0x000050, "Wrong size on BP_StarSeaDust_C_BP_IsArriveAtPlayer");
static_assert(offsetof(BP_StarSeaDust_C_BP_IsArriveAtPlayer, isArrive) == 0x000000, "Member 'BP_StarSeaDust_C_BP_IsArriveAtPlayer::isArrive' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_IsArriveAtPlayer, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_StarSeaDust_C_BP_IsArriveAtPlayer::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_IsArriveAtPlayer, CallFunc_GetLocalPlayerPawn_LocalPlayerPawn) == 0x000020, "Member 'BP_StarSeaDust_C_BP_IsArriveAtPlayer::CallFunc_GetLocalPlayerPawn_LocalPlayerPawn' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_IsArriveAtPlayer, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000028, "Member 'BP_StarSeaDust_C_BP_IsArriveAtPlayer::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_IsArriveAtPlayer, CallFunc_Vector_DistanceSquared_ReturnValue) == 0x000040, "Member 'BP_StarSeaDust_C_BP_IsArriveAtPlayer::CallFunc_Vector_DistanceSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_IsArriveAtPlayer, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_StarSeaDust_C_BP_IsArriveAtPlayer::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_StarSeaDust.BP_StarSeaDust_C.BP_StartFly
// 0x00E0 (0x00E0 - 0x0000)
struct BP_StarSeaDust_C_BP_StartFly final
{
public:
	class ACharacter*                             CallFunc_GetLocalPlayerPawn_LocalPlayerPawn;       // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78[0x8];                                       // 0x0078(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0080(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StarSeaDust_C_BP_StartFly) == 0x000010, "Wrong alignment on BP_StarSeaDust_C_BP_StartFly");
static_assert(sizeof(BP_StarSeaDust_C_BP_StartFly) == 0x0000E0, "Wrong size on BP_StarSeaDust_C_BP_StartFly");
static_assert(offsetof(BP_StarSeaDust_C_BP_StartFly, CallFunc_GetLocalPlayerPawn_LocalPlayerPawn) == 0x000000, "Member 'BP_StarSeaDust_C_BP_StartFly::CallFunc_GetLocalPlayerPawn_LocalPlayerPawn' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_StartFly, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_StarSeaDust_C_BP_StartFly::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_StartFly, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000020, "Member 'BP_StarSeaDust_C_BP_StartFly::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_StartFly, CallFunc_FindLookAtRotation_ReturnValue) == 0x000038, "Member 'BP_StarSeaDust_C_BP_StartFly::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_StartFly, CallFunc_BreakRotator_Roll) == 0x000050, "Member 'BP_StarSeaDust_C_BP_StartFly::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_StartFly, CallFunc_BreakRotator_Pitch) == 0x000054, "Member 'BP_StarSeaDust_C_BP_StartFly::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_StartFly, CallFunc_BreakRotator_Yaw) == 0x000058, "Member 'BP_StarSeaDust_C_BP_StartFly::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_StartFly, CallFunc_MakeRotator_ReturnValue) == 0x000060, "Member 'BP_StarSeaDust_C_BP_StartFly::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_StartFly, CallFunc_MakeTransform_ReturnValue) == 0x000080, "Member 'BP_StarSeaDust_C_BP_StartFly::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function BP_StarSeaDust.BP_StarSeaDust_C.BP_UpdateActorLocationOnCurve
// 0x0150 (0x0150 - 0x0000)
struct BP_StarSeaDust_C_BP_UpdateActorLocationOnCurve final
{
public:
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVectorValue_ReturnValue;               // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0050(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetVectorValue_InTime_ImplicitCast;       // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StarSeaDust_C_BP_UpdateActorLocationOnCurve) == 0x000008, "Wrong alignment on BP_StarSeaDust_C_BP_UpdateActorLocationOnCurve");
static_assert(sizeof(BP_StarSeaDust_C_BP_UpdateActorLocationOnCurve) == 0x000150, "Wrong size on BP_StarSeaDust_C_BP_UpdateActorLocationOnCurve");
static_assert(offsetof(BP_StarSeaDust_C_BP_UpdateActorLocationOnCurve, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000000, "Member 'BP_StarSeaDust_C_BP_UpdateActorLocationOnCurve::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_UpdateActorLocationOnCurve, CallFunc_GetVectorValue_ReturnValue) == 0x000008, "Member 'BP_StarSeaDust_C_BP_UpdateActorLocationOnCurve::CallFunc_GetVectorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_UpdateActorLocationOnCurve, CallFunc_TransformLocation_ReturnValue) == 0x000020, "Member 'BP_StarSeaDust_C_BP_UpdateActorLocationOnCurve::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_UpdateActorLocationOnCurve, CallFunc_Add_VectorVector_ReturnValue) == 0x000038, "Member 'BP_StarSeaDust_C_BP_UpdateActorLocationOnCurve::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_UpdateActorLocationOnCurve, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000050, "Member 'BP_StarSeaDust_C_BP_UpdateActorLocationOnCurve::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_UpdateActorLocationOnCurve, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000148, "Member 'BP_StarSeaDust_C_BP_UpdateActorLocationOnCurve::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_UpdateActorLocationOnCurve, CallFunc_GetVectorValue_InTime_ImplicitCast) == 0x00014C, "Member 'BP_StarSeaDust_C_BP_UpdateActorLocationOnCurve::CallFunc_GetVectorValue_InTime_ImplicitCast' has a wrong offset!");

// Function BP_StarSeaDust.BP_StarSeaDust_C.BP_UpdateLocation
// 0x0240 (0x0240 - 0x0000)
struct BP_StarSeaDust_C_BP_UpdateLocation final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetLocalPlayerPawn_LocalPlayerPawn;       // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetLocalPlayerPawn_LocalPlayerPawn_1;     // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0140(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StarSeaDust_C_BP_UpdateLocation) == 0x000008, "Wrong alignment on BP_StarSeaDust_C_BP_UpdateLocation");
static_assert(sizeof(BP_StarSeaDust_C_BP_UpdateLocation) == 0x000240, "Wrong size on BP_StarSeaDust_C_BP_UpdateLocation");
static_assert(offsetof(BP_StarSeaDust_C_BP_UpdateLocation, DeltaTime) == 0x000000, "Member 'BP_StarSeaDust_C_BP_UpdateLocation::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_UpdateLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_StarSeaDust_C_BP_UpdateLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_UpdateLocation, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_StarSeaDust_C_BP_UpdateLocation::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_UpdateLocation, CallFunc_VSize_ReturnValue) == 0x000028, "Member 'BP_StarSeaDust_C_BP_UpdateLocation::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_UpdateLocation, CallFunc_Normal_ReturnValue) == 0x000030, "Member 'BP_StarSeaDust_C_BP_UpdateLocation::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_UpdateLocation, CallFunc_FMin_ReturnValue) == 0x000048, "Member 'BP_StarSeaDust_C_BP_UpdateLocation::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_UpdateLocation, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000050, "Member 'BP_StarSeaDust_C_BP_UpdateLocation::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_UpdateLocation, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000068, "Member 'BP_StarSeaDust_C_BP_UpdateLocation::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_UpdateLocation, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000070, "Member 'BP_StarSeaDust_C_BP_UpdateLocation::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_UpdateLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000088, "Member 'BP_StarSeaDust_C_BP_UpdateLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_UpdateLocation, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000A0, "Member 'BP_StarSeaDust_C_BP_UpdateLocation::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_UpdateLocation, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0000B8, "Member 'BP_StarSeaDust_C_BP_UpdateLocation::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_UpdateLocation, CallFunc_GetLocalPlayerPawn_LocalPlayerPawn) == 0x0000D0, "Member 'BP_StarSeaDust_C_BP_UpdateLocation::CallFunc_GetLocalPlayerPawn_LocalPlayerPawn' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_UpdateLocation, CallFunc_GetLocalPlayerPawn_LocalPlayerPawn_1) == 0x0000D8, "Member 'BP_StarSeaDust_C_BP_UpdateLocation::CallFunc_GetLocalPlayerPawn_LocalPlayerPawn_1' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_UpdateLocation, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x0000E0, "Member 'BP_StarSeaDust_C_BP_UpdateLocation::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_UpdateLocation, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x0000F8, "Member 'BP_StarSeaDust_C_BP_UpdateLocation::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_UpdateLocation, CallFunc_FindLookAtRotation_ReturnValue) == 0x000110, "Member 'BP_StarSeaDust_C_BP_UpdateLocation::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_UpdateLocation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000128, "Member 'BP_StarSeaDust_C_BP_UpdateLocation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_UpdateLocation, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000140, "Member 'BP_StarSeaDust_C_BP_UpdateLocation::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_UpdateLocation, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x000238, "Member 'BP_StarSeaDust_C_BP_UpdateLocation::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");

// Function BP_StarSeaDust.BP_StarSeaDust_C.BP_UpdateMesh
// 0x0008 (0x0008 - 0x0000)
struct BP_StarSeaDust_C_BP_UpdateMesh final
{
public:
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_2;              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StarSeaDust_C_BP_UpdateMesh) == 0x000004, "Wrong alignment on BP_StarSeaDust_C_BP_UpdateMesh");
static_assert(sizeof(BP_StarSeaDust_C_BP_UpdateMesh) == 0x000008, "Wrong size on BP_StarSeaDust_C_BP_UpdateMesh");
static_assert(offsetof(BP_StarSeaDust_C_BP_UpdateMesh, CallFunc_SetStaticMesh_ReturnValue) == 0x000000, "Member 'BP_StarSeaDust_C_BP_UpdateMesh::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_UpdateMesh, CallFunc_SetStaticMesh_ReturnValue_1) == 0x000001, "Member 'BP_StarSeaDust_C_BP_UpdateMesh::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_UpdateMesh, CallFunc_SetStaticMesh_ReturnValue_2) == 0x000002, "Member 'BP_StarSeaDust_C_BP_UpdateMesh::CallFunc_SetStaticMesh_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_UpdateMesh, K2Node_SwitchEnum_CmpSuccess) == 0x000003, "Member 'BP_StarSeaDust_C_BP_UpdateMesh::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_UpdateMesh, CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast) == 0x000004, "Member 'BP_StarSeaDust_C_BP_UpdateMesh::CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast' has a wrong offset!");

// Function BP_StarSeaDust.BP_StarSeaDust_C.BP_UpdateMeshAndRotation
// 0x000C (0x000C - 0x0000)
struct BP_StarSeaDust_C_BP_UpdateMeshAndRotation final
{
public:
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_2;              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StarSeaDust_C_BP_UpdateMeshAndRotation) == 0x000004, "Wrong alignment on BP_StarSeaDust_C_BP_UpdateMeshAndRotation");
static_assert(sizeof(BP_StarSeaDust_C_BP_UpdateMeshAndRotation) == 0x00000C, "Wrong size on BP_StarSeaDust_C_BP_UpdateMeshAndRotation");
static_assert(offsetof(BP_StarSeaDust_C_BP_UpdateMeshAndRotation, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000000, "Member 'BP_StarSeaDust_C_BP_UpdateMeshAndRotation::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_UpdateMeshAndRotation, CallFunc_SetStaticMesh_ReturnValue) == 0x000001, "Member 'BP_StarSeaDust_C_BP_UpdateMeshAndRotation::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_UpdateMeshAndRotation, CallFunc_SetStaticMesh_ReturnValue_1) == 0x000002, "Member 'BP_StarSeaDust_C_BP_UpdateMeshAndRotation::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_UpdateMeshAndRotation, CallFunc_SetStaticMesh_ReturnValue_2) == 0x000003, "Member 'BP_StarSeaDust_C_BP_UpdateMeshAndRotation::CallFunc_SetStaticMesh_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_UpdateMeshAndRotation, K2Node_SwitchEnum_CmpSuccess) == 0x000004, "Member 'BP_StarSeaDust_C_BP_UpdateMeshAndRotation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_BP_UpdateMeshAndRotation, CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast) == 0x000008, "Member 'BP_StarSeaDust_C_BP_UpdateMeshAndRotation::CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast' has a wrong offset!");

// Function BP_StarSeaDust.BP_StarSeaDust_C.ExecuteUbergraph_BP_StarSeaDust
// 0x02C8 (0x02C8 - 0x0000)
struct BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bServer;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsArriveAtPlayer_isArrive;             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_InteractionProcess                          K2Node_ComponentBoundEvent_Process;                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         K2Node_ComponentBoundEvent_InteractMasterNetID;    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_InteractMasterActor;    // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_IsPressBtnInteraction;  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_ComponentBoundEvent_InteractedActor;        // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_InterAction_State_C*                K2Node_ComponentBoundEvent_InterAction_State;      // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFSM_Transition                               CallFunc_SetStateByStateID_Transition;             // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerControllingRole_ControllingRole; // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetCurrentStateID_ReturnValue;            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63[0x5];                                       // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      K2Node_ComponentBoundEvent_PSystem;                // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerControllingRole_ControllingRole_1; // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0090(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_MakeLiteralBool_ReturnValue;              // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerControllingRole_ControllingRole_2; // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0198(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B5[0x3];                                      // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x01B8(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B2[0x6];                                      // 0x02B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_DeltaSeconds_ImplicitCast;      // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust) == 0x000008, "Wrong alignment on BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust");
static_assert(sizeof(BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust) == 0x0002C8, "Wrong size on BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust");
static_assert(offsetof(BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust, EntryPoint) == 0x000000, "Member 'BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust, Temp_bool_Variable) == 0x000004, "Member 'BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust, K2Node_Event_bServer) == 0x00000C, "Member 'BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust::K2Node_Event_bServer' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust, CallFunc_BP_IsArriveAtPlayer_isArrive) == 0x00000D, "Member 'BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust::CallFunc_BP_IsArriveAtPlayer_isArrive' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust, CallFunc_K2_SetTimer_ReturnValue) == 0x000018, "Member 'BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000020, "Member 'BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust, K2Node_ComponentBoundEvent_Process) == 0x000021, "Member 'BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust::K2Node_ComponentBoundEvent_Process' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust, K2Node_ComponentBoundEvent_InteractMasterNetID) == 0x000028, "Member 'BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust::K2Node_ComponentBoundEvent_InteractMasterNetID' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust, K2Node_ComponentBoundEvent_InteractMasterActor) == 0x000030, "Member 'BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust::K2Node_ComponentBoundEvent_InteractMasterActor' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust, K2Node_ComponentBoundEvent_IsPressBtnInteraction) == 0x000038, "Member 'BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust::K2Node_ComponentBoundEvent_IsPressBtnInteraction' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust, K2Node_ComponentBoundEvent_InteractedActor) == 0x000040, "Member 'BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust::K2Node_ComponentBoundEvent_InteractedActor' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust, K2Node_ComponentBoundEvent_InterAction_State) == 0x000048, "Member 'BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust::K2Node_ComponentBoundEvent_InterAction_State' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust, K2Node_SwitchEnum_CmpSuccess) == 0x000050, "Member 'BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust, CallFunc_MakeLiteralByte_ReturnValue) == 0x000051, "Member 'BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust, CallFunc_SetStateByStateID_Transition) == 0x000052, "Member 'BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust::CallFunc_SetStateByStateID_Transition' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust, CallFunc_GetPlayerControllingRole_ControllingRole) == 0x000058, "Member 'BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust::CallFunc_GetPlayerControllingRole_ControllingRole' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust, CallFunc_GetCurrentStateID_ReturnValue) == 0x000060, "Member 'BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust::CallFunc_GetCurrentStateID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust, CallFunc_GetValidValue_ReturnValue) == 0x000061, "Member 'BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust, K2Node_SwitchEnum_CmpSuccess_1) == 0x000062, "Member 'BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust, K2Node_ComponentBoundEvent_PSystem) == 0x000068, "Member 'BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust::K2Node_ComponentBoundEvent_PSystem' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust, CallFunc_GetPlayerControllingRole_ControllingRole_1) == 0x000070, "Member 'BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust::CallFunc_GetPlayerControllingRole_ControllingRole_1' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000078, "Member 'BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000090, "Member 'BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust, CallFunc_MakeLiteralBool_ReturnValue) == 0x000188, "Member 'BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust::CallFunc_MakeLiteralBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust, CallFunc_GetPlayerControllingRole_ControllingRole_2) == 0x000190, "Member 'BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust::CallFunc_GetPlayerControllingRole_ControllingRole_2' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000198, "Member 'BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust, K2Node_ComponentBoundEvent_OtherActor) == 0x0001A0, "Member 'BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust, K2Node_ComponentBoundEvent_OtherComp) == 0x0001A8, "Member 'BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0001B0, "Member 'BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust, K2Node_ComponentBoundEvent_bFromSweep) == 0x0001B4, "Member 'BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust, K2Node_ComponentBoundEvent_SweepResult) == 0x0001B8, "Member 'BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0002B0, "Member 'BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0002B1, "Member 'BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust, K2Node_VariableSet_DeltaSeconds_ImplicitCast) == 0x0002B8, "Member 'BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust::K2Node_VariableSet_DeltaSeconds_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x0002C0, "Member 'BP_StarSeaDust_C_ExecuteUbergraph_BP_StarSeaDust::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");

// Function BP_StarSeaDust.BP_StarSeaDust_C.RandomRotAndType
// 0x0058 (0x0058 - 0x0000)
struct BP_StarSeaDust_C_RandomRotAndType final
{
public:
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStarSeaDust_Type                             CallFunc_Array_Random_OutItem;                     // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloat_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StarSeaDust_C_RandomRotAndType) == 0x000008, "Wrong alignment on BP_StarSeaDust_C_RandomRotAndType");
static_assert(sizeof(BP_StarSeaDust_C_RandomRotAndType) == 0x000058, "Wrong size on BP_StarSeaDust_C_RandomRotAndType");
static_assert(offsetof(BP_StarSeaDust_C_RandomRotAndType, CallFunc_MakeLiteralInt_ReturnValue) == 0x000000, "Member 'BP_StarSeaDust_C_RandomRotAndType::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_RandomRotAndType, Temp_int_Variable) == 0x000004, "Member 'BP_StarSeaDust_C_RandomRotAndType::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_RandomRotAndType, Temp_int_Variable_1) == 0x000008, "Member 'BP_StarSeaDust_C_RandomRotAndType::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_RandomRotAndType, CallFunc_Conv_IntToByte_ReturnValue) == 0x00000C, "Member 'BP_StarSeaDust_C_RandomRotAndType::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_RandomRotAndType, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_StarSeaDust_C_RandomRotAndType::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_RandomRotAndType, CallFunc_GetValidValue_ReturnValue) == 0x000014, "Member 'BP_StarSeaDust_C_RandomRotAndType::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_RandomRotAndType, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000015, "Member 'BP_StarSeaDust_C_RandomRotAndType::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_RandomRotAndType, CallFunc_Less_IntInt_ReturnValue) == 0x000016, "Member 'BP_StarSeaDust_C_RandomRotAndType::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_RandomRotAndType, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x000017, "Member 'BP_StarSeaDust_C_RandomRotAndType::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_RandomRotAndType, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000018, "Member 'BP_StarSeaDust_C_RandomRotAndType::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_RandomRotAndType, CallFunc_Array_Random_OutItem) == 0x00001C, "Member 'BP_StarSeaDust_C_RandomRotAndType::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_RandomRotAndType, CallFunc_Array_Random_OutIndex) == 0x000020, "Member 'BP_StarSeaDust_C_RandomRotAndType::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_RandomRotAndType, CallFunc_Array_AddUnique_ReturnValue) == 0x000024, "Member 'BP_StarSeaDust_C_RandomRotAndType::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_RandomRotAndType, CallFunc_RandomFloat_ReturnValue) == 0x000028, "Member 'BP_StarSeaDust_C_RandomRotAndType::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_RandomRotAndType, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_StarSeaDust_C_RandomRotAndType::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_RandomRotAndType, CallFunc_MakeRotator_ReturnValue) == 0x000038, "Member 'BP_StarSeaDust_C_RandomRotAndType::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StarSeaDust_C_RandomRotAndType, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000050, "Member 'BP_StarSeaDust_C_RandomRotAndType::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function BP_StarSeaDust.BP_StarSeaDust_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_StarSeaDust_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds_0;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StarSeaDust_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_StarSeaDust_C_ReceiveTick");
static_assert(sizeof(BP_StarSeaDust_C_ReceiveTick) == 0x000004, "Wrong size on BP_StarSeaDust_C_ReceiveTick");
static_assert(offsetof(BP_StarSeaDust_C_ReceiveTick, DeltaSeconds_0) == 0x000000, "Member 'BP_StarSeaDust_C_ReceiveTick::DeltaSeconds_0' has a wrong offset!");

// Function BP_StarSeaDust.BP_StarSeaDust_C.ServerInit
// 0x0001 (0x0001 - 0x0000)
struct BP_StarSeaDust_C_ServerInit final
{
public:
	bool                                          bServer;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StarSeaDust_C_ServerInit) == 0x000001, "Wrong alignment on BP_StarSeaDust_C_ServerInit");
static_assert(sizeof(BP_StarSeaDust_C_ServerInit) == 0x000001, "Wrong size on BP_StarSeaDust_C_ServerInit");
static_assert(offsetof(BP_StarSeaDust_C_ServerInit, bServer) == 0x000000, "Member 'BP_StarSeaDust_C_ServerInit::bServer' has a wrong offset!");

// Function BP_StarSeaDust.BP_StarSeaDust_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct BP_StarSeaDust_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_StarSeaDust_C_GetModuleName) == 0x000008, "Wrong alignment on BP_StarSeaDust_C_GetModuleName");
static_assert(sizeof(BP_StarSeaDust_C_GetModuleName) == 0x000010, "Wrong size on BP_StarSeaDust_C_GetModuleName");
static_assert(offsetof(BP_StarSeaDust_C_GetModuleName, ReturnValue) == 0x000000, "Member 'BP_StarSeaDust_C_GetModuleName::ReturnValue' has a wrong offset!");

}

