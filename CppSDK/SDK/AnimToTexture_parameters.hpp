#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimToTexture

#include "Basic.hpp"

#include "AnimToTexture_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function AnimToTexture.AnimToTextureDataAsset.BP_GetBonePositionTexture
// 0x0008 (0x0008 - 0x0000)
struct AnimToTextureDataAsset_BP_GetBonePositionTexture final
{
public:
	class UTexture2D*                             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AnimToTextureDataAsset_BP_GetBonePositionTexture) == 0x000008, "Wrong alignment on AnimToTextureDataAsset_BP_GetBonePositionTexture");
static_assert(sizeof(AnimToTextureDataAsset_BP_GetBonePositionTexture) == 0x000008, "Wrong size on AnimToTextureDataAsset_BP_GetBonePositionTexture");
static_assert(offsetof(AnimToTextureDataAsset_BP_GetBonePositionTexture, ReturnValue) == 0x000000, "Member 'AnimToTextureDataAsset_BP_GetBonePositionTexture::ReturnValue' has a wrong offset!");

// Function AnimToTexture.AnimToTextureDataAsset.BP_GetBoneRotationTexture
// 0x0008 (0x0008 - 0x0000)
struct AnimToTextureDataAsset_BP_GetBoneRotationTexture final
{
public:
	class UTexture2D*                             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AnimToTextureDataAsset_BP_GetBoneRotationTexture) == 0x000008, "Wrong alignment on AnimToTextureDataAsset_BP_GetBoneRotationTexture");
static_assert(sizeof(AnimToTextureDataAsset_BP_GetBoneRotationTexture) == 0x000008, "Wrong size on AnimToTextureDataAsset_BP_GetBoneRotationTexture");
static_assert(offsetof(AnimToTextureDataAsset_BP_GetBoneRotationTexture, ReturnValue) == 0x000000, "Member 'AnimToTextureDataAsset_BP_GetBoneRotationTexture::ReturnValue' has a wrong offset!");

// Function AnimToTexture.AnimToTextureDataAsset.BP_GetBoneWeightTexture
// 0x0008 (0x0008 - 0x0000)
struct AnimToTextureDataAsset_BP_GetBoneWeightTexture final
{
public:
	class UTexture2D*                             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AnimToTextureDataAsset_BP_GetBoneWeightTexture) == 0x000008, "Wrong alignment on AnimToTextureDataAsset_BP_GetBoneWeightTexture");
static_assert(sizeof(AnimToTextureDataAsset_BP_GetBoneWeightTexture) == 0x000008, "Wrong size on AnimToTextureDataAsset_BP_GetBoneWeightTexture");
static_assert(offsetof(AnimToTextureDataAsset_BP_GetBoneWeightTexture, ReturnValue) == 0x000000, "Member 'AnimToTextureDataAsset_BP_GetBoneWeightTexture::ReturnValue' has a wrong offset!");

// Function AnimToTexture.AnimToTextureDataAsset.BP_GetSkeletalMesh
// 0x0008 (0x0008 - 0x0000)
struct AnimToTextureDataAsset_BP_GetSkeletalMesh final
{
public:
	class USkeletalMesh*                          ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AnimToTextureDataAsset_BP_GetSkeletalMesh) == 0x000008, "Wrong alignment on AnimToTextureDataAsset_BP_GetSkeletalMesh");
static_assert(sizeof(AnimToTextureDataAsset_BP_GetSkeletalMesh) == 0x000008, "Wrong size on AnimToTextureDataAsset_BP_GetSkeletalMesh");
static_assert(offsetof(AnimToTextureDataAsset_BP_GetSkeletalMesh, ReturnValue) == 0x000000, "Member 'AnimToTextureDataAsset_BP_GetSkeletalMesh::ReturnValue' has a wrong offset!");

// Function AnimToTexture.AnimToTextureDataAsset.BP_GetStaticMesh
// 0x0008 (0x0008 - 0x0000)
struct AnimToTextureDataAsset_BP_GetStaticMesh final
{
public:
	class UStaticMesh*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AnimToTextureDataAsset_BP_GetStaticMesh) == 0x000008, "Wrong alignment on AnimToTextureDataAsset_BP_GetStaticMesh");
static_assert(sizeof(AnimToTextureDataAsset_BP_GetStaticMesh) == 0x000008, "Wrong size on AnimToTextureDataAsset_BP_GetStaticMesh");
static_assert(offsetof(AnimToTextureDataAsset_BP_GetStaticMesh, ReturnValue) == 0x000000, "Member 'AnimToTextureDataAsset_BP_GetStaticMesh::ReturnValue' has a wrong offset!");

// Function AnimToTexture.AnimToTextureDataAsset.GetIndexFromAnimSequence
// 0x0010 (0x0010 - 0x0000)
struct AnimToTextureDataAsset_GetIndexFromAnimSequence final
{
public:
	const class UAnimSequence*                    Sequence;                                          // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AnimToTextureDataAsset_GetIndexFromAnimSequence) == 0x000008, "Wrong alignment on AnimToTextureDataAsset_GetIndexFromAnimSequence");
static_assert(sizeof(AnimToTextureDataAsset_GetIndexFromAnimSequence) == 0x000010, "Wrong size on AnimToTextureDataAsset_GetIndexFromAnimSequence");
static_assert(offsetof(AnimToTextureDataAsset_GetIndexFromAnimSequence, Sequence) == 0x000000, "Member 'AnimToTextureDataAsset_GetIndexFromAnimSequence::Sequence' has a wrong offset!");
static_assert(offsetof(AnimToTextureDataAsset_GetIndexFromAnimSequence, ReturnValue) == 0x000008, "Member 'AnimToTextureDataAsset_GetIndexFromAnimSequence::ReturnValue' has a wrong offset!");

// Function AnimToTexture.AnimToTextureInstancePlaybackLibrary.BatchUpdateInstancesAutoPlayData
// 0x0030 (0x0030 - 0x0000)
struct AnimToTextureInstancePlaybackLibrary_BatchUpdateInstancesAutoPlayData final
{
public:
	class UInstancedStaticMeshComponent*          InstancedMeshComponent;                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAnimToTextureAutoPlayData>     AutoPlayData;                                      // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<struct FMatrix>                        Transforms;                                        // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bMarkRenderStateDirty;                             // 0x0028(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0029(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AnimToTextureInstancePlaybackLibrary_BatchUpdateInstancesAutoPlayData) == 0x000008, "Wrong alignment on AnimToTextureInstancePlaybackLibrary_BatchUpdateInstancesAutoPlayData");
static_assert(sizeof(AnimToTextureInstancePlaybackLibrary_BatchUpdateInstancesAutoPlayData) == 0x000030, "Wrong size on AnimToTextureInstancePlaybackLibrary_BatchUpdateInstancesAutoPlayData");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_BatchUpdateInstancesAutoPlayData, InstancedMeshComponent) == 0x000000, "Member 'AnimToTextureInstancePlaybackLibrary_BatchUpdateInstancesAutoPlayData::InstancedMeshComponent' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_BatchUpdateInstancesAutoPlayData, AutoPlayData) == 0x000008, "Member 'AnimToTextureInstancePlaybackLibrary_BatchUpdateInstancesAutoPlayData::AutoPlayData' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_BatchUpdateInstancesAutoPlayData, Transforms) == 0x000018, "Member 'AnimToTextureInstancePlaybackLibrary_BatchUpdateInstancesAutoPlayData::Transforms' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_BatchUpdateInstancesAutoPlayData, bMarkRenderStateDirty) == 0x000028, "Member 'AnimToTextureInstancePlaybackLibrary_BatchUpdateInstancesAutoPlayData::bMarkRenderStateDirty' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_BatchUpdateInstancesAutoPlayData, ReturnValue) == 0x000029, "Member 'AnimToTextureInstancePlaybackLibrary_BatchUpdateInstancesAutoPlayData::ReturnValue' has a wrong offset!");

// Function AnimToTexture.AnimToTextureInstancePlaybackLibrary.BatchUpdateInstancesFrameData
// 0x0030 (0x0030 - 0x0000)
struct AnimToTextureInstancePlaybackLibrary_BatchUpdateInstancesFrameData final
{
public:
	class UInstancedStaticMeshComponent*          InstancedMeshComponent;                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAnimToTextureFrameData>        FrameData;                                         // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<struct FMatrix>                        Transforms;                                        // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bMarkRenderStateDirty;                             // 0x0028(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0029(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AnimToTextureInstancePlaybackLibrary_BatchUpdateInstancesFrameData) == 0x000008, "Wrong alignment on AnimToTextureInstancePlaybackLibrary_BatchUpdateInstancesFrameData");
static_assert(sizeof(AnimToTextureInstancePlaybackLibrary_BatchUpdateInstancesFrameData) == 0x000030, "Wrong size on AnimToTextureInstancePlaybackLibrary_BatchUpdateInstancesFrameData");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_BatchUpdateInstancesFrameData, InstancedMeshComponent) == 0x000000, "Member 'AnimToTextureInstancePlaybackLibrary_BatchUpdateInstancesFrameData::InstancedMeshComponent' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_BatchUpdateInstancesFrameData, FrameData) == 0x000008, "Member 'AnimToTextureInstancePlaybackLibrary_BatchUpdateInstancesFrameData::FrameData' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_BatchUpdateInstancesFrameData, Transforms) == 0x000018, "Member 'AnimToTextureInstancePlaybackLibrary_BatchUpdateInstancesFrameData::Transforms' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_BatchUpdateInstancesFrameData, bMarkRenderStateDirty) == 0x000028, "Member 'AnimToTextureInstancePlaybackLibrary_BatchUpdateInstancesFrameData::bMarkRenderStateDirty' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_BatchUpdateInstancesFrameData, ReturnValue) == 0x000029, "Member 'AnimToTextureInstancePlaybackLibrary_BatchUpdateInstancesFrameData::ReturnValue' has a wrong offset!");

// Function AnimToTexture.AnimToTextureInstancePlaybackLibrary.GetAutoPlayDataFromDataAsset
// 0x0028 (0x0028 - 0x0000)
struct AnimToTextureInstancePlaybackLibrary_GetAutoPlayDataFromDataAsset final
{
public:
	const class UAnimToTextureDataAsset*          DataAsset;                                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AnimationIndex;                                    // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAnimToTextureAutoPlayData             AutoPlayData;                                      // 0x000C(0x0010)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	float                                         TimeOffset;                                        // 0x001C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PlayRate;                                          // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0024(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AnimToTextureInstancePlaybackLibrary_GetAutoPlayDataFromDataAsset) == 0x000008, "Wrong alignment on AnimToTextureInstancePlaybackLibrary_GetAutoPlayDataFromDataAsset");
static_assert(sizeof(AnimToTextureInstancePlaybackLibrary_GetAutoPlayDataFromDataAsset) == 0x000028, "Wrong size on AnimToTextureInstancePlaybackLibrary_GetAutoPlayDataFromDataAsset");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_GetAutoPlayDataFromDataAsset, DataAsset) == 0x000000, "Member 'AnimToTextureInstancePlaybackLibrary_GetAutoPlayDataFromDataAsset::DataAsset' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_GetAutoPlayDataFromDataAsset, AnimationIndex) == 0x000008, "Member 'AnimToTextureInstancePlaybackLibrary_GetAutoPlayDataFromDataAsset::AnimationIndex' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_GetAutoPlayDataFromDataAsset, AutoPlayData) == 0x00000C, "Member 'AnimToTextureInstancePlaybackLibrary_GetAutoPlayDataFromDataAsset::AutoPlayData' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_GetAutoPlayDataFromDataAsset, TimeOffset) == 0x00001C, "Member 'AnimToTextureInstancePlaybackLibrary_GetAutoPlayDataFromDataAsset::TimeOffset' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_GetAutoPlayDataFromDataAsset, PlayRate) == 0x000020, "Member 'AnimToTextureInstancePlaybackLibrary_GetAutoPlayDataFromDataAsset::PlayRate' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_GetAutoPlayDataFromDataAsset, ReturnValue) == 0x000024, "Member 'AnimToTextureInstancePlaybackLibrary_GetAutoPlayDataFromDataAsset::ReturnValue' has a wrong offset!");

// Function AnimToTexture.AnimToTextureInstancePlaybackLibrary.GetFrame
// 0x001C (0x001C - 0x0000)
struct AnimToTextureInstancePlaybackLibrary_GetFrame final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartFrame;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EndFrame;                                          // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeOffset;                                        // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PlayRate;                                          // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SampleRate;                                        // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AnimToTextureInstancePlaybackLibrary_GetFrame) == 0x000004, "Wrong alignment on AnimToTextureInstancePlaybackLibrary_GetFrame");
static_assert(sizeof(AnimToTextureInstancePlaybackLibrary_GetFrame) == 0x00001C, "Wrong size on AnimToTextureInstancePlaybackLibrary_GetFrame");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_GetFrame, Time) == 0x000000, "Member 'AnimToTextureInstancePlaybackLibrary_GetFrame::Time' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_GetFrame, StartFrame) == 0x000004, "Member 'AnimToTextureInstancePlaybackLibrary_GetFrame::StartFrame' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_GetFrame, EndFrame) == 0x000008, "Member 'AnimToTextureInstancePlaybackLibrary_GetFrame::EndFrame' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_GetFrame, TimeOffset) == 0x00000C, "Member 'AnimToTextureInstancePlaybackLibrary_GetFrame::TimeOffset' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_GetFrame, PlayRate) == 0x000010, "Member 'AnimToTextureInstancePlaybackLibrary_GetFrame::PlayRate' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_GetFrame, SampleRate) == 0x000014, "Member 'AnimToTextureInstancePlaybackLibrary_GetFrame::SampleRate' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_GetFrame, ReturnValue) == 0x000018, "Member 'AnimToTextureInstancePlaybackLibrary_GetFrame::ReturnValue' has a wrong offset!");

// Function AnimToTexture.AnimToTextureInstancePlaybackLibrary.GetFrameDataFromDataAsset
// 0x0028 (0x0028 - 0x0000)
struct AnimToTextureInstancePlaybackLibrary_GetFrameDataFromDataAsset final
{
public:
	const class UAnimToTextureDataAsset*          DataAsset;                                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AnimationIndex;                                    // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Time;                                              // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAnimToTextureFrameData                AutoPlayData;                                      // 0x0010(0x0008)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	float                                         TimeOffset;                                        // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PlayRate;                                          // 0x001C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AnimToTextureInstancePlaybackLibrary_GetFrameDataFromDataAsset) == 0x000008, "Wrong alignment on AnimToTextureInstancePlaybackLibrary_GetFrameDataFromDataAsset");
static_assert(sizeof(AnimToTextureInstancePlaybackLibrary_GetFrameDataFromDataAsset) == 0x000028, "Wrong size on AnimToTextureInstancePlaybackLibrary_GetFrameDataFromDataAsset");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_GetFrameDataFromDataAsset, DataAsset) == 0x000000, "Member 'AnimToTextureInstancePlaybackLibrary_GetFrameDataFromDataAsset::DataAsset' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_GetFrameDataFromDataAsset, AnimationIndex) == 0x000008, "Member 'AnimToTextureInstancePlaybackLibrary_GetFrameDataFromDataAsset::AnimationIndex' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_GetFrameDataFromDataAsset, Time) == 0x00000C, "Member 'AnimToTextureInstancePlaybackLibrary_GetFrameDataFromDataAsset::Time' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_GetFrameDataFromDataAsset, AutoPlayData) == 0x000010, "Member 'AnimToTextureInstancePlaybackLibrary_GetFrameDataFromDataAsset::AutoPlayData' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_GetFrameDataFromDataAsset, TimeOffset) == 0x000018, "Member 'AnimToTextureInstancePlaybackLibrary_GetFrameDataFromDataAsset::TimeOffset' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_GetFrameDataFromDataAsset, PlayRate) == 0x00001C, "Member 'AnimToTextureInstancePlaybackLibrary_GetFrameDataFromDataAsset::PlayRate' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_GetFrameDataFromDataAsset, ReturnValue) == 0x000020, "Member 'AnimToTextureInstancePlaybackLibrary_GetFrameDataFromDataAsset::ReturnValue' has a wrong offset!");

// Function AnimToTexture.AnimToTextureInstancePlaybackLibrary.SetupInstancedMeshComponent
// 0x0010 (0x0010 - 0x0000)
struct AnimToTextureInstancePlaybackLibrary_SetupInstancedMeshComponent final
{
public:
	class UInstancedStaticMeshComponent*          InstancedMeshComponent;                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumInstances;                                      // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoPlay;                                         // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000D(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AnimToTextureInstancePlaybackLibrary_SetupInstancedMeshComponent) == 0x000008, "Wrong alignment on AnimToTextureInstancePlaybackLibrary_SetupInstancedMeshComponent");
static_assert(sizeof(AnimToTextureInstancePlaybackLibrary_SetupInstancedMeshComponent) == 0x000010, "Wrong size on AnimToTextureInstancePlaybackLibrary_SetupInstancedMeshComponent");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_SetupInstancedMeshComponent, InstancedMeshComponent) == 0x000000, "Member 'AnimToTextureInstancePlaybackLibrary_SetupInstancedMeshComponent::InstancedMeshComponent' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_SetupInstancedMeshComponent, NumInstances) == 0x000008, "Member 'AnimToTextureInstancePlaybackLibrary_SetupInstancedMeshComponent::NumInstances' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_SetupInstancedMeshComponent, bAutoPlay) == 0x00000C, "Member 'AnimToTextureInstancePlaybackLibrary_SetupInstancedMeshComponent::bAutoPlay' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_SetupInstancedMeshComponent, ReturnValue) == 0x00000D, "Member 'AnimToTextureInstancePlaybackLibrary_SetupInstancedMeshComponent::ReturnValue' has a wrong offset!");

// Function AnimToTexture.AnimToTextureInstancePlaybackLibrary.UpdateInstanceAutoPlayData
// 0x0020 (0x0020 - 0x0000)
struct AnimToTextureInstancePlaybackLibrary_UpdateInstanceAutoPlayData final
{
public:
	class UInstancedStaticMeshComponent*          InstancedMeshComponent;                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InstanceIndex;                                     // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAnimToTextureAutoPlayData             AutoPlayData;                                      // 0x000C(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bMarkRenderStateDirty;                             // 0x001C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x001D(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AnimToTextureInstancePlaybackLibrary_UpdateInstanceAutoPlayData) == 0x000008, "Wrong alignment on AnimToTextureInstancePlaybackLibrary_UpdateInstanceAutoPlayData");
static_assert(sizeof(AnimToTextureInstancePlaybackLibrary_UpdateInstanceAutoPlayData) == 0x000020, "Wrong size on AnimToTextureInstancePlaybackLibrary_UpdateInstanceAutoPlayData");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_UpdateInstanceAutoPlayData, InstancedMeshComponent) == 0x000000, "Member 'AnimToTextureInstancePlaybackLibrary_UpdateInstanceAutoPlayData::InstancedMeshComponent' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_UpdateInstanceAutoPlayData, InstanceIndex) == 0x000008, "Member 'AnimToTextureInstancePlaybackLibrary_UpdateInstanceAutoPlayData::InstanceIndex' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_UpdateInstanceAutoPlayData, AutoPlayData) == 0x00000C, "Member 'AnimToTextureInstancePlaybackLibrary_UpdateInstanceAutoPlayData::AutoPlayData' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_UpdateInstanceAutoPlayData, bMarkRenderStateDirty) == 0x00001C, "Member 'AnimToTextureInstancePlaybackLibrary_UpdateInstanceAutoPlayData::bMarkRenderStateDirty' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_UpdateInstanceAutoPlayData, ReturnValue) == 0x00001D, "Member 'AnimToTextureInstancePlaybackLibrary_UpdateInstanceAutoPlayData::ReturnValue' has a wrong offset!");

// Function AnimToTexture.AnimToTextureInstancePlaybackLibrary.UpdateInstanceFrameData
// 0x0018 (0x0018 - 0x0000)
struct AnimToTextureInstancePlaybackLibrary_UpdateInstanceFrameData final
{
public:
	class UInstancedStaticMeshComponent*          InstancedMeshComponent;                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InstanceIndex;                                     // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAnimToTextureFrameData                FrameData;                                         // 0x000C(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bMarkRenderStateDirty;                             // 0x0014(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0015(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AnimToTextureInstancePlaybackLibrary_UpdateInstanceFrameData) == 0x000008, "Wrong alignment on AnimToTextureInstancePlaybackLibrary_UpdateInstanceFrameData");
static_assert(sizeof(AnimToTextureInstancePlaybackLibrary_UpdateInstanceFrameData) == 0x000018, "Wrong size on AnimToTextureInstancePlaybackLibrary_UpdateInstanceFrameData");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_UpdateInstanceFrameData, InstancedMeshComponent) == 0x000000, "Member 'AnimToTextureInstancePlaybackLibrary_UpdateInstanceFrameData::InstancedMeshComponent' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_UpdateInstanceFrameData, InstanceIndex) == 0x000008, "Member 'AnimToTextureInstancePlaybackLibrary_UpdateInstanceFrameData::InstanceIndex' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_UpdateInstanceFrameData, FrameData) == 0x00000C, "Member 'AnimToTextureInstancePlaybackLibrary_UpdateInstanceFrameData::FrameData' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_UpdateInstanceFrameData, bMarkRenderStateDirty) == 0x000014, "Member 'AnimToTextureInstancePlaybackLibrary_UpdateInstanceFrameData::bMarkRenderStateDirty' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_UpdateInstanceFrameData, ReturnValue) == 0x000015, "Member 'AnimToTextureInstancePlaybackLibrary_UpdateInstanceFrameData::ReturnValue' has a wrong offset!");

}

