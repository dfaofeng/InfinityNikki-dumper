#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MainActivity

#include "Basic.hpp"


namespace SDK::Params
{

// Function WBP_MainActivity.WBP_MainActivity_C.ExecuteUbergraph_WBP_MainActivity
// 0x0020 (0x0020 - 0x0000)
struct WBP_MainActivity_C_ExecuteUbergraph_WBP_MainActivity final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LoadLevelInstance_bOutSuccess;            // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelStreamingDynamic*                 CallFunc_LoadLevelInstance_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainActivity_C_ExecuteUbergraph_WBP_MainActivity) == 0x000008, "Wrong alignment on WBP_MainActivity_C_ExecuteUbergraph_WBP_MainActivity");
static_assert(sizeof(WBP_MainActivity_C_ExecuteUbergraph_WBP_MainActivity) == 0x000020, "Wrong size on WBP_MainActivity_C_ExecuteUbergraph_WBP_MainActivity");
static_assert(offsetof(WBP_MainActivity_C_ExecuteUbergraph_WBP_MainActivity, EntryPoint) == 0x000000, "Member 'WBP_MainActivity_C_ExecuteUbergraph_WBP_MainActivity::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_MainActivity_C_ExecuteUbergraph_WBP_MainActivity, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_MainActivity_C_ExecuteUbergraph_WBP_MainActivity::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_MainActivity_C_ExecuteUbergraph_WBP_MainActivity, K2Node_Event_IsDesignTime) == 0x000014, "Member 'WBP_MainActivity_C_ExecuteUbergraph_WBP_MainActivity::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_MainActivity_C_ExecuteUbergraph_WBP_MainActivity, Temp_bool_Has_Been_Initd_Variable) == 0x000015, "Member 'WBP_MainActivity_C_ExecuteUbergraph_WBP_MainActivity::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainActivity_C_ExecuteUbergraph_WBP_MainActivity, Temp_bool_IsClosed_Variable) == 0x000016, "Member 'WBP_MainActivity_C_ExecuteUbergraph_WBP_MainActivity::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainActivity_C_ExecuteUbergraph_WBP_MainActivity, CallFunc_LoadLevelInstance_bOutSuccess) == 0x000017, "Member 'WBP_MainActivity_C_ExecuteUbergraph_WBP_MainActivity::CallFunc_LoadLevelInstance_bOutSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MainActivity_C_ExecuteUbergraph_WBP_MainActivity, CallFunc_LoadLevelInstance_ReturnValue) == 0x000018, "Member 'WBP_MainActivity_C_ExecuteUbergraph_WBP_MainActivity::CallFunc_LoadLevelInstance_ReturnValue' has a wrong offset!");

// Function WBP_MainActivity.WBP_MainActivity_C.loadDesignDrawingWorld
// 0x0010 (0x0010 - 0x0000)
struct WBP_MainActivity_C_loadDesignDrawingWorld final
{
public:
	class FString                                 LevelPath;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainActivity_C_loadDesignDrawingWorld) == 0x000008, "Wrong alignment on WBP_MainActivity_C_loadDesignDrawingWorld");
static_assert(sizeof(WBP_MainActivity_C_loadDesignDrawingWorld) == 0x000010, "Wrong size on WBP_MainActivity_C_loadDesignDrawingWorld");
static_assert(offsetof(WBP_MainActivity_C_loadDesignDrawingWorld, LevelPath) == 0x000000, "Member 'WBP_MainActivity_C_loadDesignDrawingWorld::LevelPath' has a wrong offset!");

// Function WBP_MainActivity.WBP_MainActivity_C.OnItemClicked
// 0x0008 (0x0008 - 0x0000)
struct WBP_MainActivity_C_OnItemClicked final
{
public:
	class UBP_MainHudObtainedContainerData_C*     Data;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainActivity_C_OnItemClicked) == 0x000008, "Wrong alignment on WBP_MainActivity_C_OnItemClicked");
static_assert(sizeof(WBP_MainActivity_C_OnItemClicked) == 0x000008, "Wrong size on WBP_MainActivity_C_OnItemClicked");
static_assert(offsetof(WBP_MainActivity_C_OnItemClicked, Data) == 0x000000, "Member 'WBP_MainActivity_C_OnItemClicked::Data' has a wrong offset!");

// Function WBP_MainActivity.WBP_MainActivity_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_MainActivity_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainActivity_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_MainActivity_C_PreConstruct");
static_assert(sizeof(WBP_MainActivity_C_PreConstruct) == 0x000001, "Wrong size on WBP_MainActivity_C_PreConstruct");
static_assert(offsetof(WBP_MainActivity_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_MainActivity_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_MainActivity.WBP_MainActivity_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct WBP_MainActivity_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainActivity_C_GetModuleName) == 0x000008, "Wrong alignment on WBP_MainActivity_C_GetModuleName");
static_assert(sizeof(WBP_MainActivity_C_GetModuleName) == 0x000010, "Wrong size on WBP_MainActivity_C_GetModuleName");
static_assert(offsetof(WBP_MainActivity_C_GetModuleName, ReturnValue) == 0x000000, "Member 'WBP_MainActivity_C_GetModuleName::ReturnValue' has a wrong offset!");

}

