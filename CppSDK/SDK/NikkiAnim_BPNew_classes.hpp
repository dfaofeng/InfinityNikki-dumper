#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NikkiAnim_BPNew

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "NikkiAnim_BPNew_structs.hpp"
#include "Engine_structs.hpp"
#include "FEmotionPartBlendWeight_structs.hpp"
#include "NikkiPhysics_structs.hpp"
#include "X6Game_structs.hpp"
#include "X6Game_classes.hpp"
#include "X6Animation_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ControlRig_structs.hpp"
#include "EPlayerGamePlayMovementMode_structs.hpp"
#include "EPlayerMovementScenarios_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass NikkiAnim_BPNew.NikkiAnim_BPNew_C
// 0xCE80 (0xD300 - 0x0480)
class UNikkiAnim_BPNew_C final : public UX6NikkiMainAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0480(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct NikkiAnim_BPNew::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;              // 0x0488(0x0048)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Tag;                        // 0x04D0(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x04D8(0x0008)()
	struct FAnimSubsystemInstance_NodeRelevancy   AnimBlueprintExtension_NodeRelevancy;              // 0x04E0(0x00A8)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0588(0x0008)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_12;                  // 0x0590(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_24;                             // 0x0648(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_11;                  // 0x0668(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_23;                             // 0x0720(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_10;                  // 0x0740(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_22;                             // 0x07F8(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_9;                   // 0x0818(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_21;                             // 0x08D0(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_8;                   // 0x08F0(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_20;                             // 0x09A8(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_19;                             // 0x09C8(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_7;                   // 0x09E8(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_18;                             // 0x0AA0(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_17;                             // 0x0AC0(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_16;                             // 0x0AE0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x0B00(0x0048)()
	struct FAnimNode_Root                         AnimGraphNode_Root_15;                             // 0x0B48(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_6;                   // 0x0B68(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_14;                             // 0x0C20(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_5;                   // 0x0C40(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_13;                             // 0x0CF8(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_4;                   // 0x0D18(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_12;                             // 0x0DD0(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_11;                             // 0x0DF0(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_10;                             // 0x0E10(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_9;                              // 0x0E30(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x0E50(0x0048)()
	struct FAnimNode_Root                         AnimGraphNode_Root_8;                              // 0x0E98(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x0EB8(0x0048)()
	struct FAnimNode_Root                         AnimGraphNode_Root_7;                              // 0x0F00(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x0F20(0x0048)()
	struct FAnimNode_Root                         AnimGraphNode_Root_6;                              // 0x0F68(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0F88(0x0048)()
	struct FAnimNode_Root                         AnimGraphNode_Root_5;                              // 0x0FD0(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_3;                   // 0x0FF0(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_4;                              // 0x10A8(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_2;                   // 0x10C8(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_3;                              // 0x1180(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x11A0(0x0048)()
	struct FAnimNode_Root                         AnimGraphNode_Root_2;                              // 0x11E8(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_1;                   // 0x1208(0x00B8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_40;                   // 0x12C0(0x0080)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_39;                   // 0x1340(0x0080)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x13C0(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_86;                    // 0x13E0(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_38;                   // 0x1408(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_85;                    // 0x1488(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_84;                    // 0x14B0(0x0028)()
	struct FAnimNode_MakeDynamicAdditive          AnimGraphNode_MakeDynamicAdditive_1;               // 0x14D8(0x0038)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_37;                   // 0x1510(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_83;                    // 0x1590(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_82;                    // 0x15B8(0x0028)()
	struct FAnimNode_MakeDynamicAdditive          AnimGraphNode_MakeDynamicAdditive;                 // 0x15E0(0x0038)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_36;                   // 0x1618(0x0080)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_16;                 // 0x1698(0x00F0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_81;                    // 0x1788(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_80;                    // 0x17B0(0x0028)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive_4;            // 0x17D8(0x00D0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_35;                   // 0x18A8(0x0080)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_34;                   // 0x1928(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_79;                    // 0x19A8(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_4;                     // 0x19D0(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_78;                    // 0x1A98(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_33;                   // 0x1AC0(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_77;                    // 0x1B40(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_76;                    // 0x1B68(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_15;                 // 0x1B90(0x00F0)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_3;                     // 0x1C80(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_75;                    // 0x1D48(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_74;                    // 0x1D70(0x0028)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive_3;            // 0x1D98(0x00D0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_73;                    // 0x1E68(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_32;                   // 0x1E90(0x0080)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_14;                 // 0x1F10(0x00F0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_72;                    // 0x2000(0x0028)()
	struct FAnimNode_X6PoseFilter                 AnimGraphNode_X6PoseFilter_1;                      // 0x2028(0x0038)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x2060(0x00B8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_71;                    // 0x2118(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_70;                    // 0x2140(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_69;                    // 0x2168(0x0028)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive_2;            // 0x2190(0x00D0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_31;                   // 0x2260(0x0080)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive_1;            // 0x22E0(0x00D0)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_7;                       // 0x23B0(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_68;                    // 0x2478(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_67;                    // 0x24A0(0x0028)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_6;                       // 0x24C8(0x00C8)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_13;                 // 0x2590(0x00F0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_66;                    // 0x2680(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_65;                    // 0x26A8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_64;                    // 0x26D0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_63;                    // 0x26F8(0x0028)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive;              // 0x2720(0x00D0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_30;                   // 0x27F0(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_62;                    // 0x2870(0x0028)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_5;                       // 0x2898(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_61;                    // 0x2960(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_60;                    // 0x2988(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_12;                 // 0x29B0(0x00F0)()
	struct FAnimNode_X6PoseFilter                 AnimGraphNode_X6PoseFilter;                        // 0x2AA0(0x0038)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_13;                             // 0x2AD8(0x0048)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x2B20(0x0020)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_11;                 // 0x2B40(0x00F0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_59;                    // 0x2C30(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_29;                   // 0x2C58(0x0080)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_12;                             // 0x2CD8(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_10;                 // 0x2D20(0x00F0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_11;                             // 0x2E10(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_28;                   // 0x2E58(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_58;                    // 0x2ED8(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_10;                             // 0x2F00(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_9;                              // 0x2F48(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x2F90(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_27;                   // 0x2FD8(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_13;                  // 0x3058(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_26;                   // 0x30A0(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_12;                  // 0x3120(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_57;                    // 0x3168(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_25;                   // 0x3190(0x0080)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_15;                  // 0x3210(0x00C8)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_14;                  // 0x32D8(0x00C8)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_13;                  // 0x33A0(0x00C8)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_12;                  // 0x3468(0x00C8)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_11;                  // 0x3530(0x00C8)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_10;                  // 0x35F8(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_56;                    // 0x36C0(0x0028)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_9;                   // 0x36E8(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_55;                    // 0x37B0(0x0028)()
	struct FAnimNode_ControlRig                   AnimGraphNode_ControlRig_9;                        // 0x37D8(0x04D0)(ContainsInstancedReference)
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_24;                   // 0x3CA8(0x0080)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_23;                   // 0x3D28(0x0080)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x3DA8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x3DD0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x3DF8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x3E20(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x3E48(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x3E70(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_54;                    // 0x3E98(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x3EC0(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_53;                    // 0x3EE0(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x3F08(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x3F28(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_22;                   // 0x3FF0(0x0080)()
	struct FAnimNode_Inertialization              AnimGraphNode_Inertialization;                     // 0x4070(0x0450)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_8;                              // 0x44C0(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_2;                     // 0x4508(0x00C8)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose_3;                      // 0x45D0(0x0010)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_52;                    // 0x45E0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_51;                    // 0x4608(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_21;                   // 0x4630(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_50;                    // 0x46B0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_49;                    // 0x46D8(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_20;                   // 0x4700(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_48;                    // 0x4780(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x47A8(0x0048)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_8;                   // 0x47F0(0x00C8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_11;                  // 0x48B8(0x0048)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_7;                   // 0x4900(0x00C8)()
	struct FAnimNode_ControlRig                   AnimGraphNode_ControlRig_8;                        // 0x49C8(0x04D0)(ContainsInstancedReference)
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_4;                       // 0x4E98(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_19;                   // 0x4F60(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_47;                    // 0x4FE0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_46;                    // 0x5008(0x0028)()
	struct FAnimNode_ControlRig                   AnimGraphNode_ControlRig_7;                        // 0x5030(0x04D0)(ContainsInstancedReference)
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_18;                   // 0x5500(0x0080)()
	struct FAnimNode_ControlRig                   AnimGraphNode_ControlRig_6;                        // 0x5580(0x04D0)(ContainsInstancedReference)
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_45;                    // 0x5A50(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_10;                  // 0x5A78(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_44;                    // 0x5AC0(0x0028)()
	struct FAnimNode_ControlRig                   AnimGraphNode_ControlRig_5;                        // 0x5AE8(0x04D0)(ContainsInstancedReference)
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x5FB8(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x5FD8(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_17;                   // 0x60A0(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_43;                    // 0x6120(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_7;                              // 0x6148(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_9;                  // 0x6190(0x00F0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_16;                   // 0x6280(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_42;                    // 0x6300(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_41;                    // 0x6328(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_15;                   // 0x6350(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_40;                    // 0x63D0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_39;                    // 0x63F8(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_9;                   // 0x6420(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_38;                    // 0x6468(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_14;                   // 0x6490(0x0080)()
	struct FAnimNode_ControlRig                   AnimGraphNode_ControlRig_4;                        // 0x6510(0x04D0)(ContainsInstancedReference)
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_6;                   // 0x69E0(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_37;                    // 0x6AA8(0x0028)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve;                         // 0x6AD0(0x0120)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_8;                  // 0x6BF0(0x00F0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_6;                              // 0x6CE0(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x6D28(0x00C8)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose_2;                      // 0x6DF0(0x0010)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose;                        // 0x6E00(0x0010)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_36;                    // 0x6E10(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_35;                    // 0x6E38(0x0028)()
	struct FAnimNode_ControlRig                   AnimGraphNode_ControlRig_3;                        // 0x6E60(0x04D0)(ContainsInstancedReference)
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_7;                  // 0x7330(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_5;                          // 0x7420(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_4;                          // 0x7510(0x00F0)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2;             // 0x7600(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2;             // 0x7620(0x0020)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_8;                   // 0x7640(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_13;                   // 0x7688(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_34;                    // 0x7708(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_33;                    // 0x7730(0x0028)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x7758(0x0078)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_6;                  // 0x77D0(0x00F0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_7;                   // 0x78C0(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_12;                   // 0x7908(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_32;                    // 0x7988(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_31;                    // 0x79B0(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_6;                   // 0x79D8(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_30;                    // 0x7A20(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_5;                  // 0x7A48(0x00F0)()
	struct FAnimNode_ControlRig                   AnimGraphNode_ControlRig_2;                        // 0x7B38(0x04D0)(ContainsInstancedReference)
	struct FAnimNode_ControlRig                   AnimGraphNode_ControlRig_1;                        // 0x8008(0x04D0)(ContainsInstancedReference)
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_5;                   // 0x84D8(0x00C8)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_4;                   // 0x85A0(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_11;                   // 0x8668(0x0080)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_3;                   // 0x86E8(0x00C8)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_2;                   // 0x87B0(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_10;                   // 0x8878(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_29;                    // 0x88F8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_28;                    // 0x8920(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x8948(0x0048)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_1;                   // 0x8990(0x00C8)()
	struct FAnimNode_PoseBlendNode                AnimGraphNode_PoseBlendNode;                       // 0x8A58(0x00D8)()
	struct FAnimNode_X6OverlayBlend               AnimGraphNode_X6OverlayBlend_5;                    // 0x8B30(0x0258)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_5;                              // 0x8D88(0x0048)()
	struct FAnimNode_X6OverlayBlend               AnimGraphNode_X6OverlayBlend_4;                    // 0x8DD0(0x0258)()
	uint8                                         Pad_9028[0x8];                                     // 0x9028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_PoseMatchRecorder            AnimGraphNode_PoseMatchRecorder;                   // 0x9030(0x0150)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_5;                   // 0x9180(0x0048)()
	struct FAnimNode_X6AnimContext                AnimGraphNode_X6AnimContext;                       // 0x91C8(0x00C0)()
	struct FAnimNode_LinkedAnimGraph              AnimGraphNode_LinkedAnimGraph;                     // 0x9288(0x00B8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_27;                    // 0x9340(0x0028)()
	struct FAnimNode_X6StylizedOverlayBlend       AnimGraphNode_X6OverlayBlend_Stylized_1;           // 0x9368(0x0268)()
	struct FAnimNode_X6StateMachineMarker         AnimGraphNode_X6StateMachineMarker;                // 0x95D0(0x0090)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_9;                    // 0x9660(0x0080)()
	struct FAnimNode_X6StylizedOverlayBlend       AnimGraphNode_X6OverlayBlend_Stylized;             // 0x96E0(0x0268)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_26;                    // 0x9948(0x0028)()
	struct FAnimNode_X6OverlayBlend               AnimGraphNode_X6OverlayBlend_3;                    // 0x9970(0x0258)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_25;                    // 0x9BC8(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_4;                   // 0x9BF0(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_4;                              // 0x9C38(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_8;                    // 0x9C80(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_24;                    // 0x9D00(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_23;                    // 0x9D28(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_4;                  // 0x9D50(0x00F0)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x9E40(0x00C8)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_3;                  // 0x9F08(0x00F0)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose_1;                      // 0x9FF8(0x0010)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_2;                  // 0xA008(0x00F0)()
	uint8                                         Pad_A0F8[0x8];                                     // 0xA0F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK;                           // 0xA100(0x0280)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0xA380(0x0020)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_3;                          // 0xA3A0(0x00F0)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0xA490(0x0020)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_7;                    // 0xA4B0(0x0080)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_3;                              // 0xA530(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_22;                    // 0xA578(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_21;                    // 0xA5A0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_20;                    // 0xA5C8(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_6;                    // 0xA5F0(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_19;                    // 0xA670(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_18;                    // 0xA698(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0xA6C0(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0xA708(0x0048)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose;                        // 0xA750(0x0010)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_5;                    // 0xA760(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_17;                    // 0xA7E0(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_4;                    // 0xA808(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_16;                    // 0xA888(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0xA8B0(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0xA8F8(0x00F0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_15;                    // 0xA9E8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_14;                    // 0xAA10(0x0028)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_2;                          // 0xAA38(0x00F0)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0xAB28(0x0020)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_1;                          // 0xAB48(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone;                            // 0xAC38(0x00F0)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0xAD28(0x0020)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0xAD48(0x00F0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_13;                    // 0xAE38(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_12;                    // 0xAE60(0x0028)()
	struct FAnimNode_X6OverlayBlend               AnimGraphNode_X6OverlayBlend_2;                    // 0xAE88(0x0258)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_11;                    // 0xB0E0(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0xB108(0x0048)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer;                     // 0xB150(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_3;                    // 0xB218(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_10;                    // 0xB298(0x0028)()
	struct FAnimNode_X6OverlayBlend               AnimGraphNode_X6OverlayBlend_1;                    // 0xB2C0(0x0258)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0xB518(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_9;                     // 0xB560(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0xB588(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0xB5D0(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_8;                     // 0xB650(0x0028)()
	struct FAnimNode_X6OverlayBlend               AnimGraphNode_X6OverlayBlend;                      // 0xB678(0x0258)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0xB8D0(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0xB918(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7;                     // 0xB960(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0xB988(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0xB9D0(0x0028)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_3;                       // 0xB9F8(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0xBAC0(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0xBB40(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0xBB68(0x0028)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_2;                       // 0xBB90(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0xBC58(0x0028)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_1;                       // 0xBC80(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0xBD48(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0xBD70(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0xBDF0(0x0028)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend;                         // 0xBE18(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0xBEE0(0x0028)()
	struct FAnimNode_ControlRig                   AnimGraphNode_ControlRig;                          // 0xBF08(0x04D0)(ContainsInstancedReference)
	bool                                          K2Node_PropertyAccess_9;                           // 0xC3D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_8;                           // 0xC3D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_7;                           // 0xC3DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_6;                           // 0xC3DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C3DC[0x4];                                     // 0xC3DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               __CustomProperty_LHandIKRotation_FD6CE1A041C9D5E5C2C5CE8FFA07334E; // 0xC3E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                __CustomProperty_LHandIKPosition_FD6CE1A041C9D5E5C2C5CE8FFA07334E; // 0xC3F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               __CustomProperty_RHandIKRotation_FD6CE1A041C9D5E5C2C5CE8FFA07334E; // 0xC410(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                __CustomProperty_RHandIKPosition_FD6CE1A041C9D5E5C2C5CE8FFA07334E; // 0xC428(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __CustomProperty_bEnableRHandIKPosition_FD6CE1A041C9D5E5C2C5CE8FFA07334E; // 0xC440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __CustomProperty_bEnableRHandIKRotation_FD6CE1A041C9D5E5C2C5CE8FFA07334E; // 0xC441(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __CustomProperty_bEnableLHandIKPosition_FD6CE1A041C9D5E5C2C5CE8FFA07334E; // 0xC442(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __CustomProperty_bEnableLHandIKRotation_FD6CE1A041C9D5E5C2C5CE8FFA07334E; // 0xC443(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __CustomProperty_bEnableHandIK_FD6CE1A041C9D5E5C2C5CE8FFA07334E; // 0xC444(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C445[0x3];                                     // 0xC445(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               __CustomProperty_LHandIKRotation_A83644064C79A024AB8C7D8A45082E28; // 0xC448(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                __CustomProperty_LHandIKPosition_A83644064C79A024AB8C7D8A45082E28; // 0xC460(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               __CustomProperty_RHandIKRotation_A83644064C79A024AB8C7D8A45082E28; // 0xC478(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                __CustomProperty_RHandIKPosition_A83644064C79A024AB8C7D8A45082E28; // 0xC490(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __CustomProperty_bEnableRHandIKPosition_A83644064C79A024AB8C7D8A45082E28; // 0xC4A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __CustomProperty_bEnableRHandIKRotation_A83644064C79A024AB8C7D8A45082E28; // 0xC4A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __CustomProperty_bEnableLHandIKPosition_A83644064C79A024AB8C7D8A45082E28; // 0xC4AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __CustomProperty_bEnableLHandIKRotation_A83644064C79A024AB8C7D8A45082E28; // 0xC4AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __CustomProperty_bEnableHandIK_A83644064C79A024AB8C7D8A45082E28; // 0xC4AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4AD[0x3];                                     // 0xC4AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFootIKFeatureTargetDataV2             K2Node_PropertyAccess_5;                           // 0xC4B0(0x00A0)(NoDestructor)
	bool                                          __CustomProperty_bForceInitFootPlacementIKParam_8087071C41AA2CE0A35BC08B4DC64E49; // 0xC550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C551[0x7];                                     // 0xC551(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        __CustomProperty_SlopeAngle_8087071C41AA2CE0A35BC08B4DC64E49; // 0xC558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __CustomProperty_RightFootRotationWeight_8087071C41AA2CE0A35BC08B4DC64E49; // 0xC560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __CustomProperty_LeftFootRotationWeight_8087071C41AA2CE0A35BC08B4DC64E49; // 0xC568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __CustomProperty_RightFootTranslationWeight_8087071C41AA2CE0A35BC08B4DC64E49; // 0xC570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __CustomProperty_LeftFootTranslationWeight_8087071C41AA2CE0A35BC08B4DC64E49; // 0xC578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __CustomProperty_PelvisWeight_8087071C41AA2CE0A35BC08B4DC64E49; // 0xC580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                __CustomProperty_PelvisOffset_8087071C41AA2CE0A35BC08B4DC64E49; // 0xC588(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               __CustomProperty_AnkleRightOffsetRotation_8087071C41AA2CE0A35BC08B4DC64E49; // 0xC5A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               __CustomProperty_AnkleLeftOffsetRotation_8087071C41AA2CE0A35BC08B4DC64E49; // 0xC5B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                __CustomProperty_AnkleRightOffsetLocation_8087071C41AA2CE0A35BC08B4DC64E49; // 0xC5D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                __CustomProperty_AnkleLeftOffsetLocation_8087071C41AA2CE0A35BC08B4DC64E49; // 0xC5E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFootIKFeatureTargetDataV2             K2Node_PropertyAccess_4;                           // 0xC600(0x00A0)(NoDestructor)
	bool                                          K2Node_PropertyAccess_3;                           // 0xC6A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C6A1[0x7];                                     // 0xC6A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_PropertyAccess_2;                           // 0xC6A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_1;                           // 0xC6B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess;                             // 0xC6B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C6B2[0x6];                                     // 0xC6B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        __CustomProperty_HeelHeight_BB387FD742265B193B50A88A47DACE2E; // 0xC6B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __CustomProperty_bEnableRightHandIK_BB387FD742265B193B50A88A47DACE2E; // 0xC6C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __CustomProperty_bEnableLeftHandIK_BB387FD742265B193B50A88A47DACE2E; // 0xC6C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C6C2[0x6];                                     // 0xC6C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        __CustomProperty_HighHeelToeHeight_14776D5546D97ADC8A72698C13E7F85B; // 0xC6C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __CustomProperty_ToesRotaionYawOffset_14776D5546D97ADC8A72698C13E7F85B; // 0xC6D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __CustomProperty_AnkleRotaionYawOffset_14776D5546D97ADC8A72698C13E7F85B; // 0xC6D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __CustomProperty_HighHeelHeight_14776D5546D97ADC8A72698C13E7F85B; // 0xC6E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                __CustomProperty_Clothes_Thickness_WristR_14776D5546D97ADC8A72698C13E7F85B; // 0xC6E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                __CustomProperty_Clothes_Thickness_WristL_14776D5546D97ADC8A72698C13E7F85B; // 0xC700(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                __CustomProperty_Clothes_Thickness_RootM_14776D5546D97ADC8A72698C13E7F85B; // 0xC718(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __CustomProperty_Curve_IKAlpha_14776D5546D97ADC8A72698C13E7F85B; // 0xC730(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C738[0x8];                                     // 0xC738(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             __CustomProperty_AnkleRightCompTransform_14776D5546D97ADC8A72698C13E7F85B; // 0xC740(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             __CustomProperty_AnkleLeftCompTransform_14776D5546D97ADC8A72698C13E7F85B; // 0xC7A0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             __CustomProperty_RootMCompTransform_14776D5546D97ADC8A72698C13E7F85B; // 0xC800(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __CustomProperty_RootM_Alpha_14776D5546D97ADC8A72698C13E7F85B; // 0xC860(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __CustomProperty_bForceInitFootPlacementIKParam_9C3CB6104FEEB92C4E76B49E09A60DE1; // 0xC868(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C869[0x7];                                     // 0xC869(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                __CustomProperty_Velocity_9C3CB6104FEEB92C4E76B49E09A60DE1; // 0xC870(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __CustomProperty_SlopeAngle_9C3CB6104FEEB92C4E76B49E09A60DE1; // 0xC888(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __CustomProperty_RightFootRotationWeight_9C3CB6104FEEB92C4E76B49E09A60DE1; // 0xC890(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __CustomProperty_LeftFootRotationWeight_9C3CB6104FEEB92C4E76B49E09A60DE1; // 0xC898(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __CustomProperty_RightFootTranslationWeight_9C3CB6104FEEB92C4E76B49E09A60DE1; // 0xC8A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __CustomProperty_LeftFootTranslationWeight_9C3CB6104FEEB92C4E76B49E09A60DE1; // 0xC8A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __CustomProperty_PelvisWeight_9C3CB6104FEEB92C4E76B49E09A60DE1; // 0xC8B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                __CustomProperty_PelvisOffset_9C3CB6104FEEB92C4E76B49E09A60DE1; // 0xC8B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               __CustomProperty_AnkleRightOffsetRotation_9C3CB6104FEEB92C4E76B49E09A60DE1; // 0xC8D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               __CustomProperty_AnkleLeftOffsetRotation_9C3CB6104FEEB92C4E76B49E09A60DE1; // 0xC8E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                __CustomProperty_AnkleRightOffsetLocation_9C3CB6104FEEB92C4E76B49E09A60DE1; // 0xC900(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                __CustomProperty_AnkleLeftOffsetLocation_9C3CB6104FEEB92C4E76B49E09A60DE1; // 0xC918(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __CustomProperty_HighHeel_Ankle_Angle_362258464F4E0990712B6C89FDD06BD0; // 0xC930(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C938[0x8];                                     // 0xC938(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  __CustomProperty_FootRotationR_362258464F4E0990712B6C89FDD06BD0; // 0xC940(0x0020)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  __CustomProperty_FootRotationL_362258464F4E0990712B6C89FDD06BD0; // 0xC960(0x0020)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __CustomProperty_FootAlphaR_362258464F4E0990712B6C89FDD06BD0; // 0xC980(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __CustomProperty_FootAlphaL_362258464F4E0990712B6C89FDD06BD0; // 0xC988(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                __CustomProperty_FootPositionR_362258464F4E0990712B6C89FDD06BD0; // 0xC990(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                __CustomProperty_FootPostionL_362258464F4E0990712B6C89FDD06BD0; // 0xC9A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               __CustomProperty_Lock_R_Hand_IK_Rotation_4CAA693F4D458C4D1C9B5B9AE3D03FA9; // 0xC9C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          __CustomProperty_isLock_R_Hand_IK_Rotation_4CAA693F4D458C4D1C9B5B9AE3D03FA9; // 0xC9D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9D9[0x7];                                     // 0xC9D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                __CustomProperty_Lock_R_Hand_IK_Position_4CAA693F4D458C4D1C9B5B9AE3D03FA9; // 0xC9E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __CustomProperty_isLock_R_Hand_IK_Position_4CAA693F4D458C4D1C9B5B9AE3D03FA9; // 0xC9F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9F9[0x7];                                     // 0xC9F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               __CustomProperty_Lock_L_Hand_IK_Rotation_4CAA693F4D458C4D1C9B5B9AE3D03FA9; // 0xCA00(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          __CustomProperty_isLock_L_Hand_IK_Rotation_4CAA693F4D458C4D1C9B5B9AE3D03FA9; // 0xCA18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA19[0x7];                                     // 0xCA19(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                __CustomProperty_Lock_L_Hand_IK_Position_4CAA693F4D458C4D1C9B5B9AE3D03FA9; // 0xCA20(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __CustomProperty_isLock_L_Hand_IK_Position_4CAA693F4D458C4D1C9B5B9AE3D03FA9; // 0xCA38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA39[0x7];                                     // 0xCA39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               __CustomProperty_Offset_R_Hand_IK_Rotation_4CAA693F4D458C4D1C9B5B9AE3D03FA9; // 0xCA40(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          __CustomProperty_isOffset_R_Hand_IK_Rotation_4CAA693F4D458C4D1C9B5B9AE3D03FA9; // 0xCA58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA59[0x7];                                     // 0xCA59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               __CustomProperty_Offset_L_Hand_IK_Rotation_4CAA693F4D458C4D1C9B5B9AE3D03FA9; // 0xCA60(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          __CustomProperty_isOffset_L_Hand_IK_Rotation_4CAA693F4D458C4D1C9B5B9AE3D03FA9; // 0xCA78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA79[0x7];                                     // 0xCA79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                __CustomProperty_Offset_R_Hand_IK_Position_4CAA693F4D458C4D1C9B5B9AE3D03FA9; // 0xCA80(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __CustomProperty_isOffset_R_Hand_IK_Position_4CAA693F4D458C4D1C9B5B9AE3D03FA9; // 0xCA98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA99[0x7];                                     // 0xCA99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                __CustomProperty_Offset_L_Hand_IK_Position_4CAA693F4D458C4D1C9B5B9AE3D03FA9; // 0xCAA0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __CustomProperty_isOffset_L_Hand_IK_Position_4CAA693F4D458C4D1C9B5B9AE3D03FA9; // 0xCAB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CAB9[0x7];                                     // 0xCAB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerAnimStatesComponent_C*        PlayerAnimStatesComponent;                         // 0xCAC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLogicInStateInAir;                               // 0xCAC8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CAC9[0x7];                                     // 0xCAC9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        HighHeelHeight;                                    // 0xCAD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HighHeelToeAngle;                                  // 0xCAD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HighHeelAnkleAngle;                                // 0xCAE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PelvisOffset;                                      // 0xCAE8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PelvisAlpha;                                       // 0xCB00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableFootIK;                                      // 0xCB08(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CB09[0x7];                                     // 0xCB09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CurrentFloorAngle;                                 // 0xCB10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_EquipmentAdditiveEnabled;                       // 0xCB18(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_BehaviorAdditiveEnabled;                        // 0xCB19(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CB1A[0x6];                                     // 0xCB1A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UX6OverlayData*                         EnvResponseOverlayData;                            // 0xCB20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	EPlayerGamePlayMovementMode                   BP_CurrentPlayerGameplayMode;                      // 0xCB28(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerMovementScenarios                      MovementScenario;                                  // 0xCB29(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CB2A[0x6];                                     // 0xCB2A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Offset_L_Hand_IK_Position;                         // 0xCB30(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Offset_L_Hand_IK_Rotation;                         // 0xCB48(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                Offset_R_Hand_IK_Position;                         // 0xCB60(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Offset_R_Hand_IK_Rotation;                         // 0xCB78(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                Lock_L_Hand_IK_Position;                           // 0xCB90(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Lock_L_Hand_IK_Rotation;                           // 0xCBA8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                Lock_R_Hand_IK_Position;                           // 0xCBC0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Lock_R_Hand_IK_Rotation;                           // 0xCBD8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Is_Offset_L_Hand_IK_Position;                      // 0xCBF0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Offset_R_Hand_IK_Position;                      // 0xCBF1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Offset_L_Hand_IK_Rotation;                      // 0xCBF2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Offset_R_Hand_IK_Rotation;                      // 0xCBF3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Lock_L_Hand_IK_Position;                        // 0xCBF4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Lock_L_Hand_IK_Rotation;                        // 0xCBF5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Lock_R_Hand_IK_Position;                        // 0xCBF6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Lock_R_Hand_IK_Rotation;                        // 0xCBF7(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FinalFootPlacementIKRigAlpha;                      // 0xCBF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BP_EquipmentAdditiveBlendTime;                     // 0xCC00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnableInteractionPerformance;                     // 0xCC08(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC09[0x7];                                     // 0xCC09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        VelocitySize;                                      // 0xCC10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerRegularInAirMovementComp_C*   PlayerRegularInAirMovementComp;                    // 0xCC18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ERegularFloatingJumpStage                     CurrentFloatingJumpStage;                          // 0xCC20(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC21[0x7];                                     // 0xCC21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFEmotionPartBlendWeight               EmotionBaseBlendInfo;                              // 0xCC28(0x0040)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFEmotionPartBlendWeight               One9AIBlendInfo;                                   // 0xCC68(0x0040)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFEmotionPartBlendWeight               Five2AIBlendInfo;                                  // 0xCCA8(0x0040)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnableEmotionPerformance;                         // 0xCCE8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasBegunPlay;                                     // 0xCCE9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CCEA[0x6];                                     // 0xCCEA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        HandIKCtrlRigAlpha;                                // 0xCCF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSkipInteractionPerformanceWhenEnable;             // 0xCCF8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_UseFacialAnimFromSpecialFullBody;               // 0xCCF9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CCFA[0x6];                                     // 0xCCFA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SlotName_RootM;                                    // 0xCD00(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	double                                        RootM_Alpha;                                       // 0xCD10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD18[0x8];                                     // 0xCD18(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RootMCompTransform;                                // 0xCD20(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 SlotName_AnkleLeft;                                // 0xCD80(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	struct FTransform                             AnkleLeftCompTransform;                            // 0xCD90(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 SlotName_AnkleRight;                               // 0xCDF0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	struct FTransform                             AnkleRightCompTransform;                           // 0xCE00(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CurveName_AdjustSittingPostureIK_Alpha;            // 0xCE60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AdjustSittingPostureIK_Alpha;                      // 0xCE68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CurveName_AdjustSittingPosture_WristLeftHeight_Alpha; // 0xCE70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CurveName_AdjustSittingPosture_WristRightHeight_Alpha; // 0xCE78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Clothes_Thickness_RootM;                           // 0xCE80(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Clothes_Thickness_WristL;                          // 0xCE98(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Clothes_Thickness_WristR;                          // 0xCEB0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SKMeshComponent;                                   // 0xCEC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_bEnableInteractionIK;                           // 0xCED0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CED1[0x3];                                     // 0xCED1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentSkirtClothesId;                             // 0xCED4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSet<int32>                                   BlackListClothesId_RootM;                          // 0xCED8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FName                                   BodyAndUpperFaceSlotName;                          // 0xCF28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BodyAndUpperFaceSlotBlendAlpha;                    // 0xCF30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        EyeBlinkWeight;                                    // 0xCF38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSet<int32>                                   BlackListClothesId_Wrist;                          // 0xCF40(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	EControlBoneType                              SitExecuteType;                                    // 0xCF90(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CF91[0x7];                                     // 0xCF91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        FacialSlotBlendAlpha;                              // 0xCF98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               EyeOffsetRotator_ComponentSpace;                   // 0xCFA0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bEnableAimOffsetEyeMotion;                         // 0xCFB8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DynamicSwitch;                                     // 0xCFB9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CFBA[0x6];                                     // 0xCFBA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, double>                     LayedAdditiveCurveMap;                             // 0xCFC0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        LeftArm_Add;                                       // 0xD010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RightArm_Add;                                      // 0xD018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Arm_LS;                                            // 0xD020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelectedMirror;                                   // 0xD028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D029[0x7];                                     // 0xD029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPoseAsset*                             AIFacialPoseAsset;                                 // 0xD030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UX6OverlayData*                         WeaponOverlayData;                                 // 0xD038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	double                                        DialogPerformanceBlendInTime;                      // 0xD040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DialogPerformanceBlendOutTime;                     // 0xD048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFloatSpringState                      SpringState_FootPlacementIKAlpha;                  // 0xD050(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	uint8                                         Pad_D05C[0x4];                                     // 0xD05C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             DT_LocomotionStyleAnims;                           // 0xD060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGameplayTag, class UX6OverlayData*> LocomotionStyleOverlays;                        // 0xD068(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<struct FGameplayTag, class UX6OverlayData*> LocomotionStyleOverlaysBuffer;                  // 0xD0B8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bRequireLocomotionStyleChange;                     // 0xD108(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D109[0x7];                                     // 0xD109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DefaultEmotionRatio;                               // 0xD110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGameplayTag, class UX6OverlayData*> ClothesOverlays;                                // 0xD118(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<struct FGameplayTag, class UX6OverlayData*> ClothesOverlaysBuffer;                          // 0xD168(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bRequireClothesOverlayChange;                      // 0xD1B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1B9[0x7];                                     // 0xD1B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        SpineYaw_Add;                                      // 0xD1C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ClothesFrontThickness_Follow;                      // 0xD1C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ClothesBackThickness_Follow;                       // 0xD1D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ClothesFrontThickness_Splay;                       // 0xD1D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ClothesBackThickness_Splay;                        // 0xD1E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_InPhotograph;                                   // 0xD1E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1E9[0x7];                                     // 0xD1E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UX6OverlayFrameSettings*                WeaponFrameSettings;                               // 0xD1F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UX6OverlayFrameSettings*                PhotoWeaponFrameSettings;                          // 0xD1F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UX6CharacterMovementComponent*          X6CharacterMovementComp;                           // 0xD200(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentFootIKRigAlpha_AnimOnly;                    // 0xD208(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_ForceInitFootPlacementIKParam;                  // 0xD210(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D211[0x7];                                     // 0xD211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SlotName_RelativeRootM;                            // 0xD218(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          BP_UseWeaponAction;                                // 0xD228(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D229[0x7];                                     // 0xD229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UX6OverlayData*                         PhotoOverlayData;                                  // 0xD230(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          BP_UsePhotoOverlay;                                // 0xD238(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D239[0x7];                                     // 0xD239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        SpinePitchRoll_Add;                                // 0xD240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_MirrorWeapon;                                   // 0xD248(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D249[0x7];                                     // 0xD249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           BP_OverlayMontage;                                 // 0xD250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UX6OverlayCustomModeData*               BP_OverlayMontageBlendData;                        // 0xD258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_EnableOverlayMontageBlend;                      // 0xD260(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D261[0x7];                                     // 0xD261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      BP_OverlayMontageBaseAnim;                         // 0xD268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          BP_EmoteEnabled;                                   // 0xD270(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D271[0x7];                                     // 0xD271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UX6OverlayCustomModeData*               BP_EmoteOverlayData;                               // 0xD278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	double                                        HandIKCtrlRigAlphaTarget;                          // 0xD280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_EnableHandControlRig;                           // 0xD288(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_EnableFootControlRig;                           // 0xD289(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D28A[0x6];                                     // 0xD28A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                BikeFootIKPelvisOffset;                            // 0xD290(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BikeFootIKPelvisAlpha;                             // 0xD2A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BikeFootIkLeftFootTranslationAlpha;                // 0xD2B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BikeFootIkRightFootTranslationAlpha;               // 0xD2B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BikeFootIkRightFootRotationAlpha;                  // 0xD2C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BikeFootIkLeftFootRotationAlpha;                   // 0xD2C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BikeAnkleLeftOffsetLoc;                            // 0xD2D0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BikeAnkleRightOffsetLoc;                           // 0xD2E8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimationLayer_BaseMovement(struct FPoseLink* AnimationLayer_BaseMovement_0);
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void AnimLayer_AimOffset(const struct FPoseLink& InPoseForAimOffset, struct FPoseLink* AnimLayer_AimOffset_0);
	void AnimLayer_AttractorBehavior(const struct FPoseLink& InPose_AttractorBehavior, struct FPoseLink* AnimLayer_AttractorBehavior_0);
	void AnimLayer_BehaviorAdditiveMode(const struct FPoseLink& InPoseForPlayerBehavior, struct FPoseLink* AnimLayer_BehaviorAdditiveMode_0);
	void AnimLayer_BehaviorConnectionMode(const struct FPoseLink& InPoseToConnectionMode, struct FPoseLink* AnimLayer_BehaviorConnectionMode_0);
	void AnimLayer_CombatMovement(struct FPoseLink* AnimLayer_CombatMovement_0);
	void AnimLayer_CustomBehavior(const struct FPoseLink& InPose, struct FPoseLink* AnimLayer_CustomBehavior_0);
	void AnimLayer_DialogueBehavior(const struct FPoseLink& InPose_DIalogueBehavior, struct FPoseLink* AnimLayer_DialogueBehavior_0);
	void AnimLayer_EquipmentAdditiveMode(const struct FPoseLink& InPoseForEquipment, struct FPoseLink* AnimLayer_EquipmentAdditiveMode_0);
	void AnimLayer_InteractionPerformanceBehavior(const struct FPoseLink& InPose_InterationPerformance, struct FPoseLink* AnimLayer_InteractionPerformanceBehavior_0);
	void AnimLayer_Jump(struct FPoseLink* AnimLayer_Jump_0);
	void AnimLayer_Land(struct FPoseLink* AnimLayer_Land_0);
	void AnimLayer_MovementDependObject(struct FPoseLink* AnimLayer_MovementDependObject_0);
	void AnimLayer_NPCAdditiveBehavior(const struct FPoseLink& InPose, struct FPoseLink* AnimLayer_NPCAdditiveBehavior_0);
	void AnimLayer_NPCBehavior(const struct FPoseLink& InPose_0, struct FPoseLink* AnimLayer_NPCBehavior_0);
	void AnimLayer_PlayerControllingTool(struct FPoseLink* AnimLayer_PlayerControllingTool_0);
	void AnimLayer_PlayerRegularMovement(struct FPoseLink* AnimLayer_PlayerRegularMovement_0);
	void AnimLayer_SituationFeedbackBehavior(const struct FPoseLink& InPose_SituationFeedback, struct FPoseLink* AnimLayer_SituationFeedbackBehavior_0);
	void AnimLayer_SpecialSurfaceMovement(struct FPoseLink* AnimLayer_SpecialSurfaceMovement_0);
	void AnimLayer_StrafeMovement(struct FPoseLink* AnimLayer_StrafeMovement_0);
	void AnimLayer_UsingCarrierMovement(struct FPoseLink* AnimLayer_UsingCarrierMovement_0);
	void AnimLayer_WhiteBoxMovement(struct FPoseLink* AnimLayer_WhiteBoxMovement_0);
	void BasePoseForAdditive(struct FPoseLink* BasePoseForAdditive_0);
	void BlueprintInitializeAnimation();
	void BlueprintThreadSafeUpdateAnimation(float DeltaTime);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void CanUseDialogPerformance(bool* bRet);
	void ClearInertialization(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_NikkiAnim_BPNew_AnimGraphNode_ApplyAdditive_87BA751C4CCE4377B81862A737A874DE();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_NikkiAnim_BPNew_AnimGraphNode_BlendListByBool_8587D2D849FC2D2419CFF9804FB7C5EB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_NikkiAnim_BPNew_AnimGraphNode_BlendListByBool_8DAD8B654CFDDE311A82E4B118D4EBB6();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_NikkiAnim_BPNew_AnimGraphNode_BlendListByBool_958B29A34796E9E2339AE0935CA4502B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_NikkiAnim_BPNew_AnimGraphNode_BlendListByBool_D97A7EB74CD3FC34EDBDE3953CEB0FC9();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_NikkiAnim_BPNew_AnimGraphNode_ControlRig_8087071C41AA2CE0A35BC08B4DC64E49();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_NikkiAnim_BPNew_AnimGraphNode_ControlRig_9C3CB6104FEEB92C4E76B49E09A60DE1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_NikkiAnim_BPNew_AnimGraphNode_ControlRig_A83644064C79A024AB8C7D8A45082E28();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_NikkiAnim_BPNew_AnimGraphNode_ControlRig_CCCD2EE649B8C431FF0CEDAC50CFFBA6();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_NikkiAnim_BPNew_AnimGraphNode_ControlRig_FD6CE1A041C9D5E5C2C5CE8FFA07334E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_NikkiAnim_BPNew_AnimGraphNode_CopyBone_3A9D3728433A2F6F5B2BEF9F68237E4C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_NikkiAnim_BPNew_AnimGraphNode_LayeredBoneBlend_5C1E8AD0473013418AF9268661312CBC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_NikkiAnim_BPNew_AnimGraphNode_LayeredBoneBlend_8894D2A04873BA05046DBD9E0F8AA51B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_NikkiAnim_BPNew_AnimGraphNode_TransitionResult_439CF46A4C4D9E63AFAB59A14831C75C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_NikkiAnim_BPNew_AnimGraphNode_TransitionResult_849A52BA4003D9B9DFC95FB68DA89C5B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_NikkiAnim_BPNew_AnimGraphNode_TransitionResult_F423384642C3F9B0469FADAFAA10CBBB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_NikkiAnim_BPNew_AnimGraphNode_TwoBoneIK_056C94D84B5CCF6719007DA44630B017();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_NikkiAnim_BPNew_AnimGraphNode_TwoWayBlend_629AD0444AB8D41B95138CA28EA47E16();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_NikkiAnim_BPNew_AnimGraphNode_TwoWayBlend_965D49414562A7A8ACC4939AACEA5488();
	void ExecuteUbergraph_NikkiAnim_BPNew(int32 EntryPoint);
	void GetBlinkValue(double* Blink_L, double* Blink_R);
	bool GetForceInitFootPlacementIKParam();
	void InitDialogueEmotionParams();
	void LayedDynamicAdditive(const struct FPoseLink& MotionPose, const struct FPoseLink& BasePose, struct FPoseLink* LayedDynamicAdditive_0);
	void OnBecomeRelevant_ContrlRig_FootPlacementIK(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void OnClothThicknessDataChanged_Event();
	void OnOverlayBlendBecomeRelevant(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void OnStylizedClothChanged_Event();
	void OnStylizedOverlayBecomeRelevant(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void OnUpperPoseUpdate(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void ResetClothThicknessData();
	void SM_Base_Pose_Update(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void UpdateAdjustSittingPostureState();
	void UpdateBikeFootIKDate();
	void UpdateClothesOverlayConfigs(const TMap<struct FGameplayTag, class UX6OverlayData*>& NewParam);
	void UpdateDefaultEmotionRatio(double DeltaSeconds);
	void UpdateDialogPerformanceBlendTime();
	void UpdateFootPlacementIKAlpha(double DeltaSeconds);
	void UpdateIKDatas(double Delta);
	void UpdateLayeredBlendParam();
	void UpdateSitType();
	void UpdateState();
	void UpdateStylizedClothAnimations();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"NikkiAnim_BPNew_C">();
	}
	static class UNikkiAnim_BPNew_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNikkiAnim_BPNew_C>();
	}
};
static_assert(alignof(UNikkiAnim_BPNew_C) == 0x000010, "Wrong alignment on UNikkiAnim_BPNew_C");
static_assert(sizeof(UNikkiAnim_BPNew_C) == 0x00D300, "Wrong size on UNikkiAnim_BPNew_C");
static_assert(offsetof(UNikkiAnim_BPNew_C, UberGraphFrame) == 0x000480, "Member 'UNikkiAnim_BPNew_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __AnimBlueprintMutables) == 0x000488, "Member 'UNikkiAnim_BPNew_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimBlueprintExtension_Tag) == 0x0004D0, "Member 'UNikkiAnim_BPNew_C::AnimBlueprintExtension_Tag' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimBlueprintExtension_PropertyAccess) == 0x0004D8, "Member 'UNikkiAnim_BPNew_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimBlueprintExtension_NodeRelevancy) == 0x0004E0, "Member 'UNikkiAnim_BPNew_C::AnimBlueprintExtension_NodeRelevancy' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimBlueprintExtension_Base) == 0x000588, "Member 'UNikkiAnim_BPNew_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LinkedInputPose_12) == 0x000590, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LinkedInputPose_12' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_Root_24) == 0x000648, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_Root_24' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LinkedInputPose_11) == 0x000668, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LinkedInputPose_11' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_Root_23) == 0x000720, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_Root_23' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LinkedInputPose_10) == 0x000740, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LinkedInputPose_10' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_Root_22) == 0x0007F8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_Root_22' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LinkedInputPose_9) == 0x000818, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LinkedInputPose_9' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_Root_21) == 0x0008D0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_Root_21' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LinkedInputPose_8) == 0x0008F0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LinkedInputPose_8' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_Root_20) == 0x0009A8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_Root_20' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_Root_19) == 0x0009C8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_Root_19' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LinkedInputPose_7) == 0x0009E8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LinkedInputPose_7' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_Root_18) == 0x000AA0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_Root_18' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_Root_17) == 0x000AC0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_Root_17' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_Root_16) == 0x000AE0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_Root_16' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SequencePlayer_9) == 0x000B00, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_Root_15) == 0x000B48, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_Root_15' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LinkedInputPose_6) == 0x000B68, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LinkedInputPose_6' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_Root_14) == 0x000C20, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_Root_14' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LinkedInputPose_5) == 0x000C40, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LinkedInputPose_5' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_Root_13) == 0x000CF8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_Root_13' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LinkedInputPose_4) == 0x000D18, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LinkedInputPose_4' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_Root_12) == 0x000DD0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_Root_12' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_Root_11) == 0x000DF0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_Root_11' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_Root_10) == 0x000E10, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_Root_10' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_Root_9) == 0x000E30, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_Root_9' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SequencePlayer_8) == 0x000E50, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_Root_8) == 0x000E98, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_Root_8' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SequencePlayer_7) == 0x000EB8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_Root_7) == 0x000F00, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_Root_7' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SequencePlayer_6) == 0x000F20, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_Root_6) == 0x000F68, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_Root_6' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SequencePlayer_5) == 0x000F88, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_Root_5) == 0x000FD0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_Root_5' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LinkedInputPose_3) == 0x000FF0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LinkedInputPose_3' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_Root_4) == 0x0010A8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_Root_4' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LinkedInputPose_2) == 0x0010C8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LinkedInputPose_2' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_Root_3) == 0x001180, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_Root_3' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SequencePlayer_4) == 0x0011A0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_Root_2) == 0x0011E8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_Root_2' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LinkedInputPose_1) == 0x001208, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LinkedInputPose_1' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SaveCachedPose_40) == 0x0012C0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SaveCachedPose_40' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SaveCachedPose_39) == 0x001340, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SaveCachedPose_39' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_Root_1) == 0x0013C0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_86) == 0x0013E0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_86' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SaveCachedPose_38) == 0x001408, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SaveCachedPose_38' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_85) == 0x001488, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_85' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_84) == 0x0014B0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_84' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_MakeDynamicAdditive_1) == 0x0014D8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_MakeDynamicAdditive_1' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SaveCachedPose_37) == 0x001510, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SaveCachedPose_37' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_83) == 0x001590, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_83' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_82) == 0x0015B8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_82' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_MakeDynamicAdditive) == 0x0015E0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_MakeDynamicAdditive' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SaveCachedPose_36) == 0x001618, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SaveCachedPose_36' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LayeredBoneBlend_16) == 0x001698, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LayeredBoneBlend_16' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_81) == 0x001788, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_81' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_80) == 0x0017B0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_80' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_ApplyMeshSpaceAdditive_4) == 0x0017D8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_ApplyMeshSpaceAdditive_4' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SaveCachedPose_35) == 0x0018A8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SaveCachedPose_35' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SaveCachedPose_34) == 0x001928, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SaveCachedPose_34' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_79) == 0x0019A8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_79' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_ApplyAdditive_4) == 0x0019D0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_ApplyAdditive_4' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_78) == 0x001A98, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_78' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SaveCachedPose_33) == 0x001AC0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SaveCachedPose_33' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_77) == 0x001B40, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_77' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_76) == 0x001B68, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_76' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LayeredBoneBlend_15) == 0x001B90, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LayeredBoneBlend_15' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_ApplyAdditive_3) == 0x001C80, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_ApplyAdditive_3' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_75) == 0x001D48, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_75' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_74) == 0x001D70, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_74' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_ApplyMeshSpaceAdditive_3) == 0x001D98, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_ApplyMeshSpaceAdditive_3' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_73) == 0x001E68, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_73' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SaveCachedPose_32) == 0x001E90, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SaveCachedPose_32' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LayeredBoneBlend_14) == 0x001F10, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LayeredBoneBlend_14' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_72) == 0x002000, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_72' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_X6PoseFilter_1) == 0x002028, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_X6PoseFilter_1' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LinkedInputPose) == 0x002060, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_71) == 0x002118, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_71' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_70) == 0x002140, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_70' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_69) == 0x002168, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_69' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_ApplyMeshSpaceAdditive_2) == 0x002190, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_ApplyMeshSpaceAdditive_2' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SaveCachedPose_31) == 0x002260, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SaveCachedPose_31' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_ApplyMeshSpaceAdditive_1) == 0x0022E0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_ApplyMeshSpaceAdditive_1' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_TwoWayBlend_7) == 0x0023B0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_TwoWayBlend_7' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_68) == 0x002478, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_68' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_67) == 0x0024A0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_67' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_TwoWayBlend_6) == 0x0024C8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_TwoWayBlend_6' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LayeredBoneBlend_13) == 0x002590, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LayeredBoneBlend_13' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_66) == 0x002680, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_66' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_65) == 0x0026A8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_65' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_64) == 0x0026D0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_64' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_63) == 0x0026F8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_63' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_ApplyMeshSpaceAdditive) == 0x002720, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_ApplyMeshSpaceAdditive' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SaveCachedPose_30) == 0x0027F0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SaveCachedPose_30' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_62) == 0x002870, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_62' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_TwoWayBlend_5) == 0x002898, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_TwoWayBlend_5' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_61) == 0x002960, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_61' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_60) == 0x002988, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_60' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LayeredBoneBlend_12) == 0x0029B0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LayeredBoneBlend_12' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_X6PoseFilter) == 0x002AA0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_X6PoseFilter' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_Slot_13) == 0x002AD8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_Slot_13' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_Root) == 0x002B20, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LayeredBoneBlend_11) == 0x002B40, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LayeredBoneBlend_11' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_59) == 0x002C30, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_59' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SaveCachedPose_29) == 0x002C58, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SaveCachedPose_29' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_Slot_12) == 0x002CD8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_Slot_12' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LayeredBoneBlend_10) == 0x002D20, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LayeredBoneBlend_10' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_Slot_11) == 0x002E10, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_Slot_11' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SaveCachedPose_28) == 0x002E58, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SaveCachedPose_28' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_58) == 0x002ED8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_58' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_Slot_10) == 0x002F00, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_Slot_10' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_Slot_9) == 0x002F48, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_Slot_9' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_BlendListByEnum) == 0x002F90, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SaveCachedPose_27) == 0x002FD8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SaveCachedPose_27' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_BlendListByBool_13) == 0x003058, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_BlendListByBool_13' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SaveCachedPose_26) == 0x0030A0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SaveCachedPose_26' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_BlendListByBool_12) == 0x003120, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_BlendListByBool_12' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_57) == 0x003168, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_57' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SaveCachedPose_25) == 0x003190, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SaveCachedPose_25' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LinkedAnimLayer_15) == 0x003210, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LinkedAnimLayer_15' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LinkedAnimLayer_14) == 0x0032D8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LinkedAnimLayer_14' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LinkedAnimLayer_13) == 0x0033A0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LinkedAnimLayer_13' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LinkedAnimLayer_12) == 0x003468, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LinkedAnimLayer_12' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LinkedAnimLayer_11) == 0x003530, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LinkedAnimLayer_11' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LinkedAnimLayer_10) == 0x0035F8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LinkedAnimLayer_10' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_56) == 0x0036C0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_56' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LinkedAnimLayer_9) == 0x0036E8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LinkedAnimLayer_9' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_55) == 0x0037B0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_55' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_ControlRig_9) == 0x0037D8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_ControlRig_9' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SaveCachedPose_24) == 0x003CA8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SaveCachedPose_24' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SaveCachedPose_23) == 0x003D28, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SaveCachedPose_23' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_TransitionResult_5) == 0x003DA8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_TransitionResult_4) == 0x003DD0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_TransitionResult_3) == 0x003DF8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_TransitionResult_2) == 0x003E20, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_TransitionResult_1) == 0x003E48, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_TransitionResult) == 0x003E70, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_54) == 0x003E98, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_54' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_StateResult_2) == 0x003EC0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_53) == 0x003EE0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_53' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_StateResult_1) == 0x003F08, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_StateMachine_1) == 0x003F28, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SaveCachedPose_22) == 0x003FF0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SaveCachedPose_22' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_Inertialization) == 0x004070, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_Inertialization' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_Slot_8) == 0x0044C0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_Slot_8' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_ApplyAdditive_2) == 0x004508, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_ApplyAdditive_2' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_IdentityPose_3) == 0x0045D0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_IdentityPose_3' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_52) == 0x0045E0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_52' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_51) == 0x004608, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_51' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SaveCachedPose_21) == 0x004630, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SaveCachedPose_21' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_50) == 0x0046B0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_50' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_49) == 0x0046D8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_49' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SaveCachedPose_20) == 0x004700, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SaveCachedPose_20' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_48) == 0x004780, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_48' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SequencePlayer_3) == 0x0047A8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LinkedAnimLayer_8) == 0x0047F0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LinkedAnimLayer_8' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_BlendListByBool_11) == 0x0048B8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_BlendListByBool_11' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LinkedAnimLayer_7) == 0x004900, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LinkedAnimLayer_7' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_ControlRig_8) == 0x0049C8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_ControlRig_8' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_TwoWayBlend_4) == 0x004E98, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_TwoWayBlend_4' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SaveCachedPose_19) == 0x004F60, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SaveCachedPose_19' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_47) == 0x004FE0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_47' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_46) == 0x005008, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_46' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_ControlRig_7) == 0x005030, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_ControlRig_7' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SaveCachedPose_18) == 0x005500, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SaveCachedPose_18' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_ControlRig_6) == 0x005580, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_ControlRig_6' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_45) == 0x005A50, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_45' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_BlendListByBool_10) == 0x005A78, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_BlendListByBool_10' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_44) == 0x005AC0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_44' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_ControlRig_5) == 0x005AE8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_ControlRig_5' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_StateResult) == 0x005FB8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_StateMachine) == 0x005FD8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SaveCachedPose_17) == 0x0060A0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SaveCachedPose_17' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_43) == 0x006120, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_43' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_Slot_7) == 0x006148, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_Slot_7' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LayeredBoneBlend_9) == 0x006190, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LayeredBoneBlend_9' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SaveCachedPose_16) == 0x006280, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SaveCachedPose_16' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_42) == 0x006300, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_42' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_41) == 0x006328, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_41' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SaveCachedPose_15) == 0x006350, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SaveCachedPose_15' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_40) == 0x0063D0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_40' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_39) == 0x0063F8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_39' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_BlendListByBool_9) == 0x006420, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_BlendListByBool_9' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_38) == 0x006468, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_38' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SaveCachedPose_14) == 0x006490, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SaveCachedPose_14' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_ControlRig_4) == 0x006510, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_ControlRig_4' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LinkedAnimLayer_6) == 0x0069E0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LinkedAnimLayer_6' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_37) == 0x006AA8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_37' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_ModifyCurve) == 0x006AD0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_ModifyCurve' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LayeredBoneBlend_8) == 0x006BF0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LayeredBoneBlend_8' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_Slot_6) == 0x006CE0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_Slot_6' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_ApplyAdditive_1) == 0x006D28, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_IdentityPose_2) == 0x006DF0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_IdentityPose_2' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LocalRefPose) == 0x006E00, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LocalRefPose' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_36) == 0x006E10, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_36' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_35) == 0x006E38, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_35' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_ControlRig_3) == 0x006E60, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_ControlRig_3' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LayeredBoneBlend_7) == 0x007330, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LayeredBoneBlend_7' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_CopyBone_5) == 0x007420, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_CopyBone_5' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_CopyBone_4) == 0x007510, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_CopyBone_4' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LocalToComponentSpace_2) == 0x007600, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LocalToComponentSpace_2' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_ComponentToLocalSpace_2) == 0x007620, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_ComponentToLocalSpace_2' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_BlendListByBool_8) == 0x007640, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_BlendListByBool_8' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SaveCachedPose_13) == 0x007688, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SaveCachedPose_13' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_34) == 0x007708, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_34' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_33) == 0x007730, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_33' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_BlendSpacePlayer) == 0x007758, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LayeredBoneBlend_6) == 0x0077D0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LayeredBoneBlend_6' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_BlendListByBool_7) == 0x0078C0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_BlendListByBool_7' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SaveCachedPose_12) == 0x007908, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SaveCachedPose_12' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_32) == 0x007988, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_32' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_31) == 0x0079B0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_31' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_BlendListByBool_6) == 0x0079D8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_BlendListByBool_6' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_30) == 0x007A20, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_30' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LayeredBoneBlend_5) == 0x007A48, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LayeredBoneBlend_5' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_ControlRig_2) == 0x007B38, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_ControlRig_2' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_ControlRig_1) == 0x008008, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_ControlRig_1' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LinkedAnimLayer_5) == 0x0084D8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LinkedAnimLayer_5' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LinkedAnimLayer_4) == 0x0085A0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LinkedAnimLayer_4' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SaveCachedPose_11) == 0x008668, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SaveCachedPose_11' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LinkedAnimLayer_3) == 0x0086E8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LinkedAnimLayer_3' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LinkedAnimLayer_2) == 0x0087B0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LinkedAnimLayer_2' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SaveCachedPose_10) == 0x008878, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SaveCachedPose_10' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_29) == 0x0088F8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_29' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_28) == 0x008920, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_28' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SequencePlayer_2) == 0x008948, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LinkedAnimLayer_1) == 0x008990, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LinkedAnimLayer_1' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_PoseBlendNode) == 0x008A58, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_PoseBlendNode' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_X6OverlayBlend_5) == 0x008B30, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_X6OverlayBlend_5' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_Slot_5) == 0x008D88, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_Slot_5' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_X6OverlayBlend_4) == 0x008DD0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_X6OverlayBlend_4' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_PoseMatchRecorder) == 0x009030, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_PoseMatchRecorder' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_BlendListByBool_5) == 0x009180, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_BlendListByBool_5' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_X6AnimContext) == 0x0091C8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_X6AnimContext' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LinkedAnimGraph) == 0x009288, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LinkedAnimGraph' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_27) == 0x009340, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_27' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_X6OverlayBlend_Stylized_1) == 0x009368, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_X6OverlayBlend_Stylized_1' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_X6StateMachineMarker) == 0x0095D0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_X6StateMachineMarker' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SaveCachedPose_9) == 0x009660, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SaveCachedPose_9' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_X6OverlayBlend_Stylized) == 0x0096E0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_X6OverlayBlend_Stylized' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_26) == 0x009948, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_26' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_X6OverlayBlend_3) == 0x009970, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_X6OverlayBlend_3' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_25) == 0x009BC8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_25' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_BlendListByBool_4) == 0x009BF0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_BlendListByBool_4' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_Slot_4) == 0x009C38, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_Slot_4' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SaveCachedPose_8) == 0x009C80, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SaveCachedPose_8' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_24) == 0x009D00, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_24' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_23) == 0x009D28, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_23' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LayeredBoneBlend_4) == 0x009D50, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LayeredBoneBlend_4' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_ApplyAdditive) == 0x009E40, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LayeredBoneBlend_3) == 0x009F08, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LayeredBoneBlend_3' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_IdentityPose_1) == 0x009FF8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_IdentityPose_1' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LayeredBoneBlend_2) == 0x00A008, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LayeredBoneBlend_2' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_TwoBoneIK) == 0x00A100, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_TwoBoneIK' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x00A380, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_CopyBone_3) == 0x00A3A0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_CopyBone_3' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LocalToComponentSpace_1) == 0x00A490, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SaveCachedPose_7) == 0x00A4B0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SaveCachedPose_7' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_Slot_3) == 0x00A530, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_Slot_3' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_22) == 0x00A578, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_22' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_21) == 0x00A5A0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_21' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_20) == 0x00A5C8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_20' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SaveCachedPose_6) == 0x00A5F0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SaveCachedPose_6' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_19) == 0x00A670, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_19' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_18) == 0x00A698, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_18' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_BlendListByBool_3) == 0x00A6C0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_Slot_2) == 0x00A708, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_IdentityPose) == 0x00A750, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_IdentityPose' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SaveCachedPose_5) == 0x00A760, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SaveCachedPose_5' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_17) == 0x00A7E0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_17' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SaveCachedPose_4) == 0x00A808, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SaveCachedPose_4' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_16) == 0x00A888, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_16' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_BlendListByBool_2) == 0x00A8B0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LayeredBoneBlend_1) == 0x00A8F8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_15) == 0x00A9E8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_15' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_14) == 0x00AA10, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_14' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_CopyBone_2) == 0x00AA38, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_CopyBone_2' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LocalToComponentSpace) == 0x00AB28, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_CopyBone_1) == 0x00AB48, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_CopyBone_1' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_CopyBone) == 0x00AC38, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_CopyBone' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_ComponentToLocalSpace) == 0x00AD28, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LayeredBoneBlend) == 0x00AD48, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_13) == 0x00AE38, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_13' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_12) == 0x00AE60, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_12' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_X6OverlayBlend_2) == 0x00AE88, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_X6OverlayBlend_2' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_11) == 0x00B0E0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_11' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_BlendListByBool_1) == 0x00B108, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_LinkedAnimLayer) == 0x00B150, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_LinkedAnimLayer' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SaveCachedPose_3) == 0x00B218, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SaveCachedPose_3' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_10) == 0x00B298, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_10' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_X6OverlayBlend_1) == 0x00B2C0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_X6OverlayBlend_1' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_Slot_1) == 0x00B518, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_9) == 0x00B560, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_9' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SequencePlayer_1) == 0x00B588, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SaveCachedPose_2) == 0x00B5D0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_8) == 0x00B650, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_8' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_X6OverlayBlend) == 0x00B678, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_X6OverlayBlend' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SequencePlayer) == 0x00B8D0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_Slot) == 0x00B918, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_7) == 0x00B960, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_7' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_BlendListByBool) == 0x00B988, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_6) == 0x00B9D0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_TwoWayBlend_3) == 0x00B9F8, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_TwoWayBlend_3' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SaveCachedPose_1) == 0x00BAC0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_5) == 0x00BB40, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_4) == 0x00BB68, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_TwoWayBlend_2) == 0x00BB90, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_TwoWayBlend_2' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_3) == 0x00BC58, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_TwoWayBlend_1) == 0x00BC80, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_TwoWayBlend_1' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_2) == 0x00BD48, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_SaveCachedPose) == 0x00BD70, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose_1) == 0x00BDF0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_TwoWayBlend) == 0x00BE18, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_TwoWayBlend' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_UseCachedPose) == 0x00BEE0, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnimGraphNode_ControlRig) == 0x00BF08, "Member 'UNikkiAnim_BPNew_C::AnimGraphNode_ControlRig' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, K2Node_PropertyAccess_9) == 0x00C3D8, "Member 'UNikkiAnim_BPNew_C::K2Node_PropertyAccess_9' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, K2Node_PropertyAccess_8) == 0x00C3D9, "Member 'UNikkiAnim_BPNew_C::K2Node_PropertyAccess_8' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, K2Node_PropertyAccess_7) == 0x00C3DA, "Member 'UNikkiAnim_BPNew_C::K2Node_PropertyAccess_7' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, K2Node_PropertyAccess_6) == 0x00C3DB, "Member 'UNikkiAnim_BPNew_C::K2Node_PropertyAccess_6' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_LHandIKRotation_FD6CE1A041C9D5E5C2C5CE8FFA07334E) == 0x00C3E0, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_LHandIKRotation_FD6CE1A041C9D5E5C2C5CE8FFA07334E' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_LHandIKPosition_FD6CE1A041C9D5E5C2C5CE8FFA07334E) == 0x00C3F8, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_LHandIKPosition_FD6CE1A041C9D5E5C2C5CE8FFA07334E' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_RHandIKRotation_FD6CE1A041C9D5E5C2C5CE8FFA07334E) == 0x00C410, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_RHandIKRotation_FD6CE1A041C9D5E5C2C5CE8FFA07334E' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_RHandIKPosition_FD6CE1A041C9D5E5C2C5CE8FFA07334E) == 0x00C428, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_RHandIKPosition_FD6CE1A041C9D5E5C2C5CE8FFA07334E' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_bEnableRHandIKPosition_FD6CE1A041C9D5E5C2C5CE8FFA07334E) == 0x00C440, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_bEnableRHandIKPosition_FD6CE1A041C9D5E5C2C5CE8FFA07334E' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_bEnableRHandIKRotation_FD6CE1A041C9D5E5C2C5CE8FFA07334E) == 0x00C441, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_bEnableRHandIKRotation_FD6CE1A041C9D5E5C2C5CE8FFA07334E' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_bEnableLHandIKPosition_FD6CE1A041C9D5E5C2C5CE8FFA07334E) == 0x00C442, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_bEnableLHandIKPosition_FD6CE1A041C9D5E5C2C5CE8FFA07334E' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_bEnableLHandIKRotation_FD6CE1A041C9D5E5C2C5CE8FFA07334E) == 0x00C443, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_bEnableLHandIKRotation_FD6CE1A041C9D5E5C2C5CE8FFA07334E' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_bEnableHandIK_FD6CE1A041C9D5E5C2C5CE8FFA07334E) == 0x00C444, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_bEnableHandIK_FD6CE1A041C9D5E5C2C5CE8FFA07334E' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_LHandIKRotation_A83644064C79A024AB8C7D8A45082E28) == 0x00C448, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_LHandIKRotation_A83644064C79A024AB8C7D8A45082E28' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_LHandIKPosition_A83644064C79A024AB8C7D8A45082E28) == 0x00C460, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_LHandIKPosition_A83644064C79A024AB8C7D8A45082E28' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_RHandIKRotation_A83644064C79A024AB8C7D8A45082E28) == 0x00C478, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_RHandIKRotation_A83644064C79A024AB8C7D8A45082E28' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_RHandIKPosition_A83644064C79A024AB8C7D8A45082E28) == 0x00C490, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_RHandIKPosition_A83644064C79A024AB8C7D8A45082E28' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_bEnableRHandIKPosition_A83644064C79A024AB8C7D8A45082E28) == 0x00C4A8, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_bEnableRHandIKPosition_A83644064C79A024AB8C7D8A45082E28' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_bEnableRHandIKRotation_A83644064C79A024AB8C7D8A45082E28) == 0x00C4A9, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_bEnableRHandIKRotation_A83644064C79A024AB8C7D8A45082E28' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_bEnableLHandIKPosition_A83644064C79A024AB8C7D8A45082E28) == 0x00C4AA, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_bEnableLHandIKPosition_A83644064C79A024AB8C7D8A45082E28' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_bEnableLHandIKRotation_A83644064C79A024AB8C7D8A45082E28) == 0x00C4AB, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_bEnableLHandIKRotation_A83644064C79A024AB8C7D8A45082E28' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_bEnableHandIK_A83644064C79A024AB8C7D8A45082E28) == 0x00C4AC, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_bEnableHandIK_A83644064C79A024AB8C7D8A45082E28' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, K2Node_PropertyAccess_5) == 0x00C4B0, "Member 'UNikkiAnim_BPNew_C::K2Node_PropertyAccess_5' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_bForceInitFootPlacementIKParam_8087071C41AA2CE0A35BC08B4DC64E49) == 0x00C550, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_bForceInitFootPlacementIKParam_8087071C41AA2CE0A35BC08B4DC64E49' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_SlopeAngle_8087071C41AA2CE0A35BC08B4DC64E49) == 0x00C558, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_SlopeAngle_8087071C41AA2CE0A35BC08B4DC64E49' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_RightFootRotationWeight_8087071C41AA2CE0A35BC08B4DC64E49) == 0x00C560, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_RightFootRotationWeight_8087071C41AA2CE0A35BC08B4DC64E49' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_LeftFootRotationWeight_8087071C41AA2CE0A35BC08B4DC64E49) == 0x00C568, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_LeftFootRotationWeight_8087071C41AA2CE0A35BC08B4DC64E49' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_RightFootTranslationWeight_8087071C41AA2CE0A35BC08B4DC64E49) == 0x00C570, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_RightFootTranslationWeight_8087071C41AA2CE0A35BC08B4DC64E49' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_LeftFootTranslationWeight_8087071C41AA2CE0A35BC08B4DC64E49) == 0x00C578, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_LeftFootTranslationWeight_8087071C41AA2CE0A35BC08B4DC64E49' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_PelvisWeight_8087071C41AA2CE0A35BC08B4DC64E49) == 0x00C580, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_PelvisWeight_8087071C41AA2CE0A35BC08B4DC64E49' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_PelvisOffset_8087071C41AA2CE0A35BC08B4DC64E49) == 0x00C588, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_PelvisOffset_8087071C41AA2CE0A35BC08B4DC64E49' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_AnkleRightOffsetRotation_8087071C41AA2CE0A35BC08B4DC64E49) == 0x00C5A0, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_AnkleRightOffsetRotation_8087071C41AA2CE0A35BC08B4DC64E49' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_AnkleLeftOffsetRotation_8087071C41AA2CE0A35BC08B4DC64E49) == 0x00C5B8, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_AnkleLeftOffsetRotation_8087071C41AA2CE0A35BC08B4DC64E49' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_AnkleRightOffsetLocation_8087071C41AA2CE0A35BC08B4DC64E49) == 0x00C5D0, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_AnkleRightOffsetLocation_8087071C41AA2CE0A35BC08B4DC64E49' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_AnkleLeftOffsetLocation_8087071C41AA2CE0A35BC08B4DC64E49) == 0x00C5E8, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_AnkleLeftOffsetLocation_8087071C41AA2CE0A35BC08B4DC64E49' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, K2Node_PropertyAccess_4) == 0x00C600, "Member 'UNikkiAnim_BPNew_C::K2Node_PropertyAccess_4' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, K2Node_PropertyAccess_3) == 0x00C6A0, "Member 'UNikkiAnim_BPNew_C::K2Node_PropertyAccess_3' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, K2Node_PropertyAccess_2) == 0x00C6A8, "Member 'UNikkiAnim_BPNew_C::K2Node_PropertyAccess_2' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, K2Node_PropertyAccess_1) == 0x00C6B0, "Member 'UNikkiAnim_BPNew_C::K2Node_PropertyAccess_1' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, K2Node_PropertyAccess) == 0x00C6B1, "Member 'UNikkiAnim_BPNew_C::K2Node_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_HeelHeight_BB387FD742265B193B50A88A47DACE2E) == 0x00C6B8, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_HeelHeight_BB387FD742265B193B50A88A47DACE2E' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_bEnableRightHandIK_BB387FD742265B193B50A88A47DACE2E) == 0x00C6C0, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_bEnableRightHandIK_BB387FD742265B193B50A88A47DACE2E' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_bEnableLeftHandIK_BB387FD742265B193B50A88A47DACE2E) == 0x00C6C1, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_bEnableLeftHandIK_BB387FD742265B193B50A88A47DACE2E' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_HighHeelToeHeight_14776D5546D97ADC8A72698C13E7F85B) == 0x00C6C8, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_HighHeelToeHeight_14776D5546D97ADC8A72698C13E7F85B' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_ToesRotaionYawOffset_14776D5546D97ADC8A72698C13E7F85B) == 0x00C6D0, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_ToesRotaionYawOffset_14776D5546D97ADC8A72698C13E7F85B' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_AnkleRotaionYawOffset_14776D5546D97ADC8A72698C13E7F85B) == 0x00C6D8, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_AnkleRotaionYawOffset_14776D5546D97ADC8A72698C13E7F85B' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_HighHeelHeight_14776D5546D97ADC8A72698C13E7F85B) == 0x00C6E0, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_HighHeelHeight_14776D5546D97ADC8A72698C13E7F85B' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_Clothes_Thickness_WristR_14776D5546D97ADC8A72698C13E7F85B) == 0x00C6E8, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_Clothes_Thickness_WristR_14776D5546D97ADC8A72698C13E7F85B' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_Clothes_Thickness_WristL_14776D5546D97ADC8A72698C13E7F85B) == 0x00C700, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_Clothes_Thickness_WristL_14776D5546D97ADC8A72698C13E7F85B' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_Clothes_Thickness_RootM_14776D5546D97ADC8A72698C13E7F85B) == 0x00C718, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_Clothes_Thickness_RootM_14776D5546D97ADC8A72698C13E7F85B' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_Curve_IKAlpha_14776D5546D97ADC8A72698C13E7F85B) == 0x00C730, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_Curve_IKAlpha_14776D5546D97ADC8A72698C13E7F85B' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_AnkleRightCompTransform_14776D5546D97ADC8A72698C13E7F85B) == 0x00C740, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_AnkleRightCompTransform_14776D5546D97ADC8A72698C13E7F85B' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_AnkleLeftCompTransform_14776D5546D97ADC8A72698C13E7F85B) == 0x00C7A0, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_AnkleLeftCompTransform_14776D5546D97ADC8A72698C13E7F85B' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_RootMCompTransform_14776D5546D97ADC8A72698C13E7F85B) == 0x00C800, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_RootMCompTransform_14776D5546D97ADC8A72698C13E7F85B' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_RootM_Alpha_14776D5546D97ADC8A72698C13E7F85B) == 0x00C860, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_RootM_Alpha_14776D5546D97ADC8A72698C13E7F85B' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_bForceInitFootPlacementIKParam_9C3CB6104FEEB92C4E76B49E09A60DE1) == 0x00C868, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_bForceInitFootPlacementIKParam_9C3CB6104FEEB92C4E76B49E09A60DE1' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_Velocity_9C3CB6104FEEB92C4E76B49E09A60DE1) == 0x00C870, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_Velocity_9C3CB6104FEEB92C4E76B49E09A60DE1' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_SlopeAngle_9C3CB6104FEEB92C4E76B49E09A60DE1) == 0x00C888, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_SlopeAngle_9C3CB6104FEEB92C4E76B49E09A60DE1' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_RightFootRotationWeight_9C3CB6104FEEB92C4E76B49E09A60DE1) == 0x00C890, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_RightFootRotationWeight_9C3CB6104FEEB92C4E76B49E09A60DE1' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_LeftFootRotationWeight_9C3CB6104FEEB92C4E76B49E09A60DE1) == 0x00C898, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_LeftFootRotationWeight_9C3CB6104FEEB92C4E76B49E09A60DE1' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_RightFootTranslationWeight_9C3CB6104FEEB92C4E76B49E09A60DE1) == 0x00C8A0, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_RightFootTranslationWeight_9C3CB6104FEEB92C4E76B49E09A60DE1' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_LeftFootTranslationWeight_9C3CB6104FEEB92C4E76B49E09A60DE1) == 0x00C8A8, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_LeftFootTranslationWeight_9C3CB6104FEEB92C4E76B49E09A60DE1' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_PelvisWeight_9C3CB6104FEEB92C4E76B49E09A60DE1) == 0x00C8B0, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_PelvisWeight_9C3CB6104FEEB92C4E76B49E09A60DE1' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_PelvisOffset_9C3CB6104FEEB92C4E76B49E09A60DE1) == 0x00C8B8, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_PelvisOffset_9C3CB6104FEEB92C4E76B49E09A60DE1' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_AnkleRightOffsetRotation_9C3CB6104FEEB92C4E76B49E09A60DE1) == 0x00C8D0, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_AnkleRightOffsetRotation_9C3CB6104FEEB92C4E76B49E09A60DE1' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_AnkleLeftOffsetRotation_9C3CB6104FEEB92C4E76B49E09A60DE1) == 0x00C8E8, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_AnkleLeftOffsetRotation_9C3CB6104FEEB92C4E76B49E09A60DE1' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_AnkleRightOffsetLocation_9C3CB6104FEEB92C4E76B49E09A60DE1) == 0x00C900, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_AnkleRightOffsetLocation_9C3CB6104FEEB92C4E76B49E09A60DE1' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_AnkleLeftOffsetLocation_9C3CB6104FEEB92C4E76B49E09A60DE1) == 0x00C918, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_AnkleLeftOffsetLocation_9C3CB6104FEEB92C4E76B49E09A60DE1' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_HighHeel_Ankle_Angle_362258464F4E0990712B6C89FDD06BD0) == 0x00C930, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_HighHeel_Ankle_Angle_362258464F4E0990712B6C89FDD06BD0' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_FootRotationR_362258464F4E0990712B6C89FDD06BD0) == 0x00C940, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_FootRotationR_362258464F4E0990712B6C89FDD06BD0' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_FootRotationL_362258464F4E0990712B6C89FDD06BD0) == 0x00C960, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_FootRotationL_362258464F4E0990712B6C89FDD06BD0' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_FootAlphaR_362258464F4E0990712B6C89FDD06BD0) == 0x00C980, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_FootAlphaR_362258464F4E0990712B6C89FDD06BD0' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_FootAlphaL_362258464F4E0990712B6C89FDD06BD0) == 0x00C988, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_FootAlphaL_362258464F4E0990712B6C89FDD06BD0' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_FootPositionR_362258464F4E0990712B6C89FDD06BD0) == 0x00C990, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_FootPositionR_362258464F4E0990712B6C89FDD06BD0' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_FootPostionL_362258464F4E0990712B6C89FDD06BD0) == 0x00C9A8, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_FootPostionL_362258464F4E0990712B6C89FDD06BD0' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_Lock_R_Hand_IK_Rotation_4CAA693F4D458C4D1C9B5B9AE3D03FA9) == 0x00C9C0, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_Lock_R_Hand_IK_Rotation_4CAA693F4D458C4D1C9B5B9AE3D03FA9' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_isLock_R_Hand_IK_Rotation_4CAA693F4D458C4D1C9B5B9AE3D03FA9) == 0x00C9D8, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_isLock_R_Hand_IK_Rotation_4CAA693F4D458C4D1C9B5B9AE3D03FA9' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_Lock_R_Hand_IK_Position_4CAA693F4D458C4D1C9B5B9AE3D03FA9) == 0x00C9E0, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_Lock_R_Hand_IK_Position_4CAA693F4D458C4D1C9B5B9AE3D03FA9' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_isLock_R_Hand_IK_Position_4CAA693F4D458C4D1C9B5B9AE3D03FA9) == 0x00C9F8, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_isLock_R_Hand_IK_Position_4CAA693F4D458C4D1C9B5B9AE3D03FA9' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_Lock_L_Hand_IK_Rotation_4CAA693F4D458C4D1C9B5B9AE3D03FA9) == 0x00CA00, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_Lock_L_Hand_IK_Rotation_4CAA693F4D458C4D1C9B5B9AE3D03FA9' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_isLock_L_Hand_IK_Rotation_4CAA693F4D458C4D1C9B5B9AE3D03FA9) == 0x00CA18, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_isLock_L_Hand_IK_Rotation_4CAA693F4D458C4D1C9B5B9AE3D03FA9' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_Lock_L_Hand_IK_Position_4CAA693F4D458C4D1C9B5B9AE3D03FA9) == 0x00CA20, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_Lock_L_Hand_IK_Position_4CAA693F4D458C4D1C9B5B9AE3D03FA9' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_isLock_L_Hand_IK_Position_4CAA693F4D458C4D1C9B5B9AE3D03FA9) == 0x00CA38, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_isLock_L_Hand_IK_Position_4CAA693F4D458C4D1C9B5B9AE3D03FA9' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_Offset_R_Hand_IK_Rotation_4CAA693F4D458C4D1C9B5B9AE3D03FA9) == 0x00CA40, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_Offset_R_Hand_IK_Rotation_4CAA693F4D458C4D1C9B5B9AE3D03FA9' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_isOffset_R_Hand_IK_Rotation_4CAA693F4D458C4D1C9B5B9AE3D03FA9) == 0x00CA58, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_isOffset_R_Hand_IK_Rotation_4CAA693F4D458C4D1C9B5B9AE3D03FA9' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_Offset_L_Hand_IK_Rotation_4CAA693F4D458C4D1C9B5B9AE3D03FA9) == 0x00CA60, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_Offset_L_Hand_IK_Rotation_4CAA693F4D458C4D1C9B5B9AE3D03FA9' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_isOffset_L_Hand_IK_Rotation_4CAA693F4D458C4D1C9B5B9AE3D03FA9) == 0x00CA78, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_isOffset_L_Hand_IK_Rotation_4CAA693F4D458C4D1C9B5B9AE3D03FA9' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_Offset_R_Hand_IK_Position_4CAA693F4D458C4D1C9B5B9AE3D03FA9) == 0x00CA80, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_Offset_R_Hand_IK_Position_4CAA693F4D458C4D1C9B5B9AE3D03FA9' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_isOffset_R_Hand_IK_Position_4CAA693F4D458C4D1C9B5B9AE3D03FA9) == 0x00CA98, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_isOffset_R_Hand_IK_Position_4CAA693F4D458C4D1C9B5B9AE3D03FA9' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_Offset_L_Hand_IK_Position_4CAA693F4D458C4D1C9B5B9AE3D03FA9) == 0x00CAA0, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_Offset_L_Hand_IK_Position_4CAA693F4D458C4D1C9B5B9AE3D03FA9' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, __CustomProperty_isOffset_L_Hand_IK_Position_4CAA693F4D458C4D1C9B5B9AE3D03FA9) == 0x00CAB8, "Member 'UNikkiAnim_BPNew_C::__CustomProperty_isOffset_L_Hand_IK_Position_4CAA693F4D458C4D1C9B5B9AE3D03FA9' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, PlayerAnimStatesComponent) == 0x00CAC0, "Member 'UNikkiAnim_BPNew_C::PlayerAnimStatesComponent' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, IsLogicInStateInAir) == 0x00CAC8, "Member 'UNikkiAnim_BPNew_C::IsLogicInStateInAir' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, HighHeelHeight) == 0x00CAD0, "Member 'UNikkiAnim_BPNew_C::HighHeelHeight' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, HighHeelToeAngle) == 0x00CAD8, "Member 'UNikkiAnim_BPNew_C::HighHeelToeAngle' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, HighHeelAnkleAngle) == 0x00CAE0, "Member 'UNikkiAnim_BPNew_C::HighHeelAnkleAngle' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, PelvisOffset) == 0x00CAE8, "Member 'UNikkiAnim_BPNew_C::PelvisOffset' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, PelvisAlpha) == 0x00CB00, "Member 'UNikkiAnim_BPNew_C::PelvisAlpha' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, EnableFootIK) == 0x00CB08, "Member 'UNikkiAnim_BPNew_C::EnableFootIK' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, CurrentFloorAngle) == 0x00CB10, "Member 'UNikkiAnim_BPNew_C::CurrentFloorAngle' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, BP_EquipmentAdditiveEnabled) == 0x00CB18, "Member 'UNikkiAnim_BPNew_C::BP_EquipmentAdditiveEnabled' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, BP_BehaviorAdditiveEnabled) == 0x00CB19, "Member 'UNikkiAnim_BPNew_C::BP_BehaviorAdditiveEnabled' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, EnvResponseOverlayData) == 0x00CB20, "Member 'UNikkiAnim_BPNew_C::EnvResponseOverlayData' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, BP_CurrentPlayerGameplayMode) == 0x00CB28, "Member 'UNikkiAnim_BPNew_C::BP_CurrentPlayerGameplayMode' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, MovementScenario) == 0x00CB29, "Member 'UNikkiAnim_BPNew_C::MovementScenario' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, Offset_L_Hand_IK_Position) == 0x00CB30, "Member 'UNikkiAnim_BPNew_C::Offset_L_Hand_IK_Position' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, Offset_L_Hand_IK_Rotation) == 0x00CB48, "Member 'UNikkiAnim_BPNew_C::Offset_L_Hand_IK_Rotation' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, Offset_R_Hand_IK_Position) == 0x00CB60, "Member 'UNikkiAnim_BPNew_C::Offset_R_Hand_IK_Position' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, Offset_R_Hand_IK_Rotation) == 0x00CB78, "Member 'UNikkiAnim_BPNew_C::Offset_R_Hand_IK_Rotation' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, Lock_L_Hand_IK_Position) == 0x00CB90, "Member 'UNikkiAnim_BPNew_C::Lock_L_Hand_IK_Position' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, Lock_L_Hand_IK_Rotation) == 0x00CBA8, "Member 'UNikkiAnim_BPNew_C::Lock_L_Hand_IK_Rotation' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, Lock_R_Hand_IK_Position) == 0x00CBC0, "Member 'UNikkiAnim_BPNew_C::Lock_R_Hand_IK_Position' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, Lock_R_Hand_IK_Rotation) == 0x00CBD8, "Member 'UNikkiAnim_BPNew_C::Lock_R_Hand_IK_Rotation' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, Is_Offset_L_Hand_IK_Position) == 0x00CBF0, "Member 'UNikkiAnim_BPNew_C::Is_Offset_L_Hand_IK_Position' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, Is_Offset_R_Hand_IK_Position) == 0x00CBF1, "Member 'UNikkiAnim_BPNew_C::Is_Offset_R_Hand_IK_Position' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, Is_Offset_L_Hand_IK_Rotation) == 0x00CBF2, "Member 'UNikkiAnim_BPNew_C::Is_Offset_L_Hand_IK_Rotation' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, Is_Offset_R_Hand_IK_Rotation) == 0x00CBF3, "Member 'UNikkiAnim_BPNew_C::Is_Offset_R_Hand_IK_Rotation' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, Is_Lock_L_Hand_IK_Position) == 0x00CBF4, "Member 'UNikkiAnim_BPNew_C::Is_Lock_L_Hand_IK_Position' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, Is_Lock_L_Hand_IK_Rotation) == 0x00CBF5, "Member 'UNikkiAnim_BPNew_C::Is_Lock_L_Hand_IK_Rotation' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, Is_Lock_R_Hand_IK_Position) == 0x00CBF6, "Member 'UNikkiAnim_BPNew_C::Is_Lock_R_Hand_IK_Position' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, Is_Lock_R_Hand_IK_Rotation) == 0x00CBF7, "Member 'UNikkiAnim_BPNew_C::Is_Lock_R_Hand_IK_Rotation' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, FinalFootPlacementIKRigAlpha) == 0x00CBF8, "Member 'UNikkiAnim_BPNew_C::FinalFootPlacementIKRigAlpha' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, BP_EquipmentAdditiveBlendTime) == 0x00CC00, "Member 'UNikkiAnim_BPNew_C::BP_EquipmentAdditiveBlendTime' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, bEnableInteractionPerformance) == 0x00CC08, "Member 'UNikkiAnim_BPNew_C::bEnableInteractionPerformance' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, VelocitySize) == 0x00CC10, "Member 'UNikkiAnim_BPNew_C::VelocitySize' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, PlayerRegularInAirMovementComp) == 0x00CC18, "Member 'UNikkiAnim_BPNew_C::PlayerRegularInAirMovementComp' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, CurrentFloatingJumpStage) == 0x00CC20, "Member 'UNikkiAnim_BPNew_C::CurrentFloatingJumpStage' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, EmotionBaseBlendInfo) == 0x00CC28, "Member 'UNikkiAnim_BPNew_C::EmotionBaseBlendInfo' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, One9AIBlendInfo) == 0x00CC68, "Member 'UNikkiAnim_BPNew_C::One9AIBlendInfo' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, Five2AIBlendInfo) == 0x00CCA8, "Member 'UNikkiAnim_BPNew_C::Five2AIBlendInfo' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, bEnableEmotionPerformance) == 0x00CCE8, "Member 'UNikkiAnim_BPNew_C::bEnableEmotionPerformance' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, bHasBegunPlay) == 0x00CCE9, "Member 'UNikkiAnim_BPNew_C::bHasBegunPlay' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, HandIKCtrlRigAlpha) == 0x00CCF0, "Member 'UNikkiAnim_BPNew_C::HandIKCtrlRigAlpha' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, bSkipInteractionPerformanceWhenEnable) == 0x00CCF8, "Member 'UNikkiAnim_BPNew_C::bSkipInteractionPerformanceWhenEnable' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, BP_UseFacialAnimFromSpecialFullBody) == 0x00CCF9, "Member 'UNikkiAnim_BPNew_C::BP_UseFacialAnimFromSpecialFullBody' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, SlotName_RootM) == 0x00CD00, "Member 'UNikkiAnim_BPNew_C::SlotName_RootM' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, RootM_Alpha) == 0x00CD10, "Member 'UNikkiAnim_BPNew_C::RootM_Alpha' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, RootMCompTransform) == 0x00CD20, "Member 'UNikkiAnim_BPNew_C::RootMCompTransform' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, SlotName_AnkleLeft) == 0x00CD80, "Member 'UNikkiAnim_BPNew_C::SlotName_AnkleLeft' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnkleLeftCompTransform) == 0x00CD90, "Member 'UNikkiAnim_BPNew_C::AnkleLeftCompTransform' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, SlotName_AnkleRight) == 0x00CDF0, "Member 'UNikkiAnim_BPNew_C::SlotName_AnkleRight' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AnkleRightCompTransform) == 0x00CE00, "Member 'UNikkiAnim_BPNew_C::AnkleRightCompTransform' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, CurveName_AdjustSittingPostureIK_Alpha) == 0x00CE60, "Member 'UNikkiAnim_BPNew_C::CurveName_AdjustSittingPostureIK_Alpha' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AdjustSittingPostureIK_Alpha) == 0x00CE68, "Member 'UNikkiAnim_BPNew_C::AdjustSittingPostureIK_Alpha' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, CurveName_AdjustSittingPosture_WristLeftHeight_Alpha) == 0x00CE70, "Member 'UNikkiAnim_BPNew_C::CurveName_AdjustSittingPosture_WristLeftHeight_Alpha' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, CurveName_AdjustSittingPosture_WristRightHeight_Alpha) == 0x00CE78, "Member 'UNikkiAnim_BPNew_C::CurveName_AdjustSittingPosture_WristRightHeight_Alpha' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, Clothes_Thickness_RootM) == 0x00CE80, "Member 'UNikkiAnim_BPNew_C::Clothes_Thickness_RootM' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, Clothes_Thickness_WristL) == 0x00CE98, "Member 'UNikkiAnim_BPNew_C::Clothes_Thickness_WristL' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, Clothes_Thickness_WristR) == 0x00CEB0, "Member 'UNikkiAnim_BPNew_C::Clothes_Thickness_WristR' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, SKMeshComponent) == 0x00CEC8, "Member 'UNikkiAnim_BPNew_C::SKMeshComponent' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, BP_bEnableInteractionIK) == 0x00CED0, "Member 'UNikkiAnim_BPNew_C::BP_bEnableInteractionIK' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, CurrentSkirtClothesId) == 0x00CED4, "Member 'UNikkiAnim_BPNew_C::CurrentSkirtClothesId' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, BlackListClothesId_RootM) == 0x00CED8, "Member 'UNikkiAnim_BPNew_C::BlackListClothesId_RootM' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, BodyAndUpperFaceSlotName) == 0x00CF28, "Member 'UNikkiAnim_BPNew_C::BodyAndUpperFaceSlotName' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, BodyAndUpperFaceSlotBlendAlpha) == 0x00CF30, "Member 'UNikkiAnim_BPNew_C::BodyAndUpperFaceSlotBlendAlpha' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, EyeBlinkWeight) == 0x00CF38, "Member 'UNikkiAnim_BPNew_C::EyeBlinkWeight' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, BlackListClothesId_Wrist) == 0x00CF40, "Member 'UNikkiAnim_BPNew_C::BlackListClothesId_Wrist' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, SitExecuteType) == 0x00CF90, "Member 'UNikkiAnim_BPNew_C::SitExecuteType' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, FacialSlotBlendAlpha) == 0x00CF98, "Member 'UNikkiAnim_BPNew_C::FacialSlotBlendAlpha' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, EyeOffsetRotator_ComponentSpace) == 0x00CFA0, "Member 'UNikkiAnim_BPNew_C::EyeOffsetRotator_ComponentSpace' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, bEnableAimOffsetEyeMotion) == 0x00CFB8, "Member 'UNikkiAnim_BPNew_C::bEnableAimOffsetEyeMotion' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, DynamicSwitch) == 0x00CFB9, "Member 'UNikkiAnim_BPNew_C::DynamicSwitch' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, LayedAdditiveCurveMap) == 0x00CFC0, "Member 'UNikkiAnim_BPNew_C::LayedAdditiveCurveMap' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, LeftArm_Add) == 0x00D010, "Member 'UNikkiAnim_BPNew_C::LeftArm_Add' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, RightArm_Add) == 0x00D018, "Member 'UNikkiAnim_BPNew_C::RightArm_Add' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, Arm_LS) == 0x00D020, "Member 'UNikkiAnim_BPNew_C::Arm_LS' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, bSelectedMirror) == 0x00D028, "Member 'UNikkiAnim_BPNew_C::bSelectedMirror' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, AIFacialPoseAsset) == 0x00D030, "Member 'UNikkiAnim_BPNew_C::AIFacialPoseAsset' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, WeaponOverlayData) == 0x00D038, "Member 'UNikkiAnim_BPNew_C::WeaponOverlayData' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, DialogPerformanceBlendInTime) == 0x00D040, "Member 'UNikkiAnim_BPNew_C::DialogPerformanceBlendInTime' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, DialogPerformanceBlendOutTime) == 0x00D048, "Member 'UNikkiAnim_BPNew_C::DialogPerformanceBlendOutTime' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, SpringState_FootPlacementIKAlpha) == 0x00D050, "Member 'UNikkiAnim_BPNew_C::SpringState_FootPlacementIKAlpha' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, DT_LocomotionStyleAnims) == 0x00D060, "Member 'UNikkiAnim_BPNew_C::DT_LocomotionStyleAnims' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, LocomotionStyleOverlays) == 0x00D068, "Member 'UNikkiAnim_BPNew_C::LocomotionStyleOverlays' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, LocomotionStyleOverlaysBuffer) == 0x00D0B8, "Member 'UNikkiAnim_BPNew_C::LocomotionStyleOverlaysBuffer' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, bRequireLocomotionStyleChange) == 0x00D108, "Member 'UNikkiAnim_BPNew_C::bRequireLocomotionStyleChange' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, DefaultEmotionRatio) == 0x00D110, "Member 'UNikkiAnim_BPNew_C::DefaultEmotionRatio' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, ClothesOverlays) == 0x00D118, "Member 'UNikkiAnim_BPNew_C::ClothesOverlays' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, ClothesOverlaysBuffer) == 0x00D168, "Member 'UNikkiAnim_BPNew_C::ClothesOverlaysBuffer' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, bRequireClothesOverlayChange) == 0x00D1B8, "Member 'UNikkiAnim_BPNew_C::bRequireClothesOverlayChange' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, SpineYaw_Add) == 0x00D1C0, "Member 'UNikkiAnim_BPNew_C::SpineYaw_Add' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, ClothesFrontThickness_Follow) == 0x00D1C8, "Member 'UNikkiAnim_BPNew_C::ClothesFrontThickness_Follow' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, ClothesBackThickness_Follow) == 0x00D1D0, "Member 'UNikkiAnim_BPNew_C::ClothesBackThickness_Follow' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, ClothesFrontThickness_Splay) == 0x00D1D8, "Member 'UNikkiAnim_BPNew_C::ClothesFrontThickness_Splay' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, ClothesBackThickness_Splay) == 0x00D1E0, "Member 'UNikkiAnim_BPNew_C::ClothesBackThickness_Splay' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, BP_InPhotograph) == 0x00D1E8, "Member 'UNikkiAnim_BPNew_C::BP_InPhotograph' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, WeaponFrameSettings) == 0x00D1F0, "Member 'UNikkiAnim_BPNew_C::WeaponFrameSettings' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, PhotoWeaponFrameSettings) == 0x00D1F8, "Member 'UNikkiAnim_BPNew_C::PhotoWeaponFrameSettings' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, X6CharacterMovementComp) == 0x00D200, "Member 'UNikkiAnim_BPNew_C::X6CharacterMovementComp' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, CurrentFootIKRigAlpha_AnimOnly) == 0x00D208, "Member 'UNikkiAnim_BPNew_C::CurrentFootIKRigAlpha_AnimOnly' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, BP_ForceInitFootPlacementIKParam) == 0x00D210, "Member 'UNikkiAnim_BPNew_C::BP_ForceInitFootPlacementIKParam' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, SlotName_RelativeRootM) == 0x00D218, "Member 'UNikkiAnim_BPNew_C::SlotName_RelativeRootM' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, BP_UseWeaponAction) == 0x00D228, "Member 'UNikkiAnim_BPNew_C::BP_UseWeaponAction' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, PhotoOverlayData) == 0x00D230, "Member 'UNikkiAnim_BPNew_C::PhotoOverlayData' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, BP_UsePhotoOverlay) == 0x00D238, "Member 'UNikkiAnim_BPNew_C::BP_UsePhotoOverlay' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, SpinePitchRoll_Add) == 0x00D240, "Member 'UNikkiAnim_BPNew_C::SpinePitchRoll_Add' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, BP_MirrorWeapon) == 0x00D248, "Member 'UNikkiAnim_BPNew_C::BP_MirrorWeapon' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, BP_OverlayMontage) == 0x00D250, "Member 'UNikkiAnim_BPNew_C::BP_OverlayMontage' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, BP_OverlayMontageBlendData) == 0x00D258, "Member 'UNikkiAnim_BPNew_C::BP_OverlayMontageBlendData' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, BP_EnableOverlayMontageBlend) == 0x00D260, "Member 'UNikkiAnim_BPNew_C::BP_EnableOverlayMontageBlend' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, BP_OverlayMontageBaseAnim) == 0x00D268, "Member 'UNikkiAnim_BPNew_C::BP_OverlayMontageBaseAnim' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, BP_EmoteEnabled) == 0x00D270, "Member 'UNikkiAnim_BPNew_C::BP_EmoteEnabled' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, BP_EmoteOverlayData) == 0x00D278, "Member 'UNikkiAnim_BPNew_C::BP_EmoteOverlayData' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, HandIKCtrlRigAlphaTarget) == 0x00D280, "Member 'UNikkiAnim_BPNew_C::HandIKCtrlRigAlphaTarget' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, BP_EnableHandControlRig) == 0x00D288, "Member 'UNikkiAnim_BPNew_C::BP_EnableHandControlRig' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, BP_EnableFootControlRig) == 0x00D289, "Member 'UNikkiAnim_BPNew_C::BP_EnableFootControlRig' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, BikeFootIKPelvisOffset) == 0x00D290, "Member 'UNikkiAnim_BPNew_C::BikeFootIKPelvisOffset' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, BikeFootIKPelvisAlpha) == 0x00D2A8, "Member 'UNikkiAnim_BPNew_C::BikeFootIKPelvisAlpha' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, BikeFootIkLeftFootTranslationAlpha) == 0x00D2B0, "Member 'UNikkiAnim_BPNew_C::BikeFootIkLeftFootTranslationAlpha' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, BikeFootIkRightFootTranslationAlpha) == 0x00D2B8, "Member 'UNikkiAnim_BPNew_C::BikeFootIkRightFootTranslationAlpha' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, BikeFootIkRightFootRotationAlpha) == 0x00D2C0, "Member 'UNikkiAnim_BPNew_C::BikeFootIkRightFootRotationAlpha' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, BikeFootIkLeftFootRotationAlpha) == 0x00D2C8, "Member 'UNikkiAnim_BPNew_C::BikeFootIkLeftFootRotationAlpha' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, BikeAnkleLeftOffsetLoc) == 0x00D2D0, "Member 'UNikkiAnim_BPNew_C::BikeAnkleLeftOffsetLoc' has a wrong offset!");
static_assert(offsetof(UNikkiAnim_BPNew_C, BikeAnkleRightOffsetLoc) == 0x00D2E8, "Member 'UNikkiAnim_BPNew_C::BikeAnkleRightOffsetLoc' has a wrong offset!");

}

