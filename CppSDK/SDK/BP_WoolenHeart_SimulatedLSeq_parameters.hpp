#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WoolenHeart_SimulatedLSeq

#include "Basic.hpp"

#include "F_SimulatedWoolenHeartPerformanceInfo_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_WoolenHeart_SimulatedLSeq.BP_WoolenHeart_SimulatedLSeq_C.BP_CheckDestroySelf
// 0x0001 (0x0001 - 0x0000)
struct BP_WoolenHeart_SimulatedLSeq_C_BP_CheckDestroySelf final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WoolenHeart_SimulatedLSeq_C_BP_CheckDestroySelf) == 0x000001, "Wrong alignment on BP_WoolenHeart_SimulatedLSeq_C_BP_CheckDestroySelf");
static_assert(sizeof(BP_WoolenHeart_SimulatedLSeq_C_BP_CheckDestroySelf) == 0x000001, "Wrong size on BP_WoolenHeart_SimulatedLSeq_C_BP_CheckDestroySelf");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_CheckDestroySelf, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_CheckDestroySelf::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_WoolenHeart_SimulatedLSeq.BP_WoolenHeart_SimulatedLSeq_C.BP_Init
// 0x0190 (0x0190 - 0x0000)
struct BP_WoolenHeart_SimulatedLSeq_C_BP_Init final
{
public:
	class AActor*                                 SimulatedNikki;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_SimulatedWoolenHeartPerformanceInfo PerformanceInfo;                                   // 0x0010(0x0160)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          bLSPlayed;                                         // 0x0170(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsPlayingGetWoolenHeartPerformance_bPlaying; // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_172[0x6];                                      // 0x0172(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_PlayFeatureSequence_bSuccess;          // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WoolenHeart_SimulatedLSeq_C_BP_Init) == 0x000010, "Wrong alignment on BP_WoolenHeart_SimulatedLSeq_C_BP_Init");
static_assert(sizeof(BP_WoolenHeart_SimulatedLSeq_C_BP_Init) == 0x000190, "Wrong size on BP_WoolenHeart_SimulatedLSeq_C_BP_Init");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_Init, SimulatedNikki) == 0x000000, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_Init::SimulatedNikki' has a wrong offset!");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_Init, PerformanceInfo) == 0x000010, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_Init::PerformanceInfo' has a wrong offset!");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_Init, bLSPlayed) == 0x000170, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_Init::bLSPlayed' has a wrong offset!");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_Init, CallFunc_BP_IsPlayingGetWoolenHeartPerformance_bPlaying) == 0x000171, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_Init::CallFunc_BP_IsPlayingGetWoolenHeartPerformance_bPlaying' has a wrong offset!");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_Init, K2Node_DynamicCast_AsCharacter) == 0x000178, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_Init::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_Init, K2Node_DynamicCast_bSuccess) == 0x000180, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_Init::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_Init, CallFunc_BP_PlayFeatureSequence_bSuccess) == 0x000181, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_Init::CallFunc_BP_PlayFeatureSequence_bSuccess' has a wrong offset!");

// Function BP_WoolenHeart_SimulatedLSeq.BP_WoolenHeart_SimulatedLSeq_C.BP_IsPlayingGetWoolenHeartPerformance
// 0x0010 (0x0010 - 0x0000)
struct BP_WoolenHeart_SimulatedLSeq_C_BP_IsPlayingGetWoolenHeartPerformance final
{
public:
	int64                                         WoolenHeartEntiyID;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlaying;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WoolenHeart_SimulatedLSeq_C_BP_IsPlayingGetWoolenHeartPerformance) == 0x000008, "Wrong alignment on BP_WoolenHeart_SimulatedLSeq_C_BP_IsPlayingGetWoolenHeartPerformance");
static_assert(sizeof(BP_WoolenHeart_SimulatedLSeq_C_BP_IsPlayingGetWoolenHeartPerformance) == 0x000010, "Wrong size on BP_WoolenHeart_SimulatedLSeq_C_BP_IsPlayingGetWoolenHeartPerformance");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_IsPlayingGetWoolenHeartPerformance, WoolenHeartEntiyID) == 0x000000, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_IsPlayingGetWoolenHeartPerformance::WoolenHeartEntiyID' has a wrong offset!");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_IsPlayingGetWoolenHeartPerformance, bPlaying) == 0x000008, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_IsPlayingGetWoolenHeartPerformance::bPlaying' has a wrong offset!");

// Function BP_WoolenHeart_SimulatedLSeq.BP_WoolenHeart_SimulatedLSeq_C.BP_PerformanceBeginPlay
// 0x00B0 (0x00B0 - 0x0000)
struct BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceBeginPlay final
{
public:
	class UBP_MultiPlayerGroupMovementComponent_C* GroupMovementComp;                                // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_Get_IsLeaderOrFollower_Ret;            // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_Get_IsHoldingHands_Ret;                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0020(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASkeletalMeshActor*                     CallFunc_FinishSpawningActor_ReturnValue;          // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MultiPlayerGroupMovementComponent_C* CallFunc_GetComponentByClass_ReturnValue;         // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToActor_ReturnValue;             // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceBeginPlay) == 0x000010, "Wrong alignment on BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceBeginPlay");
static_assert(sizeof(BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceBeginPlay) == 0x0000B0, "Wrong size on BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceBeginPlay");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceBeginPlay, GroupMovementComp) == 0x000000, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceBeginPlay::GroupMovementComp' has a wrong offset!");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceBeginPlay, K2Node_MakeArray_Array) == 0x000008, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceBeginPlay::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceBeginPlay, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceBeginPlay::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceBeginPlay, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceBeginPlay::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceBeginPlay, CallFunc_BP_Get_IsLeaderOrFollower_Ret) == 0x00001A, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceBeginPlay::CallFunc_BP_Get_IsLeaderOrFollower_Ret' has a wrong offset!");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceBeginPlay, CallFunc_Not_PreBool_ReturnValue) == 0x00001B, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceBeginPlay::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceBeginPlay, CallFunc_BP_Get_IsHoldingHands_Ret) == 0x00001C, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceBeginPlay::CallFunc_BP_Get_IsHoldingHands_Ret' has a wrong offset!");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceBeginPlay, CallFunc_GetTransform_ReturnValue) == 0x000020, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceBeginPlay::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceBeginPlay, CallFunc_BooleanAND_ReturnValue) == 0x000080, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceBeginPlay::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceBeginPlay, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000088, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceBeginPlay::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceBeginPlay, CallFunc_FinishSpawningActor_ReturnValue) == 0x000090, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceBeginPlay::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceBeginPlay, CallFunc_IsValid_ReturnValue_2) == 0x000098, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceBeginPlay::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceBeginPlay, CallFunc_GetComponentByClass_ReturnValue) == 0x0000A0, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceBeginPlay::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceBeginPlay, CallFunc_K2_AttachToActor_ReturnValue) == 0x0000A8, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceBeginPlay::CallFunc_K2_AttachToActor_ReturnValue' has a wrong offset!");

// Function BP_WoolenHeart_SimulatedLSeq.BP_WoolenHeart_SimulatedLSeq_C.BP_PerformanceEndPlay
// 0x0020 (0x0020 - 0x0000)
struct BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceEndPlay final
{
public:
	class UBP_MultiPlayerGroupMovementComponent_C* GroupMovementComp;                                // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MultiPlayerGroupMovementComponent_C* CallFunc_GetComponentByClass_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_Get_IsHoldingHands_Ret;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_Get_IsLeaderOrFollower_Ret;            // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceEndPlay) == 0x000008, "Wrong alignment on BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceEndPlay");
static_assert(sizeof(BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceEndPlay) == 0x000020, "Wrong size on BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceEndPlay");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceEndPlay, GroupMovementComp) == 0x000000, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceEndPlay::GroupMovementComp' has a wrong offset!");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceEndPlay, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceEndPlay::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceEndPlay, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceEndPlay::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceEndPlay, CallFunc_BP_Get_IsHoldingHands_Ret) == 0x000018, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceEndPlay::CallFunc_BP_Get_IsHoldingHands_Ret' has a wrong offset!");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceEndPlay, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceEndPlay::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceEndPlay, CallFunc_BP_Get_IsLeaderOrFollower_Ret) == 0x00001A, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceEndPlay::CallFunc_BP_Get_IsLeaderOrFollower_Ret' has a wrong offset!");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceEndPlay, CallFunc_Not_PreBool_ReturnValue) == 0x00001B, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceEndPlay::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceEndPlay, CallFunc_BooleanAND_ReturnValue) == 0x00001C, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_PerformanceEndPlay::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_WoolenHeart_SimulatedLSeq.BP_WoolenHeart_SimulatedLSeq_C.BP_PlayFeatureSequence
// 0x0010 (0x0010 - 0x0000)
struct BP_WoolenHeart_SimulatedLSeq_C_BP_PlayFeatureSequence final
{
public:
	class ULevelSequence*                         LSAsset;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bSuccess;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WoolenHeart_SimulatedLSeq_C_BP_PlayFeatureSequence) == 0x000008, "Wrong alignment on BP_WoolenHeart_SimulatedLSeq_C_BP_PlayFeatureSequence");
static_assert(sizeof(BP_WoolenHeart_SimulatedLSeq_C_BP_PlayFeatureSequence) == 0x000010, "Wrong size on BP_WoolenHeart_SimulatedLSeq_C_BP_PlayFeatureSequence");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_PlayFeatureSequence, LSAsset) == 0x000000, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_PlayFeatureSequence::LSAsset' has a wrong offset!");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_PlayFeatureSequence, bSuccess) == 0x000008, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_PlayFeatureSequence::bSuccess' has a wrong offset!");

// Function BP_WoolenHeart_SimulatedLSeq.BP_WoolenHeart_SimulatedLSeq_C.BP_PlayWoolenHeartFlyPerformance
// 0x01F0 (0x01F0 - 0x0000)
struct BP_WoolenHeart_SimulatedLSeq_C_BP_PlayWoolenHeartFlyPerformance final
{
public:
	struct FF_SimulatedWoolenHeartPerformanceInfo PerformanceInfo;                                   // 0x0000(0x0160)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	double                                        DeltaDistance1;                                    // 0x0160(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PlayerDistanceVec1;                                // 0x0168(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetLocalPlayerPawn_LocalPlayerPawn;       // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_SharedWoolenHeartPerformance_C*     CallFunc_FinishSpawningActor_ReturnValue;          // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WoolenHeart_SimulatedLSeq_C_BP_PlayWoolenHeartFlyPerformance) == 0x000010, "Wrong alignment on BP_WoolenHeart_SimulatedLSeq_C_BP_PlayWoolenHeartFlyPerformance");
static_assert(sizeof(BP_WoolenHeart_SimulatedLSeq_C_BP_PlayWoolenHeartFlyPerformance) == 0x0001F0, "Wrong size on BP_WoolenHeart_SimulatedLSeq_C_BP_PlayWoolenHeartFlyPerformance");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_PlayWoolenHeartFlyPerformance, PerformanceInfo) == 0x000000, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_PlayWoolenHeartFlyPerformance::PerformanceInfo' has a wrong offset!");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_PlayWoolenHeartFlyPerformance, DeltaDistance1) == 0x000160, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_PlayWoolenHeartFlyPerformance::DeltaDistance1' has a wrong offset!");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_PlayWoolenHeartFlyPerformance, PlayerDistanceVec1) == 0x000168, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_PlayWoolenHeartFlyPerformance::PlayerDistanceVec1' has a wrong offset!");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_PlayWoolenHeartFlyPerformance, CallFunc_GetLocalPlayerPawn_LocalPlayerPawn) == 0x000180, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_PlayWoolenHeartFlyPerformance::CallFunc_GetLocalPlayerPawn_LocalPlayerPawn' has a wrong offset!");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_PlayWoolenHeartFlyPerformance, CallFunc_BreakTransform_Location) == 0x000188, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_PlayWoolenHeartFlyPerformance::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_PlayWoolenHeartFlyPerformance, CallFunc_BreakTransform_Rotation) == 0x0001A0, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_PlayWoolenHeartFlyPerformance::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_PlayWoolenHeartFlyPerformance, CallFunc_BreakTransform_Scale) == 0x0001B8, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_PlayWoolenHeartFlyPerformance::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_PlayWoolenHeartFlyPerformance, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0001D0, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_PlayWoolenHeartFlyPerformance::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_PlayWoolenHeartFlyPerformance, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x0001D8, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_PlayWoolenHeartFlyPerformance::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_PlayWoolenHeartFlyPerformance, CallFunc_FinishSpawningActor_ReturnValue) == 0x0001E0, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_PlayWoolenHeartFlyPerformance::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_PlayWoolenHeartFlyPerformance, CallFunc_IsValid_ReturnValue) == 0x0001E8, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_PlayWoolenHeartFlyPerformance::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_WoolenHeart_SimulatedLSeq.BP_WoolenHeart_SimulatedLSeq_C.BP_SetPlayingGetWoolenHeartPerformance
// 0x0010 (0x0010 - 0x0000)
struct BP_WoolenHeart_SimulatedLSeq_C_BP_SetPlayingGetWoolenHeartPerformance final
{
public:
	int64                                         WoolenHeartEntiyID;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlaying;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WoolenHeart_SimulatedLSeq_C_BP_SetPlayingGetWoolenHeartPerformance) == 0x000008, "Wrong alignment on BP_WoolenHeart_SimulatedLSeq_C_BP_SetPlayingGetWoolenHeartPerformance");
static_assert(sizeof(BP_WoolenHeart_SimulatedLSeq_C_BP_SetPlayingGetWoolenHeartPerformance) == 0x000010, "Wrong size on BP_WoolenHeart_SimulatedLSeq_C_BP_SetPlayingGetWoolenHeartPerformance");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_SetPlayingGetWoolenHeartPerformance, WoolenHeartEntiyID) == 0x000000, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_SetPlayingGetWoolenHeartPerformance::WoolenHeartEntiyID' has a wrong offset!");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_BP_SetPlayingGetWoolenHeartPerformance, bPlaying) == 0x000008, "Member 'BP_WoolenHeart_SimulatedLSeq_C_BP_SetPlayingGetWoolenHeartPerformance::bPlaying' has a wrong offset!");

// Function BP_WoolenHeart_SimulatedLSeq.BP_WoolenHeart_SimulatedLSeq_C.ExecuteUbergraph_BP_WoolenHeart_SimulatedLSeq
// 0x0008 (0x0008 - 0x0000)
struct BP_WoolenHeart_SimulatedLSeq_C_ExecuteUbergraph_BP_WoolenHeart_SimulatedLSeq final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WoolenHeart_SimulatedLSeq_C_ExecuteUbergraph_BP_WoolenHeart_SimulatedLSeq) == 0x000004, "Wrong alignment on BP_WoolenHeart_SimulatedLSeq_C_ExecuteUbergraph_BP_WoolenHeart_SimulatedLSeq");
static_assert(sizeof(BP_WoolenHeart_SimulatedLSeq_C_ExecuteUbergraph_BP_WoolenHeart_SimulatedLSeq) == 0x000008, "Wrong size on BP_WoolenHeart_SimulatedLSeq_C_ExecuteUbergraph_BP_WoolenHeart_SimulatedLSeq");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_ExecuteUbergraph_BP_WoolenHeart_SimulatedLSeq, EntryPoint) == 0x000000, "Member 'BP_WoolenHeart_SimulatedLSeq_C_ExecuteUbergraph_BP_WoolenHeart_SimulatedLSeq::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_ExecuteUbergraph_BP_WoolenHeart_SimulatedLSeq, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_WoolenHeart_SimulatedLSeq_C_ExecuteUbergraph_BP_WoolenHeart_SimulatedLSeq::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_ExecuteUbergraph_BP_WoolenHeart_SimulatedLSeq, K2Node_Event_EndPlayReason) == 0x000005, "Member 'BP_WoolenHeart_SimulatedLSeq_C_ExecuteUbergraph_BP_WoolenHeart_SimulatedLSeq::K2Node_Event_EndPlayReason' has a wrong offset!");

// Function BP_WoolenHeart_SimulatedLSeq.BP_WoolenHeart_SimulatedLSeq_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_WoolenHeart_SimulatedLSeq_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WoolenHeart_SimulatedLSeq_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_WoolenHeart_SimulatedLSeq_C_ReceiveEndPlay");
static_assert(sizeof(BP_WoolenHeart_SimulatedLSeq_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_WoolenHeart_SimulatedLSeq_C_ReceiveEndPlay");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_WoolenHeart_SimulatedLSeq_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_WoolenHeart_SimulatedLSeq.BP_WoolenHeart_SimulatedLSeq_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct BP_WoolenHeart_SimulatedLSeq_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_WoolenHeart_SimulatedLSeq_C_GetModuleName) == 0x000008, "Wrong alignment on BP_WoolenHeart_SimulatedLSeq_C_GetModuleName");
static_assert(sizeof(BP_WoolenHeart_SimulatedLSeq_C_GetModuleName) == 0x000010, "Wrong size on BP_WoolenHeart_SimulatedLSeq_C_GetModuleName");
static_assert(offsetof(BP_WoolenHeart_SimulatedLSeq_C_GetModuleName, ReturnValue) == 0x000000, "Member 'BP_WoolenHeart_SimulatedLSeq_C_GetModuleName::ReturnValue' has a wrong offset!");

}

