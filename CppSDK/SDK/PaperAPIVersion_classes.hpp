#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PaperAPIVersion

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "CoreUObject_classes.hpp"
#include "DeveloperSettings_classes.hpp"


namespace SDK
{

// Class PaperAPIVersion.PaperAPIVersionBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UPaperAPIVersionBlueprintLibrary final : public UBlueprintFunctionLibrary
{
public:
	static class FString GetCurrentAPIVersion();
	static int64 GetCurrentAPIVersionNum();
	static int64 ToVersionNum(const class FString& Ver);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PaperAPIVersionBlueprintLibrary">();
	}
	static class UPaperAPIVersionBlueprintLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPaperAPIVersionBlueprintLibrary>();
	}
};
static_assert(alignof(UPaperAPIVersionBlueprintLibrary) == 0x000008, "Wrong alignment on UPaperAPIVersionBlueprintLibrary");
static_assert(sizeof(UPaperAPIVersionBlueprintLibrary) == 0x000028, "Wrong size on UPaperAPIVersionBlueprintLibrary");

// Class PaperAPIVersion.PaperAPIVersionManager
// 0x0020 (0x0048 - 0x0028)
class UPaperAPIVersionManager final : public UObject
{
public:
	uint8                                         Pad_28[0x20];                                      // 0x0028(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PaperAPIVersionManager">();
	}
	static class UPaperAPIVersionManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPaperAPIVersionManager>();
	}
};
static_assert(alignof(UPaperAPIVersionManager) == 0x000008, "Wrong alignment on UPaperAPIVersionManager");
static_assert(sizeof(UPaperAPIVersionManager) == 0x000048, "Wrong size on UPaperAPIVersionManager");

// Class PaperAPIVersion.PaperAPIVersionSetting
// 0x0028 (0x0060 - 0x0038)
class UPaperAPIVersionSetting final : public UDeveloperSettings
{
public:
	bool                                          APIVersionEnabled;                                 // 0x0038(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 MinSupportedVersion;                               // 0x0040(0x0010)(Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UploadRemotePath;                                  // 0x0050(0x0010)(Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PaperAPIVersionSetting">();
	}
	static class UPaperAPIVersionSetting* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPaperAPIVersionSetting>();
	}
};
static_assert(alignof(UPaperAPIVersionSetting) == 0x000008, "Wrong alignment on UPaperAPIVersionSetting");
static_assert(sizeof(UPaperAPIVersionSetting) == 0x000060, "Wrong size on UPaperAPIVersionSetting");
static_assert(offsetof(UPaperAPIVersionSetting, APIVersionEnabled) == 0x000038, "Member 'UPaperAPIVersionSetting::APIVersionEnabled' has a wrong offset!");
static_assert(offsetof(UPaperAPIVersionSetting, MinSupportedVersion) == 0x000040, "Member 'UPaperAPIVersionSetting::MinSupportedVersion' has a wrong offset!");
static_assert(offsetof(UPaperAPIVersionSetting, UploadRemotePath) == 0x000050, "Member 'UPaperAPIVersionSetting::UploadRemotePath' has a wrong offset!");

}

