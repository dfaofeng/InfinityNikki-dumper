#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PaperDialogueProvider

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class PaperDialogueProvider.PaperDialogueDataManager
// 0x0058 (0x0080 - 0x0028)
class UPaperDialogueDataManager final : public UObject
{
public:
	TMap<class FName, class UPaperDialogueDataProvider2*> DialogueDataProviders;                     // 0x0028(0x0050)(Protected, NativeAccessSpecifierProtected)
	bool                                          bDragRestriction;                                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PaperDialogueDataManager">();
	}
	static class UPaperDialogueDataManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPaperDialogueDataManager>();
	}
};
static_assert(alignof(UPaperDialogueDataManager) == 0x000008, "Wrong alignment on UPaperDialogueDataManager");
static_assert(sizeof(UPaperDialogueDataManager) == 0x000080, "Wrong size on UPaperDialogueDataManager");
static_assert(offsetof(UPaperDialogueDataManager, DialogueDataProviders) == 0x000028, "Member 'UPaperDialogueDataManager::DialogueDataProviders' has a wrong offset!");
static_assert(offsetof(UPaperDialogueDataManager, bDragRestriction) == 0x000078, "Member 'UPaperDialogueDataManager::bDragRestriction' has a wrong offset!");

// Class PaperDialogueProvider.PaperDialogueDataProvider2
// 0x0000 (0x0028 - 0x0028)
class UPaperDialogueDataProvider2 : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PaperDialogueDataProvider2">();
	}
	static class UPaperDialogueDataProvider2* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPaperDialogueDataProvider2>();
	}
};
static_assert(alignof(UPaperDialogueDataProvider2) == 0x000008, "Wrong alignment on UPaperDialogueDataProvider2");
static_assert(sizeof(UPaperDialogueDataProvider2) == 0x000028, "Wrong size on UPaperDialogueDataProvider2");

// Class PaperDialogueProvider.PaperDialogueDataX12Provider
// 0x0000 (0x0028 - 0x0028)
class UPaperDialogueDataX12Provider final : public UPaperDialogueDataProvider2
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PaperDialogueDataX12Provider">();
	}
	static class UPaperDialogueDataX12Provider* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPaperDialogueDataX12Provider>();
	}
};
static_assert(alignof(UPaperDialogueDataX12Provider) == 0x000008, "Wrong alignment on UPaperDialogueDataX12Provider");
static_assert(sizeof(UPaperDialogueDataX12Provider) == 0x000028, "Wrong size on UPaperDialogueDataX12Provider");

// Class PaperDialogueProvider.PaperDialogueDataX6Provider
// 0x0000 (0x0028 - 0x0028)
class UPaperDialogueDataX6Provider final : public UPaperDialogueDataProvider2
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PaperDialogueDataX6Provider">();
	}
	static class UPaperDialogueDataX6Provider* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPaperDialogueDataX6Provider>();
	}
};
static_assert(alignof(UPaperDialogueDataX6Provider) == 0x000008, "Wrong alignment on UPaperDialogueDataX6Provider");
static_assert(sizeof(UPaperDialogueDataX6Provider) == 0x000028, "Wrong size on UPaperDialogueDataX6Provider");

// Class PaperDialogueProvider.PaperDialogueDataX7Provider
// 0x0000 (0x0028 - 0x0028)
class UPaperDialogueDataX7Provider final : public UPaperDialogueDataProvider2
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PaperDialogueDataX7Provider">();
	}
	static class UPaperDialogueDataX7Provider* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPaperDialogueDataX7Provider>();
	}
};
static_assert(alignof(UPaperDialogueDataX7Provider) == 0x000008, "Wrong alignment on UPaperDialogueDataX7Provider");
static_assert(sizeof(UPaperDialogueDataX7Provider) == 0x000028, "Wrong size on UPaperDialogueDataX7Provider");

// Class PaperDialogueProvider.PaperDialogueProviderBPLibrary
// 0x0000 (0x0028 - 0x0028)
class UPaperDialogueProviderBPLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void BindOnGroupSectionSetup(TDelegate<void(const class FName& SpeakerTag, const class FName& LineId, bool bLineBreak, bool bAllowSkip, bool bShowText, const struct FPCDGroupSetupStatus& Status)> OnGroupSectionSetup);
	static void BindOnGroupSectionStopped(TDelegate<void(bool bAutoPlayNextPart)> OnGroupSectionStopped);
	static void BindOnIdleTrackSectionExecuted(TDelegate<void(const class FName& SpeakerTag, const class FName& IdleAnimationTag)> OnIdleTrackSectionExecuted);
	static void BindOnLineSectionStopped(TDelegate<void()> OnLineSectionStopped);
	static void CallOnGroupSectionSetup(const class FName& SpeakerTag, const class FName& LineId, bool bLineBreak, bool bAllowSkip, bool bShowText, const struct FPCDGroupSetupStatus& InStatus);
	static void CallOnGroupSectionStopped(bool bAutoPlayNextPart);
	static void CallOnIdleTrackSectionExecuted(const class FName& InSpeakerTag, const class FName& IdleAnimationTag);
	static void CallOnLineSectionStopped();
	static class FString GetDialogueActorName(const class FName& ActorTag);
	static struct FTransform GetDialogueActorTransformOffset(const class FName& ActorTag);
	static class FText GetDialogueLineTextById(const class FName& InTextId);
	static bool GetX6DialogueData(const class FName& LineId, struct FPCDX6DialogueData* PCDX6DialogueData);
	static void UnBindOnGroupSectionSetup();
	static void UnBindOnGroupSectionStopped();
	static void UnBindOnIdleTrackSectionExecuted();
	static void UnBindOnLineSectionStopped();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PaperDialogueProviderBPLibrary">();
	}
	static class UPaperDialogueProviderBPLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPaperDialogueProviderBPLibrary>();
	}
};
static_assert(alignof(UPaperDialogueProviderBPLibrary) == 0x000008, "Wrong alignment on UPaperDialogueProviderBPLibrary");
static_assert(sizeof(UPaperDialogueProviderBPLibrary) == 0x000028, "Wrong size on UPaperDialogueProviderBPLibrary");

// Class PaperDialogueProvider.PCDInstancedProvider
// 0x0000 (0x0028 - 0x0028)
class UPCDInstancedProvider final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PCDInstancedProvider">();
	}
	static class UPCDInstancedProvider* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPCDInstancedProvider>();
	}
};
static_assert(alignof(UPCDInstancedProvider) == 0x000008, "Wrong alignment on UPCDInstancedProvider");
static_assert(sizeof(UPCDInstancedProvider) == 0x000028, "Wrong size on UPCDInstancedProvider");

}

