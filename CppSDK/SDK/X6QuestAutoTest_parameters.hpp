#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: X6QuestAutoTest

#include "Basic.hpp"


namespace SDK::Params
{

// Function X6QuestAutoTest.X6QuestAutoRunner.AddRunnerLog
// 0x0018 (0x0018 - 0x0000)
struct X6QuestAutoRunner_AddRunnerLog final
{
public:
	class FString                                 LogMessage;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ErrorLevel;                                        // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(X6QuestAutoRunner_AddRunnerLog) == 0x000008, "Wrong alignment on X6QuestAutoRunner_AddRunnerLog");
static_assert(sizeof(X6QuestAutoRunner_AddRunnerLog) == 0x000018, "Wrong size on X6QuestAutoRunner_AddRunnerLog");
static_assert(offsetof(X6QuestAutoRunner_AddRunnerLog, LogMessage) == 0x000000, "Member 'X6QuestAutoRunner_AddRunnerLog::LogMessage' has a wrong offset!");
static_assert(offsetof(X6QuestAutoRunner_AddRunnerLog, ErrorLevel) == 0x000010, "Member 'X6QuestAutoRunner_AddRunnerLog::ErrorLevel' has a wrong offset!");

// Function X6QuestAutoTest.X6QuestAutoRunner.OpenQuestGraph
// 0x0018 (0x0018 - 0x0000)
struct X6QuestAutoRunner_OpenQuestGraph final
{
public:
	class FString                                 GraphAssetName;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         ObjectiveID;                                       // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(X6QuestAutoRunner_OpenQuestGraph) == 0x000008, "Wrong alignment on X6QuestAutoRunner_OpenQuestGraph");
static_assert(sizeof(X6QuestAutoRunner_OpenQuestGraph) == 0x000018, "Wrong size on X6QuestAutoRunner_OpenQuestGraph");
static_assert(offsetof(X6QuestAutoRunner_OpenQuestGraph, GraphAssetName) == 0x000000, "Member 'X6QuestAutoRunner_OpenQuestGraph::GraphAssetName' has a wrong offset!");
static_assert(offsetof(X6QuestAutoRunner_OpenQuestGraph, ObjectiveID) == 0x000010, "Member 'X6QuestAutoRunner_OpenQuestGraph::ObjectiveID' has a wrong offset!");

// Function X6QuestAutoTest.X6QuestAutoRunner.StartAutoTest
// 0x0001 (0x0001 - 0x0000)
struct X6QuestAutoRunner_StartAutoTest final
{
public:
	bool                                          bEnableMemoryLeakDetection;                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(X6QuestAutoRunner_StartAutoTest) == 0x000001, "Wrong alignment on X6QuestAutoRunner_StartAutoTest");
static_assert(sizeof(X6QuestAutoRunner_StartAutoTest) == 0x000001, "Wrong size on X6QuestAutoRunner_StartAutoTest");
static_assert(offsetof(X6QuestAutoRunner_StartAutoTest, bEnableMemoryLeakDetection) == 0x000000, "Member 'X6QuestAutoRunner_StartAutoTest::bEnableMemoryLeakDetection' has a wrong offset!");

}

