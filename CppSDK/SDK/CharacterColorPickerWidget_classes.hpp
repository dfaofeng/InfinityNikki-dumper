#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharacterColorPickerWidget

#include "Basic.hpp"

#include "UMG_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// Class CharacterColorPickerWidget.CharacterPGColorPicker
// 0x0038 (0x01C0 - 0x0188)
class UCharacterPGColorPicker final : public UWidget
{
public:
	uint8                                         Pad_188[0x10];                                     // 0x0188(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CurrentColor;                                      // 0x0198(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSkipAnimationOnConstruction;                      // 0x01A8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const struct FLinearColor& NewColor)> OnColorChanged;              // 0x01B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	struct FLinearColor GetColor();
	void SetColor(const struct FLinearColor& NewColor);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CharacterPGColorPicker">();
	}
	static class UCharacterPGColorPicker* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCharacterPGColorPicker>();
	}
};
static_assert(alignof(UCharacterPGColorPicker) == 0x000008, "Wrong alignment on UCharacterPGColorPicker");
static_assert(sizeof(UCharacterPGColorPicker) == 0x0001C0, "Wrong size on UCharacterPGColorPicker");
static_assert(offsetof(UCharacterPGColorPicker, CurrentColor) == 0x000198, "Member 'UCharacterPGColorPicker::CurrentColor' has a wrong offset!");
static_assert(offsetof(UCharacterPGColorPicker, bSkipAnimationOnConstruction) == 0x0001A8, "Member 'UCharacterPGColorPicker::bSkipAnimationOnConstruction' has a wrong offset!");
static_assert(offsetof(UCharacterPGColorPicker, OnColorChanged) == 0x0001B0, "Member 'UCharacterPGColorPicker::OnColorChanged' has a wrong offset!");

}

