#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Multiplayer_MoonBoat

#include "Basic.hpp"

#include "X6Camera_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_Multiplayer_MoonBoat.BP_Multiplayer_MoonBoat_C.BP_EnableLocalChairs
// 0x0002 (0x0002 - 0x0000)
struct BP_Multiplayer_MoonBoat_C_BP_EnableLocalChairs final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Multiplayer_MoonBoat_C_BP_EnableLocalChairs) == 0x000001, "Wrong alignment on BP_Multiplayer_MoonBoat_C_BP_EnableLocalChairs");
static_assert(sizeof(BP_Multiplayer_MoonBoat_C_BP_EnableLocalChairs) == 0x000002, "Wrong size on BP_Multiplayer_MoonBoat_C_BP_EnableLocalChairs");
static_assert(offsetof(BP_Multiplayer_MoonBoat_C_BP_EnableLocalChairs, bEnable) == 0x000000, "Member 'BP_Multiplayer_MoonBoat_C_BP_EnableLocalChairs::bEnable' has a wrong offset!");
static_assert(offsetof(BP_Multiplayer_MoonBoat_C_BP_EnableLocalChairs, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_Multiplayer_MoonBoat_C_BP_EnableLocalChairs::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_Multiplayer_MoonBoat.BP_Multiplayer_MoonBoat_C.BP_HidePaddles
// 0x0001 (0x0001 - 0x0000)
struct BP_Multiplayer_MoonBoat_C_BP_HidePaddles final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Multiplayer_MoonBoat_C_BP_HidePaddles) == 0x000001, "Wrong alignment on BP_Multiplayer_MoonBoat_C_BP_HidePaddles");
static_assert(sizeof(BP_Multiplayer_MoonBoat_C_BP_HidePaddles) == 0x000001, "Wrong size on BP_Multiplayer_MoonBoat_C_BP_HidePaddles");
static_assert(offsetof(BP_Multiplayer_MoonBoat_C_BP_HidePaddles, bEnable) == 0x000000, "Member 'BP_Multiplayer_MoonBoat_C_BP_HidePaddles::bEnable' has a wrong offset!");

// Function BP_Multiplayer_MoonBoat.BP_Multiplayer_MoonBoat_C.BP_PopWideCamera
// 0x0010 (0x0010 - 0x0000)
struct BP_Multiplayer_MoonBoat_C_BP_PopWideCamera final
{
public:
	class ABP_MultiplayerMoonBoatCameraActor_C*   K2Node_DynamicCast_AsBP_Multiplayer_Moon_Boat_Camera_Actor; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_32ByteByte_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Multiplayer_MoonBoat_C_BP_PopWideCamera) == 0x000008, "Wrong alignment on BP_Multiplayer_MoonBoat_C_BP_PopWideCamera");
static_assert(sizeof(BP_Multiplayer_MoonBoat_C_BP_PopWideCamera) == 0x000010, "Wrong size on BP_Multiplayer_MoonBoat_C_BP_PopWideCamera");
static_assert(offsetof(BP_Multiplayer_MoonBoat_C_BP_PopWideCamera, K2Node_DynamicCast_AsBP_Multiplayer_Moon_Boat_Camera_Actor) == 0x000000, "Member 'BP_Multiplayer_MoonBoat_C_BP_PopWideCamera::K2Node_DynamicCast_AsBP_Multiplayer_Moon_Boat_Camera_Actor' has a wrong offset!");
static_assert(offsetof(BP_Multiplayer_MoonBoat_C_BP_PopWideCamera, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'BP_Multiplayer_MoonBoat_C_BP_PopWideCamera::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Multiplayer_MoonBoat_C_BP_PopWideCamera, CallFunc_NotEqual_32ByteByte_ReturnValue) == 0x000009, "Member 'BP_Multiplayer_MoonBoat_C_BP_PopWideCamera::CallFunc_NotEqual_32ByteByte_ReturnValue' has a wrong offset!");

// Function BP_Multiplayer_MoonBoat.BP_Multiplayer_MoonBoat_C.BP_PushWideCamera
// 0x01C8 (0x01C8 - 0x0000)
struct BP_Multiplayer_MoonBoat_C_BP_PushWideCamera final
{
public:
	class UAdvancedCamera*                        CallFunc_GetAdvancedCameraComponent_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_MultiplayerMoonBoatCameraActor_C*   K2Node_DynamicCast_AsBP_Multiplayer_Moon_Boat_Camera_Actor; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FX6CameraConfigPriority                K2Node_MakeStruct_X6CameraConfigPriority;          // 0x0030(0x0030)()
	struct FCameraBaseParamsDefine                K2Node_MakeStruct_CameraBaseParamsDefine;          // 0x0060(0x0160)(NoDestructor)
	int32                                         CallFunc_PushBaseParams_ReturnValue;               // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Multiplayer_MoonBoat_C_BP_PushWideCamera) == 0x000008, "Wrong alignment on BP_Multiplayer_MoonBoat_C_BP_PushWideCamera");
static_assert(sizeof(BP_Multiplayer_MoonBoat_C_BP_PushWideCamera) == 0x0001C8, "Wrong size on BP_Multiplayer_MoonBoat_C_BP_PushWideCamera");
static_assert(offsetof(BP_Multiplayer_MoonBoat_C_BP_PushWideCamera, CallFunc_GetAdvancedCameraComponent_ReturnValue) == 0x000000, "Member 'BP_Multiplayer_MoonBoat_C_BP_PushWideCamera::CallFunc_GetAdvancedCameraComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Multiplayer_MoonBoat_C_BP_PushWideCamera, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000008, "Member 'BP_Multiplayer_MoonBoat_C_BP_PushWideCamera::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Multiplayer_MoonBoat_C_BP_PushWideCamera, K2Node_DynamicCast_AsBP_Multiplayer_Moon_Boat_Camera_Actor) == 0x000020, "Member 'BP_Multiplayer_MoonBoat_C_BP_PushWideCamera::K2Node_DynamicCast_AsBP_Multiplayer_Moon_Boat_Camera_Actor' has a wrong offset!");
static_assert(offsetof(BP_Multiplayer_MoonBoat_C_BP_PushWideCamera, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_Multiplayer_MoonBoat_C_BP_PushWideCamera::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Multiplayer_MoonBoat_C_BP_PushWideCamera, K2Node_MakeStruct_X6CameraConfigPriority) == 0x000030, "Member 'BP_Multiplayer_MoonBoat_C_BP_PushWideCamera::K2Node_MakeStruct_X6CameraConfigPriority' has a wrong offset!");
static_assert(offsetof(BP_Multiplayer_MoonBoat_C_BP_PushWideCamera, K2Node_MakeStruct_CameraBaseParamsDefine) == 0x000060, "Member 'BP_Multiplayer_MoonBoat_C_BP_PushWideCamera::K2Node_MakeStruct_CameraBaseParamsDefine' has a wrong offset!");
static_assert(offsetof(BP_Multiplayer_MoonBoat_C_BP_PushWideCamera, CallFunc_PushBaseParams_ReturnValue) == 0x0001C0, "Member 'BP_Multiplayer_MoonBoat_C_BP_PushWideCamera::CallFunc_PushBaseParams_ReturnValue' has a wrong offset!");

// Function BP_Multiplayer_MoonBoat.BP_Multiplayer_MoonBoat_C.ExecuteUbergraph_BP_Multiplayer_MoonBoat
// 0x0050 (0x0050 - 0x0000)
struct BP_Multiplayer_MoonBoat_C_ExecuteUbergraph_BP_Multiplayer_MoonBoat final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Multiplayer_MoonBoat_C_ExecuteUbergraph_BP_Multiplayer_MoonBoat) == 0x000008, "Wrong alignment on BP_Multiplayer_MoonBoat_C_ExecuteUbergraph_BP_Multiplayer_MoonBoat");
static_assert(sizeof(BP_Multiplayer_MoonBoat_C_ExecuteUbergraph_BP_Multiplayer_MoonBoat) == 0x000050, "Wrong size on BP_Multiplayer_MoonBoat_C_ExecuteUbergraph_BP_Multiplayer_MoonBoat");
static_assert(offsetof(BP_Multiplayer_MoonBoat_C_ExecuteUbergraph_BP_Multiplayer_MoonBoat, EntryPoint) == 0x000000, "Member 'BP_Multiplayer_MoonBoat_C_ExecuteUbergraph_BP_Multiplayer_MoonBoat::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Multiplayer_MoonBoat_C_ExecuteUbergraph_BP_Multiplayer_MoonBoat, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_Multiplayer_MoonBoat_C_ExecuteUbergraph_BP_Multiplayer_MoonBoat::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Multiplayer_MoonBoat_C_ExecuteUbergraph_BP_Multiplayer_MoonBoat, K2Node_CustomEvent_Loaded) == 0x000018, "Member 'BP_Multiplayer_MoonBoat_C_ExecuteUbergraph_BP_Multiplayer_MoonBoat::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_Multiplayer_MoonBoat_C_ExecuteUbergraph_BP_Multiplayer_MoonBoat, Temp_object_Variable) == 0x000020, "Member 'BP_Multiplayer_MoonBoat_C_ExecuteUbergraph_BP_Multiplayer_MoonBoat::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Multiplayer_MoonBoat_C_ExecuteUbergraph_BP_Multiplayer_MoonBoat, K2Node_DynamicCast_AsAnim_Montage) == 0x000028, "Member 'BP_Multiplayer_MoonBoat_C_ExecuteUbergraph_BP_Multiplayer_MoonBoat::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(BP_Multiplayer_MoonBoat_C_ExecuteUbergraph_BP_Multiplayer_MoonBoat, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_Multiplayer_MoonBoat_C_ExecuteUbergraph_BP_Multiplayer_MoonBoat::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Multiplayer_MoonBoat_C_ExecuteUbergraph_BP_Multiplayer_MoonBoat, CallFunc_GetAnimInstance_ReturnValue) == 0x000038, "Member 'BP_Multiplayer_MoonBoat_C_ExecuteUbergraph_BP_Multiplayer_MoonBoat::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Multiplayer_MoonBoat_C_ExecuteUbergraph_BP_Multiplayer_MoonBoat, CallFunc_Montage_Play_ReturnValue) == 0x000040, "Member 'BP_Multiplayer_MoonBoat_C_ExecuteUbergraph_BP_Multiplayer_MoonBoat::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Multiplayer_MoonBoat_C_ExecuteUbergraph_BP_Multiplayer_MoonBoat, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000048, "Member 'BP_Multiplayer_MoonBoat_C_ExecuteUbergraph_BP_Multiplayer_MoonBoat::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");

// Function BP_Multiplayer_MoonBoat.BP_Multiplayer_MoonBoat_C.InitDynamicMat
// 0x0020 (0x0020 - 0x0000)
struct BP_Multiplayer_MoonBoat_C_InitDynamicMat final
{
public:
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue_1;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Multiplayer_MoonBoat_C_InitDynamicMat) == 0x000008, "Wrong alignment on BP_Multiplayer_MoonBoat_C_InitDynamicMat");
static_assert(sizeof(BP_Multiplayer_MoonBoat_C_InitDynamicMat) == 0x000020, "Wrong size on BP_Multiplayer_MoonBoat_C_InitDynamicMat");
static_assert(offsetof(BP_Multiplayer_MoonBoat_C_InitDynamicMat, CallFunc_GetMaterial_ReturnValue) == 0x000000, "Member 'BP_Multiplayer_MoonBoat_C_InitDynamicMat::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Multiplayer_MoonBoat_C_InitDynamicMat, CallFunc_GetMaterial_ReturnValue_1) == 0x000008, "Member 'BP_Multiplayer_MoonBoat_C_InitDynamicMat::CallFunc_GetMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Multiplayer_MoonBoat_C_InitDynamicMat, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000010, "Member 'BP_Multiplayer_MoonBoat_C_InitDynamicMat::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Multiplayer_MoonBoat_C_InitDynamicMat, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000018, "Member 'BP_Multiplayer_MoonBoat_C_InitDynamicMat::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");

// Function BP_Multiplayer_MoonBoat.BP_Multiplayer_MoonBoat_C.OnLoaded_193B7AB14E6F22C128123E9D03C50285
// 0x0008 (0x0008 - 0x0000)
struct BP_Multiplayer_MoonBoat_C_OnLoaded_193B7AB14E6F22C128123E9D03C50285 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Multiplayer_MoonBoat_C_OnLoaded_193B7AB14E6F22C128123E9D03C50285) == 0x000008, "Wrong alignment on BP_Multiplayer_MoonBoat_C_OnLoaded_193B7AB14E6F22C128123E9D03C50285");
static_assert(sizeof(BP_Multiplayer_MoonBoat_C_OnLoaded_193B7AB14E6F22C128123E9D03C50285) == 0x000008, "Wrong size on BP_Multiplayer_MoonBoat_C_OnLoaded_193B7AB14E6F22C128123E9D03C50285");
static_assert(offsetof(BP_Multiplayer_MoonBoat_C_OnLoaded_193B7AB14E6F22C128123E9D03C50285, Loaded) == 0x000000, "Member 'BP_Multiplayer_MoonBoat_C_OnLoaded_193B7AB14E6F22C128123E9D03C50285::Loaded' has a wrong offset!");

// Function BP_Multiplayer_MoonBoat.BP_Multiplayer_MoonBoat_C.SetDayTime
// 0x0018 (0x0018 - 0x0000)
struct BP_Multiplayer_MoonBoat_C_SetDayTime final
{
public:
	double                                        DayWeight;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetScalarParameterValue_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetScalarParameterValue_ReturnValue_1;    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_InValue_ImplicitCast; // 0x0010(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_InValue_ImplicitCast_1; // 0x0014(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Multiplayer_MoonBoat_C_SetDayTime) == 0x000008, "Wrong alignment on BP_Multiplayer_MoonBoat_C_SetDayTime");
static_assert(sizeof(BP_Multiplayer_MoonBoat_C_SetDayTime) == 0x000018, "Wrong size on BP_Multiplayer_MoonBoat_C_SetDayTime");
static_assert(offsetof(BP_Multiplayer_MoonBoat_C_SetDayTime, DayWeight) == 0x000000, "Member 'BP_Multiplayer_MoonBoat_C_SetDayTime::DayWeight' has a wrong offset!");
static_assert(offsetof(BP_Multiplayer_MoonBoat_C_SetDayTime, CallFunc_SetScalarParameterValue_ReturnValue) == 0x000008, "Member 'BP_Multiplayer_MoonBoat_C_SetDayTime::CallFunc_SetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Multiplayer_MoonBoat_C_SetDayTime, CallFunc_SetScalarParameterValue_ReturnValue_1) == 0x000009, "Member 'BP_Multiplayer_MoonBoat_C_SetDayTime::CallFunc_SetScalarParameterValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Multiplayer_MoonBoat_C_SetDayTime, CallFunc_IsValid_ReturnValue) == 0x00000A, "Member 'BP_Multiplayer_MoonBoat_C_SetDayTime::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Multiplayer_MoonBoat_C_SetDayTime, CallFunc_IsValid_ReturnValue_1) == 0x00000B, "Member 'BP_Multiplayer_MoonBoat_C_SetDayTime::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Multiplayer_MoonBoat_C_SetDayTime, CallFunc_BooleanAND_ReturnValue) == 0x00000C, "Member 'BP_Multiplayer_MoonBoat_C_SetDayTime::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Multiplayer_MoonBoat_C_SetDayTime, CallFunc_SetScalarParameterValue_InValue_ImplicitCast) == 0x000010, "Member 'BP_Multiplayer_MoonBoat_C_SetDayTime::CallFunc_SetScalarParameterValue_InValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Multiplayer_MoonBoat_C_SetDayTime, CallFunc_SetScalarParameterValue_InValue_ImplicitCast_1) == 0x000014, "Member 'BP_Multiplayer_MoonBoat_C_SetDayTime::CallFunc_SetScalarParameterValue_InValue_ImplicitCast_1' has a wrong offset!");

// Function BP_Multiplayer_MoonBoat.BP_Multiplayer_MoonBoat_C.SetInvisibleWall
// 0x0001 (0x0001 - 0x0000)
struct BP_Multiplayer_MoonBoat_C_SetInvisibleWall final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Multiplayer_MoonBoat_C_SetInvisibleWall) == 0x000001, "Wrong alignment on BP_Multiplayer_MoonBoat_C_SetInvisibleWall");
static_assert(sizeof(BP_Multiplayer_MoonBoat_C_SetInvisibleWall) == 0x000001, "Wrong size on BP_Multiplayer_MoonBoat_C_SetInvisibleWall");
static_assert(offsetof(BP_Multiplayer_MoonBoat_C_SetInvisibleWall, bEnable) == 0x000000, "Member 'BP_Multiplayer_MoonBoat_C_SetInvisibleWall::bEnable' has a wrong offset!");

// Function BP_Multiplayer_MoonBoat.BP_Multiplayer_MoonBoat_C.SetNightTime
// 0x0018 (0x0018 - 0x0000)
struct BP_Multiplayer_MoonBoat_C_SetNightTime final
{
public:
	double                                        NightWeight;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetScalarParameterValue_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetScalarParameterValue_ReturnValue_1;    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_InValue_ImplicitCast; // 0x0010(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_InValue_ImplicitCast_1; // 0x0014(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Multiplayer_MoonBoat_C_SetNightTime) == 0x000008, "Wrong alignment on BP_Multiplayer_MoonBoat_C_SetNightTime");
static_assert(sizeof(BP_Multiplayer_MoonBoat_C_SetNightTime) == 0x000018, "Wrong size on BP_Multiplayer_MoonBoat_C_SetNightTime");
static_assert(offsetof(BP_Multiplayer_MoonBoat_C_SetNightTime, NightWeight) == 0x000000, "Member 'BP_Multiplayer_MoonBoat_C_SetNightTime::NightWeight' has a wrong offset!");
static_assert(offsetof(BP_Multiplayer_MoonBoat_C_SetNightTime, CallFunc_SetScalarParameterValue_ReturnValue) == 0x000008, "Member 'BP_Multiplayer_MoonBoat_C_SetNightTime::CallFunc_SetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Multiplayer_MoonBoat_C_SetNightTime, CallFunc_SetScalarParameterValue_ReturnValue_1) == 0x000009, "Member 'BP_Multiplayer_MoonBoat_C_SetNightTime::CallFunc_SetScalarParameterValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Multiplayer_MoonBoat_C_SetNightTime, CallFunc_IsValid_ReturnValue) == 0x00000A, "Member 'BP_Multiplayer_MoonBoat_C_SetNightTime::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Multiplayer_MoonBoat_C_SetNightTime, CallFunc_IsValid_ReturnValue_1) == 0x00000B, "Member 'BP_Multiplayer_MoonBoat_C_SetNightTime::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Multiplayer_MoonBoat_C_SetNightTime, CallFunc_BooleanAND_ReturnValue) == 0x00000C, "Member 'BP_Multiplayer_MoonBoat_C_SetNightTime::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Multiplayer_MoonBoat_C_SetNightTime, CallFunc_SetScalarParameterValue_InValue_ImplicitCast) == 0x000010, "Member 'BP_Multiplayer_MoonBoat_C_SetNightTime::CallFunc_SetScalarParameterValue_InValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Multiplayer_MoonBoat_C_SetNightTime, CallFunc_SetScalarParameterValue_InValue_ImplicitCast_1) == 0x000014, "Member 'BP_Multiplayer_MoonBoat_C_SetNightTime::CallFunc_SetScalarParameterValue_InValue_ImplicitCast_1' has a wrong offset!");

}

