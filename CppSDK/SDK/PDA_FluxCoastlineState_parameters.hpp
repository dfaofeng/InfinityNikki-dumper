#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PDA_FluxCoastlineState

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function PDA_FluxCoastlineState.PDA_FluxCoastlineState_C.ApplyNiagaraData
// 0x0030 (0x0030 - 0x0000)
struct PDA_FluxCoastlineState_C_ApplyNiagaraData final
{
public:
	class UNiagaraComponent*                      NiagaraSystem;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          UseGround;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetSurfaceHeight_SurfaceHeight;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_1;   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_2;   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PDA_FluxCoastlineState_C_ApplyNiagaraData) == 0x000008, "Wrong alignment on PDA_FluxCoastlineState_C_ApplyNiagaraData");
static_assert(sizeof(PDA_FluxCoastlineState_C_ApplyNiagaraData) == 0x000030, "Wrong size on PDA_FluxCoastlineState_C_ApplyNiagaraData");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyNiagaraData, NiagaraSystem) == 0x000000, "Member 'PDA_FluxCoastlineState_C_ApplyNiagaraData::NiagaraSystem' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyNiagaraData, UseGround) == 0x000008, "Member 'PDA_FluxCoastlineState_C_ApplyNiagaraData::UseGround' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyNiagaraData, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000010, "Member 'PDA_FluxCoastlineState_C_ApplyNiagaraData::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyNiagaraData, CallFunc_GetSurfaceHeight_SurfaceHeight) == 0x000018, "Member 'PDA_FluxCoastlineState_C_ApplyNiagaraData::CallFunc_GetSurfaceHeight_SurfaceHeight' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyNiagaraData, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000020, "Member 'PDA_FluxCoastlineState_C_ApplyNiagaraData::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyNiagaraData, CallFunc_SetFloatParameter_Param_ImplicitCast_1) == 0x000024, "Member 'PDA_FluxCoastlineState_C_ApplyNiagaraData::CallFunc_SetFloatParameter_Param_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyNiagaraData, CallFunc_SetFloatParameter_Param_ImplicitCast_2) == 0x000028, "Member 'PDA_FluxCoastlineState_C_ApplyNiagaraData::CallFunc_SetFloatParameter_Param_ImplicitCast_2' has a wrong offset!");

// Function PDA_FluxCoastlineState.PDA_FluxCoastlineState_C.CopyPropertiesToObject
// 0x0028 (0x0028 - 0x0000)
struct PDA_FluxCoastlineState_C_CopyPropertiesToObject final
{
public:
	class UObject*                                Destination;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Done;                                              // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPDA_FluxCoastlineState_C*              TargetObject;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UPDA_FluxCoastlineState_C*              K2Node_DynamicCast_AsPDA_Flux_Coastline_State;     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PDA_FluxCoastlineState_C_CopyPropertiesToObject) == 0x000008, "Wrong alignment on PDA_FluxCoastlineState_C_CopyPropertiesToObject");
static_assert(sizeof(PDA_FluxCoastlineState_C_CopyPropertiesToObject) == 0x000028, "Wrong size on PDA_FluxCoastlineState_C_CopyPropertiesToObject");
static_assert(offsetof(PDA_FluxCoastlineState_C_CopyPropertiesToObject, Destination) == 0x000000, "Member 'PDA_FluxCoastlineState_C_CopyPropertiesToObject::Destination' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_CopyPropertiesToObject, Done) == 0x000008, "Member 'PDA_FluxCoastlineState_C_CopyPropertiesToObject::Done' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_CopyPropertiesToObject, TargetObject) == 0x000010, "Member 'PDA_FluxCoastlineState_C_CopyPropertiesToObject::TargetObject' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_CopyPropertiesToObject, K2Node_DynamicCast_AsPDA_Flux_Coastline_State) == 0x000018, "Member 'PDA_FluxCoastlineState_C_CopyPropertiesToObject::K2Node_DynamicCast_AsPDA_Flux_Coastline_State' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_CopyPropertiesToObject, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'PDA_FluxCoastlineState_C_CopyPropertiesToObject::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function PDA_FluxCoastlineState.PDA_FluxCoastlineState_C.ExecuteUbergraph_PDA_FluxCoastlineState
// 0x0004 (0x0004 - 0x0000)
struct PDA_FluxCoastlineState_C_ExecuteUbergraph_PDA_FluxCoastlineState final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PDA_FluxCoastlineState_C_ExecuteUbergraph_PDA_FluxCoastlineState) == 0x000004, "Wrong alignment on PDA_FluxCoastlineState_C_ExecuteUbergraph_PDA_FluxCoastlineState");
static_assert(sizeof(PDA_FluxCoastlineState_C_ExecuteUbergraph_PDA_FluxCoastlineState) == 0x000004, "Wrong size on PDA_FluxCoastlineState_C_ExecuteUbergraph_PDA_FluxCoastlineState");
static_assert(offsetof(PDA_FluxCoastlineState_C_ExecuteUbergraph_PDA_FluxCoastlineState, EntryPoint) == 0x000000, "Member 'PDA_FluxCoastlineState_C_ExecuteUbergraph_PDA_FluxCoastlineState::EntryPoint' has a wrong offset!");

// Function PDA_FluxCoastlineState.PDA_FluxCoastlineState_C.GetExternalReferences
// 0x0040 (0x0040 - 0x0000)
struct PDA_FluxCoastlineState_C_GetExternalReferences final
{
public:
	TArray<class UTexture*>                       Objects;                                           // 0x0000(0x0010)(Parm, OutParm)
	TArray<class UTexture*>                       Temp;                                              // 0x0010(0x0010)(Edit, BlueprintVisible)
	const class UTexture*                         Temp_object_Variable;                              // 0x0020(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UTexture*>                       K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PDA_FluxCoastlineState_C_GetExternalReferences) == 0x000008, "Wrong alignment on PDA_FluxCoastlineState_C_GetExternalReferences");
static_assert(sizeof(PDA_FluxCoastlineState_C_GetExternalReferences) == 0x000040, "Wrong size on PDA_FluxCoastlineState_C_GetExternalReferences");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetExternalReferences, Objects) == 0x000000, "Member 'PDA_FluxCoastlineState_C_GetExternalReferences::Objects' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetExternalReferences, Temp) == 0x000010, "Member 'PDA_FluxCoastlineState_C_GetExternalReferences::Temp' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetExternalReferences, Temp_object_Variable) == 0x000020, "Member 'PDA_FluxCoastlineState_C_GetExternalReferences::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetExternalReferences, K2Node_MakeArray_Array) == 0x000028, "Member 'PDA_FluxCoastlineState_C_GetExternalReferences::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetExternalReferences, CallFunc_Array_RemoveItem_ReturnValue) == 0x000038, "Member 'PDA_FluxCoastlineState_C_GetExternalReferences::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function PDA_FluxCoastlineState.PDA_FluxCoastlineState_C.GetVolumeTransform
// 0x0170 (0x0170 - 0x0000)
struct PDA_FluxCoastlineState_C_GetVolumeTransform final
{
public:
	struct FVector                                ExtraSize;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Scale;                                             // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ZOffsetScale;                                      // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             NewParam;                                          // 0x0040(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_108[0x8];                                      // 0x0108(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0110(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PDA_FluxCoastlineState_C_GetVolumeTransform) == 0x000010, "Wrong alignment on PDA_FluxCoastlineState_C_GetVolumeTransform");
static_assert(sizeof(PDA_FluxCoastlineState_C_GetVolumeTransform) == 0x000170, "Wrong size on PDA_FluxCoastlineState_C_GetVolumeTransform");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetVolumeTransform, ExtraSize) == 0x000000, "Member 'PDA_FluxCoastlineState_C_GetVolumeTransform::ExtraSize' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetVolumeTransform, Scale) == 0x000018, "Member 'PDA_FluxCoastlineState_C_GetVolumeTransform::Scale' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetVolumeTransform, ZOffsetScale) == 0x000030, "Member 'PDA_FluxCoastlineState_C_GetVolumeTransform::ZOffsetScale' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetVolumeTransform, NewParam) == 0x000040, "Member 'PDA_FluxCoastlineState_C_GetVolumeTransform::NewParam' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetVolumeTransform, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A0, "Member 'PDA_FluxCoastlineState_C_GetVolumeTransform::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetVolumeTransform, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000B8, "Member 'PDA_FluxCoastlineState_C_GetVolumeTransform::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetVolumeTransform, CallFunc_BreakVector_X) == 0x0000D0, "Member 'PDA_FluxCoastlineState_C_GetVolumeTransform::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetVolumeTransform, CallFunc_BreakVector_Y) == 0x0000D8, "Member 'PDA_FluxCoastlineState_C_GetVolumeTransform::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetVolumeTransform, CallFunc_BreakVector_Z) == 0x0000E0, "Member 'PDA_FluxCoastlineState_C_GetVolumeTransform::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetVolumeTransform, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000E8, "Member 'PDA_FluxCoastlineState_C_GetVolumeTransform::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetVolumeTransform, CallFunc_MakeVector_ReturnValue) == 0x0000F0, "Member 'PDA_FluxCoastlineState_C_GetVolumeTransform::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetVolumeTransform, CallFunc_MakeTransform_ReturnValue) == 0x000110, "Member 'PDA_FluxCoastlineState_C_GetVolumeTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function PDA_FluxCoastlineState.PDA_FluxCoastlineState_C.SetDomain
// 0x0050 (0x0050 - 0x0000)
struct PDA_FluxCoastlineState_C_SetDomain final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Size;                                              // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              Resolution;                                        // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PixelSize;                                         // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CaptureOffset_0;                                   // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Width;                                             // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PDA_FluxCoastlineState_C_SetDomain) == 0x000008, "Wrong alignment on PDA_FluxCoastlineState_C_SetDomain");
static_assert(sizeof(PDA_FluxCoastlineState_C_SetDomain) == 0x000050, "Wrong size on PDA_FluxCoastlineState_C_SetDomain");
static_assert(offsetof(PDA_FluxCoastlineState_C_SetDomain, Location) == 0x000000, "Member 'PDA_FluxCoastlineState_C_SetDomain::Location' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_SetDomain, Size) == 0x000018, "Member 'PDA_FluxCoastlineState_C_SetDomain::Size' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_SetDomain, Resolution) == 0x000030, "Member 'PDA_FluxCoastlineState_C_SetDomain::Resolution' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_SetDomain, PixelSize) == 0x000038, "Member 'PDA_FluxCoastlineState_C_SetDomain::PixelSize' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_SetDomain, CaptureOffset_0) == 0x000040, "Member 'PDA_FluxCoastlineState_C_SetDomain::CaptureOffset_0' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_SetDomain, Width) == 0x000048, "Member 'PDA_FluxCoastlineState_C_SetDomain::Width' has a wrong offset!");

// Function PDA_FluxCoastlineState.PDA_FluxCoastlineState_C.SetTextures
// 0x0010 (0x0010 - 0x0000)
struct PDA_FluxCoastlineState_C_SetTextures final
{
public:
	class UTexture*                               WorldCoastline;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               WorldGround;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PDA_FluxCoastlineState_C_SetTextures) == 0x000008, "Wrong alignment on PDA_FluxCoastlineState_C_SetTextures");
static_assert(sizeof(PDA_FluxCoastlineState_C_SetTextures) == 0x000010, "Wrong size on PDA_FluxCoastlineState_C_SetTextures");
static_assert(offsetof(PDA_FluxCoastlineState_C_SetTextures, WorldCoastline) == 0x000000, "Member 'PDA_FluxCoastlineState_C_SetTextures::WorldCoastline' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_SetTextures, WorldGround) == 0x000008, "Member 'PDA_FluxCoastlineState_C_SetTextures::WorldGround' has a wrong offset!");

// Function PDA_FluxCoastlineState.PDA_FluxCoastlineState_C.ApplyMaterialData
// 0x0118 (0x0118 - 0x0000)
struct PDA_FluxCoastlineState_C_ApplyMaterialData final
{
public:
	TArray<class UMaterialInstanceDynamic*>       MaterialInstances;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_1;                         // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_2;                         // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetWorldToTextureUV_WorldToTextureUV;     // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_3;                         // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_4;                         // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_5;                         // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_6;                         // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetPixelSize_WorldToSimulationUV;         // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PDA_FluxCoastlineState_C_ApplyMaterialData) == 0x000008, "Wrong alignment on PDA_FluxCoastlineState_C_ApplyMaterialData");
static_assert(sizeof(PDA_FluxCoastlineState_C_ApplyMaterialData) == 0x000118, "Wrong size on PDA_FluxCoastlineState_C_ApplyMaterialData");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, MaterialInstances) == 0x000000, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::MaterialInstances' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, Temp_int_Variable) == 0x000010, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, Temp_int_Variable_1) == 0x000014, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, Temp_int_Variable_2) == 0x000020, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, Temp_int_Variable_3) == 0x000024, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, CallFunc_Add_IntInt_ReturnValue_2) == 0x000028, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, CallFunc_Add_IntInt_ReturnValue_3) == 0x00002C, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, Temp_int_Variable_4) == 0x000030, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, Temp_int_Variable_5) == 0x000034, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, CallFunc_Add_IntInt_ReturnValue_4) == 0x000038, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, CallFunc_Add_IntInt_ReturnValue_5) == 0x00003C, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, Temp_int_Variable_6) == 0x000040, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, CallFunc_Add_IntInt_ReturnValue_6) == 0x000044, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000048, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, CallFunc_Array_Get_Item) == 0x000050, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, CallFunc_Array_Length_ReturnValue_1) == 0x000068, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, CallFunc_Less_IntInt_ReturnValue_1) == 0x00006C, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, CallFunc_Array_Get_Item_2) == 0x000070, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, CallFunc_Array_Length_ReturnValue_2) == 0x000078, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, CallFunc_Less_IntInt_ReturnValue_2) == 0x00007C, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, CallFunc_BreakVector_X) == 0x000080, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, CallFunc_BreakVector_Y) == 0x000088, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, CallFunc_BreakVector_Z) == 0x000090, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000098, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, CallFunc_GetWorldToTextureUV_WorldToTextureUV) == 0x0000A0, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::CallFunc_GetWorldToTextureUV_WorldToTextureUV' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, CallFunc_Array_Get_Item_3) == 0x0000B0, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, CallFunc_Array_Get_Item_4) == 0x0000B8, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, CallFunc_Array_Length_ReturnValue_3) == 0x0000C0, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, CallFunc_Array_Length_ReturnValue_4) == 0x0000C4, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000C8, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, CallFunc_Less_IntInt_ReturnValue_4) == 0x0000C9, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, CallFunc_Array_Get_Item_5) == 0x0000D0, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, CallFunc_Array_Length_ReturnValue_5) == 0x0000D8, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, CallFunc_Less_IntInt_ReturnValue_5) == 0x0000DC, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, CallFunc_Array_Get_Item_6) == 0x0000E0, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, CallFunc_Array_Length_ReturnValue_6) == 0x0000E8, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, CallFunc_Less_IntInt_ReturnValue_6) == 0x0000EC, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x0000F0, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, CallFunc_GetPixelSize_WorldToSimulationUV) == 0x000100, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::CallFunc_GetPixelSize_WorldToSimulationUV' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000110, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_ApplyMaterialData, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000114, "Member 'PDA_FluxCoastlineState_C_ApplyMaterialData::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");

// Function PDA_FluxCoastlineState.PDA_FluxCoastlineState_C.GetPixelSize
// 0x0070 (0x0070 - 0x0000)
struct PDA_FluxCoastlineState_C_GetPixelSize final
{
public:
	struct FLinearColor                           WorldToSimulationUV;                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_IntPointToVector2D_ReturnValue;      // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue;      // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_B_ImplicitCast;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_A_ImplicitCast;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_R_ImplicitCast;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_G_ImplicitCast;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PDA_FluxCoastlineState_C_GetPixelSize) == 0x000008, "Wrong alignment on PDA_FluxCoastlineState_C_GetPixelSize");
static_assert(sizeof(PDA_FluxCoastlineState_C_GetPixelSize) == 0x000070, "Wrong size on PDA_FluxCoastlineState_C_GetPixelSize");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetPixelSize, WorldToSimulationUV) == 0x000000, "Member 'PDA_FluxCoastlineState_C_GetPixelSize::WorldToSimulationUV' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetPixelSize, CallFunc_Conv_IntPointToVector2D_ReturnValue) == 0x000010, "Member 'PDA_FluxCoastlineState_C_GetPixelSize::CallFunc_Conv_IntPointToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetPixelSize, CallFunc_Divide_Vector2DVector2D_ReturnValue) == 0x000020, "Member 'PDA_FluxCoastlineState_C_GetPixelSize::CallFunc_Divide_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetPixelSize, CallFunc_BreakVector2D_X) == 0x000030, "Member 'PDA_FluxCoastlineState_C_GetPixelSize::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetPixelSize, CallFunc_BreakVector2D_Y) == 0x000038, "Member 'PDA_FluxCoastlineState_C_GetPixelSize::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetPixelSize, CallFunc_BreakVector2D_X_1) == 0x000040, "Member 'PDA_FluxCoastlineState_C_GetPixelSize::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetPixelSize, CallFunc_BreakVector2D_Y_1) == 0x000048, "Member 'PDA_FluxCoastlineState_C_GetPixelSize::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetPixelSize, CallFunc_MakeColor_ReturnValue) == 0x000050, "Member 'PDA_FluxCoastlineState_C_GetPixelSize::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetPixelSize, CallFunc_MakeColor_B_ImplicitCast) == 0x000060, "Member 'PDA_FluxCoastlineState_C_GetPixelSize::CallFunc_MakeColor_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetPixelSize, CallFunc_MakeColor_A_ImplicitCast) == 0x000064, "Member 'PDA_FluxCoastlineState_C_GetPixelSize::CallFunc_MakeColor_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetPixelSize, CallFunc_MakeColor_R_ImplicitCast) == 0x000068, "Member 'PDA_FluxCoastlineState_C_GetPixelSize::CallFunc_MakeColor_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetPixelSize, CallFunc_MakeColor_G_ImplicitCast) == 0x00006C, "Member 'PDA_FluxCoastlineState_C_GetPixelSize::CallFunc_MakeColor_G_ImplicitCast' has a wrong offset!");

// Function PDA_FluxCoastlineState.PDA_FluxCoastlineState_C.GetSurfaceHeight
// 0x0028 (0x0028 - 0x0000)
struct PDA_FluxCoastlineState_C_GetSurfaceHeight final
{
public:
	double                                        SurfaceHeight;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PDA_FluxCoastlineState_C_GetSurfaceHeight) == 0x000008, "Wrong alignment on PDA_FluxCoastlineState_C_GetSurfaceHeight");
static_assert(sizeof(PDA_FluxCoastlineState_C_GetSurfaceHeight) == 0x000028, "Wrong size on PDA_FluxCoastlineState_C_GetSurfaceHeight");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetSurfaceHeight, SurfaceHeight) == 0x000000, "Member 'PDA_FluxCoastlineState_C_GetSurfaceHeight::SurfaceHeight' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetSurfaceHeight, CallFunc_BreakVector_X) == 0x000008, "Member 'PDA_FluxCoastlineState_C_GetSurfaceHeight::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetSurfaceHeight, CallFunc_BreakVector_Y) == 0x000010, "Member 'PDA_FluxCoastlineState_C_GetSurfaceHeight::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetSurfaceHeight, CallFunc_BreakVector_Z) == 0x000018, "Member 'PDA_FluxCoastlineState_C_GetSurfaceHeight::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetSurfaceHeight, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'PDA_FluxCoastlineState_C_GetSurfaceHeight::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function PDA_FluxCoastlineState.PDA_FluxCoastlineState_C.GetTextureSize
// 0x0040 (0x0040 - 0x0000)
struct PDA_FluxCoastlineState_C_GetTextureSize final
{
public:
	struct FIntPoint                              Resolution;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 K2Node_DynamicCast_AsTexture_Render_Target_2D;     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Blueprint_GetSizeY_ReturnValue;           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Blueprint_GetSizeX_ReturnValue;           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint_1;                      // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PDA_FluxCoastlineState_C_GetTextureSize) == 0x000008, "Wrong alignment on PDA_FluxCoastlineState_C_GetTextureSize");
static_assert(sizeof(PDA_FluxCoastlineState_C_GetTextureSize) == 0x000040, "Wrong size on PDA_FluxCoastlineState_C_GetTextureSize");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetTextureSize, Resolution) == 0x000000, "Member 'PDA_FluxCoastlineState_C_GetTextureSize::Resolution' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetTextureSize, K2Node_DynamicCast_AsTexture_Render_Target_2D) == 0x000008, "Member 'PDA_FluxCoastlineState_C_GetTextureSize::K2Node_DynamicCast_AsTexture_Render_Target_2D' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetTextureSize, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'PDA_FluxCoastlineState_C_GetTextureSize::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetTextureSize, K2Node_DynamicCast_AsTexture_2D) == 0x000018, "Member 'PDA_FluxCoastlineState_C_GetTextureSize::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetTextureSize, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'PDA_FluxCoastlineState_C_GetTextureSize::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetTextureSize, CallFunc_Blueprint_GetSizeY_ReturnValue) == 0x000024, "Member 'PDA_FluxCoastlineState_C_GetTextureSize::CallFunc_Blueprint_GetSizeY_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetTextureSize, CallFunc_Blueprint_GetSizeX_ReturnValue) == 0x000028, "Member 'PDA_FluxCoastlineState_C_GetTextureSize::CallFunc_Blueprint_GetSizeX_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetTextureSize, K2Node_MakeStruct_IntPoint) == 0x00002C, "Member 'PDA_FluxCoastlineState_C_GetTextureSize::K2Node_MakeStruct_IntPoint' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetTextureSize, K2Node_MakeStruct_IntPoint_1) == 0x000034, "Member 'PDA_FluxCoastlineState_C_GetTextureSize::K2Node_MakeStruct_IntPoint_1' has a wrong offset!");

// Function PDA_FluxCoastlineState.PDA_FluxCoastlineState_C.GetWorldToTextureUV
// 0x0090 (0x0090 - 0x0000)
struct PDA_FluxCoastlineState_C_GetWorldToTextureUV final
{
public:
	struct FLinearColor                           WorldToTextureUV;                                  // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_B_ImplicitCast;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_A_ImplicitCast;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_R_ImplicitCast;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_G_ImplicitCast;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PDA_FluxCoastlineState_C_GetWorldToTextureUV) == 0x000008, "Wrong alignment on PDA_FluxCoastlineState_C_GetWorldToTextureUV");
static_assert(sizeof(PDA_FluxCoastlineState_C_GetWorldToTextureUV) == 0x000090, "Wrong size on PDA_FluxCoastlineState_C_GetWorldToTextureUV");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetWorldToTextureUV, WorldToTextureUV) == 0x000000, "Member 'PDA_FluxCoastlineState_C_GetWorldToTextureUV::WorldToTextureUV' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetWorldToTextureUV, CallFunc_BreakVector_X) == 0x000010, "Member 'PDA_FluxCoastlineState_C_GetWorldToTextureUV::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetWorldToTextureUV, CallFunc_BreakVector_Y) == 0x000018, "Member 'PDA_FluxCoastlineState_C_GetWorldToTextureUV::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetWorldToTextureUV, CallFunc_BreakVector_Z) == 0x000020, "Member 'PDA_FluxCoastlineState_C_GetWorldToTextureUV::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetWorldToTextureUV, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000028, "Member 'PDA_FluxCoastlineState_C_GetWorldToTextureUV::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetWorldToTextureUV, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000040, "Member 'PDA_FluxCoastlineState_C_GetWorldToTextureUV::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetWorldToTextureUV, CallFunc_BreakVector_X_1) == 0x000058, "Member 'PDA_FluxCoastlineState_C_GetWorldToTextureUV::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetWorldToTextureUV, CallFunc_BreakVector_Y_1) == 0x000060, "Member 'PDA_FluxCoastlineState_C_GetWorldToTextureUV::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetWorldToTextureUV, CallFunc_BreakVector_Z_1) == 0x000068, "Member 'PDA_FluxCoastlineState_C_GetWorldToTextureUV::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetWorldToTextureUV, CallFunc_MakeColor_ReturnValue) == 0x000070, "Member 'PDA_FluxCoastlineState_C_GetWorldToTextureUV::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetWorldToTextureUV, CallFunc_MakeColor_B_ImplicitCast) == 0x000080, "Member 'PDA_FluxCoastlineState_C_GetWorldToTextureUV::CallFunc_MakeColor_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetWorldToTextureUV, CallFunc_MakeColor_A_ImplicitCast) == 0x000084, "Member 'PDA_FluxCoastlineState_C_GetWorldToTextureUV::CallFunc_MakeColor_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetWorldToTextureUV, CallFunc_MakeColor_R_ImplicitCast) == 0x000088, "Member 'PDA_FluxCoastlineState_C_GetWorldToTextureUV::CallFunc_MakeColor_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PDA_FluxCoastlineState_C_GetWorldToTextureUV, CallFunc_MakeColor_G_ImplicitCast) == 0x00008C, "Member 'PDA_FluxCoastlineState_C_GetWorldToTextureUV::CallFunc_MakeColor_G_ImplicitCast' has a wrong offset!");

}

