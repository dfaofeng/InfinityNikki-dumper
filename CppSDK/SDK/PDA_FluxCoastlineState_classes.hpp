#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PDA_FluxCoastlineState

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass PDA_FluxCoastlineState.PDA_FluxCoastlineState_C
// 0x0068 (0x0098 - 0x0030)
class UPDA_FluxCoastlineState_C final : public UPrimaryDataAsset
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0030(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FIntPoint                              WorldResolution;                                   // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WorldPixelSize;                                    // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               WorldGroundMap;                                    // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AreaLocation;                                      // 0x0050(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AreaSize;                                          // 0x0068(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               WorldCoastlineMap;                                 // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CaptureOffset;                                     // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CoastWidth;                                        // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ApplyNiagaraData(class UNiagaraComponent* NiagaraSystem, bool UseGround);
	void ClearExternalReferences();
	void CopyPropertiesToObject(class UObject* Destination, bool* Done);
	void ExecuteUbergraph_PDA_FluxCoastlineState(int32 EntryPoint);
	void GetExternalReferences(TArray<class UTexture*>* Objects);
	void GetVolumeTransform(const struct FVector& ExtraSize, const struct FVector& Scale, double ZOffsetScale, struct FTransform* NewParam);
	void SetDomain(const struct FVector& Location, const struct FVector& Size, const struct FIntPoint& Resolution, double PixelSize, double CaptureOffset_0, double Width);
	void SetTextures(class UTexture* WorldCoastline, class UTexture* WorldGround);

	void ApplyMaterialData(TArray<class UMaterialInstanceDynamic*>& MaterialInstances) const;
	void GetPixelSize(struct FLinearColor* WorldToSimulationUV) const;
	void GetSurfaceHeight(double* SurfaceHeight) const;
	void GetTextureSize(struct FIntPoint* Resolution) const;
	void GetWorldToTextureUV(struct FLinearColor* WorldToTextureUV) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PDA_FluxCoastlineState_C">();
	}
	static class UPDA_FluxCoastlineState_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPDA_FluxCoastlineState_C>();
	}
};
static_assert(alignof(UPDA_FluxCoastlineState_C) == 0x000008, "Wrong alignment on UPDA_FluxCoastlineState_C");
static_assert(sizeof(UPDA_FluxCoastlineState_C) == 0x000098, "Wrong size on UPDA_FluxCoastlineState_C");
static_assert(offsetof(UPDA_FluxCoastlineState_C, UberGraphFrame) == 0x000030, "Member 'UPDA_FluxCoastlineState_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPDA_FluxCoastlineState_C, WorldResolution) == 0x000038, "Member 'UPDA_FluxCoastlineState_C::WorldResolution' has a wrong offset!");
static_assert(offsetof(UPDA_FluxCoastlineState_C, WorldPixelSize) == 0x000040, "Member 'UPDA_FluxCoastlineState_C::WorldPixelSize' has a wrong offset!");
static_assert(offsetof(UPDA_FluxCoastlineState_C, WorldGroundMap) == 0x000048, "Member 'UPDA_FluxCoastlineState_C::WorldGroundMap' has a wrong offset!");
static_assert(offsetof(UPDA_FluxCoastlineState_C, AreaLocation) == 0x000050, "Member 'UPDA_FluxCoastlineState_C::AreaLocation' has a wrong offset!");
static_assert(offsetof(UPDA_FluxCoastlineState_C, AreaSize) == 0x000068, "Member 'UPDA_FluxCoastlineState_C::AreaSize' has a wrong offset!");
static_assert(offsetof(UPDA_FluxCoastlineState_C, WorldCoastlineMap) == 0x000080, "Member 'UPDA_FluxCoastlineState_C::WorldCoastlineMap' has a wrong offset!");
static_assert(offsetof(UPDA_FluxCoastlineState_C, CaptureOffset) == 0x000088, "Member 'UPDA_FluxCoastlineState_C::CaptureOffset' has a wrong offset!");
static_assert(offsetof(UPDA_FluxCoastlineState_C, CoastWidth) == 0x000090, "Member 'UPDA_FluxCoastlineState_C::CoastWidth' has a wrong offset!");

}

