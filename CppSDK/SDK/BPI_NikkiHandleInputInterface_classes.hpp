#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_NikkiHandleInputInterface

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "Engine_structs.hpp"
#include "EInputDeviceKeyType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPI_NikkiHandleInputInterface.BPI_NikkiHandleInputInterface_C
// 0x0000 (0x0000 - 0x0000)
class IBPI_NikkiHandleInputInterface_C final : public IInterface
{
public:
	void BPI_OnCharacterMovementModeChanged(EMovementMode PrevMovementMode, EMovementMode NewMovementMode, uint8 PrevCustomMode, uint8 NewCustomMode);
	void BPI_OnMovementModeDisabled();
	void BPI_OnMovementModeEnabled();
	void BPI_OnRotateCameraInput(const struct FVector& InputVector, EInputDeviceKeyType DeviceType);
	void BPI_OnSelfControlledByPlayer(class APawn* PlayerPawn);
	void BPI_OnSelfLoseControlledByPlayer();
	void BPI_SetPlayerToControlActor(class AActor* ActorToControl, bool* Controlled);
	void InputAction_Crash(bool PressedOrRelease);
	void InputAction_Jump(bool PressedOrRelease);
	void InputAction_Sprint(bool PressedOrRelease);
	void InputAction_Walk(bool PressOrRelease);
	void OnMovementMoveXAxisAction(double AxisValue);
	void OnMovementMoveYAxisAction(double AxisValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPI_NikkiHandleInputInterface_C">();
	}
	static class IBPI_NikkiHandleInputInterface_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<IBPI_NikkiHandleInputInterface_C>();
	}
};
static_assert(alignof(IBPI_NikkiHandleInputInterface_C) == 0x000001, "Wrong alignment on IBPI_NikkiHandleInputInterface_C");
static_assert(sizeof(IBPI_NikkiHandleInputInterface_C) == 0x000001, "Wrong size on IBPI_NikkiHandleInputInterface_C");

}

