#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: X6StateMachine

#include "Basic.hpp"

#include "X6StateMachine_classes.hpp"
#include "X6StateMachine_parameters.hpp"


namespace SDK
{

// Function X6StateMachine.X6StateMachineComponent.CanSetServerState
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6StateMachineComponent::CanSetServerState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6StateMachineComponent", "CanSetServerState");

	Params::X6StateMachineComponent_CanSetServerState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function X6StateMachine.X6StateMachineComponent.ForceSetLocalStateByStateID
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const uint8                             StateID                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFSM_Transition*                        Transition                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6StateMachineComponent::ForceSetLocalStateByStateID(const uint8 StateID, EFSM_Transition* Transition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6StateMachineComponent", "ForceSetLocalStateByStateID");

	Params::X6StateMachineComponent_ForceSetLocalStateByStateID Parms{};

	Parms.StateID = StateID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Transition != nullptr)
		*Transition = Parms.Transition;

	return Parms.ReturnValue;
}


// Function X6StateMachine.X6StateMachineComponent.GetCurrentStateID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UX6StateMachineComponent::GetCurrentStateID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6StateMachineComponent", "GetCurrentStateID");

	Params::X6StateMachineComponent_GetCurrentStateID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6StateMachine.X6StateMachineComponent.GetCurrentStateName
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UX6StateMachineComponent::GetCurrentStateName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6StateMachineComponent", "GetCurrentStateName");

	Params::X6StateMachineComponent_GetCurrentStateName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6StateMachine.X6StateMachineComponent.GetNetIDByLua
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// int64*                                  NetID                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6StateMachineComponent::GetNetIDByLua(int64* NetID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6StateMachineComponent", "GetNetIDByLua");

	Params::X6StateMachineComponent_GetNetIDByLua Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NetID != nullptr)
		*NetID = Parms.NetID;
}


// Function X6StateMachine.X6StateMachineComponent.IsCurrentState
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const uint8                             CheckStateID                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6StateMachineComponent::IsCurrentState(const uint8 CheckStateID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6StateMachineComponent", "IsCurrentState");

	Params::X6StateMachineComponent_IsCurrentState Parms{};

	Parms.CheckStateID = CheckStateID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6StateMachine.X6StateMachineComponent.SetLocalState
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    Name_0                                                 (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFSM_Transition*                        Transition                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6StateMachineComponent::SetLocalState(const class FString& Name_0, EFSM_Transition* Transition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6StateMachineComponent", "SetLocalState");

	Params::X6StateMachineComponent_SetLocalState Parms{};

	Parms.Name_0 = std::move(Name_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Transition != nullptr)
		*Transition = Parms.Transition;

	return Parms.ReturnValue;
}


// Function X6StateMachine.X6StateMachineComponent.SetLocalStateByStateID
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const uint8                             StateID                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFSM_Transition*                        Transition                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6StateMachineComponent::SetLocalStateByStateID(const uint8 StateID, EFSM_Transition* Transition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6StateMachineComponent", "SetLocalStateByStateID");

	Params::X6StateMachineComponent_SetLocalStateByStateID Parms{};

	Parms.StateID = StateID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Transition != nullptr)
		*Transition = Parms.Transition;

	return Parms.ReturnValue;
}


// Function X6StateMachine.X6StateMachineComponent.SetServerState
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const class FString&                    OwnerPath                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    SelfName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32&                            IncurrentStateID                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6StateMachineComponent::SetServerState(const class FString& OwnerPath, const class FString& SelfName, const class FString& Name_0, const int32& IncurrentStateID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6StateMachineComponent", "SetServerState");

	Params::X6StateMachineComponent_SetServerState Parms{};

	Parms.OwnerPath = std::move(OwnerPath);
	Parms.SelfName = std::move(SelfName);
	Parms.Name_0 = std::move(Name_0);
	Parms.IncurrentStateID = IncurrentStateID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6StateMachine.X6StateMachineComponent.SetState
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    Name_0                                                 (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFSM_Transition*                        Transition                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6StateMachineComponent::SetState(const class FString& Name_0, EFSM_Transition* Transition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6StateMachineComponent", "SetState");

	Params::X6StateMachineComponent_SetState Parms{};

	Parms.Name_0 = std::move(Name_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Transition != nullptr)
		*Transition = Parms.Transition;
}


// Function X6StateMachine.X6StateMachineComponent.SetStateByStateID
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const uint8                             StateID                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFSM_Transition*                        Transition                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6StateMachineComponent::SetStateByStateID(const uint8 StateID, EFSM_Transition* Transition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6StateMachineComponent", "SetStateByStateID");

	Params::X6StateMachineComponent_SetStateByStateID Parms{};

	Parms.StateID = StateID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Transition != nullptr)
		*Transition = Parms.Transition;
}


// Function X6StateMachine.X6StateMachineComponent.SetStateTimeStamp
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6StateMachineComponent::SetStateTimeStamp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6StateMachineComponent", "SetStateTimeStamp");

	Params::X6StateMachineComponent_SetStateTimeStamp Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

