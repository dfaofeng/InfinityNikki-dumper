#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PCGAreaCheck

#include "Basic.hpp"

#include "PCGAreaCheck_classes.hpp"
#include "PCGAreaCheck_parameters.hpp"


namespace SDK
{

// Function PCGAreaCheck.PCGAreaCheckBlueprintLibrary.AddActorToUEDataLayer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    LayerName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPCGAreaCheckBlueprintLibrary::AddActorToUEDataLayer(class AActor* InActor, const class FString& LayerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PCGAreaCheckBlueprintLibrary", "AddActorToUEDataLayer");

	Params::PCGAreaCheckBlueprintLibrary_AddActorToUEDataLayer Parms{};

	Parms.InActor = InActor;
	Parms.LayerName = std::move(LayerName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PCGAreaCheck.PCGAreaCheckBlueprintLibrary.AddActorToUEDataLayerFromAsset
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDataLayerAsset*                  LayerAsset                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPCGAreaCheckBlueprintLibrary::AddActorToUEDataLayerFromAsset(class AActor* InActor, class UDataLayerAsset* LayerAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PCGAreaCheckBlueprintLibrary", "AddActorToUEDataLayerFromAsset");

	Params::PCGAreaCheckBlueprintLibrary_AddActorToUEDataLayerFromAsset Parms{};

	Parms.InActor = InActor;
	Parms.LayerAsset = LayerAsset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PCGAreaCheck.PCGAreaCheckBlueprintLibrary.BuildLandscapeActorBuffToImage
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    FilePath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class FString>&            CollectLayers                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const class FString&                    BuffImagePath                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPCGAreaBuffType                        BuffType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPCGAreaCheckBlueprintLibrary::BuildLandscapeActorBuffToImage(const class FString& FilePath, const TArray<class FString>& CollectLayers, const class FString& BuffImagePath, EPCGAreaBuffType BuffType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PCGAreaCheckBlueprintLibrary", "BuildLandscapeActorBuffToImage");

	Params::PCGAreaCheckBlueprintLibrary_BuildLandscapeActorBuffToImage Parms{};

	Parms.FilePath = std::move(FilePath);
	Parms.CollectLayers = std::move(CollectLayers);
	Parms.BuffImagePath = std::move(BuffImagePath);
	Parms.BuffType = BuffType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PCGAreaCheck.PCGAreaCheckBlueprintLibrary.BuildLandscapesBuffToImage
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    FilePath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class FString>&            CollectLayers                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const class FString&                    BuffImagePath                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPCGAreaBuffType                        BuffType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPCGAreaCheckBlueprintLibrary::BuildLandscapesBuffToImage(const class FString& FilePath, const TArray<class FString>& CollectLayers, const class FString& BuffImagePath, EPCGAreaBuffType BuffType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PCGAreaCheckBlueprintLibrary", "BuildLandscapesBuffToImage");

	Params::PCGAreaCheckBlueprintLibrary_BuildLandscapesBuffToImage Parms{};

	Parms.FilePath = std::move(FilePath);
	Parms.CollectLayers = std::move(CollectLayers);
	Parms.BuffImagePath = std::move(BuffImagePath);
	Parms.BuffType = BuffType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PCGAreaCheck.PCGAreaCheckBlueprintLibrary.ChangeSelectedObjectPosTerrainData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    ReplacedLayerName                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    DeleteLayerFix                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ExpendTimes                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPCGAreaCheckBlueprintLibrary::ChangeSelectedObjectPosTerrainData(const class FString& ReplacedLayerName, const class FString& DeleteLayerFix, int32 ExpendTimes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PCGAreaCheckBlueprintLibrary", "ChangeSelectedObjectPosTerrainData");

	Params::PCGAreaCheckBlueprintLibrary_ChangeSelectedObjectPosTerrainData Parms{};

	Parms.ReplacedLayerName = std::move(ReplacedLayerName);
	Parms.DeleteLayerFix = std::move(DeleteLayerFix);
	Parms.ExpendTimes = ExpendTimes;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PCGAreaCheck.PCGAreaCheckBlueprintLibrary.CollectLandscapeBuff
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UAreaCheckSubsystem*              AreaCheckSubsystem                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ALandscapeProxy*                  LandscapeProxy                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    landscapeName                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    FilePath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPCGAreaCheckBlueprintLibrary::CollectLandscapeBuff(class UAreaCheckSubsystem* AreaCheckSubsystem, class ALandscapeProxy* LandscapeProxy, const class FString& landscapeName, const class FString& FilePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PCGAreaCheckBlueprintLibrary", "CollectLandscapeBuff");

	Params::PCGAreaCheckBlueprintLibrary_CollectLandscapeBuff Parms{};

	Parms.AreaCheckSubsystem = AreaCheckSubsystem;
	Parms.LandscapeProxy = LandscapeProxy;
	Parms.landscapeName = std::move(landscapeName);
	Parms.FilePath = std::move(FilePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PCGAreaCheck.PCGAreaCheckBlueprintLibrary.CollectLandscapesBuff
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UAreaCheckSubsystem*              AreaCheckSubsystem                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    FilePath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPCGAreaCheckBlueprintLibrary::CollectLandscapesBuff(class UAreaCheckSubsystem* AreaCheckSubsystem, const class FString& FilePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PCGAreaCheckBlueprintLibrary", "CollectLandscapesBuff");

	Params::PCGAreaCheckBlueprintLibrary_CollectLandscapesBuff Parms{};

	Parms.AreaCheckSubsystem = AreaCheckSubsystem;
	Parms.FilePath = std::move(FilePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PCGAreaCheck.PCGAreaCheckBlueprintLibrary.CombinLandscapesHeightAreaDataToPng
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    ExportPath                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    TileFilePath                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    LayerName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class ALandscapeProxy*>&   InSelectedLandscapeProxy                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   MinZ                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MaxZ                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPCGAreaCheckBlueprintLibrary::CombinLandscapesHeightAreaDataToPng(const class FString& ExportPath, const class FString& TileFilePath, const class FString& LayerName, const TArray<class ALandscapeProxy*>& InSelectedLandscapeProxy, int32 MinZ, int32 MaxZ)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PCGAreaCheckBlueprintLibrary", "CombinLandscapesHeightAreaDataToPng");

	Params::PCGAreaCheckBlueprintLibrary_CombinLandscapesHeightAreaDataToPng Parms{};

	Parms.ExportPath = std::move(ExportPath);
	Parms.TileFilePath = std::move(TileFilePath);
	Parms.LayerName = std::move(LayerName);
	Parms.InSelectedLandscapeProxy = std::move(InSelectedLandscapeProxy);
	Parms.MinZ = MinZ;
	Parms.MaxZ = MaxZ;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PCGAreaCheck.PCGAreaCheckBlueprintLibrary.CombinLandscapesMapDataToPng
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    ExportPath                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    TileFilePath                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    LayerName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class ALandscapeProxy*>&   InSelectedLandscapeProxy                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   StepSizeX                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   StepSizeY                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPCGAreaCheckBlueprintLibrary::CombinLandscapesMapDataToPng(const class FString& ExportPath, const class FString& TileFilePath, const class FString& LayerName, const TArray<class ALandscapeProxy*>& InSelectedLandscapeProxy, int32 StepSizeX, int32 StepSizeY)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PCGAreaCheckBlueprintLibrary", "CombinLandscapesMapDataToPng");

	Params::PCGAreaCheckBlueprintLibrary_CombinLandscapesMapDataToPng Parms{};

	Parms.ExportPath = std::move(ExportPath);
	Parms.TileFilePath = std::move(TileFilePath);
	Parms.LayerName = std::move(LayerName);
	Parms.InSelectedLandscapeProxy = std::move(InSelectedLandscapeProxy);
	Parms.StepSizeX = StepSizeX;
	Parms.StepSizeY = StepSizeY;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PCGAreaCheck.PCGAreaCheckBlueprintLibrary.ConcludeAreaFacePoint
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   StartPos                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FBox&                      CheckArea                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// TMap<struct FIntVector, struct FPCGAreaCheckPointInfo>*OutResult                                              (Parm, OutParm, NativeAccessSpecifierPublic)
// TMap<struct FIntVector, struct FVector>*OutErrPoint                                            (Parm, OutParm, NativeAccessSpecifierPublic)
// const TArray<class AActor*>&            LineTraceIgnoreActors                                  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// float                                   StepSize                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MaxSearchSize                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPCGAreaCheckBlueprintLibrary::ConcludeAreaFacePoint(const struct FVector& StartPos, const struct FBox& CheckArea, TMap<struct FIntVector, struct FPCGAreaCheckPointInfo>* OutResult, TMap<struct FIntVector, struct FVector>* OutErrPoint, const TArray<class AActor*>& LineTraceIgnoreActors, float StepSize, int32 MaxSearchSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PCGAreaCheckBlueprintLibrary", "ConcludeAreaFacePoint");

	Params::PCGAreaCheckBlueprintLibrary_ConcludeAreaFacePoint Parms{};

	Parms.StartPos = std::move(StartPos);
	Parms.CheckArea = std::move(CheckArea);
	Parms.LineTraceIgnoreActors = std::move(LineTraceIgnoreActors);
	Parms.StepSize = StepSize;
	Parms.MaxSearchSize = MaxSearchSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutResult != nullptr)
		*OutResult = std::move(Parms.OutResult);

	if (OutErrPoint != nullptr)
		*OutErrPoint = std::move(Parms.OutErrPoint);

	return Parms.ReturnValue;
}


// Function PCGAreaCheck.PCGAreaCheckBlueprintLibrary.ExportAllLandscapesToVTPng
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const class FString&                    ExportPath                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDataTable*                       AreaMap                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   BlockWidth                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   BlockHeight                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBox                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FBox UPCGAreaCheckBlueprintLibrary::ExportAllLandscapesToVTPng(const class FString& ExportPath, class UDataTable* AreaMap, int32 BlockWidth, int32 BlockHeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PCGAreaCheckBlueprintLibrary", "ExportAllLandscapesToVTPng");

	Params::PCGAreaCheckBlueprintLibrary_ExportAllLandscapesToVTPng Parms{};

	Parms.ExportPath = std::move(ExportPath);
	Parms.AreaMap = AreaMap;
	Parms.BlockWidth = BlockWidth;
	Parms.BlockHeight = BlockHeight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PCGAreaCheck.PCGAreaCheckBlueprintLibrary.ExportBoxDataToPng
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FBox&                      BoundingBox                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// const class FString&                    ExportPath                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDataTable*                       AreaMap                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class FString>&            ExtCaptureLayers                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const class FString&                    Prefix                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TextureSize                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bExportDataWithTextureSize                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUseBlackPlane                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPCGAreaCheckBlueprintLibrary::ExportBoxDataToPng(const struct FBox& BoundingBox, const class FString& ExportPath, class UDataTable* AreaMap, const TArray<class FString>& ExtCaptureLayers, const class FString& Prefix, int32 TextureSize, bool bExportDataWithTextureSize, bool bUseBlackPlane)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PCGAreaCheckBlueprintLibrary", "ExportBoxDataToPng");

	Params::PCGAreaCheckBlueprintLibrary_ExportBoxDataToPng Parms{};

	Parms.BoundingBox = std::move(BoundingBox);
	Parms.ExportPath = std::move(ExportPath);
	Parms.AreaMap = AreaMap;
	Parms.ExtCaptureLayers = std::move(ExtCaptureLayers);
	Parms.Prefix = std::move(Prefix);
	Parms.TextureSize = TextureSize;
	Parms.bExportDataWithTextureSize = bExportDataWithTextureSize;
	Parms.bUseBlackPlane = bUseBlackPlane;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PCGAreaCheck.PCGAreaCheckBlueprintLibrary.ExportLandscapesMapDataToPng
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    ExportPath                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDataTable*                       AreaMap                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class FString>&            ExtCaptureLayers                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   TextureSize                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CameraZOffset                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bExportDataWithTextureSize                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPCGAreaCheckBlueprintLibrary::ExportLandscapesMapDataToPng(const class FString& ExportPath, class UDataTable* AreaMap, const TArray<class FString>& ExtCaptureLayers, int32 TextureSize, float CameraZOffset, bool bExportDataWithTextureSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PCGAreaCheckBlueprintLibrary", "ExportLandscapesMapDataToPng");

	Params::PCGAreaCheckBlueprintLibrary_ExportLandscapesMapDataToPng Parms{};

	Parms.ExportPath = std::move(ExportPath);
	Parms.AreaMap = AreaMap;
	Parms.ExtCaptureLayers = std::move(ExtCaptureLayers);
	Parms.TextureSize = TextureSize;
	Parms.CameraZOffset = CameraZOffset;
	Parms.bExportDataWithTextureSize = bExportDataWithTextureSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PCGAreaCheck.PCGAreaCheckBlueprintLibrary.ExportLandscapesMapDataToPng_Async
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const class FString&                    ExportPath                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDataTable*                       AreaMap                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class ALandscapeProxy*>&   InSelectedLandscapeProxy                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const TArray<class FString>&            ExtCaptureLayers                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   TextureSize                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CameraZOffset                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bExportDataWithTextureSize                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPCGAreaCheckBlueprintLibrary::ExportLandscapesMapDataToPng_Async(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, const class FString& ExportPath, class UDataTable* AreaMap, const TArray<class ALandscapeProxy*>& InSelectedLandscapeProxy, const TArray<class FString>& ExtCaptureLayers, int32 TextureSize, float CameraZOffset, bool bExportDataWithTextureSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PCGAreaCheckBlueprintLibrary", "ExportLandscapesMapDataToPng_Async");

	Params::PCGAreaCheckBlueprintLibrary_ExportLandscapesMapDataToPng_Async Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.ExportPath = std::move(ExportPath);
	Parms.AreaMap = AreaMap;
	Parms.InSelectedLandscapeProxy = std::move(InSelectedLandscapeProxy);
	Parms.ExtCaptureLayers = std::move(ExtCaptureLayers);
	Parms.TextureSize = TextureSize;
	Parms.CameraZOffset = CameraZOffset;
	Parms.bExportDataWithTextureSize = bExportDataWithTextureSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PCGAreaCheck.PCGAreaCheckBlueprintLibrary.ExportLandscapesToPng
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    ExportPath                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDataTable*                       AreaMap                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Width                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Height                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Scale                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPCGAreaCheckBlueprintLibrary::ExportLandscapesToPng(const class FString& ExportPath, class UDataTable* AreaMap, int32 Width, int32 Height, float Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PCGAreaCheckBlueprintLibrary", "ExportLandscapesToPng");

	Params::PCGAreaCheckBlueprintLibrary_ExportLandscapesToPng Parms{};

	Parms.ExportPath = std::move(ExportPath);
	Parms.AreaMap = AreaMap;
	Parms.Width = Width;
	Parms.Height = Height;
	Parms.Scale = Scale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PCGAreaCheck.PCGAreaCheckBlueprintLibrary.ExportLandscapesToPngWithBlockSize
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    ExportPath                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDataTable*                       AreaMap                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   BlockWidth                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   BlockHeight                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPCGAreaCheckBlueprintLibrary::ExportLandscapesToPngWithBlockSize(const class FString& ExportPath, class UDataTable* AreaMap, int32 BlockWidth, int32 BlockHeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PCGAreaCheckBlueprintLibrary", "ExportLandscapesToPngWithBlockSize");

	Params::PCGAreaCheckBlueprintLibrary_ExportLandscapesToPngWithBlockSize Parms{};

	Parms.ExportPath = std::move(ExportPath);
	Parms.AreaMap = AreaMap;
	Parms.BlockWidth = BlockWidth;
	Parms.BlockHeight = BlockHeight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PCGAreaCheck.PCGAreaCheckBlueprintLibrary.ExportLandscapeWeightLayerInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    FilePath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPCGAreaCheckBlueprintLibrary::ExportLandscapeWeightLayerInfo(const class FString& FilePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PCGAreaCheckBlueprintLibrary", "ExportLandscapeWeightLayerInfo");

	Params::PCGAreaCheckBlueprintLibrary_ExportLandscapeWeightLayerInfo Parms{};

	Parms.FilePath = std::move(FilePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PCGAreaCheck.PCGAreaCheckBlueprintLibrary.GetBoxOverlapActors
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FBox&                      InBox                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bOnlyWithStaticMesh                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> UPCGAreaCheckBlueprintLibrary::GetBoxOverlapActors(const struct FBox& InBox, bool bOnlyWithStaticMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PCGAreaCheckBlueprintLibrary", "GetBoxOverlapActors");

	Params::PCGAreaCheckBlueprintLibrary_GetBoxOverlapActors Parms{};

	Parms.InBox = std::move(InBox);
	Parms.bOnlyWithStaticMesh = bOnlyWithStaticMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PCGAreaCheck.PCGAreaCheckBlueprintLibrary.GetEditorWorldCounterpartActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UPCGAreaCheckBlueprintLibrary::GetEditorWorldCounterpartActor(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PCGAreaCheckBlueprintLibrary", "GetEditorWorldCounterpartActor");

	Params::PCGAreaCheckBlueprintLibrary_GetEditorWorldCounterpartActor Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PCGAreaCheck.PCGAreaCheckBlueprintLibrary.GetHashString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InString                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPCGAreaCheckBlueprintLibrary::GetHashString(const class FString& InString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PCGAreaCheckBlueprintLibrary", "GetHashString");

	Params::PCGAreaCheckBlueprintLibrary_GetHashString Parms{};

	Parms.InString = std::move(InString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PCGAreaCheck.PCGAreaCheckBlueprintLibrary.GetInAreaActors
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const TArray<class USplineComponent*>&  InSplines                                              (ConstParm, Parm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> UPCGAreaCheckBlueprintLibrary::GetInAreaActors(const TArray<class USplineComponent*>& InSplines)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PCGAreaCheckBlueprintLibrary", "GetInAreaActors");

	Params::PCGAreaCheckBlueprintLibrary_GetInAreaActors Parms{};

	Parms.InSplines = std::move(InSplines);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PCGAreaCheck.PCGAreaCheckBlueprintLibrary.GetLandscapeComponentByLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   InLocation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULandscapeComponent*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULandscapeComponent* UPCGAreaCheckBlueprintLibrary::GetLandscapeComponentByLocation(const struct FVector& InLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PCGAreaCheckBlueprintLibrary", "GetLandscapeComponentByLocation");

	Params::PCGAreaCheckBlueprintLibrary_GetLandscapeComponentByLocation Parms{};

	Parms.InLocation = std::move(InLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PCGAreaCheck.PCGAreaCheckBlueprintLibrary.GetLandscapeComponentsByLocation
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   InLocation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBox*                            OutBox                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   SizeX                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SizeY                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class ULandscapeComponent*>      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class ULandscapeComponent*> UPCGAreaCheckBlueprintLibrary::GetLandscapeComponentsByLocation(const struct FVector& InLocation, struct FBox* OutBox, int32 SizeX, int32 SizeY)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PCGAreaCheckBlueprintLibrary", "GetLandscapeComponentsByLocation");

	Params::PCGAreaCheckBlueprintLibrary_GetLandscapeComponentsByLocation Parms{};

	Parms.InLocation = std::move(InLocation);
	Parms.SizeX = SizeX;
	Parms.SizeY = SizeY;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutBox != nullptr)
		*OutBox = std::move(Parms.OutBox);

	return Parms.ReturnValue;
}


// Function PCGAreaCheck.PCGAreaCheckBlueprintLibrary.GetLandscapeWeightLayerOrder
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FBox&                      AreaBox                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// const TArray<class FName>&              IgnoreLayers                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<float>*                          OutTotalWeightValue                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UPCGAreaCheckBlueprintLibrary::GetLandscapeWeightLayerOrder(const struct FBox& AreaBox, const TArray<class FName>& IgnoreLayers, TArray<float>* OutTotalWeightValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PCGAreaCheckBlueprintLibrary", "GetLandscapeWeightLayerOrder");

	Params::PCGAreaCheckBlueprintLibrary_GetLandscapeWeightLayerOrder Parms{};

	Parms.AreaBox = std::move(AreaBox);
	Parms.IgnoreLayers = std::move(IgnoreLayers);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTotalWeightValue != nullptr)
		*OutTotalWeightValue = std::move(Parms.OutTotalWeightValue);

	return Parms.ReturnValue;
}


// Function PCGAreaCheck.PCGAreaCheckBlueprintLibrary.GetPluginBaseDir
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    PluginName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPCGAreaCheckBlueprintLibrary::GetPluginBaseDir(const class FString& PluginName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PCGAreaCheckBlueprintLibrary", "GetPluginBaseDir");

	Params::PCGAreaCheckBlueprintLibrary_GetPluginBaseDir Parms{};

	Parms.PluginName = std::move(PluginName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PCGAreaCheck.PCGAreaCheckBlueprintLibrary.GetSelectedComponents
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class UActorComponent*>          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class UActorComponent*> UPCGAreaCheckBlueprintLibrary::GetSelectedComponents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PCGAreaCheckBlueprintLibrary", "GetSelectedComponents");

	Params::PCGAreaCheckBlueprintLibrary_GetSelectedComponents Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PCGAreaCheck.PCGAreaCheckBlueprintLibrary.RemoveActorFromUEDataLayer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    LayerName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPCGAreaCheckBlueprintLibrary::RemoveActorFromUEDataLayer(class AActor* InActor, const class FString& LayerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PCGAreaCheckBlueprintLibrary", "RemoveActorFromUEDataLayer");

	Params::PCGAreaCheckBlueprintLibrary_RemoveActorFromUEDataLayer Parms{};

	Parms.InActor = InActor;
	Parms.LayerName = std::move(LayerName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PCGAreaCheck.PCGAreaCheckBlueprintLibrary.RemoveInstanceInSplineArea
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class USplineComponent*                 Spline                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class FString>&            FilterKeys                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   MinSize                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CurveStep                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPCGAreaCheckBlueprintLibrary::RemoveInstanceInSplineArea(class USplineComponent* Spline, const TArray<class FString>& FilterKeys, float MinSize, float CurveStep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PCGAreaCheckBlueprintLibrary", "RemoveInstanceInSplineArea");

	Params::PCGAreaCheckBlueprintLibrary_RemoveInstanceInSplineArea Parms{};

	Parms.Spline = Spline;
	Parms.FilterKeys = std::move(FilterKeys);
	Parms.MinSize = MinSize;
	Parms.CurveStep = CurveStep;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PCGAreaCheck.PCGAreaCheckBlueprintLibrary.RemoveStaticMeshCoveredGrass
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    ReplacedLayerName                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ShrinkTimes                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPCGAreaCheckBlueprintLibrary::RemoveStaticMeshCoveredGrass(const class FString& ReplacedLayerName, int32 ShrinkTimes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PCGAreaCheckBlueprintLibrary", "RemoveStaticMeshCoveredGrass");

	Params::PCGAreaCheckBlueprintLibrary_RemoveStaticMeshCoveredGrass Parms{};

	Parms.ReplacedLayerName = std::move(ReplacedLayerName);
	Parms.ShrinkTimes = ShrinkTimes;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PCGAreaCheck.PCGAreaCheckBlueprintLibrary.StampFromSplineArea
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class USplineComponent*                 Spline                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class FString>&            FilterKeys                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FSoftObjectPath&           InStampAsset                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MinSize                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CurveStep                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bReplaceNow                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSaveAsset                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSoftObjectPath                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FSoftObjectPath UPCGAreaCheckBlueprintLibrary::StampFromSplineArea(class USplineComponent* Spline, const TArray<class FString>& FilterKeys, const struct FSoftObjectPath& InStampAsset, float MinSize, float CurveStep, bool bReplaceNow, bool bSaveAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PCGAreaCheckBlueprintLibrary", "StampFromSplineArea");

	Params::PCGAreaCheckBlueprintLibrary_StampFromSplineArea Parms{};

	Parms.Spline = Spline;
	Parms.FilterKeys = std::move(FilterKeys);
	Parms.InStampAsset = std::move(InStampAsset);
	Parms.MinSize = MinSize;
	Parms.CurveStep = CurveStep;
	Parms.bReplaceNow = bReplaceNow;
	Parms.bSaveAsset = bSaveAsset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PCGAreaCheck.RuntimeDataColllector.AddSpecialPoint
// (Final, Native, Public, BlueprintCallable)

void ARuntimeDataColllector::AddSpecialPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RuntimeDataColllector", "AddSpecialPoint");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PCGAreaCheck.RuntimeDataColllector.CollectPlayerData
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTransform ARuntimeDataColllector::CollectPlayerData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RuntimeDataColllector", "CollectPlayerData");

	Params::RuntimeDataColllector_CollectPlayerData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PCGAreaCheck.RuntimeDataColllector.SetSavePath
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InSavePath                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARuntimeDataColllector::SetSavePath(const class FString& InSavePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RuntimeDataColllector", "SetSavePath");

	Params::RuntimeDataColllector_SetSavePath Parms{};

	Parms.InSavePath = std::move(InSavePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PCGAreaCheck.RuntimeDataColllector.SetTickInterval
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             InInterval                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARuntimeDataColllector::SetTickInterval(const int32 InInterval)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RuntimeDataColllector", "SetTickInterval");

	Params::RuntimeDataColllector_SetTickInterval Parms{};

	Parms.InInterval = InInterval;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PCGAreaCheck.RuntimeDataColllector.ShowCollectData
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FSoftObjectPath&           PackagePath                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVector>*                 OutPointsArr                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<int32>*                          OutPointNumArr                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FVector>*                 OutColorArr                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void ARuntimeDataColllector::ShowCollectData(const struct FSoftObjectPath& PackagePath, TArray<struct FVector>* OutPointsArr, TArray<int32>* OutPointNumArr, TArray<struct FVector>* OutColorArr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RuntimeDataColllector", "ShowCollectData");

	Params::RuntimeDataColllector_ShowCollectData Parms{};

	Parms.PackagePath = std::move(PackagePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPointsArr != nullptr)
		*OutPointsArr = std::move(Parms.OutPointsArr);

	if (OutPointNumArr != nullptr)
		*OutPointNumArr = std::move(Parms.OutPointNumArr);

	if (OutColorArr != nullptr)
		*OutColorArr = std::move(Parms.OutColorArr);
}


// Function PCGAreaCheck.RuntimeDataColllector.StartCollectData
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FLinearColor&              InBaseColor                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLinearColor&              InSpecialColor                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARuntimeDataColllector::StartCollectData(const struct FLinearColor& InBaseColor, const struct FLinearColor& InSpecialColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RuntimeDataColllector", "StartCollectData");

	Params::RuntimeDataColllector_StartCollectData Parms{};

	Parms.InBaseColor = std::move(InBaseColor);
	Parms.InSpecialColor = std::move(InSpecialColor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PCGAreaCheck.RuntimeDataColllector.StopCollectorData
// (Final, Native, Public, BlueprintCallable)

void ARuntimeDataColllector::StopCollectorData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RuntimeDataColllector", "StopCollectorData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

