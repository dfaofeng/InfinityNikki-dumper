#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NikkiPlayerCameraManager_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "FFocusOnCameraParams_structs.hpp"
#include "X6Camera_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function NikkiPlayerCameraManager_BP.NikkiPlayerCameraManager_BP_C.UpdateCameraDissolveParams
// 0x0080 (0x0080 - 0x0000)
struct NikkiPlayerCameraManager_BP_C_UpdateCameraDissolveParams final
{
public:
	double                                        DesiredDissolveClip;                               // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DesiredDissolveRadius;                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DesiredDissolveDistance;                           // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_1;     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_2;     // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast; // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2;   // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NikkiPlayerCameraManager_BP_C_UpdateCameraDissolveParams) == 0x000008, "Wrong alignment on NikkiPlayerCameraManager_BP_C_UpdateCameraDissolveParams");
static_assert(sizeof(NikkiPlayerCameraManager_BP_C_UpdateCameraDissolveParams) == 0x000080, "Wrong size on NikkiPlayerCameraManager_BP_C_UpdateCameraDissolveParams");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_UpdateCameraDissolveParams, DesiredDissolveClip) == 0x000000, "Member 'NikkiPlayerCameraManager_BP_C_UpdateCameraDissolveParams::DesiredDissolveClip' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_UpdateCameraDissolveParams, DesiredDissolveRadius) == 0x000008, "Member 'NikkiPlayerCameraManager_BP_C_UpdateCameraDissolveParams::DesiredDissolveRadius' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_UpdateCameraDissolveParams, DesiredDissolveDistance) == 0x000010, "Member 'NikkiPlayerCameraManager_BP_C_UpdateCameraDissolveParams::DesiredDissolveDistance' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_UpdateCameraDissolveParams, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000018, "Member 'NikkiPlayerCameraManager_BP_C_UpdateCameraDissolveParams::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_UpdateCameraDissolveParams, CallFunc_GetFloatValue_ReturnValue) == 0x00001C, "Member 'NikkiPlayerCameraManager_BP_C_UpdateCameraDissolveParams::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_UpdateCameraDissolveParams, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'NikkiPlayerCameraManager_BP_C_UpdateCameraDissolveParams::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_UpdateCameraDissolveParams, CallFunc_NearlyEqual_FloatFloat_ReturnValue_1) == 0x000028, "Member 'NikkiPlayerCameraManager_BP_C_UpdateCameraDissolveParams::CallFunc_NearlyEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_UpdateCameraDissolveParams, CallFunc_NearlyEqual_FloatFloat_ReturnValue_2) == 0x000029, "Member 'NikkiPlayerCameraManager_BP_C_UpdateCameraDissolveParams::CallFunc_NearlyEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_UpdateCameraDissolveParams, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'NikkiPlayerCameraManager_BP_C_UpdateCameraDissolveParams::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_UpdateCameraDissolveParams, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'NikkiPlayerCameraManager_BP_C_UpdateCameraDissolveParams::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_UpdateCameraDissolveParams, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000040, "Member 'NikkiPlayerCameraManager_BP_C_UpdateCameraDissolveParams::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_UpdateCameraDissolveParams, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast) == 0x000048, "Member 'NikkiPlayerCameraManager_BP_C_UpdateCameraDissolveParams::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_UpdateCameraDissolveParams, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000050, "Member 'NikkiPlayerCameraManager_BP_C_UpdateCameraDissolveParams::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_UpdateCameraDissolveParams, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000058, "Member 'NikkiPlayerCameraManager_BP_C_UpdateCameraDissolveParams::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_UpdateCameraDissolveParams, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1) == 0x000060, "Member 'NikkiPlayerCameraManager_BP_C_UpdateCameraDissolveParams::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_UpdateCameraDissolveParams, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x000068, "Member 'NikkiPlayerCameraManager_BP_C_UpdateCameraDissolveParams::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_UpdateCameraDissolveParams, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2) == 0x000070, "Member 'NikkiPlayerCameraManager_BP_C_UpdateCameraDissolveParams::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_UpdateCameraDissolveParams, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2) == 0x000078, "Member 'NikkiPlayerCameraManager_BP_C_UpdateCameraDissolveParams::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");

// Function NikkiPlayerCameraManager_BP.NikkiPlayerCameraManager_BP_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct NikkiPlayerCameraManager_BP_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NikkiPlayerCameraManager_BP_C_ReceiveTick) == 0x000004, "Wrong alignment on NikkiPlayerCameraManager_BP_C_ReceiveTick");
static_assert(sizeof(NikkiPlayerCameraManager_BP_C_ReceiveTick) == 0x000004, "Wrong size on NikkiPlayerCameraManager_BP_C_ReceiveTick");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'NikkiPlayerCameraManager_BP_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function NikkiPlayerCameraManager_BP.NikkiPlayerCameraManager_BP_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct NikkiPlayerCameraManager_BP_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NikkiPlayerCameraManager_BP_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on NikkiPlayerCameraManager_BP_C_ReceiveEndPlay");
static_assert(sizeof(NikkiPlayerCameraManager_BP_C_ReceiveEndPlay) == 0x000001, "Wrong size on NikkiPlayerCameraManager_BP_C_ReceiveEndPlay");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'NikkiPlayerCameraManager_BP_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function NikkiPlayerCameraManager_BP.NikkiPlayerCameraManager_BP_C.OnControlledRoleChanged
// 0x0008 (0x0008 - 0x0000)
struct NikkiPlayerCameraManager_BP_C_OnControlledRoleChanged final
{
public:
	class AActor*                                 ControlledRole;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NikkiPlayerCameraManager_BP_C_OnControlledRoleChanged) == 0x000008, "Wrong alignment on NikkiPlayerCameraManager_BP_C_OnControlledRoleChanged");
static_assert(sizeof(NikkiPlayerCameraManager_BP_C_OnControlledRoleChanged) == 0x000008, "Wrong size on NikkiPlayerCameraManager_BP_C_OnControlledRoleChanged");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_OnControlledRoleChanged, ControlledRole) == 0x000000, "Member 'NikkiPlayerCameraManager_BP_C_OnControlledRoleChanged::ControlledRole' has a wrong offset!");

// Function NikkiPlayerCameraManager_BP.NikkiPlayerCameraManager_BP_C.OnCameraVolumeTargetControlledActorChanged
// 0x0010 (0x0010 - 0x0000)
struct NikkiPlayerCameraManager_BP_C_OnCameraVolumeTargetControlledActorChanged final
{
public:
	class AActor*                                 ControlledActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 LastControlledActor;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NikkiPlayerCameraManager_BP_C_OnCameraVolumeTargetControlledActorChanged) == 0x000008, "Wrong alignment on NikkiPlayerCameraManager_BP_C_OnCameraVolumeTargetControlledActorChanged");
static_assert(sizeof(NikkiPlayerCameraManager_BP_C_OnCameraVolumeTargetControlledActorChanged) == 0x000010, "Wrong size on NikkiPlayerCameraManager_BP_C_OnCameraVolumeTargetControlledActorChanged");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_OnCameraVolumeTargetControlledActorChanged, ControlledActor) == 0x000000, "Member 'NikkiPlayerCameraManager_BP_C_OnCameraVolumeTargetControlledActorChanged::ControlledActor' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_OnCameraVolumeTargetControlledActorChanged, LastControlledActor) == 0x000008, "Member 'NikkiPlayerCameraManager_BP_C_OnCameraVolumeTargetControlledActorChanged::LastControlledActor' has a wrong offset!");

// Function NikkiPlayerCameraManager_BP.NikkiPlayerCameraManager_BP_C.OnBlendCompleted
// 0x0028 (0x0028 - 0x0000)
struct NikkiPlayerCameraManager_BP_C_OnBlendCompleted final
{
public:
	class AActor*                                 OldViewTarget;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 NewViewTarget;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       CallFunc_CameraComponentFromActor_ReturnValue;     // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAdvancedCamera*                        K2Node_DynamicCast_AsAdvanced_Camera;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NikkiPlayerCameraManager_BP_C_OnBlendCompleted) == 0x000008, "Wrong alignment on NikkiPlayerCameraManager_BP_C_OnBlendCompleted");
static_assert(sizeof(NikkiPlayerCameraManager_BP_C_OnBlendCompleted) == 0x000028, "Wrong size on NikkiPlayerCameraManager_BP_C_OnBlendCompleted");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_OnBlendCompleted, OldViewTarget) == 0x000000, "Member 'NikkiPlayerCameraManager_BP_C_OnBlendCompleted::OldViewTarget' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_OnBlendCompleted, NewViewTarget) == 0x000008, "Member 'NikkiPlayerCameraManager_BP_C_OnBlendCompleted::NewViewTarget' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_OnBlendCompleted, CallFunc_CameraComponentFromActor_ReturnValue) == 0x000010, "Member 'NikkiPlayerCameraManager_BP_C_OnBlendCompleted::CallFunc_CameraComponentFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_OnBlendCompleted, K2Node_DynamicCast_AsAdvanced_Camera) == 0x000018, "Member 'NikkiPlayerCameraManager_BP_C_OnBlendCompleted::K2Node_DynamicCast_AsAdvanced_Camera' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_OnBlendCompleted, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'NikkiPlayerCameraManager_BP_C_OnBlendCompleted::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function NikkiPlayerCameraManager_BP.NikkiPlayerCameraManager_BP_C.OnAssignViewTarget
// 0x0008 (0x0008 - 0x0000)
struct NikkiPlayerCameraManager_BP_C_OnAssignViewTarget final
{
public:
	class AActor*                                 NewTarget;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NikkiPlayerCameraManager_BP_C_OnAssignViewTarget) == 0x000008, "Wrong alignment on NikkiPlayerCameraManager_BP_C_OnAssignViewTarget");
static_assert(sizeof(NikkiPlayerCameraManager_BP_C_OnAssignViewTarget) == 0x000008, "Wrong size on NikkiPlayerCameraManager_BP_C_OnAssignViewTarget");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_OnAssignViewTarget, NewTarget) == 0x000000, "Member 'NikkiPlayerCameraManager_BP_C_OnAssignViewTarget::NewTarget' has a wrong offset!");

// Function NikkiPlayerCameraManager_BP.NikkiPlayerCameraManager_BP_C.ExecuteUbergraph_NikkiPlayerCameraManager_BP
// 0x0060 (0x0060 - 0x0000)
struct NikkiPlayerCameraManager_BP_C_ExecuteUbergraph_NikkiPlayerCameraManager_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_ControlledActor;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_LastControlledActor;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_NewTarget;                            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       CallFunc_CameraComponentFromActor_ReturnValue;     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAdvancedCamera*                        K2Node_DynamicCast_AsAdvanced_Camera;              // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UX6GameInstance*                        CallFunc_GetX6GameInstance_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* OldViewTarget, class AActor* NewViewTarget)> K2Node_CreateDelegate_OutputDelegate; // 0x0048(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_ControlledRole;                 // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NikkiPlayerCameraManager_BP_C_ExecuteUbergraph_NikkiPlayerCameraManager_BP) == 0x000008, "Wrong alignment on NikkiPlayerCameraManager_BP_C_ExecuteUbergraph_NikkiPlayerCameraManager_BP");
static_assert(sizeof(NikkiPlayerCameraManager_BP_C_ExecuteUbergraph_NikkiPlayerCameraManager_BP) == 0x000060, "Wrong size on NikkiPlayerCameraManager_BP_C_ExecuteUbergraph_NikkiPlayerCameraManager_BP");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_ExecuteUbergraph_NikkiPlayerCameraManager_BP, EntryPoint) == 0x000000, "Member 'NikkiPlayerCameraManager_BP_C_ExecuteUbergraph_NikkiPlayerCameraManager_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_ExecuteUbergraph_NikkiPlayerCameraManager_BP, K2Node_CustomEvent_ControlledActor) == 0x000008, "Member 'NikkiPlayerCameraManager_BP_C_ExecuteUbergraph_NikkiPlayerCameraManager_BP::K2Node_CustomEvent_ControlledActor' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_ExecuteUbergraph_NikkiPlayerCameraManager_BP, K2Node_CustomEvent_LastControlledActor) == 0x000010, "Member 'NikkiPlayerCameraManager_BP_C_ExecuteUbergraph_NikkiPlayerCameraManager_BP::K2Node_CustomEvent_LastControlledActor' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_ExecuteUbergraph_NikkiPlayerCameraManager_BP, K2Node_Event_NewTarget) == 0x000018, "Member 'NikkiPlayerCameraManager_BP_C_ExecuteUbergraph_NikkiPlayerCameraManager_BP::K2Node_Event_NewTarget' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_ExecuteUbergraph_NikkiPlayerCameraManager_BP, CallFunc_CameraComponentFromActor_ReturnValue) == 0x000020, "Member 'NikkiPlayerCameraManager_BP_C_ExecuteUbergraph_NikkiPlayerCameraManager_BP::CallFunc_CameraComponentFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_ExecuteUbergraph_NikkiPlayerCameraManager_BP, K2Node_DynamicCast_AsAdvanced_Camera) == 0x000028, "Member 'NikkiPlayerCameraManager_BP_C_ExecuteUbergraph_NikkiPlayerCameraManager_BP::K2Node_DynamicCast_AsAdvanced_Camera' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_ExecuteUbergraph_NikkiPlayerCameraManager_BP, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'NikkiPlayerCameraManager_BP_C_ExecuteUbergraph_NikkiPlayerCameraManager_BP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_ExecuteUbergraph_NikkiPlayerCameraManager_BP, K2Node_Event_DeltaSeconds) == 0x000034, "Member 'NikkiPlayerCameraManager_BP_C_ExecuteUbergraph_NikkiPlayerCameraManager_BP::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_ExecuteUbergraph_NikkiPlayerCameraManager_BP, K2Node_Event_EndPlayReason) == 0x000038, "Member 'NikkiPlayerCameraManager_BP_C_ExecuteUbergraph_NikkiPlayerCameraManager_BP::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_ExecuteUbergraph_NikkiPlayerCameraManager_BP, CallFunc_GetX6GameInstance_ReturnValue) == 0x000040, "Member 'NikkiPlayerCameraManager_BP_C_ExecuteUbergraph_NikkiPlayerCameraManager_BP::CallFunc_GetX6GameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_ExecuteUbergraph_NikkiPlayerCameraManager_BP, K2Node_CreateDelegate_OutputDelegate) == 0x000048, "Member 'NikkiPlayerCameraManager_BP_C_ExecuteUbergraph_NikkiPlayerCameraManager_BP::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_ExecuteUbergraph_NikkiPlayerCameraManager_BP, K2Node_CustomEvent_ControlledRole) == 0x000058, "Member 'NikkiPlayerCameraManager_BP_C_ExecuteUbergraph_NikkiPlayerCameraManager_BP::K2Node_CustomEvent_ControlledRole' has a wrong offset!");

// Function NikkiPlayerCameraManager_BP.NikkiPlayerCameraManager_BP_C.EndLookAtTarget
// 0x0028 (0x0028 - 0x0000)
struct NikkiPlayerCameraManager_BP_C_EndLookAtTarget final
{
public:
	double                                        BlendOutTime;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerControllingRole_ControllingRole; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetViewTargetWithBlend_BlendTime_ImplicitCast; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLifeSpan_InLifespan_ImplicitCast;      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NikkiPlayerCameraManager_BP_C_EndLookAtTarget) == 0x000008, "Wrong alignment on NikkiPlayerCameraManager_BP_C_EndLookAtTarget");
static_assert(sizeof(NikkiPlayerCameraManager_BP_C_EndLookAtTarget) == 0x000028, "Wrong size on NikkiPlayerCameraManager_BP_C_EndLookAtTarget");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_EndLookAtTarget, BlendOutTime) == 0x000000, "Member 'NikkiPlayerCameraManager_BP_C_EndLookAtTarget::BlendOutTime' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_EndLookAtTarget, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'NikkiPlayerCameraManager_BP_C_EndLookAtTarget::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_EndLookAtTarget, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'NikkiPlayerCameraManager_BP_C_EndLookAtTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_EndLookAtTarget, CallFunc_GetPlayerControllingRole_ControllingRole) == 0x000018, "Member 'NikkiPlayerCameraManager_BP_C_EndLookAtTarget::CallFunc_GetPlayerControllingRole_ControllingRole' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_EndLookAtTarget, CallFunc_SetViewTargetWithBlend_BlendTime_ImplicitCast) == 0x000020, "Member 'NikkiPlayerCameraManager_BP_C_EndLookAtTarget::CallFunc_SetViewTargetWithBlend_BlendTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_EndLookAtTarget, CallFunc_SetLifeSpan_InLifespan_ImplicitCast) == 0x000024, "Member 'NikkiPlayerCameraManager_BP_C_EndLookAtTarget::CallFunc_SetLifeSpan_InLifespan_ImplicitCast' has a wrong offset!");

// Function NikkiPlayerCameraManager_BP.NikkiPlayerCameraManager_BP_C.EndFocusOn
// 0x0001 (0x0001 - 0x0000)
struct NikkiPlayerCameraManager_BP_C_EndFocusOn final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NikkiPlayerCameraManager_BP_C_EndFocusOn) == 0x000001, "Wrong alignment on NikkiPlayerCameraManager_BP_C_EndFocusOn");
static_assert(sizeof(NikkiPlayerCameraManager_BP_C_EndFocusOn) == 0x000001, "Wrong size on NikkiPlayerCameraManager_BP_C_EndFocusOn");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_EndFocusOn, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'NikkiPlayerCameraManager_BP_C_EndFocusOn::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function NikkiPlayerCameraManager_BP.NikkiPlayerCameraManager_BP_C.BP_GetCameraVolumeTargetControlledActor
// 0x0008 (0x0008 - 0x0000)
struct NikkiPlayerCameraManager_BP_C_BP_GetCameraVolumeTargetControlledActor final
{
public:
	class AActor*                                 ControlledActor;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NikkiPlayerCameraManager_BP_C_BP_GetCameraVolumeTargetControlledActor) == 0x000008, "Wrong alignment on NikkiPlayerCameraManager_BP_C_BP_GetCameraVolumeTargetControlledActor");
static_assert(sizeof(NikkiPlayerCameraManager_BP_C_BP_GetCameraVolumeTargetControlledActor) == 0x000008, "Wrong size on NikkiPlayerCameraManager_BP_C_BP_GetCameraVolumeTargetControlledActor");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BP_GetCameraVolumeTargetControlledActor, ControlledActor) == 0x000000, "Member 'NikkiPlayerCameraManager_BP_C_BP_GetCameraVolumeTargetControlledActor::ControlledActor' has a wrong offset!");

// Function NikkiPlayerCameraManager_BP.NikkiPlayerCameraManager_BP_C.BP_DebugDrawAllCameraVolume
// 0x0150 (0x0150 - 0x0000)
struct NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_AmbientConfigCameraVolumeActor_C*> CallFunc_GetAllActorsOfClass_OutActors;      // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AmbientConfigCameraVolumeActor_C*   CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue_1;            // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue_2;            // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume) == 0x000008, "Wrong alignment on NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume");
static_assert(sizeof(NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume) == 0x000150, "Wrong size on NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume, Temp_int_Array_Index_Variable) == 0x000000, "Member 'NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume, CallFunc_GetAllActorsOfClass_OutActors) == 0x000010, "Member 'NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume, CallFunc_Array_Get_Item) == 0x000028, "Member 'NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume, CallFunc_GetActorScale3D_ReturnValue) == 0x000038, "Member 'NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume, CallFunc_BreakVector_X) == 0x000050, "Member 'NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume, CallFunc_BreakVector_Y) == 0x000058, "Member 'NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume, CallFunc_BreakVector_Z) == 0x000060, "Member 'NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume, CallFunc_GetActorScale3D_ReturnValue_1) == 0x000068, "Member 'NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume::CallFunc_GetActorScale3D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume, CallFunc_GetActorScale3D_ReturnValue_2) == 0x000080, "Member 'NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume::CallFunc_GetActorScale3D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume, CallFunc_BreakVector_X_1) == 0x000098, "Member 'NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume, CallFunc_BreakVector_Y_1) == 0x0000A0, "Member 'NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume, CallFunc_BreakVector_Z_1) == 0x0000A8, "Member 'NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000B0, "Member 'NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000D0, "Member 'NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000D8, "Member 'NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000E0, "Member 'NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0000E8, "Member 'NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0000F0, "Member 'NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume, CallFunc_MakeVector_ReturnValue) == 0x0000F8, "Member 'NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000110, "Member 'NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume, CallFunc_MakeVector_ReturnValue_1) == 0x000118, "Member 'NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000130, "Member 'NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume, K2Node_SwitchEnum_CmpSuccess) == 0x000148, "Member 'NikkiPlayerCameraManager_BP_C_BP_DebugDrawAllCameraVolume::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function NikkiPlayerCameraManager_BP.NikkiPlayerCameraManager_BP_C.BeginLookatTarget
// 0x00B0 (0x00B0 - 0x0000)
struct NikkiPlayerCameraManager_BP_C_BeginLookatTarget final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        BlendInTime;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0040(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_LookAtCamera_C*                     CallFunc_FinishSpawningActor_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NikkiPlayerCameraManager_BP_C_BeginLookatTarget) == 0x000010, "Wrong alignment on NikkiPlayerCameraManager_BP_C_BeginLookatTarget");
static_assert(sizeof(NikkiPlayerCameraManager_BP_C_BeginLookatTarget) == 0x0000B0, "Wrong size on NikkiPlayerCameraManager_BP_C_BeginLookatTarget");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BeginLookatTarget, Target) == 0x000000, "Member 'NikkiPlayerCameraManager_BP_C_BeginLookatTarget::Target' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BeginLookatTarget, BlendInTime) == 0x000008, "Member 'NikkiPlayerCameraManager_BP_C_BeginLookatTarget::BlendInTime' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BeginLookatTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'NikkiPlayerCameraManager_BP_C_BeginLookatTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BeginLookatTarget, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000028, "Member 'NikkiPlayerCameraManager_BP_C_BeginLookatTarget::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BeginLookatTarget, CallFunc_MakeTransform_ReturnValue) == 0x000040, "Member 'NikkiPlayerCameraManager_BP_C_BeginLookatTarget::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BeginLookatTarget, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000A0, "Member 'NikkiPlayerCameraManager_BP_C_BeginLookatTarget::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BeginLookatTarget, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000A8, "Member 'NikkiPlayerCameraManager_BP_C_BeginLookatTarget::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function NikkiPlayerCameraManager_BP.NikkiPlayerCameraManager_BP_C.BeginFocusOnTarget
// 0x0110 (0x0110 - 0x0000)
struct NikkiPlayerCameraManager_BP_C_BeginFocusOnTarget final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECameraState                                  CameraState_0;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bOverrideSpringArmAngle;                           // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        SpringArmAngle;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bOverrideSpringArmLength;                          // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        springArmLength;                                   // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bOverrideTransitionParams;                         // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FViewTargetTransitionParams            TransitionParams;                                  // 0x0030(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFFocusOnCameraParams                  K2Node_MakeStruct_FFocusOnCameraParams;            // 0x0058(0x00B8)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NikkiPlayerCameraManager_BP_C_BeginFocusOnTarget) == 0x000008, "Wrong alignment on NikkiPlayerCameraManager_BP_C_BeginFocusOnTarget");
static_assert(sizeof(NikkiPlayerCameraManager_BP_C_BeginFocusOnTarget) == 0x000110, "Wrong size on NikkiPlayerCameraManager_BP_C_BeginFocusOnTarget");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BeginFocusOnTarget, TargetActor) == 0x000000, "Member 'NikkiPlayerCameraManager_BP_C_BeginFocusOnTarget::TargetActor' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BeginFocusOnTarget, CameraState_0) == 0x000008, "Member 'NikkiPlayerCameraManager_BP_C_BeginFocusOnTarget::CameraState_0' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BeginFocusOnTarget, bOverrideSpringArmAngle) == 0x000009, "Member 'NikkiPlayerCameraManager_BP_C_BeginFocusOnTarget::bOverrideSpringArmAngle' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BeginFocusOnTarget, SpringArmAngle) == 0x000010, "Member 'NikkiPlayerCameraManager_BP_C_BeginFocusOnTarget::SpringArmAngle' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BeginFocusOnTarget, bOverrideSpringArmLength) == 0x000018, "Member 'NikkiPlayerCameraManager_BP_C_BeginFocusOnTarget::bOverrideSpringArmLength' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BeginFocusOnTarget, springArmLength) == 0x000020, "Member 'NikkiPlayerCameraManager_BP_C_BeginFocusOnTarget::springArmLength' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BeginFocusOnTarget, bOverrideTransitionParams) == 0x000028, "Member 'NikkiPlayerCameraManager_BP_C_BeginFocusOnTarget::bOverrideTransitionParams' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BeginFocusOnTarget, TransitionParams) == 0x000030, "Member 'NikkiPlayerCameraManager_BP_C_BeginFocusOnTarget::TransitionParams' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BeginFocusOnTarget, CallFunc_BooleanOR_ReturnValue) == 0x000050, "Member 'NikkiPlayerCameraManager_BP_C_BeginFocusOnTarget::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BeginFocusOnTarget, K2Node_MakeStruct_FFocusOnCameraParams) == 0x000058, "Member 'NikkiPlayerCameraManager_BP_C_BeginFocusOnTarget::K2Node_MakeStruct_FFocusOnCameraParams' has a wrong offset!");

// Function NikkiPlayerCameraManager_BP.NikkiPlayerCameraManager_BP_C.BeginFocusOn
// 0x0140 (0x0140 - 0x0000)
struct NikkiPlayerCameraManager_BP_C_BeginFocusOn final
{
public:
	class AActor*                                 FocusOnActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFFocusOnCameraParams                  FocusOnCameraParams;                               // 0x0008(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00C0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_FocusOnTargetCamera_C*              CallFunc_FinishSpawningActor_ReturnValue;          // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NikkiPlayerCameraManager_BP_C_BeginFocusOn) == 0x000010, "Wrong alignment on NikkiPlayerCameraManager_BP_C_BeginFocusOn");
static_assert(sizeof(NikkiPlayerCameraManager_BP_C_BeginFocusOn) == 0x000140, "Wrong size on NikkiPlayerCameraManager_BP_C_BeginFocusOn");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BeginFocusOn, FocusOnActor) == 0x000000, "Member 'NikkiPlayerCameraManager_BP_C_BeginFocusOn::FocusOnActor' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BeginFocusOn, FocusOnCameraParams) == 0x000008, "Member 'NikkiPlayerCameraManager_BP_C_BeginFocusOn::FocusOnCameraParams' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BeginFocusOn, CallFunc_MakeTransform_ReturnValue) == 0x0000C0, "Member 'NikkiPlayerCameraManager_BP_C_BeginFocusOn::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BeginFocusOn, CallFunc_IsValid_ReturnValue) == 0x000120, "Member 'NikkiPlayerCameraManager_BP_C_BeginFocusOn::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BeginFocusOn, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000128, "Member 'NikkiPlayerCameraManager_BP_C_BeginFocusOn::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_BeginFocusOn, CallFunc_FinishSpawningActor_ReturnValue) == 0x000130, "Member 'NikkiPlayerCameraManager_BP_C_BeginFocusOn::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function NikkiPlayerCameraManager_BP.NikkiPlayerCameraManager_BP_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct NikkiPlayerCameraManager_BP_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(NikkiPlayerCameraManager_BP_C_GetModuleName) == 0x000008, "Wrong alignment on NikkiPlayerCameraManager_BP_C_GetModuleName");
static_assert(sizeof(NikkiPlayerCameraManager_BP_C_GetModuleName) == 0x000010, "Wrong size on NikkiPlayerCameraManager_BP_C_GetModuleName");
static_assert(offsetof(NikkiPlayerCameraManager_BP_C_GetModuleName, ReturnValue) == 0x000000, "Member 'NikkiPlayerCameraManager_BP_C_GetModuleName::ReturnValue' has a wrong offset!");

}

