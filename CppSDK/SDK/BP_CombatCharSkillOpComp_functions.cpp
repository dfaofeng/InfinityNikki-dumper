#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CombatCharSkillOpComp

#include "Basic.hpp"

#include "BP_CombatCharSkillOpComp_classes.hpp"
#include "BP_CombatCharSkillOpComp_parameters.hpp"


namespace SDK
{

// Function BP_CombatCharSkillOpComp.BP_CombatCharSkillOpComp_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CombatCharSkillOpComp_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CombatCharSkillOpComp_C", "ReceiveEndPlay");

	Params::BP_CombatCharSkillOpComp_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CombatCharSkillOpComp.BP_CombatCharSkillOpComp_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_CombatCharSkillOpComp_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CombatCharSkillOpComp_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CombatCharSkillOpComp.BP_CombatCharSkillOpComp_C.ExecuteUbergraph_BP_CombatCharSkillOpComp
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CombatCharSkillOpComp_C::ExecuteUbergraph_BP_CombatCharSkillOpComp(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CombatCharSkillOpComp_C", "ExecuteUbergraph_BP_CombatCharSkillOpComp");

	Params::BP_CombatCharSkillOpComp_C_ExecuteUbergraph_BP_CombatCharSkillOpComp Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CombatCharSkillOpComp.BP_CombatCharSkillOpComp_C.BP_ResetOverrideInputTagByInputType
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESkillInputType                         InSkillInputType                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CombatCharSkillOpComp_C::BP_ResetOverrideInputTagByInputType(ESkillInputType InSkillInputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CombatCharSkillOpComp_C", "BP_ResetOverrideInputTagByInputType");

	Params::BP_CombatCharSkillOpComp_C_BP_ResetOverrideInputTagByInputType Parms{};

	Parms.InSkillInputType = InSkillInputType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CombatCharSkillOpComp.BP_CombatCharSkillOpComp_C.BP_ResetOverrideInputTag
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CombatCharSkillOpComp_C::BP_ResetOverrideInputTag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CombatCharSkillOpComp_C", "BP_ResetOverrideInputTag");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CombatCharSkillOpComp.BP_CombatCharSkillOpComp_C.BP_OverrideSkillIDByInputType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESkillInputType                         InSkillInputType                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InSkillID                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CombatCharSkillOpComp_C::BP_OverrideSkillIDByInputType(ESkillInputType InSkillInputType, int32 InSkillID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CombatCharSkillOpComp_C", "BP_OverrideSkillIDByInputType");

	Params::BP_CombatCharSkillOpComp_C_BP_OverrideSkillIDByInputType Parms{};

	Parms.InSkillInputType = InSkillInputType;
	Parms.InSkillID = InSkillID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CombatCharSkillOpComp.BP_CombatCharSkillOpComp_C.BP_OverrideInputTagByInputType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESkillInputType                         InSkillInputType                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              InputTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_CombatCharSkillOpComp_C::BP_OverrideInputTagByInputType(ESkillInputType InSkillInputType, const struct FGameplayTag& InputTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CombatCharSkillOpComp_C", "BP_OverrideInputTagByInputType");

	Params::BP_CombatCharSkillOpComp_C_BP_OverrideInputTagByInputType Parms{};

	Parms.InSkillInputType = InSkillInputType;
	Parms.InputTag = std::move(InputTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CombatCharSkillOpComp.BP_CombatCharSkillOpComp_C.BP_OverrideAbilityClassByInputType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESkillInputType                         InSkillInputType                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           AbilityClass                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_CombatCharSkillOpComp_C::BP_OverrideAbilityClassByInputType(ESkillInputType InSkillInputType, class UClass* AbilityClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CombatCharSkillOpComp_C", "BP_OverrideAbilityClassByInputType");

	Params::BP_CombatCharSkillOpComp_C_BP_OverrideAbilityClassByInputType Parms{};

	Parms.InSkillInputType = InSkillInputType;
	Parms.AbilityClass = AbilityClass;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CombatCharSkillOpComp.BP_CombatCharSkillOpComp_C.BP_EnableSkillIDOverride
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CombatCharSkillOpComp_C::BP_EnableSkillIDOverride(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CombatCharSkillOpComp_C", "BP_EnableSkillIDOverride");

	Params::BP_CombatCharSkillOpComp_C_BP_EnableSkillIDOverride Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CombatCharSkillOpComp.BP_CombatCharSkillOpComp_C.BP_EnableInputTagOverride
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CombatCharSkillOpComp_C::BP_EnableInputTagOverride()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CombatCharSkillOpComp_C", "BP_EnableInputTagOverride");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CombatCharSkillOpComp.BP_CombatCharSkillOpComp_C.BP_ClearAbilityHandle
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CombatCharSkillOpComp_C::BP_ClearAbilityHandle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CombatCharSkillOpComp_C", "BP_ClearAbilityHandle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CombatCharSkillOpComp.BP_CombatCharSkillOpComp_C.BP_CastSkillByAbilityCls
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftClassPtr<class UClass>             AbilityCls                                             (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_CombatCharSkillOpComp_C::BP_CastSkillByAbilityCls(TSoftClassPtr<class UClass> AbilityCls)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CombatCharSkillOpComp_C", "BP_CastSkillByAbilityCls");

	Params::BP_CombatCharSkillOpComp_C_BP_CastSkillByAbilityCls Parms{};

	Parms.AbilityCls = AbilityCls;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CombatCharSkillOpComp.BP_CombatCharSkillOpComp_C.BP_CastSkill
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   skillID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitDir                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int64                                   TargetId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CombatCharSkillOpComp_C::BP_CastSkill(int32 skillID, const struct FVector& HitDir, int64 TargetId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CombatCharSkillOpComp_C", "BP_CastSkill");

	Params::BP_CombatCharSkillOpComp_C_BP_CastSkill Parms{};

	Parms.skillID = skillID;
	Parms.HitDir = std::move(HitDir);
	Parms.TargetId = TargetId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CombatCharSkillOpComp.BP_CombatCharSkillOpComp_C.BP_CancelSkill
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CombatCharSkillOpComp_C::BP_CancelSkill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CombatCharSkillOpComp_C", "BP_CancelSkill");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CombatCharSkillOpComp.BP_CombatCharSkillOpComp_C.GetModuleName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UBP_CombatCharSkillOpComp_C::GetModuleName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CombatCharSkillOpComp_C", "GetModuleName");

	Params::BP_CombatCharSkillOpComp_C_GetModuleName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

