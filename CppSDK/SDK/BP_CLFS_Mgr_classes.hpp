#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CLFS_Mgr

#include "Basic.hpp"

#include "S_FaculaBrush_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CLFS_Mgr.BP_CLFS_Mgr_C
// 0x0140 (0x04E8 - 0x03A8)
class ABP_CLFS_Mgr_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBillboardComponent*                    Billboard;                                         // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   DebugPlane;                                        // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ADirectionalLight*                      RefDir;                                            // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MID_CLF;                                           // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        BoxExtent;                                         // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	EBlendMode                                    PaintMode;                                         // 0x03E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E1[0x7];                                      // 0x03E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RenderSize;                                        // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 RT_CLFS;                                           // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	double                                        Square_Width;                                      // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NoiseIntensity;                                    // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NoiseScale;                                        // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NoiseSpeedMultiply;                                // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BaseLightMultiply;                                 // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SpecialAreaOffset;                                 // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LightenOverAll;                                    // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DarkenOverAll;                                     // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CLFS_LightBrushArray_C*             FaculasDataAsset;                                  // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ExtLevelConfig_CLFS;                               // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_MainFaculaLighter_C*                MainFacula;                                        // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	TSoftObjectPtr<class UBP_CLFS_LightBrushArray_C> ReturnValue;                                    // 0x0450(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class ABP_LevelConfigMgr_C*                   Ref_LevelConfigMgr;                                // 0x0478(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CurrentCLFSDA;                                     // 0x0480(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 WorldBaseDA;                                       // 0x04A8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash)
	class UBP_CLFS_LightBrushArray_C*             WorldBaseDA_HardRef;                               // 0x04D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_FaculaBrush>                 FaculaConfigArray_MobileAppend;                    // 0x04D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ConstructDirMaterial();
	void DrawLighter(class UTextureRenderTarget2D* TextureRenderTarget, const struct FS_Lighter& S_Lighter, double RTSize, double SquareWidth, double BrushIntensity);
	void ExecuteUbergraph_BP_CLFS_Mgr(int32 EntryPoint);
	void OnLoaded_D62BB00D43951F9144E545B36705EC6E(class UObject* Loaded);
	void OnLoaded_D62BB00D43951F9144E545B3C52C8DED(class UObject* Loaded);
	void Paint(const struct FS_Lighter& S_Lighter, bool LightenSwitch, double Intensity);
	void PaintBrushs(TArray<struct FS_FaculaBrush>& InputPin);
	void PostConstruct();
	void ReceiveBeginPlay();
	void RedrawRT();
	void RedrawRT02();
	void SetMIDParam(class UMaterialInstanceDynamic* InputPin);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CLFS_Mgr_C">();
	}
	static class ABP_CLFS_Mgr_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CLFS_Mgr_C>();
	}
};
static_assert(alignof(ABP_CLFS_Mgr_C) == 0x000008, "Wrong alignment on ABP_CLFS_Mgr_C");
static_assert(sizeof(ABP_CLFS_Mgr_C) == 0x0004E8, "Wrong size on ABP_CLFS_Mgr_C");
static_assert(offsetof(ABP_CLFS_Mgr_C, UberGraphFrame) == 0x0003A8, "Member 'ABP_CLFS_Mgr_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_CLFS_Mgr_C, Billboard) == 0x0003B0, "Member 'ABP_CLFS_Mgr_C::Billboard' has a wrong offset!");
static_assert(offsetof(ABP_CLFS_Mgr_C, DebugPlane) == 0x0003B8, "Member 'ABP_CLFS_Mgr_C::DebugPlane' has a wrong offset!");
static_assert(offsetof(ABP_CLFS_Mgr_C, Box) == 0x0003C0, "Member 'ABP_CLFS_Mgr_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_CLFS_Mgr_C, RefDir) == 0x0003C8, "Member 'ABP_CLFS_Mgr_C::RefDir' has a wrong offset!");
static_assert(offsetof(ABP_CLFS_Mgr_C, MID_CLF) == 0x0003D0, "Member 'ABP_CLFS_Mgr_C::MID_CLF' has a wrong offset!");
static_assert(offsetof(ABP_CLFS_Mgr_C, BoxExtent) == 0x0003D8, "Member 'ABP_CLFS_Mgr_C::BoxExtent' has a wrong offset!");
static_assert(offsetof(ABP_CLFS_Mgr_C, PaintMode) == 0x0003E0, "Member 'ABP_CLFS_Mgr_C::PaintMode' has a wrong offset!");
static_assert(offsetof(ABP_CLFS_Mgr_C, RenderSize) == 0x0003E8, "Member 'ABP_CLFS_Mgr_C::RenderSize' has a wrong offset!");
static_assert(offsetof(ABP_CLFS_Mgr_C, RT_CLFS) == 0x0003F0, "Member 'ABP_CLFS_Mgr_C::RT_CLFS' has a wrong offset!");
static_assert(offsetof(ABP_CLFS_Mgr_C, Square_Width) == 0x0003F8, "Member 'ABP_CLFS_Mgr_C::Square_Width' has a wrong offset!");
static_assert(offsetof(ABP_CLFS_Mgr_C, NoiseIntensity) == 0x000400, "Member 'ABP_CLFS_Mgr_C::NoiseIntensity' has a wrong offset!");
static_assert(offsetof(ABP_CLFS_Mgr_C, NoiseScale) == 0x000408, "Member 'ABP_CLFS_Mgr_C::NoiseScale' has a wrong offset!");
static_assert(offsetof(ABP_CLFS_Mgr_C, NoiseSpeedMultiply) == 0x000410, "Member 'ABP_CLFS_Mgr_C::NoiseSpeedMultiply' has a wrong offset!");
static_assert(offsetof(ABP_CLFS_Mgr_C, BaseLightMultiply) == 0x000418, "Member 'ABP_CLFS_Mgr_C::BaseLightMultiply' has a wrong offset!");
static_assert(offsetof(ABP_CLFS_Mgr_C, SpecialAreaOffset) == 0x000420, "Member 'ABP_CLFS_Mgr_C::SpecialAreaOffset' has a wrong offset!");
static_assert(offsetof(ABP_CLFS_Mgr_C, LightenOverAll) == 0x000428, "Member 'ABP_CLFS_Mgr_C::LightenOverAll' has a wrong offset!");
static_assert(offsetof(ABP_CLFS_Mgr_C, DarkenOverAll) == 0x000430, "Member 'ABP_CLFS_Mgr_C::DarkenOverAll' has a wrong offset!");
static_assert(offsetof(ABP_CLFS_Mgr_C, FaculasDataAsset) == 0x000438, "Member 'ABP_CLFS_Mgr_C::FaculasDataAsset' has a wrong offset!");
static_assert(offsetof(ABP_CLFS_Mgr_C, ExtLevelConfig_CLFS) == 0x000440, "Member 'ABP_CLFS_Mgr_C::ExtLevelConfig_CLFS' has a wrong offset!");
static_assert(offsetof(ABP_CLFS_Mgr_C, MainFacula) == 0x000448, "Member 'ABP_CLFS_Mgr_C::MainFacula' has a wrong offset!");
static_assert(offsetof(ABP_CLFS_Mgr_C, ReturnValue) == 0x000450, "Member 'ABP_CLFS_Mgr_C::ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CLFS_Mgr_C, Ref_LevelConfigMgr) == 0x000478, "Member 'ABP_CLFS_Mgr_C::Ref_LevelConfigMgr' has a wrong offset!");
static_assert(offsetof(ABP_CLFS_Mgr_C, CurrentCLFSDA) == 0x000480, "Member 'ABP_CLFS_Mgr_C::CurrentCLFSDA' has a wrong offset!");
static_assert(offsetof(ABP_CLFS_Mgr_C, WorldBaseDA) == 0x0004A8, "Member 'ABP_CLFS_Mgr_C::WorldBaseDA' has a wrong offset!");
static_assert(offsetof(ABP_CLFS_Mgr_C, WorldBaseDA_HardRef) == 0x0004D0, "Member 'ABP_CLFS_Mgr_C::WorldBaseDA_HardRef' has a wrong offset!");
static_assert(offsetof(ABP_CLFS_Mgr_C, FaculaConfigArray_MobileAppend) == 0x0004D8, "Member 'ABP_CLFS_Mgr_C::FaculaConfigArray_MobileAppend' has a wrong offset!");

}

