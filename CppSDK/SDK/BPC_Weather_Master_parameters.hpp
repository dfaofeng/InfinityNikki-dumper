#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_Weather_Master

#include "Basic.hpp"


namespace SDK::Params
{

// Function BPC_Weather_Master.BPC_Weather_Master_C.ExecuteUbergraph_BPC_Weather_Master
// 0x0038 (0x0038 - 0x0000)
struct BPC_Weather_Master_C_ExecuteUbergraph_BPC_Weather_Master final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_DyEnvWeathers_C*                    K2Node_DynamicCast_AsBP_Dy_Env_Weathers;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Progress_1;                           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Progress;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_SelfProgress_ImplicitCast;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_SelfProgress_ImplicitCast_1;    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_Weather_Master_C_ExecuteUbergraph_BPC_Weather_Master) == 0x000008, "Wrong alignment on BPC_Weather_Master_C_ExecuteUbergraph_BPC_Weather_Master");
static_assert(sizeof(BPC_Weather_Master_C_ExecuteUbergraph_BPC_Weather_Master) == 0x000038, "Wrong size on BPC_Weather_Master_C_ExecuteUbergraph_BPC_Weather_Master");
static_assert(offsetof(BPC_Weather_Master_C_ExecuteUbergraph_BPC_Weather_Master, EntryPoint) == 0x000000, "Member 'BPC_Weather_Master_C_ExecuteUbergraph_BPC_Weather_Master::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPC_Weather_Master_C_ExecuteUbergraph_BPC_Weather_Master, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BPC_Weather_Master_C_ExecuteUbergraph_BPC_Weather_Master::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Weather_Master_C_ExecuteUbergraph_BPC_Weather_Master, K2Node_DynamicCast_AsBP_Dy_Env_Weathers) == 0x000010, "Member 'BPC_Weather_Master_C_ExecuteUbergraph_BPC_Weather_Master::K2Node_DynamicCast_AsBP_Dy_Env_Weathers' has a wrong offset!");
static_assert(offsetof(BPC_Weather_Master_C_ExecuteUbergraph_BPC_Weather_Master, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BPC_Weather_Master_C_ExecuteUbergraph_BPC_Weather_Master::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPC_Weather_Master_C_ExecuteUbergraph_BPC_Weather_Master, K2Node_Event_Progress_1) == 0x00001C, "Member 'BPC_Weather_Master_C_ExecuteUbergraph_BPC_Weather_Master::K2Node_Event_Progress_1' has a wrong offset!");
static_assert(offsetof(BPC_Weather_Master_C_ExecuteUbergraph_BPC_Weather_Master, K2Node_Event_Progress) == 0x000020, "Member 'BPC_Weather_Master_C_ExecuteUbergraph_BPC_Weather_Master::K2Node_Event_Progress' has a wrong offset!");
static_assert(offsetof(BPC_Weather_Master_C_ExecuteUbergraph_BPC_Weather_Master, K2Node_VariableSet_SelfProgress_ImplicitCast) == 0x000028, "Member 'BPC_Weather_Master_C_ExecuteUbergraph_BPC_Weather_Master::K2Node_VariableSet_SelfProgress_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPC_Weather_Master_C_ExecuteUbergraph_BPC_Weather_Master, K2Node_VariableSet_SelfProgress_ImplicitCast_1) == 0x000030, "Member 'BPC_Weather_Master_C_ExecuteUbergraph_BPC_Weather_Master::K2Node_VariableSet_SelfProgress_ImplicitCast_1' has a wrong offset!");

// Function BPC_Weather_Master.BPC_Weather_Master_C.OnFadeIn
// 0x0004 (0x0004 - 0x0000)
struct BPC_Weather_Master_C_OnFadeIn final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_Weather_Master_C_OnFadeIn) == 0x000004, "Wrong alignment on BPC_Weather_Master_C_OnFadeIn");
static_assert(sizeof(BPC_Weather_Master_C_OnFadeIn) == 0x000004, "Wrong size on BPC_Weather_Master_C_OnFadeIn");
static_assert(offsetof(BPC_Weather_Master_C_OnFadeIn, Progress) == 0x000000, "Member 'BPC_Weather_Master_C_OnFadeIn::Progress' has a wrong offset!");

// Function BPC_Weather_Master.BPC_Weather_Master_C.OnFadeOut
// 0x0004 (0x0004 - 0x0000)
struct BPC_Weather_Master_C_OnFadeOut final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_Weather_Master_C_OnFadeOut) == 0x000004, "Wrong alignment on BPC_Weather_Master_C_OnFadeOut");
static_assert(sizeof(BPC_Weather_Master_C_OnFadeOut) == 0x000004, "Wrong size on BPC_Weather_Master_C_OnFadeOut");
static_assert(offsetof(BPC_Weather_Master_C_OnFadeOut, Progress) == 0x000000, "Member 'BPC_Weather_Master_C_OnFadeOut::Progress' has a wrong offset!");

}

