#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GameFeatures

#include "Basic.hpp"

#include "GameFeatures_classes.hpp"
#include "GameFeatures_parameters.hpp"


namespace SDK
{

// Function GameFeatures.GameFeatureData.GetPluginName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UGameFeatureData*           GFD                                                    (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString*                          PluginName                                             (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameFeatureData::GetPluginName(const class UGameFeatureData* GFD, class FString* PluginName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GameFeatureData", "GetPluginName");

	Params::GameFeatureData_GetPluginName Parms{};

	Parms.GFD = GFD;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PluginName != nullptr)
		*PluginName = std::move(Parms.PluginName);
}


// Function GameFeatures.GameFeaturesSubsystem.GetActivePluginNames
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSet<class FString>                     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TSet<class FString> UGameFeaturesSubsystem::GetActivePluginNames() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameFeaturesSubsystem", "GetActivePluginNames");

	Params::GameFeaturesSubsystem_GetActivePluginNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameFeatures.GameFeaturesSubsystem.GetRegisteredPluginNames
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UGameFeaturesSubsystem::GetRegisteredPluginNames() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameFeaturesSubsystem", "GetRegisteredPluginNames");

	Params::GameFeaturesSubsystem_GetRegisteredPluginNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

