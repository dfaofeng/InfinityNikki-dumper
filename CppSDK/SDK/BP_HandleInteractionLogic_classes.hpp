#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HandleInteractionLogic

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_InteractiveAngleLocationType_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_X6ActorComponent_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HandleInteractionLogic.BP_HandleInteractionLogic_C
// 0x0040 (0x00E8 - 0x00A8)
class UBP_HandleInteractionLogic_C final : public UBP_X6ActorComponent_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	int32                                         BP_InteractAngle;                                  // 0x00B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BP_BeInteractAngle;                                // 0x00B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_InteractiveAngleLocationType                BP_InteractiveAngleLocationType;                   // 0x00B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   BP_InteractAngleTargetAttachComponentTag;          // 0x00BC(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BP_InteractAngleTargetAttachSocket;                // 0x00C4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                BP_InteractAngleOffset;                            // 0x00D0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ReceiveBeginPlay();
	void ExecuteUbergraph_BP_HandleInteractionLogic(int32 EntryPoint);

	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HandleInteractionLogic_C">();
	}
	static class UBP_HandleInteractionLogic_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_HandleInteractionLogic_C>();
	}
};
static_assert(alignof(UBP_HandleInteractionLogic_C) == 0x000008, "Wrong alignment on UBP_HandleInteractionLogic_C");
static_assert(sizeof(UBP_HandleInteractionLogic_C) == 0x0000E8, "Wrong size on UBP_HandleInteractionLogic_C");
static_assert(offsetof(UBP_HandleInteractionLogic_C, UberGraphFrame) == 0x0000A8, "Member 'UBP_HandleInteractionLogic_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_HandleInteractionLogic_C, BP_InteractAngle) == 0x0000B0, "Member 'UBP_HandleInteractionLogic_C::BP_InteractAngle' has a wrong offset!");
static_assert(offsetof(UBP_HandleInteractionLogic_C, BP_BeInteractAngle) == 0x0000B4, "Member 'UBP_HandleInteractionLogic_C::BP_BeInteractAngle' has a wrong offset!");
static_assert(offsetof(UBP_HandleInteractionLogic_C, BP_InteractiveAngleLocationType) == 0x0000B8, "Member 'UBP_HandleInteractionLogic_C::BP_InteractiveAngleLocationType' has a wrong offset!");
static_assert(offsetof(UBP_HandleInteractionLogic_C, BP_InteractAngleTargetAttachComponentTag) == 0x0000BC, "Member 'UBP_HandleInteractionLogic_C::BP_InteractAngleTargetAttachComponentTag' has a wrong offset!");
static_assert(offsetof(UBP_HandleInteractionLogic_C, BP_InteractAngleTargetAttachSocket) == 0x0000C4, "Member 'UBP_HandleInteractionLogic_C::BP_InteractAngleTargetAttachSocket' has a wrong offset!");
static_assert(offsetof(UBP_HandleInteractionLogic_C, BP_InteractAngleOffset) == 0x0000D0, "Member 'UBP_HandleInteractionLogic_C::BP_InteractAngleOffset' has a wrong offset!");

}

