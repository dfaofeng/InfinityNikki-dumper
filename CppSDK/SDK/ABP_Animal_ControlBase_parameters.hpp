#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Animal_ControlBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ABP_Animal_ControlBase.ABP_Animal_ControlBase_C.ExecuteUbergraph_ABP_Animal_ControlBase
// 0x00E0 (0x00E0 - 0x0000)
struct ABP_Animal_ControlBase_C_ExecuteUbergraph_ABP_Animal_ControlBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_1;            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterMovementComponent*            K2Node_DynamicCast_AsCharacter_Movement_Component; // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCurrentAcceleration_ReturnValue;       // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue_1;       // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_A_ImplicitCast;               // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Animal_ControlBase_C_ExecuteUbergraph_ABP_Animal_ControlBase) == 0x000008, "Wrong alignment on ABP_Animal_ControlBase_C_ExecuteUbergraph_ABP_Animal_ControlBase");
static_assert(sizeof(ABP_Animal_ControlBase_C_ExecuteUbergraph_ABP_Animal_ControlBase) == 0x0000E0, "Wrong size on ABP_Animal_ControlBase_C_ExecuteUbergraph_ABP_Animal_ControlBase");
static_assert(offsetof(ABP_Animal_ControlBase_C_ExecuteUbergraph_ABP_Animal_ControlBase, EntryPoint) == 0x000000, "Member 'ABP_Animal_ControlBase_C_ExecuteUbergraph_ABP_Animal_ControlBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_Animal_ControlBase_C_ExecuteUbergraph_ABP_Animal_ControlBase, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000008, "Member 'ABP_Animal_ControlBase_C_ExecuteUbergraph_ABP_Animal_ControlBase::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Animal_ControlBase_C_ExecuteUbergraph_ABP_Animal_ControlBase, CallFunc_GetActorForwardVector_ReturnValue) == 0x000010, "Member 'ABP_Animal_ControlBase_C_ExecuteUbergraph_ABP_Animal_ControlBase::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Animal_ControlBase_C_ExecuteUbergraph_ABP_Animal_ControlBase, CallFunc_TryGetPawnOwner_ReturnValue_1) == 0x000028, "Member 'ABP_Animal_ControlBase_C_ExecuteUbergraph_ABP_Animal_ControlBase::CallFunc_TryGetPawnOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Animal_ControlBase_C_ExecuteUbergraph_ABP_Animal_ControlBase, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000030, "Member 'ABP_Animal_ControlBase_C_ExecuteUbergraph_ABP_Animal_ControlBase::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Animal_ControlBase_C_ExecuteUbergraph_ABP_Animal_ControlBase, CallFunc_GetMovementComponent_ReturnValue) == 0x000048, "Member 'ABP_Animal_ControlBase_C_ExecuteUbergraph_ABP_Animal_ControlBase::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Animal_ControlBase_C_ExecuteUbergraph_ABP_Animal_ControlBase, K2Node_Event_DeltaTimeX) == 0x000050, "Member 'ABP_Animal_ControlBase_C_ExecuteUbergraph_ABP_Animal_ControlBase::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_Animal_ControlBase_C_ExecuteUbergraph_ABP_Animal_ControlBase, K2Node_DynamicCast_AsCharacter_Movement_Component) == 0x000058, "Member 'ABP_Animal_ControlBase_C_ExecuteUbergraph_ABP_Animal_ControlBase::K2Node_DynamicCast_AsCharacter_Movement_Component' has a wrong offset!");
static_assert(offsetof(ABP_Animal_ControlBase_C_ExecuteUbergraph_ABP_Animal_ControlBase, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'ABP_Animal_ControlBase_C_ExecuteUbergraph_ABP_Animal_ControlBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_Animal_ControlBase_C_ExecuteUbergraph_ABP_Animal_ControlBase, CallFunc_GetCurrentAcceleration_ReturnValue) == 0x000068, "Member 'ABP_Animal_ControlBase_C_ExecuteUbergraph_ABP_Animal_ControlBase::CallFunc_GetCurrentAcceleration_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Animal_ControlBase_C_ExecuteUbergraph_ABP_Animal_ControlBase, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000080, "Member 'ABP_Animal_ControlBase_C_ExecuteUbergraph_ABP_Animal_ControlBase::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Animal_ControlBase_C_ExecuteUbergraph_ABP_Animal_ControlBase, CallFunc_Conv_VectorToRotator_ReturnValue_1) == 0x000088, "Member 'ABP_Animal_ControlBase_C_ExecuteUbergraph_ABP_Animal_ControlBase::CallFunc_Conv_VectorToRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Animal_ControlBase_C_ExecuteUbergraph_ABP_Animal_ControlBase, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x0000A0, "Member 'ABP_Animal_ControlBase_C_ExecuteUbergraph_ABP_Animal_ControlBase::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Animal_ControlBase_C_ExecuteUbergraph_ABP_Animal_ControlBase, CallFunc_VSize_ReturnValue) == 0x0000B8, "Member 'ABP_Animal_ControlBase_C_ExecuteUbergraph_ABP_Animal_ControlBase::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Animal_ControlBase_C_ExecuteUbergraph_ABP_Animal_ControlBase, CallFunc_BreakRotator_Roll) == 0x0000C0, "Member 'ABP_Animal_ControlBase_C_ExecuteUbergraph_ABP_Animal_ControlBase::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ABP_Animal_ControlBase_C_ExecuteUbergraph_ABP_Animal_ControlBase, CallFunc_BreakRotator_Pitch) == 0x0000C4, "Member 'ABP_Animal_ControlBase_C_ExecuteUbergraph_ABP_Animal_ControlBase::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ABP_Animal_ControlBase_C_ExecuteUbergraph_ABP_Animal_ControlBase, CallFunc_BreakRotator_Yaw) == 0x0000C8, "Member 'ABP_Animal_ControlBase_C_ExecuteUbergraph_ABP_Animal_ControlBase::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ABP_Animal_ControlBase_C_ExecuteUbergraph_ABP_Animal_ControlBase, CallFunc_SelectFloat_ReturnValue) == 0x0000D0, "Member 'ABP_Animal_ControlBase_C_ExecuteUbergraph_ABP_Animal_ControlBase::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Animal_ControlBase_C_ExecuteUbergraph_ABP_Animal_ControlBase, CallFunc_SelectFloat_A_ImplicitCast) == 0x0000D8, "Member 'ABP_Animal_ControlBase_C_ExecuteUbergraph_ABP_Animal_ControlBase::CallFunc_SelectFloat_A_ImplicitCast' has a wrong offset!");

// Function ABP_Animal_ControlBase.ABP_Animal_ControlBase_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_Animal_ControlBase_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Animal_ControlBase_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_Animal_ControlBase_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_Animal_ControlBase_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_Animal_ControlBase_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_Animal_ControlBase_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_Animal_ControlBase_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_Animal_ControlBase.ABP_Animal_ControlBase_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_Animal_ControlBase_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Animal_ControlBase_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_Animal_ControlBase_C_AnimGraph");
static_assert(sizeof(ABP_Animal_ControlBase_C_AnimGraph) == 0x000010, "Wrong size on ABP_Animal_ControlBase_C_AnimGraph");
static_assert(offsetof(ABP_Animal_ControlBase_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'ABP_Animal_ControlBase_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

