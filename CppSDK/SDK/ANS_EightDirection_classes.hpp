#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ANS_EightDirection

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ANS_EightDirection.ANS_EightDirection_C
// 0x0018 (0x0048 - 0x0030)
class UANS_EightDirection_C final : public UAnimNotifyState
{
public:
	bool                                          bObeySetting;                                      // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AimingCameraSwitch;                                // 0x0031(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        BlendOutDelayTime;                                 // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraBaseParamsData*                  SpecifiedCameraConfig;                             // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

public:
	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ANS_EightDirection_C">();
	}
	static class UANS_EightDirection_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UANS_EightDirection_C>();
	}
};
static_assert(alignof(UANS_EightDirection_C) == 0x000008, "Wrong alignment on UANS_EightDirection_C");
static_assert(sizeof(UANS_EightDirection_C) == 0x000048, "Wrong size on UANS_EightDirection_C");
static_assert(offsetof(UANS_EightDirection_C, bObeySetting) == 0x000030, "Member 'UANS_EightDirection_C::bObeySetting' has a wrong offset!");
static_assert(offsetof(UANS_EightDirection_C, AimingCameraSwitch) == 0x000031, "Member 'UANS_EightDirection_C::AimingCameraSwitch' has a wrong offset!");
static_assert(offsetof(UANS_EightDirection_C, BlendOutDelayTime) == 0x000038, "Member 'UANS_EightDirection_C::BlendOutDelayTime' has a wrong offset!");
static_assert(offsetof(UANS_EightDirection_C, SpecifiedCameraConfig) == 0x000040, "Member 'UANS_EightDirection_C::SpecifiedCameraConfig' has a wrong offset!");

}

