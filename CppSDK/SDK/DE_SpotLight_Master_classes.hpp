#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DE_SpotLight_Master

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "E_DeLightType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass DE_SpotLight_Master.DE_SpotLight_Master_C
// 0x0030 (0x03F0 - 0x03C0)
class ADE_SpotLight_Master_C : public ASpotLight
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	E_DeLightType                                 ___LightType___;                                   // 0x03C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C9[0x3];                                      // 0x03C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LightMgrRuleID;                                    // 0x03CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isLightOn;                                         // 0x03D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Disable_LightFuncton_for_Low_End_Platform;         // 0x03D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D2[0x2];                                      // 0x03D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LightIntensityPC;                                  // 0x03D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LightIntensityMobileMultiply;                      // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureLightProfile*                   IES_PC;                                            // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash)
	bool                                          Disable_IES_for_Low_End_Platform;                  // 0x03E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseMultiplyVar;                                    // 0x03E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	bool UseMultiplyParam();
	void UpdateLightState();
	void UpdateDELight();
	void ReceiveBeginPlay();
	float GetFinalIntensity();
	void ExecuteUbergraph_DE_SpotLight_Master(int32 EntryPoint);
	void Disable_LightFuncton_and_IES(class ULightComponent* InputPin);
	void Clean_IES();
	void CheckIES();
	void CheckerMultiplyRenderState(class USpotLightComponent* InputPin);

	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DE_SpotLight_Master_C">();
	}
	static class ADE_SpotLight_Master_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADE_SpotLight_Master_C>();
	}
};
static_assert(alignof(ADE_SpotLight_Master_C) == 0x000008, "Wrong alignment on ADE_SpotLight_Master_C");
static_assert(sizeof(ADE_SpotLight_Master_C) == 0x0003F0, "Wrong size on ADE_SpotLight_Master_C");
static_assert(offsetof(ADE_SpotLight_Master_C, UberGraphFrame) == 0x0003C0, "Member 'ADE_SpotLight_Master_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ADE_SpotLight_Master_C, ___LightType___) == 0x0003C8, "Member 'ADE_SpotLight_Master_C::___LightType___' has a wrong offset!");
static_assert(offsetof(ADE_SpotLight_Master_C, LightMgrRuleID) == 0x0003CC, "Member 'ADE_SpotLight_Master_C::LightMgrRuleID' has a wrong offset!");
static_assert(offsetof(ADE_SpotLight_Master_C, isLightOn) == 0x0003D0, "Member 'ADE_SpotLight_Master_C::isLightOn' has a wrong offset!");
static_assert(offsetof(ADE_SpotLight_Master_C, Disable_LightFuncton_for_Low_End_Platform) == 0x0003D1, "Member 'ADE_SpotLight_Master_C::Disable_LightFuncton_for_Low_End_Platform' has a wrong offset!");
static_assert(offsetof(ADE_SpotLight_Master_C, LightIntensityPC) == 0x0003D4, "Member 'ADE_SpotLight_Master_C::LightIntensityPC' has a wrong offset!");
static_assert(offsetof(ADE_SpotLight_Master_C, LightIntensityMobileMultiply) == 0x0003D8, "Member 'ADE_SpotLight_Master_C::LightIntensityMobileMultiply' has a wrong offset!");
static_assert(offsetof(ADE_SpotLight_Master_C, IES_PC) == 0x0003E0, "Member 'ADE_SpotLight_Master_C::IES_PC' has a wrong offset!");
static_assert(offsetof(ADE_SpotLight_Master_C, Disable_IES_for_Low_End_Platform) == 0x0003E8, "Member 'ADE_SpotLight_Master_C::Disable_IES_for_Low_End_Platform' has a wrong offset!");
static_assert(offsetof(ADE_SpotLight_Master_C, UseMultiplyVar) == 0x0003E9, "Member 'ADE_SpotLight_Master_C::UseMultiplyVar' has a wrong offset!");

}

