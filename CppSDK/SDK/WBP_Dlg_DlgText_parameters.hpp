#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Dlg_DlgText

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_Dlg_DlgText.WBP_Dlg_DlgText_C.SetSpeakerNameDirectly
// 0x0010 (0x0010 - 0x0000)
struct WBP_Dlg_DlgText_C_SetSpeakerNameDirectly final
{
public:
	class FText                                   InName;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_Dlg_DlgText_C_SetSpeakerNameDirectly) == 0x000008, "Wrong alignment on WBP_Dlg_DlgText_C_SetSpeakerNameDirectly");
static_assert(sizeof(WBP_Dlg_DlgText_C_SetSpeakerNameDirectly) == 0x000010, "Wrong size on WBP_Dlg_DlgText_C_SetSpeakerNameDirectly");
static_assert(offsetof(WBP_Dlg_DlgText_C_SetSpeakerNameDirectly, InName) == 0x000000, "Member 'WBP_Dlg_DlgText_C_SetSpeakerNameDirectly::InName' has a wrong offset!");

// Function WBP_Dlg_DlgText.WBP_Dlg_DlgText_C.SetSpeakerName
// 0x0160 (0x0160 - 0x0000)
struct WBP_Dlg_DlgText_C_SetSpeakerName final
{
public:
	class FName                                   SpeakerTag;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Name_0;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FSlateColor                            LocalNameColor;                                    // 0x0018(0x0014)(Edit, BlueprintVisible)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   LocalName;                                         // 0x0030(0x0010)(Edit, BlueprintVisible)
	class UObject*                                LocalNameBGTexture;                                // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0048(0x0014)()
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0060(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x0074(0x0014)()
	uint8                                         Pad_88[0x8];                                       // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_X6MakeBrushFromTexture_ReturnValue;       // 0x0090(0x00D0)()
};
static_assert(alignof(WBP_Dlg_DlgText_C_SetSpeakerName) == 0x000010, "Wrong alignment on WBP_Dlg_DlgText_C_SetSpeakerName");
static_assert(sizeof(WBP_Dlg_DlgText_C_SetSpeakerName) == 0x000160, "Wrong size on WBP_Dlg_DlgText_C_SetSpeakerName");
static_assert(offsetof(WBP_Dlg_DlgText_C_SetSpeakerName, SpeakerTag) == 0x000000, "Member 'WBP_Dlg_DlgText_C_SetSpeakerName::SpeakerTag' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_DlgText_C_SetSpeakerName, Name_0) == 0x000008, "Member 'WBP_Dlg_DlgText_C_SetSpeakerName::Name_0' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_DlgText_C_SetSpeakerName, LocalNameColor) == 0x000018, "Member 'WBP_Dlg_DlgText_C_SetSpeakerName::LocalNameColor' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_DlgText_C_SetSpeakerName, LocalName) == 0x000030, "Member 'WBP_Dlg_DlgText_C_SetSpeakerName::LocalName' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_DlgText_C_SetSpeakerName, LocalNameBGTexture) == 0x000040, "Member 'WBP_Dlg_DlgText_C_SetSpeakerName::LocalNameBGTexture' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_DlgText_C_SetSpeakerName, K2Node_MakeStruct_SlateColor) == 0x000048, "Member 'WBP_Dlg_DlgText_C_SetSpeakerName::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_DlgText_C_SetSpeakerName, K2Node_SwitchName_CmpSuccess) == 0x00005C, "Member 'WBP_Dlg_DlgText_C_SetSpeakerName::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_DlgText_C_SetSpeakerName, K2Node_MakeStruct_SlateColor_1) == 0x000060, "Member 'WBP_Dlg_DlgText_C_SetSpeakerName::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_DlgText_C_SetSpeakerName, K2Node_MakeStruct_SlateColor_2) == 0x000074, "Member 'WBP_Dlg_DlgText_C_SetSpeakerName::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_DlgText_C_SetSpeakerName, CallFunc_X6MakeBrushFromTexture_ReturnValue) == 0x000090, "Member 'WBP_Dlg_DlgText_C_SetSpeakerName::CallFunc_X6MakeBrushFromTexture_ReturnValue' has a wrong offset!");

// Function WBP_Dlg_DlgText.WBP_Dlg_DlgText_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Dlg_DlgText_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Dlg_DlgText_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Dlg_DlgText_C_PreConstruct");
static_assert(sizeof(WBP_Dlg_DlgText_C_PreConstruct) == 0x000001, "Wrong size on WBP_Dlg_DlgText_C_PreConstruct");
static_assert(offsetof(WBP_Dlg_DlgText_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Dlg_DlgText_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Dlg_DlgText.WBP_Dlg_DlgText_C.ExecuteUbergraph_WBP_Dlg_DlgText
// 0x0028 (0x0028 - 0x0000)
struct WBP_Dlg_DlgText_C_ExecuteUbergraph_WBP_Dlg_DlgText final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Dlg_DlgText_C_ExecuteUbergraph_WBP_Dlg_DlgText) == 0x000004, "Wrong alignment on WBP_Dlg_DlgText_C_ExecuteUbergraph_WBP_Dlg_DlgText");
static_assert(sizeof(WBP_Dlg_DlgText_C_ExecuteUbergraph_WBP_Dlg_DlgText) == 0x000028, "Wrong size on WBP_Dlg_DlgText_C_ExecuteUbergraph_WBP_Dlg_DlgText");
static_assert(offsetof(WBP_Dlg_DlgText_C_ExecuteUbergraph_WBP_Dlg_DlgText, EntryPoint) == 0x000000, "Member 'WBP_Dlg_DlgText_C_ExecuteUbergraph_WBP_Dlg_DlgText::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_DlgText_C_ExecuteUbergraph_WBP_Dlg_DlgText, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_Dlg_DlgText_C_ExecuteUbergraph_WBP_Dlg_DlgText::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_DlgText_C_ExecuteUbergraph_WBP_Dlg_DlgText, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'WBP_Dlg_DlgText_C_ExecuteUbergraph_WBP_Dlg_DlgText::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_DlgText_C_ExecuteUbergraph_WBP_Dlg_DlgText, K2Node_Event_IsDesignTime) == 0x000024, "Member 'WBP_Dlg_DlgText_C_ExecuteUbergraph_WBP_Dlg_DlgText::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_DlgText_C_ExecuteUbergraph_WBP_Dlg_DlgText, CallFunc_IsValid_ReturnValue) == 0x000025, "Member 'WBP_Dlg_DlgText_C_ExecuteUbergraph_WBP_Dlg_DlgText::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_Dlg_DlgText.WBP_Dlg_DlgText_C.BP_SetLetterBoxMode
// 0x0030 (0x0030 - 0x0000)
struct WBP_Dlg_DlgText_C_BP_SetLetterBoxMode final
{
public:
	bool                                          bLetterBoxUI;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BP_GetLetterBoxSize_OutSingleHeightScale; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Bottom_ImplicitCast;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Top_ImplicitCast;                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Dlg_DlgText_C_BP_SetLetterBoxMode) == 0x000008, "Wrong alignment on WBP_Dlg_DlgText_C_BP_SetLetterBoxMode");
static_assert(sizeof(WBP_Dlg_DlgText_C_BP_SetLetterBoxMode) == 0x000030, "Wrong size on WBP_Dlg_DlgText_C_BP_SetLetterBoxMode");
static_assert(offsetof(WBP_Dlg_DlgText_C_BP_SetLetterBoxMode, bLetterBoxUI) == 0x000000, "Member 'WBP_Dlg_DlgText_C_BP_SetLetterBoxMode::bLetterBoxUI' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_DlgText_C_BP_SetLetterBoxMode, CallFunc_BP_GetLetterBoxSize_OutSingleHeightScale) == 0x000008, "Member 'WBP_Dlg_DlgText_C_BP_SetLetterBoxMode::CallFunc_BP_GetLetterBoxSize_OutSingleHeightScale' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_DlgText_C_BP_SetLetterBoxMode, K2Node_MakeStruct_Margin) == 0x000010, "Member 'WBP_Dlg_DlgText_C_BP_SetLetterBoxMode::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_DlgText_C_BP_SetLetterBoxMode, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000020, "Member 'WBP_Dlg_DlgText_C_BP_SetLetterBoxMode::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_DlgText_C_BP_SetLetterBoxMode, K2Node_MakeStruct_Bottom_ImplicitCast) == 0x000028, "Member 'WBP_Dlg_DlgText_C_BP_SetLetterBoxMode::K2Node_MakeStruct_Bottom_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_DlgText_C_BP_SetLetterBoxMode, K2Node_MakeStruct_Top_ImplicitCast) == 0x00002C, "Member 'WBP_Dlg_DlgText_C_BP_SetLetterBoxMode::K2Node_MakeStruct_Top_ImplicitCast' has a wrong offset!");

// Function WBP_Dlg_DlgText.WBP_Dlg_DlgText_C.BP_GetLetterBoxSize
// 0x00E8 (0x00E8 - 0x0000)
struct WBP_Dlg_DlgText_C_BP_GetLetterBoxSize final
{
public:
	double                                        OutSingleHeightScale;                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LetterBoxSingleHeightScale;                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AspectRatio;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ViewPortSize;                                      // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlatformMobile;                                   // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Conv_DoubleToVector2D_ReturnValue;        // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlatformName_ReturnValue;              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue;      // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2[0x2];                                       // 0x00C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast_1;      // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_LetterBoxSingleHeightScale_ImplicitCast; // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_LetterBoxSingleHeightScale_ImplicitCast_1; // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToVector2D_InDouble_ImplicitCast; // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Dlg_DlgText_C_BP_GetLetterBoxSize) == 0x000008, "Wrong alignment on WBP_Dlg_DlgText_C_BP_GetLetterBoxSize");
static_assert(sizeof(WBP_Dlg_DlgText_C_BP_GetLetterBoxSize) == 0x0000E8, "Wrong size on WBP_Dlg_DlgText_C_BP_GetLetterBoxSize");
static_assert(offsetof(WBP_Dlg_DlgText_C_BP_GetLetterBoxSize, OutSingleHeightScale) == 0x000000, "Member 'WBP_Dlg_DlgText_C_BP_GetLetterBoxSize::OutSingleHeightScale' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_DlgText_C_BP_GetLetterBoxSize, LetterBoxSingleHeightScale) == 0x000008, "Member 'WBP_Dlg_DlgText_C_BP_GetLetterBoxSize::LetterBoxSingleHeightScale' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_DlgText_C_BP_GetLetterBoxSize, AspectRatio) == 0x000010, "Member 'WBP_Dlg_DlgText_C_BP_GetLetterBoxSize::AspectRatio' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_DlgText_C_BP_GetLetterBoxSize, ViewPortSize) == 0x000018, "Member 'WBP_Dlg_DlgText_C_BP_GetLetterBoxSize::ViewPortSize' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_DlgText_C_BP_GetLetterBoxSize, bPlatformMobile) == 0x000028, "Member 'WBP_Dlg_DlgText_C_BP_GetLetterBoxSize::bPlatformMobile' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_DlgText_C_BP_GetLetterBoxSize, CallFunc_GetFloatValue_ReturnValue) == 0x00002C, "Member 'WBP_Dlg_DlgText_C_BP_GetLetterBoxSize::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_DlgText_C_BP_GetLetterBoxSize, CallFunc_GetFloatValue_ReturnValue_1) == 0x000030, "Member 'WBP_Dlg_DlgText_C_BP_GetLetterBoxSize::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_DlgText_C_BP_GetLetterBoxSize, CallFunc_BreakVector2D_X) == 0x000038, "Member 'WBP_Dlg_DlgText_C_BP_GetLetterBoxSize::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_DlgText_C_BP_GetLetterBoxSize, CallFunc_BreakVector2D_Y) == 0x000040, "Member 'WBP_Dlg_DlgText_C_BP_GetLetterBoxSize::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_DlgText_C_BP_GetLetterBoxSize, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000048, "Member 'WBP_Dlg_DlgText_C_BP_GetLetterBoxSize::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_DlgText_C_BP_GetLetterBoxSize, CallFunc_BreakVector2D_X_1) == 0x000050, "Member 'WBP_Dlg_DlgText_C_BP_GetLetterBoxSize::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_DlgText_C_BP_GetLetterBoxSize, CallFunc_BreakVector2D_Y_1) == 0x000058, "Member 'WBP_Dlg_DlgText_C_BP_GetLetterBoxSize::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_DlgText_C_BP_GetLetterBoxSize, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000060, "Member 'WBP_Dlg_DlgText_C_BP_GetLetterBoxSize::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_DlgText_C_BP_GetLetterBoxSize, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'WBP_Dlg_DlgText_C_BP_GetLetterBoxSize::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_DlgText_C_BP_GetLetterBoxSize, CallFunc_GetViewportScale_ReturnValue) == 0x000070, "Member 'WBP_Dlg_DlgText_C_BP_GetLetterBoxSize::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_DlgText_C_BP_GetLetterBoxSize, CallFunc_Conv_DoubleToVector2D_ReturnValue) == 0x000078, "Member 'WBP_Dlg_DlgText_C_BP_GetLetterBoxSize::CallFunc_Conv_DoubleToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_DlgText_C_BP_GetLetterBoxSize, CallFunc_GetPlatformName_ReturnValue) == 0x000088, "Member 'WBP_Dlg_DlgText_C_BP_GetLetterBoxSize::CallFunc_GetPlatformName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_DlgText_C_BP_GetLetterBoxSize, CallFunc_GetViewportSize_ReturnValue) == 0x000098, "Member 'WBP_Dlg_DlgText_C_BP_GetLetterBoxSize::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_DlgText_C_BP_GetLetterBoxSize, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0000A8, "Member 'WBP_Dlg_DlgText_C_BP_GetLetterBoxSize::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_DlgText_C_BP_GetLetterBoxSize, CallFunc_Divide_Vector2DVector2D_ReturnValue) == 0x0000B0, "Member 'WBP_Dlg_DlgText_C_BP_GetLetterBoxSize::CallFunc_Divide_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_DlgText_C_BP_GetLetterBoxSize, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x0000C0, "Member 'WBP_Dlg_DlgText_C_BP_GetLetterBoxSize::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_DlgText_C_BP_GetLetterBoxSize, CallFunc_BooleanOR_ReturnValue) == 0x0000C1, "Member 'WBP_Dlg_DlgText_C_BP_GetLetterBoxSize::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_DlgText_C_BP_GetLetterBoxSize, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x0000C4, "Member 'WBP_Dlg_DlgText_C_BP_GetLetterBoxSize::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_DlgText_C_BP_GetLetterBoxSize, CallFunc_GetFloatValue_InTime_ImplicitCast_1) == 0x0000C8, "Member 'WBP_Dlg_DlgText_C_BP_GetLetterBoxSize::CallFunc_GetFloatValue_InTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_DlgText_C_BP_GetLetterBoxSize, K2Node_VariableSet_LetterBoxSingleHeightScale_ImplicitCast) == 0x0000D0, "Member 'WBP_Dlg_DlgText_C_BP_GetLetterBoxSize::K2Node_VariableSet_LetterBoxSingleHeightScale_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_DlgText_C_BP_GetLetterBoxSize, K2Node_VariableSet_LetterBoxSingleHeightScale_ImplicitCast_1) == 0x0000D8, "Member 'WBP_Dlg_DlgText_C_BP_GetLetterBoxSize::K2Node_VariableSet_LetterBoxSingleHeightScale_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_Dlg_DlgText_C_BP_GetLetterBoxSize, CallFunc_Conv_DoubleToVector2D_InDouble_ImplicitCast) == 0x0000E0, "Member 'WBP_Dlg_DlgText_C_BP_GetLetterBoxSize::CallFunc_Conv_DoubleToVector2D_InDouble_ImplicitCast' has a wrong offset!");

}

