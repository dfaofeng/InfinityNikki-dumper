#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MainFaculaLighter

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MainFaculaLighter.BP_MainFaculaLighter_C
// 0x0030 (0x03D8 - 0x03A8)
class ABP_MainFaculaLighter_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBillboardComponent*                    Billboard;                                         // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABP_CLFS_Mgr_C*                         Ref_CLFS;                                          // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UTexture*                               Lighten_Texture;                                   // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        Intensity;                                         // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_MainFaculaLighter(int32 EntryPoint);
	void Lighten();
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MainFaculaLighter_C">();
	}
	static class ABP_MainFaculaLighter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MainFaculaLighter_C>();
	}
};
static_assert(alignof(ABP_MainFaculaLighter_C) == 0x000008, "Wrong alignment on ABP_MainFaculaLighter_C");
static_assert(sizeof(ABP_MainFaculaLighter_C) == 0x0003D8, "Wrong size on ABP_MainFaculaLighter_C");
static_assert(offsetof(ABP_MainFaculaLighter_C, UberGraphFrame) == 0x0003A8, "Member 'ABP_MainFaculaLighter_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_MainFaculaLighter_C, Billboard) == 0x0003B0, "Member 'ABP_MainFaculaLighter_C::Billboard' has a wrong offset!");
static_assert(offsetof(ABP_MainFaculaLighter_C, Scene) == 0x0003B8, "Member 'ABP_MainFaculaLighter_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_MainFaculaLighter_C, Ref_CLFS) == 0x0003C0, "Member 'ABP_MainFaculaLighter_C::Ref_CLFS' has a wrong offset!");
static_assert(offsetof(ABP_MainFaculaLighter_C, Lighten_Texture) == 0x0003C8, "Member 'ABP_MainFaculaLighter_C::Lighten_Texture' has a wrong offset!");
static_assert(offsetof(ABP_MainFaculaLighter_C, Intensity) == 0x0003D0, "Member 'ABP_MainFaculaLighter_C::Intensity' has a wrong offset!");

}

