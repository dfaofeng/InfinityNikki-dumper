#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Hud_HP_Item

#include "Basic.hpp"


namespace SDK::Params
{

// Function WBP_Hud_HP_Item.WBP_Hud_HP_Item_C.BecomeNormalAtOnce
// 0x0018 (0x0018 - 0x0000)
struct WBP_Hud_HP_Item_C_BecomeNormalAtOnce final
{
public:
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue_1;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationTimeRange_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationTimeRange_ReturnValue_1;     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Hud_HP_Item_C_BecomeNormalAtOnce) == 0x000008, "Wrong alignment on WBP_Hud_HP_Item_C_BecomeNormalAtOnce");
static_assert(sizeof(WBP_Hud_HP_Item_C_BecomeNormalAtOnce) == 0x000018, "Wrong size on WBP_Hud_HP_Item_C_BecomeNormalAtOnce");
static_assert(offsetof(WBP_Hud_HP_Item_C_BecomeNormalAtOnce, CallFunc_GetEndTime_ReturnValue) == 0x000000, "Member 'WBP_Hud_HP_Item_C_BecomeNormalAtOnce::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Hud_HP_Item_C_BecomeNormalAtOnce, CallFunc_GetEndTime_ReturnValue_1) == 0x000004, "Member 'WBP_Hud_HP_Item_C_BecomeNormalAtOnce::CallFunc_GetEndTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Hud_HP_Item_C_BecomeNormalAtOnce, CallFunc_PlayAnimationTimeRange_ReturnValue) == 0x000008, "Member 'WBP_Hud_HP_Item_C_BecomeNormalAtOnce::CallFunc_PlayAnimationTimeRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Hud_HP_Item_C_BecomeNormalAtOnce, CallFunc_PlayAnimationTimeRange_ReturnValue_1) == 0x000010, "Member 'WBP_Hud_HP_Item_C_BecomeNormalAtOnce::CallFunc_PlayAnimationTimeRange_ReturnValue_1' has a wrong offset!");

// Function WBP_Hud_HP_Item.WBP_Hud_HP_Item_C.BecomeSmallAtOnce
// 0x0008 (0x0008 - 0x0000)
struct WBP_Hud_HP_Item_C_BecomeSmallAtOnce final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Hud_HP_Item_C_BecomeSmallAtOnce) == 0x000008, "Wrong alignment on WBP_Hud_HP_Item_C_BecomeSmallAtOnce");
static_assert(sizeof(WBP_Hud_HP_Item_C_BecomeSmallAtOnce) == 0x000008, "Wrong size on WBP_Hud_HP_Item_C_BecomeSmallAtOnce");
static_assert(offsetof(WBP_Hud_HP_Item_C_BecomeSmallAtOnce, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_Hud_HP_Item_C_BecomeSmallAtOnce::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_Hud_HP_Item.WBP_Hud_HP_Item_C.BecomeSmallToNormal
// 0x0008 (0x0008 - 0x0000)
struct WBP_Hud_HP_Item_C_BecomeSmallToNormal final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Hud_HP_Item_C_BecomeSmallToNormal) == 0x000008, "Wrong alignment on WBP_Hud_HP_Item_C_BecomeSmallToNormal");
static_assert(sizeof(WBP_Hud_HP_Item_C_BecomeSmallToNormal) == 0x000008, "Wrong size on WBP_Hud_HP_Item_C_BecomeSmallToNormal");
static_assert(offsetof(WBP_Hud_HP_Item_C_BecomeSmallToNormal, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_Hud_HP_Item_C_BecomeSmallToNormal::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_Hud_HP_Item.WBP_Hud_HP_Item_C.ExecuteUbergraph_WBP_Hud_HP_Item
// 0x0018 (0x0018 - 0x0000)
struct WBP_Hud_HP_Item_C_ExecuteUbergraph_WBP_Hud_HP_Item final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UWidgetAnimation*                 K2Node_Event_Animation;                            // 0x0008(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Hud_HP_Item_C_ExecuteUbergraph_WBP_Hud_HP_Item) == 0x000008, "Wrong alignment on WBP_Hud_HP_Item_C_ExecuteUbergraph_WBP_Hud_HP_Item");
static_assert(sizeof(WBP_Hud_HP_Item_C_ExecuteUbergraph_WBP_Hud_HP_Item) == 0x000018, "Wrong size on WBP_Hud_HP_Item_C_ExecuteUbergraph_WBP_Hud_HP_Item");
static_assert(offsetof(WBP_Hud_HP_Item_C_ExecuteUbergraph_WBP_Hud_HP_Item, EntryPoint) == 0x000000, "Member 'WBP_Hud_HP_Item_C_ExecuteUbergraph_WBP_Hud_HP_Item::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Hud_HP_Item_C_ExecuteUbergraph_WBP_Hud_HP_Item, K2Node_Event_Animation) == 0x000008, "Member 'WBP_Hud_HP_Item_C_ExecuteUbergraph_WBP_Hud_HP_Item::K2Node_Event_Animation' has a wrong offset!");
static_assert(offsetof(WBP_Hud_HP_Item_C_ExecuteUbergraph_WBP_Hud_HP_Item, CallFunc_Array_RemoveItem_ReturnValue) == 0x000010, "Member 'WBP_Hud_HP_Item_C_ExecuteUbergraph_WBP_Hud_HP_Item::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function WBP_Hud_HP_Item.WBP_Hud_HP_Item_C.HideBg
// 0x0008 (0x0008 - 0x0000)
struct WBP_Hud_HP_Item_C_HideBg final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Hud_HP_Item_C_HideBg) == 0x000008, "Wrong alignment on WBP_Hud_HP_Item_C_HideBg");
static_assert(sizeof(WBP_Hud_HP_Item_C_HideBg) == 0x000008, "Wrong size on WBP_Hud_HP_Item_C_HideBg");
static_assert(offsetof(WBP_Hud_HP_Item_C_HideBg, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_Hud_HP_Item_C_HideBg::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_Hud_HP_Item.WBP_Hud_HP_Item_C.OnAnimationFinished
// 0x0008 (0x0008 - 0x0000)
struct WBP_Hud_HP_Item_C_OnAnimationFinished final
{
public:
	const class UWidgetAnimation*                 Animation;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Hud_HP_Item_C_OnAnimationFinished) == 0x000008, "Wrong alignment on WBP_Hud_HP_Item_C_OnAnimationFinished");
static_assert(sizeof(WBP_Hud_HP_Item_C_OnAnimationFinished) == 0x000008, "Wrong size on WBP_Hud_HP_Item_C_OnAnimationFinished");
static_assert(offsetof(WBP_Hud_HP_Item_C_OnAnimationFinished, Animation) == 0x000000, "Member 'WBP_Hud_HP_Item_C_OnAnimationFinished::Animation' has a wrong offset!");

// Function WBP_Hud_HP_Item.WBP_Hud_HP_Item_C.PlayAnimationInternal
// 0x0020 (0x0020 - 0x0000)
struct WBP_Hud_HP_Item_C_PlayAnimationInternal final
{
public:
	class UWidgetAnimation*                       Anim;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          needLoop;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Hud_HP_Item_C_PlayAnimationInternal) == 0x000008, "Wrong alignment on WBP_Hud_HP_Item_C_PlayAnimationInternal");
static_assert(sizeof(WBP_Hud_HP_Item_C_PlayAnimationInternal) == 0x000020, "Wrong size on WBP_Hud_HP_Item_C_PlayAnimationInternal");
static_assert(offsetof(WBP_Hud_HP_Item_C_PlayAnimationInternal, Anim) == 0x000000, "Member 'WBP_Hud_HP_Item_C_PlayAnimationInternal::Anim' has a wrong offset!");
static_assert(offsetof(WBP_Hud_HP_Item_C_PlayAnimationInternal, needLoop) == 0x000008, "Member 'WBP_Hud_HP_Item_C_PlayAnimationInternal::needLoop' has a wrong offset!");
static_assert(offsetof(WBP_Hud_HP_Item_C_PlayAnimationInternal, CallFunc_SelectInt_ReturnValue) == 0x00000C, "Member 'WBP_Hud_HP_Item_C_PlayAnimationInternal::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Hud_HP_Item_C_PlayAnimationInternal, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'WBP_Hud_HP_Item_C_PlayAnimationInternal::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Hud_HP_Item_C_PlayAnimationInternal, CallFunc_Array_AddUnique_ReturnValue) == 0x000018, "Member 'WBP_Hud_HP_Item_C_PlayAnimationInternal::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function WBP_Hud_HP_Item.WBP_Hud_HP_Item_C.PlayBothAddAnim
// 0x0018 (0x0018 - 0x0000)
struct WBP_Hud_HP_Item_C_PlayBothAddAnim final
{
public:
	bool                                          bSkipAnimation;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Hud_HP_Item_C_PlayBothAddAnim) == 0x000008, "Wrong alignment on WBP_Hud_HP_Item_C_PlayBothAddAnim");
static_assert(sizeof(WBP_Hud_HP_Item_C_PlayBothAddAnim) == 0x000018, "Wrong size on WBP_Hud_HP_Item_C_PlayBothAddAnim");
static_assert(offsetof(WBP_Hud_HP_Item_C_PlayBothAddAnim, bSkipAnimation) == 0x000000, "Member 'WBP_Hud_HP_Item_C_PlayBothAddAnim::bSkipAnimation' has a wrong offset!");
static_assert(offsetof(WBP_Hud_HP_Item_C_PlayBothAddAnim, CallFunc_Array_AddUnique_ReturnValue) == 0x000004, "Member 'WBP_Hud_HP_Item_C_PlayBothAddAnim::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Hud_HP_Item_C_PlayBothAddAnim, CallFunc_GetEndTime_ReturnValue) == 0x000008, "Member 'WBP_Hud_HP_Item_C_PlayBothAddAnim::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Hud_HP_Item_C_PlayBothAddAnim, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'WBP_Hud_HP_Item_C_PlayBothAddAnim::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_Hud_HP_Item.WBP_Hud_HP_Item_C.PlayBothMinusAnim
// 0x0018 (0x0018 - 0x0000)
struct WBP_Hud_HP_Item_C_PlayBothMinusAnim final
{
public:
	bool                                          bSkipAnimation;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Hud_HP_Item_C_PlayBothMinusAnim) == 0x000008, "Wrong alignment on WBP_Hud_HP_Item_C_PlayBothMinusAnim");
static_assert(sizeof(WBP_Hud_HP_Item_C_PlayBothMinusAnim) == 0x000018, "Wrong size on WBP_Hud_HP_Item_C_PlayBothMinusAnim");
static_assert(offsetof(WBP_Hud_HP_Item_C_PlayBothMinusAnim, bSkipAnimation) == 0x000000, "Member 'WBP_Hud_HP_Item_C_PlayBothMinusAnim::bSkipAnimation' has a wrong offset!");
static_assert(offsetof(WBP_Hud_HP_Item_C_PlayBothMinusAnim, CallFunc_Array_AddUnique_ReturnValue) == 0x000004, "Member 'WBP_Hud_HP_Item_C_PlayBothMinusAnim::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Hud_HP_Item_C_PlayBothMinusAnim, CallFunc_GetEndTime_ReturnValue) == 0x000008, "Member 'WBP_Hud_HP_Item_C_PlayBothMinusAnim::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Hud_HP_Item_C_PlayBothMinusAnim, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'WBP_Hud_HP_Item_C_PlayBothMinusAnim::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_Hud_HP_Item.WBP_Hud_HP_Item_C.SetHpState
// 0x0004 (0x0004 - 0x0000)
struct WBP_Hud_HP_Item_C_SetHpState final
{
public:
	int32                                         hpState;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Hud_HP_Item_C_SetHpState) == 0x000004, "Wrong alignment on WBP_Hud_HP_Item_C_SetHpState");
static_assert(sizeof(WBP_Hud_HP_Item_C_SetHpState) == 0x000004, "Wrong size on WBP_Hud_HP_Item_C_SetHpState");
static_assert(offsetof(WBP_Hud_HP_Item_C_SetHpState, hpState) == 0x000000, "Member 'WBP_Hud_HP_Item_C_SetHpState::hpState' has a wrong offset!");

// Function WBP_Hud_HP_Item.WBP_Hud_HP_Item_C.ShowBg
// 0x0008 (0x0008 - 0x0000)
struct WBP_Hud_HP_Item_C_ShowBg final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Hud_HP_Item_C_ShowBg) == 0x000008, "Wrong alignment on WBP_Hud_HP_Item_C_ShowBg");
static_assert(sizeof(WBP_Hud_HP_Item_C_ShowBg) == 0x000008, "Wrong size on WBP_Hud_HP_Item_C_ShowBg");
static_assert(offsetof(WBP_Hud_HP_Item_C_ShowBg, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_Hud_HP_Item_C_ShowBg::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_Hud_HP_Item.WBP_Hud_HP_Item_C.ShowBgAtOnce
// 0x0010 (0x0010 - 0x0000)
struct WBP_Hud_HP_Item_C_ShowBgAtOnce final
{
public:
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationTimeRange_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Hud_HP_Item_C_ShowBgAtOnce) == 0x000008, "Wrong alignment on WBP_Hud_HP_Item_C_ShowBgAtOnce");
static_assert(sizeof(WBP_Hud_HP_Item_C_ShowBgAtOnce) == 0x000010, "Wrong size on WBP_Hud_HP_Item_C_ShowBgAtOnce");
static_assert(offsetof(WBP_Hud_HP_Item_C_ShowBgAtOnce, CallFunc_GetEndTime_ReturnValue) == 0x000000, "Member 'WBP_Hud_HP_Item_C_ShowBgAtOnce::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Hud_HP_Item_C_ShowBgAtOnce, CallFunc_PlayAnimationTimeRange_ReturnValue) == 0x000008, "Member 'WBP_Hud_HP_Item_C_ShowBgAtOnce::CallFunc_PlayAnimationTimeRange_ReturnValue' has a wrong offset!");

// Function WBP_Hud_HP_Item.WBP_Hud_HP_Item_C.ShowDot
// 0x0008 (0x0008 - 0x0000)
struct WBP_Hud_HP_Item_C_ShowDot final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Hud_HP_Item_C_ShowDot) == 0x000008, "Wrong alignment on WBP_Hud_HP_Item_C_ShowDot");
static_assert(sizeof(WBP_Hud_HP_Item_C_ShowDot) == 0x000008, "Wrong size on WBP_Hud_HP_Item_C_ShowDot");
static_assert(offsetof(WBP_Hud_HP_Item_C_ShowDot, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_Hud_HP_Item_C_ShowDot::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_Hud_HP_Item.WBP_Hud_HP_Item_C.ShowDotAtOnce
// 0x0010 (0x0010 - 0x0000)
struct WBP_Hud_HP_Item_C_ShowDotAtOnce final
{
public:
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationTimeRange_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Hud_HP_Item_C_ShowDotAtOnce) == 0x000008, "Wrong alignment on WBP_Hud_HP_Item_C_ShowDotAtOnce");
static_assert(sizeof(WBP_Hud_HP_Item_C_ShowDotAtOnce) == 0x000010, "Wrong size on WBP_Hud_HP_Item_C_ShowDotAtOnce");
static_assert(offsetof(WBP_Hud_HP_Item_C_ShowDotAtOnce, CallFunc_GetEndTime_ReturnValue) == 0x000000, "Member 'WBP_Hud_HP_Item_C_ShowDotAtOnce::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Hud_HP_Item_C_ShowDotAtOnce, CallFunc_PlayAnimationTimeRange_ReturnValue) == 0x000008, "Member 'WBP_Hud_HP_Item_C_ShowDotAtOnce::CallFunc_PlayAnimationTimeRange_ReturnValue' has a wrong offset!");

// Function WBP_Hud_HP_Item.WBP_Hud_HP_Item_C.StopCurrentAnimation
// 0x0030 (0x0030 - 0x0000)
struct WBP_Hud_HP_Item_C_StopCurrentAnimation final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Hud_HP_Item_C_StopCurrentAnimation) == 0x000008, "Wrong alignment on WBP_Hud_HP_Item_C_StopCurrentAnimation");
static_assert(sizeof(WBP_Hud_HP_Item_C_StopCurrentAnimation) == 0x000030, "Wrong size on WBP_Hud_HP_Item_C_StopCurrentAnimation");
static_assert(offsetof(WBP_Hud_HP_Item_C_StopCurrentAnimation, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'WBP_Hud_HP_Item_C_StopCurrentAnimation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Hud_HP_Item_C_StopCurrentAnimation, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_Hud_HP_Item_C_StopCurrentAnimation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Hud_HP_Item_C_StopCurrentAnimation, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_Hud_HP_Item_C_StopCurrentAnimation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Hud_HP_Item_C_StopCurrentAnimation, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'WBP_Hud_HP_Item_C_StopCurrentAnimation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Hud_HP_Item_C_StopCurrentAnimation, CallFunc_Greater_IntInt_ReturnValue) == 0x000010, "Member 'WBP_Hud_HP_Item_C_StopCurrentAnimation::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Hud_HP_Item_C_StopCurrentAnimation, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_Hud_HP_Item_C_StopCurrentAnimation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Hud_HP_Item_C_StopCurrentAnimation, CallFunc_Array_Length_ReturnValue_1) == 0x000020, "Member 'WBP_Hud_HP_Item_C_StopCurrentAnimation::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Hud_HP_Item_C_StopCurrentAnimation, CallFunc_GetEndTime_ReturnValue) == 0x000024, "Member 'WBP_Hud_HP_Item_C_StopCurrentAnimation::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Hud_HP_Item_C_StopCurrentAnimation, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'WBP_Hud_HP_Item_C_StopCurrentAnimation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Hud_HP_Item_C_StopCurrentAnimation, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000029, "Member 'WBP_Hud_HP_Item_C_StopCurrentAnimation::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");

// Function WBP_Hud_HP_Item.WBP_Hud_HP_Item_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct WBP_Hud_HP_Item_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Hud_HP_Item_C_GetModuleName) == 0x000008, "Wrong alignment on WBP_Hud_HP_Item_C_GetModuleName");
static_assert(sizeof(WBP_Hud_HP_Item_C_GetModuleName) == 0x000010, "Wrong size on WBP_Hud_HP_Item_C_GetModuleName");
static_assert(offsetof(WBP_Hud_HP_Item_C_GetModuleName, ReturnValue) == 0x000000, "Member 'WBP_Hud_HP_Item_C_GetModuleName::ReturnValue' has a wrong offset!");

}

