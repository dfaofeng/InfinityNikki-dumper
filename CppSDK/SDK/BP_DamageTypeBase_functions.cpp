#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DamageTypeBase

#include "Basic.hpp"

#include "BP_DamageTypeBase_classes.hpp"
#include "BP_DamageTypeBase_parameters.hpp"


namespace SDK
{

// Function BP_DamageTypeBase.BP_DamageTypeBase_C.DoDamage
// (Public, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UObject*                          Instigater                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UBP_DamageTypeBase_C::DoDamage(class UObject* Instigater, class AActor* OtherActor, const struct FHitResult& HitResult) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DamageTypeBase_C", "DoDamage");

	Params::BP_DamageTypeBase_C_DoDamage Parms{};

	Parms.Instigater = Instigater;
	Parms.OtherActor = OtherActor;
	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DamageTypeBase.BP_DamageTypeBase_C.CanDoDamage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   bCan                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_DamageTypeBase_C::CanDoDamage(class AActor* OtherActor, bool* bCan) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DamageTypeBase_C", "CanDoDamage");

	Params::BP_DamageTypeBase_C_CanDoDamage Parms{};

	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);

	if (bCan != nullptr)
		*bCan = Parms.bCan;
}

}

