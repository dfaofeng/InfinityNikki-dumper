#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BMPFont

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "BMPFont_structs.hpp"


namespace SDK::Params
{

// Function BMPFont.UIBMPFontText.GetDynamicFontMaterial
// 0x0008 (0x0008 - 0x0000)
struct UIBMPFontText_GetDynamicFontMaterial final
{
public:
	class UMaterialInstanceDynamic*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIBMPFontText_GetDynamicFontMaterial) == 0x000008, "Wrong alignment on UIBMPFontText_GetDynamicFontMaterial");
static_assert(sizeof(UIBMPFontText_GetDynamicFontMaterial) == 0x000008, "Wrong size on UIBMPFontText_GetDynamicFontMaterial");
static_assert(offsetof(UIBMPFontText_GetDynamicFontMaterial, ReturnValue) == 0x000000, "Member 'UIBMPFontText_GetDynamicFontMaterial::ReturnValue' has a wrong offset!");

// Function BMPFont.UIBMPFontText.SetAutoWrapText
// 0x0001 (0x0001 - 0x0000)
struct UIBMPFontText_SetAutoWrapText final
{
public:
	bool                                          InAutoTextWrap;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIBMPFontText_SetAutoWrapText) == 0x000001, "Wrong alignment on UIBMPFontText_SetAutoWrapText");
static_assert(sizeof(UIBMPFontText_SetAutoWrapText) == 0x000001, "Wrong size on UIBMPFontText_SetAutoWrapText");
static_assert(offsetof(UIBMPFontText_SetAutoWrapText, InAutoTextWrap) == 0x000000, "Member 'UIBMPFontText_SetAutoWrapText::InAutoTextWrap' has a wrong offset!");

// Function BMPFont.UIBMPFontText.SetColorAndOpacity
// 0x0014 (0x0014 - 0x0000)
struct UIBMPFontText_SetColorAndOpacity final
{
public:
	struct FSlateColor                            InColorAndOpacity;                                 // 0x0000(0x0014)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIBMPFontText_SetColorAndOpacity) == 0x000004, "Wrong alignment on UIBMPFontText_SetColorAndOpacity");
static_assert(sizeof(UIBMPFontText_SetColorAndOpacity) == 0x000014, "Wrong size on UIBMPFontText_SetColorAndOpacity");
static_assert(offsetof(UIBMPFontText_SetColorAndOpacity, InColorAndOpacity) == 0x000000, "Member 'UIBMPFontText_SetColorAndOpacity::InColorAndOpacity' has a wrong offset!");

// Function BMPFont.UIBMPFontText.SetFont
// 0x0060 (0x0060 - 0x0000)
struct UIBMPFontText_SetFont final
{
public:
	struct FSlateBMPFontInfo                      InFontInfo;                                        // 0x0000(0x0060)(Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIBMPFontText_SetFont) == 0x000008, "Wrong alignment on UIBMPFontText_SetFont");
static_assert(sizeof(UIBMPFontText_SetFont) == 0x000060, "Wrong size on UIBMPFontText_SetFont");
static_assert(offsetof(UIBMPFontText_SetFont, InFontInfo) == 0x000000, "Member 'UIBMPFontText_SetFont::InFontInfo' has a wrong offset!");

// Function BMPFont.UIBMPFontText.SetMinDesiredWidth
// 0x0004 (0x0004 - 0x0000)
struct UIBMPFontText_SetMinDesiredWidth final
{
public:
	float                                         InMinDesiredWidth;                                 // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIBMPFontText_SetMinDesiredWidth) == 0x000004, "Wrong alignment on UIBMPFontText_SetMinDesiredWidth");
static_assert(sizeof(UIBMPFontText_SetMinDesiredWidth) == 0x000004, "Wrong size on UIBMPFontText_SetMinDesiredWidth");
static_assert(offsetof(UIBMPFontText_SetMinDesiredWidth, InMinDesiredWidth) == 0x000000, "Member 'UIBMPFontText_SetMinDesiredWidth::InMinDesiredWidth' has a wrong offset!");

// Function BMPFont.UIBMPFontText.SetOpacity
// 0x0004 (0x0004 - 0x0000)
struct UIBMPFontText_SetOpacity final
{
public:
	float                                         InOpacity;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIBMPFontText_SetOpacity) == 0x000004, "Wrong alignment on UIBMPFontText_SetOpacity");
static_assert(sizeof(UIBMPFontText_SetOpacity) == 0x000004, "Wrong size on UIBMPFontText_SetOpacity");
static_assert(offsetof(UIBMPFontText_SetOpacity, InOpacity) == 0x000000, "Member 'UIBMPFontText_SetOpacity::InOpacity' has a wrong offset!");

// Function BMPFont.UIBMPFontText.SetText
// 0x0010 (0x0010 - 0x0000)
struct UIBMPFontText_SetText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0010)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIBMPFontText_SetText) == 0x000008, "Wrong alignment on UIBMPFontText_SetText");
static_assert(sizeof(UIBMPFontText_SetText) == 0x000010, "Wrong size on UIBMPFontText_SetText");
static_assert(offsetof(UIBMPFontText_SetText, InText) == 0x000000, "Member 'UIBMPFontText_SetText::InText' has a wrong offset!");

// Function BMPFont.UIBMPFontText.GetText
// 0x0010 (0x0010 - 0x0000)
struct UIBMPFontText_GetText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIBMPFontText_GetText) == 0x000008, "Wrong alignment on UIBMPFontText_GetText");
static_assert(sizeof(UIBMPFontText_GetText) == 0x000010, "Wrong size on UIBMPFontText_GetText");
static_assert(offsetof(UIBMPFontText_GetText, ReturnValue) == 0x000000, "Member 'UIBMPFontText_GetText::ReturnValue' has a wrong offset!");

}

