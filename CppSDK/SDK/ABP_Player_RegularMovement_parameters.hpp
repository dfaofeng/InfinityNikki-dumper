#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Player_RegularMovement

#include "Basic.hpp"

#include "EInputDeviceKeyType_structs.hpp"
#include "Engine_structs.hpp"
#include "EPlayerAdditiveMovementMode_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "EMantleType_structs.hpp"
#include "X6Animation_structs.hpp"
#include "X6Game_structs.hpp"
#include "Struct_NikkiContextualAnimation_structs.hpp"
#include "EPlayerMovementScenarios_structs.hpp"
#include "EPlayerGamePlayMovementMode_structs.hpp"
#include "EPawnAnimStateTypes_structs.hpp"


namespace SDK::Params
{

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.AllowGaitChanged
// 0x0002 (0x0002 - 0x0000)
struct ABP_Player_RegularMovement_C_AllowGaitChanged final
{
public:
	ERegularLocomotionType                        NewGait;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERegularLocomotionType                        OldGait;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_AllowGaitChanged) == 0x000001, "Wrong alignment on ABP_Player_RegularMovement_C_AllowGaitChanged");
static_assert(sizeof(ABP_Player_RegularMovement_C_AllowGaitChanged) == 0x000002, "Wrong size on ABP_Player_RegularMovement_C_AllowGaitChanged");
static_assert(offsetof(ABP_Player_RegularMovement_C_AllowGaitChanged, NewGait) == 0x000000, "Member 'ABP_Player_RegularMovement_C_AllowGaitChanged::NewGait' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_AllowGaitChanged, OldGait) == 0x000001, "Member 'ABP_Player_RegularMovement_C_AllowGaitChanged::OldGait' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_Player_RegularMovement_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Player_RegularMovement_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_AnimGraph");
static_assert(sizeof(ABP_Player_RegularMovement_C_AnimGraph) == 0x000010, "Wrong size on ABP_Player_RegularMovement_C_AnimGraph");
static_assert(offsetof(ABP_Player_RegularMovement_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'ABP_Player_RegularMovement_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.AnimLayer_AimOffset
// 0x0020 (0x0020 - 0x0000)
struct ABP_Player_RegularMovement_C_AnimLayer_AimOffset final
{
public:
	struct FPoseLink                              InPoseForAimOffset;                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              AnimLayer_AimOffset_0;                             // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Player_RegularMovement_C_AnimLayer_AimOffset) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_AnimLayer_AimOffset");
static_assert(sizeof(ABP_Player_RegularMovement_C_AnimLayer_AimOffset) == 0x000020, "Wrong size on ABP_Player_RegularMovement_C_AnimLayer_AimOffset");
static_assert(offsetof(ABP_Player_RegularMovement_C_AnimLayer_AimOffset, InPoseForAimOffset) == 0x000000, "Member 'ABP_Player_RegularMovement_C_AnimLayer_AimOffset::InPoseForAimOffset' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_AnimLayer_AimOffset, AnimLayer_AimOffset_0) == 0x000010, "Member 'ABP_Player_RegularMovement_C_AnimLayer_AimOffset::AnimLayer_AimOffset_0' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.AnimLayer_BehaviorAdditiveMode
// 0x0020 (0x0020 - 0x0000)
struct ABP_Player_RegularMovement_C_AnimLayer_BehaviorAdditiveMode final
{
public:
	struct FPoseLink                              InPoseForPlayerBehavior;                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              AnimLayer_BehaviorAdditiveMode_0;                  // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Player_RegularMovement_C_AnimLayer_BehaviorAdditiveMode) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_AnimLayer_BehaviorAdditiveMode");
static_assert(sizeof(ABP_Player_RegularMovement_C_AnimLayer_BehaviorAdditiveMode) == 0x000020, "Wrong size on ABP_Player_RegularMovement_C_AnimLayer_BehaviorAdditiveMode");
static_assert(offsetof(ABP_Player_RegularMovement_C_AnimLayer_BehaviorAdditiveMode, InPoseForPlayerBehavior) == 0x000000, "Member 'ABP_Player_RegularMovement_C_AnimLayer_BehaviorAdditiveMode::InPoseForPlayerBehavior' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_AnimLayer_BehaviorAdditiveMode, AnimLayer_BehaviorAdditiveMode_0) == 0x000010, "Member 'ABP_Player_RegularMovement_C_AnimLayer_BehaviorAdditiveMode::AnimLayer_BehaviorAdditiveMode_0' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.AnimLayer_BehaviorConnectionMode
// 0x0020 (0x0020 - 0x0000)
struct ABP_Player_RegularMovement_C_AnimLayer_BehaviorConnectionMode final
{
public:
	struct FPoseLink                              InPoseToConnectionMode;                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              AnimLayer_BehaviorConnectionMode_0;                // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Player_RegularMovement_C_AnimLayer_BehaviorConnectionMode) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_AnimLayer_BehaviorConnectionMode");
static_assert(sizeof(ABP_Player_RegularMovement_C_AnimLayer_BehaviorConnectionMode) == 0x000020, "Wrong size on ABP_Player_RegularMovement_C_AnimLayer_BehaviorConnectionMode");
static_assert(offsetof(ABP_Player_RegularMovement_C_AnimLayer_BehaviorConnectionMode, InPoseToConnectionMode) == 0x000000, "Member 'ABP_Player_RegularMovement_C_AnimLayer_BehaviorConnectionMode::InPoseToConnectionMode' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_AnimLayer_BehaviorConnectionMode, AnimLayer_BehaviorConnectionMode_0) == 0x000010, "Member 'ABP_Player_RegularMovement_C_AnimLayer_BehaviorConnectionMode::AnimLayer_BehaviorConnectionMode_0' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.AnimLayer_CombatMovement
// 0x0010 (0x0010 - 0x0000)
struct ABP_Player_RegularMovement_C_AnimLayer_CombatMovement final
{
public:
	struct FPoseLink                              AnimLayer_CombatMovement_0;                        // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Player_RegularMovement_C_AnimLayer_CombatMovement) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_AnimLayer_CombatMovement");
static_assert(sizeof(ABP_Player_RegularMovement_C_AnimLayer_CombatMovement) == 0x000010, "Wrong size on ABP_Player_RegularMovement_C_AnimLayer_CombatMovement");
static_assert(offsetof(ABP_Player_RegularMovement_C_AnimLayer_CombatMovement, AnimLayer_CombatMovement_0) == 0x000000, "Member 'ABP_Player_RegularMovement_C_AnimLayer_CombatMovement::AnimLayer_CombatMovement_0' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.AnimLayer_EquipmentAdditiveMode
// 0x0020 (0x0020 - 0x0000)
struct ABP_Player_RegularMovement_C_AnimLayer_EquipmentAdditiveMode final
{
public:
	struct FPoseLink                              InPoseForEquipment;                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              AnimLayer_EquipmentAdditiveMode_0;                 // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Player_RegularMovement_C_AnimLayer_EquipmentAdditiveMode) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_AnimLayer_EquipmentAdditiveMode");
static_assert(sizeof(ABP_Player_RegularMovement_C_AnimLayer_EquipmentAdditiveMode) == 0x000020, "Wrong size on ABP_Player_RegularMovement_C_AnimLayer_EquipmentAdditiveMode");
static_assert(offsetof(ABP_Player_RegularMovement_C_AnimLayer_EquipmentAdditiveMode, InPoseForEquipment) == 0x000000, "Member 'ABP_Player_RegularMovement_C_AnimLayer_EquipmentAdditiveMode::InPoseForEquipment' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_AnimLayer_EquipmentAdditiveMode, AnimLayer_EquipmentAdditiveMode_0) == 0x000010, "Member 'ABP_Player_RegularMovement_C_AnimLayer_EquipmentAdditiveMode::AnimLayer_EquipmentAdditiveMode_0' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.AnimLayer_Jump
// 0x0010 (0x0010 - 0x0000)
struct ABP_Player_RegularMovement_C_AnimLayer_Jump final
{
public:
	struct FPoseLink                              AnimLayer_Jump_0;                                  // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Player_RegularMovement_C_AnimLayer_Jump) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_AnimLayer_Jump");
static_assert(sizeof(ABP_Player_RegularMovement_C_AnimLayer_Jump) == 0x000010, "Wrong size on ABP_Player_RegularMovement_C_AnimLayer_Jump");
static_assert(offsetof(ABP_Player_RegularMovement_C_AnimLayer_Jump, AnimLayer_Jump_0) == 0x000000, "Member 'ABP_Player_RegularMovement_C_AnimLayer_Jump::AnimLayer_Jump_0' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.AnimLayer_Land
// 0x0010 (0x0010 - 0x0000)
struct ABP_Player_RegularMovement_C_AnimLayer_Land final
{
public:
	struct FPoseLink                              AnimLayer_Land_0;                                  // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Player_RegularMovement_C_AnimLayer_Land) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_AnimLayer_Land");
static_assert(sizeof(ABP_Player_RegularMovement_C_AnimLayer_Land) == 0x000010, "Wrong size on ABP_Player_RegularMovement_C_AnimLayer_Land");
static_assert(offsetof(ABP_Player_RegularMovement_C_AnimLayer_Land, AnimLayer_Land_0) == 0x000000, "Member 'ABP_Player_RegularMovement_C_AnimLayer_Land::AnimLayer_Land_0' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.AnimLayer_MovementDependObject
// 0x0010 (0x0010 - 0x0000)
struct ABP_Player_RegularMovement_C_AnimLayer_MovementDependObject final
{
public:
	struct FPoseLink                              AnimLayer_MovementDependObject_0;                  // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Player_RegularMovement_C_AnimLayer_MovementDependObject) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_AnimLayer_MovementDependObject");
static_assert(sizeof(ABP_Player_RegularMovement_C_AnimLayer_MovementDependObject) == 0x000010, "Wrong size on ABP_Player_RegularMovement_C_AnimLayer_MovementDependObject");
static_assert(offsetof(ABP_Player_RegularMovement_C_AnimLayer_MovementDependObject, AnimLayer_MovementDependObject_0) == 0x000000, "Member 'ABP_Player_RegularMovement_C_AnimLayer_MovementDependObject::AnimLayer_MovementDependObject_0' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.AnimLayer_NPCAdditiveBehavior
// 0x0020 (0x0020 - 0x0000)
struct ABP_Player_RegularMovement_C_AnimLayer_NPCAdditiveBehavior final
{
public:
	struct FPoseLink                              InPose;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              AnimLayer_NPCAdditiveBehavior_0;                   // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Player_RegularMovement_C_AnimLayer_NPCAdditiveBehavior) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_AnimLayer_NPCAdditiveBehavior");
static_assert(sizeof(ABP_Player_RegularMovement_C_AnimLayer_NPCAdditiveBehavior) == 0x000020, "Wrong size on ABP_Player_RegularMovement_C_AnimLayer_NPCAdditiveBehavior");
static_assert(offsetof(ABP_Player_RegularMovement_C_AnimLayer_NPCAdditiveBehavior, InPose) == 0x000000, "Member 'ABP_Player_RegularMovement_C_AnimLayer_NPCAdditiveBehavior::InPose' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_AnimLayer_NPCAdditiveBehavior, AnimLayer_NPCAdditiveBehavior_0) == 0x000010, "Member 'ABP_Player_RegularMovement_C_AnimLayer_NPCAdditiveBehavior::AnimLayer_NPCAdditiveBehavior_0' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.AnimLayer_NPCBehavior
// 0x0020 (0x0020 - 0x0000)
struct ABP_Player_RegularMovement_C_AnimLayer_NPCBehavior final
{
public:
	struct FPoseLink                              InPose_0;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              AnimLayer_NPCBehavior_0;                           // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Player_RegularMovement_C_AnimLayer_NPCBehavior) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_AnimLayer_NPCBehavior");
static_assert(sizeof(ABP_Player_RegularMovement_C_AnimLayer_NPCBehavior) == 0x000020, "Wrong size on ABP_Player_RegularMovement_C_AnimLayer_NPCBehavior");
static_assert(offsetof(ABP_Player_RegularMovement_C_AnimLayer_NPCBehavior, InPose_0) == 0x000000, "Member 'ABP_Player_RegularMovement_C_AnimLayer_NPCBehavior::InPose_0' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_AnimLayer_NPCBehavior, AnimLayer_NPCBehavior_0) == 0x000010, "Member 'ABP_Player_RegularMovement_C_AnimLayer_NPCBehavior::AnimLayer_NPCBehavior_0' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.AnimLayer_PlayerControllingTool
// 0x0010 (0x0010 - 0x0000)
struct ABP_Player_RegularMovement_C_AnimLayer_PlayerControllingTool final
{
public:
	struct FPoseLink                              AnimLayer_PlayerControllingTool_0;                 // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Player_RegularMovement_C_AnimLayer_PlayerControllingTool) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_AnimLayer_PlayerControllingTool");
static_assert(sizeof(ABP_Player_RegularMovement_C_AnimLayer_PlayerControllingTool) == 0x000010, "Wrong size on ABP_Player_RegularMovement_C_AnimLayer_PlayerControllingTool");
static_assert(offsetof(ABP_Player_RegularMovement_C_AnimLayer_PlayerControllingTool, AnimLayer_PlayerControllingTool_0) == 0x000000, "Member 'ABP_Player_RegularMovement_C_AnimLayer_PlayerControllingTool::AnimLayer_PlayerControllingTool_0' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.AnimLayer_PlayerRegularMovement
// 0x0010 (0x0010 - 0x0000)
struct ABP_Player_RegularMovement_C_AnimLayer_PlayerRegularMovement final
{
public:
	struct FPoseLink                              AnimLayer_PlayerRegularMovement_0;                 // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Player_RegularMovement_C_AnimLayer_PlayerRegularMovement) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_AnimLayer_PlayerRegularMovement");
static_assert(sizeof(ABP_Player_RegularMovement_C_AnimLayer_PlayerRegularMovement) == 0x000010, "Wrong size on ABP_Player_RegularMovement_C_AnimLayer_PlayerRegularMovement");
static_assert(offsetof(ABP_Player_RegularMovement_C_AnimLayer_PlayerRegularMovement, AnimLayer_PlayerRegularMovement_0) == 0x000000, "Member 'ABP_Player_RegularMovement_C_AnimLayer_PlayerRegularMovement::AnimLayer_PlayerRegularMovement_0' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.AnimLayer_SpecialSurfaceMovement
// 0x0010 (0x0010 - 0x0000)
struct ABP_Player_RegularMovement_C_AnimLayer_SpecialSurfaceMovement final
{
public:
	struct FPoseLink                              AnimLayer_SpecialSurfaceMovement_0;                // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Player_RegularMovement_C_AnimLayer_SpecialSurfaceMovement) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_AnimLayer_SpecialSurfaceMovement");
static_assert(sizeof(ABP_Player_RegularMovement_C_AnimLayer_SpecialSurfaceMovement) == 0x000010, "Wrong size on ABP_Player_RegularMovement_C_AnimLayer_SpecialSurfaceMovement");
static_assert(offsetof(ABP_Player_RegularMovement_C_AnimLayer_SpecialSurfaceMovement, AnimLayer_SpecialSurfaceMovement_0) == 0x000000, "Member 'ABP_Player_RegularMovement_C_AnimLayer_SpecialSurfaceMovement::AnimLayer_SpecialSurfaceMovement_0' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.AnimLayer_StrafeMovement
// 0x0010 (0x0010 - 0x0000)
struct ABP_Player_RegularMovement_C_AnimLayer_StrafeMovement final
{
public:
	struct FPoseLink                              AnimLayer_StrafeMovement_0;                        // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Player_RegularMovement_C_AnimLayer_StrafeMovement) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_AnimLayer_StrafeMovement");
static_assert(sizeof(ABP_Player_RegularMovement_C_AnimLayer_StrafeMovement) == 0x000010, "Wrong size on ABP_Player_RegularMovement_C_AnimLayer_StrafeMovement");
static_assert(offsetof(ABP_Player_RegularMovement_C_AnimLayer_StrafeMovement, AnimLayer_StrafeMovement_0) == 0x000000, "Member 'ABP_Player_RegularMovement_C_AnimLayer_StrafeMovement::AnimLayer_StrafeMovement_0' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.AnimLayer_UsingCarrierMovement
// 0x0010 (0x0010 - 0x0000)
struct ABP_Player_RegularMovement_C_AnimLayer_UsingCarrierMovement final
{
public:
	struct FPoseLink                              AnimLayer_UsingCarrierMovement_0;                  // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Player_RegularMovement_C_AnimLayer_UsingCarrierMovement) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_AnimLayer_UsingCarrierMovement");
static_assert(sizeof(ABP_Player_RegularMovement_C_AnimLayer_UsingCarrierMovement) == 0x000010, "Wrong size on ABP_Player_RegularMovement_C_AnimLayer_UsingCarrierMovement");
static_assert(offsetof(ABP_Player_RegularMovement_C_AnimLayer_UsingCarrierMovement, AnimLayer_UsingCarrierMovement_0) == 0x000000, "Member 'ABP_Player_RegularMovement_C_AnimLayer_UsingCarrierMovement::AnimLayer_UsingCarrierMovement_0' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.AnimLayer_WhiteBoxMovement
// 0x0010 (0x0010 - 0x0000)
struct ABP_Player_RegularMovement_C_AnimLayer_WhiteBoxMovement final
{
public:
	struct FPoseLink                              AnimLayer_WhiteBoxMovement_0;                      // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Player_RegularMovement_C_AnimLayer_WhiteBoxMovement) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_AnimLayer_WhiteBoxMovement");
static_assert(sizeof(ABP_Player_RegularMovement_C_AnimLayer_WhiteBoxMovement) == 0x000010, "Wrong size on ABP_Player_RegularMovement_C_AnimLayer_WhiteBoxMovement");
static_assert(offsetof(ABP_Player_RegularMovement_C_AnimLayer_WhiteBoxMovement, AnimLayer_WhiteBoxMovement_0) == 0x000000, "Member 'ABP_Player_RegularMovement_C_AnimLayer_WhiteBoxMovement::AnimLayer_WhiteBoxMovement_0' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.BlueprintCustomLateUpdate
// 0x0004 (0x0004 - 0x0000)
struct ABP_Player_RegularMovement_C_BlueprintCustomLateUpdate final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_BlueprintCustomLateUpdate) == 0x000004, "Wrong alignment on ABP_Player_RegularMovement_C_BlueprintCustomLateUpdate");
static_assert(sizeof(ABP_Player_RegularMovement_C_BlueprintCustomLateUpdate) == 0x000004, "Wrong size on ABP_Player_RegularMovement_C_BlueprintCustomLateUpdate");
static_assert(offsetof(ABP_Player_RegularMovement_C_BlueprintCustomLateUpdate, DeltaSeconds) == 0x000000, "Member 'ABP_Player_RegularMovement_C_BlueprintCustomLateUpdate::DeltaSeconds' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.BlueprintCustomPreUpdate
// 0x0004 (0x0004 - 0x0000)
struct ABP_Player_RegularMovement_C_BlueprintCustomPreUpdate final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_BlueprintCustomPreUpdate) == 0x000004, "Wrong alignment on ABP_Player_RegularMovement_C_BlueprintCustomPreUpdate");
static_assert(sizeof(ABP_Player_RegularMovement_C_BlueprintCustomPreUpdate) == 0x000004, "Wrong size on ABP_Player_RegularMovement_C_BlueprintCustomPreUpdate");
static_assert(offsetof(ABP_Player_RegularMovement_C_BlueprintCustomPreUpdate, DeltaSeconds) == 0x000000, "Member 'ABP_Player_RegularMovement_C_BlueprintCustomPreUpdate::DeltaSeconds' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.BlueprintCustomUpdate
// 0x0004 (0x0004 - 0x0000)
struct ABP_Player_RegularMovement_C_BlueprintCustomUpdate final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_BlueprintCustomUpdate) == 0x000004, "Wrong alignment on ABP_Player_RegularMovement_C_BlueprintCustomUpdate");
static_assert(sizeof(ABP_Player_RegularMovement_C_BlueprintCustomUpdate) == 0x000004, "Wrong size on ABP_Player_RegularMovement_C_BlueprintCustomUpdate");
static_assert(offsetof(ABP_Player_RegularMovement_C_BlueprintCustomUpdate, DeltaSeconds) == 0x000000, "Member 'ABP_Player_RegularMovement_C_BlueprintCustomUpdate::DeltaSeconds' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.BP_CanBlueprintUpdate
// 0x0002 (0x0002 - 0x0000)
struct ABP_Player_RegularMovement_C_BP_CanBlueprintUpdate final
{
public:
	bool                                          CanUpdate;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_BP_CanBlueprintUpdate) == 0x000001, "Wrong alignment on ABP_Player_RegularMovement_C_BP_CanBlueprintUpdate");
static_assert(sizeof(ABP_Player_RegularMovement_C_BP_CanBlueprintUpdate) == 0x000002, "Wrong size on ABP_Player_RegularMovement_C_BP_CanBlueprintUpdate");
static_assert(offsetof(ABP_Player_RegularMovement_C_BP_CanBlueprintUpdate, CanUpdate) == 0x000000, "Member 'ABP_Player_RegularMovement_C_BP_CanBlueprintUpdate::CanUpdate' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_BP_CanBlueprintUpdate, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'ABP_Player_RegularMovement_C_BP_CanBlueprintUpdate::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.BP_ForceSetDefaultIdleMirror
// 0x0001 (0x0001 - 0x0000)
struct ABP_Player_RegularMovement_C_BP_ForceSetDefaultIdleMirror final
{
public:
	bool                                          bMirror;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_BP_ForceSetDefaultIdleMirror) == 0x000001, "Wrong alignment on ABP_Player_RegularMovement_C_BP_ForceSetDefaultIdleMirror");
static_assert(sizeof(ABP_Player_RegularMovement_C_BP_ForceSetDefaultIdleMirror) == 0x000001, "Wrong size on ABP_Player_RegularMovement_C_BP_ForceSetDefaultIdleMirror");
static_assert(offsetof(ABP_Player_RegularMovement_C_BP_ForceSetDefaultIdleMirror, bMirror) == 0x000000, "Member 'ABP_Player_RegularMovement_C_BP_ForceSetDefaultIdleMirror::bMirror' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.ClearStopFlag
// 0x0003 (0x0003 - 0x0000)
struct ABP_Player_RegularMovement_C_ClearStopFlag final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsSkipStopStage_SkipStopStage;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsForceStopStage_ForceStopFlag;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_ClearStopFlag) == 0x000001, "Wrong alignment on ABP_Player_RegularMovement_C_ClearStopFlag");
static_assert(sizeof(ABP_Player_RegularMovement_C_ClearStopFlag) == 0x000003, "Wrong size on ABP_Player_RegularMovement_C_ClearStopFlag");
static_assert(offsetof(ABP_Player_RegularMovement_C_ClearStopFlag, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'ABP_Player_RegularMovement_C_ClearStopFlag::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ClearStopFlag, CallFunc_BP_IsSkipStopStage_SkipStopStage) == 0x000001, "Member 'ABP_Player_RegularMovement_C_ClearStopFlag::CallFunc_BP_IsSkipStopStage_SkipStopStage' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ClearStopFlag, CallFunc_BP_IsForceStopStage_ForceStopFlag) == 0x000002, "Member 'ABP_Player_RegularMovement_C_ClearStopFlag::CallFunc_BP_IsForceStopStage_ForceStopFlag' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.ContextChanged
// 0x0002 (0x0002 - 0x0000)
struct ABP_Player_RegularMovement_C_ContextChanged final
{
public:
	ECharacterSituationType                       CharacterSituationType;                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AddOrRemove;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_ContextChanged) == 0x000001, "Wrong alignment on ABP_Player_RegularMovement_C_ContextChanged");
static_assert(sizeof(ABP_Player_RegularMovement_C_ContextChanged) == 0x000002, "Wrong size on ABP_Player_RegularMovement_C_ContextChanged");
static_assert(offsetof(ABP_Player_RegularMovement_C_ContextChanged, CharacterSituationType) == 0x000000, "Member 'ABP_Player_RegularMovement_C_ContextChanged::CharacterSituationType' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ContextChanged, AddOrRemove) == 0x000001, "Member 'ABP_Player_RegularMovement_C_ContextChanged::AddOrRemove' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.ConvertBoolsToFloat
// 0x0058 (0x0058 - 0x0000)
struct ABP_Player_RegularMovement_C_ConvertBoolsToFloat final
{
public:
	TArray<bool>                                  ArrayOfBool;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	double                                        Ret;                                               // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Result;                                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item;                           // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_ConvertBoolsToFloat) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_ConvertBoolsToFloat");
static_assert(sizeof(ABP_Player_RegularMovement_C_ConvertBoolsToFloat) == 0x000058, "Wrong size on ABP_Player_RegularMovement_C_ConvertBoolsToFloat");
static_assert(offsetof(ABP_Player_RegularMovement_C_ConvertBoolsToFloat, ArrayOfBool) == 0x000000, "Member 'ABP_Player_RegularMovement_C_ConvertBoolsToFloat::ArrayOfBool' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ConvertBoolsToFloat, Ret) == 0x000010, "Member 'ABP_Player_RegularMovement_C_ConvertBoolsToFloat::Ret' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ConvertBoolsToFloat, Result) == 0x000018, "Member 'ABP_Player_RegularMovement_C_ConvertBoolsToFloat::Result' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ConvertBoolsToFloat, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'ABP_Player_RegularMovement_C_ConvertBoolsToFloat::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ConvertBoolsToFloat, Temp_int_Array_Index_Variable) == 0x000024, "Member 'ABP_Player_RegularMovement_C_ConvertBoolsToFloat::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ConvertBoolsToFloat, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'ABP_Player_RegularMovement_C_ConvertBoolsToFloat::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ConvertBoolsToFloat, CallFunc_Array_Get_Item) == 0x00002C, "Member 'ABP_Player_RegularMovement_C_ConvertBoolsToFloat::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ConvertBoolsToFloat, CallFunc_Less_IntInt_ReturnValue) == 0x00002D, "Member 'ABP_Player_RegularMovement_C_ConvertBoolsToFloat::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ConvertBoolsToFloat, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'ABP_Player_RegularMovement_C_ConvertBoolsToFloat::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ConvertBoolsToFloat, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000038, "Member 'ABP_Player_RegularMovement_C_ConvertBoolsToFloat::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ConvertBoolsToFloat, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000040, "Member 'ABP_Player_RegularMovement_C_ConvertBoolsToFloat::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ConvertBoolsToFloat, CallFunc_SelectFloat_ReturnValue) == 0x000048, "Member 'ABP_Player_RegularMovement_C_ConvertBoolsToFloat::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ConvertBoolsToFloat, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000050, "Member 'ABP_Player_RegularMovement_C_ConvertBoolsToFloat::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.Determine Cycle Stop
// 0x0040 (0x0040 - 0x0000)
struct ABP_Player_RegularMovement_C_Determine_Cycle_Stop final
{
public:
	ELocomotionGait                               Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELocomotionGait                               Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Temp_object_Variable_4;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          K2Node_Select_Default_1;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_Determine_Cycle_Stop) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_Determine_Cycle_Stop");
static_assert(sizeof(ABP_Player_RegularMovement_C_Determine_Cycle_Stop) == 0x000040, "Wrong size on ABP_Player_RegularMovement_C_Determine_Cycle_Stop");
static_assert(offsetof(ABP_Player_RegularMovement_C_Determine_Cycle_Stop, Temp_byte_Variable) == 0x000000, "Member 'ABP_Player_RegularMovement_C_Determine_Cycle_Stop::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_Determine_Cycle_Stop, Temp_byte_Variable_1) == 0x000001, "Member 'ABP_Player_RegularMovement_C_Determine_Cycle_Stop::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_Determine_Cycle_Stop, Temp_object_Variable) == 0x000008, "Member 'ABP_Player_RegularMovement_C_Determine_Cycle_Stop::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_Determine_Cycle_Stop, Temp_object_Variable_1) == 0x000010, "Member 'ABP_Player_RegularMovement_C_Determine_Cycle_Stop::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_Determine_Cycle_Stop, Temp_object_Variable_2) == 0x000018, "Member 'ABP_Player_RegularMovement_C_Determine_Cycle_Stop::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_Determine_Cycle_Stop, Temp_object_Variable_3) == 0x000020, "Member 'ABP_Player_RegularMovement_C_Determine_Cycle_Stop::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_Determine_Cycle_Stop, Temp_object_Variable_4) == 0x000028, "Member 'ABP_Player_RegularMovement_C_Determine_Cycle_Stop::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_Determine_Cycle_Stop, K2Node_Select_Default) == 0x000030, "Member 'ABP_Player_RegularMovement_C_Determine_Cycle_Stop::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_Determine_Cycle_Stop, K2Node_Select_Default_1) == 0x000038, "Member 'ABP_Player_RegularMovement_C_Determine_Cycle_Stop::K2Node_Select_Default_1' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.Determine Pivot Anim
// 0x00F0 (0x00F0 - 0x0000)
struct ABP_Player_RegularMovement_C_Determine_Pivot_Anim final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlendSpace*                            Temp_object_Variable;                              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBlendSpace*                            Temp_object_Variable_1;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          Temp_object_Variable_2;                            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Temp_object_Variable_3;                            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          Temp_object_Variable_4;                            // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Temp_object_Variable_5;                            // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          Temp_object_Variable_6;                            // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Temp_object_Variable_7;                            // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          Temp_object_Variable_8;                            // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Temp_object_Variable_9;                            // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          Temp_object_Variable_10;                           // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Temp_object_Variable_11;                           // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ELocomotionGait                               Temp_byte_Variable;                                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlendSpace*                            K2Node_Select_Default;                             // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          K2Node_Select_Default_1;                           // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          K2Node_Select_Default_2;                           // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          K2Node_Select_Default_3;                           // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          K2Node_Select_Default_4;                           // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          K2Node_Select_Default_5;                           // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          K2Node_Select_Default_6;                           // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_Determine_Pivot_Anim) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_Determine_Pivot_Anim");
static_assert(sizeof(ABP_Player_RegularMovement_C_Determine_Pivot_Anim) == 0x0000F0, "Wrong size on ABP_Player_RegularMovement_C_Determine_Pivot_Anim");
static_assert(offsetof(ABP_Player_RegularMovement_C_Determine_Pivot_Anim, Context) == 0x000000, "Member 'ABP_Player_RegularMovement_C_Determine_Pivot_Anim::Context' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_Determine_Pivot_Anim, Node) == 0x000010, "Member 'ABP_Player_RegularMovement_C_Determine_Pivot_Anim::Node' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_Determine_Pivot_Anim, Temp_bool_Variable) == 0x000020, "Member 'ABP_Player_RegularMovement_C_Determine_Pivot_Anim::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_Determine_Pivot_Anim, Temp_object_Variable) == 0x000028, "Member 'ABP_Player_RegularMovement_C_Determine_Pivot_Anim::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_Determine_Pivot_Anim, Temp_object_Variable_1) == 0x000030, "Member 'ABP_Player_RegularMovement_C_Determine_Pivot_Anim::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_Determine_Pivot_Anim, Temp_bool_Variable_1) == 0x000038, "Member 'ABP_Player_RegularMovement_C_Determine_Pivot_Anim::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_Determine_Pivot_Anim, Temp_object_Variable_2) == 0x000040, "Member 'ABP_Player_RegularMovement_C_Determine_Pivot_Anim::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_Determine_Pivot_Anim, Temp_object_Variable_3) == 0x000048, "Member 'ABP_Player_RegularMovement_C_Determine_Pivot_Anim::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_Determine_Pivot_Anim, Temp_bool_Variable_2) == 0x000050, "Member 'ABP_Player_RegularMovement_C_Determine_Pivot_Anim::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_Determine_Pivot_Anim, Temp_object_Variable_4) == 0x000058, "Member 'ABP_Player_RegularMovement_C_Determine_Pivot_Anim::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_Determine_Pivot_Anim, Temp_object_Variable_5) == 0x000060, "Member 'ABP_Player_RegularMovement_C_Determine_Pivot_Anim::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_Determine_Pivot_Anim, Temp_bool_Variable_3) == 0x000068, "Member 'ABP_Player_RegularMovement_C_Determine_Pivot_Anim::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_Determine_Pivot_Anim, Temp_object_Variable_6) == 0x000070, "Member 'ABP_Player_RegularMovement_C_Determine_Pivot_Anim::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_Determine_Pivot_Anim, Temp_object_Variable_7) == 0x000078, "Member 'ABP_Player_RegularMovement_C_Determine_Pivot_Anim::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_Determine_Pivot_Anim, Temp_bool_Variable_4) == 0x000080, "Member 'ABP_Player_RegularMovement_C_Determine_Pivot_Anim::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_Determine_Pivot_Anim, Temp_object_Variable_8) == 0x000088, "Member 'ABP_Player_RegularMovement_C_Determine_Pivot_Anim::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_Determine_Pivot_Anim, Temp_object_Variable_9) == 0x000090, "Member 'ABP_Player_RegularMovement_C_Determine_Pivot_Anim::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_Determine_Pivot_Anim, Temp_bool_Variable_5) == 0x000098, "Member 'ABP_Player_RegularMovement_C_Determine_Pivot_Anim::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_Determine_Pivot_Anim, Temp_object_Variable_10) == 0x0000A0, "Member 'ABP_Player_RegularMovement_C_Determine_Pivot_Anim::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_Determine_Pivot_Anim, Temp_object_Variable_11) == 0x0000A8, "Member 'ABP_Player_RegularMovement_C_Determine_Pivot_Anim::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_Determine_Pivot_Anim, Temp_byte_Variable) == 0x0000B0, "Member 'ABP_Player_RegularMovement_C_Determine_Pivot_Anim::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_Determine_Pivot_Anim, K2Node_Select_Default) == 0x0000B8, "Member 'ABP_Player_RegularMovement_C_Determine_Pivot_Anim::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_Determine_Pivot_Anim, K2Node_Select_Default_1) == 0x0000C0, "Member 'ABP_Player_RegularMovement_C_Determine_Pivot_Anim::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_Determine_Pivot_Anim, K2Node_Select_Default_2) == 0x0000C8, "Member 'ABP_Player_RegularMovement_C_Determine_Pivot_Anim::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_Determine_Pivot_Anim, K2Node_Select_Default_3) == 0x0000D0, "Member 'ABP_Player_RegularMovement_C_Determine_Pivot_Anim::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_Determine_Pivot_Anim, K2Node_Select_Default_4) == 0x0000D8, "Member 'ABP_Player_RegularMovement_C_Determine_Pivot_Anim::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_Determine_Pivot_Anim, K2Node_Select_Default_5) == 0x0000E0, "Member 'ABP_Player_RegularMovement_C_Determine_Pivot_Anim::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_Determine_Pivot_Anim, K2Node_Select_Default_6) == 0x0000E8, "Member 'ABP_Player_RegularMovement_C_Determine_Pivot_Anim::K2Node_Select_Default_6' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.DetermineLandingAnimInfo
// 0x0180 (0x0180 - 0x0000)
struct ABP_Player_RegularMovement_C_DetermineLandingAnimInfo final
{
public:
	bool                                          IsHeavy;                                           // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          Temp_object_Variable_2;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Temp_object_Variable_3;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          Temp_object_Variable_4;                            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          Temp_object_Variable_5;                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Temp_object_Variable_6;                            // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          Temp_object_Variable_7;                            // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          Temp_object_Variable_8;                            // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Temp_object_Variable_9;                            // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          Temp_object_Variable_10;                           // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          Temp_object_Variable_11;                           // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Temp_object_Variable_12;                           // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          Temp_object_Variable_13;                           // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          K2Node_Select_Default;                             // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          K2Node_Select_Default_1;                           // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          K2Node_Select_Default_2;                           // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          K2Node_Select_Default_3;                           // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10B[0x5];                                      // 0x010B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          K2Node_Select_Default_4;                           // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBlendSpace1D*                          Temp_object_Variable_14;                           // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlendSpace1D*                          Temp_object_Variable_15;                           // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          K2Node_Select_Default_5;                           // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13A[0x6];                                      // 0x013A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlendSpace1D*                          K2Node_Select_Default_6;                           // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBlendSpace1D*                          K2Node_Select_Default_7;                           // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          K2Node_Select_Default_8;                           // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15A[0x6];                                      // 0x015A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          K2Node_Select_Default_9;                           // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          K2Node_Select_Default_10;                          // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          K2Node_Select_Default_11;                          // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_DetermineLandingAnimInfo");
static_assert(sizeof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo) == 0x000180, "Wrong size on ABP_Player_RegularMovement_C_DetermineLandingAnimInfo");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, IsHeavy) == 0x000000, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::IsHeavy' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, Temp_object_Variable) == 0x000008, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, Temp_bool_Variable) == 0x000010, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, Temp_object_Variable_1) == 0x000018, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, Temp_bool_Variable_1) == 0x000020, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, Temp_object_Variable_2) == 0x000028, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, Temp_object_Variable_3) == 0x000030, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, Temp_bool_Variable_2) == 0x000038, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, Temp_object_Variable_4) == 0x000040, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, Temp_bool_Variable_3) == 0x000048, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, Temp_object_Variable_5) == 0x000050, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, Temp_object_Variable_6) == 0x000058, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, Temp_bool_Variable_4) == 0x000060, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, Temp_object_Variable_7) == 0x000068, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, Temp_bool_Variable_5) == 0x000070, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, Temp_object_Variable_8) == 0x000078, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, Temp_object_Variable_9) == 0x000080, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, Temp_bool_Variable_6) == 0x000088, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, Temp_object_Variable_10) == 0x000090, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, Temp_bool_Variable_7) == 0x000098, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, Temp_object_Variable_11) == 0x0000A0, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, Temp_object_Variable_12) == 0x0000A8, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, Temp_bool_Variable_8) == 0x0000B0, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, Temp_object_Variable_13) == 0x0000B8, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000C0, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, CallFunc_BreakVector_X) == 0x0000C8, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, CallFunc_BreakVector_Y) == 0x0000D0, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, CallFunc_BreakVector_Z) == 0x0000D8, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, CallFunc_Abs_ReturnValue) == 0x0000E0, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, K2Node_Select_Default) == 0x0000E8, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, K2Node_Select_Default_1) == 0x0000F0, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, K2Node_Select_Default_2) == 0x0000F8, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, K2Node_Select_Default_3) == 0x000100, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000108, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, Temp_bool_Variable_9) == 0x000109, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, Temp_bool_Variable_10) == 0x00010A, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, K2Node_Select_Default_4) == 0x000110, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, Temp_object_Variable_14) == 0x000118, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000120, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, Temp_object_Variable_15) == 0x000128, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, K2Node_Select_Default_5) == 0x000130, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, Temp_bool_Variable_11) == 0x000138, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000139, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, K2Node_Select_Default_6) == 0x000140, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, K2Node_Select_Default_7) == 0x000148, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, K2Node_Select_Default_8) == 0x000150, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000158, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000159, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, K2Node_Select_Default_9) == 0x000160, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, K2Node_Select_Default_10) == 0x000168, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000170, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_DetermineLandingAnimInfo, K2Node_Select_Default_11) == 0x000178, "Member 'ABP_Player_RegularMovement_C_DetermineLandingAnimInfo::K2Node_Select_Default_11' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.Event Allow Gait Changed
// 0x0002 (0x0002 - 0x0000)
struct ABP_Player_RegularMovement_C_Event_Allow_Gait_Changed final
{
public:
	ELocomotionGait                               PrevGait;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELocomotionGait                               NewGait;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_Event_Allow_Gait_Changed) == 0x000001, "Wrong alignment on ABP_Player_RegularMovement_C_Event_Allow_Gait_Changed");
static_assert(sizeof(ABP_Player_RegularMovement_C_Event_Allow_Gait_Changed) == 0x000002, "Wrong size on ABP_Player_RegularMovement_C_Event_Allow_Gait_Changed");
static_assert(offsetof(ABP_Player_RegularMovement_C_Event_Allow_Gait_Changed, PrevGait) == 0x000000, "Member 'ABP_Player_RegularMovement_C_Event_Allow_Gait_Changed::PrevGait' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_Event_Allow_Gait_Changed, NewGait) == 0x000001, "Member 'ABP_Player_RegularMovement_C_Event_Allow_Gait_Changed::NewGait' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.Event_GamePlayMovementModeChanged_Event
// 0x0002 (0x0002 - 0x0000)
struct ABP_Player_RegularMovement_C_Event_GamePlayMovementModeChanged_Event final
{
public:
	EPlayerGamePlayMovementMode                   OldMode;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerGamePlayMovementMode                   NewMode;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_Event_GamePlayMovementModeChanged_Event) == 0x000001, "Wrong alignment on ABP_Player_RegularMovement_C_Event_GamePlayMovementModeChanged_Event");
static_assert(sizeof(ABP_Player_RegularMovement_C_Event_GamePlayMovementModeChanged_Event) == 0x000002, "Wrong size on ABP_Player_RegularMovement_C_Event_GamePlayMovementModeChanged_Event");
static_assert(offsetof(ABP_Player_RegularMovement_C_Event_GamePlayMovementModeChanged_Event, OldMode) == 0x000000, "Member 'ABP_Player_RegularMovement_C_Event_GamePlayMovementModeChanged_Event::OldMode' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_Event_GamePlayMovementModeChanged_Event, NewMode) == 0x000001, "Member 'ABP_Player_RegularMovement_C_Event_GamePlayMovementModeChanged_Event::NewMode' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.Event_OnAdditiveMovementModeUpdate
// 0x0002 (0x0002 - 0x0000)
struct ABP_Player_RegularMovement_C_Event_OnAdditiveMovementModeUpdate final
{
public:
	EPlayerAdditiveMovementMode                   UpdatedMode;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAddOrRemoved;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_Event_OnAdditiveMovementModeUpdate) == 0x000001, "Wrong alignment on ABP_Player_RegularMovement_C_Event_OnAdditiveMovementModeUpdate");
static_assert(sizeof(ABP_Player_RegularMovement_C_Event_OnAdditiveMovementModeUpdate) == 0x000002, "Wrong size on ABP_Player_RegularMovement_C_Event_OnAdditiveMovementModeUpdate");
static_assert(offsetof(ABP_Player_RegularMovement_C_Event_OnAdditiveMovementModeUpdate, UpdatedMode) == 0x000000, "Member 'ABP_Player_RegularMovement_C_Event_OnAdditiveMovementModeUpdate::UpdatedMode' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_Event_OnAdditiveMovementModeUpdate, bAddOrRemoved) == 0x000001, "Member 'ABP_Player_RegularMovement_C_Event_OnAdditiveMovementModeUpdate::bAddOrRemoved' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.Event_OnPlayerFloatingJumpStageChanged_Event
// 0x0002 (0x0002 - 0x0000)
struct ABP_Player_RegularMovement_C_Event_OnPlayerFloatingJumpStageChanged_Event final
{
public:
	ERegularFloatingJumpStage                     NewStage;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERegularFloatingJumpStage                     OldStage;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_Event_OnPlayerFloatingJumpStageChanged_Event) == 0x000001, "Wrong alignment on ABP_Player_RegularMovement_C_Event_OnPlayerFloatingJumpStageChanged_Event");
static_assert(sizeof(ABP_Player_RegularMovement_C_Event_OnPlayerFloatingJumpStageChanged_Event) == 0x000002, "Wrong size on ABP_Player_RegularMovement_C_Event_OnPlayerFloatingJumpStageChanged_Event");
static_assert(offsetof(ABP_Player_RegularMovement_C_Event_OnPlayerFloatingJumpStageChanged_Event, NewStage) == 0x000000, "Member 'ABP_Player_RegularMovement_C_Event_OnPlayerFloatingJumpStageChanged_Event::NewStage' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_Event_OnPlayerFloatingJumpStageChanged_Event, OldStage) == 0x000001, "Member 'ABP_Player_RegularMovement_C_Event_OnPlayerFloatingJumpStageChanged_Event::OldStage' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.ExecuteUbergraph_ABP_Player_RegularMovement
// 0x09D8 (0x09D8 - 0x0000)
struct ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatchSequences                        K2Node_MakeStruct_MatchSequences;                  // 0x0008(0x0010)(NoDestructor)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTime_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTime_ReturnValue_1;        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTime_ReturnValue_2;        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B[0x5];                                       // 0x008B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B[0x5];                                       // 0x009B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AB[0x1];                                       // 0x00AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(ERegularFloatingJumpStage NewStage, ERegularFloatingJumpStage OldStage)> K2Node_CreateDelegate_OutputDelegate; // 0x00AC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPlayerGamePlayMovementMode OldMode, EPlayerGamePlayMovementMode NewMode)> K2Node_CreateDelegate_OutputDelegate_1; // 0x00C0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x00D0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EPlayerAdditiveMovementMode UpdatedMode, bool bAddOrRemoved)> K2Node_CreateDelegate_OutputDelegate_3; // 0x00F0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(ECharacterSituationType CharacterSituationType, bool AddOrRemove)> K2Node_CreateDelegate_OutputDelegate_4; // 0x0104(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ERegularLocomotionType NewGait, ERegularLocomotionType OldGait)> K2Node_CreateDelegate_OutputDelegate_5; // 0x0128(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPawnAnimStateTypes                           Temp_byte_Variable;                                // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPawnAnimStateTypes                           Temp_byte_Variable_1;                              // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPawnAnimStateTypes                           Temp_byte_Variable_2;                              // 0x013B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPawnAnimStateTypes                           Temp_byte_Variable_3;                              // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13D[0x3];                                      // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_10;     // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPawnAnimStateTypes                           Temp_byte_Variable_4;                              // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELocomotionGait                               Temp_byte_Variable_5;                              // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14A[0x6];                                      // 0x014A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_11;     // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPawnAnimStateTypes                           Temp_byte_Variable_6;                              // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPawnAnimStateTypes                           Temp_byte_Variable_7;                              // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x015A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x015B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPawnAnimStateTypes                           Temp_byte_Variable_8;                              // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPawnAnimStateTypes                           Temp_byte_Variable_9;                              // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPawnAnimStateTypes                           Temp_byte_Variable_10;                             // 0x015E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_4;       // 0x015F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELocomotionGait                               Temp_byte_Variable_11;                             // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_163[0x5];                                      // 0x0163(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_12;     // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_13;     // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_14;     // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_15;     // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_16;     // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetNeedMirror_ReturnValue;                // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_192[0x6];                                      // 0x0192(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_17;     // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_18;     // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AA[0x6];                                      // 0x01AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_19;     // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BA[0x6];                                      // 0x01BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_20;     // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_21;     // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_22;     // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_23;     // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x01E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x01E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatchSequences                        K2Node_MakeStruct_MatchSequences_1;                // 0x01E8(0x0010)(NoDestructor)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_11;                // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_202[0x6];                                      // 0x0202(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatchSequences                        K2Node_MakeStruct_MatchSequences_2;                // 0x0208(0x0010)(NoDestructor)
	bool                                          Temp_bool_Variable_8;                              // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_9;                // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x021A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x021B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTime_ReturnValue_3;        // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_5;       // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x3];                                      // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue; // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_10;               // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x022A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x022B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_12;                             // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_13;                             // 0x022D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22E[0x2];                                      // 0x022E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_24;     // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELocomotionGait                               Temp_byte_Variable_12;                             // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_11;               // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_12;               // 0x023A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_12;                // 0x023B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x023D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_13;                // 0x023E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x023F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_13;               // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_14;               // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0242(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_15;               // 0x0243(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELocomotionGait                               Temp_byte_Variable_13;                             // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_245[0x3];                                      // 0x0245(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_25;     // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetNeedMirror_ReturnValue_1;              // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatchSequences                        K2Node_MakeStruct_MatchSequences_3;                // 0x0258(0x0010)(NoDestructor)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_6;       // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_14;                // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetNeedMirror_ReturnValue_2;              // 0x026A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_15;                // 0x026B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_16;                // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26D[0x3];                                      // 0x026D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatchSequences                        K2Node_MakeStruct_MatchSequences_4;                // 0x0270(0x0010)(NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_16;               // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetNeedMirror_ReturnValue_3;              // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_282[0x6];                                      // 0x0282(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_26;     // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMatchSequences                        K2Node_MakeStruct_MatchSequences_5;                // 0x0290(0x0010)(NoDestructor)
	struct FMatchSequences                        K2Node_MakeStruct_MatchSequences_6;                // 0x02A0(0x0010)(NoDestructor)
	struct FMatchSequences                        K2Node_MakeStruct_MatchSequences_7;                // 0x02B0(0x0010)(NoDestructor)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_27;     // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMatchSequences                        K2Node_MakeStruct_MatchSequences_8;                // 0x02C8(0x0010)(NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_17;               // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetNeedMirror_ReturnValue_4;              // 0x02DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DE[0x2];                                      // 0x02DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTime_ReturnValue_4;        // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_7;       // 0x02E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_8;       // 0x02E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_17;                // 0x02E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_18;                // 0x02E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_28;     // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_19;                // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x02F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_9;        // 0x02F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_10;       // 0x02F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x02F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x02F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_18;               // 0x02F7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_29;     // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_19;               // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x3];                                      // 0x0301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1; // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_11;       // 0x0309(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_12;       // 0x030A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x030B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_2; // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_2;          // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0x3];                                      // 0x0311(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_319[0x3];                                      // 0x0319(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_13;       // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_20;               // 0x0321(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_21;               // 0x0322(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_22;               // 0x0323(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_23;               // 0x0324(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_20;                // 0x0325(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_21;                // 0x0326(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_9;       // 0x0327(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_22;                // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_23;                // 0x0329(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_24;                // 0x032A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_25;                // 0x032B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_3;          // 0x032C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_24;               // 0x032D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_26;                // 0x032E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_14;       // 0x032F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_4;          // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_27;                // 0x0331(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_15;       // 0x0332(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_25;               // 0x0333(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_16;       // 0x0334(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_10;      // 0x0335(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_336[0x2];                                      // 0x0336(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_2;                        // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue_1;                 // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_11;      // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_2;                              // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_4;                              // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELocomotionGait                               Temp_byte_Variable_14;                             // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391[0x7];                                      // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_12;      // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1[0x7];                                      // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_30;     // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_31;     // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_28;                // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEnableStylizedPivot_Result;            // 0x03C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_5;          // 0x03C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C3[0x1];                                      // 0x03C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Temp_object_Variable;                              // 0x03C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Temp_object_Variable_1;                            // 0x03D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_14;                             // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D9[0x7];                                      // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          Temp_object_Variable_2;                            // 0x03E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Temp_object_Variable_3;                            // 0x03E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          K2Node_Select_Default_1;                           // 0x03F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_15;                             // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F9[0x7];                                      // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          Temp_object_Variable_4;                            // 0x0400(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Temp_object_Variable_5;                            // 0x0408(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          K2Node_Select_Default_2;                           // 0x0410(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_16;                             // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_17;       // 0x0419(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41A[0x6];                                      // 0x041A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          K2Node_Select_Default_3;                           // 0x0420(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_26;               // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEnableStylizedPivot_Result_1;          // 0x0429(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_29;                // 0x042A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_6;          // 0x042B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42C[0x4];                                      // 0x042C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          Temp_object_Variable_6;                            // 0x0430(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Temp_object_Variable_7;                            // 0x0438(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_17;                             // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_441[0x7];                                      // 0x0441(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          Temp_object_Variable_8;                            // 0x0448(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Temp_object_Variable_9;                            // 0x0450(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          K2Node_Select_Default_4;                           // 0x0458(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_18;                             // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_461[0x7];                                      // 0x0461(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          Temp_object_Variable_10;                           // 0x0468(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Temp_object_Variable_11;                           // 0x0470(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          K2Node_Select_Default_5;                           // 0x0478(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_19;                             // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_481[0x7];                                      // 0x0481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          K2Node_Select_Default_6;                           // 0x0488(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_30;                // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_491[0x7];                                      // 0x0491(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_32;     // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_27;               // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A1[0x7];                                      // 0x04A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_33;     // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_31;                // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B1[0x7];                                      // 0x04B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatchSequences                        K2Node_MakeStruct_MatchSequences_9;                // 0x04B8(0x0010)(NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_32;                // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_33;                // 0x04C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_28;               // 0x04CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CB[0x5];                                      // 0x04CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_34;     // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetNeedMirror_ReturnValue_5;              // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetNeedMirror_ReturnValue_6;              // 0x04D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_29;               // 0x04DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DB[0x5];                                      // 0x04DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatchSequences                        K2Node_MakeStruct_MatchSequences_10;               // 0x04E0(0x0010)(NoDestructor)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x04F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_13;      // 0x04F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FA[0x6];                                      // 0x04FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_35;     // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_1;         // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_14;      // 0x0509(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_34;                // 0x050A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_35;                // 0x050B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50C[0x4];                                      // 0x050C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlendSpace*                            Temp_object_Variable_12;                           // 0x0510(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_20;                             // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_519[0x7];                                      // 0x0519(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlendSpace*                            Temp_object_Variable_13;                           // 0x0520(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBlendSpace*                            Temp_object_Variable_14;                           // 0x0528(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_21;                             // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_531[0x7];                                      // 0x0531(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlendSpace*                            Temp_object_Variable_15;                           // 0x0538(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBlendSpace*                            K2Node_Select_Default_7;                           // 0x0540(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_22;                             // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_549[0x7];                                      // 0x0549(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlendSpace*                            K2Node_Select_Default_8;                           // 0x0550(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBlendSpace*                            Temp_object_Variable_16;                           // 0x0558(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBlendSpace*                            Temp_object_Variable_17;                           // 0x0560(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_23;                             // 0x0568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELocomotionGait                               Temp_byte_Variable_15;                             // 0x0569(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56A[0x6];                                      // 0x056A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          K2Node_Select_Default_9;                           // 0x0570(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBlendSpace*                            K2Node_Select_Default_10;                          // 0x0578(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBlendSpace*                            K2Node_Select_Default_11;                          // 0x0580(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x0588(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_30;               // 0x0589(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_36;                // 0x058A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x058B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_37;                // 0x058C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_31;               // 0x058D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_38;                // 0x058E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58F[0x1];                                      // 0x058F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_36;     // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_18;                           // 0x0598(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_2;         // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A1[0x7];                                      // 0x05A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      Temp_object_Variable_19;                           // 0x05A8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_24;                             // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B1[0x7];                                      // 0x05B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      Temp_object_Variable_20;                           // 0x05B8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      K2Node_Select_Default_12;                          // 0x05C0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_21;                           // 0x05C8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_25;                             // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D1[0x7];                                      // 0x05D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      Temp_object_Variable_22;                           // 0x05D8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_23;                           // 0x05E0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      K2Node_Select_Default_13;                          // 0x05E8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_26;                             // 0x05F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F1[0x7];                                      // 0x05F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_Select_Default_14;                          // 0x05F8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_37;     // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_38;     // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_32;               // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_611[0x7];                                      // 0x0611(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0618(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0620(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_15;      // 0x0630(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_631[0x7];                                      // 0x0631(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_1;                            // 0x0638(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_27;                             // 0x0648(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_649[0x7];                                      // 0x0649(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetLocomotionStartCurrentTime_ReturnValue; // 0x0650(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_15;                          // 0x0658(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_16;      // 0x0668(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_39;                // 0x0669(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_40;                // 0x066A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66B[0x5];                                      // 0x066B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_39;     // 0x0670(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_40;     // 0x0678(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_3; // 0x0680(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_7;          // 0x0684(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_685[0x3];                                      // 0x0685(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_41;     // 0x0688(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_42;     // 0x0690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0698(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x069C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELocomotionGait                               K2Node_CustomEvent_PrevGait;                       // 0x06A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELocomotionGait                               K2Node_CustomEvent_NewGait_1;                      // 0x06A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_41;                // 0x06A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x06A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_33;               // 0x06A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_42;                // 0x06A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 K2Node_CustomEvent_Mode;                           // 0x06A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 K2Node_CustomEvent_PreMode;                        // 0x06A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_18;       // 0x06A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_19;       // 0x06A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_20;       // 0x06AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_21;       // 0x06AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_22;       // 0x06AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_43;                // 0x06AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_44;                // 0x06AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_23;       // 0x06AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_45;                // 0x06B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_9;                  // 0x06B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_34;               // 0x06B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B3[0x1];                                      // 0x06B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_4; // 0x06B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_8;          // 0x06B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_17;      // 0x06B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_46;                // 0x06BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_35;               // 0x06BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_10;                 // 0x06BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_47;                // 0x06BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_48;                // 0x06BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DeterminTransToRightFoot_bTranstoRight;   // 0x06BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_36;               // 0x06C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_49;                // 0x06C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPawnAnimStateTypes                           K2Node_Select_Default_16;                          // 0x06C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPawnAnimStateTypes                           K2Node_Select_Default_17;                          // 0x06C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ELocomotionGait PrevGait, ELocomotionGait NewGait)> K2Node_CreateDelegate_OutputDelegate_6; // 0x06C4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EMovementMode PrevMode, EMovementMode NewMode)> K2Node_CreateDelegate_OutputDelegate_7; // 0x06D4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x06E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PrepareComponents_ReturnValue;            // 0x06E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E6[0x2];                                      // 0x06E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds_2;                       // 0x06E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x06EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x06ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EE[0x2];                                      // 0x06EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds_1;                       // 0x06F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x06F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_24;       // 0x06F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_CanBlueprintUpdate_CanUpdate;          // 0x06F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_CanBlueprintUpdate_CanUpdate_1;        // 0x06FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_CanBlueprintUpdate_CanUpdate_2;        // 0x06FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERegularLocomotionType                        K2Node_CustomEvent_NewGait;                        // 0x06FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERegularLocomotionType                        K2Node_CustomEvent_OldGait;                        // 0x06FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterSituationType                       K2Node_CustomEvent_CharacterSituationType;         // 0x06FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_AddOrRemove;                    // 0x06FF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0700(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0701(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAdditiveMovementMode                   K2Node_CustomEvent_UpdatedMode;                    // 0x0702(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bAddOrRemoved;                  // 0x0703(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_GetOwnerIsSimulated_bOwnerSimulated;   // 0x0704(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_705[0x3];                                      // 0x0705(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EPlayerAdditiveMovementMode>           CallFunc_Set_ToArray_Result;                       // 0x0708(0x0010)(ReferenceParm)
	EPlayerAdditiveMovementMode                   CallFunc_Array_Get_Item;                           // 0x0718(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_11;                 // 0x0719(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71A[0x2];                                      // 0x071A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x071C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0720(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_721[0x7];                                      // 0x0721(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0728(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0738(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0740(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_744[0x4];                                      // 0x0744(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_NikkiContextualAnimation       CallFunc_GetDataTableRowFromName_OutRow;           // 0x0748(0x0030)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0778(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0779(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x077A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x077B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x077C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPlayerGamePlayMovementMode                   CallFunc_BP_GetCurrentActiveMovementMode_Ret;      // 0x078C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerGamePlayMovementMode                   K2Node_CustomEvent_OldMode;                        // 0x078D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerGamePlayMovementMode                   K2Node_CustomEvent_NewMode;                        // 0x078E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x078F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERegularFloatingJumpStage                     K2Node_CustomEvent_NewStage;                       // 0x0790(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERegularFloatingJumpStage                     K2Node_CustomEvent_OldStage;                       // 0x0791(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_37;               // 0x0792(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_50;                // 0x0793(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_794[0x4];                                      // 0x0794(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_InRangeA_ImplicitCast;    // 0x0798(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_InRangeB_ImplicitCast;    // 0x07A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast;       // 0x07A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_Alpha_ImplicitCast;         // 0x07B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B4[0x4];                                      // 0x07B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x07B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_1;    // 0x07C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast; // 0x07C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_1; // 0x07CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_2; // 0x07D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D4[0x4];                                      // 0x07D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_2;    // 0x07D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_3; // 0x07E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E4[0x4];                                      // 0x07E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x07E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_4; // 0x07F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_5; // 0x07F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_6; // 0x07F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_7; // 0x07FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_8; // 0x0800(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_9; // 0x0804(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_10; // 0x0808(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_11; // 0x080C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_3;    // 0x0810(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_12; // 0x0818(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_13; // 0x081C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_14; // 0x0820(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_15; // 0x0824(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_16; // 0x0828(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_17; // 0x082C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_18; // 0x0830(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_19; // 0x0834(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_20; // 0x0838(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_21; // 0x083C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_22; // 0x0840(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_23; // 0x0844(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast_1;     // 0x0848(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_InRangeA_ImplicitCast_1;  // 0x0850(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_InRangeB_ImplicitCast_1;  // 0x0858(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_Alpha_ImplicitCast_1;       // 0x0860(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_864[0x4];                                      // 0x0864(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_4;    // 0x0868(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0870(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_24; // 0x0878(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_25; // 0x087C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_5;    // 0x0880(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_26; // 0x0888(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_27; // 0x088C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_6;    // 0x0890(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_7;    // 0x0898(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_28; // 0x08A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_29; // 0x08A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast_1;       // 0x08A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast_2;       // 0x08B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_8;    // 0x08B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast_3;       // 0x08C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast_4;       // 0x08C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_9;    // 0x08D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast;                       // 0x08D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast_1;                     // 0x08E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_A_ImplicitCast;                // 0x08E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_A_ImplicitCast_1;              // 0x08F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_30; // 0x08F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_31; // 0x08FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast_5;       // 0x0900(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast_6;       // 0x0908(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_32; // 0x0910(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_33; // 0x0914(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet___FloatProperty_32_ImplicitCast; // 0x0918(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91C[0x4];                                      // 0x091C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_A_ImplicitCast;               // 0x0920(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0928(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_X_ImplicitCast;             // 0x0930(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_934[0x4];                                      // 0x0934(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_InRange_FloatFloat_Value_ImplicitCast;    // 0x0938(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_10;   // 0x0940(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x0948(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet___FloatProperty_246_ImplicitCast; // 0x0950(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_954[0x4];                                      // 0x0954(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_InRange_FloatFloat_Value_ImplicitCast_1;  // 0x0958(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_11;   // 0x0960(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet___FloatProperty_247_ImplicitCast; // 0x0968(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet___FloatProperty_245_ImplicitCast; // 0x096C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_34; // 0x0970(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_974[0x4];                                      // 0x0974(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_InRange_FloatFloat_Value_ImplicitCast_2;  // 0x0978(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_35; // 0x0980(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_984[0x4];                                      // 0x0984(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_A_ImplicitCast_1;             // 0x0988(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2;   // 0x0990(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_X_ImplicitCast_1;           // 0x0998(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99C[0x4];                                      // 0x099C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_12;   // 0x09A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_36; // 0x09A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_37; // 0x09AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast_7;       // 0x09B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_38; // 0x09B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_39; // 0x09BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast_8;       // 0x09C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_13;   // 0x09C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_B_ImplicitCast;     // 0x09D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement");
static_assert(sizeof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement) == 0x0009D8, "Wrong size on ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, EntryPoint) == 0x000000, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_MakeStruct_MatchSequences) == 0x000008, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_MakeStruct_MatchSequences' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_MapRangeClamped_ReturnValue) == 0x000018, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000021, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_GetRelevantAnimTime_ReturnValue) == 0x000024, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_GetRelevantAnimTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000028, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_GetRelevantAnimTime_ReturnValue_1) == 0x00002C, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_GetRelevantAnimTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue) == 0x000030, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000031, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Not_PreBool_ReturnValue_1) == 0x000048, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_1) == 0x000049, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000050, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_2) == 0x000058, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_GetRelevantAnimTime_ReturnValue_2) == 0x00005C, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_GetRelevantAnimTime_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000060, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000068, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Not_PreBool_ReturnValue_2) == 0x000069, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000070, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_3) == 0x000078, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Abs_ReturnValue) == 0x000080, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x000088, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Not_PreBool_ReturnValue_3) == 0x000089, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanOR_ReturnValue) == 0x00008A, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000090, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Not_PreBool_ReturnValue_4) == 0x000098, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_4) == 0x000099, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_5) == 0x00009A, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0000A0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000A8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000A9, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanOR_ReturnValue_1) == 0x0000AA, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_CreateDelegate_OutputDelegate) == 0x0000AC, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0000BC, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000C0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000D0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x0000E0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x0000E8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000F0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_6) == 0x000100, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_CreateDelegate_OutputDelegate_4) == 0x000104, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_7) == 0x000114, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x000118, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x000120, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_CreateDelegate_OutputDelegate_5) == 0x000128, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_byte_Variable) == 0x000138, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Not_PreBool_ReturnValue_5) == 0x000139, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_byte_Variable_1) == 0x00013A, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_byte_Variable_2) == 0x00013B, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_byte_Variable_3) == 0x00013C, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_10) == 0x000140, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_byte_Variable_4) == 0x000148, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_byte_Variable_5) == 0x000149, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_11) == 0x000150, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_byte_Variable_6) == 0x000158, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_byte_Variable_7) == 0x000159, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Not_PreBool_ReturnValue_6) == 0x00015A, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_8) == 0x00015B, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_byte_Variable_8) == 0x00015C, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_byte_Variable_9) == 0x00015D, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_byte_Variable_10) == 0x00015E, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Greater_DoubleDouble_ReturnValue_4) == 0x00015F, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Greater_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_byte_Variable_11) == 0x000160, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_9) == 0x000161, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_10) == 0x000162, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_12) == 0x000168, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_13) == 0x000170, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_14) == 0x000178, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_15) == 0x000180, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_16) == 0x000188, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_GetNeedMirror_ReturnValue) == 0x000190, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_GetNeedMirror_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_bool_Variable) == 0x000191, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_17) == 0x000198, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_18) == 0x0001A0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Not_PreBool_ReturnValue_7) == 0x0001A8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_bool_Variable_1) == 0x0001A9, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_19) == 0x0001B0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_bool_Variable_2) == 0x0001B8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_bool_Variable_3) == 0x0001B9, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_20) == 0x0001C0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_21) == 0x0001C8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_22) == 0x0001D0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_23) == 0x0001D8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_bool_Variable_4) == 0x0001E0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_bool_Variable_5) == 0x0001E1, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_bool_Variable_6) == 0x0001E2, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_bool_Variable_7) == 0x0001E3, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_MakeStruct_MatchSequences_1) == 0x0001E8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_MakeStruct_MatchSequences_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_MapRangeClamped_ReturnValue_1) == 0x0001F8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Not_PreBool_ReturnValue_8) == 0x000200, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_11) == 0x000201, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_MakeStruct_MatchSequences_2) == 0x000208, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_MakeStruct_MatchSequences_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_bool_Variable_8) == 0x000218, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Not_PreBool_ReturnValue_9) == 0x000219, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Not_PreBool_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_bool_Variable_9) == 0x00021A, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_bool_Variable_10) == 0x00021B, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_GetRelevantAnimTime_ReturnValue_3) == 0x00021C, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_GetRelevantAnimTime_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Greater_DoubleDouble_ReturnValue_5) == 0x000220, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Greater_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue) == 0x000224, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Not_PreBool_ReturnValue_10) == 0x000228, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Not_PreBool_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000229, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_bool_Variable_11) == 0x00022A, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00022B, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_bool_Variable_12) == 0x00022C, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_bool_Variable_13) == 0x00022D, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_bool_Variable_13' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_24) == 0x000230, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_byte_Variable_12) == 0x000238, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Not_PreBool_ReturnValue_11) == 0x000239, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Not_PreBool_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Not_PreBool_ReturnValue_12) == 0x00023A, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Not_PreBool_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_12) == 0x00023B, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x00023C, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x00023D, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_13) == 0x00023E, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x00023F, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Not_PreBool_ReturnValue_13) == 0x000240, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Not_PreBool_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Not_PreBool_ReturnValue_14) == 0x000241, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Not_PreBool_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanOR_ReturnValue_2) == 0x000242, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Not_PreBool_ReturnValue_15) == 0x000243, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Not_PreBool_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_byte_Variable_13) == 0x000244, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_25) == 0x000248, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_GetNeedMirror_ReturnValue_1) == 0x000250, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_GetNeedMirror_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_MakeStruct_MatchSequences_3) == 0x000258, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_MakeStruct_MatchSequences_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Greater_DoubleDouble_ReturnValue_6) == 0x000268, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Greater_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_14) == 0x000269, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_GetNeedMirror_ReturnValue_2) == 0x00026A, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_GetNeedMirror_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_15) == 0x00026B, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_16) == 0x00026C, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_MakeStruct_MatchSequences_4) == 0x000270, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_MakeStruct_MatchSequences_4' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Not_PreBool_ReturnValue_16) == 0x000280, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Not_PreBool_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_GetNeedMirror_ReturnValue_3) == 0x000281, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_GetNeedMirror_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_26) == 0x000288, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_MakeStruct_MatchSequences_5) == 0x000290, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_MakeStruct_MatchSequences_5' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_MakeStruct_MatchSequences_6) == 0x0002A0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_MakeStruct_MatchSequences_6' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_MakeStruct_MatchSequences_7) == 0x0002B0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_MakeStruct_MatchSequences_7' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_27) == 0x0002C0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_MakeStruct_MatchSequences_8) == 0x0002C8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_MakeStruct_MatchSequences_8' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_int_Array_Index_Variable) == 0x0002D8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Not_PreBool_ReturnValue_17) == 0x0002DC, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Not_PreBool_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_GetNeedMirror_ReturnValue_4) == 0x0002DD, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_GetNeedMirror_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_GetRelevantAnimTime_ReturnValue_4) == 0x0002E0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_GetRelevantAnimTime_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Greater_DoubleDouble_ReturnValue_7) == 0x0002E4, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Greater_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Greater_DoubleDouble_ReturnValue_8) == 0x0002E5, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Greater_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_17) == 0x0002E6, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_18) == 0x0002E7, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_28) == 0x0002E8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_19) == 0x0002F0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x0002F1, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x0002F2, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_EqualEqual_ByteByte_ReturnValue_9) == 0x0002F3, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_EqualEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_EqualEqual_ByteByte_ReturnValue_10) == 0x0002F4, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_EqualEqual_ByteByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanOR_ReturnValue_3) == 0x0002F5, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanOR_ReturnValue_4) == 0x0002F6, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Not_PreBool_ReturnValue_18) == 0x0002F7, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Not_PreBool_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_29) == 0x0002F8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Not_PreBool_ReturnValue_19) == 0x000300, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Not_PreBool_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1) == 0x000304, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000308, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_EqualEqual_ByteByte_ReturnValue_11) == 0x000309, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_EqualEqual_ByteByte_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_EqualEqual_ByteByte_ReturnValue_12) == 0x00030A, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_EqualEqual_ByteByte_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanOR_ReturnValue_5) == 0x00030B, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_2) == 0x00030C, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Less_DoubleDouble_ReturnValue_2) == 0x000310, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Less_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_int_Loop_Counter_Variable) == 0x000314, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000318, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Add_IntInt_ReturnValue) == 0x00031C, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_EqualEqual_ByteByte_ReturnValue_13) == 0x000320, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_EqualEqual_ByteByte_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Not_PreBool_ReturnValue_20) == 0x000321, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Not_PreBool_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Not_PreBool_ReturnValue_21) == 0x000322, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Not_PreBool_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Not_PreBool_ReturnValue_22) == 0x000323, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Not_PreBool_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Not_PreBool_ReturnValue_23) == 0x000324, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Not_PreBool_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_20) == 0x000325, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_21) == 0x000326, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Greater_DoubleDouble_ReturnValue_9) == 0x000327, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Greater_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_22) == 0x000328, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_23) == 0x000329, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_24) == 0x00032A, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_25) == 0x00032B, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Less_DoubleDouble_ReturnValue_3) == 0x00032C, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Less_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Not_PreBool_ReturnValue_24) == 0x00032D, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Not_PreBool_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_26) == 0x00032E, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_EqualEqual_ByteByte_ReturnValue_14) == 0x00032F, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_EqualEqual_ByteByte_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Less_DoubleDouble_ReturnValue_4) == 0x000330, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Less_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_27) == 0x000331, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_EqualEqual_ByteByte_ReturnValue_15) == 0x000332, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_EqualEqual_ByteByte_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Not_PreBool_ReturnValue_25) == 0x000333, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Not_PreBool_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_EqualEqual_ByteByte_ReturnValue_16) == 0x000334, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_EqualEqual_ByteByte_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Greater_DoubleDouble_ReturnValue_10) == 0x000335, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Greater_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Abs_ReturnValue_1) == 0x000338, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Abs_ReturnValue_2) == 0x000340, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000348, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_real_Variable) == 0x000350, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_SafeDivide_ReturnValue) == 0x000358, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_SafeDivide_ReturnValue_1) == 0x000360, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_SafeDivide_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_real_Variable_1) == 0x000368, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Greater_DoubleDouble_ReturnValue_11) == 0x000370, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Greater_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_real_Variable_2) == 0x000378, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_real_Variable_3) == 0x000380, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_real_Variable_4) == 0x000388, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_byte_Variable_14) == 0x000390, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_Select_Default) == 0x000398, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Greater_DoubleDouble_ReturnValue_12) == 0x0003A0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Greater_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_30) == 0x0003A8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanOR_ReturnValue_6) == 0x0003B0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_31) == 0x0003B8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_28) == 0x0003C0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_GetEnableStylizedPivot_Result) == 0x0003C1, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_GetEnableStylizedPivot_Result' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Less_DoubleDouble_ReturnValue_5) == 0x0003C2, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Less_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_int_Array_Index_Variable_1) == 0x0003C4, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_object_Variable) == 0x0003C8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_object_Variable_1) == 0x0003D0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_bool_Variable_14) == 0x0003D8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_bool_Variable_14' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_object_Variable_2) == 0x0003E0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_object_Variable_3) == 0x0003E8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_Select_Default_1) == 0x0003F0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_bool_Variable_15) == 0x0003F8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_bool_Variable_15' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_object_Variable_4) == 0x000400, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_object_Variable_5) == 0x000408, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_Select_Default_2) == 0x000410, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_bool_Variable_16) == 0x000418, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_bool_Variable_16' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_EqualEqual_ByteByte_ReturnValue_17) == 0x000419, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_EqualEqual_ByteByte_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_Select_Default_3) == 0x000420, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Not_PreBool_ReturnValue_26) == 0x000428, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Not_PreBool_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_GetEnableStylizedPivot_Result_1) == 0x000429, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_GetEnableStylizedPivot_Result_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_29) == 0x00042A, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Less_DoubleDouble_ReturnValue_6) == 0x00042B, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Less_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_object_Variable_6) == 0x000430, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_object_Variable_7) == 0x000438, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_bool_Variable_17) == 0x000440, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_bool_Variable_17' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_object_Variable_8) == 0x000448, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_object_Variable_9) == 0x000450, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_Select_Default_4) == 0x000458, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_bool_Variable_18) == 0x000460, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_bool_Variable_18' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_object_Variable_10) == 0x000468, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_object_Variable_11) == 0x000470, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_Select_Default_5) == 0x000478, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_bool_Variable_19) == 0x000480, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_bool_Variable_19' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_Select_Default_6) == 0x000488, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_30) == 0x000490, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_32) == 0x000498, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Not_PreBool_ReturnValue_27) == 0x0004A0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Not_PreBool_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_33) == 0x0004A8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_31) == 0x0004B0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_MakeStruct_MatchSequences_9) == 0x0004B8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_MakeStruct_MatchSequences_9' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_32) == 0x0004C8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_33) == 0x0004C9, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Not_PreBool_ReturnValue_28) == 0x0004CA, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Not_PreBool_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_34) == 0x0004D0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_GetNeedMirror_ReturnValue_5) == 0x0004D8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_GetNeedMirror_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_GetNeedMirror_ReturnValue_6) == 0x0004D9, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_GetNeedMirror_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Not_PreBool_ReturnValue_29) == 0x0004DA, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Not_PreBool_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_MakeStruct_MatchSequences_10) == 0x0004E0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_MakeStruct_MatchSequences_10' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_SelectFloat_ReturnValue) == 0x0004F0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_InRange_FloatFloat_ReturnValue) == 0x0004F8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Greater_DoubleDouble_ReturnValue_13) == 0x0004F9, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Greater_DoubleDouble_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_35) == 0x000500, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_InRange_FloatFloat_ReturnValue_1) == 0x000508, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_InRange_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Greater_DoubleDouble_ReturnValue_14) == 0x000509, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Greater_DoubleDouble_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_34) == 0x00050A, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_35) == 0x00050B, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_object_Variable_12) == 0x000510, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_bool_Variable_20) == 0x000518, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_bool_Variable_20' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_object_Variable_13) == 0x000520, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_object_Variable_14) == 0x000528, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_bool_Variable_21) == 0x000530, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_bool_Variable_21' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_object_Variable_15) == 0x000538, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_Select_Default_7) == 0x000540, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_bool_Variable_22) == 0x000548, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_bool_Variable_22' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_Select_Default_8) == 0x000550, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_object_Variable_16) == 0x000558, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_object_Variable_17) == 0x000560, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_bool_Variable_23) == 0x000568, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_bool_Variable_23' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_byte_Variable_15) == 0x000569, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_Select_Default_9) == 0x000570, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_Select_Default_10) == 0x000578, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_Select_Default_11) == 0x000580, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanOR_ReturnValue_7) == 0x000588, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Not_PreBool_ReturnValue_30) == 0x000589, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Not_PreBool_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_36) == 0x00058A, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanOR_ReturnValue_8) == 0x00058B, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_37) == 0x00058C, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Not_PreBool_ReturnValue_31) == 0x00058D, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Not_PreBool_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_38) == 0x00058E, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_36) == 0x000590, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_object_Variable_18) == 0x000598, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_InRange_FloatFloat_ReturnValue_2) == 0x0005A0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_InRange_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_object_Variable_19) == 0x0005A8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_bool_Variable_24) == 0x0005B0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_bool_Variable_24' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_object_Variable_20) == 0x0005B8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_Select_Default_12) == 0x0005C0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_Select_Default_12' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_object_Variable_21) == 0x0005C8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_bool_Variable_25) == 0x0005D0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_bool_Variable_25' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_object_Variable_22) == 0x0005D8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_object_Variable_22' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_object_Variable_23) == 0x0005E0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_object_Variable_23' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_Select_Default_13) == 0x0005E8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_Select_Default_13' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_bool_Variable_26) == 0x0005F0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_bool_Variable_26' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_Select_Default_14) == 0x0005F8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_Select_Default_14' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_37) == 0x000600, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_38) == 0x000608, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Not_PreBool_ReturnValue_32) == 0x000610, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Not_PreBool_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_SelectFloat_ReturnValue_1) == 0x000618, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_string_Variable) == 0x000620, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Greater_DoubleDouble_ReturnValue_15) == 0x000630, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Greater_DoubleDouble_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_string_Variable_1) == 0x000638, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_bool_Variable_27) == 0x000648, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_bool_Variable_27' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_GetLocomotionStartCurrentTime_ReturnValue) == 0x000650, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_GetLocomotionStartCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_Select_Default_15) == 0x000658, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_Select_Default_15' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Greater_DoubleDouble_ReturnValue_16) == 0x000668, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Greater_DoubleDouble_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_39) == 0x000669, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_40) == 0x00066A, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_39) == 0x000670, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_40) == 0x000678, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_3) == 0x000680, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Less_DoubleDouble_ReturnValue_7) == 0x000684, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Less_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_41) == 0x000688, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_41' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_42) == 0x000690, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_42' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_int_Loop_Counter_Variable_1) == 0x000698, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Add_IntInt_ReturnValue_1) == 0x00069C, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_CustomEvent_PrevGait) == 0x0006A0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_CustomEvent_PrevGait' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_CustomEvent_NewGait_1) == 0x0006A1, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_CustomEvent_NewGait_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_41) == 0x0006A2, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_41' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x0006A3, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Not_PreBool_ReturnValue_33) == 0x0006A4, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Not_PreBool_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_42) == 0x0006A5, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_42' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_CustomEvent_Mode) == 0x0006A6, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_CustomEvent_Mode' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_CustomEvent_PreMode) == 0x0006A7, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_CustomEvent_PreMode' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_EqualEqual_ByteByte_ReturnValue_18) == 0x0006A8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_EqualEqual_ByteByte_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_EqualEqual_ByteByte_ReturnValue_19) == 0x0006A9, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_EqualEqual_ByteByte_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_EqualEqual_ByteByte_ReturnValue_20) == 0x0006AA, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_EqualEqual_ByteByte_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_EqualEqual_ByteByte_ReturnValue_21) == 0x0006AB, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_EqualEqual_ByteByte_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_EqualEqual_ByteByte_ReturnValue_22) == 0x0006AC, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_EqualEqual_ByteByte_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_43) == 0x0006AD, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_43' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_44) == 0x0006AE, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_44' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_EqualEqual_ByteByte_ReturnValue_23) == 0x0006AF, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_EqualEqual_ByteByte_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_45) == 0x0006B0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_45' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanOR_ReturnValue_9) == 0x0006B1, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanOR_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Not_PreBool_ReturnValue_34) == 0x0006B2, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Not_PreBool_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_4) == 0x0006B4, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Less_DoubleDouble_ReturnValue_8) == 0x0006B8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Less_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Greater_DoubleDouble_ReturnValue_17) == 0x0006B9, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Greater_DoubleDouble_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_46) == 0x0006BA, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_46' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Not_PreBool_ReturnValue_35) == 0x0006BB, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Not_PreBool_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanOR_ReturnValue_10) == 0x0006BC, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanOR_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_47) == 0x0006BD, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_47' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_48) == 0x0006BE, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_48' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_DeterminTransToRightFoot_bTranstoRight) == 0x0006BF, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_DeterminTransToRightFoot_bTranstoRight' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Not_PreBool_ReturnValue_36) == 0x0006C0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Not_PreBool_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_49) == 0x0006C1, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_49' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_Select_Default_16) == 0x0006C2, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_Select_Default_16' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_Select_Default_17) == 0x0006C3, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_Select_Default_17' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_CreateDelegate_OutputDelegate_6) == 0x0006C4, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_CreateDelegate_OutputDelegate_7) == 0x0006D4, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_bool_Has_Been_Initd_Variable) == 0x0006E4, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_PrepareComponents_ReturnValue) == 0x0006E5, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_PrepareComponents_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_Event_DeltaSeconds_2) == 0x0006E8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_Event_DeltaSeconds_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_SwitchEnum_CmpSuccess) == 0x0006EC, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x0006ED, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_Event_DeltaSeconds_1) == 0x0006F0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_Event_DeltaSeconds_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_Event_DeltaSeconds) == 0x0006F4, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_EqualEqual_ByteByte_ReturnValue_24) == 0x0006F8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_EqualEqual_ByteByte_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BP_CanBlueprintUpdate_CanUpdate) == 0x0006F9, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BP_CanBlueprintUpdate_CanUpdate' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BP_CanBlueprintUpdate_CanUpdate_1) == 0x0006FA, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BP_CanBlueprintUpdate_CanUpdate_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BP_CanBlueprintUpdate_CanUpdate_2) == 0x0006FB, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BP_CanBlueprintUpdate_CanUpdate_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_CustomEvent_NewGait) == 0x0006FC, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_CustomEvent_NewGait' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_CustomEvent_OldGait) == 0x0006FD, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_CustomEvent_OldGait' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_CustomEvent_CharacterSituationType) == 0x0006FE, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_CustomEvent_CharacterSituationType' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_CustomEvent_AddOrRemove) == 0x0006FF, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_CustomEvent_AddOrRemove' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_bool_Has_Been_Initd_Variable_1) == 0x000700, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_bool_IsClosed_Variable) == 0x000701, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_CustomEvent_UpdatedMode) == 0x000702, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_CustomEvent_UpdatedMode' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_CustomEvent_bAddOrRemoved) == 0x000703, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_CustomEvent_bAddOrRemoved' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BP_GetOwnerIsSimulated_bOwnerSimulated) == 0x000704, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BP_GetOwnerIsSimulated_bOwnerSimulated' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Set_ToArray_Result) == 0x000708, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Set_ToArray_Result' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Array_Get_Item) == 0x000718, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanOR_ReturnValue_11) == 0x000719, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanOR_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Array_Length_ReturnValue) == 0x00071C, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Less_IntInt_ReturnValue) == 0x000720, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000728, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Array_Get_Item_1) == 0x000738, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Array_Length_ReturnValue_1) == 0x000740, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_GetDataTableRowFromName_OutRow) == 0x000748, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000778, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Less_IntInt_ReturnValue_1) == 0x000779, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, Temp_bool_IsClosed_Variable_1) == 0x00077A, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_IsValid_ReturnValue) == 0x00077B, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_CreateDelegate_OutputDelegate_8) == 0x00077C, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BP_GetCurrentActiveMovementMode_Ret) == 0x00078C, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BP_GetCurrentActiveMovementMode_Ret' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_CustomEvent_OldMode) == 0x00078D, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_CustomEvent_OldMode' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_CustomEvent_NewMode) == 0x00078E, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_CustomEvent_NewMode' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_GetValidValue_ReturnValue) == 0x00078F, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_CustomEvent_NewStage) == 0x000790, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_CustomEvent_NewStage' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_CustomEvent_OldStage) == 0x000791, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_CustomEvent_OldStage' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Not_PreBool_ReturnValue_37) == 0x000792, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Not_PreBool_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_BooleanAND_ReturnValue_50) == 0x000793, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_BooleanAND_ReturnValue_50' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_MapRangeClamped_InRangeA_ImplicitCast) == 0x000798, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_MapRangeClamped_InRangeA_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_MapRangeClamped_InRangeB_ImplicitCast) == 0x0007A0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_MapRangeClamped_InRangeB_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_MapRangeClamped_Value_ImplicitCast) == 0x0007A8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_MapRangeClamped_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet_Alpha_ImplicitCast) == 0x0007B0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0007B8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Greater_DoubleDouble_A_ImplicitCast_1) == 0x0007C0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Greater_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast) == 0x0007C8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_1) == 0x0007CC, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_2) == 0x0007D0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Greater_DoubleDouble_A_ImplicitCast_2) == 0x0007D8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Greater_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_3) == 0x0007E0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x0007E8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_4) == 0x0007F0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_5) == 0x0007F4, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_6) == 0x0007F8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_7) == 0x0007FC, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_8) == 0x000800, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_8' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_9) == 0x000804, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_9' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_10) == 0x000808, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_10' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_11) == 0x00080C, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_11' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Greater_DoubleDouble_A_ImplicitCast_3) == 0x000810, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Greater_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_12) == 0x000818, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_12' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_13) == 0x00081C, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_13' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_14) == 0x000820, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_14' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_15) == 0x000824, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_15' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_16) == 0x000828, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_16' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_17) == 0x00082C, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_17' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_18) == 0x000830, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_18' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_19) == 0x000834, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_19' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_20) == 0x000838, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_20' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_21) == 0x00083C, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_21' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_22) == 0x000840, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_22' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_23) == 0x000844, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_23' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_MapRangeClamped_Value_ImplicitCast_1) == 0x000848, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_MapRangeClamped_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_MapRangeClamped_InRangeA_ImplicitCast_1) == 0x000850, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_MapRangeClamped_InRangeA_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_MapRangeClamped_InRangeB_ImplicitCast_1) == 0x000858, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_MapRangeClamped_InRangeB_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet_Alpha_ImplicitCast_1) == 0x000860, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Greater_DoubleDouble_A_ImplicitCast_4) == 0x000868, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Greater_DoubleDouble_A_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000870, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_24) == 0x000878, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_24' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_25) == 0x00087C, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_25' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Greater_DoubleDouble_A_ImplicitCast_5) == 0x000880, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Greater_DoubleDouble_A_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_26) == 0x000888, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_26' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_27) == 0x00088C, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_27' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Greater_DoubleDouble_A_ImplicitCast_6) == 0x000890, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Greater_DoubleDouble_A_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Greater_DoubleDouble_A_ImplicitCast_7) == 0x000898, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Greater_DoubleDouble_A_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_28) == 0x0008A0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_28' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_29) == 0x0008A4, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_29' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Less_DoubleDouble_A_ImplicitCast_1) == 0x0008A8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Less_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Less_DoubleDouble_A_ImplicitCast_2) == 0x0008B0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Less_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Greater_DoubleDouble_A_ImplicitCast_8) == 0x0008B8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Greater_DoubleDouble_A_ImplicitCast_8' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Less_DoubleDouble_A_ImplicitCast_3) == 0x0008C0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Less_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Less_DoubleDouble_A_ImplicitCast_4) == 0x0008C8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Less_DoubleDouble_A_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Greater_DoubleDouble_A_ImplicitCast_9) == 0x0008D0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Greater_DoubleDouble_A_ImplicitCast_9' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Abs_A_ImplicitCast) == 0x0008D8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Abs_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Abs_A_ImplicitCast_1) == 0x0008E0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Abs_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_SafeDivide_A_ImplicitCast) == 0x0008E8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_SafeDivide_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_SafeDivide_A_ImplicitCast_1) == 0x0008F0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_SafeDivide_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_30) == 0x0008F8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_30' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_31) == 0x0008FC, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_31' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Less_DoubleDouble_A_ImplicitCast_5) == 0x000900, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Less_DoubleDouble_A_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Less_DoubleDouble_A_ImplicitCast_6) == 0x000908, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Less_DoubleDouble_A_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_32) == 0x000910, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_32' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_33) == 0x000914, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_33' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet___FloatProperty_32_ImplicitCast) == 0x000918, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet___FloatProperty_32_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_SelectFloat_A_ImplicitCast) == 0x000920, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_SelectFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000928, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet_X_ImplicitCast) == 0x000930, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_InRange_FloatFloat_Value_ImplicitCast) == 0x000938, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_InRange_FloatFloat_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Greater_DoubleDouble_A_ImplicitCast_10) == 0x000940, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Greater_DoubleDouble_A_ImplicitCast_10' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x000948, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet___FloatProperty_246_ImplicitCast) == 0x000950, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet___FloatProperty_246_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_InRange_FloatFloat_Value_ImplicitCast_1) == 0x000958, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_InRange_FloatFloat_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Greater_DoubleDouble_A_ImplicitCast_11) == 0x000960, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Greater_DoubleDouble_A_ImplicitCast_11' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet___FloatProperty_247_ImplicitCast) == 0x000968, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet___FloatProperty_247_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet___FloatProperty_245_ImplicitCast) == 0x00096C, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet___FloatProperty_245_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_34) == 0x000970, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_34' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_InRange_FloatFloat_Value_ImplicitCast_2) == 0x000978, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_InRange_FloatFloat_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_35) == 0x000980, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_35' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_SelectFloat_A_ImplicitCast_1) == 0x000988, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_SelectFloat_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2) == 0x000990, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet_X_ImplicitCast_1) == 0x000998, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet_X_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Greater_DoubleDouble_A_ImplicitCast_12) == 0x0009A0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Greater_DoubleDouble_A_ImplicitCast_12' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_36) == 0x0009A8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_36' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_37) == 0x0009AC, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_37' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Less_DoubleDouble_A_ImplicitCast_7) == 0x0009B0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Less_DoubleDouble_A_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_38) == 0x0009B8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_38' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_39) == 0x0009BC, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::K2Node_StructMemberSet_CurveValueToMatch_ImplicitCast_39' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Less_DoubleDouble_A_ImplicitCast_8) == 0x0009C0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Less_DoubleDouble_A_ImplicitCast_8' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_Greater_DoubleDouble_A_ImplicitCast_13) == 0x0009C8, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_Greater_DoubleDouble_A_ImplicitCast_13' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement, CallFunc_NotEqual_DoubleDouble_B_ImplicitCast) == 0x0009D0, "Member 'ABP_Player_RegularMovement_C_ExecuteUbergraph_ABP_Player_RegularMovement::CallFunc_NotEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.GetEnableStylizedPivot
// 0x0002 (0x0002 - 0x0000)
struct ABP_Player_RegularMovement_C_GetEnableStylizedPivot final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_GetEnableStylizedPivot) == 0x000001, "Wrong alignment on ABP_Player_RegularMovement_C_GetEnableStylizedPivot");
static_assert(sizeof(ABP_Player_RegularMovement_C_GetEnableStylizedPivot) == 0x000002, "Wrong size on ABP_Player_RegularMovement_C_GetEnableStylizedPivot");
static_assert(offsetof(ABP_Player_RegularMovement_C_GetEnableStylizedPivot, Result) == 0x000000, "Member 'ABP_Player_RegularMovement_C_GetEnableStylizedPivot::Result' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_GetEnableStylizedPivot, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'ABP_Player_RegularMovement_C_GetEnableStylizedPivot::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.GetLocomotionStartCurrentTime
// 0x0020 (0x0020 - 0x0000)
struct ABP_Player_RegularMovement_C_GetLocomotionStartCurrentTime final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_B_ImplicitCast;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_A_ImplicitCast;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_GetLocomotionStartCurrentTime) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_GetLocomotionStartCurrentTime");
static_assert(sizeof(ABP_Player_RegularMovement_C_GetLocomotionStartCurrentTime) == 0x000020, "Wrong size on ABP_Player_RegularMovement_C_GetLocomotionStartCurrentTime");
static_assert(offsetof(ABP_Player_RegularMovement_C_GetLocomotionStartCurrentTime, ReturnValue) == 0x000000, "Member 'ABP_Player_RegularMovement_C_GetLocomotionStartCurrentTime::ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_GetLocomotionStartCurrentTime, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'ABP_Player_RegularMovement_C_GetLocomotionStartCurrentTime::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_GetLocomotionStartCurrentTime, CallFunc_SelectFloat_B_ImplicitCast) == 0x000010, "Member 'ABP_Player_RegularMovement_C_GetLocomotionStartCurrentTime::CallFunc_SelectFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_GetLocomotionStartCurrentTime, CallFunc_SelectFloat_A_ImplicitCast) == 0x000018, "Member 'ABP_Player_RegularMovement_C_GetLocomotionStartCurrentTime::CallFunc_SelectFloat_A_ImplicitCast' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.Internal_Process_OnEnter_LM_Ground_NotMoving
// 0x0002 (0x0002 - 0x0000)
struct ABP_Player_RegularMovement_C_Internal_Process_OnEnter_LM_Ground_NotMoving final
{
public:
	bool                                          CallFunc_BP_IsForceStopStage_ForceStopFlag;        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_Internal_Process_OnEnter_LM_Ground_NotMoving) == 0x000001, "Wrong alignment on ABP_Player_RegularMovement_C_Internal_Process_OnEnter_LM_Ground_NotMoving");
static_assert(sizeof(ABP_Player_RegularMovement_C_Internal_Process_OnEnter_LM_Ground_NotMoving) == 0x000002, "Wrong size on ABP_Player_RegularMovement_C_Internal_Process_OnEnter_LM_Ground_NotMoving");
static_assert(offsetof(ABP_Player_RegularMovement_C_Internal_Process_OnEnter_LM_Ground_NotMoving, CallFunc_BP_IsForceStopStage_ForceStopFlag) == 0x000000, "Member 'ABP_Player_RegularMovement_C_Internal_Process_OnEnter_LM_Ground_NotMoving::CallFunc_BP_IsForceStopStage_ForceStopFlag' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_Internal_Process_OnEnter_LM_Ground_NotMoving, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'ABP_Player_RegularMovement_C_Internal_Process_OnEnter_LM_Ground_NotMoving::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.Internal_Process_OnLeft_LM_Ground_Stop
// 0x0002 (0x0002 - 0x0000)
struct ABP_Player_RegularMovement_C_Internal_Process_OnLeft_LM_Ground_Stop final
{
public:
	bool                                          CallFunc_BP_IsForceStopStage_ForceStopFlag;        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_Internal_Process_OnLeft_LM_Ground_Stop) == 0x000001, "Wrong alignment on ABP_Player_RegularMovement_C_Internal_Process_OnLeft_LM_Ground_Stop");
static_assert(sizeof(ABP_Player_RegularMovement_C_Internal_Process_OnLeft_LM_Ground_Stop) == 0x000002, "Wrong size on ABP_Player_RegularMovement_C_Internal_Process_OnLeft_LM_Ground_Stop");
static_assert(offsetof(ABP_Player_RegularMovement_C_Internal_Process_OnLeft_LM_Ground_Stop, CallFunc_BP_IsForceStopStage_ForceStopFlag) == 0x000000, "Member 'ABP_Player_RegularMovement_C_Internal_Process_OnLeft_LM_Ground_Stop::CallFunc_BP_IsForceStopStage_ForceStopFlag' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_Internal_Process_OnLeft_LM_Ground_Stop, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'ABP_Player_RegularMovement_C_Internal_Process_OnLeft_LM_Ground_Stop::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.IsStartEnableRootmotion
// 0x0018 (0x0018 - 0x0000)
struct ABP_Player_RegularMovement_C_IsStartEnableRootmotion final
{
public:
	bool                                          EnableStartRootmotion;                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetLocomotionStartCurrentTime_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_IsStartEnableRootmotion) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_IsStartEnableRootmotion");
static_assert(sizeof(ABP_Player_RegularMovement_C_IsStartEnableRootmotion) == 0x000018, "Wrong size on ABP_Player_RegularMovement_C_IsStartEnableRootmotion");
static_assert(offsetof(ABP_Player_RegularMovement_C_IsStartEnableRootmotion, EnableStartRootmotion) == 0x000000, "Member 'ABP_Player_RegularMovement_C_IsStartEnableRootmotion::EnableStartRootmotion' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_IsStartEnableRootmotion, CallFunc_GetLocomotionStartCurrentTime_ReturnValue) == 0x000008, "Member 'ABP_Player_RegularMovement_C_IsStartEnableRootmotion::CallFunc_GetLocomotionStartCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_IsStartEnableRootmotion, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000010, "Member 'ABP_Player_RegularMovement_C_IsStartEnableRootmotion::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_IsStartEnableRootmotion, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000011, "Member 'ABP_Player_RegularMovement_C_IsStartEnableRootmotion::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_IsStartEnableRootmotion, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000012, "Member 'ABP_Player_RegularMovement_C_IsStartEnableRootmotion::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.On Movement Mode Changed
// 0x0002 (0x0002 - 0x0000)
struct ABP_Player_RegularMovement_C_On_Movement_Mode_Changed final
{
public:
	EMovementMode                                 Mode;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 PreMode;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_On_Movement_Mode_Changed) == 0x000001, "Wrong alignment on ABP_Player_RegularMovement_C_On_Movement_Mode_Changed");
static_assert(sizeof(ABP_Player_RegularMovement_C_On_Movement_Mode_Changed) == 0x000002, "Wrong size on ABP_Player_RegularMovement_C_On_Movement_Mode_Changed");
static_assert(offsetof(ABP_Player_RegularMovement_C_On_Movement_Mode_Changed, Mode) == 0x000000, "Member 'ABP_Player_RegularMovement_C_On_Movement_Mode_Changed::Mode' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_On_Movement_Mode_Changed, PreMode) == 0x000001, "Member 'ABP_Player_RegularMovement_C_On_Movement_Mode_Changed::PreMode' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.OnAdditiveMovementModeUpdate
// 0x0005 (0x0005 - 0x0000)
struct ABP_Player_RegularMovement_C_OnAdditiveMovementModeUpdate final
{
public:
	EPlayerAdditiveMovementMode                   UpdatedMode;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAddOrRemoved;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_OnAdditiveMovementModeUpdate) == 0x000001, "Wrong alignment on ABP_Player_RegularMovement_C_OnAdditiveMovementModeUpdate");
static_assert(sizeof(ABP_Player_RegularMovement_C_OnAdditiveMovementModeUpdate) == 0x000005, "Wrong size on ABP_Player_RegularMovement_C_OnAdditiveMovementModeUpdate");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnAdditiveMovementModeUpdate, UpdatedMode) == 0x000000, "Member 'ABP_Player_RegularMovement_C_OnAdditiveMovementModeUpdate::UpdatedMode' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnAdditiveMovementModeUpdate, bAddOrRemoved) == 0x000001, "Member 'ABP_Player_RegularMovement_C_OnAdditiveMovementModeUpdate::bAddOrRemoved' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnAdditiveMovementModeUpdate, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'ABP_Player_RegularMovement_C_OnAdditiveMovementModeUpdate::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnAdditiveMovementModeUpdate, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000003, "Member 'ABP_Player_RegularMovement_C_OnAdditiveMovementModeUpdate::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnAdditiveMovementModeUpdate, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'ABP_Player_RegularMovement_C_OnAdditiveMovementModeUpdate::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.OnContextChanged
// 0x0003 (0x0003 - 0x0000)
struct ABP_Player_RegularMovement_C_OnContextChanged final
{
public:
	ECharacterSituationType                       Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAdd;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterSituationType                       ContextualType;                                    // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_OnContextChanged) == 0x000001, "Wrong alignment on ABP_Player_RegularMovement_C_OnContextChanged");
static_assert(sizeof(ABP_Player_RegularMovement_C_OnContextChanged) == 0x000003, "Wrong size on ABP_Player_RegularMovement_C_OnContextChanged");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnContextChanged, Type) == 0x000000, "Member 'ABP_Player_RegularMovement_C_OnContextChanged::Type' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnContextChanged, IsAdd) == 0x000001, "Member 'ABP_Player_RegularMovement_C_OnContextChanged::IsAdd' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnContextChanged, ContextualType) == 0x000002, "Member 'ABP_Player_RegularMovement_C_OnContextChanged::ContextualType' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.OnGroundTransitionDecide
// 0x0018 (0x0018 - 0x0000)
struct ABP_Player_RegularMovement_C_OnGroundTransitionDecide final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_OnGroundTransitionDecide) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_OnGroundTransitionDecide");
static_assert(sizeof(ABP_Player_RegularMovement_C_OnGroundTransitionDecide) == 0x000018, "Wrong size on ABP_Player_RegularMovement_C_OnGroundTransitionDecide");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnGroundTransitionDecide, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'ABP_Player_RegularMovement_C_OnGroundTransitionDecide::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnGroundTransitionDecide, CallFunc_Not_PreBool_ReturnValue_1) == 0x000001, "Member 'ABP_Player_RegularMovement_C_OnGroundTransitionDecide::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnGroundTransitionDecide, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000002, "Member 'ABP_Player_RegularMovement_C_OnGroundTransitionDecide::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnGroundTransitionDecide, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'ABP_Player_RegularMovement_C_OnGroundTransitionDecide::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnGroundTransitionDecide, CallFunc_BooleanAND_ReturnValue_1) == 0x000004, "Member 'ABP_Player_RegularMovement_C_OnGroundTransitionDecide::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnGroundTransitionDecide, CallFunc_BooleanAND_ReturnValue_2) == 0x000005, "Member 'ABP_Player_RegularMovement_C_OnGroundTransitionDecide::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnGroundTransitionDecide, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast) == 0x000008, "Member 'ABP_Player_RegularMovement_C_OnGroundTransitionDecide::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnGroundTransitionDecide, CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast) == 0x000010, "Member 'ABP_Player_RegularMovement_C_OnGroundTransitionDecide::CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.OnLocomotionState_RegularState_Entry
// 0x0020 (0x0020 - 0x0000)
struct ABP_Player_RegularMovement_C_OnLocomotionState_RegularState_Entry final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(ABP_Player_RegularMovement_C_OnLocomotionState_RegularState_Entry) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_OnLocomotionState_RegularState_Entry");
static_assert(sizeof(ABP_Player_RegularMovement_C_OnLocomotionState_RegularState_Entry) == 0x000020, "Wrong size on ABP_Player_RegularMovement_C_OnLocomotionState_RegularState_Entry");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnLocomotionState_RegularState_Entry, Context) == 0x000000, "Member 'ABP_Player_RegularMovement_C_OnLocomotionState_RegularState_Entry::Context' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnLocomotionState_RegularState_Entry, Node) == 0x000010, "Member 'ABP_Player_RegularMovement_C_OnLocomotionState_RegularState_Entry::Node' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.OnLocomotionState_RegularState_Exit
// 0x0020 (0x0020 - 0x0000)
struct ABP_Player_RegularMovement_C_OnLocomotionState_RegularState_Exit final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(ABP_Player_RegularMovement_C_OnLocomotionState_RegularState_Exit) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_OnLocomotionState_RegularState_Exit");
static_assert(sizeof(ABP_Player_RegularMovement_C_OnLocomotionState_RegularState_Exit) == 0x000020, "Wrong size on ABP_Player_RegularMovement_C_OnLocomotionState_RegularState_Exit");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnLocomotionState_RegularState_Exit, Context) == 0x000000, "Member 'ABP_Player_RegularMovement_C_OnLocomotionState_RegularState_Exit::Context' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnLocomotionState_RegularState_Exit, Node) == 0x000010, "Member 'ABP_Player_RegularMovement_C_OnLocomotionState_RegularState_Exit::Node' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.OnNode_DefaultIdle_X6SP_Relevant
// 0x0028 (0x0028 - 0x0000)
struct ABP_Player_RegularMovement_C_OnNode_DefaultIdle_X6SP_Relevant final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	bool                                          IdleIsMirrored;                                    // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_OnNode_DefaultIdle_X6SP_Relevant) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_OnNode_DefaultIdle_X6SP_Relevant");
static_assert(sizeof(ABP_Player_RegularMovement_C_OnNode_DefaultIdle_X6SP_Relevant) == 0x000028, "Wrong size on ABP_Player_RegularMovement_C_OnNode_DefaultIdle_X6SP_Relevant");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_DefaultIdle_X6SP_Relevant, Context) == 0x000000, "Member 'ABP_Player_RegularMovement_C_OnNode_DefaultIdle_X6SP_Relevant::Context' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_DefaultIdle_X6SP_Relevant, Node) == 0x000010, "Member 'ABP_Player_RegularMovement_C_OnNode_DefaultIdle_X6SP_Relevant::Node' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_DefaultIdle_X6SP_Relevant, IdleIsMirrored) == 0x000020, "Member 'ABP_Player_RegularMovement_C_OnNode_DefaultIdle_X6SP_Relevant::IdleIsMirrored' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.OnNode_DefaultIdle_X6SP_Update
// 0x0040 (0x0040 - 0x0000)
struct ABP_Player_RegularMovement_C_OnNode_DefaultIdle_X6SP_Update final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	EAnimNodeReferenceConversionResult            CallFunc_ConvertToX6SequencePlayer_Result;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FX6SequencePlayerReference             CallFunc_ConvertToX6SequencePlayer_ReturnValue;    // 0x0028(0x0010)(NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_OnNode_DefaultIdle_X6SP_Update) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_OnNode_DefaultIdle_X6SP_Update");
static_assert(sizeof(ABP_Player_RegularMovement_C_OnNode_DefaultIdle_X6SP_Update) == 0x000040, "Wrong size on ABP_Player_RegularMovement_C_OnNode_DefaultIdle_X6SP_Update");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_DefaultIdle_X6SP_Update, Context) == 0x000000, "Member 'ABP_Player_RegularMovement_C_OnNode_DefaultIdle_X6SP_Update::Context' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_DefaultIdle_X6SP_Update, Node) == 0x000010, "Member 'ABP_Player_RegularMovement_C_OnNode_DefaultIdle_X6SP_Update::Node' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_DefaultIdle_X6SP_Update, CallFunc_ConvertToX6SequencePlayer_Result) == 0x000020, "Member 'ABP_Player_RegularMovement_C_OnNode_DefaultIdle_X6SP_Update::CallFunc_ConvertToX6SequencePlayer_Result' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_DefaultIdle_X6SP_Update, CallFunc_ConvertToX6SequencePlayer_ReturnValue) == 0x000028, "Member 'ABP_Player_RegularMovement_C_OnNode_DefaultIdle_X6SP_Update::CallFunc_ConvertToX6SequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_DefaultIdle_X6SP_Update, K2Node_SwitchEnum_CmpSuccess) == 0x000038, "Member 'ABP_Player_RegularMovement_C_OnNode_DefaultIdle_X6SP_Update::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.OnNode_PivotMachineResult_BecomeRelevant
// 0x0020 (0x0020 - 0x0000)
struct ABP_Player_RegularMovement_C_OnNode_PivotMachineResult_BecomeRelevant final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(ABP_Player_RegularMovement_C_OnNode_PivotMachineResult_BecomeRelevant) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_OnNode_PivotMachineResult_BecomeRelevant");
static_assert(sizeof(ABP_Player_RegularMovement_C_OnNode_PivotMachineResult_BecomeRelevant) == 0x000020, "Wrong size on ABP_Player_RegularMovement_C_OnNode_PivotMachineResult_BecomeRelevant");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_PivotMachineResult_BecomeRelevant, Context) == 0x000000, "Member 'ABP_Player_RegularMovement_C_OnNode_PivotMachineResult_BecomeRelevant::Context' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_PivotMachineResult_BecomeRelevant, Node) == 0x000010, "Member 'ABP_Player_RegularMovement_C_OnNode_PivotMachineResult_BecomeRelevant::Node' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.OnNode_PivotMachineResult_Update
// 0x0038 (0x0038 - 0x0000)
struct ABP_Player_RegularMovement_C_OnNode_PivotMachineResult_Update final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FAnimationStateResultReference         CallFunc_ConvertToAnimationStateResult_AnimationState; // 0x0020(0x0010)(NoDestructor)
	EAnimNodeReferenceConversionResult            CallFunc_ConvertToAnimationStateResult_Result;     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStateBlendingOut_ReturnValue;           // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_OnNode_PivotMachineResult_Update) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_OnNode_PivotMachineResult_Update");
static_assert(sizeof(ABP_Player_RegularMovement_C_OnNode_PivotMachineResult_Update) == 0x000038, "Wrong size on ABP_Player_RegularMovement_C_OnNode_PivotMachineResult_Update");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_PivotMachineResult_Update, Context) == 0x000000, "Member 'ABP_Player_RegularMovement_C_OnNode_PivotMachineResult_Update::Context' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_PivotMachineResult_Update, Node) == 0x000010, "Member 'ABP_Player_RegularMovement_C_OnNode_PivotMachineResult_Update::Node' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_PivotMachineResult_Update, CallFunc_ConvertToAnimationStateResult_AnimationState) == 0x000020, "Member 'ABP_Player_RegularMovement_C_OnNode_PivotMachineResult_Update::CallFunc_ConvertToAnimationStateResult_AnimationState' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_PivotMachineResult_Update, CallFunc_ConvertToAnimationStateResult_Result) == 0x000030, "Member 'ABP_Player_RegularMovement_C_OnNode_PivotMachineResult_Update::CallFunc_ConvertToAnimationStateResult_Result' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_PivotMachineResult_Update, K2Node_SwitchEnum_CmpSuccess) == 0x000031, "Member 'ABP_Player_RegularMovement_C_OnNode_PivotMachineResult_Update::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_PivotMachineResult_Update, CallFunc_IsStateBlendingOut_ReturnValue) == 0x000032, "Member 'ABP_Player_RegularMovement_C_OnNode_PivotMachineResult_Update::CallFunc_IsStateBlendingOut_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_PivotMachineResult_Update, CallFunc_Not_PreBool_ReturnValue) == 0x000033, "Member 'ABP_Player_RegularMovement_C_OnNode_PivotMachineResult_Update::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.OnNode_PivotX6SequencePlayer_Update
// 0x0040 (0x0040 - 0x0000)
struct ABP_Player_RegularMovement_C_OnNode_PivotX6SequencePlayer_Update final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	EAnimNodeReferenceConversionResult            CallFunc_ConvertToX6SequencePlayer_Result;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FX6SequencePlayerReference             CallFunc_ConvertToX6SequencePlayer_ReturnValue;    // 0x0028(0x0010)(NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_OnNode_PivotX6SequencePlayer_Update) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_OnNode_PivotX6SequencePlayer_Update");
static_assert(sizeof(ABP_Player_RegularMovement_C_OnNode_PivotX6SequencePlayer_Update) == 0x000040, "Wrong size on ABP_Player_RegularMovement_C_OnNode_PivotX6SequencePlayer_Update");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_PivotX6SequencePlayer_Update, Context) == 0x000000, "Member 'ABP_Player_RegularMovement_C_OnNode_PivotX6SequencePlayer_Update::Context' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_PivotX6SequencePlayer_Update, Node) == 0x000010, "Member 'ABP_Player_RegularMovement_C_OnNode_PivotX6SequencePlayer_Update::Node' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_PivotX6SequencePlayer_Update, CallFunc_ConvertToX6SequencePlayer_Result) == 0x000020, "Member 'ABP_Player_RegularMovement_C_OnNode_PivotX6SequencePlayer_Update::CallFunc_ConvertToX6SequencePlayer_Result' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_PivotX6SequencePlayer_Update, CallFunc_ConvertToX6SequencePlayer_ReturnValue) == 0x000028, "Member 'ABP_Player_RegularMovement_C_OnNode_PivotX6SequencePlayer_Update::CallFunc_ConvertToX6SequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_PivotX6SequencePlayer_Update, K2Node_SwitchEnum_CmpSuccess) == 0x000038, "Member 'ABP_Player_RegularMovement_C_OnNode_PivotX6SequencePlayer_Update::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.OnNode_StartX6SequencePlayer_Update
// 0x0098 (0x0098 - 0x0000)
struct ABP_Player_RegularMovement_C_OnNode_StartX6SequencePlayer_Update final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	EAnimNodeReferenceConversionResult            CallFunc_ConvertToX6SequencePlayer_Result;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FX6SequencePlayerReference             CallFunc_ConvertToX6SequencePlayer_ReturnValue;    // 0x0028(0x0010)(NoDestructor)
	float                                         CallFunc_GetAccumulatedTime_ReturnValue;           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimTimeRemaining_ReturnValue;         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCachedBlendWeight_ReturnValue;         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<double>                                CallFunc_Map_Keys_Keys;                            // 0x0048(0x0010)(ReferenceParm)
	double                                        CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66[0x2];                                       // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Add_Value_ImplicitCast;               // 0x0068(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Map_Add_Value_ImplicitCast_1;             // 0x0070(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Map_Add_Key_ImplicitCast;                 // 0x0078(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Map_Add_Key_ImplicitCast_1;               // 0x0080(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_OnNode_StartX6SequencePlayer_Update) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_OnNode_StartX6SequencePlayer_Update");
static_assert(sizeof(ABP_Player_RegularMovement_C_OnNode_StartX6SequencePlayer_Update) == 0x000098, "Wrong size on ABP_Player_RegularMovement_C_OnNode_StartX6SequencePlayer_Update");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StartX6SequencePlayer_Update, Context) == 0x000000, "Member 'ABP_Player_RegularMovement_C_OnNode_StartX6SequencePlayer_Update::Context' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StartX6SequencePlayer_Update, Node) == 0x000010, "Member 'ABP_Player_RegularMovement_C_OnNode_StartX6SequencePlayer_Update::Node' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StartX6SequencePlayer_Update, CallFunc_ConvertToX6SequencePlayer_Result) == 0x000020, "Member 'ABP_Player_RegularMovement_C_OnNode_StartX6SequencePlayer_Update::CallFunc_ConvertToX6SequencePlayer_Result' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StartX6SequencePlayer_Update, CallFunc_ConvertToX6SequencePlayer_ReturnValue) == 0x000028, "Member 'ABP_Player_RegularMovement_C_OnNode_StartX6SequencePlayer_Update::CallFunc_ConvertToX6SequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StartX6SequencePlayer_Update, CallFunc_GetAccumulatedTime_ReturnValue) == 0x000038, "Member 'ABP_Player_RegularMovement_C_OnNode_StartX6SequencePlayer_Update::CallFunc_GetAccumulatedTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StartX6SequencePlayer_Update, CallFunc_GetAnimTimeRemaining_ReturnValue) == 0x00003C, "Member 'ABP_Player_RegularMovement_C_OnNode_StartX6SequencePlayer_Update::CallFunc_GetAnimTimeRemaining_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StartX6SequencePlayer_Update, CallFunc_GetCachedBlendWeight_ReturnValue) == 0x000040, "Member 'ABP_Player_RegularMovement_C_OnNode_StartX6SequencePlayer_Update::CallFunc_GetCachedBlendWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StartX6SequencePlayer_Update, K2Node_SwitchEnum_CmpSuccess) == 0x000044, "Member 'ABP_Player_RegularMovement_C_OnNode_StartX6SequencePlayer_Update::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StartX6SequencePlayer_Update, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000045, "Member 'ABP_Player_RegularMovement_C_OnNode_StartX6SequencePlayer_Update::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StartX6SequencePlayer_Update, CallFunc_Map_Keys_Keys) == 0x000048, "Member 'ABP_Player_RegularMovement_C_OnNode_StartX6SequencePlayer_Update::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StartX6SequencePlayer_Update, CallFunc_Array_Get_Item) == 0x000058, "Member 'ABP_Player_RegularMovement_C_OnNode_StartX6SequencePlayer_Update::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StartX6SequencePlayer_Update, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'ABP_Player_RegularMovement_C_OnNode_StartX6SequencePlayer_Update::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StartX6SequencePlayer_Update, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000064, "Member 'ABP_Player_RegularMovement_C_OnNode_StartX6SequencePlayer_Update::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StartX6SequencePlayer_Update, CallFunc_Greater_IntInt_ReturnValue) == 0x000065, "Member 'ABP_Player_RegularMovement_C_OnNode_StartX6SequencePlayer_Update::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StartX6SequencePlayer_Update, CallFunc_Map_Add_Value_ImplicitCast) == 0x000068, "Member 'ABP_Player_RegularMovement_C_OnNode_StartX6SequencePlayer_Update::CallFunc_Map_Add_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StartX6SequencePlayer_Update, CallFunc_Map_Add_Value_ImplicitCast_1) == 0x000070, "Member 'ABP_Player_RegularMovement_C_OnNode_StartX6SequencePlayer_Update::CallFunc_Map_Add_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StartX6SequencePlayer_Update, CallFunc_Map_Add_Key_ImplicitCast) == 0x000078, "Member 'ABP_Player_RegularMovement_C_OnNode_StartX6SequencePlayer_Update::CallFunc_Map_Add_Key_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StartX6SequencePlayer_Update, CallFunc_Map_Add_Key_ImplicitCast_1) == 0x000080, "Member 'ABP_Player_RegularMovement_C_OnNode_StartX6SequencePlayer_Update::CallFunc_Map_Add_Key_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StartX6SequencePlayer_Update, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast) == 0x000088, "Member 'ABP_Player_RegularMovement_C_OnNode_StartX6SequencePlayer_Update::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StartX6SequencePlayer_Update, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000090, "Member 'ABP_Player_RegularMovement_C_OnNode_StartX6SequencePlayer_Update::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.OnNode_StatePivot_BecomeRelevant
// 0x0020 (0x0020 - 0x0000)
struct ABP_Player_RegularMovement_C_OnNode_StatePivot_BecomeRelevant final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(ABP_Player_RegularMovement_C_OnNode_StatePivot_BecomeRelevant) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_OnNode_StatePivot_BecomeRelevant");
static_assert(sizeof(ABP_Player_RegularMovement_C_OnNode_StatePivot_BecomeRelevant) == 0x000020, "Wrong size on ABP_Player_RegularMovement_C_OnNode_StatePivot_BecomeRelevant");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StatePivot_BecomeRelevant, Context) == 0x000000, "Member 'ABP_Player_RegularMovement_C_OnNode_StatePivot_BecomeRelevant::Context' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StatePivot_BecomeRelevant, Node) == 0x000010, "Member 'ABP_Player_RegularMovement_C_OnNode_StatePivot_BecomeRelevant::Node' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.OnNode_StatePivot_Update
// 0x0048 (0x0048 - 0x0000)
struct ABP_Player_RegularMovement_C_OnNode_StatePivot_Update final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FAnimationStateResultReference         CallFunc_ConvertToAnimationStateResult_AnimationState; // 0x0020(0x0010)(NoDestructor)
	EAnimNodeReferenceConversionResult            CallFunc_ConvertToAnimationStateResult_Result;     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDeltaTime_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue; // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_OnPivotUpdate_DeltaTime_ImplicitCast;     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_OnNode_StatePivot_Update) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_OnNode_StatePivot_Update");
static_assert(sizeof(ABP_Player_RegularMovement_C_OnNode_StatePivot_Update) == 0x000048, "Wrong size on ABP_Player_RegularMovement_C_OnNode_StatePivot_Update");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StatePivot_Update, Context) == 0x000000, "Member 'ABP_Player_RegularMovement_C_OnNode_StatePivot_Update::Context' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StatePivot_Update, Node) == 0x000010, "Member 'ABP_Player_RegularMovement_C_OnNode_StatePivot_Update::Node' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StatePivot_Update, CallFunc_ConvertToAnimationStateResult_AnimationState) == 0x000020, "Member 'ABP_Player_RegularMovement_C_OnNode_StatePivot_Update::CallFunc_ConvertToAnimationStateResult_AnimationState' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StatePivot_Update, CallFunc_ConvertToAnimationStateResult_Result) == 0x000030, "Member 'ABP_Player_RegularMovement_C_OnNode_StatePivot_Update::CallFunc_ConvertToAnimationStateResult_Result' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StatePivot_Update, CallFunc_GetDeltaTime_ReturnValue) == 0x000034, "Member 'ABP_Player_RegularMovement_C_OnNode_StatePivot_Update::CallFunc_GetDeltaTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StatePivot_Update, K2Node_SwitchEnum_CmpSuccess) == 0x000038, "Member 'ABP_Player_RegularMovement_C_OnNode_StatePivot_Update::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StatePivot_Update, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue) == 0x00003C, "Member 'ABP_Player_RegularMovement_C_OnNode_StatePivot_Update::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StatePivot_Update, CallFunc_OnPivotUpdate_DeltaTime_ImplicitCast) == 0x000040, "Member 'ABP_Player_RegularMovement_C_OnNode_StatePivot_Update::CallFunc_OnPivotUpdate_DeltaTime_ImplicitCast' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.OnNode_StateStart_BecomeRelevant
// 0x0020 (0x0020 - 0x0000)
struct ABP_Player_RegularMovement_C_OnNode_StateStart_BecomeRelevant final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(ABP_Player_RegularMovement_C_OnNode_StateStart_BecomeRelevant) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_OnNode_StateStart_BecomeRelevant");
static_assert(sizeof(ABP_Player_RegularMovement_C_OnNode_StateStart_BecomeRelevant) == 0x000020, "Wrong size on ABP_Player_RegularMovement_C_OnNode_StateStart_BecomeRelevant");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StateStart_BecomeRelevant, Context) == 0x000000, "Member 'ABP_Player_RegularMovement_C_OnNode_StateStart_BecomeRelevant::Context' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StateStart_BecomeRelevant, Node) == 0x000010, "Member 'ABP_Player_RegularMovement_C_OnNode_StateStart_BecomeRelevant::Node' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.OnNode_StateStart_Update
// 0x00D0 (0x00D0 - 0x0000)
struct ABP_Player_RegularMovement_C_OnNode_StateStart_Update final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimationStateResultReference         CallFunc_ConvertToAnimationStateResult_AnimationState; // 0x0028(0x0010)(NoDestructor)
	EAnimNodeReferenceConversionResult            CallFunc_ConvertToAnimationStateResult_Result;     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue; // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDeltaTime_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<double>                                CallFunc_Map_Keys_Keys;                            // 0x0058(0x0010)(ReferenceParm)
	TArray<double>                                CallFunc_Map_Keys_Keys_1;                          // 0x0068(0x0010)(ReferenceParm)
	double                                        CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item_1;                         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Map_Find_Value;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value_1;                         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FloatSpringInterp_ReturnValue;            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FloatSpringInterp_ReturnValue_1;          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_BP_StartState_RelevantAnimTime_CurrentAnimTime_ImplicitCast; // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_BP_StartState_RelevantAnimTime_Remaining_ImplicitCast; // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_OnNode_StateStart_Update) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_OnNode_StateStart_Update");
static_assert(sizeof(ABP_Player_RegularMovement_C_OnNode_StateStart_Update) == 0x0000D0, "Wrong size on ABP_Player_RegularMovement_C_OnNode_StateStart_Update");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StateStart_Update, Context) == 0x000000, "Member 'ABP_Player_RegularMovement_C_OnNode_StateStart_Update::Context' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StateStart_Update, Node) == 0x000010, "Member 'ABP_Player_RegularMovement_C_OnNode_StateStart_Update::Node' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StateStart_Update, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'ABP_Player_RegularMovement_C_OnNode_StateStart_Update::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StateStart_Update, CallFunc_ConvertToAnimationStateResult_AnimationState) == 0x000028, "Member 'ABP_Player_RegularMovement_C_OnNode_StateStart_Update::CallFunc_ConvertToAnimationStateResult_AnimationState' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StateStart_Update, CallFunc_ConvertToAnimationStateResult_Result) == 0x000038, "Member 'ABP_Player_RegularMovement_C_OnNode_StateStart_Update::CallFunc_ConvertToAnimationStateResult_Result' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StateStart_Update, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'ABP_Player_RegularMovement_C_OnNode_StateStart_Update::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StateStart_Update, K2Node_SwitchEnum_CmpSuccess) == 0x000040, "Member 'ABP_Player_RegularMovement_C_OnNode_StateStart_Update::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StateStart_Update, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue) == 0x000044, "Member 'ABP_Player_RegularMovement_C_OnNode_StateStart_Update::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StateStart_Update, CallFunc_GetDeltaTime_ReturnValue) == 0x000048, "Member 'ABP_Player_RegularMovement_C_OnNode_StateStart_Update::CallFunc_GetDeltaTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StateStart_Update, Temp_int_Array_Index_Variable) == 0x00004C, "Member 'ABP_Player_RegularMovement_C_OnNode_StateStart_Update::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StateStart_Update, Temp_int_Array_Index_Variable_1) == 0x000050, "Member 'ABP_Player_RegularMovement_C_OnNode_StateStart_Update::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StateStart_Update, CallFunc_Map_Keys_Keys) == 0x000058, "Member 'ABP_Player_RegularMovement_C_OnNode_StateStart_Update::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StateStart_Update, CallFunc_Map_Keys_Keys_1) == 0x000068, "Member 'ABP_Player_RegularMovement_C_OnNode_StateStart_Update::CallFunc_Map_Keys_Keys_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StateStart_Update, CallFunc_Array_Get_Item) == 0x000078, "Member 'ABP_Player_RegularMovement_C_OnNode_StateStart_Update::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StateStart_Update, CallFunc_Array_Get_Item_1) == 0x000080, "Member 'ABP_Player_RegularMovement_C_OnNode_StateStart_Update::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StateStart_Update, CallFunc_Map_Find_Value) == 0x000088, "Member 'ABP_Player_RegularMovement_C_OnNode_StateStart_Update::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StateStart_Update, CallFunc_Map_Find_ReturnValue) == 0x000090, "Member 'ABP_Player_RegularMovement_C_OnNode_StateStart_Update::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StateStart_Update, CallFunc_Map_Find_Value_1) == 0x000098, "Member 'ABP_Player_RegularMovement_C_OnNode_StateStart_Update::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StateStart_Update, CallFunc_Map_Find_ReturnValue_1) == 0x0000A0, "Member 'ABP_Player_RegularMovement_C_OnNode_StateStart_Update::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StateStart_Update, CallFunc_Array_Length_ReturnValue) == 0x0000A4, "Member 'ABP_Player_RegularMovement_C_OnNode_StateStart_Update::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StateStart_Update, CallFunc_Array_Length_ReturnValue_1) == 0x0000A8, "Member 'ABP_Player_RegularMovement_C_OnNode_StateStart_Update::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StateStart_Update, CallFunc_Less_IntInt_ReturnValue) == 0x0000AC, "Member 'ABP_Player_RegularMovement_C_OnNode_StateStart_Update::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StateStart_Update, CallFunc_FloatSpringInterp_ReturnValue) == 0x0000B0, "Member 'ABP_Player_RegularMovement_C_OnNode_StateStart_Update::CallFunc_FloatSpringInterp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StateStart_Update, CallFunc_FloatSpringInterp_ReturnValue_1) == 0x0000B4, "Member 'ABP_Player_RegularMovement_C_OnNode_StateStart_Update::CallFunc_FloatSpringInterp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StateStart_Update, Temp_int_Loop_Counter_Variable_1) == 0x0000B8, "Member 'ABP_Player_RegularMovement_C_OnNode_StateStart_Update::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StateStart_Update, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000BC, "Member 'ABP_Player_RegularMovement_C_OnNode_StateStart_Update::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StateStart_Update, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000C0, "Member 'ABP_Player_RegularMovement_C_OnNode_StateStart_Update::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StateStart_Update, K2Node_VariableSet_BP_StartState_RelevantAnimTime_CurrentAnimTime_ImplicitCast) == 0x0000C4, "Member 'ABP_Player_RegularMovement_C_OnNode_StateStart_Update::K2Node_VariableSet_BP_StartState_RelevantAnimTime_CurrentAnimTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnNode_StateStart_Update, K2Node_VariableSet_BP_StartState_RelevantAnimTime_Remaining_ImplicitCast) == 0x0000C8, "Member 'ABP_Player_RegularMovement_C_OnNode_StateStart_Update::K2Node_VariableSet_BP_StartState_RelevantAnimTime_Remaining_ImplicitCast' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.OnPivotUpdate
// 0x0088 (0x0088 - 0x0000)
struct ABP_Player_RegularMovement_C_OnPivotUpdate final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_DegCos_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Normal2D_ReturnValue;              // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Normal2D_ReturnValue_1;            // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_1;    // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_BP_CurPivotTime_ImplicitCast;   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_OnPivotUpdate) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_OnPivotUpdate");
static_assert(sizeof(ABP_Player_RegularMovement_C_OnPivotUpdate) == 0x000088, "Wrong size on ABP_Player_RegularMovement_C_OnPivotUpdate");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnPivotUpdate, DeltaTime) == 0x000000, "Member 'ABP_Player_RegularMovement_C_OnPivotUpdate::DeltaTime' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnPivotUpdate, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000008, "Member 'ABP_Player_RegularMovement_C_OnPivotUpdate::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnPivotUpdate, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000009, "Member 'ABP_Player_RegularMovement_C_OnPivotUpdate::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnPivotUpdate, CallFunc_DegCos_ReturnValue) == 0x000010, "Member 'ABP_Player_RegularMovement_C_OnPivotUpdate::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnPivotUpdate, CallFunc_Vector_Normal2D_ReturnValue) == 0x000018, "Member 'ABP_Player_RegularMovement_C_OnPivotUpdate::CallFunc_Vector_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnPivotUpdate, CallFunc_Vector_Normal2D_ReturnValue_1) == 0x000030, "Member 'ABP_Player_RegularMovement_C_OnPivotUpdate::CallFunc_Vector_Normal2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnPivotUpdate, CallFunc_Dot_VectorVector_ReturnValue) == 0x000048, "Member 'ABP_Player_RegularMovement_C_OnPivotUpdate::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnPivotUpdate, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000050, "Member 'ABP_Player_RegularMovement_C_OnPivotUpdate::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnPivotUpdate, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000058, "Member 'ABP_Player_RegularMovement_C_OnPivotUpdate::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnPivotUpdate, CallFunc_BooleanAND_ReturnValue) == 0x000060, "Member 'ABP_Player_RegularMovement_C_OnPivotUpdate::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnPivotUpdate, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000068, "Member 'ABP_Player_RegularMovement_C_OnPivotUpdate::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnPivotUpdate, CallFunc_Greater_DoubleDouble_A_ImplicitCast_1) == 0x000070, "Member 'ABP_Player_RegularMovement_C_OnPivotUpdate::CallFunc_Greater_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnPivotUpdate, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000078, "Member 'ABP_Player_RegularMovement_C_OnPivotUpdate::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnPivotUpdate, K2Node_VariableSet_BP_CurPivotTime_ImplicitCast) == 0x000080, "Member 'ABP_Player_RegularMovement_C_OnPivotUpdate::K2Node_VariableSet_BP_CurPivotTime_ImplicitCast' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.OnRegularMovement_BecomeRelevant
// 0x0020 (0x0020 - 0x0000)
struct ABP_Player_RegularMovement_C_OnRegularMovement_BecomeRelevant final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(ABP_Player_RegularMovement_C_OnRegularMovement_BecomeRelevant) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_OnRegularMovement_BecomeRelevant");
static_assert(sizeof(ABP_Player_RegularMovement_C_OnRegularMovement_BecomeRelevant) == 0x000020, "Wrong size on ABP_Player_RegularMovement_C_OnRegularMovement_BecomeRelevant");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnRegularMovement_BecomeRelevant, Context) == 0x000000, "Member 'ABP_Player_RegularMovement_C_OnRegularMovement_BecomeRelevant::Context' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnRegularMovement_BecomeRelevant, Node) == 0x000010, "Member 'ABP_Player_RegularMovement_C_OnRegularMovement_BecomeRelevant::Node' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.OnSM_StartMachineResult_Exit
// 0x0068 (0x0068 - 0x0000)
struct ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Exit final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetLocomotionStartCurrentTime_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                CallFunc_Map_Keys_Keys;                            // 0x0038(0x0010)(ReferenceParm)
	double                                        CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_VariableSet_BP_StartState_RelevantAnimTime_CurrentAnimTime_ImplicitCast; // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Exit) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Exit");
static_assert(sizeof(ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Exit) == 0x000068, "Wrong size on ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Exit");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Exit, Context) == 0x000000, "Member 'ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Exit::Context' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Exit, Node) == 0x000010, "Member 'ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Exit::Node' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Exit, Temp_int_Array_Index_Variable) == 0x000020, "Member 'ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Exit::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Exit, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Exit::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Exit, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Exit::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Exit, CallFunc_GetLocomotionStartCurrentTime_ReturnValue) == 0x000030, "Member 'ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Exit::CallFunc_GetLocomotionStartCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Exit, CallFunc_Map_Keys_Keys) == 0x000038, "Member 'ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Exit::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Exit, CallFunc_Array_Get_Item) == 0x000048, "Member 'ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Exit::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Exit, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Exit::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Exit, CallFunc_Map_Find_Value) == 0x000058, "Member 'ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Exit::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Exit, CallFunc_Map_Find_ReturnValue) == 0x000060, "Member 'ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Exit::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Exit, CallFunc_Less_IntInt_ReturnValue) == 0x000061, "Member 'ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Exit::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Exit, K2Node_VariableSet_BP_StartState_RelevantAnimTime_CurrentAnimTime_ImplicitCast) == 0x000064, "Member 'ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Exit::K2Node_VariableSet_BP_StartState_RelevantAnimTime_CurrentAnimTime_ImplicitCast' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.OnSM_StartMachineResult_Update
// 0x0038 (0x0038 - 0x0000)
struct ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Update final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FAnimationStateResultReference         CallFunc_ConvertToAnimationStateResult_AnimationState; // 0x0020(0x0010)(NoDestructor)
	EAnimNodeReferenceConversionResult            CallFunc_ConvertToAnimationStateResult_Result;     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStateBlendingOut_ReturnValue;           // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStartEnableRootmotion_EnableStartRootmotion; // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Update) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Update");
static_assert(sizeof(ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Update) == 0x000038, "Wrong size on ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Update");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Update, Context) == 0x000000, "Member 'ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Update::Context' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Update, Node) == 0x000010, "Member 'ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Update::Node' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Update, CallFunc_ConvertToAnimationStateResult_AnimationState) == 0x000020, "Member 'ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Update::CallFunc_ConvertToAnimationStateResult_AnimationState' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Update, CallFunc_ConvertToAnimationStateResult_Result) == 0x000030, "Member 'ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Update::CallFunc_ConvertToAnimationStateResult_Result' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Update, K2Node_SwitchEnum_CmpSuccess) == 0x000031, "Member 'ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Update::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Update, CallFunc_IsStateBlendingOut_ReturnValue) == 0x000032, "Member 'ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Update::CallFunc_IsStateBlendingOut_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Update, CallFunc_Not_PreBool_ReturnValue) == 0x000033, "Member 'ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Update::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Update, CallFunc_IsStartEnableRootmotion_EnableStartRootmotion) == 0x000034, "Member 'ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Update::CallFunc_IsStartEnableRootmotion_EnableStartRootmotion' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Update, CallFunc_BooleanAND_ReturnValue) == 0x000035, "Member 'ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Update::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Update, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000036, "Member 'ABP_Player_RegularMovement_C_OnSM_StartMachineResult_Update::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.OnSM_StartMoving_Relevant
// 0x0048 (0x0048 - 0x0000)
struct ABP_Player_RegularMovement_C_OnSM_StartMoving_Relevant final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FRandomStream                          NewLocalVar;                                       // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor)
	struct FAnimationStateMachineReference        CallFunc_ConvertToAnimationStateMachine_AnimationState; // 0x0028(0x0010)(NoDestructor)
	EAnimNodeReferenceConversionResult            CallFunc_ConvertToAnimationStateMachine_Result;    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetState_ReturnValue;                     // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DeterminTransToRightFoot_bTranstoRight;   // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_OnSM_StartMoving_Relevant) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_OnSM_StartMoving_Relevant");
static_assert(sizeof(ABP_Player_RegularMovement_C_OnSM_StartMoving_Relevant) == 0x000048, "Wrong size on ABP_Player_RegularMovement_C_OnSM_StartMoving_Relevant");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnSM_StartMoving_Relevant, Context) == 0x000000, "Member 'ABP_Player_RegularMovement_C_OnSM_StartMoving_Relevant::Context' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnSM_StartMoving_Relevant, Node) == 0x000010, "Member 'ABP_Player_RegularMovement_C_OnSM_StartMoving_Relevant::Node' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnSM_StartMoving_Relevant, NewLocalVar) == 0x000020, "Member 'ABP_Player_RegularMovement_C_OnSM_StartMoving_Relevant::NewLocalVar' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnSM_StartMoving_Relevant, CallFunc_ConvertToAnimationStateMachine_AnimationState) == 0x000028, "Member 'ABP_Player_RegularMovement_C_OnSM_StartMoving_Relevant::CallFunc_ConvertToAnimationStateMachine_AnimationState' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnSM_StartMoving_Relevant, CallFunc_ConvertToAnimationStateMachine_Result) == 0x000038, "Member 'ABP_Player_RegularMovement_C_OnSM_StartMoving_Relevant::CallFunc_ConvertToAnimationStateMachine_Result' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnSM_StartMoving_Relevant, K2Node_SwitchEnum_CmpSuccess) == 0x000039, "Member 'ABP_Player_RegularMovement_C_OnSM_StartMoving_Relevant::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnSM_StartMoving_Relevant, CallFunc_GetState_ReturnValue) == 0x00003C, "Member 'ABP_Player_RegularMovement_C_OnSM_StartMoving_Relevant::CallFunc_GetState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnSM_StartMoving_Relevant, CallFunc_DeterminTransToRightFoot_bTranstoRight) == 0x000044, "Member 'ABP_Player_RegularMovement_C_OnSM_StartMoving_Relevant::CallFunc_DeterminTransToRightFoot_bTranstoRight' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnSM_StartMoving_Relevant, CallFunc_NotEqual_NameName_ReturnValue) == 0x000045, "Member 'ABP_Player_RegularMovement_C_OnSM_StartMoving_Relevant::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.OnSM_StopMoving_Relevant
// 0x0020 (0x0020 - 0x0000)
struct ABP_Player_RegularMovement_C_OnSM_StopMoving_Relevant final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(ABP_Player_RegularMovement_C_OnSM_StopMoving_Relevant) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_OnSM_StopMoving_Relevant");
static_assert(sizeof(ABP_Player_RegularMovement_C_OnSM_StopMoving_Relevant) == 0x000020, "Wrong size on ABP_Player_RegularMovement_C_OnSM_StopMoving_Relevant");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnSM_StopMoving_Relevant, Context) == 0x000000, "Member 'ABP_Player_RegularMovement_C_OnSM_StopMoving_Relevant::Context' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnSM_StopMoving_Relevant, Node) == 0x000010, "Member 'ABP_Player_RegularMovement_C_OnSM_StopMoving_Relevant::Node' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.OnStateEntry_Idle
// 0x0020 (0x0020 - 0x0000)
struct ABP_Player_RegularMovement_C_OnStateEntry_Idle final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(ABP_Player_RegularMovement_C_OnStateEntry_Idle) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_OnStateEntry_Idle");
static_assert(sizeof(ABP_Player_RegularMovement_C_OnStateEntry_Idle) == 0x000020, "Wrong size on ABP_Player_RegularMovement_C_OnStateEntry_Idle");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnStateEntry_Idle, Context) == 0x000000, "Member 'ABP_Player_RegularMovement_C_OnStateEntry_Idle::Context' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_OnStateEntry_Idle, Node) == 0x000010, "Member 'ABP_Player_RegularMovement_C_OnStateEntry_Idle::Node' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.PolishShuffleStopInfo
// 0x00F8 (0x00F8 - 0x0000)
struct ABP_Player_RegularMovement_C_PolishShuffleStopInfo final
{
public:
	double                                        InputTurnAngle;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Real_ShuffleAnimBlendAlpha;                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Pending_ShuffleAnimBlendAlpha;                     // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Real_ShuffleAnimRet;                               // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Pending_ShuffleAnimRet;                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DirectionNumber;                                   // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Pending_IsR90P;                                    // 0x0024(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Pending_IsR180P;                                   // 0x0025(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Pending_IsF90M;                                    // 0x0026(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Pending_IsF180M;                                   // 0x0027(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Pending_IsF45P;                                    // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Pending_IsF45M;                                    // 0x0029(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Pending_IsFF;                                      // 0x002A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Pending_IsTurnLeft;                                // 0x002B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Pending_IsForward;                                 // 0x002C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Pending_IsTurnRight;                               // 0x002D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RealShuffleStopTurnAngle;                          // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ReferenceParm)
	double                                        CallFunc_ConvertBoolsToFloat_Ret;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<bool>                                  K2Node_MakeArray_Array_1;                          // 0x0050(0x0010)(ReferenceParm)
	double                                        CallFunc_ConvertBoolsToFloat_Ret_1;                // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_SelectRotator_ReturnValue;                // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue_1;     // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_StartTurnAngle_ImplicitCast;    // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_B_ImplicitCast;               // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_A_ImplicitCast;               // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_PolishShuffleStopInfo) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_PolishShuffleStopInfo");
static_assert(sizeof(ABP_Player_RegularMovement_C_PolishShuffleStopInfo) == 0x0000F8, "Wrong size on ABP_Player_RegularMovement_C_PolishShuffleStopInfo");
static_assert(offsetof(ABP_Player_RegularMovement_C_PolishShuffleStopInfo, InputTurnAngle) == 0x000000, "Member 'ABP_Player_RegularMovement_C_PolishShuffleStopInfo::InputTurnAngle' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PolishShuffleStopInfo, Real_ShuffleAnimBlendAlpha) == 0x000008, "Member 'ABP_Player_RegularMovement_C_PolishShuffleStopInfo::Real_ShuffleAnimBlendAlpha' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PolishShuffleStopInfo, Pending_ShuffleAnimBlendAlpha) == 0x00000C, "Member 'ABP_Player_RegularMovement_C_PolishShuffleStopInfo::Pending_ShuffleAnimBlendAlpha' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PolishShuffleStopInfo, Real_ShuffleAnimRet) == 0x000010, "Member 'ABP_Player_RegularMovement_C_PolishShuffleStopInfo::Real_ShuffleAnimRet' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PolishShuffleStopInfo, Pending_ShuffleAnimRet) == 0x000018, "Member 'ABP_Player_RegularMovement_C_PolishShuffleStopInfo::Pending_ShuffleAnimRet' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PolishShuffleStopInfo, DirectionNumber) == 0x000020, "Member 'ABP_Player_RegularMovement_C_PolishShuffleStopInfo::DirectionNumber' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PolishShuffleStopInfo, Pending_IsR90P) == 0x000024, "Member 'ABP_Player_RegularMovement_C_PolishShuffleStopInfo::Pending_IsR90P' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PolishShuffleStopInfo, Pending_IsR180P) == 0x000025, "Member 'ABP_Player_RegularMovement_C_PolishShuffleStopInfo::Pending_IsR180P' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PolishShuffleStopInfo, Pending_IsF90M) == 0x000026, "Member 'ABP_Player_RegularMovement_C_PolishShuffleStopInfo::Pending_IsF90M' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PolishShuffleStopInfo, Pending_IsF180M) == 0x000027, "Member 'ABP_Player_RegularMovement_C_PolishShuffleStopInfo::Pending_IsF180M' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PolishShuffleStopInfo, Pending_IsF45P) == 0x000028, "Member 'ABP_Player_RegularMovement_C_PolishShuffleStopInfo::Pending_IsF45P' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PolishShuffleStopInfo, Pending_IsF45M) == 0x000029, "Member 'ABP_Player_RegularMovement_C_PolishShuffleStopInfo::Pending_IsF45M' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PolishShuffleStopInfo, Pending_IsFF) == 0x00002A, "Member 'ABP_Player_RegularMovement_C_PolishShuffleStopInfo::Pending_IsFF' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PolishShuffleStopInfo, Pending_IsTurnLeft) == 0x00002B, "Member 'ABP_Player_RegularMovement_C_PolishShuffleStopInfo::Pending_IsTurnLeft' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PolishShuffleStopInfo, Pending_IsForward) == 0x00002C, "Member 'ABP_Player_RegularMovement_C_PolishShuffleStopInfo::Pending_IsForward' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PolishShuffleStopInfo, Pending_IsTurnRight) == 0x00002D, "Member 'ABP_Player_RegularMovement_C_PolishShuffleStopInfo::Pending_IsTurnRight' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PolishShuffleStopInfo, RealShuffleStopTurnAngle) == 0x000030, "Member 'ABP_Player_RegularMovement_C_PolishShuffleStopInfo::RealShuffleStopTurnAngle' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PolishShuffleStopInfo, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000034, "Member 'ABP_Player_RegularMovement_C_PolishShuffleStopInfo::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PolishShuffleStopInfo, K2Node_MakeArray_Array) == 0x000038, "Member 'ABP_Player_RegularMovement_C_PolishShuffleStopInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PolishShuffleStopInfo, CallFunc_ConvertBoolsToFloat_Ret) == 0x000048, "Member 'ABP_Player_RegularMovement_C_PolishShuffleStopInfo::CallFunc_ConvertBoolsToFloat_Ret' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PolishShuffleStopInfo, K2Node_MakeArray_Array_1) == 0x000050, "Member 'ABP_Player_RegularMovement_C_PolishShuffleStopInfo::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PolishShuffleStopInfo, CallFunc_ConvertBoolsToFloat_Ret_1) == 0x000060, "Member 'ABP_Player_RegularMovement_C_PolishShuffleStopInfo::CallFunc_ConvertBoolsToFloat_Ret_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PolishShuffleStopInfo, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000068, "Member 'ABP_Player_RegularMovement_C_PolishShuffleStopInfo::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PolishShuffleStopInfo, CallFunc_SelectRotator_ReturnValue) == 0x000080, "Member 'ABP_Player_RegularMovement_C_PolishShuffleStopInfo::CallFunc_SelectRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PolishShuffleStopInfo, CallFunc_SelectFloat_ReturnValue) == 0x000098, "Member 'ABP_Player_RegularMovement_C_PolishShuffleStopInfo::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PolishShuffleStopInfo, CallFunc_MakeRotator_ReturnValue) == 0x0000A0, "Member 'ABP_Player_RegularMovement_C_PolishShuffleStopInfo::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PolishShuffleStopInfo, CallFunc_NormalizedDeltaRotator_ReturnValue_1) == 0x0000B8, "Member 'ABP_Player_RegularMovement_C_PolishShuffleStopInfo::CallFunc_NormalizedDeltaRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PolishShuffleStopInfo, CallFunc_BreakRotator_Roll) == 0x0000D0, "Member 'ABP_Player_RegularMovement_C_PolishShuffleStopInfo::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PolishShuffleStopInfo, CallFunc_BreakRotator_Pitch) == 0x0000D4, "Member 'ABP_Player_RegularMovement_C_PolishShuffleStopInfo::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PolishShuffleStopInfo, CallFunc_BreakRotator_Yaw) == 0x0000D8, "Member 'ABP_Player_RegularMovement_C_PolishShuffleStopInfo::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PolishShuffleStopInfo, K2Node_VariableSet_StartTurnAngle_ImplicitCast) == 0x0000DC, "Member 'ABP_Player_RegularMovement_C_PolishShuffleStopInfo::K2Node_VariableSet_StartTurnAngle_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PolishShuffleStopInfo, CallFunc_SelectFloat_B_ImplicitCast) == 0x0000E0, "Member 'ABP_Player_RegularMovement_C_PolishShuffleStopInfo::CallFunc_SelectFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PolishShuffleStopInfo, CallFunc_SelectFloat_A_ImplicitCast) == 0x0000E8, "Member 'ABP_Player_RegularMovement_C_PolishShuffleStopInfo::CallFunc_SelectFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PolishShuffleStopInfo, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0000F0, "Member 'ABP_Player_RegularMovement_C_PolishShuffleStopInfo::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.PrepareComponents
// 0x0080 (0x0080 - 0x0000)
struct ABP_Player_RegularMovement_C_PrepareComponents final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MainCharacterInAirMovementComp_C*   CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerMantleComponent_C*            CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerAnimStatesComponent_C*        CallFunc_GetComponentByClass_ReturnValue_2;        // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UX6RMWalkingComponent*                  CallFunc_GetComponentByClass_ReturnValue_3;        // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerRegularMovementCompV3_C*      CallFunc_GetComponentByClass_ReturnValue_4;        // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetComponentByClass_ReturnValue_5;        // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerInAirMoveableComponent_C*     CallFunc_GetComponentByClass_ReturnValue_6;        // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetComponentByClass_ReturnValue_7;        // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerMoveableComponent_C*          CallFunc_GetComponentByClass_ReturnValue_8;        // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_PrepareComponents) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_PrepareComponents");
static_assert(sizeof(ABP_Player_RegularMovement_C_PrepareComponents) == 0x000080, "Wrong size on ABP_Player_RegularMovement_C_PrepareComponents");
static_assert(offsetof(ABP_Player_RegularMovement_C_PrepareComponents, ReturnValue) == 0x000000, "Member 'ABP_Player_RegularMovement_C_PrepareComponents::ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PrepareComponents, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'ABP_Player_RegularMovement_C_PrepareComponents::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PrepareComponents, CallFunc_IsValid_ReturnValue_1) == 0x000002, "Member 'ABP_Player_RegularMovement_C_PrepareComponents::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PrepareComponents, CallFunc_IsValid_ReturnValue_2) == 0x000003, "Member 'ABP_Player_RegularMovement_C_PrepareComponents::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PrepareComponents, CallFunc_IsValid_ReturnValue_3) == 0x000004, "Member 'ABP_Player_RegularMovement_C_PrepareComponents::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PrepareComponents, CallFunc_IsValid_ReturnValue_4) == 0x000005, "Member 'ABP_Player_RegularMovement_C_PrepareComponents::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PrepareComponents, CallFunc_IsValid_ReturnValue_5) == 0x000006, "Member 'ABP_Player_RegularMovement_C_PrepareComponents::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PrepareComponents, CallFunc_IsValid_ReturnValue_6) == 0x000007, "Member 'ABP_Player_RegularMovement_C_PrepareComponents::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PrepareComponents, CallFunc_IsValid_ReturnValue_7) == 0x000008, "Member 'ABP_Player_RegularMovement_C_PrepareComponents::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PrepareComponents, CallFunc_IsValid_ReturnValue_8) == 0x000009, "Member 'ABP_Player_RegularMovement_C_PrepareComponents::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PrepareComponents, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000010, "Member 'ABP_Player_RegularMovement_C_PrepareComponents::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PrepareComponents, CallFunc_BooleanAND_ReturnValue) == 0x000018, "Member 'ABP_Player_RegularMovement_C_PrepareComponents::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PrepareComponents, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'ABP_Player_RegularMovement_C_PrepareComponents::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PrepareComponents, CallFunc_BooleanAND_ReturnValue_1) == 0x000028, "Member 'ABP_Player_RegularMovement_C_PrepareComponents::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PrepareComponents, CallFunc_BooleanAND_ReturnValue_2) == 0x000029, "Member 'ABP_Player_RegularMovement_C_PrepareComponents::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PrepareComponents, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000030, "Member 'ABP_Player_RegularMovement_C_PrepareComponents::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PrepareComponents, CallFunc_BooleanAND_ReturnValue_3) == 0x000038, "Member 'ABP_Player_RegularMovement_C_PrepareComponents::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PrepareComponents, CallFunc_BooleanAND_ReturnValue_4) == 0x000039, "Member 'ABP_Player_RegularMovement_C_PrepareComponents::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PrepareComponents, CallFunc_IsValid_ReturnValue_9) == 0x00003A, "Member 'ABP_Player_RegularMovement_C_PrepareComponents::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PrepareComponents, CallFunc_BooleanAND_ReturnValue_5) == 0x00003B, "Member 'ABP_Player_RegularMovement_C_PrepareComponents::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PrepareComponents, CallFunc_BooleanAND_ReturnValue_6) == 0x00003C, "Member 'ABP_Player_RegularMovement_C_PrepareComponents::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PrepareComponents, CallFunc_GetComponentByClass_ReturnValue_2) == 0x000040, "Member 'ABP_Player_RegularMovement_C_PrepareComponents::CallFunc_GetComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PrepareComponents, CallFunc_BooleanAND_ReturnValue_7) == 0x000048, "Member 'ABP_Player_RegularMovement_C_PrepareComponents::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PrepareComponents, CallFunc_GetComponentByClass_ReturnValue_3) == 0x000050, "Member 'ABP_Player_RegularMovement_C_PrepareComponents::CallFunc_GetComponentByClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PrepareComponents, CallFunc_GetComponentByClass_ReturnValue_4) == 0x000058, "Member 'ABP_Player_RegularMovement_C_PrepareComponents::CallFunc_GetComponentByClass_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PrepareComponents, CallFunc_GetComponentByClass_ReturnValue_5) == 0x000060, "Member 'ABP_Player_RegularMovement_C_PrepareComponents::CallFunc_GetComponentByClass_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PrepareComponents, CallFunc_GetComponentByClass_ReturnValue_6) == 0x000068, "Member 'ABP_Player_RegularMovement_C_PrepareComponents::CallFunc_GetComponentByClass_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PrepareComponents, CallFunc_GetComponentByClass_ReturnValue_7) == 0x000070, "Member 'ABP_Player_RegularMovement_C_PrepareComponents::CallFunc_GetComponentByClass_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_PrepareComponents, CallFunc_GetComponentByClass_ReturnValue_8) == 0x000078, "Member 'ABP_Player_RegularMovement_C_PrepareComponents::CallFunc_GetComponentByClass_ReturnValue_8' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.SetClothStylizedAnimations
// 0x04B0 (0x04B0 - 0x0000)
struct ABP_Player_RegularMovement_C_SetClothStylizedAnimations final
{
public:
	struct FAnimationStylizedCloth                DefaultClothStylizedAnimSet;                       // 0x0000(0x00C8)(Edit, BlueprintVisible)
	int32                                         CurrentDressID;                                    // 0x00C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimationStylizedCloth                ClothStylizedAnimSet;                              // 0x00D0(0x00C8)(Edit, BlueprintVisible)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x3];                                      // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x01A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x01C0(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_BP_GetDefaultClothesList_DefaultClothesList; // 0x01D0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimationStylizedCloth                CallFunc_GetDataTableRowFromName_OutRow;           // 0x01E8(0x00C8)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_32ByteByte_ReturnValue;        // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B2[0x2];                                      // 0x02B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue;               // 0x02B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_SuitDisplayComponent_C*             CallFunc_GetComponentByClass_ReturnValue;          // 0x02C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CE[0x2];                                      // 0x02CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D5[0x3];                                      // 0x02D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_Map_Find_Value;                           // 0x02D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimationStylizedCloth                CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x02E8(0x00C8)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x03B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B2[0x6];                                      // 0x03B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          CallFunc_GetSkeletalMeshAsset_ReturnValue;         // 0x03B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAssetUserData*                         CallFunc_GetAssetUserDataOfClass_ReturnValue;      // 0x03C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C9[0x7];                                      // 0x03C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClothesTypeData_C*                     K2Node_DynamicCast_AsClothes_Type_Data;            // 0x03D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x03D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DA[0x6];                                      // 0x03DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimationStylizedCloth                CallFunc_GetDataTableRowFromName_OutRow_2;         // 0x03E0(0x00C8)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_2;    // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A9[0x3];                                      // 0x04A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BP_GetCurrentDressID_ID;                  // 0x04AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_SetClothStylizedAnimations) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_SetClothStylizedAnimations");
static_assert(sizeof(ABP_Player_RegularMovement_C_SetClothStylizedAnimations) == 0x0004B0, "Wrong size on ABP_Player_RegularMovement_C_SetClothStylizedAnimations");
static_assert(offsetof(ABP_Player_RegularMovement_C_SetClothStylizedAnimations, DefaultClothStylizedAnimSet) == 0x000000, "Member 'ABP_Player_RegularMovement_C_SetClothStylizedAnimations::DefaultClothStylizedAnimSet' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_SetClothStylizedAnimations, CurrentDressID) == 0x0000C8, "Member 'ABP_Player_RegularMovement_C_SetClothStylizedAnimations::CurrentDressID' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_SetClothStylizedAnimations, ClothStylizedAnimSet) == 0x0000D0, "Member 'ABP_Player_RegularMovement_C_SetClothStylizedAnimations::ClothStylizedAnimSet' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_SetClothStylizedAnimations, Temp_bool_True_if_break_was_hit_Variable) == 0x000198, "Member 'ABP_Player_RegularMovement_C_SetClothStylizedAnimations::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_SetClothStylizedAnimations, Temp_int_Array_Index_Variable) == 0x00019C, "Member 'ABP_Player_RegularMovement_C_SetClothStylizedAnimations::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_SetClothStylizedAnimations, CallFunc_Not_PreBool_ReturnValue) == 0x0001A0, "Member 'ABP_Player_RegularMovement_C_SetClothStylizedAnimations::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_SetClothStylizedAnimations, CallFunc_Conv_IntToString_ReturnValue) == 0x0001A8, "Member 'ABP_Player_RegularMovement_C_SetClothStylizedAnimations::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_SetClothStylizedAnimations, CallFunc_Conv_StringToName_ReturnValue) == 0x0001B8, "Member 'ABP_Player_RegularMovement_C_SetClothStylizedAnimations::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_SetClothStylizedAnimations, Temp_string_Variable) == 0x0001C0, "Member 'ABP_Player_RegularMovement_C_SetClothStylizedAnimations::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_SetClothStylizedAnimations, CallFunc_BP_GetDefaultClothesList_DefaultClothesList) == 0x0001D0, "Member 'ABP_Player_RegularMovement_C_SetClothStylizedAnimations::CallFunc_BP_GetDefaultClothesList_DefaultClothesList' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_SetClothStylizedAnimations, CallFunc_Array_Get_Item) == 0x0001E0, "Member 'ABP_Player_RegularMovement_C_SetClothStylizedAnimations::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_SetClothStylizedAnimations, CallFunc_GetDataTableRowFromName_OutRow) == 0x0001E8, "Member 'ABP_Player_RegularMovement_C_SetClothStylizedAnimations::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_SetClothStylizedAnimations, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0002B0, "Member 'ABP_Player_RegularMovement_C_SetClothStylizedAnimations::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_SetClothStylizedAnimations, CallFunc_EqualEqual_32ByteByte_ReturnValue) == 0x0002B1, "Member 'ABP_Player_RegularMovement_C_SetClothStylizedAnimations::CallFunc_EqualEqual_32ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_SetClothStylizedAnimations, CallFunc_Array_Length_ReturnValue) == 0x0002B4, "Member 'ABP_Player_RegularMovement_C_SetClothStylizedAnimations::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_SetClothStylizedAnimations, CallFunc_GetOwningActor_ReturnValue) == 0x0002B8, "Member 'ABP_Player_RegularMovement_C_SetClothStylizedAnimations::CallFunc_GetOwningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_SetClothStylizedAnimations, CallFunc_GetComponentByClass_ReturnValue) == 0x0002C0, "Member 'ABP_Player_RegularMovement_C_SetClothStylizedAnimations::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_SetClothStylizedAnimations, Temp_int_Loop_Counter_Variable) == 0x0002C8, "Member 'ABP_Player_RegularMovement_C_SetClothStylizedAnimations::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_SetClothStylizedAnimations, CallFunc_IsValid_ReturnValue) == 0x0002CC, "Member 'ABP_Player_RegularMovement_C_SetClothStylizedAnimations::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_SetClothStylizedAnimations, CallFunc_Less_IntInt_ReturnValue) == 0x0002CD, "Member 'ABP_Player_RegularMovement_C_SetClothStylizedAnimations::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_SetClothStylizedAnimations, CallFunc_Add_IntInt_ReturnValue) == 0x0002D0, "Member 'ABP_Player_RegularMovement_C_SetClothStylizedAnimations::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_SetClothStylizedAnimations, CallFunc_BooleanAND_ReturnValue) == 0x0002D4, "Member 'ABP_Player_RegularMovement_C_SetClothStylizedAnimations::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_SetClothStylizedAnimations, CallFunc_Map_Find_Value) == 0x0002D8, "Member 'ABP_Player_RegularMovement_C_SetClothStylizedAnimations::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_SetClothStylizedAnimations, CallFunc_Map_Find_ReturnValue) == 0x0002E0, "Member 'ABP_Player_RegularMovement_C_SetClothStylizedAnimations::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_SetClothStylizedAnimations, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x0002E8, "Member 'ABP_Player_RegularMovement_C_SetClothStylizedAnimations::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_SetClothStylizedAnimations, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0003B0, "Member 'ABP_Player_RegularMovement_C_SetClothStylizedAnimations::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_SetClothStylizedAnimations, CallFunc_BooleanAND_ReturnValue_1) == 0x0003B1, "Member 'ABP_Player_RegularMovement_C_SetClothStylizedAnimations::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_SetClothStylizedAnimations, CallFunc_GetSkeletalMeshAsset_ReturnValue) == 0x0003B8, "Member 'ABP_Player_RegularMovement_C_SetClothStylizedAnimations::CallFunc_GetSkeletalMeshAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_SetClothStylizedAnimations, CallFunc_GetAssetUserDataOfClass_ReturnValue) == 0x0003C0, "Member 'ABP_Player_RegularMovement_C_SetClothStylizedAnimations::CallFunc_GetAssetUserDataOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_SetClothStylizedAnimations, CallFunc_IsValid_ReturnValue_1) == 0x0003C8, "Member 'ABP_Player_RegularMovement_C_SetClothStylizedAnimations::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_SetClothStylizedAnimations, K2Node_DynamicCast_AsClothes_Type_Data) == 0x0003D0, "Member 'ABP_Player_RegularMovement_C_SetClothStylizedAnimations::K2Node_DynamicCast_AsClothes_Type_Data' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_SetClothStylizedAnimations, K2Node_DynamicCast_bSuccess) == 0x0003D8, "Member 'ABP_Player_RegularMovement_C_SetClothStylizedAnimations::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_SetClothStylizedAnimations, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0003D9, "Member 'ABP_Player_RegularMovement_C_SetClothStylizedAnimations::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_SetClothStylizedAnimations, CallFunc_GetDataTableRowFromName_OutRow_2) == 0x0003E0, "Member 'ABP_Player_RegularMovement_C_SetClothStylizedAnimations::CallFunc_GetDataTableRowFromName_OutRow_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_SetClothStylizedAnimations, CallFunc_GetDataTableRowFromName_ReturnValue_2) == 0x0004A8, "Member 'ABP_Player_RegularMovement_C_SetClothStylizedAnimations::CallFunc_GetDataTableRowFromName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_SetClothStylizedAnimations, CallFunc_BP_GetCurrentDressID_ID) == 0x0004AC, "Member 'ABP_Player_RegularMovement_C_SetClothStylizedAnimations::CallFunc_BP_GetCurrentDressID_ID' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.StartProcess
// 0x0038 (0x0038 - 0x0000)
struct ABP_Player_RegularMovement_C_StartProcess final
{
public:
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_BP_StartRotator_ImplicitCast;   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_StartProcess) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_StartProcess");
static_assert(sizeof(ABP_Player_RegularMovement_C_StartProcess) == 0x000038, "Wrong size on ABP_Player_RegularMovement_C_StartProcess");
static_assert(offsetof(ABP_Player_RegularMovement_C_StartProcess, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000000, "Member 'ABP_Player_RegularMovement_C_StartProcess::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_StartProcess, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000008, "Member 'ABP_Player_RegularMovement_C_StartProcess::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_StartProcess, CallFunc_BreakRotator_Roll) == 0x000020, "Member 'ABP_Player_RegularMovement_C_StartProcess::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_StartProcess, CallFunc_BreakRotator_Pitch) == 0x000024, "Member 'ABP_Player_RegularMovement_C_StartProcess::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_StartProcess, CallFunc_BreakRotator_Yaw) == 0x000028, "Member 'ABP_Player_RegularMovement_C_StartProcess::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_StartProcess, K2Node_VariableSet_BP_StartRotator_ImplicitCast) == 0x000030, "Member 'ABP_Player_RegularMovement_C_StartProcess::K2Node_VariableSet_BP_StartRotator_ImplicitCast' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.StopProcess
// 0x0001 (0x0001 - 0x0000)
struct ABP_Player_RegularMovement_C_StopProcess final
{
public:
	bool                                          CallFunc_BP_IsSkipStopStage_SkipStopStage;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_StopProcess) == 0x000001, "Wrong alignment on ABP_Player_RegularMovement_C_StopProcess");
static_assert(sizeof(ABP_Player_RegularMovement_C_StopProcess) == 0x000001, "Wrong size on ABP_Player_RegularMovement_C_StopProcess");
static_assert(offsetof(ABP_Player_RegularMovement_C_StopProcess, CallFunc_BP_IsSkipStopStage_SkipStopStage) == 0x000000, "Member 'ABP_Player_RegularMovement_C_StopProcess::CallFunc_BP_IsSkipStopStage_SkipStopStage' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.UpdateAimingInfo
// 0x0038 (0x0038 - 0x0000)
struct ABP_Player_RegularMovement_C_UpdateAimingInfo final
{
public:
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Value_ImplicitCast;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_A_ImplicitCast;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_B_ImplicitCast;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_UpdateAimingInfo) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_UpdateAimingInfo");
static_assert(sizeof(ABP_Player_RegularMovement_C_UpdateAimingInfo) == 0x000038, "Wrong size on ABP_Player_RegularMovement_C_UpdateAimingInfo");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateAimingInfo, CallFunc_SafeDivide_ReturnValue) == 0x000000, "Member 'ABP_Player_RegularMovement_C_UpdateAimingInfo::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateAimingInfo, CallFunc_BooleanAND_ReturnValue) == 0x000008, "Member 'ABP_Player_RegularMovement_C_UpdateAimingInfo::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateAimingInfo, CallFunc_FClamp_ReturnValue) == 0x000010, "Member 'ABP_Player_RegularMovement_C_UpdateAimingInfo::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateAimingInfo, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'ABP_Player_RegularMovement_C_UpdateAimingInfo::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateAimingInfo, CallFunc_FClamp_Value_ImplicitCast) == 0x000020, "Member 'ABP_Player_RegularMovement_C_UpdateAimingInfo::CallFunc_FClamp_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateAimingInfo, CallFunc_SafeDivide_A_ImplicitCast) == 0x000028, "Member 'ABP_Player_RegularMovement_C_UpdateAimingInfo::CallFunc_SafeDivide_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateAimingInfo, CallFunc_SafeDivide_B_ImplicitCast) == 0x000030, "Member 'ABP_Player_RegularMovement_C_UpdateAimingInfo::CallFunc_SafeDivide_B_ImplicitCast' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.UpdateAnimStateFastPath
// 0x0020 (0x0020 - 0x0000)
struct ABP_Player_RegularMovement_C_UpdateAnimStateFastPath final
{
public:
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeToClosestMarker_OutMarkerTime;     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetTimeToClosestMarker_ReturnValue;       // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCurrentContextualAnimiationPlaying_ReturnValue; // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeToClosestMarker_OutMarkerTime_1;   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetTimeToClosestMarker_ReturnValue_1;     // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_UpdateAnimStateFastPath) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_UpdateAnimStateFastPath");
static_assert(sizeof(ABP_Player_RegularMovement_C_UpdateAnimStateFastPath) == 0x000020, "Wrong size on ABP_Player_RegularMovement_C_UpdateAnimStateFastPath");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateAnimStateFastPath, CallFunc_GetAnimInstance_ReturnValue) == 0x000000, "Member 'ABP_Player_RegularMovement_C_UpdateAnimStateFastPath::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateAnimStateFastPath, CallFunc_GetTimeToClosestMarker_OutMarkerTime) == 0x000008, "Member 'ABP_Player_RegularMovement_C_UpdateAnimStateFastPath::CallFunc_GetTimeToClosestMarker_OutMarkerTime' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateAnimStateFastPath, CallFunc_GetTimeToClosestMarker_ReturnValue) == 0x00000C, "Member 'ABP_Player_RegularMovement_C_UpdateAnimStateFastPath::CallFunc_GetTimeToClosestMarker_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateAnimStateFastPath, CallFunc_IsCurrentContextualAnimiationPlaying_ReturnValue) == 0x00000D, "Member 'ABP_Player_RegularMovement_C_UpdateAnimStateFastPath::CallFunc_IsCurrentContextualAnimiationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateAnimStateFastPath, CallFunc_Not_PreBool_ReturnValue) == 0x00000E, "Member 'ABP_Player_RegularMovement_C_UpdateAnimStateFastPath::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateAnimStateFastPath, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000F, "Member 'ABP_Player_RegularMovement_C_UpdateAnimStateFastPath::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateAnimStateFastPath, CallFunc_GetTimeToClosestMarker_OutMarkerTime_1) == 0x000010, "Member 'ABP_Player_RegularMovement_C_UpdateAnimStateFastPath::CallFunc_GetTimeToClosestMarker_OutMarkerTime_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateAnimStateFastPath, CallFunc_GetTimeToClosestMarker_ReturnValue_1) == 0x000014, "Member 'ABP_Player_RegularMovement_C_UpdateAnimStateFastPath::CallFunc_GetTimeToClosestMarker_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateAnimStateFastPath, CallFunc_BooleanAND_ReturnValue) == 0x000015, "Member 'ABP_Player_RegularMovement_C_UpdateAnimStateFastPath::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateAnimStateFastPath, CallFunc_BooleanAND_ReturnValue_1) == 0x000016, "Member 'ABP_Player_RegularMovement_C_UpdateAnimStateFastPath::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateAnimStateFastPath, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000017, "Member 'ABP_Player_RegularMovement_C_UpdateAnimStateFastPath::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateAnimStateFastPath, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000018, "Member 'ABP_Player_RegularMovement_C_UpdateAnimStateFastPath::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateAnimStateFastPath, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000019, "Member 'ABP_Player_RegularMovement_C_UpdateAnimStateFastPath::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateAnimStateFastPath, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x00001A, "Member 'ABP_Player_RegularMovement_C_UpdateAnimStateFastPath::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateAnimStateFastPath, CallFunc_BooleanOR_ReturnValue) == 0x00001B, "Member 'ABP_Player_RegularMovement_C_UpdateAnimStateFastPath::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateAnimStateFastPath, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x00001C, "Member 'ABP_Player_RegularMovement_C_UpdateAnimStateFastPath::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.UpdateContextual
// 0x0038 (0x0038 - 0x0000)
struct ABP_Player_RegularMovement_C_UpdateContextual final
{
public:
	double                                        BP_Local_TargetContexutalAlpha;                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsForceStopStage_ForceStopFlag;        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_BP_ShuffleStopTurnAngle_ImplicitCast; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_UpdateContextual) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_UpdateContextual");
static_assert(sizeof(ABP_Player_RegularMovement_C_UpdateContextual) == 0x000038, "Wrong size on ABP_Player_RegularMovement_C_UpdateContextual");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateContextual, BP_Local_TargetContexutalAlpha) == 0x000000, "Member 'ABP_Player_RegularMovement_C_UpdateContextual::BP_Local_TargetContexutalAlpha' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateContextual, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'ABP_Player_RegularMovement_C_UpdateContextual::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateContextual, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'ABP_Player_RegularMovement_C_UpdateContextual::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateContextual, CallFunc_BP_IsForceStopStage_ForceStopFlag) == 0x000011, "Member 'ABP_Player_RegularMovement_C_UpdateContextual::CallFunc_BP_IsForceStopStage_ForceStopFlag' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateContextual, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'ABP_Player_RegularMovement_C_UpdateContextual::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateContextual, CallFunc_Lerp_ReturnValue) == 0x000020, "Member 'ABP_Player_RegularMovement_C_UpdateContextual::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateContextual, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000028, "Member 'ABP_Player_RegularMovement_C_UpdateContextual::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateContextual, K2Node_VariableSet_BP_ShuffleStopTurnAngle_ImplicitCast) == 0x000030, "Member 'ABP_Player_RegularMovement_C_UpdateContextual::K2Node_VariableSet_BP_ShuffleStopTurnAngle_ImplicitCast' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.UpdateEssentialStates
// 0x0020 (0x0020 - 0x0000)
struct ABP_Player_RegularMovement_C_UpdateEssentialStates final
{
public:
	ERegularLocomotionType                        Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELocomotionGait                               Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELocomotionGait                               Temp_byte_Variable_2;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELocomotionGait                               Temp_byte_Variable_3;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELocomotionGait                               Temp_byte_Variable_4;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELocomotionGait                               Temp_byte_Variable_5;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Locomotion_GroundState_C> K2Node_DynamicCast_AsBPI_Locomotion_Ground_State; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 CallFunc_BPI_Get_CurrentGroundStates_PawnMovementMode; // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERegularLocomotionType                        CallFunc_BPI_Get_CurrentGroundStates_AllowedGait;  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerMovementScenarios                      CallFunc_BPI_Get_CurrentGroundStates_MovementScenario; // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputDeviceKeyType                           CallFunc_BPI_Get_CurrentGroundStates_CurInputDeviceKeyType; // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELocomotionGait                               K2Node_Select_Default;                             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_UpdateEssentialStates) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_UpdateEssentialStates");
static_assert(sizeof(ABP_Player_RegularMovement_C_UpdateEssentialStates) == 0x000020, "Wrong size on ABP_Player_RegularMovement_C_UpdateEssentialStates");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateEssentialStates, Temp_byte_Variable) == 0x000000, "Member 'ABP_Player_RegularMovement_C_UpdateEssentialStates::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateEssentialStates, Temp_byte_Variable_1) == 0x000001, "Member 'ABP_Player_RegularMovement_C_UpdateEssentialStates::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateEssentialStates, Temp_byte_Variable_2) == 0x000002, "Member 'ABP_Player_RegularMovement_C_UpdateEssentialStates::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateEssentialStates, Temp_byte_Variable_3) == 0x000003, "Member 'ABP_Player_RegularMovement_C_UpdateEssentialStates::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateEssentialStates, Temp_byte_Variable_4) == 0x000004, "Member 'ABP_Player_RegularMovement_C_UpdateEssentialStates::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateEssentialStates, Temp_byte_Variable_5) == 0x000005, "Member 'ABP_Player_RegularMovement_C_UpdateEssentialStates::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateEssentialStates, K2Node_DynamicCast_AsBPI_Locomotion_Ground_State) == 0x000008, "Member 'ABP_Player_RegularMovement_C_UpdateEssentialStates::K2Node_DynamicCast_AsBPI_Locomotion_Ground_State' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateEssentialStates, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ABP_Player_RegularMovement_C_UpdateEssentialStates::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateEssentialStates, CallFunc_BPI_Get_CurrentGroundStates_PawnMovementMode) == 0x000019, "Member 'ABP_Player_RegularMovement_C_UpdateEssentialStates::CallFunc_BPI_Get_CurrentGroundStates_PawnMovementMode' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateEssentialStates, CallFunc_BPI_Get_CurrentGroundStates_AllowedGait) == 0x00001A, "Member 'ABP_Player_RegularMovement_C_UpdateEssentialStates::CallFunc_BPI_Get_CurrentGroundStates_AllowedGait' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateEssentialStates, CallFunc_BPI_Get_CurrentGroundStates_MovementScenario) == 0x00001B, "Member 'ABP_Player_RegularMovement_C_UpdateEssentialStates::CallFunc_BPI_Get_CurrentGroundStates_MovementScenario' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateEssentialStates, CallFunc_BPI_Get_CurrentGroundStates_CurInputDeviceKeyType) == 0x00001C, "Member 'ABP_Player_RegularMovement_C_UpdateEssentialStates::CallFunc_BPI_Get_CurrentGroundStates_CurInputDeviceKeyType' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateEssentialStates, K2Node_Select_Default) == 0x00001D, "Member 'ABP_Player_RegularMovement_C_UpdateEssentialStates::K2Node_Select_Default' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.UpdateEssentialValues
// 0x00B8 (0x00B8 - 0x0000)
struct ABP_Player_RegularMovement_C_UpdateEssentialValues final
{
public:
	double                                        CurrentConfigMaxSpeed;                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URMConfigContextInterface*              CallFunc_GetConfigContext_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URMConfigContext_OnGround*              K2Node_DynamicCast_AsRMConfig_Context_on_Ground;   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMaxSpeed_ReturnValue;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMinAnalogSpeed_ReturnValue;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Locomotion_GroundState_C> K2Node_DynamicCast_AsBPI_Locomotion_Ground_State; // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BPI_Get_EssentialValues_InVelocity;       // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BPI_Get_EssentialValues_InCurrentAcceleration; // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BPI_Get_EssentialValues_InMaxAcceleration; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BPI_Get_EssentialValues_InTurnAroundAngle; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BPI_Get_EssentialValues_InSlopeAngle;     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BPI_Get_EssentialValues_InStartTurnAroundAngle; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BPI_Get_EssentialValues_InCurConfigMaxSpeed; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetBoardSpeed_InCurrentConfigAllowSpeed_ImplicitCast; // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateLocomotionLogicValues_InMaxAcceleration_ImplicitCast; // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateLocomotionLogicValues_InTurnAngle_ImplicitCast; // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateLocomotionLogicValues_InSlopeAngle_ImplicitCast; // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_StartTurnAngle_ImplicitCast;    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_UpdateEssentialValues) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_UpdateEssentialValues");
static_assert(sizeof(ABP_Player_RegularMovement_C_UpdateEssentialValues) == 0x0000B8, "Wrong size on ABP_Player_RegularMovement_C_UpdateEssentialValues");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateEssentialValues, CurrentConfigMaxSpeed) == 0x000000, "Member 'ABP_Player_RegularMovement_C_UpdateEssentialValues::CurrentConfigMaxSpeed' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateEssentialValues, CallFunc_GetConfigContext_ReturnValue) == 0x000008, "Member 'ABP_Player_RegularMovement_C_UpdateEssentialValues::CallFunc_GetConfigContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateEssentialValues, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ABP_Player_RegularMovement_C_UpdateEssentialValues::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateEssentialValues, K2Node_DynamicCast_AsRMConfig_Context_on_Ground) == 0x000018, "Member 'ABP_Player_RegularMovement_C_UpdateEssentialValues::K2Node_DynamicCast_AsRMConfig_Context_on_Ground' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateEssentialValues, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ABP_Player_RegularMovement_C_UpdateEssentialValues::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateEssentialValues, CallFunc_GetMaxSpeed_ReturnValue) == 0x000024, "Member 'ABP_Player_RegularMovement_C_UpdateEssentialValues::CallFunc_GetMaxSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateEssentialValues, CallFunc_GetMinAnalogSpeed_ReturnValue) == 0x000028, "Member 'ABP_Player_RegularMovement_C_UpdateEssentialValues::CallFunc_GetMinAnalogSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateEssentialValues, K2Node_DynamicCast_AsBPI_Locomotion_Ground_State) == 0x000030, "Member 'ABP_Player_RegularMovement_C_UpdateEssentialValues::K2Node_DynamicCast_AsBPI_Locomotion_Ground_State' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateEssentialValues, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'ABP_Player_RegularMovement_C_UpdateEssentialValues::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateEssentialValues, CallFunc_BPI_Get_EssentialValues_InVelocity) == 0x000048, "Member 'ABP_Player_RegularMovement_C_UpdateEssentialValues::CallFunc_BPI_Get_EssentialValues_InVelocity' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateEssentialValues, CallFunc_BPI_Get_EssentialValues_InCurrentAcceleration) == 0x000060, "Member 'ABP_Player_RegularMovement_C_UpdateEssentialValues::CallFunc_BPI_Get_EssentialValues_InCurrentAcceleration' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateEssentialValues, CallFunc_BPI_Get_EssentialValues_InMaxAcceleration) == 0x000078, "Member 'ABP_Player_RegularMovement_C_UpdateEssentialValues::CallFunc_BPI_Get_EssentialValues_InMaxAcceleration' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateEssentialValues, CallFunc_BPI_Get_EssentialValues_InTurnAroundAngle) == 0x000080, "Member 'ABP_Player_RegularMovement_C_UpdateEssentialValues::CallFunc_BPI_Get_EssentialValues_InTurnAroundAngle' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateEssentialValues, CallFunc_BPI_Get_EssentialValues_InSlopeAngle) == 0x000088, "Member 'ABP_Player_RegularMovement_C_UpdateEssentialValues::CallFunc_BPI_Get_EssentialValues_InSlopeAngle' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateEssentialValues, CallFunc_BPI_Get_EssentialValues_InStartTurnAroundAngle) == 0x000090, "Member 'ABP_Player_RegularMovement_C_UpdateEssentialValues::CallFunc_BPI_Get_EssentialValues_InStartTurnAroundAngle' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateEssentialValues, CallFunc_BPI_Get_EssentialValues_InCurConfigMaxSpeed) == 0x000098, "Member 'ABP_Player_RegularMovement_C_UpdateEssentialValues::CallFunc_BPI_Get_EssentialValues_InCurConfigMaxSpeed' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateEssentialValues, CallFunc_SetBoardSpeed_InCurrentConfigAllowSpeed_ImplicitCast) == 0x0000A0, "Member 'ABP_Player_RegularMovement_C_UpdateEssentialValues::CallFunc_SetBoardSpeed_InCurrentConfigAllowSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateEssentialValues, CallFunc_UpdateLocomotionLogicValues_InMaxAcceleration_ImplicitCast) == 0x0000A4, "Member 'ABP_Player_RegularMovement_C_UpdateEssentialValues::CallFunc_UpdateLocomotionLogicValues_InMaxAcceleration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateEssentialValues, CallFunc_UpdateLocomotionLogicValues_InTurnAngle_ImplicitCast) == 0x0000A8, "Member 'ABP_Player_RegularMovement_C_UpdateEssentialValues::CallFunc_UpdateLocomotionLogicValues_InTurnAngle_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateEssentialValues, CallFunc_UpdateLocomotionLogicValues_InSlopeAngle_ImplicitCast) == 0x0000AC, "Member 'ABP_Player_RegularMovement_C_UpdateEssentialValues::CallFunc_UpdateLocomotionLogicValues_InSlopeAngle_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateEssentialValues, K2Node_VariableSet_StartTurnAngle_ImplicitCast) == 0x0000B0, "Member 'ABP_Player_RegularMovement_C_UpdateEssentialValues::K2Node_VariableSet_StartTurnAngle_ImplicitCast' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.UpdateGroundAnimationAndAlpha
// 0x0002 (0x0002 - 0x0000)
struct ABP_Player_RegularMovement_C_UpdateGroundAnimationAndAlpha final
{
public:
	bool                                          InApplyImmediately;                                // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_UpdateGroundAnimationAndAlpha) == 0x000001, "Wrong alignment on ABP_Player_RegularMovement_C_UpdateGroundAnimationAndAlpha");
static_assert(sizeof(ABP_Player_RegularMovement_C_UpdateGroundAnimationAndAlpha) == 0x000002, "Wrong size on ABP_Player_RegularMovement_C_UpdateGroundAnimationAndAlpha");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateGroundAnimationAndAlpha, InApplyImmediately) == 0x000000, "Member 'ABP_Player_RegularMovement_C_UpdateGroundAnimationAndAlpha::InApplyImmediately' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateGroundAnimationAndAlpha, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'ABP_Player_RegularMovement_C_UpdateGroundAnimationAndAlpha::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.UpdateIdleTransitionFlag
// 0x0020 (0x0020 - 0x0000)
struct ABP_Player_RegularMovement_C_UpdateIdleTransitionFlag final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(ABP_Player_RegularMovement_C_UpdateIdleTransitionFlag) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_UpdateIdleTransitionFlag");
static_assert(sizeof(ABP_Player_RegularMovement_C_UpdateIdleTransitionFlag) == 0x000020, "Wrong size on ABP_Player_RegularMovement_C_UpdateIdleTransitionFlag");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateIdleTransitionFlag, Context) == 0x000000, "Member 'ABP_Player_RegularMovement_C_UpdateIdleTransitionFlag::Context' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateIdleTransitionFlag, Node) == 0x000010, "Member 'ABP_Player_RegularMovement_C_UpdateIdleTransitionFlag::Node' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.UpdateJumpValue
// 0x0003 (0x0003 - 0x0000)
struct ABP_Player_RegularMovement_C_UpdateJumpValue final
{
public:
	ERegularFloatingJumpStage                     NewJumpstage;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERegularFloatingJumpStage                     InJumpStage;                                       // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_UpdateJumpValue) == 0x000001, "Wrong alignment on ABP_Player_RegularMovement_C_UpdateJumpValue");
static_assert(sizeof(ABP_Player_RegularMovement_C_UpdateJumpValue) == 0x000003, "Wrong size on ABP_Player_RegularMovement_C_UpdateJumpValue");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateJumpValue, NewJumpstage) == 0x000000, "Member 'ABP_Player_RegularMovement_C_UpdateJumpValue::NewJumpstage' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateJumpValue, InJumpStage) == 0x000001, "Member 'ABP_Player_RegularMovement_C_UpdateJumpValue::InJumpStage' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateJumpValue, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000002, "Member 'ABP_Player_RegularMovement_C_UpdateJumpValue::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.UpdateMantleInfo
// 0x0002 (0x0002 - 0x0000)
struct ABP_Player_RegularMovement_C_UpdateMantleInfo final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMantleType                                   CallFunc_BP_GetCurrentMantleType_MantleType;       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_UpdateMantleInfo) == 0x000001, "Wrong alignment on ABP_Player_RegularMovement_C_UpdateMantleInfo");
static_assert(sizeof(ABP_Player_RegularMovement_C_UpdateMantleInfo) == 0x000002, "Wrong size on ABP_Player_RegularMovement_C_UpdateMantleInfo");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateMantleInfo, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'ABP_Player_RegularMovement_C_UpdateMantleInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateMantleInfo, CallFunc_BP_GetCurrentMantleType_MantleType) == 0x000001, "Member 'ABP_Player_RegularMovement_C_UpdateMantleInfo::CallFunc_BP_GetCurrentMantleType_MantleType' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.UpdateMovementData
// 0x0040 (0x0040 - 0x0000)
struct ABP_Player_RegularMovement_C_UpdateMovementData final
{
public:
	TScriptInterface<class IBPI_Locomotion_GroundState_C> K2Node_DynamicCast_AsBPI_Locomotion_Ground_State; // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BPI_Get_ConfigData_WalkSpeed;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BPI_Get_ConfigData_RunSpeed;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BPI_Get_ConfigData_SprintSpeed;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetAllowSpeed_InAllowWalkSpeed_ImplicitCast; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetAllowSpeed_InAllowRunSpeed_ImplicitCast; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetAllowSpeed_InAllowSprintSpeed_ImplicitCast; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_UpdateMovementData) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_UpdateMovementData");
static_assert(sizeof(ABP_Player_RegularMovement_C_UpdateMovementData) == 0x000040, "Wrong size on ABP_Player_RegularMovement_C_UpdateMovementData");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateMovementData, K2Node_DynamicCast_AsBPI_Locomotion_Ground_State) == 0x000000, "Member 'ABP_Player_RegularMovement_C_UpdateMovementData::K2Node_DynamicCast_AsBPI_Locomotion_Ground_State' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateMovementData, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'ABP_Player_RegularMovement_C_UpdateMovementData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateMovementData, CallFunc_BPI_Get_ConfigData_WalkSpeed) == 0x000018, "Member 'ABP_Player_RegularMovement_C_UpdateMovementData::CallFunc_BPI_Get_ConfigData_WalkSpeed' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateMovementData, CallFunc_BPI_Get_ConfigData_RunSpeed) == 0x000020, "Member 'ABP_Player_RegularMovement_C_UpdateMovementData::CallFunc_BPI_Get_ConfigData_RunSpeed' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateMovementData, CallFunc_BPI_Get_ConfigData_SprintSpeed) == 0x000028, "Member 'ABP_Player_RegularMovement_C_UpdateMovementData::CallFunc_BPI_Get_ConfigData_SprintSpeed' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateMovementData, CallFunc_SetAllowSpeed_InAllowWalkSpeed_ImplicitCast) == 0x000030, "Member 'ABP_Player_RegularMovement_C_UpdateMovementData::CallFunc_SetAllowSpeed_InAllowWalkSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateMovementData, CallFunc_SetAllowSpeed_InAllowRunSpeed_ImplicitCast) == 0x000034, "Member 'ABP_Player_RegularMovement_C_UpdateMovementData::CallFunc_SetAllowSpeed_InAllowRunSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateMovementData, CallFunc_SetAllowSpeed_InAllowSprintSpeed_ImplicitCast) == 0x000038, "Member 'ABP_Player_RegularMovement_C_UpdateMovementData::CallFunc_SetAllowSpeed_InAllowSprintSpeed_ImplicitCast' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.UpdateShuffleStopInfo
// 0x0068 (0x0068 - 0x0000)
struct ABP_Player_RegularMovement_C_UpdateShuffleStopInfo final
{
public:
	double                                        InputTurnAngle;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast;                       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_UpdateShuffleStopInfo) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_UpdateShuffleStopInfo");
static_assert(sizeof(ABP_Player_RegularMovement_C_UpdateShuffleStopInfo) == 0x000068, "Wrong size on ABP_Player_RegularMovement_C_UpdateShuffleStopInfo");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateShuffleStopInfo, InputTurnAngle) == 0x000000, "Member 'ABP_Player_RegularMovement_C_UpdateShuffleStopInfo::InputTurnAngle' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateShuffleStopInfo, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000008, "Member 'ABP_Player_RegularMovement_C_UpdateShuffleStopInfo::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateShuffleStopInfo, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'ABP_Player_RegularMovement_C_UpdateShuffleStopInfo::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateShuffleStopInfo, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000018, "Member 'ABP_Player_RegularMovement_C_UpdateShuffleStopInfo::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateShuffleStopInfo, CallFunc_BreakRotator_Roll) == 0x000030, "Member 'ABP_Player_RegularMovement_C_UpdateShuffleStopInfo::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateShuffleStopInfo, CallFunc_BreakRotator_Pitch) == 0x000034, "Member 'ABP_Player_RegularMovement_C_UpdateShuffleStopInfo::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateShuffleStopInfo, CallFunc_BreakRotator_Yaw) == 0x000038, "Member 'ABP_Player_RegularMovement_C_UpdateShuffleStopInfo::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateShuffleStopInfo, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'ABP_Player_RegularMovement_C_UpdateShuffleStopInfo::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateShuffleStopInfo, CallFunc_Abs_ReturnValue) == 0x000048, "Member 'ABP_Player_RegularMovement_C_UpdateShuffleStopInfo::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateShuffleStopInfo, CallFunc_Abs_ReturnValue_1) == 0x000050, "Member 'ABP_Player_RegularMovement_C_UpdateShuffleStopInfo::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateShuffleStopInfo, CallFunc_FMin_ReturnValue) == 0x000058, "Member 'ABP_Player_RegularMovement_C_UpdateShuffleStopInfo::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateShuffleStopInfo, CallFunc_Abs_A_ImplicitCast) == 0x000060, "Member 'ABP_Player_RegularMovement_C_UpdateShuffleStopInfo::CallFunc_Abs_A_ImplicitCast' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.UpdateSkillContextual
// 0x0005 (0x0005 - 0x0000)
struct ABP_Player_RegularMovement_C_UpdateSkillContextual final
{
public:
	bool                                          NewIsLogicInStatePlayingSkill;                     // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_UpdateSkillContextual) == 0x000001, "Wrong alignment on ABP_Player_RegularMovement_C_UpdateSkillContextual");
static_assert(sizeof(ABP_Player_RegularMovement_C_UpdateSkillContextual) == 0x000005, "Wrong size on ABP_Player_RegularMovement_C_UpdateSkillContextual");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateSkillContextual, NewIsLogicInStatePlayingSkill) == 0x000000, "Member 'ABP_Player_RegularMovement_C_UpdateSkillContextual::NewIsLogicInStatePlayingSkill' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateSkillContextual, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'ABP_Player_RegularMovement_C_UpdateSkillContextual::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateSkillContextual, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000002, "Member 'ABP_Player_RegularMovement_C_UpdateSkillContextual::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateSkillContextual, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'ABP_Player_RegularMovement_C_UpdateSkillContextual::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateSkillContextual, CallFunc_BooleanAND_ReturnValue_1) == 0x000004, "Member 'ABP_Player_RegularMovement_C_UpdateSkillContextual::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.UpdateStartRootmotion
// 0x0028 (0x0028 - 0x0000)
struct ABP_Player_RegularMovement_C_UpdateStartRootmotion final
{
public:
	double                                        CallFunc_GetLocomotionStartCurrentTime_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValueWithDefault_OutValue;        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCurveValueWithDefault_ReturnValue;     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast;   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_UpdateStartRootmotion) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_UpdateStartRootmotion");
static_assert(sizeof(ABP_Player_RegularMovement_C_UpdateStartRootmotion) == 0x000028, "Wrong size on ABP_Player_RegularMovement_C_UpdateStartRootmotion");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateStartRootmotion, CallFunc_GetLocomotionStartCurrentTime_ReturnValue) == 0x000000, "Member 'ABP_Player_RegularMovement_C_UpdateStartRootmotion::CallFunc_GetLocomotionStartCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateStartRootmotion, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'ABP_Player_RegularMovement_C_UpdateStartRootmotion::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateStartRootmotion, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000009, "Member 'ABP_Player_RegularMovement_C_UpdateStartRootmotion::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateStartRootmotion, CallFunc_GetCurveValueWithDefault_OutValue) == 0x00000C, "Member 'ABP_Player_RegularMovement_C_UpdateStartRootmotion::CallFunc_GetCurveValueWithDefault_OutValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateStartRootmotion, CallFunc_GetCurveValueWithDefault_ReturnValue) == 0x000010, "Member 'ABP_Player_RegularMovement_C_UpdateStartRootmotion::CallFunc_GetCurveValueWithDefault_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateStartRootmotion, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000011, "Member 'ABP_Player_RegularMovement_C_UpdateStartRootmotion::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateStartRootmotion, CallFunc_BooleanAND_ReturnValue) == 0x000012, "Member 'ABP_Player_RegularMovement_C_UpdateStartRootmotion::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateStartRootmotion, CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast) == 0x000018, "Member 'ABP_Player_RegularMovement_C_UpdateStartRootmotion::CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateStartRootmotion, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast) == 0x000020, "Member 'ABP_Player_RegularMovement_C_UpdateStartRootmotion::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.UpdateStylizedClothAnimations
// 0x0038 (0x0038 - 0x0000)
struct ABP_Player_RegularMovement_C_UpdateStylizedClothAnimations final
{
public:
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_BP_GetDefaultClothesList_DefaultClothesList; // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_32ByteByte_ReturnValue;        // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_UpdateStylizedClothAnimations) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_UpdateStylizedClothAnimations");
static_assert(sizeof(ABP_Player_RegularMovement_C_UpdateStylizedClothAnimations) == 0x000038, "Wrong size on ABP_Player_RegularMovement_C_UpdateStylizedClothAnimations");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateStylizedClothAnimations, Temp_bool_True_if_break_was_hit_Variable) == 0x000000, "Member 'ABP_Player_RegularMovement_C_UpdateStylizedClothAnimations::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateStylizedClothAnimations, Temp_int_Array_Index_Variable) == 0x000004, "Member 'ABP_Player_RegularMovement_C_UpdateStylizedClothAnimations::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateStylizedClothAnimations, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'ABP_Player_RegularMovement_C_UpdateStylizedClothAnimations::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateStylizedClothAnimations, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'ABP_Player_RegularMovement_C_UpdateStylizedClothAnimations::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateStylizedClothAnimations, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ABP_Player_RegularMovement_C_UpdateStylizedClothAnimations::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateStylizedClothAnimations, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'ABP_Player_RegularMovement_C_UpdateStylizedClothAnimations::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateStylizedClothAnimations, CallFunc_BP_GetDefaultClothesList_DefaultClothesList) == 0x000018, "Member 'ABP_Player_RegularMovement_C_UpdateStylizedClothAnimations::CallFunc_BP_GetDefaultClothesList_DefaultClothesList' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateStylizedClothAnimations, CallFunc_Array_Get_Item) == 0x000028, "Member 'ABP_Player_RegularMovement_C_UpdateStylizedClothAnimations::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateStylizedClothAnimations, CallFunc_EqualEqual_32ByteByte_ReturnValue) == 0x00002C, "Member 'ABP_Player_RegularMovement_C_UpdateStylizedClothAnimations::CallFunc_EqualEqual_32ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateStylizedClothAnimations, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'ABP_Player_RegularMovement_C_UpdateStylizedClothAnimations::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateStylizedClothAnimations, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'ABP_Player_RegularMovement_C_UpdateStylizedClothAnimations::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateStylizedClothAnimations, CallFunc_BooleanAND_ReturnValue) == 0x000035, "Member 'ABP_Player_RegularMovement_C_UpdateStylizedClothAnimations::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_UpdateStylizedClothAnimations, CallFunc_IsValid_ReturnValue_1) == 0x000036, "Member 'ABP_Player_RegularMovement_C_UpdateStylizedClothAnimations::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.GetNeedMirror
// 0x0002 (0x0002 - 0x0000)
struct ABP_Player_RegularMovement_C_GetNeedMirror final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_GetNeedMirror) == 0x000001, "Wrong alignment on ABP_Player_RegularMovement_C_GetNeedMirror");
static_assert(sizeof(ABP_Player_RegularMovement_C_GetNeedMirror) == 0x000002, "Wrong size on ABP_Player_RegularMovement_C_GetNeedMirror");
static_assert(offsetof(ABP_Player_RegularMovement_C_GetNeedMirror, ReturnValue) == 0x000000, "Member 'ABP_Player_RegularMovement_C_GetNeedMirror::ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_GetNeedMirror, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'ABP_Player_RegularMovement_C_GetNeedMirror::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function ABP_Player_RegularMovement.ABP_Player_RegularMovement_C.GetPolishTurnAngle
// 0x0030 (0x0030 - 0x0000)
struct ABP_Player_RegularMovement_C_GetPolishTurnAngle final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetNeedMirror_ReturnValue;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_B_ImplicitCast;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_RegularMovement_C_GetPolishTurnAngle) == 0x000008, "Wrong alignment on ABP_Player_RegularMovement_C_GetPolishTurnAngle");
static_assert(sizeof(ABP_Player_RegularMovement_C_GetPolishTurnAngle) == 0x000030, "Wrong size on ABP_Player_RegularMovement_C_GetPolishTurnAngle");
static_assert(offsetof(ABP_Player_RegularMovement_C_GetPolishTurnAngle, ReturnValue) == 0x000000, "Member 'ABP_Player_RegularMovement_C_GetPolishTurnAngle::ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_GetPolishTurnAngle, CallFunc_GetNeedMirror_ReturnValue) == 0x000008, "Member 'ABP_Player_RegularMovement_C_GetPolishTurnAngle::CallFunc_GetNeedMirror_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_GetPolishTurnAngle, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'ABP_Player_RegularMovement_C_GetPolishTurnAngle::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_GetPolishTurnAngle, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'ABP_Player_RegularMovement_C_GetPolishTurnAngle::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_GetPolishTurnAngle, CallFunc_SelectFloat_B_ImplicitCast) == 0x000020, "Member 'ABP_Player_RegularMovement_C_GetPolishTurnAngle::CallFunc_SelectFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_RegularMovement_C_GetPolishTurnAngle, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000028, "Member 'ABP_Player_RegularMovement_C_GetPolishTurnAngle::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

}

