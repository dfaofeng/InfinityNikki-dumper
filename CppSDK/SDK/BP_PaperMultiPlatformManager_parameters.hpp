#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PaperMultiPlatformManager

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_PaperMultiPlatformManager.BP_PaperMultiPlatformManager_C.ExecuteUbergraph_BP_PaperMultiPlatformManager
// 0x0010 (0x0010 - 0x0000)
struct BP_PaperMultiPlatformManager_C_ExecuteUbergraph_BP_PaperMultiPlatformManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NewParam;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerForNextTick_ReturnValue;       // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PaperMultiPlatformManager_C_ExecuteUbergraph_BP_PaperMultiPlatformManager) == 0x000008, "Wrong alignment on BP_PaperMultiPlatformManager_C_ExecuteUbergraph_BP_PaperMultiPlatformManager");
static_assert(sizeof(BP_PaperMultiPlatformManager_C_ExecuteUbergraph_BP_PaperMultiPlatformManager) == 0x000010, "Wrong size on BP_PaperMultiPlatformManager_C_ExecuteUbergraph_BP_PaperMultiPlatformManager");
static_assert(offsetof(BP_PaperMultiPlatformManager_C_ExecuteUbergraph_BP_PaperMultiPlatformManager, EntryPoint) == 0x000000, "Member 'BP_PaperMultiPlatformManager_C_ExecuteUbergraph_BP_PaperMultiPlatformManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PaperMultiPlatformManager_C_ExecuteUbergraph_BP_PaperMultiPlatformManager, K2Node_CustomEvent_NewParam) == 0x000004, "Member 'BP_PaperMultiPlatformManager_C_ExecuteUbergraph_BP_PaperMultiPlatformManager::K2Node_CustomEvent_NewParam' has a wrong offset!");
static_assert(offsetof(BP_PaperMultiPlatformManager_C_ExecuteUbergraph_BP_PaperMultiPlatformManager, CallFunc_K2_SetTimerForNextTick_ReturnValue) == 0x000008, "Member 'BP_PaperMultiPlatformManager_C_ExecuteUbergraph_BP_PaperMultiPlatformManager::CallFunc_K2_SetTimerForNextTick_ReturnValue' has a wrong offset!");

// Function BP_PaperMultiPlatformManager.BP_PaperMultiPlatformManager_C.BP_OnConnectedControllersChange
// 0x0004 (0x0004 - 0x0000)
struct BP_PaperMultiPlatformManager_C_BP_OnConnectedControllersChange final
{
public:
	int32                                         NewParam;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PaperMultiPlatformManager_C_BP_OnConnectedControllersChange) == 0x000004, "Wrong alignment on BP_PaperMultiPlatformManager_C_BP_OnConnectedControllersChange");
static_assert(sizeof(BP_PaperMultiPlatformManager_C_BP_OnConnectedControllersChange) == 0x000004, "Wrong size on BP_PaperMultiPlatformManager_C_BP_OnConnectedControllersChange");
static_assert(offsetof(BP_PaperMultiPlatformManager_C_BP_OnConnectedControllersChange, NewParam) == 0x000000, "Member 'BP_PaperMultiPlatformManager_C_BP_OnConnectedControllersChange::NewParam' has a wrong offset!");

// Function BP_PaperMultiPlatformManager.BP_PaperMultiPlatformManager_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct BP_PaperMultiPlatformManager_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PaperMultiPlatformManager_C_GetModuleName) == 0x000008, "Wrong alignment on BP_PaperMultiPlatformManager_C_GetModuleName");
static_assert(sizeof(BP_PaperMultiPlatformManager_C_GetModuleName) == 0x000010, "Wrong size on BP_PaperMultiPlatformManager_C_GetModuleName");
static_assert(offsetof(BP_PaperMultiPlatformManager_C_GetModuleName, ReturnValue) == 0x000000, "Member 'BP_PaperMultiPlatformManager_C_GetModuleName::ReturnValue' has a wrong offset!");

}

