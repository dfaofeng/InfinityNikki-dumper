#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: X6BlueprintPlayerLibrary

#include "Basic.hpp"

#include "EAbilityGroupType_structs.hpp"
#include "EClothesMinorType_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "EX6EnvType_structs.hpp"
#include "EInt32PlayerPawnStateTypes_structs.hpp"
#include "EPlayerGamePlayMovementMode_structs.hpp"
#include "EPlayerActionTypes_structs.hpp"
#include "EClothesPropertyType_structs.hpp"


namespace SDK::Params
{

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.UpdatePlayerState
// 0x0038 (0x0038 - 0x0000)
struct X6BlueprintPlayerLibrary_C_UpdatePlayerState final
{
public:
	bool                                          AddOrRemoveState;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	EInt32PlayerPawnStateTypes                    Int32UpdatedState;                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterBaseInfoComponent_C*       CharacterBaseInfoComponent;                        // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterBaseInfoComponent_C*       CallFunc_GetComponentByClass_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_UpdatePlayerState) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_UpdatePlayerState");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_UpdatePlayerState) == 0x000038, "Wrong size on X6BlueprintPlayerLibrary_C_UpdatePlayerState");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_UpdatePlayerState, AddOrRemoveState) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_UpdatePlayerState::AddOrRemoveState' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_UpdatePlayerState, Int32UpdatedState) == 0x000004, "Member 'X6BlueprintPlayerLibrary_C_UpdatePlayerState::Int32UpdatedState' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_UpdatePlayerState, Actor) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_UpdatePlayerState::Actor' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_UpdatePlayerState, __WorldContext) == 0x000010, "Member 'X6BlueprintPlayerLibrary_C_UpdatePlayerState::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_UpdatePlayerState, CharacterBaseInfoComponent) == 0x000018, "Member 'X6BlueprintPlayerLibrary_C_UpdatePlayerState::CharacterBaseInfoComponent' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_UpdatePlayerState, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'X6BlueprintPlayerLibrary_C_UpdatePlayerState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_UpdatePlayerState, CallFunc_GetComponentByClass_ReturnValue) == 0x000028, "Member 'X6BlueprintPlayerLibrary_C_UpdatePlayerState::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_UpdatePlayerState, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000030, "Member 'X6BlueprintPlayerLibrary_C_UpdatePlayerState::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_UpdatePlayerState, CallFunc_IsValid_ReturnValue_1) == 0x000034, "Member 'X6BlueprintPlayerLibrary_C_UpdatePlayerState::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.UpdateLocalPlayerState
// 0x0038 (0x0038 - 0x0000)
struct X6BlueprintPlayerLibrary_C_UpdateLocalPlayerState final
{
public:
	bool                                          AddOrRemoveState;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	EInt32PlayerPawnStateTypes                    Int32UpdatedState;                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterBaseInfoComponent_C*       CharacterBaseInfoComponent;                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetLocalPlayerPawn_LocalPlayerPawn;       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterBaseInfoComponent_C*       CallFunc_GetComponentByClass_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_UpdateLocalPlayerState) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_UpdateLocalPlayerState");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_UpdateLocalPlayerState) == 0x000038, "Wrong size on X6BlueprintPlayerLibrary_C_UpdateLocalPlayerState");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_UpdateLocalPlayerState, AddOrRemoveState) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_UpdateLocalPlayerState::AddOrRemoveState' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_UpdateLocalPlayerState, Int32UpdatedState) == 0x000004, "Member 'X6BlueprintPlayerLibrary_C_UpdateLocalPlayerState::Int32UpdatedState' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_UpdateLocalPlayerState, __WorldContext) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_UpdateLocalPlayerState::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_UpdateLocalPlayerState, CharacterBaseInfoComponent) == 0x000010, "Member 'X6BlueprintPlayerLibrary_C_UpdateLocalPlayerState::CharacterBaseInfoComponent' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_UpdateLocalPlayerState, CallFunc_GetLocalPlayerPawn_LocalPlayerPawn) == 0x000018, "Member 'X6BlueprintPlayerLibrary_C_UpdateLocalPlayerState::CallFunc_GetLocalPlayerPawn_LocalPlayerPawn' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_UpdateLocalPlayerState, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000020, "Member 'X6BlueprintPlayerLibrary_C_UpdateLocalPlayerState::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_UpdateLocalPlayerState, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'X6BlueprintPlayerLibrary_C_UpdateLocalPlayerState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_UpdateLocalPlayerState, CallFunc_GetComponentByClass_ReturnValue) == 0x000028, "Member 'X6BlueprintPlayerLibrary_C_UpdateLocalPlayerState::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_UpdateLocalPlayerState, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'X6BlueprintPlayerLibrary_C_UpdateLocalPlayerState::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.SwitchOverlayDataForMontage
// 0x0020 (0x0020 - 0x0000)
struct X6BlueprintPlayerLibrary_C_SwitchOverlayDataForMontage final
{
public:
	class ACharacter*                             InCharacter;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           InMontage;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UX6OverlayCustomModeData*               InCustomOverlayData;                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_SwitchOverlayDataForMontage) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_SwitchOverlayDataForMontage");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_SwitchOverlayDataForMontage) == 0x000020, "Wrong size on X6BlueprintPlayerLibrary_C_SwitchOverlayDataForMontage");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_SwitchOverlayDataForMontage, InCharacter) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_SwitchOverlayDataForMontage::InCharacter' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_SwitchOverlayDataForMontage, InMontage) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_SwitchOverlayDataForMontage::InMontage' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_SwitchOverlayDataForMontage, InCustomOverlayData) == 0x000010, "Member 'X6BlueprintPlayerLibrary_C_SwitchOverlayDataForMontage::InCustomOverlayData' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_SwitchOverlayDataForMontage, __WorldContext) == 0x000018, "Member 'X6BlueprintPlayerLibrary_C_SwitchOverlayDataForMontage::__WorldContext' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.PlayOverlayMontageWithProxy
// 0x0028 (0x0028 - 0x0000)
struct X6BlueprintPlayerLibrary_C_PlayOverlayMontageWithProxy final
{
public:
	class ACharacter*                             InCharacter;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           InMontage;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UX6OverlayCustomModeData*               InCustomOverlayData;                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          InBaseAnim;                                        // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_PlayOverlayMontageWithProxy) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_PlayOverlayMontageWithProxy");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_PlayOverlayMontageWithProxy) == 0x000028, "Wrong size on X6BlueprintPlayerLibrary_C_PlayOverlayMontageWithProxy");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_PlayOverlayMontageWithProxy, InCharacter) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_PlayOverlayMontageWithProxy::InCharacter' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_PlayOverlayMontageWithProxy, InMontage) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_PlayOverlayMontageWithProxy::InMontage' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_PlayOverlayMontageWithProxy, InCustomOverlayData) == 0x000010, "Member 'X6BlueprintPlayerLibrary_C_PlayOverlayMontageWithProxy::InCustomOverlayData' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_PlayOverlayMontageWithProxy, InBaseAnim) == 0x000018, "Member 'X6BlueprintPlayerLibrary_C_PlayOverlayMontageWithProxy::InBaseAnim' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_PlayOverlayMontageWithProxy, __WorldContext) == 0x000020, "Member 'X6BlueprintPlayerLibrary_C_PlayOverlayMontageWithProxy::__WorldContext' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.MakeAllClothesPropertyTypeAddedArray
// 0x0028 (0x0028 - 0x0000)
struct X6BlueprintPlayerLibrary_C_MakeAllClothesPropertyTypeAddedArray final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<EClothesPropertyType>                  AllClothesPropertyTypeAddedArray;                  // 0x0008(0x0010)(Parm, OutParm)
	TArray<EClothesPropertyType>                  K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_MakeAllClothesPropertyTypeAddedArray) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_MakeAllClothesPropertyTypeAddedArray");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_MakeAllClothesPropertyTypeAddedArray) == 0x000028, "Wrong size on X6BlueprintPlayerLibrary_C_MakeAllClothesPropertyTypeAddedArray");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_MakeAllClothesPropertyTypeAddedArray, __WorldContext) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_MakeAllClothesPropertyTypeAddedArray::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_MakeAllClothesPropertyTypeAddedArray, AllClothesPropertyTypeAddedArray) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_MakeAllClothesPropertyTypeAddedArray::AllClothesPropertyTypeAddedArray' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_MakeAllClothesPropertyTypeAddedArray, K2Node_MakeArray_Array) == 0x000018, "Member 'X6BlueprintPlayerLibrary_C_MakeAllClothesPropertyTypeAddedArray::K2Node_MakeArray_Array' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.MakeAllClothesMinorAddedArray
// 0x0028 (0x0028 - 0x0000)
struct X6BlueprintPlayerLibrary_C_MakeAllClothesMinorAddedArray final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<EClothesMinorType>                     AllClothesMinorAddedArray;                         // 0x0008(0x0010)(Parm, OutParm)
	TArray<EClothesMinorType>                     K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_MakeAllClothesMinorAddedArray) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_MakeAllClothesMinorAddedArray");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_MakeAllClothesMinorAddedArray) == 0x000028, "Wrong size on X6BlueprintPlayerLibrary_C_MakeAllClothesMinorAddedArray");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_MakeAllClothesMinorAddedArray, __WorldContext) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_MakeAllClothesMinorAddedArray::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_MakeAllClothesMinorAddedArray, AllClothesMinorAddedArray) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_MakeAllClothesMinorAddedArray::AllClothesMinorAddedArray' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_MakeAllClothesMinorAddedArray, K2Node_MakeArray_Array) == 0x000018, "Member 'X6BlueprintPlayerLibrary_C_MakeAllClothesMinorAddedArray::K2Node_MakeArray_Array' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.ListenLocalPlayerState
// 0x0040 (0x0040 - 0x0000)
struct X6BlueprintPlayerLibrary_C_ListenLocalPlayerState final
{
public:
	bool                                          AddOrRemove;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 ActorNeedListen;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterBaseInfoComponent_C*       CharacterBaseInfoComponent;                        // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetLocalPlayerPawn_LocalPlayerPawn;       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterBaseInfoComponent_C*       CallFunc_GetComponentByClass_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_ListenLocalPlayerState) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_ListenLocalPlayerState");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_ListenLocalPlayerState) == 0x000040, "Wrong size on X6BlueprintPlayerLibrary_C_ListenLocalPlayerState");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_ListenLocalPlayerState, AddOrRemove) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_ListenLocalPlayerState::AddOrRemove' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_ListenLocalPlayerState, ActorNeedListen) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_ListenLocalPlayerState::ActorNeedListen' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_ListenLocalPlayerState, __WorldContext) == 0x000010, "Member 'X6BlueprintPlayerLibrary_C_ListenLocalPlayerState::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_ListenLocalPlayerState, CharacterBaseInfoComponent) == 0x000018, "Member 'X6BlueprintPlayerLibrary_C_ListenLocalPlayerState::CharacterBaseInfoComponent' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_ListenLocalPlayerState, CallFunc_GetLocalPlayerPawn_LocalPlayerPawn) == 0x000020, "Member 'X6BlueprintPlayerLibrary_C_ListenLocalPlayerState::CallFunc_GetLocalPlayerPawn_LocalPlayerPawn' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_ListenLocalPlayerState, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'X6BlueprintPlayerLibrary_C_ListenLocalPlayerState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_ListenLocalPlayerState, CallFunc_GetComponentByClass_ReturnValue) == 0x000030, "Member 'X6BlueprintPlayerLibrary_C_ListenLocalPlayerState::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_ListenLocalPlayerState, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'X6BlueprintPlayerLibrary_C_ListenLocalPlayerState::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.IsX6GameNikkiVisitor
// 0x0018 (0x0018 - 0x0000)
struct X6BlueprintPlayerLibrary_C_IsX6GameNikkiVisitor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret;                                               // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_IsX6GameNikkiVisitor) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_IsX6GameNikkiVisitor");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_IsX6GameNikkiVisitor) == 0x000018, "Wrong size on X6BlueprintPlayerLibrary_C_IsX6GameNikkiVisitor");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_IsX6GameNikkiVisitor, Actor) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_IsX6GameNikkiVisitor::Actor' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_IsX6GameNikkiVisitor, __WorldContext) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_IsX6GameNikkiVisitor::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_IsX6GameNikkiVisitor, Ret) == 0x000010, "Member 'X6BlueprintPlayerLibrary_C_IsX6GameNikkiVisitor::Ret' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.IsX6GameNikki
// 0x0020 (0x0020 - 0x0000)
struct X6BlueprintPlayerLibrary_C_IsX6GameNikki final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          includeVisitor;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsNikki;                                           // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_IsX6GameNikki) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_IsX6GameNikki");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_IsX6GameNikki) == 0x000020, "Wrong size on X6BlueprintPlayerLibrary_C_IsX6GameNikki");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_IsX6GameNikki, Actor) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_IsX6GameNikki::Actor' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_IsX6GameNikki, includeVisitor) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_IsX6GameNikki::includeVisitor' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_IsX6GameNikki, __WorldContext) == 0x000010, "Member 'X6BlueprintPlayerLibrary_C_IsX6GameNikki::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_IsX6GameNikki, IsNikki) == 0x000018, "Member 'X6BlueprintPlayerLibrary_C_IsX6GameNikki::IsNikki' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.IsX6GameDaMiaoVisitor
// 0x0018 (0x0018 - 0x0000)
struct X6BlueprintPlayerLibrary_C_IsX6GameDaMiaoVisitor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret;                                               // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_IsX6GameDaMiaoVisitor) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_IsX6GameDaMiaoVisitor");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_IsX6GameDaMiaoVisitor) == 0x000018, "Wrong size on X6BlueprintPlayerLibrary_C_IsX6GameDaMiaoVisitor");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_IsX6GameDaMiaoVisitor, Actor) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_IsX6GameDaMiaoVisitor::Actor' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_IsX6GameDaMiaoVisitor, __WorldContext) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_IsX6GameDaMiaoVisitor::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_IsX6GameDaMiaoVisitor, Ret) == 0x000010, "Member 'X6BlueprintPlayerLibrary_C_IsX6GameDaMiaoVisitor::Ret' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.IsX6GameDaMiao
// 0x0020 (0x0020 - 0x0000)
struct X6BlueprintPlayerLibrary_C_IsX6GameDaMiao final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          includeVisitor;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDamiao;                                          // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_IsX6GameDaMiao) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_IsX6GameDaMiao");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_IsX6GameDaMiao) == 0x000020, "Wrong size on X6BlueprintPlayerLibrary_C_IsX6GameDaMiao");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_IsX6GameDaMiao, Actor) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_IsX6GameDaMiao::Actor' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_IsX6GameDaMiao, includeVisitor) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_IsX6GameDaMiao::includeVisitor' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_IsX6GameDaMiao, __WorldContext) == 0x000010, "Member 'X6BlueprintPlayerLibrary_C_IsX6GameDaMiao::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_IsX6GameDaMiao, IsDamiao) == 0x000018, "Member 'X6BlueprintPlayerLibrary_C_IsX6GameDaMiao::IsDamiao' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.IsLocalPlayerControllingPawn
// 0x0018 (0x0018 - 0x0000)
struct X6BlueprintPlayerLibrary_C_IsLocalPlayerControllingPawn final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsControllingPawn;                                 // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_IsLocalPlayerControllingPawn) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_IsLocalPlayerControllingPawn");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_IsLocalPlayerControllingPawn) == 0x000018, "Wrong size on X6BlueprintPlayerLibrary_C_IsLocalPlayerControllingPawn");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_IsLocalPlayerControllingPawn, Actor) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_IsLocalPlayerControllingPawn::Actor' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_IsLocalPlayerControllingPawn, __WorldContext) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_IsLocalPlayerControllingPawn::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_IsLocalPlayerControllingPawn, IsControllingPawn) == 0x000010, "Member 'X6BlueprintPlayerLibrary_C_IsLocalPlayerControllingPawn::IsControllingPawn' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.GetX6GameNikkiPawn
// 0x0010 (0x0010 - 0x0000)
struct X6BlueprintPlayerLibrary_C_GetX6GameNikkiPawn final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             NikkiPawn;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_GetX6GameNikkiPawn) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_GetX6GameNikkiPawn");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_GetX6GameNikkiPawn) == 0x000010, "Wrong size on X6BlueprintPlayerLibrary_C_GetX6GameNikkiPawn");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_GetX6GameNikkiPawn, __WorldContext) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_GetX6GameNikkiPawn::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_GetX6GameNikkiPawn, NikkiPawn) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_GetX6GameNikkiPawn::NikkiPawn' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.GetPlayerControllingRole
// 0x0010 (0x0010 - 0x0000)
struct X6BlueprintPlayerLibrary_C_GetPlayerControllingRole final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             ControllingRole;                                   // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_GetPlayerControllingRole) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_GetPlayerControllingRole");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_GetPlayerControllingRole) == 0x000010, "Wrong size on X6BlueprintPlayerLibrary_C_GetPlayerControllingRole");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_GetPlayerControllingRole, __WorldContext) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_GetPlayerControllingRole::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_GetPlayerControllingRole, ControllingRole) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_GetPlayerControllingRole::ControllingRole' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.GetLocalPlayerPawn
// 0x0010 (0x0010 - 0x0000)
struct X6BlueprintPlayerLibrary_C_GetLocalPlayerPawn final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             LocalPlayerPawn;                                   // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_GetLocalPlayerPawn) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_GetLocalPlayerPawn");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_GetLocalPlayerPawn) == 0x000010, "Wrong size on X6BlueprintPlayerLibrary_C_GetLocalPlayerPawn");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_GetLocalPlayerPawn, __WorldContext) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_GetLocalPlayerPawn::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_GetLocalPlayerPawn, LocalPlayerPawn) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_GetLocalPlayerPawn::LocalPlayerPawn' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.GetLocalPlayerInputDirection
// 0x0038 (0x0038 - 0x0000)
struct X6BlueprintPlayerLibrary_C_GetLocalPlayerInputDirection final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurInputDirection;                                 // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetLocalPlayerPawn_LocalPlayerPawn;       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerPawnAttributesComponent_C*    CallFunc_GetComponentByClass_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_GetLocalPlayerInputDirection) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_GetLocalPlayerInputDirection");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_GetLocalPlayerInputDirection) == 0x000038, "Wrong size on X6BlueprintPlayerLibrary_C_GetLocalPlayerInputDirection");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_GetLocalPlayerInputDirection, __WorldContext) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_GetLocalPlayerInputDirection::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_GetLocalPlayerInputDirection, CurInputDirection) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_GetLocalPlayerInputDirection::CurInputDirection' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_GetLocalPlayerInputDirection, CallFunc_GetLocalPlayerPawn_LocalPlayerPawn) == 0x000020, "Member 'X6BlueprintPlayerLibrary_C_GetLocalPlayerInputDirection::CallFunc_GetLocalPlayerPawn_LocalPlayerPawn' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_GetLocalPlayerInputDirection, CallFunc_GetComponentByClass_ReturnValue) == 0x000028, "Member 'X6BlueprintPlayerLibrary_C_GetLocalPlayerInputDirection::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_GetLocalPlayerInputDirection, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'X6BlueprintPlayerLibrary_C_GetLocalPlayerInputDirection::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.EnableActorRenderCustomDepth
// 0x0028 (0x0028 - 0x0000)
struct X6BlueprintPlayerLibrary_C_EnableActorRenderCustomDepth final
{
public:
	class AActor*                                 InActor;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          InEnable;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 InTag;                                             // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_EnableActorRenderCustomDepth) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_EnableActorRenderCustomDepth");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_EnableActorRenderCustomDepth) == 0x000028, "Wrong size on X6BlueprintPlayerLibrary_C_EnableActorRenderCustomDepth");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_EnableActorRenderCustomDepth, InActor) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_EnableActorRenderCustomDepth::InActor' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_EnableActorRenderCustomDepth, InEnable) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_EnableActorRenderCustomDepth::InEnable' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_EnableActorRenderCustomDepth, InTag) == 0x000010, "Member 'X6BlueprintPlayerLibrary_C_EnableActorRenderCustomDepth::InTag' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_EnableActorRenderCustomDepth, __WorldContext) == 0x000020, "Member 'X6BlueprintPlayerLibrary_C_EnableActorRenderCustomDepth::__WorldContext' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.DoesPlayerHasState
// 0x0040 (0x0040 - 0x0000)
struct X6BlueprintPlayerLibrary_C_DoesPlayerHasState final
{
public:
	EInt32PlayerPawnStateTypes                    Int32CheckedState;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Actor;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Has;                                               // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterBaseInfoComponent_C*       CharacterBaseInfoComponent;                        // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterBaseInfoComponent_C*       CallFunc_GetComponentByClass_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayerHasState_Has;                       // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_DoesPlayerHasState) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_DoesPlayerHasState");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_DoesPlayerHasState) == 0x000040, "Wrong size on X6BlueprintPlayerLibrary_C_DoesPlayerHasState");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_DoesPlayerHasState, Int32CheckedState) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_DoesPlayerHasState::Int32CheckedState' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_DoesPlayerHasState, Actor) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_DoesPlayerHasState::Actor' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_DoesPlayerHasState, __WorldContext) == 0x000010, "Member 'X6BlueprintPlayerLibrary_C_DoesPlayerHasState::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_DoesPlayerHasState, Has) == 0x000018, "Member 'X6BlueprintPlayerLibrary_C_DoesPlayerHasState::Has' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_DoesPlayerHasState, CharacterBaseInfoComponent) == 0x000020, "Member 'X6BlueprintPlayerLibrary_C_DoesPlayerHasState::CharacterBaseInfoComponent' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_DoesPlayerHasState, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'X6BlueprintPlayerLibrary_C_DoesPlayerHasState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_DoesPlayerHasState, CallFunc_GetComponentByClass_ReturnValue) == 0x000030, "Member 'X6BlueprintPlayerLibrary_C_DoesPlayerHasState::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_DoesPlayerHasState, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000038, "Member 'X6BlueprintPlayerLibrary_C_DoesPlayerHasState::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_DoesPlayerHasState, CallFunc_PlayerHasState_Has) == 0x00003C, "Member 'X6BlueprintPlayerLibrary_C_DoesPlayerHasState::CallFunc_PlayerHasState_Has' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_DoesPlayerHasState, CallFunc_IsValid_ReturnValue_1) == 0x00003D, "Member 'X6BlueprintPlayerLibrary_C_DoesPlayerHasState::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.DoesLocalPlayerHasState
// 0x0040 (0x0040 - 0x0000)
struct X6BlueprintPlayerLibrary_C_DoesLocalPlayerHasState final
{
public:
	EInt32PlayerPawnStateTypes                    Int32CheckedState;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Has;                                               // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterBaseInfoComponent_C*       CharacterBaseInfoComponent;                        // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetLocalPlayerPawn_LocalPlayerPawn;       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterBaseInfoComponent_C*       CallFunc_GetComponentByClass_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayerHasState_Has;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_DoesLocalPlayerHasState) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_DoesLocalPlayerHasState");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_DoesLocalPlayerHasState) == 0x000040, "Wrong size on X6BlueprintPlayerLibrary_C_DoesLocalPlayerHasState");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_DoesLocalPlayerHasState, Int32CheckedState) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_DoesLocalPlayerHasState::Int32CheckedState' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_DoesLocalPlayerHasState, __WorldContext) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_DoesLocalPlayerHasState::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_DoesLocalPlayerHasState, Has) == 0x000010, "Member 'X6BlueprintPlayerLibrary_C_DoesLocalPlayerHasState::Has' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_DoesLocalPlayerHasState, CharacterBaseInfoComponent) == 0x000018, "Member 'X6BlueprintPlayerLibrary_C_DoesLocalPlayerHasState::CharacterBaseInfoComponent' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_DoesLocalPlayerHasState, CallFunc_GetLocalPlayerPawn_LocalPlayerPawn) == 0x000020, "Member 'X6BlueprintPlayerLibrary_C_DoesLocalPlayerHasState::CallFunc_GetLocalPlayerPawn_LocalPlayerPawn' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_DoesLocalPlayerHasState, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000028, "Member 'X6BlueprintPlayerLibrary_C_DoesLocalPlayerHasState::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_DoesLocalPlayerHasState, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'X6BlueprintPlayerLibrary_C_DoesLocalPlayerHasState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_DoesLocalPlayerHasState, CallFunc_GetComponentByClass_ReturnValue) == 0x000030, "Member 'X6BlueprintPlayerLibrary_C_DoesLocalPlayerHasState::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_DoesLocalPlayerHasState, CallFunc_PlayerHasState_Has) == 0x000038, "Member 'X6BlueprintPlayerLibrary_C_DoesLocalPlayerHasState::CallFunc_PlayerHasState_Has' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_DoesLocalPlayerHasState, CallFunc_IsValid_ReturnValue_1) == 0x000039, "Member 'X6BlueprintPlayerLibrary_C_DoesLocalPlayerHasState::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.ConvertClothMinorArrayToStringArray
// 0x0068 (0x0068 - 0x0000)
struct X6BlueprintPlayerLibrary_C_ConvertClothMinorArrayToStringArray final
{
public:
	TArray<EClothesMinorType>                     InClothesMinorTypeArray;                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         OutClothesMinorTypeStringArray;                    // 0x0018(0x0010)(Parm, OutParm)
	TArray<class FString>                         ClothesMinorTypeStringArray;                       // 0x0028(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EClothesMinorType                             CallFunc_Array_Get_Item;                           // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_ConvertClothMinorArrayToStringArray) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_ConvertClothMinorArrayToStringArray");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_ConvertClothMinorArrayToStringArray) == 0x000068, "Wrong size on X6BlueprintPlayerLibrary_C_ConvertClothMinorArrayToStringArray");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_ConvertClothMinorArrayToStringArray, InClothesMinorTypeArray) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_ConvertClothMinorArrayToStringArray::InClothesMinorTypeArray' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_ConvertClothMinorArrayToStringArray, __WorldContext) == 0x000010, "Member 'X6BlueprintPlayerLibrary_C_ConvertClothMinorArrayToStringArray::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_ConvertClothMinorArrayToStringArray, OutClothesMinorTypeStringArray) == 0x000018, "Member 'X6BlueprintPlayerLibrary_C_ConvertClothMinorArrayToStringArray::OutClothesMinorTypeStringArray' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_ConvertClothMinorArrayToStringArray, ClothesMinorTypeStringArray) == 0x000028, "Member 'X6BlueprintPlayerLibrary_C_ConvertClothMinorArrayToStringArray::ClothesMinorTypeStringArray' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_ConvertClothMinorArrayToStringArray, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'X6BlueprintPlayerLibrary_C_ConvertClothMinorArrayToStringArray::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_ConvertClothMinorArrayToStringArray, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'X6BlueprintPlayerLibrary_C_ConvertClothMinorArrayToStringArray::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_ConvertClothMinorArrayToStringArray, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'X6BlueprintPlayerLibrary_C_ConvertClothMinorArrayToStringArray::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_ConvertClothMinorArrayToStringArray, CallFunc_Array_Get_Item) == 0x000044, "Member 'X6BlueprintPlayerLibrary_C_ConvertClothMinorArrayToStringArray::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_ConvertClothMinorArrayToStringArray, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000048, "Member 'X6BlueprintPlayerLibrary_C_ConvertClothMinorArrayToStringArray::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_ConvertClothMinorArrayToStringArray, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'X6BlueprintPlayerLibrary_C_ConvertClothMinorArrayToStringArray::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_ConvertClothMinorArrayToStringArray, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'X6BlueprintPlayerLibrary_C_ConvertClothMinorArrayToStringArray::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_ConvertClothMinorArrayToStringArray, CallFunc_Array_AddUnique_ReturnValue) == 0x000060, "Member 'X6BlueprintPlayerLibrary_C_ConvertClothMinorArrayToStringArray::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.CanPlayerDoAction
// 0x0040 (0x0040 - 0x0000)
struct X6BlueprintPlayerLibrary_C_CanPlayerDoAction final
{
public:
	EPlayerActionTypes                            Enum;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 __WorldContextActor;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Can;                                               // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterBaseInfoComponent_C*       ChracterBaseInfoComponent;                         // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterBaseInfoComponent_C*       CallFunc_GetComponentByClass_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanPlayerDoAction_Can;                    // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_CanPlayerDoAction) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_CanPlayerDoAction");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_CanPlayerDoAction) == 0x000040, "Wrong size on X6BlueprintPlayerLibrary_C_CanPlayerDoAction");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_CanPlayerDoAction, Enum) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_CanPlayerDoAction::Enum' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_CanPlayerDoAction, __WorldContextActor) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_CanPlayerDoAction::__WorldContextActor' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_CanPlayerDoAction, __WorldContext) == 0x000010, "Member 'X6BlueprintPlayerLibrary_C_CanPlayerDoAction::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_CanPlayerDoAction, Can) == 0x000018, "Member 'X6BlueprintPlayerLibrary_C_CanPlayerDoAction::Can' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_CanPlayerDoAction, ChracterBaseInfoComponent) == 0x000020, "Member 'X6BlueprintPlayerLibrary_C_CanPlayerDoAction::ChracterBaseInfoComponent' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_CanPlayerDoAction, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'X6BlueprintPlayerLibrary_C_CanPlayerDoAction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_CanPlayerDoAction, CallFunc_GetComponentByClass_ReturnValue) == 0x000030, "Member 'X6BlueprintPlayerLibrary_C_CanPlayerDoAction::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_CanPlayerDoAction, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000038, "Member 'X6BlueprintPlayerLibrary_C_CanPlayerDoAction::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_CanPlayerDoAction, CallFunc_CanPlayerDoAction_Can) == 0x00003C, "Member 'X6BlueprintPlayerLibrary_C_CanPlayerDoAction::CallFunc_CanPlayerDoAction_Can' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.CanLocalPlayerDoAction
// 0x0040 (0x0040 - 0x0000)
struct X6BlueprintPlayerLibrary_C_CanLocalPlayerDoAction final
{
public:
	EPlayerActionTypes                            Enum;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Can;                                               // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterBaseInfoComponent_C*       ChracterBaseInfoComponent;                         // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetLocalPlayerPawn_LocalPlayerPawn;       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterBaseInfoComponent_C*       CallFunc_GetComponentByClass_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanPlayerDoAction_Can;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_CanLocalPlayerDoAction) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_CanLocalPlayerDoAction");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_CanLocalPlayerDoAction) == 0x000040, "Wrong size on X6BlueprintPlayerLibrary_C_CanLocalPlayerDoAction");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_CanLocalPlayerDoAction, Enum) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_CanLocalPlayerDoAction::Enum' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_CanLocalPlayerDoAction, __WorldContext) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_CanLocalPlayerDoAction::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_CanLocalPlayerDoAction, Can) == 0x000010, "Member 'X6BlueprintPlayerLibrary_C_CanLocalPlayerDoAction::Can' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_CanLocalPlayerDoAction, ChracterBaseInfoComponent) == 0x000018, "Member 'X6BlueprintPlayerLibrary_C_CanLocalPlayerDoAction::ChracterBaseInfoComponent' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_CanLocalPlayerDoAction, CallFunc_GetLocalPlayerPawn_LocalPlayerPawn) == 0x000020, "Member 'X6BlueprintPlayerLibrary_C_CanLocalPlayerDoAction::CallFunc_GetLocalPlayerPawn_LocalPlayerPawn' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_CanLocalPlayerDoAction, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000028, "Member 'X6BlueprintPlayerLibrary_C_CanLocalPlayerDoAction::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_CanLocalPlayerDoAction, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'X6BlueprintPlayerLibrary_C_CanLocalPlayerDoAction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_CanLocalPlayerDoAction, CallFunc_GetComponentByClass_ReturnValue) == 0x000030, "Member 'X6BlueprintPlayerLibrary_C_CanLocalPlayerDoAction::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_CanLocalPlayerDoAction, CallFunc_CanPlayerDoAction_Can) == 0x000038, "Member 'X6BlueprintPlayerLibrary_C_CanLocalPlayerDoAction::CallFunc_CanPlayerDoAction_Can' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.BP_UpdateMiniGamePlayingState
// 0x0010 (0x0010 - 0x0000)
struct X6BlueprintPlayerLibrary_C_BP_UpdateMiniGamePlayingState final
{
public:
	bool                                          bAddOrRemoveState;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_BP_UpdateMiniGamePlayingState) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_BP_UpdateMiniGamePlayingState");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_BP_UpdateMiniGamePlayingState) == 0x000010, "Wrong size on X6BlueprintPlayerLibrary_C_BP_UpdateMiniGamePlayingState");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_UpdateMiniGamePlayingState, bAddOrRemoveState) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_BP_UpdateMiniGamePlayingState::bAddOrRemoveState' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_UpdateMiniGamePlayingState, __WorldContext) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_BP_UpdateMiniGamePlayingState::__WorldContext' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.BP_UnequipWeapon
// 0x0020 (0x0020 - 0x0000)
struct X6BlueprintPlayerLibrary_C_BP_UnequipWeapon final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bImmediateRequest;                                 // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSync;                                             // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        InDelayTime;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_BP_UnequipWeapon) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_BP_UnequipWeapon");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_BP_UnequipWeapon) == 0x000020, "Wrong size on X6BlueprintPlayerLibrary_C_BP_UnequipWeapon");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_UnequipWeapon, Actor) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_BP_UnequipWeapon::Actor' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_UnequipWeapon, bImmediateRequest) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_BP_UnequipWeapon::bImmediateRequest' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_UnequipWeapon, bSync) == 0x000009, "Member 'X6BlueprintPlayerLibrary_C_BP_UnequipWeapon::bSync' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_UnequipWeapon, InDelayTime) == 0x000010, "Member 'X6BlueprintPlayerLibrary_C_BP_UnequipWeapon::InDelayTime' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_UnequipWeapon, __WorldContext) == 0x000018, "Member 'X6BlueprintPlayerLibrary_C_BP_UnequipWeapon::__WorldContext' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.BP_SyncNPCCurrentCharacteristicsState
// 0x0018 (0x0018 - 0x0000)
struct X6BlueprintPlayerLibrary_C_BP_SyncNPCCurrentCharacteristicsState final
{
public:
	class AActor*                                 npcActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         State;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_BP_SyncNPCCurrentCharacteristicsState) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_BP_SyncNPCCurrentCharacteristicsState");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_BP_SyncNPCCurrentCharacteristicsState) == 0x000018, "Wrong size on X6BlueprintPlayerLibrary_C_BP_SyncNPCCurrentCharacteristicsState");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_SyncNPCCurrentCharacteristicsState, npcActor) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_BP_SyncNPCCurrentCharacteristicsState::npcActor' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_SyncNPCCurrentCharacteristicsState, State) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_BP_SyncNPCCurrentCharacteristicsState::State' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_SyncNPCCurrentCharacteristicsState, __WorldContext) == 0x000010, "Member 'X6BlueprintPlayerLibrary_C_BP_SyncNPCCurrentCharacteristicsState::__WorldContext' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.BP_SwitchGamePlayMovementMode
// 0x0028 (0x0028 - 0x0000)
struct X6BlueprintPlayerLibrary_C_BP_SwitchGamePlayMovementMode final
{
public:
	EPlayerGamePlayMovementMode                   NewGamePlayMovementMode;                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 ActorToSwitchMovement;                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerPawnAttributesComponent_C*    CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_Public_SwitchNikkiGamePlayMovementMode_SwitchSucessful; // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_BP_SwitchGamePlayMovementMode) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_BP_SwitchGamePlayMovementMode");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_BP_SwitchGamePlayMovementMode) == 0x000028, "Wrong size on X6BlueprintPlayerLibrary_C_BP_SwitchGamePlayMovementMode");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_SwitchGamePlayMovementMode, NewGamePlayMovementMode) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_BP_SwitchGamePlayMovementMode::NewGamePlayMovementMode' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_SwitchGamePlayMovementMode, ActorToSwitchMovement) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_BP_SwitchGamePlayMovementMode::ActorToSwitchMovement' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_SwitchGamePlayMovementMode, __WorldContext) == 0x000010, "Member 'X6BlueprintPlayerLibrary_C_BP_SwitchGamePlayMovementMode::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_SwitchGamePlayMovementMode, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'X6BlueprintPlayerLibrary_C_BP_SwitchGamePlayMovementMode::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_SwitchGamePlayMovementMode, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'X6BlueprintPlayerLibrary_C_BP_SwitchGamePlayMovementMode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_SwitchGamePlayMovementMode, CallFunc_BP_Public_SwitchNikkiGamePlayMovementMode_SwitchSucessful) == 0x000021, "Member 'X6BlueprintPlayerLibrary_C_BP_SwitchGamePlayMovementMode::CallFunc_BP_Public_SwitchNikkiGamePlayMovementMode_SwitchSucessful' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_SwitchGamePlayMovementMode, CallFunc_IsValid_ReturnValue_1) == 0x000022, "Member 'X6BlueprintPlayerLibrary_C_BP_SwitchGamePlayMovementMode::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.BP_StopPlayForceFeedback
// 0x0018 (0x0018 - 0x0000)
struct X6BlueprintPlayerLibrary_C_BP_StopPlayForceFeedback final
{
public:
	class UForceFeedbackEffect*                   ForceFeedbackEffect;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   TagName;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_BP_StopPlayForceFeedback) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_BP_StopPlayForceFeedback");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_BP_StopPlayForceFeedback) == 0x000018, "Wrong size on X6BlueprintPlayerLibrary_C_BP_StopPlayForceFeedback");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_StopPlayForceFeedback, ForceFeedbackEffect) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_BP_StopPlayForceFeedback::ForceFeedbackEffect' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_StopPlayForceFeedback, TagName) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_BP_StopPlayForceFeedback::TagName' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_StopPlayForceFeedback, __WorldContext) == 0x000010, "Member 'X6BlueprintPlayerLibrary_C_BP_StopPlayForceFeedback::__WorldContext' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.BP_SetWeaponMirrorDisabled
// 0x0028 (0x0028 - 0x0000)
struct X6BlueprintPlayerLibrary_C_BP_SetWeaponMirrorDisabled final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bDisabled;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 InModuleTag;                                       // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_BP_SetWeaponMirrorDisabled) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_BP_SetWeaponMirrorDisabled");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_BP_SetWeaponMirrorDisabled) == 0x000028, "Wrong size on X6BlueprintPlayerLibrary_C_BP_SetWeaponMirrorDisabled");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_SetWeaponMirrorDisabled, Actor) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_BP_SetWeaponMirrorDisabled::Actor' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_SetWeaponMirrorDisabled, bDisabled) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_BP_SetWeaponMirrorDisabled::bDisabled' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_SetWeaponMirrorDisabled, InModuleTag) == 0x000010, "Member 'X6BlueprintPlayerLibrary_C_BP_SetWeaponMirrorDisabled::InModuleTag' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_SetWeaponMirrorDisabled, __WorldContext) == 0x000020, "Member 'X6BlueprintPlayerLibrary_C_BP_SetWeaponMirrorDisabled::__WorldContext' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.BP_SetWeaponAppearanceDisabled
// 0x0028 (0x0028 - 0x0000)
struct X6BlueprintPlayerLibrary_C_BP_SetWeaponAppearanceDisabled final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bDisabled;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bImmediateRequest;                                 // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 InModuleTag;                                       // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_BP_SetWeaponAppearanceDisabled) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_BP_SetWeaponAppearanceDisabled");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_BP_SetWeaponAppearanceDisabled) == 0x000028, "Wrong size on X6BlueprintPlayerLibrary_C_BP_SetWeaponAppearanceDisabled");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_SetWeaponAppearanceDisabled, Actor) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_BP_SetWeaponAppearanceDisabled::Actor' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_SetWeaponAppearanceDisabled, bDisabled) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_BP_SetWeaponAppearanceDisabled::bDisabled' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_SetWeaponAppearanceDisabled, bImmediateRequest) == 0x000009, "Member 'X6BlueprintPlayerLibrary_C_BP_SetWeaponAppearanceDisabled::bImmediateRequest' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_SetWeaponAppearanceDisabled, InModuleTag) == 0x000010, "Member 'X6BlueprintPlayerLibrary_C_BP_SetWeaponAppearanceDisabled::InModuleTag' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_SetWeaponAppearanceDisabled, __WorldContext) == 0x000020, "Member 'X6BlueprintPlayerLibrary_C_BP_SetWeaponAppearanceDisabled::__WorldContext' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.BP_SetNPCCurrentLocalCharacteristicsState
// 0x0018 (0x0018 - 0x0000)
struct X6BlueprintPlayerLibrary_C_BP_SetNPCCurrentLocalCharacteristicsState final
{
public:
	class AActor*                                 npcActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         State;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_BP_SetNPCCurrentLocalCharacteristicsState) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_BP_SetNPCCurrentLocalCharacteristicsState");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_BP_SetNPCCurrentLocalCharacteristicsState) == 0x000018, "Wrong size on X6BlueprintPlayerLibrary_C_BP_SetNPCCurrentLocalCharacteristicsState");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_SetNPCCurrentLocalCharacteristicsState, npcActor) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_BP_SetNPCCurrentLocalCharacteristicsState::npcActor' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_SetNPCCurrentLocalCharacteristicsState, State) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_BP_SetNPCCurrentLocalCharacteristicsState::State' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_SetNPCCurrentLocalCharacteristicsState, __WorldContext) == 0x000010, "Member 'X6BlueprintPlayerLibrary_C_BP_SetNPCCurrentLocalCharacteristicsState::__WorldContext' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.BP_SetNPCCurrentCharacteristicsState
// 0x0018 (0x0018 - 0x0000)
struct X6BlueprintPlayerLibrary_C_BP_SetNPCCurrentCharacteristicsState final
{
public:
	class AActor*                                 npcActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         State;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_BP_SetNPCCurrentCharacteristicsState) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_BP_SetNPCCurrentCharacteristicsState");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_BP_SetNPCCurrentCharacteristicsState) == 0x000018, "Wrong size on X6BlueprintPlayerLibrary_C_BP_SetNPCCurrentCharacteristicsState");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_SetNPCCurrentCharacteristicsState, npcActor) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_BP_SetNPCCurrentCharacteristicsState::npcActor' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_SetNPCCurrentCharacteristicsState, State) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_BP_SetNPCCurrentCharacteristicsState::State' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_SetNPCCurrentCharacteristicsState, __WorldContext) == 0x000010, "Member 'X6BlueprintPlayerLibrary_C_BP_SetNPCCurrentCharacteristicsState::__WorldContext' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.BP_SetEnvironmentType
// 0x0018 (0x0018 - 0x0000)
struct X6BlueprintPlayerLibrary_C_BP_SetEnvironmentType final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EX6EnvType                                    EnvType;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnable;                                           // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_BP_SetEnvironmentType) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_BP_SetEnvironmentType");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_BP_SetEnvironmentType) == 0x000018, "Wrong size on X6BlueprintPlayerLibrary_C_BP_SetEnvironmentType");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_SetEnvironmentType, Actor) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_BP_SetEnvironmentType::Actor' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_SetEnvironmentType, EnvType) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_BP_SetEnvironmentType::EnvType' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_SetEnvironmentType, bEnable) == 0x000009, "Member 'X6BlueprintPlayerLibrary_C_BP_SetEnvironmentType::bEnable' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_SetEnvironmentType, __WorldContext) == 0x000010, "Member 'X6BlueprintPlayerLibrary_C_BP_SetEnvironmentType::__WorldContext' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.BP_SetCompCfgCameraChannel
// 0x0010 (0x0010 - 0x0000)
struct X6BlueprintPlayerLibrary_C_BP_SetCompCfgCameraChannel final
{
public:
	class UPrimitiveComponent*                    Comp;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_BP_SetCompCfgCameraChannel) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_BP_SetCompCfgCameraChannel");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_BP_SetCompCfgCameraChannel) == 0x000010, "Wrong size on X6BlueprintPlayerLibrary_C_BP_SetCompCfgCameraChannel");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_SetCompCfgCameraChannel, Comp) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_BP_SetCompCfgCameraChannel::Comp' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_SetCompCfgCameraChannel, __WorldContext) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_BP_SetCompCfgCameraChannel::__WorldContext' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.BP_ReplayGetForceIngoreSit
// 0x0010 (0x0010 - 0x0000)
struct X6BlueprintPlayerLibrary_C_BP_ReplayGetForceIngoreSit final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldIngore;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_BP_ReplayGetForceIngoreSit) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_BP_ReplayGetForceIngoreSit");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_BP_ReplayGetForceIngoreSit) == 0x000010, "Wrong size on X6BlueprintPlayerLibrary_C_BP_ReplayGetForceIngoreSit");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_ReplayGetForceIngoreSit, __WorldContext) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_BP_ReplayGetForceIngoreSit::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_ReplayGetForceIngoreSit, ShouldIngore) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_BP_ReplayGetForceIngoreSit::ShouldIngore' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.BP_RemoveListenPlayerStateUpdate
// 0x0018 (0x0018 - 0x0000)
struct X6BlueprintPlayerLibrary_C_BP_RemoveListenPlayerStateUpdate final
{
public:
	class AActor*                                 ListenTargetActor;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ListenerActor;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_BP_RemoveListenPlayerStateUpdate) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_BP_RemoveListenPlayerStateUpdate");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_BP_RemoveListenPlayerStateUpdate) == 0x000018, "Wrong size on X6BlueprintPlayerLibrary_C_BP_RemoveListenPlayerStateUpdate");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_RemoveListenPlayerStateUpdate, ListenTargetActor) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_BP_RemoveListenPlayerStateUpdate::ListenTargetActor' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_RemoveListenPlayerStateUpdate, ListenerActor) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_BP_RemoveListenPlayerStateUpdate::ListenerActor' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_RemoveListenPlayerStateUpdate, __WorldContext) == 0x000010, "Member 'X6BlueprintPlayerLibrary_C_BP_RemoveListenPlayerStateUpdate::__WorldContext' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.BP_PlayForceFeedback
// 0x0020 (0x0020 - 0x0000)
struct X6BlueprintPlayerLibrary_C_BP_PlayForceFeedback final
{
public:
	class UForceFeedbackEffect*                   ForceFeedbackEffect;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   TagName;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLooping;                                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIgnoreTimeDilation;                               // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlayWhilePaused;                                  // 0x0012(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_BP_PlayForceFeedback) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_BP_PlayForceFeedback");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_BP_PlayForceFeedback) == 0x000020, "Wrong size on X6BlueprintPlayerLibrary_C_BP_PlayForceFeedback");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_PlayForceFeedback, ForceFeedbackEffect) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_BP_PlayForceFeedback::ForceFeedbackEffect' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_PlayForceFeedback, TagName) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_BP_PlayForceFeedback::TagName' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_PlayForceFeedback, bLooping) == 0x000010, "Member 'X6BlueprintPlayerLibrary_C_BP_PlayForceFeedback::bLooping' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_PlayForceFeedback, bIgnoreTimeDilation) == 0x000011, "Member 'X6BlueprintPlayerLibrary_C_BP_PlayForceFeedback::bIgnoreTimeDilation' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_PlayForceFeedback, bPlayWhilePaused) == 0x000012, "Member 'X6BlueprintPlayerLibrary_C_BP_PlayForceFeedback::bPlayWhilePaused' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_PlayForceFeedback, __WorldContext) == 0x000018, "Member 'X6BlueprintPlayerLibrary_C_BP_PlayForceFeedback::__WorldContext' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.BP_NetSyncWeapon
// 0x0010 (0x0010 - 0x0000)
struct X6BlueprintPlayerLibrary_C_BP_NetSyncWeapon final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_BP_NetSyncWeapon) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_BP_NetSyncWeapon");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_BP_NetSyncWeapon) == 0x000010, "Wrong size on X6BlueprintPlayerLibrary_C_BP_NetSyncWeapon");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_NetSyncWeapon, Actor) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_BP_NetSyncWeapon::Actor' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_NetSyncWeapon, __WorldContext) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_BP_NetSyncWeapon::__WorldContext' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.BP_LocalPlayerDoAction
// 0x0018 (0x0018 - 0x0000)
struct X6BlueprintPlayerLibrary_C_BP_LocalPlayerDoAction final
{
public:
	EPlayerActionTypes                            InNewAction;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_BP_LocalPlayerDoAction) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_BP_LocalPlayerDoAction");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_BP_LocalPlayerDoAction) == 0x000018, "Wrong size on X6BlueprintPlayerLibrary_C_BP_LocalPlayerDoAction");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_LocalPlayerDoAction, InNewAction) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_BP_LocalPlayerDoAction::InNewAction' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_LocalPlayerDoAction, __WorldContext) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_BP_LocalPlayerDoAction::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_LocalPlayerDoAction, Success) == 0x000010, "Member 'X6BlueprintPlayerLibrary_C_BP_LocalPlayerDoAction::Success' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.BP_IsSuitCollected
// 0x0018 (0x0018 - 0x0000)
struct X6BlueprintPlayerLibrary_C_BP_IsSuitCollected final
{
public:
	int32                                         SuitId;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_BP_IsSuitCollected) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_BP_IsSuitCollected");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_BP_IsSuitCollected) == 0x000018, "Wrong size on X6BlueprintPlayerLibrary_C_BP_IsSuitCollected");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_IsSuitCollected, SuitId) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_BP_IsSuitCollected::SuitId' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_IsSuitCollected, __WorldContext) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_BP_IsSuitCollected::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_IsSuitCollected, Result) == 0x000010, "Member 'X6BlueprintPlayerLibrary_C_BP_IsSuitCollected::Result' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.BP_IsLocalPlayerRiding
// 0x0010 (0x0010 - 0x0000)
struct X6BlueprintPlayerLibrary_C_BP_IsLocalPlayerRiding final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRiding;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_BP_IsLocalPlayerRiding) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_BP_IsLocalPlayerRiding");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_BP_IsLocalPlayerRiding) == 0x000010, "Wrong size on X6BlueprintPlayerLibrary_C_BP_IsLocalPlayerRiding");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_IsLocalPlayerRiding, __WorldContext) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_BP_IsLocalPlayerRiding::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_IsLocalPlayerRiding, IsRiding) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_BP_IsLocalPlayerRiding::IsRiding' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.BP_IsLocalPlayerCarrier
// 0x0018 (0x0018 - 0x0000)
struct X6BlueprintPlayerLibrary_C_BP_IsLocalPlayerCarrier final
{
public:
	class UObject*                                Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCarrier;                                         // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_BP_IsLocalPlayerCarrier) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_BP_IsLocalPlayerCarrier");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_BP_IsLocalPlayerCarrier) == 0x000018, "Wrong size on X6BlueprintPlayerLibrary_C_BP_IsLocalPlayerCarrier");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_IsLocalPlayerCarrier, Actor) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_BP_IsLocalPlayerCarrier::Actor' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_IsLocalPlayerCarrier, __WorldContext) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_BP_IsLocalPlayerCarrier::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_IsLocalPlayerCarrier, IsCarrier) == 0x000010, "Member 'X6BlueprintPlayerLibrary_C_BP_IsLocalPlayerCarrier::IsCarrier' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.BP_GetNPCCurrentCharacteristicsState
// 0x0018 (0x0018 - 0x0000)
struct X6BlueprintPlayerLibrary_C_BP_GetNPCCurrentCharacteristicsState final
{
public:
	class AActor*                                 npcActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         State;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_BP_GetNPCCurrentCharacteristicsState) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_BP_GetNPCCurrentCharacteristicsState");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_BP_GetNPCCurrentCharacteristicsState) == 0x000018, "Wrong size on X6BlueprintPlayerLibrary_C_BP_GetNPCCurrentCharacteristicsState");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_GetNPCCurrentCharacteristicsState, npcActor) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_BP_GetNPCCurrentCharacteristicsState::npcActor' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_GetNPCCurrentCharacteristicsState, __WorldContext) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_BP_GetNPCCurrentCharacteristicsState::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_GetNPCCurrentCharacteristicsState, State) == 0x000010, "Member 'X6BlueprintPlayerLibrary_C_BP_GetNPCCurrentCharacteristicsState::State' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.BP_GetForceRelation
// 0x0020 (0x0020 - 0x0000)
struct X6BlueprintPlayerLibrary_C_BP_GetForceRelation final
{
public:
	class AActor*                                 Actor1;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor2;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Relation;                                          // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_BP_GetForceRelation) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_BP_GetForceRelation");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_BP_GetForceRelation) == 0x000020, "Wrong size on X6BlueprintPlayerLibrary_C_BP_GetForceRelation");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_GetForceRelation, Actor1) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_BP_GetForceRelation::Actor1' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_GetForceRelation, Actor2) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_BP_GetForceRelation::Actor2' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_GetForceRelation, __WorldContext) == 0x000010, "Member 'X6BlueprintPlayerLibrary_C_BP_GetForceRelation::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_GetForceRelation, Relation) == 0x000018, "Member 'X6BlueprintPlayerLibrary_C_BP_GetForceRelation::Relation' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.BP_ExitGamePlayMovementMode
// 0x0028 (0x0028 - 0x0000)
struct X6BlueprintPlayerLibrary_C_BP_ExitGamePlayMovementMode final
{
public:
	EPlayerGamePlayMovementMode                   MovementModeToExit;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 ActorToExitMovement;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerPawnAttributesComponent_C*    CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_Public_ExitGamePlayMovementMode_SwitchSucessful; // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_BP_ExitGamePlayMovementMode) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_BP_ExitGamePlayMovementMode");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_BP_ExitGamePlayMovementMode) == 0x000028, "Wrong size on X6BlueprintPlayerLibrary_C_BP_ExitGamePlayMovementMode");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_ExitGamePlayMovementMode, MovementModeToExit) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_BP_ExitGamePlayMovementMode::MovementModeToExit' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_ExitGamePlayMovementMode, ActorToExitMovement) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_BP_ExitGamePlayMovementMode::ActorToExitMovement' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_ExitGamePlayMovementMode, __WorldContext) == 0x000010, "Member 'X6BlueprintPlayerLibrary_C_BP_ExitGamePlayMovementMode::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_ExitGamePlayMovementMode, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'X6BlueprintPlayerLibrary_C_BP_ExitGamePlayMovementMode::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_ExitGamePlayMovementMode, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'X6BlueprintPlayerLibrary_C_BP_ExitGamePlayMovementMode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_ExitGamePlayMovementMode, CallFunc_BP_Public_ExitGamePlayMovementMode_SwitchSucessful) == 0x000021, "Member 'X6BlueprintPlayerLibrary_C_BP_ExitGamePlayMovementMode::CallFunc_BP_Public_ExitGamePlayMovementMode_SwitchSucessful' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_ExitGamePlayMovementMode, CallFunc_IsValid_ReturnValue_1) == 0x000022, "Member 'X6BlueprintPlayerLibrary_C_BP_ExitGamePlayMovementMode::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.BP_EquipWeaponByAbilityType
// 0x0030 (0x0030 - 0x0000)
struct X6BlueprintPlayerLibrary_C_BP_EquipWeaponByAbilityType final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EAbilityGroupType                             AbilityType;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SlotType;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bImmediateRequest;                                 // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSync;                                             // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_BP_EquipWeaponByAbilityType) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_BP_EquipWeaponByAbilityType");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_BP_EquipWeaponByAbilityType) == 0x000030, "Wrong size on X6BlueprintPlayerLibrary_C_BP_EquipWeaponByAbilityType");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_EquipWeaponByAbilityType, Actor) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_BP_EquipWeaponByAbilityType::Actor' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_EquipWeaponByAbilityType, AbilityType) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_BP_EquipWeaponByAbilityType::AbilityType' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_EquipWeaponByAbilityType, SlotType) == 0x000010, "Member 'X6BlueprintPlayerLibrary_C_BP_EquipWeaponByAbilityType::SlotType' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_EquipWeaponByAbilityType, bImmediateRequest) == 0x000020, "Member 'X6BlueprintPlayerLibrary_C_BP_EquipWeaponByAbilityType::bImmediateRequest' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_EquipWeaponByAbilityType, bSync) == 0x000021, "Member 'X6BlueprintPlayerLibrary_C_BP_EquipWeaponByAbilityType::bSync' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_EquipWeaponByAbilityType, __WorldContext) == 0x000028, "Member 'X6BlueprintPlayerLibrary_C_BP_EquipWeaponByAbilityType::__WorldContext' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.BP_DoesLocalPlayerDressingAppointedSuit
// 0x0018 (0x0018 - 0x0000)
struct X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerDressingAppointedSuit final
{
public:
	int32                                         SuitId;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerDressingAppointedSuit) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerDressingAppointedSuit");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerDressingAppointedSuit) == 0x000018, "Wrong size on X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerDressingAppointedSuit");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerDressingAppointedSuit, SuitId) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerDressingAppointedSuit::SuitId' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerDressingAppointedSuit, __WorldContext) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerDressingAppointedSuit::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerDressingAppointedSuit, Result) == 0x000010, "Member 'X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerDressingAppointedSuit::Result' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.BP_DoesLocalPlayerDressingAppointedCloth
// 0x0018 (0x0018 - 0x0000)
struct X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerDressingAppointedCloth final
{
public:
	int32                                         ClothID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerDressingAppointedCloth) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerDressingAppointedCloth");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerDressingAppointedCloth) == 0x000018, "Wrong size on X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerDressingAppointedCloth");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerDressingAppointedCloth, ClothID) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerDressingAppointedCloth::ClothID' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerDressingAppointedCloth, __WorldContext) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerDressingAppointedCloth::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerDressingAppointedCloth, Result) == 0x000010, "Member 'X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerDressingAppointedCloth::Result' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.BP_DoesLocalPlayerAppointedClothesMinorIsNullHelper
// 0x0020 (0x0020 - 0x0000)
struct X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerAppointedClothesMinorIsNullHelper final
{
public:
	class FString                                 AppointedClothesMinorTypeString;                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsNull;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerAppointedClothesMinorIsNullHelper) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerAppointedClothesMinorIsNullHelper");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerAppointedClothesMinorIsNullHelper) == 0x000020, "Wrong size on X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerAppointedClothesMinorIsNullHelper");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerAppointedClothesMinorIsNullHelper, AppointedClothesMinorTypeString) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerAppointedClothesMinorIsNullHelper::AppointedClothesMinorTypeString' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerAppointedClothesMinorIsNullHelper, __WorldContext) == 0x000010, "Member 'X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerAppointedClothesMinorIsNullHelper::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerAppointedClothesMinorIsNullHelper, IsNull) == 0x000018, "Member 'X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerAppointedClothesMinorIsNullHelper::IsNull' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.BP_DoesLocalPlayerAppointedClothesMinorIsNull
// 0x0030 (0x0030 - 0x0000)
struct X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerAppointedClothesMinorIsNull final
{
public:
	EClothesMinorType                             AppointedClothesMinorType;                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsNull;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_DoesLocalPlayerAppointedClothesMinorIsNullHelper_IsNull; // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerAppointedClothesMinorIsNull) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerAppointedClothesMinorIsNull");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerAppointedClothesMinorIsNull) == 0x000030, "Wrong size on X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerAppointedClothesMinorIsNull");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerAppointedClothesMinorIsNull, AppointedClothesMinorType) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerAppointedClothesMinorIsNull::AppointedClothesMinorType' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerAppointedClothesMinorIsNull, __WorldContext) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerAppointedClothesMinorIsNull::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerAppointedClothesMinorIsNull, IsNull) == 0x000010, "Member 'X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerAppointedClothesMinorIsNull::IsNull' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerAppointedClothesMinorIsNull, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000018, "Member 'X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerAppointedClothesMinorIsNull::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerAppointedClothesMinorIsNull, CallFunc_BP_DoesLocalPlayerAppointedClothesMinorIsNullHelper_IsNull) == 0x000028, "Member 'X6BlueprintPlayerLibrary_C_BP_DoesLocalPlayerAppointedClothesMinorIsNull::CallFunc_BP_DoesLocalPlayerAppointedClothesMinorIsNullHelper_IsNull' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.BP_BossFightLeaveGlide
// 0x0010 (0x0010 - 0x0000)
struct X6BlueprintPlayerLibrary_C_BP_BossFightLeaveGlide final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_BP_BossFightLeaveGlide) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_BP_BossFightLeaveGlide");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_BP_BossFightLeaveGlide) == 0x000010, "Wrong size on X6BlueprintPlayerLibrary_C_BP_BossFightLeaveGlide");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_BossFightLeaveGlide, Actor) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_BP_BossFightLeaveGlide::Actor' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_BossFightLeaveGlide, __WorldContext) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_BP_BossFightLeaveGlide::__WorldContext' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.BP_BossFightEnterGlide
// 0x0010 (0x0010 - 0x0000)
struct X6BlueprintPlayerLibrary_C_BP_BossFightEnterGlide final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_BP_BossFightEnterGlide) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_BP_BossFightEnterGlide");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_BP_BossFightEnterGlide) == 0x000010, "Wrong size on X6BlueprintPlayerLibrary_C_BP_BossFightEnterGlide");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_BossFightEnterGlide, Actor) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_BP_BossFightEnterGlide::Actor' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_BossFightEnterGlide, __WorldContext) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_BP_BossFightEnterGlide::__WorldContext' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.BP_BindingFakeEntity
// 0x0018 (0x0018 - 0x0000)
struct X6BlueprintPlayerLibrary_C_BP_BindingFakeEntity final
{
public:
	int32                                         ConfigID;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Actor;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_BP_BindingFakeEntity) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_BP_BindingFakeEntity");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_BP_BindingFakeEntity) == 0x000018, "Wrong size on X6BlueprintPlayerLibrary_C_BP_BindingFakeEntity");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_BindingFakeEntity, ConfigID) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_BP_BindingFakeEntity::ConfigID' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_BindingFakeEntity, Actor) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_BP_BindingFakeEntity::Actor' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_BindingFakeEntity, __WorldContext) == 0x000010, "Member 'X6BlueprintPlayerLibrary_C_BP_BindingFakeEntity::__WorldContext' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.BP_AddListenPlayerStateUpdate
// 0x0028 (0x0028 - 0x0000)
struct X6BlueprintPlayerLibrary_C_BP_AddListenPlayerStateUpdate final
{
public:
	class AActor*                                 ListenTargetActor;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<EInt32PlayerPawnStateTypes>            ListenStates;                                      // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class AActor*                                 ListenerActor;                                     // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_BP_AddListenPlayerStateUpdate) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_BP_AddListenPlayerStateUpdate");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_BP_AddListenPlayerStateUpdate) == 0x000028, "Wrong size on X6BlueprintPlayerLibrary_C_BP_AddListenPlayerStateUpdate");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_AddListenPlayerStateUpdate, ListenTargetActor) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_BP_AddListenPlayerStateUpdate::ListenTargetActor' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_AddListenPlayerStateUpdate, ListenStates) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_BP_AddListenPlayerStateUpdate::ListenStates' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_AddListenPlayerStateUpdate, ListenerActor) == 0x000018, "Member 'X6BlueprintPlayerLibrary_C_BP_AddListenPlayerStateUpdate::ListenerActor' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_AddListenPlayerStateUpdate, __WorldContext) == 0x000020, "Member 'X6BlueprintPlayerLibrary_C_BP_AddListenPlayerStateUpdate::__WorldContext' has a wrong offset!");

// Function X6BlueprintPlayerLibrary.X6BlueprintPlayerLibrary_C.BP_ActivateLocalPlayerMantleFeature
// 0x0028 (0x0028 - 0x0000)
struct X6BlueprintPlayerLibrary_C_BP_ActivateLocalPlayerMantleFeature final
{
public:
	bool                                          IsActivate;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetLocalPlayerPawn_LocalPlayerPawn;       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerMantleComponent_C*            CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintPlayerLibrary_C_BP_ActivateLocalPlayerMantleFeature) == 0x000008, "Wrong alignment on X6BlueprintPlayerLibrary_C_BP_ActivateLocalPlayerMantleFeature");
static_assert(sizeof(X6BlueprintPlayerLibrary_C_BP_ActivateLocalPlayerMantleFeature) == 0x000028, "Wrong size on X6BlueprintPlayerLibrary_C_BP_ActivateLocalPlayerMantleFeature");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_ActivateLocalPlayerMantleFeature, IsActivate) == 0x000000, "Member 'X6BlueprintPlayerLibrary_C_BP_ActivateLocalPlayerMantleFeature::IsActivate' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_ActivateLocalPlayerMantleFeature, __WorldContext) == 0x000008, "Member 'X6BlueprintPlayerLibrary_C_BP_ActivateLocalPlayerMantleFeature::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_ActivateLocalPlayerMantleFeature, CallFunc_GetLocalPlayerPawn_LocalPlayerPawn) == 0x000010, "Member 'X6BlueprintPlayerLibrary_C_BP_ActivateLocalPlayerMantleFeature::CallFunc_GetLocalPlayerPawn_LocalPlayerPawn' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_ActivateLocalPlayerMantleFeature, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'X6BlueprintPlayerLibrary_C_BP_ActivateLocalPlayerMantleFeature::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_ActivateLocalPlayerMantleFeature, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'X6BlueprintPlayerLibrary_C_BP_ActivateLocalPlayerMantleFeature::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintPlayerLibrary_C_BP_ActivateLocalPlayerMantleFeature, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'X6BlueprintPlayerLibrary_C_BP_ActivateLocalPlayerMantleFeature::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

}

