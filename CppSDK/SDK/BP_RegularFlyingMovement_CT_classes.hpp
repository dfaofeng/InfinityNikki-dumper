#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RegularFlyingMovement_CT

#include "Basic.hpp"

#include "EPlayerRegularFlyingMovementType_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_RegularFlyingMovement_CT.BP_RegularFlyingMovement_CT_C
// 0x0030 (0x0060 - 0x0030)
class UBP_RegularFlyingMovement_CT_C final : public UPrimaryDataAsset
{
public:
	double                                        LowFlyingSpeed;                                    // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NormalFlyingSpeed;                                 // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TopFlyingSpeed;                                    // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerRegularFlyingMovementType              FlyingMovementType;                                // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        FlyingGroundBias;                                  // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BrakingDecelerationFlying;                         // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_RegularFlyingMovement_CT_C">();
	}
	static class UBP_RegularFlyingMovement_CT_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_RegularFlyingMovement_CT_C>();
	}
};
static_assert(alignof(UBP_RegularFlyingMovement_CT_C) == 0x000008, "Wrong alignment on UBP_RegularFlyingMovement_CT_C");
static_assert(sizeof(UBP_RegularFlyingMovement_CT_C) == 0x000060, "Wrong size on UBP_RegularFlyingMovement_CT_C");
static_assert(offsetof(UBP_RegularFlyingMovement_CT_C, LowFlyingSpeed) == 0x000030, "Member 'UBP_RegularFlyingMovement_CT_C::LowFlyingSpeed' has a wrong offset!");
static_assert(offsetof(UBP_RegularFlyingMovement_CT_C, NormalFlyingSpeed) == 0x000038, "Member 'UBP_RegularFlyingMovement_CT_C::NormalFlyingSpeed' has a wrong offset!");
static_assert(offsetof(UBP_RegularFlyingMovement_CT_C, TopFlyingSpeed) == 0x000040, "Member 'UBP_RegularFlyingMovement_CT_C::TopFlyingSpeed' has a wrong offset!");
static_assert(offsetof(UBP_RegularFlyingMovement_CT_C, FlyingMovementType) == 0x000048, "Member 'UBP_RegularFlyingMovement_CT_C::FlyingMovementType' has a wrong offset!");
static_assert(offsetof(UBP_RegularFlyingMovement_CT_C, FlyingGroundBias) == 0x000050, "Member 'UBP_RegularFlyingMovement_CT_C::FlyingGroundBias' has a wrong offset!");
static_assert(offsetof(UBP_RegularFlyingMovement_CT_C, BrakingDecelerationFlying) == 0x000058, "Member 'UBP_RegularFlyingMovement_CT_C::BrakingDecelerationFlying' has a wrong offset!");

}

