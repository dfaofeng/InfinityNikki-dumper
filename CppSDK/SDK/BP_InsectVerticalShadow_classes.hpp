#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InsectVerticalShadow

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "X6Game_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_InsectVerticalShadow.BP_InsectVerticalShadow_C
// 0x0028 (0x0460 - 0x0438)
class ABP_InsectVerticalShadow_C final : public AX6Actor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0438(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   VerticalShadowMesh;                                // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          bUseVerticalShadow;                                // 0x0450(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_451[0x7];                                      // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 InsectMesh;                                        // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void ServerInit(bool bServer);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void ExecuteUbergraph_BP_InsectVerticalShadow(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_InsectVerticalShadow_C">();
	}
	static class ABP_InsectVerticalShadow_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_InsectVerticalShadow_C>();
	}
};
static_assert(alignof(ABP_InsectVerticalShadow_C) == 0x000008, "Wrong alignment on ABP_InsectVerticalShadow_C");
static_assert(sizeof(ABP_InsectVerticalShadow_C) == 0x000460, "Wrong size on ABP_InsectVerticalShadow_C");
static_assert(offsetof(ABP_InsectVerticalShadow_C, UberGraphFrame) == 0x000438, "Member 'ABP_InsectVerticalShadow_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_InsectVerticalShadow_C, VerticalShadowMesh) == 0x000440, "Member 'ABP_InsectVerticalShadow_C::VerticalShadowMesh' has a wrong offset!");
static_assert(offsetof(ABP_InsectVerticalShadow_C, DefaultSceneRoot) == 0x000448, "Member 'ABP_InsectVerticalShadow_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_InsectVerticalShadow_C, bUseVerticalShadow) == 0x000450, "Member 'ABP_InsectVerticalShadow_C::bUseVerticalShadow' has a wrong offset!");
static_assert(offsetof(ABP_InsectVerticalShadow_C, InsectMesh) == 0x000458, "Member 'ABP_InsectVerticalShadow_C::InsectMesh' has a wrong offset!");

}

