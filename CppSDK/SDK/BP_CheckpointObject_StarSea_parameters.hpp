#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CheckpointObject_StarSea

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function BP_CheckpointObject_StarSea.BP_CheckpointObject_StarSea_C.UserConstructionScript
// 0x0020 (0x0020 - 0x0000)
struct BP_CheckpointObject_StarSea_C_UserConstructionScript final
{
public:
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_Int64Int64_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetVariableFloat_InValue_ImplicitCast;    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CheckpointObject_StarSea_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_CheckpointObject_StarSea_C_UserConstructionScript");
static_assert(sizeof(BP_CheckpointObject_StarSea_C_UserConstructionScript) == 0x000020, "Wrong size on BP_CheckpointObject_StarSea_C_UserConstructionScript");
static_assert(offsetof(BP_CheckpointObject_StarSea_C_UserConstructionScript, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000000, "Member 'BP_CheckpointObject_StarSea_C_UserConstructionScript::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CheckpointObject_StarSea_C_UserConstructionScript, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000008, "Member 'BP_CheckpointObject_StarSea_C_UserConstructionScript::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CheckpointObject_StarSea_C_UserConstructionScript, CallFunc_NotEqual_Int64Int64_ReturnValue) == 0x000010, "Member 'BP_CheckpointObject_StarSea_C_UserConstructionScript::CallFunc_NotEqual_Int64Int64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CheckpointObject_StarSea_C_UserConstructionScript, CallFunc_SetVariableFloat_InValue_ImplicitCast) == 0x000014, "Member 'BP_CheckpointObject_StarSea_C_UserConstructionScript::CallFunc_SetVariableFloat_InValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CheckpointObject_StarSea_C_UserConstructionScript, CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast) == 0x000018, "Member 'BP_CheckpointObject_StarSea_C_UserConstructionScript::CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast' has a wrong offset!");

// Function BP_CheckpointObject_StarSea.BP_CheckpointObject_StarSea_C.SetIsLastActivate
// 0x0001 (0x0001 - 0x0000)
struct BP_CheckpointObject_StarSea_C_SetIsLastActivate final
{
public:
	bool                                          opt;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CheckpointObject_StarSea_C_SetIsLastActivate) == 0x000001, "Wrong alignment on BP_CheckpointObject_StarSea_C_SetIsLastActivate");
static_assert(sizeof(BP_CheckpointObject_StarSea_C_SetIsLastActivate) == 0x000001, "Wrong size on BP_CheckpointObject_StarSea_C_SetIsLastActivate");
static_assert(offsetof(BP_CheckpointObject_StarSea_C_SetIsLastActivate, opt) == 0x000000, "Member 'BP_CheckpointObject_StarSea_C_SetIsLastActivate::opt' has a wrong offset!");

// Function BP_CheckpointObject_StarSea.BP_CheckpointObject_StarSea_C.SetIsActivate
// 0x0001 (0x0001 - 0x0000)
struct BP_CheckpointObject_StarSea_C_SetIsActivate final
{
public:
	bool                                          opt;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CheckpointObject_StarSea_C_SetIsActivate) == 0x000001, "Wrong alignment on BP_CheckpointObject_StarSea_C_SetIsActivate");
static_assert(sizeof(BP_CheckpointObject_StarSea_C_SetIsActivate) == 0x000001, "Wrong size on BP_CheckpointObject_StarSea_C_SetIsActivate");
static_assert(offsetof(BP_CheckpointObject_StarSea_C_SetIsActivate, opt) == 0x000000, "Member 'BP_CheckpointObject_StarSea_C_SetIsActivate::opt' has a wrong offset!");

// Function BP_CheckpointObject_StarSea.BP_CheckpointObject_StarSea_C.ServerInit
// 0x0001 (0x0001 - 0x0000)
struct BP_CheckpointObject_StarSea_C_ServerInit final
{
public:
	bool                                          bServer;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CheckpointObject_StarSea_C_ServerInit) == 0x000001, "Wrong alignment on BP_CheckpointObject_StarSea_C_ServerInit");
static_assert(sizeof(BP_CheckpointObject_StarSea_C_ServerInit) == 0x000001, "Wrong size on BP_CheckpointObject_StarSea_C_ServerInit");
static_assert(offsetof(BP_CheckpointObject_StarSea_C_ServerInit, bServer) == 0x000000, "Member 'BP_CheckpointObject_StarSea_C_ServerInit::bServer' has a wrong offset!");

// Function BP_CheckpointObject_StarSea.BP_CheckpointObject_StarSea_C.ExecuteUbergraph_BP_CheckpointObject_StarSea
// 0x0040 (0x0040 - 0x0000)
struct BP_CheckpointObject_StarSea_C_ExecuteUbergraph_BP_CheckpointObject_StarSea final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bDisplayFinal;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bServer;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerControllingRole_ControllingRole; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRTPCValue_Value;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERTPCValueType                                CallFunc_GetRTPCValue_OutputValueType;             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37[0x1];                                       // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast;   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CheckpointObject_StarSea_C_ExecuteUbergraph_BP_CheckpointObject_StarSea) == 0x000008, "Wrong alignment on BP_CheckpointObject_StarSea_C_ExecuteUbergraph_BP_CheckpointObject_StarSea");
static_assert(sizeof(BP_CheckpointObject_StarSea_C_ExecuteUbergraph_BP_CheckpointObject_StarSea) == 0x000040, "Wrong size on BP_CheckpointObject_StarSea_C_ExecuteUbergraph_BP_CheckpointObject_StarSea");
static_assert(offsetof(BP_CheckpointObject_StarSea_C_ExecuteUbergraph_BP_CheckpointObject_StarSea, EntryPoint) == 0x000000, "Member 'BP_CheckpointObject_StarSea_C_ExecuteUbergraph_BP_CheckpointObject_StarSea::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CheckpointObject_StarSea_C_ExecuteUbergraph_BP_CheckpointObject_StarSea, K2Node_CustomEvent_bDisplayFinal) == 0x000004, "Member 'BP_CheckpointObject_StarSea_C_ExecuteUbergraph_BP_CheckpointObject_StarSea::K2Node_CustomEvent_bDisplayFinal' has a wrong offset!");
static_assert(offsetof(BP_CheckpointObject_StarSea_C_ExecuteUbergraph_BP_CheckpointObject_StarSea, K2Node_Event_bServer) == 0x000005, "Member 'BP_CheckpointObject_StarSea_C_ExecuteUbergraph_BP_CheckpointObject_StarSea::K2Node_Event_bServer' has a wrong offset!");
static_assert(offsetof(BP_CheckpointObject_StarSea_C_ExecuteUbergraph_BP_CheckpointObject_StarSea, CallFunc_Not_PreBool_ReturnValue) == 0x000006, "Member 'BP_CheckpointObject_StarSea_C_ExecuteUbergraph_BP_CheckpointObject_StarSea::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CheckpointObject_StarSea_C_ExecuteUbergraph_BP_CheckpointObject_StarSea, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000008, "Member 'BP_CheckpointObject_StarSea_C_ExecuteUbergraph_BP_CheckpointObject_StarSea::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_CheckpointObject_StarSea_C_ExecuteUbergraph_BP_CheckpointObject_StarSea, K2Node_ComponentBoundEvent_OtherActor) == 0x000010, "Member 'BP_CheckpointObject_StarSea_C_ExecuteUbergraph_BP_CheckpointObject_StarSea::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_CheckpointObject_StarSea_C_ExecuteUbergraph_BP_CheckpointObject_StarSea, K2Node_ComponentBoundEvent_OtherComp) == 0x000018, "Member 'BP_CheckpointObject_StarSea_C_ExecuteUbergraph_BP_CheckpointObject_StarSea::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_CheckpointObject_StarSea_C_ExecuteUbergraph_BP_CheckpointObject_StarSea, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000020, "Member 'BP_CheckpointObject_StarSea_C_ExecuteUbergraph_BP_CheckpointObject_StarSea::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_CheckpointObject_StarSea_C_ExecuteUbergraph_BP_CheckpointObject_StarSea, CallFunc_GetPlayerControllingRole_ControllingRole) == 0x000028, "Member 'BP_CheckpointObject_StarSea_C_ExecuteUbergraph_BP_CheckpointObject_StarSea::CallFunc_GetPlayerControllingRole_ControllingRole' has a wrong offset!");
static_assert(offsetof(BP_CheckpointObject_StarSea_C_ExecuteUbergraph_BP_CheckpointObject_StarSea, CallFunc_GetRTPCValue_Value) == 0x000030, "Member 'BP_CheckpointObject_StarSea_C_ExecuteUbergraph_BP_CheckpointObject_StarSea::CallFunc_GetRTPCValue_Value' has a wrong offset!");
static_assert(offsetof(BP_CheckpointObject_StarSea_C_ExecuteUbergraph_BP_CheckpointObject_StarSea, CallFunc_GetRTPCValue_OutputValueType) == 0x000034, "Member 'BP_CheckpointObject_StarSea_C_ExecuteUbergraph_BP_CheckpointObject_StarSea::CallFunc_GetRTPCValue_OutputValueType' has a wrong offset!");
static_assert(offsetof(BP_CheckpointObject_StarSea_C_ExecuteUbergraph_BP_CheckpointObject_StarSea, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000035, "Member 'BP_CheckpointObject_StarSea_C_ExecuteUbergraph_BP_CheckpointObject_StarSea::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CheckpointObject_StarSea_C_ExecuteUbergraph_BP_CheckpointObject_StarSea, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000036, "Member 'BP_CheckpointObject_StarSea_C_ExecuteUbergraph_BP_CheckpointObject_StarSea::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CheckpointObject_StarSea_C_ExecuteUbergraph_BP_CheckpointObject_StarSea, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast) == 0x000038, "Member 'BP_CheckpointObject_StarSea_C_ExecuteUbergraph_BP_CheckpointObject_StarSea::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_CheckpointObject_StarSea.BP_CheckpointObject_StarSea_C.BP_UpdateEnergized
// 0x0005 (0x0005 - 0x0000)
struct BP_CheckpointObject_StarSea_C_BP_UpdateEnergized final
{
public:
	bool                                          bEnergized;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CheckpointObject_StarSea_C_BP_UpdateEnergized) == 0x000001, "Wrong alignment on BP_CheckpointObject_StarSea_C_BP_UpdateEnergized");
static_assert(sizeof(BP_CheckpointObject_StarSea_C_BP_UpdateEnergized) == 0x000005, "Wrong size on BP_CheckpointObject_StarSea_C_BP_UpdateEnergized");
static_assert(offsetof(BP_CheckpointObject_StarSea_C_BP_UpdateEnergized, bEnergized) == 0x000000, "Member 'BP_CheckpointObject_StarSea_C_BP_UpdateEnergized::bEnergized' has a wrong offset!");
static_assert(offsetof(BP_CheckpointObject_StarSea_C_BP_UpdateEnergized, Temp_bool_Variable) == 0x000001, "Member 'BP_CheckpointObject_StarSea_C_BP_UpdateEnergized::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CheckpointObject_StarSea_C_BP_UpdateEnergized, Temp_byte_Variable) == 0x000002, "Member 'BP_CheckpointObject_StarSea_C_BP_UpdateEnergized::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CheckpointObject_StarSea_C_BP_UpdateEnergized, Temp_byte_Variable_1) == 0x000003, "Member 'BP_CheckpointObject_StarSea_C_BP_UpdateEnergized::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CheckpointObject_StarSea_C_BP_UpdateEnergized, K2Node_Select_Default) == 0x000004, "Member 'BP_CheckpointObject_StarSea_C_BP_UpdateEnergized::K2Node_Select_Default' has a wrong offset!");

// Function BP_CheckpointObject_StarSea.BP_CheckpointObject_StarSea_C.BP_GetNiagaraPosition
// 0x0010 (0x0010 - 0x0000)
struct BP_CheckpointObject_StarSea_C_BP_GetNiagaraPosition final
{
public:
	double                                        Position;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetCurrentStateID_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CheckpointObject_StarSea_C_BP_GetNiagaraPosition) == 0x000008, "Wrong alignment on BP_CheckpointObject_StarSea_C_BP_GetNiagaraPosition");
static_assert(sizeof(BP_CheckpointObject_StarSea_C_BP_GetNiagaraPosition) == 0x000010, "Wrong size on BP_CheckpointObject_StarSea_C_BP_GetNiagaraPosition");
static_assert(offsetof(BP_CheckpointObject_StarSea_C_BP_GetNiagaraPosition, Position) == 0x000000, "Member 'BP_CheckpointObject_StarSea_C_BP_GetNiagaraPosition::Position' has a wrong offset!");
static_assert(offsetof(BP_CheckpointObject_StarSea_C_BP_GetNiagaraPosition, CallFunc_GetCurrentStateID_ReturnValue) == 0x000008, "Member 'BP_CheckpointObject_StarSea_C_BP_GetNiagaraPosition::CallFunc_GetCurrentStateID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CheckpointObject_StarSea_C_BP_GetNiagaraPosition, CallFunc_GetValidValue_ReturnValue) == 0x000009, "Member 'BP_CheckpointObject_StarSea_C_BP_GetNiagaraPosition::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CheckpointObject_StarSea_C_BP_GetNiagaraPosition, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000A, "Member 'BP_CheckpointObject_StarSea_C_BP_GetNiagaraPosition::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_CheckpointObject_StarSea.BP_CheckpointObject_StarSea_C.BP_Empower
// 0x0001 (0x0001 - 0x0000)
struct BP_CheckpointObject_StarSea_C_BP_Empower final
{
public:
	bool                                          bDisplayFinal;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CheckpointObject_StarSea_C_BP_Empower) == 0x000001, "Wrong alignment on BP_CheckpointObject_StarSea_C_BP_Empower");
static_assert(sizeof(BP_CheckpointObject_StarSea_C_BP_Empower) == 0x000001, "Wrong size on BP_CheckpointObject_StarSea_C_BP_Empower");
static_assert(offsetof(BP_CheckpointObject_StarSea_C_BP_Empower, bDisplayFinal) == 0x000000, "Member 'BP_CheckpointObject_StarSea_C_BP_Empower::bDisplayFinal' has a wrong offset!");

// Function BP_CheckpointObject_StarSea.BP_CheckpointObject_StarSea_C.BndEvt__BP_CheckpointObject_SeaSnail_AudioTrigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_CheckpointObject_StarSea_C_BndEvt__BP_CheckpointObject_SeaSnail_AudioTrigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CheckpointObject_StarSea_C_BndEvt__BP_CheckpointObject_SeaSnail_AudioTrigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_CheckpointObject_StarSea_C_BndEvt__BP_CheckpointObject_SeaSnail_AudioTrigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_CheckpointObject_StarSea_C_BndEvt__BP_CheckpointObject_SeaSnail_AudioTrigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_CheckpointObject_StarSea_C_BndEvt__BP_CheckpointObject_SeaSnail_AudioTrigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_CheckpointObject_StarSea_C_BndEvt__BP_CheckpointObject_SeaSnail_AudioTrigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_CheckpointObject_StarSea_C_BndEvt__BP_CheckpointObject_SeaSnail_AudioTrigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_CheckpointObject_StarSea_C_BndEvt__BP_CheckpointObject_SeaSnail_AudioTrigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_CheckpointObject_StarSea_C_BndEvt__BP_CheckpointObject_SeaSnail_AudioTrigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_CheckpointObject_StarSea_C_BndEvt__BP_CheckpointObject_SeaSnail_AudioTrigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_CheckpointObject_StarSea_C_BndEvt__BP_CheckpointObject_SeaSnail_AudioTrigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_CheckpointObject_StarSea_C_BndEvt__BP_CheckpointObject_SeaSnail_AudioTrigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_CheckpointObject_StarSea_C_BndEvt__BP_CheckpointObject_SeaSnail_AudioTrigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_CheckpointObject_StarSea.BP_CheckpointObject_StarSea_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct BP_CheckpointObject_StarSea_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_CheckpointObject_StarSea_C_GetModuleName) == 0x000008, "Wrong alignment on BP_CheckpointObject_StarSea_C_GetModuleName");
static_assert(sizeof(BP_CheckpointObject_StarSea_C_GetModuleName) == 0x000010, "Wrong size on BP_CheckpointObject_StarSea_C_GetModuleName");
static_assert(offsetof(BP_CheckpointObject_StarSea_C_GetModuleName, ReturnValue) == 0x000000, "Member 'BP_CheckpointObject_StarSea_C_GetModuleName::ReturnValue' has a wrong offset!");

}

