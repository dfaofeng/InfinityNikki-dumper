#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Nikki_AimOffset

#include "Basic.hpp"

#include "ABP_Nikki_AimOffset_classes.hpp"
#include "ABP_Nikki_AimOffset_parameters.hpp"


namespace SDK
{

// Function ABP_Nikki_AimOffset.ABP_Nikki_AimOffset_C.AnimGraph
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink*                       AnimGraph_0                                            (Parm, OutParm, NoDestructor)

void UABP_Nikki_AimOffset_C::AnimGraph(struct FPoseLink* AnimGraph_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Nikki_AimOffset_C", "AnimGraph");

	Params::ABP_Nikki_AimOffset_C_AnimGraph Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AnimGraph_0 != nullptr)
		*AnimGraph_0 = std::move(Parms.AnimGraph_0);
}


// Function ABP_Nikki_AimOffset.ABP_Nikki_AimOffset_C.AnimLayer_AimOffset
// (HasOutParams, BlueprintCallable)
// Parameters:
// const struct FPoseLink&                 InPoseForAimOffset                                     (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink*                       AnimLayer_AimOffset_0                                  (Parm, OutParm, NoDestructor)

void UABP_Nikki_AimOffset_C::AnimLayer_AimOffset(const struct FPoseLink& InPoseForAimOffset, struct FPoseLink* AnimLayer_AimOffset_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Nikki_AimOffset_C", "AnimLayer_AimOffset");

	Params::ABP_Nikki_AimOffset_C_AnimLayer_AimOffset Parms{};

	Parms.InPoseForAimOffset = std::move(InPoseForAimOffset);

	UObject::ProcessEvent(Func, &Parms);

	if (AnimLayer_AimOffset_0 != nullptr)
		*AnimLayer_AimOffset_0 = std::move(Parms.AnimLayer_AimOffset_0);
}


// Function ABP_Nikki_AimOffset.ABP_Nikki_AimOffset_C.AnimLayer_BehaviorAdditiveMode
// (HasOutParams, BlueprintCallable)
// Parameters:
// const struct FPoseLink&                 InPoseForPlayerBehavior                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink*                       AnimLayer_BehaviorAdditiveMode_0                       (Parm, OutParm, NoDestructor)

void UABP_Nikki_AimOffset_C::AnimLayer_BehaviorAdditiveMode(const struct FPoseLink& InPoseForPlayerBehavior, struct FPoseLink* AnimLayer_BehaviorAdditiveMode_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Nikki_AimOffset_C", "AnimLayer_BehaviorAdditiveMode");

	Params::ABP_Nikki_AimOffset_C_AnimLayer_BehaviorAdditiveMode Parms{};

	Parms.InPoseForPlayerBehavior = std::move(InPoseForPlayerBehavior);

	UObject::ProcessEvent(Func, &Parms);

	if (AnimLayer_BehaviorAdditiveMode_0 != nullptr)
		*AnimLayer_BehaviorAdditiveMode_0 = std::move(Parms.AnimLayer_BehaviorAdditiveMode_0);
}


// Function ABP_Nikki_AimOffset.ABP_Nikki_AimOffset_C.AnimLayer_CombatMovement
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink*                       AnimLayer_CombatMovement_0                             (Parm, OutParm, NoDestructor)

void UABP_Nikki_AimOffset_C::AnimLayer_CombatMovement(struct FPoseLink* AnimLayer_CombatMovement_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Nikki_AimOffset_C", "AnimLayer_CombatMovement");

	Params::ABP_Nikki_AimOffset_C_AnimLayer_CombatMovement Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AnimLayer_CombatMovement_0 != nullptr)
		*AnimLayer_CombatMovement_0 = std::move(Parms.AnimLayer_CombatMovement_0);
}


// Function ABP_Nikki_AimOffset.ABP_Nikki_AimOffset_C.AnimLayer_EquipmentAdditiveMode
// (HasOutParams, BlueprintCallable)
// Parameters:
// const struct FPoseLink&                 InPoseForEquipment                                     (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink*                       AnimLayer_EquipmentAdditiveMode_0                      (Parm, OutParm, NoDestructor)

void UABP_Nikki_AimOffset_C::AnimLayer_EquipmentAdditiveMode(const struct FPoseLink& InPoseForEquipment, struct FPoseLink* AnimLayer_EquipmentAdditiveMode_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Nikki_AimOffset_C", "AnimLayer_EquipmentAdditiveMode");

	Params::ABP_Nikki_AimOffset_C_AnimLayer_EquipmentAdditiveMode Parms{};

	Parms.InPoseForEquipment = std::move(InPoseForEquipment);

	UObject::ProcessEvent(Func, &Parms);

	if (AnimLayer_EquipmentAdditiveMode_0 != nullptr)
		*AnimLayer_EquipmentAdditiveMode_0 = std::move(Parms.AnimLayer_EquipmentAdditiveMode_0);
}


// Function ABP_Nikki_AimOffset.ABP_Nikki_AimOffset_C.AnimLayer_Jump
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink*                       AnimLayer_Jump_0                                       (Parm, OutParm, NoDestructor)

void UABP_Nikki_AimOffset_C::AnimLayer_Jump(struct FPoseLink* AnimLayer_Jump_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Nikki_AimOffset_C", "AnimLayer_Jump");

	Params::ABP_Nikki_AimOffset_C_AnimLayer_Jump Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AnimLayer_Jump_0 != nullptr)
		*AnimLayer_Jump_0 = std::move(Parms.AnimLayer_Jump_0);
}


// Function ABP_Nikki_AimOffset.ABP_Nikki_AimOffset_C.AnimLayer_Land
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink*                       AnimLayer_Land_0                                       (Parm, OutParm, NoDestructor)

void UABP_Nikki_AimOffset_C::AnimLayer_Land(struct FPoseLink* AnimLayer_Land_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Nikki_AimOffset_C", "AnimLayer_Land");

	Params::ABP_Nikki_AimOffset_C_AnimLayer_Land Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AnimLayer_Land_0 != nullptr)
		*AnimLayer_Land_0 = std::move(Parms.AnimLayer_Land_0);
}


// Function ABP_Nikki_AimOffset.ABP_Nikki_AimOffset_C.AnimLayer_MovementDependObject
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink*                       AnimLayer_MovementDependObject_0                       (Parm, OutParm, NoDestructor)

void UABP_Nikki_AimOffset_C::AnimLayer_MovementDependObject(struct FPoseLink* AnimLayer_MovementDependObject_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Nikki_AimOffset_C", "AnimLayer_MovementDependObject");

	Params::ABP_Nikki_AimOffset_C_AnimLayer_MovementDependObject Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AnimLayer_MovementDependObject_0 != nullptr)
		*AnimLayer_MovementDependObject_0 = std::move(Parms.AnimLayer_MovementDependObject_0);
}


// Function ABP_Nikki_AimOffset.ABP_Nikki_AimOffset_C.AnimLayer_NPCAdditiveBehavior
// (HasOutParams, BlueprintCallable)
// Parameters:
// const struct FPoseLink&                 InPose                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink*                       AnimLayer_NPCAdditiveBehavior_0                        (Parm, OutParm, NoDestructor)

void UABP_Nikki_AimOffset_C::AnimLayer_NPCAdditiveBehavior(const struct FPoseLink& InPose, struct FPoseLink* AnimLayer_NPCAdditiveBehavior_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Nikki_AimOffset_C", "AnimLayer_NPCAdditiveBehavior");

	Params::ABP_Nikki_AimOffset_C_AnimLayer_NPCAdditiveBehavior Parms{};

	Parms.InPose = std::move(InPose);

	UObject::ProcessEvent(Func, &Parms);

	if (AnimLayer_NPCAdditiveBehavior_0 != nullptr)
		*AnimLayer_NPCAdditiveBehavior_0 = std::move(Parms.AnimLayer_NPCAdditiveBehavior_0);
}


// Function ABP_Nikki_AimOffset.ABP_Nikki_AimOffset_C.AnimLayer_NPCBehavior
// (HasOutParams, BlueprintCallable)
// Parameters:
// const struct FPoseLink&                 InPose_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink*                       AnimLayer_NPCBehavior_0                                (Parm, OutParm, NoDestructor)

void UABP_Nikki_AimOffset_C::AnimLayer_NPCBehavior(const struct FPoseLink& InPose_0, struct FPoseLink* AnimLayer_NPCBehavior_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Nikki_AimOffset_C", "AnimLayer_NPCBehavior");

	Params::ABP_Nikki_AimOffset_C_AnimLayer_NPCBehavior Parms{};

	Parms.InPose_0 = std::move(InPose_0);

	UObject::ProcessEvent(Func, &Parms);

	if (AnimLayer_NPCBehavior_0 != nullptr)
		*AnimLayer_NPCBehavior_0 = std::move(Parms.AnimLayer_NPCBehavior_0);
}


// Function ABP_Nikki_AimOffset.ABP_Nikki_AimOffset_C.AnimLayer_PlayerControllingTool
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink*                       AnimLayer_PlayerControllingTool_0                      (Parm, OutParm, NoDestructor)

void UABP_Nikki_AimOffset_C::AnimLayer_PlayerControllingTool(struct FPoseLink* AnimLayer_PlayerControllingTool_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Nikki_AimOffset_C", "AnimLayer_PlayerControllingTool");

	Params::ABP_Nikki_AimOffset_C_AnimLayer_PlayerControllingTool Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AnimLayer_PlayerControllingTool_0 != nullptr)
		*AnimLayer_PlayerControllingTool_0 = std::move(Parms.AnimLayer_PlayerControllingTool_0);
}


// Function ABP_Nikki_AimOffset.ABP_Nikki_AimOffset_C.AnimLayer_PlayerRegularMovement
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink*                       AnimLayer_PlayerRegularMovement_0                      (Parm, OutParm, NoDestructor)

void UABP_Nikki_AimOffset_C::AnimLayer_PlayerRegularMovement(struct FPoseLink* AnimLayer_PlayerRegularMovement_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Nikki_AimOffset_C", "AnimLayer_PlayerRegularMovement");

	Params::ABP_Nikki_AimOffset_C_AnimLayer_PlayerRegularMovement Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AnimLayer_PlayerRegularMovement_0 != nullptr)
		*AnimLayer_PlayerRegularMovement_0 = std::move(Parms.AnimLayer_PlayerRegularMovement_0);
}


// Function ABP_Nikki_AimOffset.ABP_Nikki_AimOffset_C.AnimLayer_SpecialSurfaceMovement
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink*                       AnimLayer_SpecialSurfaceMovement_0                     (Parm, OutParm, NoDestructor)

void UABP_Nikki_AimOffset_C::AnimLayer_SpecialSurfaceMovement(struct FPoseLink* AnimLayer_SpecialSurfaceMovement_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Nikki_AimOffset_C", "AnimLayer_SpecialSurfaceMovement");

	Params::ABP_Nikki_AimOffset_C_AnimLayer_SpecialSurfaceMovement Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AnimLayer_SpecialSurfaceMovement_0 != nullptr)
		*AnimLayer_SpecialSurfaceMovement_0 = std::move(Parms.AnimLayer_SpecialSurfaceMovement_0);
}


// Function ABP_Nikki_AimOffset.ABP_Nikki_AimOffset_C.AnimLayer_StrafeMovement
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink*                       AnimLayer_StrafeMovement_0                             (Parm, OutParm, NoDestructor)

void UABP_Nikki_AimOffset_C::AnimLayer_StrafeMovement(struct FPoseLink* AnimLayer_StrafeMovement_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Nikki_AimOffset_C", "AnimLayer_StrafeMovement");

	Params::ABP_Nikki_AimOffset_C_AnimLayer_StrafeMovement Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AnimLayer_StrafeMovement_0 != nullptr)
		*AnimLayer_StrafeMovement_0 = std::move(Parms.AnimLayer_StrafeMovement_0);
}


// Function ABP_Nikki_AimOffset.ABP_Nikki_AimOffset_C.AnimLayer_UsingCarrierMovement
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink*                       AnimLayer_UsingCarrierMovement_0                       (Parm, OutParm, NoDestructor)

void UABP_Nikki_AimOffset_C::AnimLayer_UsingCarrierMovement(struct FPoseLink* AnimLayer_UsingCarrierMovement_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Nikki_AimOffset_C", "AnimLayer_UsingCarrierMovement");

	Params::ABP_Nikki_AimOffset_C_AnimLayer_UsingCarrierMovement Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AnimLayer_UsingCarrierMovement_0 != nullptr)
		*AnimLayer_UsingCarrierMovement_0 = std::move(Parms.AnimLayer_UsingCarrierMovement_0);
}


// Function ABP_Nikki_AimOffset.ABP_Nikki_AimOffset_C.AnimLayer_WhiteBoxMovement
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink*                       AnimLayer_WhiteBoxMovement_0                           (Parm, OutParm, NoDestructor)

void UABP_Nikki_AimOffset_C::AnimLayer_WhiteBoxMovement(struct FPoseLink* AnimLayer_WhiteBoxMovement_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Nikki_AimOffset_C", "AnimLayer_WhiteBoxMovement");

	Params::ABP_Nikki_AimOffset_C_AnimLayer_WhiteBoxMovement Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AnimLayer_WhiteBoxMovement_0 != nullptr)
		*AnimLayer_WhiteBoxMovement_0 = std::move(Parms.AnimLayer_WhiteBoxMovement_0);
}


// Function ABP_Nikki_AimOffset.ABP_Nikki_AimOffset_C.BlueprintUpdateAnimation
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTimeX                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Nikki_AimOffset_C::BlueprintUpdateAnimation(float DeltaTimeX)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Nikki_AimOffset_C", "BlueprintUpdateAnimation");

	Params::ABP_Nikki_AimOffset_C_BlueprintUpdateAnimation Parms{};

	Parms.DeltaTimeX = DeltaTimeX;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Nikki_AimOffset.ABP_Nikki_AimOffset_C.ExecuteUbergraph_ABP_Nikki_AimOffset
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Nikki_AimOffset_C::ExecuteUbergraph_ABP_Nikki_AimOffset(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Nikki_AimOffset_C", "ExecuteUbergraph_ABP_Nikki_AimOffset");

	Params::ABP_Nikki_AimOffset_C_ExecuteUbergraph_ABP_Nikki_AimOffset Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Nikki_AimOffset.ABP_Nikki_AimOffset_C.OnIsLookAtChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsLookAtValid                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Nikki_AimOffset_C::OnIsLookAtChanged(bool IsLookAtValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Nikki_AimOffset_C", "OnIsLookAtChanged");

	Params::ABP_Nikki_AimOffset_C_OnIsLookAtChanged Parms{};

	Parms.IsLookAtValid = IsLookAtValid;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Nikki_AimOffset.ABP_Nikki_AimOffset_C.SkipUpdateAnimation
// (BlueprintCallable, BlueprintEvent)

void UABP_Nikki_AimOffset_C::SkipUpdateAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Nikki_AimOffset_C", "SkipUpdateAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Nikki_AimOffset.ABP_Nikki_AimOffset_C.UpdateAO_ControlParams
// (Public, BlueprintCallable, BlueprintEvent)

void UABP_Nikki_AimOffset_C::UpdateAO_ControlParams()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Nikki_AimOffset_C", "UpdateAO_ControlParams");

	UObject::ProcessEvent(Func, nullptr);
}

}

