#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: JoystickWidgetAnimated

#include "Basic.hpp"

#include "EUTCJoystickMode_structs.hpp"
#include "F_JoystickCustomConfig_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function JoystickWidgetAnimated.JoystickWidgetAnimated_C.UpdateWidgetProperty
// 0x0078 (0x0078 - 0x0000)
struct JoystickWidgetAnimated_C_UpdateWidgetProperty final
{
public:
	EUTCJoystickMode                              CallFunc_BP_GetJoystickMode_JoystickMode;          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_JoystickCustomConfig                CallFunc_GetCustomConfig_config;                   // 0x0008(0x0068)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UseCustomConfig_bUse;                     // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UseWidgetSize_bUse;                       // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateWidgetSize_Is_Initialized;          // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JoystickWidgetAnimated_C_UpdateWidgetProperty) == 0x000008, "Wrong alignment on JoystickWidgetAnimated_C_UpdateWidgetProperty");
static_assert(sizeof(JoystickWidgetAnimated_C_UpdateWidgetProperty) == 0x000078, "Wrong size on JoystickWidgetAnimated_C_UpdateWidgetProperty");
static_assert(offsetof(JoystickWidgetAnimated_C_UpdateWidgetProperty, CallFunc_BP_GetJoystickMode_JoystickMode) == 0x000000, "Member 'JoystickWidgetAnimated_C_UpdateWidgetProperty::CallFunc_BP_GetJoystickMode_JoystickMode' has a wrong offset!");
static_assert(offsetof(JoystickWidgetAnimated_C_UpdateWidgetProperty, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'JoystickWidgetAnimated_C_UpdateWidgetProperty::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(JoystickWidgetAnimated_C_UpdateWidgetProperty, CallFunc_GetCustomConfig_config) == 0x000008, "Member 'JoystickWidgetAnimated_C_UpdateWidgetProperty::CallFunc_GetCustomConfig_config' has a wrong offset!");
static_assert(offsetof(JoystickWidgetAnimated_C_UpdateWidgetProperty, CallFunc_IsValid_ReturnValue_1) == 0x000070, "Member 'JoystickWidgetAnimated_C_UpdateWidgetProperty::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JoystickWidgetAnimated_C_UpdateWidgetProperty, CallFunc_UseCustomConfig_bUse) == 0x000071, "Member 'JoystickWidgetAnimated_C_UpdateWidgetProperty::CallFunc_UseCustomConfig_bUse' has a wrong offset!");
static_assert(offsetof(JoystickWidgetAnimated_C_UpdateWidgetProperty, CallFunc_BooleanAND_ReturnValue) == 0x000072, "Member 'JoystickWidgetAnimated_C_UpdateWidgetProperty::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(JoystickWidgetAnimated_C_UpdateWidgetProperty, CallFunc_IsValid_ReturnValue_2) == 0x000073, "Member 'JoystickWidgetAnimated_C_UpdateWidgetProperty::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JoystickWidgetAnimated_C_UpdateWidgetProperty, CallFunc_UseWidgetSize_bUse) == 0x000074, "Member 'JoystickWidgetAnimated_C_UpdateWidgetProperty::CallFunc_UseWidgetSize_bUse' has a wrong offset!");
static_assert(offsetof(JoystickWidgetAnimated_C_UpdateWidgetProperty, CallFunc_UpdateWidgetSize_Is_Initialized) == 0x000075, "Member 'JoystickWidgetAnimated_C_UpdateWidgetProperty::CallFunc_UpdateWidgetSize_Is_Initialized' has a wrong offset!");

// Function JoystickWidgetAnimated.JoystickWidgetAnimated_C.SetUTCJoystickComponent
// 0x0008 (0x0008 - 0x0000)
struct JoystickWidgetAnimated_C_SetUTCJoystickComponent final
{
public:
	class UUTCJoystickComponent_C*                InUTCJoystickComponent;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JoystickWidgetAnimated_C_SetUTCJoystickComponent) == 0x000008, "Wrong alignment on JoystickWidgetAnimated_C_SetUTCJoystickComponent");
static_assert(sizeof(JoystickWidgetAnimated_C_SetUTCJoystickComponent) == 0x000008, "Wrong size on JoystickWidgetAnimated_C_SetUTCJoystickComponent");
static_assert(offsetof(JoystickWidgetAnimated_C_SetUTCJoystickComponent, InUTCJoystickComponent) == 0x000000, "Member 'JoystickWidgetAnimated_C_SetUTCJoystickComponent::InUTCJoystickComponent' has a wrong offset!");

// Function JoystickWidgetAnimated.JoystickWidgetAnimated_C.SetCustomJoystick
// 0x0020 (0x0020 - 0x0000)
struct JoystickWidgetAnimated_C_SetCustomJoystick final
{
public:
	TScriptInterface<class IBP_ICustomJoystick_C> customJoystick_0;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JoystickWidgetAnimated_C_SetCustomJoystick) == 0x000008, "Wrong alignment on JoystickWidgetAnimated_C_SetCustomJoystick");
static_assert(sizeof(JoystickWidgetAnimated_C_SetCustomJoystick) == 0x000020, "Wrong size on JoystickWidgetAnimated_C_SetCustomJoystick");
static_assert(offsetof(JoystickWidgetAnimated_C_SetCustomJoystick, customJoystick_0) == 0x000000, "Member 'JoystickWidgetAnimated_C_SetCustomJoystick::customJoystick_0' has a wrong offset!");
static_assert(offsetof(JoystickWidgetAnimated_C_SetCustomJoystick, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000010, "Member 'JoystickWidgetAnimated_C_SetCustomJoystick::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(JoystickWidgetAnimated_C_SetCustomJoystick, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'JoystickWidgetAnimated_C_SetCustomJoystick::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function JoystickWidgetAnimated.JoystickWidgetAnimated_C.Set Size
// 0x0010 (0x0010 - 0x0000)
struct JoystickWidgetAnimated_C_Set_Size final
{
public:
	struct FVector2D                              Size;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JoystickWidgetAnimated_C_Set_Size) == 0x000008, "Wrong alignment on JoystickWidgetAnimated_C_Set_Size");
static_assert(sizeof(JoystickWidgetAnimated_C_Set_Size) == 0x000010, "Wrong size on JoystickWidgetAnimated_C_Set_Size");
static_assert(offsetof(JoystickWidgetAnimated_C_Set_Size, Size) == 0x000000, "Member 'JoystickWidgetAnimated_C_Set_Size::Size' has a wrong offset!");

// Function JoystickWidgetAnimated.JoystickWidgetAnimated_C.Set Max Size
// 0x0008 (0x0008 - 0x0000)
struct JoystickWidgetAnimated_C_Set_Max_Size final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JoystickWidgetAnimated_C_Set_Max_Size) == 0x000008, "Wrong alignment on JoystickWidgetAnimated_C_Set_Max_Size");
static_assert(sizeof(JoystickWidgetAnimated_C_Set_Max_Size) == 0x000008, "Wrong size on JoystickWidgetAnimated_C_Set_Max_Size");
static_assert(offsetof(JoystickWidgetAnimated_C_Set_Max_Size, Value) == 0x000000, "Member 'JoystickWidgetAnimated_C_Set_Max_Size::Value' has a wrong offset!");

// Function JoystickWidgetAnimated.JoystickWidgetAnimated_C.RefreshJoystickConfig
// 0x0010 (0x0010 - 0x0000)
struct JoystickWidgetAnimated_C_RefreshJoystickConfig final
{
public:
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JoystickWidgetAnimated_C_RefreshJoystickConfig) == 0x000008, "Wrong alignment on JoystickWidgetAnimated_C_RefreshJoystickConfig");
static_assert(sizeof(JoystickWidgetAnimated_C_RefreshJoystickConfig) == 0x000010, "Wrong size on JoystickWidgetAnimated_C_RefreshJoystickConfig");
static_assert(offsetof(JoystickWidgetAnimated_C_RefreshJoystickConfig, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000000, "Member 'JoystickWidgetAnimated_C_RefreshJoystickConfig::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(JoystickWidgetAnimated_C_RefreshJoystickConfig, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'JoystickWidgetAnimated_C_RefreshJoystickConfig::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function JoystickWidgetAnimated.JoystickWidgetAnimated_C.On Y Axis Changed
// 0x0008 (0x0008 - 0x0000)
struct JoystickWidgetAnimated_C_On_Y_Axis_Changed final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JoystickWidgetAnimated_C_On_Y_Axis_Changed) == 0x000008, "Wrong alignment on JoystickWidgetAnimated_C_On_Y_Axis_Changed");
static_assert(sizeof(JoystickWidgetAnimated_C_On_Y_Axis_Changed) == 0x000008, "Wrong size on JoystickWidgetAnimated_C_On_Y_Axis_Changed");
static_assert(offsetof(JoystickWidgetAnimated_C_On_Y_Axis_Changed, Value) == 0x000000, "Member 'JoystickWidgetAnimated_C_On_Y_Axis_Changed::Value' has a wrong offset!");

// Function JoystickWidgetAnimated.JoystickWidgetAnimated_C.On X Axis Changed
// 0x0008 (0x0008 - 0x0000)
struct JoystickWidgetAnimated_C_On_X_Axis_Changed final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JoystickWidgetAnimated_C_On_X_Axis_Changed) == 0x000008, "Wrong alignment on JoystickWidgetAnimated_C_On_X_Axis_Changed");
static_assert(sizeof(JoystickWidgetAnimated_C_On_X_Axis_Changed) == 0x000008, "Wrong size on JoystickWidgetAnimated_C_On_X_Axis_Changed");
static_assert(offsetof(JoystickWidgetAnimated_C_On_X_Axis_Changed, Value) == 0x000000, "Member 'JoystickWidgetAnimated_C_On_X_Axis_Changed::Value' has a wrong offset!");

// Function JoystickWidgetAnimated.JoystickWidgetAnimated_C.On Viewport Size Changed
// 0x0020 (0x0020 - 0x0000)
struct JoystickWidgetAnimated_C_On_Viewport_Size_Changed final
{
public:
	struct FVector2D                              Previous_Size;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Updated_Size;                                      // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JoystickWidgetAnimated_C_On_Viewport_Size_Changed) == 0x000008, "Wrong alignment on JoystickWidgetAnimated_C_On_Viewport_Size_Changed");
static_assert(sizeof(JoystickWidgetAnimated_C_On_Viewport_Size_Changed) == 0x000020, "Wrong size on JoystickWidgetAnimated_C_On_Viewport_Size_Changed");
static_assert(offsetof(JoystickWidgetAnimated_C_On_Viewport_Size_Changed, Previous_Size) == 0x000000, "Member 'JoystickWidgetAnimated_C_On_Viewport_Size_Changed::Previous_Size' has a wrong offset!");
static_assert(offsetof(JoystickWidgetAnimated_C_On_Viewport_Size_Changed, Updated_Size) == 0x000010, "Member 'JoystickWidgetAnimated_C_On_Viewport_Size_Changed::Updated_Size' has a wrong offset!");

// Function JoystickWidgetAnimated.JoystickWidgetAnimated_C.On Picker Location Changed
// 0x0018 (0x0018 - 0x0000)
struct JoystickWidgetAnimated_C_On_Picker_Location_Changed final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JoystickWidgetAnimated_C_On_Picker_Location_Changed) == 0x000008, "Wrong alignment on JoystickWidgetAnimated_C_On_Picker_Location_Changed");
static_assert(sizeof(JoystickWidgetAnimated_C_On_Picker_Location_Changed) == 0x000018, "Wrong size on JoystickWidgetAnimated_C_On_Picker_Location_Changed");
static_assert(offsetof(JoystickWidgetAnimated_C_On_Picker_Location_Changed, Location) == 0x000000, "Member 'JoystickWidgetAnimated_C_On_Picker_Location_Changed::Location' has a wrong offset!");

// Function JoystickWidgetAnimated.JoystickWidgetAnimated_C.On Joystick Released
// 0x0018 (0x0018 - 0x0000)
struct JoystickWidgetAnimated_C_On_Joystick_Released final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JoystickWidgetAnimated_C_On_Joystick_Released) == 0x000008, "Wrong alignment on JoystickWidgetAnimated_C_On_Joystick_Released");
static_assert(sizeof(JoystickWidgetAnimated_C_On_Joystick_Released) == 0x000018, "Wrong size on JoystickWidgetAnimated_C_On_Joystick_Released");
static_assert(offsetof(JoystickWidgetAnimated_C_On_Joystick_Released, Location) == 0x000000, "Member 'JoystickWidgetAnimated_C_On_Joystick_Released::Location' has a wrong offset!");

// Function JoystickWidgetAnimated.JoystickWidgetAnimated_C.On Joystick Pressed
// 0x0018 (0x0018 - 0x0000)
struct JoystickWidgetAnimated_C_On_Joystick_Pressed final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JoystickWidgetAnimated_C_On_Joystick_Pressed) == 0x000008, "Wrong alignment on JoystickWidgetAnimated_C_On_Joystick_Pressed");
static_assert(sizeof(JoystickWidgetAnimated_C_On_Joystick_Pressed) == 0x000018, "Wrong size on JoystickWidgetAnimated_C_On_Joystick_Pressed");
static_assert(offsetof(JoystickWidgetAnimated_C_On_Joystick_Pressed, Location) == 0x000000, "Member 'JoystickWidgetAnimated_C_On_Joystick_Pressed::Location' has a wrong offset!");

// Function JoystickWidgetAnimated.JoystickWidgetAnimated_C.On Joystick Location Changed
// 0x0018 (0x0018 - 0x0000)
struct JoystickWidgetAnimated_C_On_Joystick_Location_Changed final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JoystickWidgetAnimated_C_On_Joystick_Location_Changed) == 0x000008, "Wrong alignment on JoystickWidgetAnimated_C_On_Joystick_Location_Changed");
static_assert(sizeof(JoystickWidgetAnimated_C_On_Joystick_Location_Changed) == 0x000018, "Wrong size on JoystickWidgetAnimated_C_On_Joystick_Location_Changed");
static_assert(offsetof(JoystickWidgetAnimated_C_On_Joystick_Location_Changed, Location) == 0x000000, "Member 'JoystickWidgetAnimated_C_On_Joystick_Location_Changed::Location' has a wrong offset!");

// Function JoystickWidgetAnimated.JoystickWidgetAnimated_C.On Axes Changed
// 0x0028 (0x0028 - 0x0000)
struct JoystickWidgetAnimated_C_On_Axes_Changed final
{
public:
	double                                        X_Axis_Value;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Y_Axis_Value;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JoystickWidgetAnimated_C_On_Axes_Changed) == 0x000008, "Wrong alignment on JoystickWidgetAnimated_C_On_Axes_Changed");
static_assert(sizeof(JoystickWidgetAnimated_C_On_Axes_Changed) == 0x000028, "Wrong size on JoystickWidgetAnimated_C_On_Axes_Changed");
static_assert(offsetof(JoystickWidgetAnimated_C_On_Axes_Changed, X_Axis_Value) == 0x000000, "Member 'JoystickWidgetAnimated_C_On_Axes_Changed::X_Axis_Value' has a wrong offset!");
static_assert(offsetof(JoystickWidgetAnimated_C_On_Axes_Changed, Y_Axis_Value) == 0x000008, "Member 'JoystickWidgetAnimated_C_On_Axes_Changed::Y_Axis_Value' has a wrong offset!");
static_assert(offsetof(JoystickWidgetAnimated_C_On_Axes_Changed, Direction) == 0x000010, "Member 'JoystickWidgetAnimated_C_On_Axes_Changed::Direction' has a wrong offset!");

// Function JoystickWidgetAnimated.JoystickWidgetAnimated_C.GetCustomJotstick
// 0x0010 (0x0010 - 0x0000)
struct JoystickWidgetAnimated_C_GetCustomJotstick final
{
public:
	TScriptInterface<class IBP_ICustomJoystick_C> customJoystick_0;                                  // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JoystickWidgetAnimated_C_GetCustomJotstick) == 0x000008, "Wrong alignment on JoystickWidgetAnimated_C_GetCustomJotstick");
static_assert(sizeof(JoystickWidgetAnimated_C_GetCustomJotstick) == 0x000010, "Wrong size on JoystickWidgetAnimated_C_GetCustomJotstick");
static_assert(offsetof(JoystickWidgetAnimated_C_GetCustomJotstick, customJoystick_0) == 0x000000, "Member 'JoystickWidgetAnimated_C_GetCustomJotstick::customJoystick_0' has a wrong offset!");

// Function JoystickWidgetAnimated.JoystickWidgetAnimated_C.ExecuteUbergraph_JoystickWidgetAnimated
// 0x00E0 (0x00E0 - 0x0000)
struct JoystickWidgetAnimated_C_ExecuteUbergraph_JoystickWidgetAnimated final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_Location_3;                           // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Location_2;                           // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Value_2;                              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Location_1;                           // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Event_Size;                                 // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Location;                             // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUTCJoystickComponent_C*                K2Node_Event_InUTCJoystickComponent;               // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Event_Previous_Size;                        // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Event_Updated_Size;                         // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Value_1;                              // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Value;                                // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_X_Axis_Value;                         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Y_Axis_Value;                         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Direction;                            // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JoystickWidgetAnimated_C_ExecuteUbergraph_JoystickWidgetAnimated) == 0x000008, "Wrong alignment on JoystickWidgetAnimated_C_ExecuteUbergraph_JoystickWidgetAnimated");
static_assert(sizeof(JoystickWidgetAnimated_C_ExecuteUbergraph_JoystickWidgetAnimated) == 0x0000E0, "Wrong size on JoystickWidgetAnimated_C_ExecuteUbergraph_JoystickWidgetAnimated");
static_assert(offsetof(JoystickWidgetAnimated_C_ExecuteUbergraph_JoystickWidgetAnimated, EntryPoint) == 0x000000, "Member 'JoystickWidgetAnimated_C_ExecuteUbergraph_JoystickWidgetAnimated::EntryPoint' has a wrong offset!");
static_assert(offsetof(JoystickWidgetAnimated_C_ExecuteUbergraph_JoystickWidgetAnimated, K2Node_Event_Location_3) == 0x000008, "Member 'JoystickWidgetAnimated_C_ExecuteUbergraph_JoystickWidgetAnimated::K2Node_Event_Location_3' has a wrong offset!");
static_assert(offsetof(JoystickWidgetAnimated_C_ExecuteUbergraph_JoystickWidgetAnimated, K2Node_Event_Location_2) == 0x000020, "Member 'JoystickWidgetAnimated_C_ExecuteUbergraph_JoystickWidgetAnimated::K2Node_Event_Location_2' has a wrong offset!");
static_assert(offsetof(JoystickWidgetAnimated_C_ExecuteUbergraph_JoystickWidgetAnimated, K2Node_Event_Value_2) == 0x000038, "Member 'JoystickWidgetAnimated_C_ExecuteUbergraph_JoystickWidgetAnimated::K2Node_Event_Value_2' has a wrong offset!");
static_assert(offsetof(JoystickWidgetAnimated_C_ExecuteUbergraph_JoystickWidgetAnimated, K2Node_Event_Location_1) == 0x000040, "Member 'JoystickWidgetAnimated_C_ExecuteUbergraph_JoystickWidgetAnimated::K2Node_Event_Location_1' has a wrong offset!");
static_assert(offsetof(JoystickWidgetAnimated_C_ExecuteUbergraph_JoystickWidgetAnimated, K2Node_Event_Size) == 0x000058, "Member 'JoystickWidgetAnimated_C_ExecuteUbergraph_JoystickWidgetAnimated::K2Node_Event_Size' has a wrong offset!");
static_assert(offsetof(JoystickWidgetAnimated_C_ExecuteUbergraph_JoystickWidgetAnimated, K2Node_Event_Location) == 0x000068, "Member 'JoystickWidgetAnimated_C_ExecuteUbergraph_JoystickWidgetAnimated::K2Node_Event_Location' has a wrong offset!");
static_assert(offsetof(JoystickWidgetAnimated_C_ExecuteUbergraph_JoystickWidgetAnimated, K2Node_Event_InUTCJoystickComponent) == 0x000080, "Member 'JoystickWidgetAnimated_C_ExecuteUbergraph_JoystickWidgetAnimated::K2Node_Event_InUTCJoystickComponent' has a wrong offset!");
static_assert(offsetof(JoystickWidgetAnimated_C_ExecuteUbergraph_JoystickWidgetAnimated, K2Node_Event_Previous_Size) == 0x000088, "Member 'JoystickWidgetAnimated_C_ExecuteUbergraph_JoystickWidgetAnimated::K2Node_Event_Previous_Size' has a wrong offset!");
static_assert(offsetof(JoystickWidgetAnimated_C_ExecuteUbergraph_JoystickWidgetAnimated, K2Node_Event_Updated_Size) == 0x000098, "Member 'JoystickWidgetAnimated_C_ExecuteUbergraph_JoystickWidgetAnimated::K2Node_Event_Updated_Size' has a wrong offset!");
static_assert(offsetof(JoystickWidgetAnimated_C_ExecuteUbergraph_JoystickWidgetAnimated, K2Node_Event_Value_1) == 0x0000A8, "Member 'JoystickWidgetAnimated_C_ExecuteUbergraph_JoystickWidgetAnimated::K2Node_Event_Value_1' has a wrong offset!");
static_assert(offsetof(JoystickWidgetAnimated_C_ExecuteUbergraph_JoystickWidgetAnimated, K2Node_Event_Value) == 0x0000B0, "Member 'JoystickWidgetAnimated_C_ExecuteUbergraph_JoystickWidgetAnimated::K2Node_Event_Value' has a wrong offset!");
static_assert(offsetof(JoystickWidgetAnimated_C_ExecuteUbergraph_JoystickWidgetAnimated, K2Node_Event_X_Axis_Value) == 0x0000B8, "Member 'JoystickWidgetAnimated_C_ExecuteUbergraph_JoystickWidgetAnimated::K2Node_Event_X_Axis_Value' has a wrong offset!");
static_assert(offsetof(JoystickWidgetAnimated_C_ExecuteUbergraph_JoystickWidgetAnimated, K2Node_Event_Y_Axis_Value) == 0x0000C0, "Member 'JoystickWidgetAnimated_C_ExecuteUbergraph_JoystickWidgetAnimated::K2Node_Event_Y_Axis_Value' has a wrong offset!");
static_assert(offsetof(JoystickWidgetAnimated_C_ExecuteUbergraph_JoystickWidgetAnimated, K2Node_Event_Direction) == 0x0000C8, "Member 'JoystickWidgetAnimated_C_ExecuteUbergraph_JoystickWidgetAnimated::K2Node_Event_Direction' has a wrong offset!");

// Function JoystickWidgetAnimated.JoystickWidgetAnimated_C.BP_Private_InitTouch
// 0x0020 (0x0020 - 0x0000)
struct JoystickWidgetAnimated_C_BP_Private_InitTouch final
{
public:
	class APlayerController*                      Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret;                                               // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerUTCInputComponent_C*          CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_InitTouch_IsValid;                     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JoystickWidgetAnimated_C_BP_Private_InitTouch) == 0x000008, "Wrong alignment on JoystickWidgetAnimated_C_BP_Private_InitTouch");
static_assert(sizeof(JoystickWidgetAnimated_C_BP_Private_InitTouch) == 0x000020, "Wrong size on JoystickWidgetAnimated_C_BP_Private_InitTouch");
static_assert(offsetof(JoystickWidgetAnimated_C_BP_Private_InitTouch, Pawn) == 0x000000, "Member 'JoystickWidgetAnimated_C_BP_Private_InitTouch::Pawn' has a wrong offset!");
static_assert(offsetof(JoystickWidgetAnimated_C_BP_Private_InitTouch, Ret) == 0x000008, "Member 'JoystickWidgetAnimated_C_BP_Private_InitTouch::Ret' has a wrong offset!");
static_assert(offsetof(JoystickWidgetAnimated_C_BP_Private_InitTouch, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'JoystickWidgetAnimated_C_BP_Private_InitTouch::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(JoystickWidgetAnimated_C_BP_Private_InitTouch, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'JoystickWidgetAnimated_C_BP_Private_InitTouch::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(JoystickWidgetAnimated_C_BP_Private_InitTouch, CallFunc_IsValid_ReturnValue_1) == 0x000018, "Member 'JoystickWidgetAnimated_C_BP_Private_InitTouch::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JoystickWidgetAnimated_C_BP_Private_InitTouch, CallFunc_BP_InitTouch_IsValid) == 0x000019, "Member 'JoystickWidgetAnimated_C_BP_Private_InitTouch::CallFunc_BP_InitTouch_IsValid' has a wrong offset!");

// Function JoystickWidgetAnimated.JoystickWidgetAnimated_C.BP_Private_GetPossessPawn
// 0x0018 (0x0018 - 0x0000)
struct JoystickWidgetAnimated_C_BP_Private_GetPossessPawn final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JoystickWidgetAnimated_C_BP_Private_GetPossessPawn) == 0x000008, "Wrong alignment on JoystickWidgetAnimated_C_BP_Private_GetPossessPawn");
static_assert(sizeof(JoystickWidgetAnimated_C_BP_Private_GetPossessPawn) == 0x000018, "Wrong size on JoystickWidgetAnimated_C_BP_Private_GetPossessPawn");
static_assert(offsetof(JoystickWidgetAnimated_C_BP_Private_GetPossessPawn, Pawn) == 0x000000, "Member 'JoystickWidgetAnimated_C_BP_Private_GetPossessPawn::Pawn' has a wrong offset!");
static_assert(offsetof(JoystickWidgetAnimated_C_BP_Private_GetPossessPawn, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'JoystickWidgetAnimated_C_BP_Private_GetPossessPawn::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(JoystickWidgetAnimated_C_BP_Private_GetPossessPawn, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'JoystickWidgetAnimated_C_BP_Private_GetPossessPawn::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");

// Function JoystickWidgetAnimated.JoystickWidgetAnimated_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct JoystickWidgetAnimated_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(JoystickWidgetAnimated_C_GetModuleName) == 0x000008, "Wrong alignment on JoystickWidgetAnimated_C_GetModuleName");
static_assert(sizeof(JoystickWidgetAnimated_C_GetModuleName) == 0x000010, "Wrong size on JoystickWidgetAnimated_C_GetModuleName");
static_assert(offsetof(JoystickWidgetAnimated_C_GetModuleName, ReturnValue) == 0x000000, "Member 'JoystickWidgetAnimated_C_GetModuleName::ReturnValue' has a wrong offset!");

// Function JoystickWidgetAnimated.JoystickWidgetAnimated_C.Get Max Size
// 0x0010 (0x0010 - 0x0000)
struct JoystickWidgetAnimated_C_Get_Max_Size final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Max_Size_Value;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JoystickWidgetAnimated_C_Get_Max_Size) == 0x000008, "Wrong alignment on JoystickWidgetAnimated_C_Get_Max_Size");
static_assert(sizeof(JoystickWidgetAnimated_C_Get_Max_Size) == 0x000010, "Wrong size on JoystickWidgetAnimated_C_Get_Max_Size");
static_assert(offsetof(JoystickWidgetAnimated_C_Get_Max_Size, Value) == 0x000000, "Member 'JoystickWidgetAnimated_C_Get_Max_Size::Value' has a wrong offset!");
static_assert(offsetof(JoystickWidgetAnimated_C_Get_Max_Size, CallFunc_Get_Max_Size_Value) == 0x000008, "Member 'JoystickWidgetAnimated_C_Get_Max_Size::CallFunc_Get_Max_Size_Value' has a wrong offset!");

}

