#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerWhiteBoxMovementComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "EPlayerWhiteBoxType_structs.hpp"
#include "BP_X6ActorComponent_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PlayerWhiteBoxMovementComponent.BP_PlayerWhiteBoxMovementComponent_C
// 0x0070 (0x0118 - 0x00A8)
class UBP_PlayerWhiteBoxMovementComponent_C final : public UBP_X6ActorComponent_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	int32                                         BP_RotationTargetInterpSpeed;                      // 0x00B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BP_MinTurnAroundAngle;                             // 0x00B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BP_AnimInterpSpeed;                                // 0x00B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BP_StrafeMaxSpeed;                                 // 0x00BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<EPlayerWhiteBoxType, class UClass*>      BP_TypeToABPMap;                                   // 0x00C0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UAnimMontage*                           BP_StartCombatAM;                                  // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_PlayerWhiteBoxMovementComponent(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);

	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PlayerWhiteBoxMovementComponent_C">();
	}
	static class UBP_PlayerWhiteBoxMovementComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_PlayerWhiteBoxMovementComponent_C>();
	}
};
static_assert(alignof(UBP_PlayerWhiteBoxMovementComponent_C) == 0x000008, "Wrong alignment on UBP_PlayerWhiteBoxMovementComponent_C");
static_assert(sizeof(UBP_PlayerWhiteBoxMovementComponent_C) == 0x000118, "Wrong size on UBP_PlayerWhiteBoxMovementComponent_C");
static_assert(offsetof(UBP_PlayerWhiteBoxMovementComponent_C, UberGraphFrame) == 0x0000A8, "Member 'UBP_PlayerWhiteBoxMovementComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_PlayerWhiteBoxMovementComponent_C, BP_RotationTargetInterpSpeed) == 0x0000B0, "Member 'UBP_PlayerWhiteBoxMovementComponent_C::BP_RotationTargetInterpSpeed' has a wrong offset!");
static_assert(offsetof(UBP_PlayerWhiteBoxMovementComponent_C, BP_MinTurnAroundAngle) == 0x0000B4, "Member 'UBP_PlayerWhiteBoxMovementComponent_C::BP_MinTurnAroundAngle' has a wrong offset!");
static_assert(offsetof(UBP_PlayerWhiteBoxMovementComponent_C, BP_AnimInterpSpeed) == 0x0000B8, "Member 'UBP_PlayerWhiteBoxMovementComponent_C::BP_AnimInterpSpeed' has a wrong offset!");
static_assert(offsetof(UBP_PlayerWhiteBoxMovementComponent_C, BP_StrafeMaxSpeed) == 0x0000BC, "Member 'UBP_PlayerWhiteBoxMovementComponent_C::BP_StrafeMaxSpeed' has a wrong offset!");
static_assert(offsetof(UBP_PlayerWhiteBoxMovementComponent_C, BP_TypeToABPMap) == 0x0000C0, "Member 'UBP_PlayerWhiteBoxMovementComponent_C::BP_TypeToABPMap' has a wrong offset!");
static_assert(offsetof(UBP_PlayerWhiteBoxMovementComponent_C, BP_StartCombatAM) == 0x000110, "Member 'UBP_PlayerWhiteBoxMovementComponent_C::BP_StartCombatAM' has a wrong offset!");

}

