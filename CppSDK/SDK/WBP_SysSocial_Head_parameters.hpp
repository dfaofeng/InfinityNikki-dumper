#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_SysSocial_Head

#include "Basic.hpp"


namespace SDK::Params
{

// Function WBP_SysSocial_Head.WBP_SysSocial_Head_C.Bp_ScaleSet
// 0x0001 (0x0001 - 0x0000)
struct WBP_SysSocial_Head_C_Bp_ScaleSet final
{
public:
	bool                                          IsMobile;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SysSocial_Head_C_Bp_ScaleSet) == 0x000001, "Wrong alignment on WBP_SysSocial_Head_C_Bp_ScaleSet");
static_assert(sizeof(WBP_SysSocial_Head_C_Bp_ScaleSet) == 0x000001, "Wrong size on WBP_SysSocial_Head_C_Bp_ScaleSet");
static_assert(offsetof(WBP_SysSocial_Head_C_Bp_ScaleSet, IsMobile) == 0x000000, "Member 'WBP_SysSocial_Head_C_Bp_ScaleSet::IsMobile' has a wrong offset!");

// Function WBP_SysSocial_Head.WBP_SysSocial_Head_C.ExecuteUbergraph_WBP_SysSocial_Head
// 0x0020 (0x0020 - 0x0000)
struct WBP_SysSocial_Head_C_ExecuteUbergraph_WBP_SysSocial_Head final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsMobile;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SysSocial_Head_C_ExecuteUbergraph_WBP_SysSocial_Head) == 0x000008, "Wrong alignment on WBP_SysSocial_Head_C_ExecuteUbergraph_WBP_SysSocial_Head");
static_assert(sizeof(WBP_SysSocial_Head_C_ExecuteUbergraph_WBP_SysSocial_Head) == 0x000020, "Wrong size on WBP_SysSocial_Head_C_ExecuteUbergraph_WBP_SysSocial_Head");
static_assert(offsetof(WBP_SysSocial_Head_C_ExecuteUbergraph_WBP_SysSocial_Head, EntryPoint) == 0x000000, "Member 'WBP_SysSocial_Head_C_ExecuteUbergraph_WBP_SysSocial_Head::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_SysSocial_Head_C_ExecuteUbergraph_WBP_SysSocial_Head, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_SysSocial_Head_C_ExecuteUbergraph_WBP_SysSocial_Head::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SysSocial_Head_C_ExecuteUbergraph_WBP_SysSocial_Head, CallFunc_PlayAnimation_ReturnValue_1) == 0x000010, "Member 'WBP_SysSocial_Head_C_ExecuteUbergraph_WBP_SysSocial_Head::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SysSocial_Head_C_ExecuteUbergraph_WBP_SysSocial_Head, K2Node_CustomEvent_IsMobile) == 0x000018, "Member 'WBP_SysSocial_Head_C_ExecuteUbergraph_WBP_SysSocial_Head::K2Node_CustomEvent_IsMobile' has a wrong offset!");

// Function WBP_SysSocial_Head.WBP_SysSocial_Head_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct WBP_SysSocial_Head_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SysSocial_Head_C_GetModuleName) == 0x000008, "Wrong alignment on WBP_SysSocial_Head_C_GetModuleName");
static_assert(sizeof(WBP_SysSocial_Head_C_GetModuleName) == 0x000010, "Wrong size on WBP_SysSocial_Head_C_GetModuleName");
static_assert(offsetof(WBP_SysSocial_Head_C_GetModuleName, ReturnValue) == 0x000000, "Member 'WBP_SysSocial_Head_C_GetModuleName::ReturnValue' has a wrong offset!");

}

