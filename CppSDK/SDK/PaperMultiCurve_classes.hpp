#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PaperMultiCurve

#include "Basic.hpp"

#include "PaperMultiCurve_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class PaperMultiCurve.MultiCurve
// 0x0018 (0x0048 - 0x0030)
class UMultiCurve final : public UCurveBase
{
public:
	TArray<struct FMultiCurveData>                CurveData;                                         // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_40[0x8];                                       // 0x0040(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	float GetValueById(int32 Index_0, float InTime);
	float GetValueByName(const class FString& Name_0, float InTime);

	TArray<float> GetFloatCurves(float InTime) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MultiCurve">();
	}
	static class UMultiCurve* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMultiCurve>();
	}
};
static_assert(alignof(UMultiCurve) == 0x000008, "Wrong alignment on UMultiCurve");
static_assert(sizeof(UMultiCurve) == 0x000048, "Wrong size on UMultiCurve");
static_assert(offsetof(UMultiCurve, CurveData) == 0x000030, "Member 'UMultiCurve::CurveData' has a wrong offset!");

}

