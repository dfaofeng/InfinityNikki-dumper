#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Dlg_LinePrint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"
#include "Slate_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Dlg_LinePrint.WBP_Dlg_LinePrint_C
// 0x03E0 (0x06D0 - 0x02F0)
class UWBP_Dlg_LinePrint_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UX6SmartRichTextBlock*                  Text_Info;                                         // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         Text_Info_Thai;                                    // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FString                                 BP_LineString;                                     // 0x0308(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         BP_Length;                                         // 0x0318(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        BP_Speed;                                          // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           BP_TimerHandle;                                    // 0x0328(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         BP_CurLength;                                      // 0x0330(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             Text_Style_Set;                                    // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_Preview;                                        // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341[0x7];                                      // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              ED_PrintEnd;                                       // 0x0348(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              ED_PrintStart;                                     // 0x0358(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	ETextJustify                                  BP_Justification;                                  // 0x0368(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_369[0x7];                                      // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DefaultStyleRowName;                               // 0x0370(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	double                                        TempTotalPrintTime;                                // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bStartPrint;                                       // 0x0388(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_389[0x3];                                      // 0x0389(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LineHeightPercentage;                              // 0x038C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTextBlockStyle                        DefaultTextStyle_Thai;                             // 0x0390(0x0340)(Edit, BlueprintVisible)

public:
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void SetTextWrapInfo(bool bAutoWrap, double WrapTextAt);
	void ReplaceSpecifics(const class FString& InStr, class FString* OutStr);
	void PreConstruct(bool IsDesignTime);
	void ExecuteUbergraph_WBP_Dlg_LinePrint(int32 EntryPoint);
	void CheckCurLanguageIsThai(bool* bIsThai);
	void BP_SetWordSpeed(double Speed);
	void BP_PrintWord();
	void BP_PrintAll();
	void BP_PreprocessLineText(bool bLetterBoxUI, class FName SpeakerTag, const class FText& SpeakerName, const class FText& SpeakerLine, class FText* OutText);
	void BP_InitText(const class FText& Text);
	void BP_GetTextInfo(class FText* OutPutText);

	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Dlg_LinePrint_C">();
	}
	static class UWBP_Dlg_LinePrint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Dlg_LinePrint_C>();
	}
};
static_assert(alignof(UWBP_Dlg_LinePrint_C) == 0x000010, "Wrong alignment on UWBP_Dlg_LinePrint_C");
static_assert(sizeof(UWBP_Dlg_LinePrint_C) == 0x0006D0, "Wrong size on UWBP_Dlg_LinePrint_C");
static_assert(offsetof(UWBP_Dlg_LinePrint_C, UberGraphFrame) == 0x0002F0, "Member 'UWBP_Dlg_LinePrint_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Dlg_LinePrint_C, Text_Info) == 0x0002F8, "Member 'UWBP_Dlg_LinePrint_C::Text_Info' has a wrong offset!");
static_assert(offsetof(UWBP_Dlg_LinePrint_C, Text_Info_Thai) == 0x000300, "Member 'UWBP_Dlg_LinePrint_C::Text_Info_Thai' has a wrong offset!");
static_assert(offsetof(UWBP_Dlg_LinePrint_C, BP_LineString) == 0x000308, "Member 'UWBP_Dlg_LinePrint_C::BP_LineString' has a wrong offset!");
static_assert(offsetof(UWBP_Dlg_LinePrint_C, BP_Length) == 0x000318, "Member 'UWBP_Dlg_LinePrint_C::BP_Length' has a wrong offset!");
static_assert(offsetof(UWBP_Dlg_LinePrint_C, BP_Speed) == 0x000320, "Member 'UWBP_Dlg_LinePrint_C::BP_Speed' has a wrong offset!");
static_assert(offsetof(UWBP_Dlg_LinePrint_C, BP_TimerHandle) == 0x000328, "Member 'UWBP_Dlg_LinePrint_C::BP_TimerHandle' has a wrong offset!");
static_assert(offsetof(UWBP_Dlg_LinePrint_C, BP_CurLength) == 0x000330, "Member 'UWBP_Dlg_LinePrint_C::BP_CurLength' has a wrong offset!");
static_assert(offsetof(UWBP_Dlg_LinePrint_C, Text_Style_Set) == 0x000338, "Member 'UWBP_Dlg_LinePrint_C::Text_Style_Set' has a wrong offset!");
static_assert(offsetof(UWBP_Dlg_LinePrint_C, BP_Preview) == 0x000340, "Member 'UWBP_Dlg_LinePrint_C::BP_Preview' has a wrong offset!");
static_assert(offsetof(UWBP_Dlg_LinePrint_C, ED_PrintEnd) == 0x000348, "Member 'UWBP_Dlg_LinePrint_C::ED_PrintEnd' has a wrong offset!");
static_assert(offsetof(UWBP_Dlg_LinePrint_C, ED_PrintStart) == 0x000358, "Member 'UWBP_Dlg_LinePrint_C::ED_PrintStart' has a wrong offset!");
static_assert(offsetof(UWBP_Dlg_LinePrint_C, BP_Justification) == 0x000368, "Member 'UWBP_Dlg_LinePrint_C::BP_Justification' has a wrong offset!");
static_assert(offsetof(UWBP_Dlg_LinePrint_C, DefaultStyleRowName) == 0x000370, "Member 'UWBP_Dlg_LinePrint_C::DefaultStyleRowName' has a wrong offset!");
static_assert(offsetof(UWBP_Dlg_LinePrint_C, TempTotalPrintTime) == 0x000380, "Member 'UWBP_Dlg_LinePrint_C::TempTotalPrintTime' has a wrong offset!");
static_assert(offsetof(UWBP_Dlg_LinePrint_C, bStartPrint) == 0x000388, "Member 'UWBP_Dlg_LinePrint_C::bStartPrint' has a wrong offset!");
static_assert(offsetof(UWBP_Dlg_LinePrint_C, LineHeightPercentage) == 0x00038C, "Member 'UWBP_Dlg_LinePrint_C::LineHeightPercentage' has a wrong offset!");
static_assert(offsetof(UWBP_Dlg_LinePrint_C, DefaultTextStyle_Thai) == 0x000390, "Member 'UWBP_Dlg_LinePrint_C::DefaultTextStyle_Thai' has a wrong offset!");

}

