#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NikkiAdvGM_BP

#include "Basic.hpp"


namespace SDK::Params
{

// Function NikkiAdvGM_BP.NikkiAdvGM_BP_C.ExecuteUbergraph_NikkiAdvGM_BP
// 0x0004 (0x0004 - 0x0000)
struct NikkiAdvGM_BP_C_ExecuteUbergraph_NikkiAdvGM_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NikkiAdvGM_BP_C_ExecuteUbergraph_NikkiAdvGM_BP) == 0x000004, "Wrong alignment on NikkiAdvGM_BP_C_ExecuteUbergraph_NikkiAdvGM_BP");
static_assert(sizeof(NikkiAdvGM_BP_C_ExecuteUbergraph_NikkiAdvGM_BP) == 0x000004, "Wrong size on NikkiAdvGM_BP_C_ExecuteUbergraph_NikkiAdvGM_BP");
static_assert(offsetof(NikkiAdvGM_BP_C_ExecuteUbergraph_NikkiAdvGM_BP, EntryPoint) == 0x000000, "Member 'NikkiAdvGM_BP_C_ExecuteUbergraph_NikkiAdvGM_BP::EntryPoint' has a wrong offset!");

// Function NikkiAdvGM_BP.NikkiAdvGM_BP_C.ChoosePlayerStart
// 0x0018 (0x0018 - 0x0000)
struct NikkiAdvGM_BP_C_ChoosePlayerStart final
{
public:
	class AController*                            Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_ChoosePlayerStart_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NikkiAdvGM_BP_C_ChoosePlayerStart) == 0x000008, "Wrong alignment on NikkiAdvGM_BP_C_ChoosePlayerStart");
static_assert(sizeof(NikkiAdvGM_BP_C_ChoosePlayerStart) == 0x000018, "Wrong size on NikkiAdvGM_BP_C_ChoosePlayerStart");
static_assert(offsetof(NikkiAdvGM_BP_C_ChoosePlayerStart, Player) == 0x000000, "Member 'NikkiAdvGM_BP_C_ChoosePlayerStart::Player' has a wrong offset!");
static_assert(offsetof(NikkiAdvGM_BP_C_ChoosePlayerStart, ReturnValue) == 0x000008, "Member 'NikkiAdvGM_BP_C_ChoosePlayerStart::ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAdvGM_BP_C_ChoosePlayerStart, CallFunc_ChoosePlayerStart_ReturnValue) == 0x000010, "Member 'NikkiAdvGM_BP_C_ChoosePlayerStart::CallFunc_ChoosePlayerStart_ReturnValue' has a wrong offset!");

// Function NikkiAdvGM_BP.NikkiAdvGM_BP_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct NikkiAdvGM_BP_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(NikkiAdvGM_BP_C_GetModuleName) == 0x000008, "Wrong alignment on NikkiAdvGM_BP_C_GetModuleName");
static_assert(sizeof(NikkiAdvGM_BP_C_GetModuleName) == 0x000010, "Wrong size on NikkiAdvGM_BP_C_GetModuleName");
static_assert(offsetof(NikkiAdvGM_BP_C_GetModuleName, ReturnValue) == 0x000000, "Member 'NikkiAdvGM_BP_C_GetModuleName::ReturnValue' has a wrong offset!");

}

