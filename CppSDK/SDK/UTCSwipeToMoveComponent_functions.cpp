#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UTCSwipeToMoveComponent

#include "Basic.hpp"

#include "UTCSwipeToMoveComponent_classes.hpp"
#include "UTCSwipeToMoveComponent_parameters.hpp"


namespace SDK
{

// Function UTCSwipeToMoveComponent.UTCSwipeToMoveComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCSwipeToMoveComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCSwipeToMoveComponent_C", "ReceiveTick");

	Params::UTCSwipeToMoveComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCSwipeToMoveComponent.UTCSwipeToMoveComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UUTCSwipeToMoveComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCSwipeToMoveComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UTCSwipeToMoveComponent.UTCSwipeToMoveComponent_C.Recalculate Delta
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector&                   Current_Location                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         Target_Delta_0                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         Current_Delta_0                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCSwipeToMoveComponent_C::Recalculate_Delta(const struct FVector& Current_Location, struct FVector* Target_Delta_0, struct FVector* Current_Delta_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCSwipeToMoveComponent_C", "Recalculate Delta");

	Params::UTCSwipeToMoveComponent_C_Recalculate_Delta Parms{};

	Parms.Current_Location = std::move(Current_Location);

	UObject::ProcessEvent(Func, &Parms);

	if (Target_Delta_0 != nullptr)
		*Target_Delta_0 = std::move(Parms.Target_Delta_0);

	if (Current_Delta_0 != nullptr)
		*Current_Delta_0 = std::move(Parms.Current_Delta_0);
}


// Function UTCSwipeToMoveComponent.UTCSwipeToMoveComponent_C.On Released_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCSwipeToMoveComponent_C::On_Released_Event(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCSwipeToMoveComponent_C", "On Released_Event");

	Params::UTCSwipeToMoveComponent_C_On_Released_Event Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCSwipeToMoveComponent.UTCSwipeToMoveComponent_C.On Pressed_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCSwipeToMoveComponent_C::On_Pressed_Event(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCSwipeToMoveComponent_C", "On Pressed_Event");

	Params::UTCSwipeToMoveComponent_C_On_Pressed_Event Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCSwipeToMoveComponent.UTCSwipeToMoveComponent_C.On Event Touch Released
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETouchIndex                             FingerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCSwipeToMoveComponent_C::On_Event_Touch_Released(const struct FVector& Location, ETouchIndex FingerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCSwipeToMoveComponent_C", "On Event Touch Released");

	Params::UTCSwipeToMoveComponent_C_On_Event_Touch_Released Parms{};

	Parms.Location = std::move(Location);
	Parms.FingerIndex = FingerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCSwipeToMoveComponent.UTCSwipeToMoveComponent_C.On Event Touch Pressed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETouchIndex                             FingerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCSwipeToMoveComponent_C::On_Event_Touch_Pressed(const struct FVector& Location, ETouchIndex FingerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCSwipeToMoveComponent_C", "On Event Touch Pressed");

	Params::UTCSwipeToMoveComponent_C_On_Event_Touch_Pressed Parms{};

	Parms.Location = std::move(Location);
	Parms.FingerIndex = FingerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCSwipeToMoveComponent.UTCSwipeToMoveComponent_C.On Event Touch Moved
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETouchIndex                             FingerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCSwipeToMoveComponent_C::On_Event_Touch_Moved(const struct FVector& Location, ETouchIndex FingerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCSwipeToMoveComponent_C", "On Event Touch Moved");

	Params::UTCSwipeToMoveComponent_C_On_Event_Touch_Moved Parms{};

	Parms.Location = std::move(Location);
	Parms.FingerIndex = FingerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCSwipeToMoveComponent.UTCSwipeToMoveComponent_C.On Event Touch Canceled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETouchIndex                             FingerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCSwipeToMoveComponent_C::On_Event_Touch_Canceled(const struct FVector& Location, ETouchIndex FingerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCSwipeToMoveComponent_C", "On Event Touch Canceled");

	Params::UTCSwipeToMoveComponent_C_On_Event_Touch_Canceled Parms{};

	Parms.Location = std::move(Location);
	Parms.FingerIndex = FingerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCSwipeToMoveComponent.UTCSwipeToMoveComponent_C.On Delta Y Changed_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Value_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCSwipeToMoveComponent_C::On_Delta_Y_Changed_Event(double Value_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCSwipeToMoveComponent_C", "On Delta Y Changed_Event");

	Params::UTCSwipeToMoveComponent_C_On_Delta_Y_Changed_Event Parms{};

	Parms.Value_0 = Value_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCSwipeToMoveComponent.UTCSwipeToMoveComponent_C.On Delta X Changed_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Value_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCSwipeToMoveComponent_C::On_Delta_X_Changed_Event(double Value_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCSwipeToMoveComponent_C", "On Delta X Changed_Event");

	Params::UTCSwipeToMoveComponent_C_On_Delta_X_Changed_Event Parms{};

	Parms.Value_0 = Value_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCSwipeToMoveComponent.UTCSwipeToMoveComponent_C.On Delta Location Changed_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Value_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCSwipeToMoveComponent_C::On_Delta_Location_Changed_Event(const struct FVector& Value_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCSwipeToMoveComponent_C", "On Delta Location Changed_Event");

	Params::UTCSwipeToMoveComponent_C_On_Delta_Location_Changed_Event Parms{};

	Parms.Value_0 = std::move(Value_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCSwipeToMoveComponent.UTCSwipeToMoveComponent_C.On Canceled_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETouchIndex                             FingerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCSwipeToMoveComponent_C::On_Canceled_Event(const struct FVector& Location, ETouchIndex FingerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCSwipeToMoveComponent_C", "On Canceled_Event");

	Params::UTCSwipeToMoveComponent_C_On_Canceled_Event Parms{};

	Parms.Location = std::move(Location);
	Parms.FingerIndex = FingerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCSwipeToMoveComponent.UTCSwipeToMoveComponent_C.ModifyCameraInput
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   RawDeltaLocation                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         ModifyedLocation                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCSwipeToMoveComponent_C::ModifyCameraInput(const struct FVector& RawDeltaLocation, struct FVector* ModifyedLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCSwipeToMoveComponent_C", "ModifyCameraInput");

	Params::UTCSwipeToMoveComponent_C_ModifyCameraInput Parms{};

	Parms.RawDeltaLocation = std::move(RawDeltaLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (ModifyedLocation != nullptr)
		*ModifyedLocation = std::move(Parms.ModifyedLocation);
}


// Function UTCSwipeToMoveComponent.UTCSwipeToMoveComponent_C.ExecuteUbergraph_UTCSwipeToMoveComponent
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCSwipeToMoveComponent_C::ExecuteUbergraph_UTCSwipeToMoveComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCSwipeToMoveComponent_C", "ExecuteUbergraph_UTCSwipeToMoveComponent");

	Params::UTCSwipeToMoveComponent_C_ExecuteUbergraph_UTCSwipeToMoveComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCSwipeToMoveComponent.UTCSwipeToMoveComponent_C.BindEvents
// (BlueprintCallable, BlueprintEvent)

void UUTCSwipeToMoveComponent_C::BindEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCSwipeToMoveComponent_C", "BindEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UTCSwipeToMoveComponent.UTCSwipeToMoveComponent_C.AdjustLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector&                   Pos                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   res                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCSwipeToMoveComponent_C::AdjustLocation(const struct FVector& Pos, bool* res)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCSwipeToMoveComponent_C", "AdjustLocation");

	Params::UTCSwipeToMoveComponent_C_AdjustLocation Parms{};

	Parms.Pos = std::move(Pos);

	UObject::ProcessEvent(Func, &Parms);

	if (res != nullptr)
		*res = Parms.res;
}


// Function UTCSwipeToMoveComponent.UTCSwipeToMoveComponent_C.AddEventInput
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             PropertyName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Value_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsAccumulate                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCSwipeToMoveComponent_C::AddEventInput(class FName PropertyName, const struct FVector& Value_0, bool IsAccumulate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCSwipeToMoveComponent_C", "AddEventInput");

	Params::UTCSwipeToMoveComponent_C_AddEventInput Parms{};

	Parms.PropertyName = PropertyName;
	Parms.Value_0 = std::move(Value_0);
	Parms.IsAccumulate = IsAccumulate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCSwipeToMoveComponent.UTCSwipeToMoveComponent_C.GetModuleName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UUTCSwipeToMoveComponent_C::GetModuleName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCSwipeToMoveComponent_C", "GetModuleName");

	Params::UTCSwipeToMoveComponent_C_GetModuleName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

