#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIPF

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK
{

// Enum UIPF.EInteractiveType
// NumValues: 0x0009
enum class EInteractiveType : uint8
{
	EPlayer                                  = 0,
	ESkill1                                  = 1,
	ESkill2                                  = 2,
	ESkill3                                  = 3,
	ESkill4                                  = 4,
	ESkill5                                  = 5,
	ESkill6                                  = 6,
	ESkill7                                  = 7,
	EInteractiveType_MAX                     = 8,
};

// Enum UIPF.EUIPFManagerType
// NumValues: 0x0003
enum class EUIPFManagerType : uint8
{
	FX                                       = 0,
	Foliage                                  = 1,
	EUIPFManagerType_MAX                     = 2,
};

// ScriptStruct UIPF.UIPFType
// 0x0028 (0x0030 - 0x0008)
struct FUIPFType final : public FTableRowBase
{
public:
	class UStaticMesh*                            StaticMesh;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                          SkeletalMesh;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CollideWithWorldStatic;                            // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CollideWithWorldDynamic;                           // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CollideWithPhysicsFoliage;                         // 0x001A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          KinematicBlocksPawn;                               // 0x001B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            StaticCollisionOverride;                           // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDebugMakeColliderVisible;                         // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FUIPFType) == 0x000008, "Wrong alignment on FUIPFType");
static_assert(sizeof(FUIPFType) == 0x000030, "Wrong size on FUIPFType");
static_assert(offsetof(FUIPFType, StaticMesh) == 0x000008, "Member 'FUIPFType::StaticMesh' has a wrong offset!");
static_assert(offsetof(FUIPFType, SkeletalMesh) == 0x000010, "Member 'FUIPFType::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(FUIPFType, CollideWithWorldStatic) == 0x000018, "Member 'FUIPFType::CollideWithWorldStatic' has a wrong offset!");
static_assert(offsetof(FUIPFType, CollideWithWorldDynamic) == 0x000019, "Member 'FUIPFType::CollideWithWorldDynamic' has a wrong offset!");
static_assert(offsetof(FUIPFType, CollideWithPhysicsFoliage) == 0x00001A, "Member 'FUIPFType::CollideWithPhysicsFoliage' has a wrong offset!");
static_assert(offsetof(FUIPFType, KinematicBlocksPawn) == 0x00001B, "Member 'FUIPFType::KinematicBlocksPawn' has a wrong offset!");
static_assert(offsetof(FUIPFType, StaticCollisionOverride) == 0x000020, "Member 'FUIPFType::StaticCollisionOverride' has a wrong offset!");
static_assert(offsetof(FUIPFType, bDebugMakeColliderVisible) == 0x000028, "Member 'FUIPFType::bDebugMakeColliderVisible' has a wrong offset!");

}

