#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_AbilityBase

#include "Basic.hpp"

#include "GA_AbilityBase_classes.hpp"
#include "GA_AbilityBase_parameters.hpp"


namespace SDK
{

// Function GA_AbilityBase.GA_AbilityBase_C.BP_GetActorHP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double*                                 HP                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_AbilityBase_C::BP_GetActorHP(double* HP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_AbilityBase_C", "BP_GetActorHP");

	Params::GA_AbilityBase_C_BP_GetActorHP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HP != nullptr)
		*HP = Parms.HP;
}


// Function GA_AbilityBase.GA_AbilityBase_C.BP_GetActorMaxHP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double*                                 MaxHP                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_AbilityBase_C::BP_GetActorMaxHP(double* MaxHP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_AbilityBase_C", "BP_GetActorMaxHP");

	Params::GA_AbilityBase_C_BP_GetActorMaxHP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MaxHP != nullptr)
		*MaxHP = Parms.MaxHP;
}


// Function GA_AbilityBase.GA_AbilityBase_C.BP_GetCD
// (Public, BlueprintCallable, BlueprintEvent, BlueprintPure)

void UGA_AbilityBase_C::BP_GetCD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_AbilityBase_C", "BP_GetCD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_AbilityBase.GA_AbilityBase_C.BP_GetTargetActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor**                          TargetActor                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGA_AbilityBase_C::BP_GetTargetActor(class AActor** TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_AbilityBase_C", "BP_GetTargetActor");

	Params::GA_AbilityBase_C_BP_GetTargetActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TargetActor != nullptr)
		*TargetActor = Parms.TargetActor;
}


// Function GA_AbilityBase.GA_AbilityBase_C.BP_OnActivateAbility
// (Public, BlueprintCallable, BlueprintEvent)

void UGA_AbilityBase_C::BP_OnActivateAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_AbilityBase_C", "BP_OnActivateAbility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_AbilityBase.GA_AbilityBase_C.BP_OnEndAbilityExcludeJumpToGA
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bWasCancelled                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_AbilityBase_C::BP_OnEndAbilityExcludeJumpToGA(bool bWasCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_AbilityBase_C", "BP_OnEndAbilityExcludeJumpToGA");

	Params::GA_AbilityBase_C_BP_OnEndAbilityExcludeJumpToGA Parms{};

	Parms.bWasCancelled = bWasCancelled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_AbilityBase.GA_AbilityBase_C.BP_PlayLevelSequence
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ULevelSequence*                   SequenceAsset                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    HideHUD                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FTransform&                Transform                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FMovieSceneSequencePlaybackSettings&PlaybackSetting                                        (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UGA_AbilityBase_C::BP_PlayLevelSequence(class ULevelSequence* SequenceAsset, bool HideHUD, const struct FTransform& Transform, const struct FMovieSceneSequencePlaybackSettings& PlaybackSetting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_AbilityBase_C", "BP_PlayLevelSequence");

	Params::GA_AbilityBase_C_BP_PlayLevelSequence Parms{};

	Parms.SequenceAsset = SequenceAsset;
	Parms.HideHUD = HideHUD;
	Parms.Transform = std::move(Transform);
	Parms.PlaybackSetting = std::move(PlaybackSetting);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_AbilityBase.GA_AbilityBase_C.BP_StopCurrentLevelSequence
// (Public, BlueprintCallable, BlueprintEvent)

void UGA_AbilityBase_C::BP_StopCurrentLevelSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_AbilityBase_C", "BP_StopCurrentLevelSequence");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_AbilityBase.GA_AbilityBase_C.ExecuteUbergraph_GA_AbilityBase
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_AbilityBase_C::ExecuteUbergraph_GA_AbilityBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_AbilityBase_C", "ExecuteUbergraph_GA_AbilityBase");

	Params::GA_AbilityBase_C_ExecuteUbergraph_GA_AbilityBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_AbilityBase.GA_AbilityBase_C.JumpToAbility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              TriggerTag                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayEventData&        Payload                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void UGA_AbilityBase_C::JumpToAbility(const struct FGameplayTag& TriggerTag, const struct FGameplayEventData& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_AbilityBase_C", "JumpToAbility");

	Params::GA_AbilityBase_C_JumpToAbility Parms{};

	Parms.TriggerTag = std::move(TriggerTag);
	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_AbilityBase.GA_AbilityBase_C.K2_ActivateAbility
// (Event, Protected, BlueprintEvent)

void UGA_AbilityBase_C::K2_ActivateAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_AbilityBase_C", "K2_ActivateAbility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_AbilityBase.GA_AbilityBase_C.K2_OnEndAbility
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bWasCancelled                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_AbilityBase_C::K2_OnEndAbility(bool bWasCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_AbilityBase_C", "K2_OnEndAbility");

	Params::GA_AbilityBase_C_K2_OnEndAbility Parms{};

	Parms.bWasCancelled = bWasCancelled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_AbilityBase.GA_AbilityBase_C.GetModuleName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UGA_AbilityBase_C::GetModuleName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_AbilityBase_C", "GetModuleName");

	Params::GA_AbilityBase_C_GetModuleName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

