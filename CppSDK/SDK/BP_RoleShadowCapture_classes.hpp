#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RoleShadowCapture

#include "Basic.hpp"

#include "PhysicsCore_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_RoleShadowCapture.BP_RoleShadowCapture_C
// 0x0110 (0x04B8 - 0x03A8)
class ABP_RoleShadowCapture_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      Niagara;                                           // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal;                                             // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   PlaneShadow;                                       // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CubeShadow;                                        // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPaperMeshCaptureComponent*             PaperMeshCapture;                                  // 0x03D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneCaptureComponent2D*               LandingShadowCapture;                              // 0x03D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x03E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CubeMID;                                           // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               PlaneMID;                                          // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFalling;                                         // 0x03F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanFadeinInsetShadow;                              // 0x03F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FA[0x6];                                      // 0x03FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DisappearanceHeightOfLocalizedShadow;              // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DisappearanceSpeedOfLocalizedShadow;               // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AppearanceHeightOfLocalizedShadow;                 // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AppearanceSpeedOfLocalizedShadow;                  // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             OuterCharacter;                                    // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	float                                         ShadowRadius;                                      // 0x0428(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bOnTheRise;                                        // 0x042C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42D[0x3];                                      // 0x042D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        GroundDistance;                                    // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentShadowOpacity;                              // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentRealShadowOpacity;                          // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentLocalizedShadowOpacity;                     // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerAnimStatesComponent_C*        AnimState;                                         // 0x0450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentLocalizedPlaneShadowOpacity;                // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentTraceGroundValue;                           // 0x0460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentTraceWaterValue;                            // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsShadowTraceSucceed;                              // 0x0470(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTraceOnWater;                                    // 0x0471(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_472[0x6];                                      // 0x0472(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CurrentFloorLocation;                              // 0x0478(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CurrentFloorRotation;                              // 0x0490(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         FloorRotateInterpSpeed;                            // 0x04A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4AC[0x4];                                      // 0x04AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerShadowDecalProcessor*            Processor;                                         // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void BP_GetFloorLocation(double Height, bool Lerp, struct FVector* ResultValue, struct FRotator* RotationValue);
	void BP_UpdateFloorRotation();
	void CaculateShadowOpaccity(double CurrentOpacity, double* NewOpacity);
	void CheckFloor(double Height);
	void ExecuteUbergraph_BP_RoleShadowCapture(int32 EntryPoint);
	void GetHoldHandOtherActor(class AActor* Actor, class AActor** OtherActor);
	void IsInLevelSequence(bool* Result);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void SetCastShadow(bool InCastShadowValue);
	void SetSetScaleParam(bool InCastShadowValue);
	void SoftShadowDecal();
	void TraceGroundDistance(double* Distance, struct FVector* Location, class UPhysicalMaterial** PhysMat);
	void UpdateCapture();

	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_RoleShadowCapture_C">();
	}
	static class ABP_RoleShadowCapture_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_RoleShadowCapture_C>();
	}
};
static_assert(alignof(ABP_RoleShadowCapture_C) == 0x000008, "Wrong alignment on ABP_RoleShadowCapture_C");
static_assert(sizeof(ABP_RoleShadowCapture_C) == 0x0004B8, "Wrong size on ABP_RoleShadowCapture_C");
static_assert(offsetof(ABP_RoleShadowCapture_C, UberGraphFrame) == 0x0003A8, "Member 'ABP_RoleShadowCapture_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_RoleShadowCapture_C, Niagara) == 0x0003B0, "Member 'ABP_RoleShadowCapture_C::Niagara' has a wrong offset!");
static_assert(offsetof(ABP_RoleShadowCapture_C, Decal) == 0x0003B8, "Member 'ABP_RoleShadowCapture_C::Decal' has a wrong offset!");
static_assert(offsetof(ABP_RoleShadowCapture_C, PlaneShadow) == 0x0003C0, "Member 'ABP_RoleShadowCapture_C::PlaneShadow' has a wrong offset!");
static_assert(offsetof(ABP_RoleShadowCapture_C, CubeShadow) == 0x0003C8, "Member 'ABP_RoleShadowCapture_C::CubeShadow' has a wrong offset!");
static_assert(offsetof(ABP_RoleShadowCapture_C, PaperMeshCapture) == 0x0003D0, "Member 'ABP_RoleShadowCapture_C::PaperMeshCapture' has a wrong offset!");
static_assert(offsetof(ABP_RoleShadowCapture_C, LandingShadowCapture) == 0x0003D8, "Member 'ABP_RoleShadowCapture_C::LandingShadowCapture' has a wrong offset!");
static_assert(offsetof(ABP_RoleShadowCapture_C, DefaultSceneRoot) == 0x0003E0, "Member 'ABP_RoleShadowCapture_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_RoleShadowCapture_C, CubeMID) == 0x0003E8, "Member 'ABP_RoleShadowCapture_C::CubeMID' has a wrong offset!");
static_assert(offsetof(ABP_RoleShadowCapture_C, PlaneMID) == 0x0003F0, "Member 'ABP_RoleShadowCapture_C::PlaneMID' has a wrong offset!");
static_assert(offsetof(ABP_RoleShadowCapture_C, IsFalling) == 0x0003F8, "Member 'ABP_RoleShadowCapture_C::IsFalling' has a wrong offset!");
static_assert(offsetof(ABP_RoleShadowCapture_C, CanFadeinInsetShadow) == 0x0003F9, "Member 'ABP_RoleShadowCapture_C::CanFadeinInsetShadow' has a wrong offset!");
static_assert(offsetof(ABP_RoleShadowCapture_C, DisappearanceHeightOfLocalizedShadow) == 0x000400, "Member 'ABP_RoleShadowCapture_C::DisappearanceHeightOfLocalizedShadow' has a wrong offset!");
static_assert(offsetof(ABP_RoleShadowCapture_C, DisappearanceSpeedOfLocalizedShadow) == 0x000408, "Member 'ABP_RoleShadowCapture_C::DisappearanceSpeedOfLocalizedShadow' has a wrong offset!");
static_assert(offsetof(ABP_RoleShadowCapture_C, AppearanceHeightOfLocalizedShadow) == 0x000410, "Member 'ABP_RoleShadowCapture_C::AppearanceHeightOfLocalizedShadow' has a wrong offset!");
static_assert(offsetof(ABP_RoleShadowCapture_C, AppearanceSpeedOfLocalizedShadow) == 0x000418, "Member 'ABP_RoleShadowCapture_C::AppearanceSpeedOfLocalizedShadow' has a wrong offset!");
static_assert(offsetof(ABP_RoleShadowCapture_C, OuterCharacter) == 0x000420, "Member 'ABP_RoleShadowCapture_C::OuterCharacter' has a wrong offset!");
static_assert(offsetof(ABP_RoleShadowCapture_C, ShadowRadius) == 0x000428, "Member 'ABP_RoleShadowCapture_C::ShadowRadius' has a wrong offset!");
static_assert(offsetof(ABP_RoleShadowCapture_C, bOnTheRise) == 0x00042C, "Member 'ABP_RoleShadowCapture_C::bOnTheRise' has a wrong offset!");
static_assert(offsetof(ABP_RoleShadowCapture_C, GroundDistance) == 0x000430, "Member 'ABP_RoleShadowCapture_C::GroundDistance' has a wrong offset!");
static_assert(offsetof(ABP_RoleShadowCapture_C, CurrentShadowOpacity) == 0x000438, "Member 'ABP_RoleShadowCapture_C::CurrentShadowOpacity' has a wrong offset!");
static_assert(offsetof(ABP_RoleShadowCapture_C, CurrentRealShadowOpacity) == 0x000440, "Member 'ABP_RoleShadowCapture_C::CurrentRealShadowOpacity' has a wrong offset!");
static_assert(offsetof(ABP_RoleShadowCapture_C, CurrentLocalizedShadowOpacity) == 0x000448, "Member 'ABP_RoleShadowCapture_C::CurrentLocalizedShadowOpacity' has a wrong offset!");
static_assert(offsetof(ABP_RoleShadowCapture_C, AnimState) == 0x000450, "Member 'ABP_RoleShadowCapture_C::AnimState' has a wrong offset!");
static_assert(offsetof(ABP_RoleShadowCapture_C, CurrentLocalizedPlaneShadowOpacity) == 0x000458, "Member 'ABP_RoleShadowCapture_C::CurrentLocalizedPlaneShadowOpacity' has a wrong offset!");
static_assert(offsetof(ABP_RoleShadowCapture_C, CurrentTraceGroundValue) == 0x000460, "Member 'ABP_RoleShadowCapture_C::CurrentTraceGroundValue' has a wrong offset!");
static_assert(offsetof(ABP_RoleShadowCapture_C, CurrentTraceWaterValue) == 0x000468, "Member 'ABP_RoleShadowCapture_C::CurrentTraceWaterValue' has a wrong offset!");
static_assert(offsetof(ABP_RoleShadowCapture_C, IsShadowTraceSucceed) == 0x000470, "Member 'ABP_RoleShadowCapture_C::IsShadowTraceSucceed' has a wrong offset!");
static_assert(offsetof(ABP_RoleShadowCapture_C, IsTraceOnWater) == 0x000471, "Member 'ABP_RoleShadowCapture_C::IsTraceOnWater' has a wrong offset!");
static_assert(offsetof(ABP_RoleShadowCapture_C, CurrentFloorLocation) == 0x000478, "Member 'ABP_RoleShadowCapture_C::CurrentFloorLocation' has a wrong offset!");
static_assert(offsetof(ABP_RoleShadowCapture_C, CurrentFloorRotation) == 0x000490, "Member 'ABP_RoleShadowCapture_C::CurrentFloorRotation' has a wrong offset!");
static_assert(offsetof(ABP_RoleShadowCapture_C, FloorRotateInterpSpeed) == 0x0004A8, "Member 'ABP_RoleShadowCapture_C::FloorRotateInterpSpeed' has a wrong offset!");
static_assert(offsetof(ABP_RoleShadowCapture_C, Processor) == 0x0004B0, "Member 'ABP_RoleShadowCapture_C::Processor' has a wrong offset!");

}

