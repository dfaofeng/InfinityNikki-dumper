#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_CheckpointBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK::Params
{

// Function ABP_CheckpointBase.ABP_CheckpointBase_C.OnUpdate
// 0x0040 (0x0040 - 0x0000)
struct ABP_CheckpointBase_C_OnUpdate final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FAnimationStateMachineReference        CallFunc_ConvertToAnimationStateMachinePure_AnimationState; // 0x0020(0x0010)(NoDestructor)
	bool                                          CallFunc_ConvertToAnimationStateMachinePure_Result; // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetState_ReturnValue;                     // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_CheckpointBase_C_OnUpdate) == 0x000008, "Wrong alignment on ABP_CheckpointBase_C_OnUpdate");
static_assert(sizeof(ABP_CheckpointBase_C_OnUpdate) == 0x000040, "Wrong size on ABP_CheckpointBase_C_OnUpdate");
static_assert(offsetof(ABP_CheckpointBase_C_OnUpdate, Context) == 0x000000, "Member 'ABP_CheckpointBase_C_OnUpdate::Context' has a wrong offset!");
static_assert(offsetof(ABP_CheckpointBase_C_OnUpdate, Node) == 0x000010, "Member 'ABP_CheckpointBase_C_OnUpdate::Node' has a wrong offset!");
static_assert(offsetof(ABP_CheckpointBase_C_OnUpdate, CallFunc_ConvertToAnimationStateMachinePure_AnimationState) == 0x000020, "Member 'ABP_CheckpointBase_C_OnUpdate::CallFunc_ConvertToAnimationStateMachinePure_AnimationState' has a wrong offset!");
static_assert(offsetof(ABP_CheckpointBase_C_OnUpdate, CallFunc_ConvertToAnimationStateMachinePure_Result) == 0x000030, "Member 'ABP_CheckpointBase_C_OnUpdate::CallFunc_ConvertToAnimationStateMachinePure_Result' has a wrong offset!");
static_assert(offsetof(ABP_CheckpointBase_C_OnUpdate, CallFunc_GetState_ReturnValue) == 0x000034, "Member 'ABP_CheckpointBase_C_OnUpdate::CallFunc_GetState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CheckpointBase_C_OnUpdate, K2Node_SwitchName_CmpSuccess) == 0x00003C, "Member 'ABP_CheckpointBase_C_OnUpdate::K2Node_SwitchName_CmpSuccess' has a wrong offset!");

// Function ABP_CheckpointBase.ABP_CheckpointBase_C.ExecuteUbergraph_ABP_CheckpointBase
// 0x0004 (0x0004 - 0x0000)
struct ABP_CheckpointBase_C_ExecuteUbergraph_ABP_CheckpointBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_CheckpointBase_C_ExecuteUbergraph_ABP_CheckpointBase) == 0x000004, "Wrong alignment on ABP_CheckpointBase_C_ExecuteUbergraph_ABP_CheckpointBase");
static_assert(sizeof(ABP_CheckpointBase_C_ExecuteUbergraph_ABP_CheckpointBase) == 0x000004, "Wrong size on ABP_CheckpointBase_C_ExecuteUbergraph_ABP_CheckpointBase");
static_assert(offsetof(ABP_CheckpointBase_C_ExecuteUbergraph_ABP_CheckpointBase, EntryPoint) == 0x000000, "Member 'ABP_CheckpointBase_C_ExecuteUbergraph_ABP_CheckpointBase::EntryPoint' has a wrong offset!");

// Function ABP_CheckpointBase.ABP_CheckpointBase_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_CheckpointBase_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_CheckpointBase_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_CheckpointBase_C_AnimGraph");
static_assert(sizeof(ABP_CheckpointBase_C_AnimGraph) == 0x000010, "Wrong size on ABP_CheckpointBase_C_AnimGraph");
static_assert(offsetof(ABP_CheckpointBase_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'ABP_CheckpointBase_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

