#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PaperEffects

#include "Basic.hpp"

#include "PaperEffects_classes.hpp"
#include "PaperEffects_parameters.hpp"


namespace SDK
{

// Function PaperEffects.PaperDissolveManager.OnInstancedFoliageDissolve
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<struct FNeedDissolveItemInfo>&ISMs                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void APaperDissolveManager::OnInstancedFoliageDissolve(const TArray<struct FNeedDissolveItemInfo>& ISMs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperDissolveManager", "OnInstancedFoliageDissolve");

	Params::PaperDissolveManager_OnInstancedFoliageDissolve Parms{};

	Parms.ISMs = std::move(ISMs);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PaperEffects.PaperHitMaskPainter.OnPaintHitMask
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FHitMaskInfo&              HitMaskInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UPaperHitMaskPainter::OnPaintHitMask(const struct FHitMaskInfo& HitMaskInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperHitMaskPainter", "OnPaintHitMask");

	Params::PaperHitMaskPainter_OnPaintHitMask Parms{};

	Parms.HitMaskInfo = std::move(HitMaskInfo);

	UObject::ProcessEvent(Func, &Parms);
}

}

