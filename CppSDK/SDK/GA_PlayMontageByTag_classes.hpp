#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_PlayMontageByTag

#include "Basic.hpp"

#include "EPlayerActionTypes_structs.hpp"
#include "EInt32PlayerPawnStateTypes_structs.hpp"
#include "Engine_structs.hpp"
#include "GA_AbilityMontageBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_PlayMontageByTag.GA_PlayMontageByTag_C
// 0x0018 (0x05B0 - 0x0598)
class UGA_PlayMontageByTag_C final : public UGA_AbilityMontageBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_PlayMontageByTag_C;              // 0x0598(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	EPlayerActionTypes                            PlayerRelaxActionType;                             // 0x05A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A1[0x3];                                      // 0x05A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	EInt32PlayerPawnStateTypes                    PlayerRelaxStateType;                              // 0x05A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerActionTypes                            PlayerCombatActionType;                            // 0x05A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A9[0x3];                                      // 0x05A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	EInt32PlayerPawnStateTypes                    PlayerCombatStateType;                             // 0x05AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GA_PlayMontageByTag(int32 EntryPoint);
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);

	class FString GetModuleName() const;
	bool K2_ShouldAbilityRespondToEvent(const struct FGameplayAbilityActorInfo& ActorInfo, const struct FGameplayEventData& Payload) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_PlayMontageByTag_C">();
	}
	static class UGA_PlayMontageByTag_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_PlayMontageByTag_C>();
	}
};
static_assert(alignof(UGA_PlayMontageByTag_C) == 0x000008, "Wrong alignment on UGA_PlayMontageByTag_C");
static_assert(sizeof(UGA_PlayMontageByTag_C) == 0x0005B0, "Wrong size on UGA_PlayMontageByTag_C");
static_assert(offsetof(UGA_PlayMontageByTag_C, UberGraphFrame_GA_PlayMontageByTag_C) == 0x000598, "Member 'UGA_PlayMontageByTag_C::UberGraphFrame_GA_PlayMontageByTag_C' has a wrong offset!");
static_assert(offsetof(UGA_PlayMontageByTag_C, PlayerRelaxActionType) == 0x0005A0, "Member 'UGA_PlayMontageByTag_C::PlayerRelaxActionType' has a wrong offset!");
static_assert(offsetof(UGA_PlayMontageByTag_C, PlayerRelaxStateType) == 0x0005A4, "Member 'UGA_PlayMontageByTag_C::PlayerRelaxStateType' has a wrong offset!");
static_assert(offsetof(UGA_PlayMontageByTag_C, PlayerCombatActionType) == 0x0005A8, "Member 'UGA_PlayMontageByTag_C::PlayerCombatActionType' has a wrong offset!");
static_assert(offsetof(UGA_PlayMontageByTag_C, PlayerCombatStateType) == 0x0005AC, "Member 'UGA_PlayMontageByTag_C::PlayerCombatStateType' has a wrong offset!");

}

