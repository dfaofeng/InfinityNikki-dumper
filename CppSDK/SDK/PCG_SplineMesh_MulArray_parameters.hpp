#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PCG_SplineMesh_MulArray

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SplineMeshInsertData_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function PCG_SplineMesh_MulArray.PCG_SplineMesh_MulArray_C.AddHISMComponent
// 0x0130 (0x0130 - 0x0000)
struct PCG_SplineMesh_MulArray_C_AddHISMComponent final
{
public:
	class UInstancedStaticMeshComponent*          InstancedComponent;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          Instanced_Component;                               // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Temp_struct_Variable;                              // 0x0010(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHierarchicalInstancedStaticMeshComponent* CallFunc_AddComponent_ReturnValue;              // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_Conv_VectorToTransform_ReturnValue;       // 0x0090(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHierarchicalInstancedStaticMeshComponent* CallFunc_AddComponent_ReturnValue_1;            // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_HISM_Template_Base_C*               CallFunc_AddComponentByClass_ReturnValue;          // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHierarchicalInstancedStaticMeshComponent* CallFunc_AddComponent_ReturnValue_2;            // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHierarchicalInstancedStaticMeshComponent* CallFunc_AddComponent_ReturnValue_3;            // 0x0108(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHierarchicalInstancedStaticMeshComponent* CallFunc_AddComponent_ReturnValue_4;            // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHierarchicalInstancedStaticMeshComponent* CallFunc_AddComponent_ReturnValue_5;            // 0x0118(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast; // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PCG_SplineMesh_MulArray_C_AddHISMComponent) == 0x000010, "Wrong alignment on PCG_SplineMesh_MulArray_C_AddHISMComponent");
static_assert(sizeof(PCG_SplineMesh_MulArray_C_AddHISMComponent) == 0x000130, "Wrong size on PCG_SplineMesh_MulArray_C_AddHISMComponent");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddHISMComponent, InstancedComponent) == 0x000000, "Member 'PCG_SplineMesh_MulArray_C_AddHISMComponent::InstancedComponent' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddHISMComponent, Instanced_Component) == 0x000008, "Member 'PCG_SplineMesh_MulArray_C_AddHISMComponent::Instanced_Component' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddHISMComponent, Temp_struct_Variable) == 0x000010, "Member 'PCG_SplineMesh_MulArray_C_AddHISMComponent::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddHISMComponent, CallFunc_AddComponent_ReturnValue) == 0x000070, "Member 'PCG_SplineMesh_MulArray_C_AddHISMComponent::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddHISMComponent, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x000078, "Member 'PCG_SplineMesh_MulArray_C_AddHISMComponent::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddHISMComponent, CallFunc_Conv_VectorToTransform_ReturnValue) == 0x000090, "Member 'PCG_SplineMesh_MulArray_C_AddHISMComponent::CallFunc_Conv_VectorToTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddHISMComponent, CallFunc_AddComponent_ReturnValue_1) == 0x0000F0, "Member 'PCG_SplineMesh_MulArray_C_AddHISMComponent::CallFunc_AddComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddHISMComponent, CallFunc_AddComponentByClass_ReturnValue) == 0x0000F8, "Member 'PCG_SplineMesh_MulArray_C_AddHISMComponent::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddHISMComponent, CallFunc_AddComponent_ReturnValue_2) == 0x000100, "Member 'PCG_SplineMesh_MulArray_C_AddHISMComponent::CallFunc_AddComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddHISMComponent, CallFunc_AddComponent_ReturnValue_3) == 0x000108, "Member 'PCG_SplineMesh_MulArray_C_AddHISMComponent::CallFunc_AddComponent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddHISMComponent, CallFunc_AddComponent_ReturnValue_4) == 0x000110, "Member 'PCG_SplineMesh_MulArray_C_AddHISMComponent::CallFunc_AddComponent_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddHISMComponent, CallFunc_AddComponent_ReturnValue_5) == 0x000118, "Member 'PCG_SplineMesh_MulArray_C_AddHISMComponent::CallFunc_AddComponent_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddHISMComponent, CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast) == 0x000120, "Member 'PCG_SplineMesh_MulArray_C_AddHISMComponent::CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");

// Function PCG_SplineMesh_MulArray.PCG_SplineMesh_MulArray_C.AddInstanceAlongSpline
// 0x02F0 (0x02F0 - 0x0000)
struct PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline final
{
public:
	double                                        Mesh_Length;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Add_Mesh;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Add_Mesh_Material;                                 // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          InstanceComponent;                                 // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Offset;                                            // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Scale_0;                                           // 0x0038(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESplineMeshAxis                               Forward;                                           // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSidePivot_0;                                     // 0x0051(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Rotation;                                          // 0x0058(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class UMaterialInterface*>             Add_Material_All;                                  // 0x0070(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          MeshFlip;                                          // 0x0080(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_1;               // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorVector_ReturnValue;          // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue;                 // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_SelectVector_ReturnValue_2;               // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromY_ReturnValue;                 // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESplineMeshAxis                               Temp_byte_Variable;                                // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_Select_Default;                             // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue; // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C8[0x8];                                      // 0x01C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01D0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ClampVectorSize_ReturnValue;              // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddInstance_ReturnValue;                  // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetInstancePaperCustomData_ReturnValue;   // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24D[0x3];                                      // 0x024D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue_1; // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ClampVectorSize_ReturnValue_1;            // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1; // 0x02B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x02C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast; // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast; // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_1; // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast_1; // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline) == 0x000010, "Wrong alignment on PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline");
static_assert(sizeof(PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline) == 0x0002F0, "Wrong size on PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline, Mesh_Length) == 0x000000, "Member 'PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline::Mesh_Length' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline, Add_Mesh) == 0x000008, "Member 'PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline::Add_Mesh' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline, Add_Mesh_Material) == 0x000010, "Member 'PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline::Add_Mesh_Material' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline, InstanceComponent) == 0x000018, "Member 'PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline::InstanceComponent' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline, Offset) == 0x000020, "Member 'PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline::Offset' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline, Scale_0) == 0x000038, "Member 'PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline::Scale_0' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline, Forward) == 0x000050, "Member 'PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline::Forward' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline, IsSidePivot_0) == 0x000051, "Member 'PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline::IsSidePivot_0' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline, Rotation) == 0x000058, "Member 'PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline::Rotation' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline, Add_Material_All) == 0x000070, "Member 'PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline::Add_Material_All' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline, MeshFlip) == 0x000080, "Member 'PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline::MeshFlip' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline, CallFunc_IsValid_ReturnValue) == 0x000081, "Member 'PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000088, "Member 'PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline, CallFunc_SelectVector_ReturnValue) == 0x0000A0, "Member 'PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0000B8, "Member 'PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline, CallFunc_Add_VectorVector_ReturnValue) == 0x0000D0, "Member 'PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline, CallFunc_SelectVector_ReturnValue_1) == 0x0000E8, "Member 'PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline::CallFunc_SelectVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline, CallFunc_Divide_VectorVector_ReturnValue) == 0x000100, "Member 'PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline::CallFunc_Divide_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline, CallFunc_MakeRotFromZ_ReturnValue) == 0x000118, "Member 'PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline::CallFunc_MakeRotFromZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline, CallFunc_SelectVector_ReturnValue_2) == 0x000130, "Member 'PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline::CallFunc_SelectVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline, CallFunc_MakeRotFromY_ReturnValue) == 0x000148, "Member 'PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline::CallFunc_MakeRotFromY_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000160, "Member 'PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline, Temp_byte_Variable) == 0x000178, "Member 'PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline, K2Node_Select_Default) == 0x000180, "Member 'PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline, CallFunc_ComposeRotators_ReturnValue) == 0x000198, "Member 'PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline, CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue) == 0x0001B0, "Member 'PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline::CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline, CallFunc_MakeTransform_ReturnValue) == 0x0001D0, "Member 'PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline, CallFunc_ClampVectorSize_ReturnValue) == 0x000230, "Member 'PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline::CallFunc_ClampVectorSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline, CallFunc_AddInstance_ReturnValue) == 0x000248, "Member 'PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline::CallFunc_AddInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline, CallFunc_SetInstancePaperCustomData_ReturnValue) == 0x00024C, "Member 'PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline::CallFunc_SetInstancePaperCustomData_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x000250, "Member 'PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline, CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue_1) == 0x000268, "Member 'PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline::CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000280, "Member 'PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline, CallFunc_ClampVectorSize_ReturnValue_1) == 0x000298, "Member 'PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline::CallFunc_ClampVectorSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1) == 0x0002B0, "Member 'PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0002C8, "Member 'PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline, CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast) == 0x0002E0, "Member 'PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline::CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline, CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast) == 0x0002E4, "Member 'PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline::CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline, CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_1) == 0x0002E8, "Member 'PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline::CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline, CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast_1) == 0x0002EC, "Member 'PCG_SplineMesh_MulArray_C_AddInstanceAlongSpline::CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast_1' has a wrong offset!");

// Function PCG_SplineMesh_MulArray.PCG_SplineMesh_MulArray_C.AddInstancedComponent
// 0x0018 (0x0018 - 0x0000)
struct PCG_SplineMesh_MulArray_C_AddInstancedComponent final
{
public:
	class UInstancedStaticMeshComponent*          InstancedComponent;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          Instanced_Component;                               // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          CallFunc_AddHISMComponent_InstancedComponent;      // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PCG_SplineMesh_MulArray_C_AddInstancedComponent) == 0x000008, "Wrong alignment on PCG_SplineMesh_MulArray_C_AddInstancedComponent");
static_assert(sizeof(PCG_SplineMesh_MulArray_C_AddInstancedComponent) == 0x000018, "Wrong size on PCG_SplineMesh_MulArray_C_AddInstancedComponent");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddInstancedComponent, InstancedComponent) == 0x000000, "Member 'PCG_SplineMesh_MulArray_C_AddInstancedComponent::InstancedComponent' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddInstancedComponent, Instanced_Component) == 0x000008, "Member 'PCG_SplineMesh_MulArray_C_AddInstancedComponent::Instanced_Component' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddInstancedComponent, CallFunc_AddHISMComponent_InstancedComponent) == 0x000010, "Member 'PCG_SplineMesh_MulArray_C_AddInstancedComponent::CallFunc_AddHISMComponent_InstancedComponent' has a wrong offset!");

// Function PCG_SplineMesh_MulArray.PCG_SplineMesh_MulArray_C.AddISMComponent
// 0x00D0 (0x00D0 - 0x0000)
struct PCG_SplineMesh_MulArray_C_AddISMComponent final
{
public:
	class UInstancedStaticMeshComponent*          InstancedComponent;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          Instanced_Component;                               // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Conv_VectorToTransform_ReturnValue;       // 0x0030(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          CallFunc_AddComponent_ReturnValue;                 // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_Instance_Template_Base_C*           CallFunc_AddComponentByClass_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          CallFunc_AddComponent_ReturnValue_1;               // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          CallFunc_AddComponent_ReturnValue_2;               // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          CallFunc_AddComponent_ReturnValue_3;               // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          CallFunc_AddComponent_ReturnValue_4;               // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          CallFunc_AddComponent_ReturnValue_5;               // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast; // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PCG_SplineMesh_MulArray_C_AddISMComponent) == 0x000010, "Wrong alignment on PCG_SplineMesh_MulArray_C_AddISMComponent");
static_assert(sizeof(PCG_SplineMesh_MulArray_C_AddISMComponent) == 0x0000D0, "Wrong size on PCG_SplineMesh_MulArray_C_AddISMComponent");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddISMComponent, InstancedComponent) == 0x000000, "Member 'PCG_SplineMesh_MulArray_C_AddISMComponent::InstancedComponent' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddISMComponent, Instanced_Component) == 0x000008, "Member 'PCG_SplineMesh_MulArray_C_AddISMComponent::Instanced_Component' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddISMComponent, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x000010, "Member 'PCG_SplineMesh_MulArray_C_AddISMComponent::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddISMComponent, CallFunc_Conv_VectorToTransform_ReturnValue) == 0x000030, "Member 'PCG_SplineMesh_MulArray_C_AddISMComponent::CallFunc_Conv_VectorToTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddISMComponent, CallFunc_AddComponent_ReturnValue) == 0x000090, "Member 'PCG_SplineMesh_MulArray_C_AddISMComponent::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddISMComponent, CallFunc_AddComponentByClass_ReturnValue) == 0x000098, "Member 'PCG_SplineMesh_MulArray_C_AddISMComponent::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddISMComponent, CallFunc_AddComponent_ReturnValue_1) == 0x0000A0, "Member 'PCG_SplineMesh_MulArray_C_AddISMComponent::CallFunc_AddComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddISMComponent, CallFunc_AddComponent_ReturnValue_2) == 0x0000A8, "Member 'PCG_SplineMesh_MulArray_C_AddISMComponent::CallFunc_AddComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddISMComponent, CallFunc_AddComponent_ReturnValue_3) == 0x0000B0, "Member 'PCG_SplineMesh_MulArray_C_AddISMComponent::CallFunc_AddComponent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddISMComponent, CallFunc_AddComponent_ReturnValue_4) == 0x0000B8, "Member 'PCG_SplineMesh_MulArray_C_AddISMComponent::CallFunc_AddComponent_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddISMComponent, CallFunc_AddComponent_ReturnValue_5) == 0x0000C0, "Member 'PCG_SplineMesh_MulArray_C_AddISMComponent::CallFunc_AddComponent_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddISMComponent, CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast) == 0x0000C8, "Member 'PCG_SplineMesh_MulArray_C_AddISMComponent::CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");

// Function PCG_SplineMesh_MulArray.PCG_SplineMesh_MulArray_C.AddMeshAlongSpline
// 0x0450 (0x0450 - 0x0000)
struct PCG_SplineMesh_MulArray_C_AddMeshAlongSpline final
{
public:
	double                                        Mesh_Length;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Add_Mesh;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Add_Mesh_Material;                                 // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       SplineActor_0;                                     // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Offset;                                            // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Scale_0;                                           // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESplineMeshAxis                               Forward;                                           // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             Add_Material_All;                                  // 0x0048(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0060(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVectorAtDistanceAlongSpline_ReturnValue; // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D8[0x8];                                       // 0x00D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable_1;                            // 0x00E0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_148[0x8];                                      // 0x0148(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable_2;                            // 0x0150(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   CallFunc_AddComponent_ReturnValue_1;               // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   CallFunc_AddComponent_ReturnValue_2;               // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Temp_struct_Variable_3;                            // 0x01C0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   CallFunc_AddComponent_ReturnValue_3;               // 0x0250(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAcos_ReturnValue;                      // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0282(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0283(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_285[0x3];                                      // 0x0285(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0288(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Temp_struct_Variable_4;                            // 0x0290(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default_1;                           // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   CallFunc_AddComponent_ReturnValue_4;               // 0x02F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_SplineMesh_Template_Base_C*         CallFunc_AddComponentByClass_ReturnValue;          // 0x0300(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_308[0x8];                                      // 0x0308(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable_5;                            // 0x0310(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   CallFunc_AddComponent_ReturnValue_5;               // 0x0370(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue; // 0x0378(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue_1; // 0x0390(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ClampVectorSize_ReturnValue;              // 0x03A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ClampVectorSize_ReturnValue_1;            // 0x03C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x03D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1; // 0x03F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0408(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0420(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetUpVectorAtDistanceAlongSpline_Distance_ImplicitCast; // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast; // 0x043C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast; // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_1; // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast_1; // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline) == 0x000010, "Wrong alignment on PCG_SplineMesh_MulArray_C_AddMeshAlongSpline");
static_assert(sizeof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline) == 0x000450, "Wrong size on PCG_SplineMesh_MulArray_C_AddMeshAlongSpline");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, Mesh_Length) == 0x000000, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::Mesh_Length' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, Add_Mesh) == 0x000008, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::Add_Mesh' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, Add_Mesh_Material) == 0x000010, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::Add_Mesh_Material' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, SplineActor_0) == 0x000018, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::SplineActor_0' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, Offset) == 0x000020, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::Offset' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, Scale_0) == 0x000038, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::Scale_0' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, Forward) == 0x000040, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::Forward' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, Add_Material_All) == 0x000048, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::Add_Material_All' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, Temp_struct_Variable) == 0x000060, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, CallFunc_GetUpVectorAtDistanceAlongSpline_ReturnValue) == 0x0000C0, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::CallFunc_GetUpVectorAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, Temp_struct_Variable_1) == 0x0000E0, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, CallFunc_AddComponent_ReturnValue) == 0x000140, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, Temp_struct_Variable_2) == 0x000150, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, CallFunc_AddComponent_ReturnValue_1) == 0x0001B0, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::CallFunc_AddComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, CallFunc_AddComponent_ReturnValue_2) == 0x0001B8, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::CallFunc_AddComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, Temp_struct_Variable_3) == 0x0001C0, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000220, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, CallFunc_Normal_ReturnValue) == 0x000238, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, CallFunc_AddComponent_ReturnValue_3) == 0x000250, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::CallFunc_AddComponent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, CallFunc_Normal_ReturnValue_1) == 0x000258, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, CallFunc_Dot_VectorVector_ReturnValue) == 0x000270, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, CallFunc_DegAcos_ReturnValue) == 0x000278, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000280, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000281, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, Temp_bool_Variable) == 0x000282, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, CallFunc_BooleanAND_ReturnValue) == 0x000283, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, Temp_bool_Variable_1) == 0x000284, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, K2Node_Select_Default) == 0x000288, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, Temp_struct_Variable_4) == 0x000290, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, K2Node_Select_Default_1) == 0x0002F0, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, CallFunc_AddComponent_ReturnValue_4) == 0x0002F8, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::CallFunc_AddComponent_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, CallFunc_AddComponentByClass_ReturnValue) == 0x000300, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, Temp_struct_Variable_5) == 0x000310, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, CallFunc_AddComponent_ReturnValue_5) == 0x000370, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::CallFunc_AddComponent_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue) == 0x000378, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue_1) == 0x000390, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, CallFunc_ClampVectorSize_ReturnValue) == 0x0003A8, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::CallFunc_ClampVectorSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, CallFunc_ClampVectorSize_ReturnValue_1) == 0x0003C0, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::CallFunc_ClampVectorSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x0003D8, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1) == 0x0003F0, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, CallFunc_Add_VectorVector_ReturnValue) == 0x000408, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000420, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, CallFunc_GetUpVectorAtDistanceAlongSpline_Distance_ImplicitCast) == 0x000438, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::CallFunc_GetUpVectorAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast) == 0x00043C, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast) == 0x000440, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_1) == 0x000444, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_AddMeshAlongSpline, CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast_1) == 0x000448, "Member 'PCG_SplineMesh_MulArray_C_AddMeshAlongSpline::CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast_1' has a wrong offset!");

// Function PCG_SplineMesh_MulArray.PCG_SplineMesh_MulArray_C.CustomTemplateMap
// 0x0010 (0x0010 - 0x0000)
struct PCG_SplineMesh_MulArray_C_CustomTemplateMap final
{
public:
	class UClass*                                 CallFunc_Get_Instance_CustomTemplate_ISM_Template; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Get_Instance_CustomTemplate_HISM_Template; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PCG_SplineMesh_MulArray_C_CustomTemplateMap) == 0x000008, "Wrong alignment on PCG_SplineMesh_MulArray_C_CustomTemplateMap");
static_assert(sizeof(PCG_SplineMesh_MulArray_C_CustomTemplateMap) == 0x000010, "Wrong size on PCG_SplineMesh_MulArray_C_CustomTemplateMap");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_CustomTemplateMap, CallFunc_Get_Instance_CustomTemplate_ISM_Template) == 0x000000, "Member 'PCG_SplineMesh_MulArray_C_CustomTemplateMap::CallFunc_Get_Instance_CustomTemplate_ISM_Template' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_CustomTemplateMap, CallFunc_Get_Instance_CustomTemplate_HISM_Template) == 0x000008, "Member 'PCG_SplineMesh_MulArray_C_CustomTemplateMap::CallFunc_Get_Instance_CustomTemplate_HISM_Template' has a wrong offset!");

// Function PCG_SplineMesh_MulArray.PCG_SplineMesh_MulArray_C.ExecuteUbergraph_PCG_SplineMesh_MulArray
// 0x0004 (0x0004 - 0x0000)
struct PCG_SplineMesh_MulArray_C_ExecuteUbergraph_PCG_SplineMesh_MulArray final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PCG_SplineMesh_MulArray_C_ExecuteUbergraph_PCG_SplineMesh_MulArray) == 0x000004, "Wrong alignment on PCG_SplineMesh_MulArray_C_ExecuteUbergraph_PCG_SplineMesh_MulArray");
static_assert(sizeof(PCG_SplineMesh_MulArray_C_ExecuteUbergraph_PCG_SplineMesh_MulArray) == 0x000004, "Wrong size on PCG_SplineMesh_MulArray_C_ExecuteUbergraph_PCG_SplineMesh_MulArray");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_ExecuteUbergraph_PCG_SplineMesh_MulArray, EntryPoint) == 0x000000, "Member 'PCG_SplineMesh_MulArray_C_ExecuteUbergraph_PCG_SplineMesh_MulArray::EntryPoint' has a wrong offset!");

// Function PCG_SplineMesh_MulArray.PCG_SplineMesh_MulArray_C.GetMeshLengthByAxis
// 0x00E0 (0x00E0 - 0x0000)
struct PCG_SplineMesh_MulArray_C_GetMeshLengthByAxis final
{
public:
	class UStaticMesh*                            StaticMesh;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Scale_0;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MeshLength;                                        // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LocalMeshLength;                                   // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBox                                   CallFunc_GetBoundingBox_ReturnValue;               // 0x0028(0x0038)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PCG_SplineMesh_MulArray_C_GetMeshLengthByAxis) == 0x000008, "Wrong alignment on PCG_SplineMesh_MulArray_C_GetMeshLengthByAxis");
static_assert(sizeof(PCG_SplineMesh_MulArray_C_GetMeshLengthByAxis) == 0x0000E0, "Wrong size on PCG_SplineMesh_MulArray_C_GetMeshLengthByAxis");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_GetMeshLengthByAxis, StaticMesh) == 0x000000, "Member 'PCG_SplineMesh_MulArray_C_GetMeshLengthByAxis::StaticMesh' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_GetMeshLengthByAxis, Scale_0) == 0x000008, "Member 'PCG_SplineMesh_MulArray_C_GetMeshLengthByAxis::Scale_0' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_GetMeshLengthByAxis, MeshLength) == 0x000010, "Member 'PCG_SplineMesh_MulArray_C_GetMeshLengthByAxis::MeshLength' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_GetMeshLengthByAxis, LocalMeshLength) == 0x000018, "Member 'PCG_SplineMesh_MulArray_C_GetMeshLengthByAxis::LocalMeshLength' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_GetMeshLengthByAxis, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'PCG_SplineMesh_MulArray_C_GetMeshLengthByAxis::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_GetMeshLengthByAxis, CallFunc_GetBoundingBox_ReturnValue) == 0x000028, "Member 'PCG_SplineMesh_MulArray_C_GetMeshLengthByAxis::CallFunc_GetBoundingBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_GetMeshLengthByAxis, K2Node_SwitchEnum_CmpSuccess) == 0x000060, "Member 'PCG_SplineMesh_MulArray_C_GetMeshLengthByAxis::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_GetMeshLengthByAxis, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000068, "Member 'PCG_SplineMesh_MulArray_C_GetMeshLengthByAxis::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_GetMeshLengthByAxis, CallFunc_BreakVector_X) == 0x000080, "Member 'PCG_SplineMesh_MulArray_C_GetMeshLengthByAxis::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_GetMeshLengthByAxis, CallFunc_BreakVector_Y) == 0x000088, "Member 'PCG_SplineMesh_MulArray_C_GetMeshLengthByAxis::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_GetMeshLengthByAxis, CallFunc_BreakVector_Z) == 0x000090, "Member 'PCG_SplineMesh_MulArray_C_GetMeshLengthByAxis::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_GetMeshLengthByAxis, CallFunc_BreakVector_X_1) == 0x000098, "Member 'PCG_SplineMesh_MulArray_C_GetMeshLengthByAxis::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_GetMeshLengthByAxis, CallFunc_BreakVector_Y_1) == 0x0000A0, "Member 'PCG_SplineMesh_MulArray_C_GetMeshLengthByAxis::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_GetMeshLengthByAxis, CallFunc_BreakVector_Z_1) == 0x0000A8, "Member 'PCG_SplineMesh_MulArray_C_GetMeshLengthByAxis::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_GetMeshLengthByAxis, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'PCG_SplineMesh_MulArray_C_GetMeshLengthByAxis::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_GetMeshLengthByAxis, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000B8, "Member 'PCG_SplineMesh_MulArray_C_GetMeshLengthByAxis::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_GetMeshLengthByAxis, CallFunc_BreakVector_X_2) == 0x0000C0, "Member 'PCG_SplineMesh_MulArray_C_GetMeshLengthByAxis::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_GetMeshLengthByAxis, CallFunc_BreakVector_Y_2) == 0x0000C8, "Member 'PCG_SplineMesh_MulArray_C_GetMeshLengthByAxis::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_GetMeshLengthByAxis, CallFunc_BreakVector_Z_2) == 0x0000D0, "Member 'PCG_SplineMesh_MulArray_C_GetMeshLengthByAxis::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_GetMeshLengthByAxis, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000D8, "Member 'PCG_SplineMesh_MulArray_C_GetMeshLengthByAxis::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");

// Function PCG_SplineMesh_MulArray.PCG_SplineMesh_MulArray_C.PlaceAllMiddleMeshes
// 0x02E8 (0x02E8 - 0x0000)
struct PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes final
{
public:
	double                                        TotalLength;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCreatedMiddleHead;                               // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LeftLength;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_wildcard_Variable;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B[0x5];                                       // 0x009B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UInstancedStaticMeshComponent*          CallFunc_AddInstancedComponent_InstancedComponent; // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddWorldOffset_SweepHitResult;         // 0x00D0(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_Array_Get_Item;                           // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x01E0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSplineMeshInsertData                  CallFunc_Array_Get_Item_1;                         // 0x01E8(0x0088)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_275[0x3];                                      // 0x0275(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            CallFunc_Array_Get_Item_2;                         // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_282[0x2];                                      // 0x0282(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_1;                              // 0x0290(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x029C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29D[0x3];                                      // 0x029D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item_3;                         // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B2[0x6];                                      // 0x02B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x02C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C2[0x2];                                      // 0x02C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x02C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CA[0x6];                                      // 0x02CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D9[0x7];                                      // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_4;      // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes) == 0x000008, "Wrong alignment on PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes");
static_assert(sizeof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes) == 0x0002E8, "Wrong size on PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, TotalLength) == 0x000000, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::TotalLength' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, IsCreatedMiddleHead) == 0x000008, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::IsCreatedMiddleHead' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, LeftLength) == 0x000010, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::LeftLength' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, Temp_int_Array_Index_Variable) == 0x000018, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, CallFunc_Multiply_IntInt_ReturnValue) == 0x000020, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, Temp_int_Loop_Counter_Variable_1) == 0x000028, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, Temp_bool_True_if_break_was_hit_Variable) == 0x000030, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, Temp_int_Array_Index_Variable_1) == 0x000034, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, Temp_int_Loop_Counter_Variable_2) == 0x00003C, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000040, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x000058, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, CallFunc_Add_IntInt_ReturnValue_2) == 0x000070, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000078, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, Temp_wildcard_Variable) == 0x000090, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, CallFunc_BooleanAND_ReturnValue) == 0x000098, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, CallFunc_Not_PreBool_ReturnValue_1) == 0x000099, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, CallFunc_BooleanAND_ReturnValue_1) == 0x00009A, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000B0, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, Temp_int_Array_Index_Variable_2) == 0x0000B8, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000BC, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000C0, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, CallFunc_BooleanAND_ReturnValue_2) == 0x0000C4, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, CallFunc_AddInstancedComponent_InstancedComponent) == 0x0000C8, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::CallFunc_AddInstancedComponent_InstancedComponent' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, CallFunc_K2_AddWorldOffset_SweepHitResult) == 0x0000D0, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::CallFunc_K2_AddWorldOffset_SweepHitResult' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, CallFunc_Array_Get_Item) == 0x0001C8, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0001D0, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0001D8, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, Temp_real_Variable) == 0x0001E0, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, CallFunc_Array_Get_Item_1) == 0x0001E8, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, CallFunc_Array_Length_ReturnValue) == 0x000270, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, CallFunc_Less_IntInt_ReturnValue) == 0x000274, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, CallFunc_Array_Get_Item_2) == 0x000278, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, CallFunc_SetStaticMesh_ReturnValue) == 0x000280, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, CallFunc_IsValid_ReturnValue) == 0x000281, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, CallFunc_Array_Length_ReturnValue_1) == 0x000284, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, CallFunc_Less_IntInt_ReturnValue_1) == 0x000288, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, Temp_real_Variable_1) == 0x000290, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, CallFunc_Array_Add_ReturnValue) == 0x000298, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, CallFunc_Less_DoubleDouble_ReturnValue) == 0x00029C, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x0002A0, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, CallFunc_Array_Get_Item_3) == 0x0002A8, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x0002B0, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0002B1, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x0002B8, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x0002C0, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, CallFunc_BooleanAND_ReturnValue_3) == 0x0002C1, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, CallFunc_Array_Length_ReturnValue_2) == 0x0002C4, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, CallFunc_Less_IntInt_ReturnValue_2) == 0x0002C8, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, CallFunc_BooleanAND_ReturnValue_4) == 0x0002C9, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, CallFunc_SelectFloat_ReturnValue) == 0x0002D0, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0002D8, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes, CallFunc_Subtract_DoubleDouble_ReturnValue_4) == 0x0002E0, "Member 'PCG_SplineMesh_MulArray_C_PlaceAllMiddleMeshes::CallFunc_Subtract_DoubleDouble_ReturnValue_4' has a wrong offset!");

// Function PCG_SplineMesh_MulArray.PCG_SplineMesh_MulArray_C.PlaceObjectElement
// 0x0320 (0x0320 - 0x0000)
struct PCG_SplineMesh_MulArray_C_PlaceObjectElement final
{
public:
	bool                                          IsMain;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Index_0;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LastLength;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_32ByteByte_ReturnValue;        // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_wildcard_Variable;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_wildcard_Variable_1;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_wildcard_Variable_2;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0070(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0078(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable;                              // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_1;                            // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_112[0x6];                                      // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_struct_Variable_2;                            // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESplineMeshAxis                               Temp_byte_Variable;                                // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInstancedStaticMeshComponent*          CallFunc_Map_Find_Value;                           // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default;                             // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_2;        // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item;                           // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B2[0x6];                                      // 0x01B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item_1;                         // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x3];                                      // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item_2;                         // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FD[0x3];                                      // 0x01FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_2;         // 0x0205(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_206[0x2];                                      // 0x0206(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MaxOfFloatArray_IndexOfMaxValue;          // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MaxOfFloatArray_MaxValue;                 // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_3;         // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_4;         // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_222[0x6];                                      // 0x0222(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_SelectRotator_ReturnValue;                // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_1;                           // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_5;         // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_5;           // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_6;         // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_Array_Get_Item_3;                         // 0x0298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_4;                // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_7;         // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_2;        // 0x02B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            CallFunc_Array_Get_Item_4;                         // 0x02C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default_2;                           // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D9[0x3];                                      // 0x02D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_5;                // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_6;           // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_7;           // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 CallFunc_MaxOfFloatArray_FloatArray_ImplicitCast;  // 0x0308(0x0010)(ConstParm, ReferenceParm)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PCG_SplineMesh_MulArray_C_PlaceObjectElement) == 0x000008, "Wrong alignment on PCG_SplineMesh_MulArray_C_PlaceObjectElement");
static_assert(sizeof(PCG_SplineMesh_MulArray_C_PlaceObjectElement) == 0x000320, "Wrong size on PCG_SplineMesh_MulArray_C_PlaceObjectElement");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, IsMain) == 0x000000, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::IsMain' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, Index_0) == 0x000004, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::Index_0' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, LastLength) == 0x000008, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::LastLength' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000014, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x00001C, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Multiply_IntInt_ReturnValue) == 0x000020, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, Temp_bool_True_if_break_was_hit_Variable) == 0x000024, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, Temp_int_Array_Index_Variable) == 0x000028, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_EqualEqual_32ByteByte_ReturnValue) == 0x00002C, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_EqualEqual_32ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Not_PreBool_ReturnValue) == 0x00002D, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, Temp_wildcard_Variable) == 0x000030, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, Temp_bool_Variable) == 0x000038, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, Temp_wildcard_Variable_1) == 0x000040, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::Temp_wildcard_Variable_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, Temp_int_Array_Index_Variable_1) == 0x000048, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, Temp_bool_True_if_break_was_hit_Variable_1) == 0x00004C, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, Temp_int_Loop_Counter_Variable_1) == 0x000050, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Add_IntInt_ReturnValue_1) == 0x000054, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Not_PreBool_ReturnValue_1) == 0x000058, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, Temp_wildcard_Variable_2) == 0x000060, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::Temp_wildcard_Variable_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000068, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, Temp_real_Variable) == 0x000070, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, Temp_real_Variable_1) == 0x000078, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, Temp_bool_Variable_1) == 0x000080, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, Temp_int_Loop_Counter_Variable_2) == 0x000084, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, Temp_bool_Variable_2) == 0x000088, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Add_IntInt_ReturnValue_2) == 0x00008C, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, Temp_struct_Variable) == 0x000090, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, Temp_struct_Variable_1) == 0x0000B0, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, Temp_int_Array_Index_Variable_2) == 0x0000C8, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000CC, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_BooleanAND_ReturnValue) == 0x0000D0, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0000D8, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_SelectFloat_ReturnValue) == 0x0000F0, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x0000F8, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Not_PreBool_ReturnValue_2) == 0x000110, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_BooleanOR_ReturnValue) == 0x000111, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, Temp_struct_Variable_2) == 0x000118, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000130, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, Temp_byte_Variable) == 0x000138, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Map_Find_Value) == 0x000140, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Map_Find_ReturnValue) == 0x000148, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, K2Node_Select_Default) == 0x000150, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000168, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Add_VectorVector_ReturnValue) == 0x000180, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, Temp_object_Variable) == 0x000198, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, Temp_bool_True_if_break_was_hit_Variable_2) == 0x0001A0, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::Temp_bool_True_if_break_was_hit_Variable_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Array_Get_Item) == 0x0001A8, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0001B0, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Not_PreBool_ReturnValue_3) == 0x0001B1, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Array_Get_Item_1) == 0x0001B8, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x0001C0, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Array_Add_ReturnValue) == 0x0001C4, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Array_Length_ReturnValue) == 0x0001C8, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0001D0, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Less_IntInt_ReturnValue) == 0x0001D8, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_SelectFloat_ReturnValue_1) == 0x0001E0, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_BooleanAND_ReturnValue_1) == 0x0001E8, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Array_Get_Item_2) == 0x0001F0, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Array_Length_ReturnValue_1) == 0x0001F8, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001FC, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Array_Add_ReturnValue_1) == 0x000200, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_BooleanAND_ReturnValue_2) == 0x000204, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Array_IsValidIndex_ReturnValue_2) == 0x000205, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Array_IsValidIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_MaxOfFloatArray_IndexOfMaxValue) == 0x000208, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_MaxOfFloatArray_IndexOfMaxValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_MaxOfFloatArray_MaxValue) == 0x00020C, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_MaxOfFloatArray_MaxValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000210, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_SelectFloat_ReturnValue_2) == 0x000218, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Array_IsValidIndex_ReturnValue_3) == 0x000220, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Array_IsValidIndex_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Array_IsValidIndex_ReturnValue_4) == 0x000221, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Array_IsValidIndex_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_SelectRotator_ReturnValue) == 0x000228, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_SelectRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, K2Node_Select_Default_1) == 0x000240, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000248, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Array_Add_ReturnValue_2) == 0x000250, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_SelectFloat_ReturnValue_3) == 0x000258, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Array_IsValidIndex_ReturnValue_5) == 0x000260, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Array_IsValidIndex_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x000268, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Add_DoubleDouble_ReturnValue_5) == 0x000270, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Add_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_SelectVector_ReturnValue) == 0x000278, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Array_IsValidIndex_ReturnValue_6) == 0x000290, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Array_IsValidIndex_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Array_Get_Item_3) == 0x000298, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_SelectFloat_ReturnValue_4) == 0x0002A0, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Array_IsValidIndex_ReturnValue_7) == 0x0002A8, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Array_IsValidIndex_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Conv_DoubleToVector_ReturnValue_2) == 0x0002B0, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Conv_DoubleToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Array_Get_Item_4) == 0x0002C8, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, K2Node_Select_Default_2) == 0x0002D0, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_IsValid_ReturnValue) == 0x0002D8, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Array_Length_ReturnValue_2) == 0x0002DC, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Less_IntInt_ReturnValue_2) == 0x0002E0, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_SelectFloat_ReturnValue_5) == 0x0002E8, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_SelectFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_BooleanAND_ReturnValue_3) == 0x0002F0, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Add_DoubleDouble_ReturnValue_6) == 0x0002F8, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Add_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Add_DoubleDouble_ReturnValue_7) == 0x000300, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Add_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_MaxOfFloatArray_FloatArray_ImplicitCast) == 0x000308, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_MaxOfFloatArray_FloatArray_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_PlaceObjectElement, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000318, "Member 'PCG_SplineMesh_MulArray_C_PlaceObjectElement::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function PCG_SplineMesh_MulArray.PCG_SplineMesh_MulArray_C.Set InstanceMesh Attrib
// 0x0038 (0x0038 - 0x0000)
struct PCG_SplineMesh_MulArray_C_Set_InstanceMesh_Attrib final
{
public:
	class UInstancedStaticMeshComponent*          InstanceComponent;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            AddMesh;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     AddMesh_Material;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             Add_Material_All;                                  // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	double                                        BoundsLength;                                      // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PCG_SplineMesh_MulArray_C_Set_InstanceMesh_Attrib) == 0x000008, "Wrong alignment on PCG_SplineMesh_MulArray_C_Set_InstanceMesh_Attrib");
static_assert(sizeof(PCG_SplineMesh_MulArray_C_Set_InstanceMesh_Attrib) == 0x000038, "Wrong size on PCG_SplineMesh_MulArray_C_Set_InstanceMesh_Attrib");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Set_InstanceMesh_Attrib, InstanceComponent) == 0x000000, "Member 'PCG_SplineMesh_MulArray_C_Set_InstanceMesh_Attrib::InstanceComponent' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Set_InstanceMesh_Attrib, AddMesh) == 0x000008, "Member 'PCG_SplineMesh_MulArray_C_Set_InstanceMesh_Attrib::AddMesh' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Set_InstanceMesh_Attrib, AddMesh_Material) == 0x000010, "Member 'PCG_SplineMesh_MulArray_C_Set_InstanceMesh_Attrib::AddMesh_Material' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Set_InstanceMesh_Attrib, Add_Material_All) == 0x000018, "Member 'PCG_SplineMesh_MulArray_C_Set_InstanceMesh_Attrib::Add_Material_All' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Set_InstanceMesh_Attrib, BoundsLength) == 0x000028, "Member 'PCG_SplineMesh_MulArray_C_Set_InstanceMesh_Attrib::BoundsLength' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Set_InstanceMesh_Attrib, CallFunc_SetStaticMesh_ReturnValue) == 0x000030, "Member 'PCG_SplineMesh_MulArray_C_Set_InstanceMesh_Attrib::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

// Function PCG_SplineMesh_MulArray.PCG_SplineMesh_MulArray_C.Set SplinMesh Attrib
// 0x0088 (0x0088 - 0x0000)
struct PCG_SplineMesh_MulArray_C_Set_SplinMesh_Attrib final
{
public:
	class USplineMeshComponent*                   mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            AddMesh;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     AddMesh_Material;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Scale_0;                                           // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESplineMeshAxis                               Forward;                                           // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                UpDir;                                             // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             Add_Material_All;                                  // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	double                                        BoundsLength;                                      // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FFloor_A_ImplicitCast;                    // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PCG_SplineMesh_MulArray_C_Set_SplinMesh_Attrib) == 0x000008, "Wrong alignment on PCG_SplineMesh_MulArray_C_Set_SplinMesh_Attrib");
static_assert(sizeof(PCG_SplineMesh_MulArray_C_Set_SplinMesh_Attrib) == 0x000088, "Wrong size on PCG_SplineMesh_MulArray_C_Set_SplinMesh_Attrib");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Set_SplinMesh_Attrib, mesh) == 0x000000, "Member 'PCG_SplineMesh_MulArray_C_Set_SplinMesh_Attrib::mesh' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Set_SplinMesh_Attrib, AddMesh) == 0x000008, "Member 'PCG_SplineMesh_MulArray_C_Set_SplinMesh_Attrib::AddMesh' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Set_SplinMesh_Attrib, AddMesh_Material) == 0x000010, "Member 'PCG_SplineMesh_MulArray_C_Set_SplinMesh_Attrib::AddMesh_Material' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Set_SplinMesh_Attrib, Scale_0) == 0x000018, "Member 'PCG_SplineMesh_MulArray_C_Set_SplinMesh_Attrib::Scale_0' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Set_SplinMesh_Attrib, Forward) == 0x000020, "Member 'PCG_SplineMesh_MulArray_C_Set_SplinMesh_Attrib::Forward' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Set_SplinMesh_Attrib, UpDir) == 0x000028, "Member 'PCG_SplineMesh_MulArray_C_Set_SplinMesh_Attrib::UpDir' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Set_SplinMesh_Attrib, Add_Material_All) == 0x000040, "Member 'PCG_SplineMesh_MulArray_C_Set_SplinMesh_Attrib::Add_Material_All' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Set_SplinMesh_Attrib, BoundsLength) == 0x000050, "Member 'PCG_SplineMesh_MulArray_C_Set_SplinMesh_Attrib::BoundsLength' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Set_SplinMesh_Attrib, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000058, "Member 'PCG_SplineMesh_MulArray_C_Set_SplinMesh_Attrib::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Set_SplinMesh_Attrib, CallFunc_SetStaticMesh_ReturnValue) == 0x000070, "Member 'PCG_SplineMesh_MulArray_C_Set_SplinMesh_Attrib::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Set_SplinMesh_Attrib, CallFunc_FFloor_ReturnValue) == 0x000074, "Member 'PCG_SplineMesh_MulArray_C_Set_SplinMesh_Attrib::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Set_SplinMesh_Attrib, CallFunc_Conv_IntToByte_ReturnValue) == 0x000078, "Member 'PCG_SplineMesh_MulArray_C_Set_SplinMesh_Attrib::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Set_SplinMesh_Attrib, CallFunc_FFloor_A_ImplicitCast) == 0x000080, "Member 'PCG_SplineMesh_MulArray_C_Set_SplinMesh_Attrib::CallFunc_FFloor_A_ImplicitCast' has a wrong offset!");

// Function PCG_SplineMesh_MulArray.PCG_SplineMesh_MulArray_C.SetAllMaterials
// 0x0038 (0x0038 - 0x0000)
struct PCG_SplineMesh_MulArray_C_SetAllMaterials final
{
public:
	class UPrimitiveComponent*                    Component;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             Materials;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PCG_SplineMesh_MulArray_C_SetAllMaterials) == 0x000008, "Wrong alignment on PCG_SplineMesh_MulArray_C_SetAllMaterials");
static_assert(sizeof(PCG_SplineMesh_MulArray_C_SetAllMaterials) == 0x000038, "Wrong size on PCG_SplineMesh_MulArray_C_SetAllMaterials");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetAllMaterials, Component) == 0x000000, "Member 'PCG_SplineMesh_MulArray_C_SetAllMaterials::Component' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetAllMaterials, Materials) == 0x000008, "Member 'PCG_SplineMesh_MulArray_C_SetAllMaterials::Materials' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetAllMaterials, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'PCG_SplineMesh_MulArray_C_SetAllMaterials::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetAllMaterials, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'PCG_SplineMesh_MulArray_C_SetAllMaterials::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetAllMaterials, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'PCG_SplineMesh_MulArray_C_SetAllMaterials::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetAllMaterials, CallFunc_Array_Get_Item) == 0x000028, "Member 'PCG_SplineMesh_MulArray_C_SetAllMaterials::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetAllMaterials, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'PCG_SplineMesh_MulArray_C_SetAllMaterials::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetAllMaterials, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'PCG_SplineMesh_MulArray_C_SetAllMaterials::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function PCG_SplineMesh_MulArray.PCG_SplineMesh_MulArray_C.SetSplineMesh
// 0x0410 (0x0410 - 0x0000)
struct PCG_SplineMesh_MulArray_C_SetSplineMesh final
{
public:
	TArray<class AActor*>                         roadSplineMeshActor;                               // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0xC];                                       // 0x0034(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransformAtSplinePoint_ReturnValue;    // 0x0040(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0xF];                                      // 0x0121(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0130(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0198(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       CallFunc_GetComponentByClass_ReturnValue;          // 0x02B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTangentAtSplinePoint_ReturnValue;      // 0x02B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransformAtSplinePoint_ReturnValue_1;  // 0x02D0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0338(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0350(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0368(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_1;    // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_384[0x4];                                      // 0x0384(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_1;                          // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4[0x4];                                      // 0x03A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x03B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x03D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D5[0x3];                                      // 0x03D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAttachedActors_OutActors;              // 0x03E0(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x03F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x03FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FE[0x2];                                      // 0x03FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PCG_SplineMesh_MulArray_C_SetSplineMesh) == 0x000010, "Wrong alignment on PCG_SplineMesh_MulArray_C_SetSplineMesh");
static_assert(sizeof(PCG_SplineMesh_MulArray_C_SetSplineMesh) == 0x000410, "Wrong size on PCG_SplineMesh_MulArray_C_SetSplineMesh");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, roadSplineMeshActor) == 0x000000, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::roadSplineMeshActor' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, Temp_int_Variable) == 0x000010, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, Temp_int_Array_Index_Variable) == 0x000020, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, CallFunc_Subtract_IntInt_ReturnValue) == 0x000028, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, Temp_int_Variable_1) == 0x00002C, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, CallFunc_Add_IntInt_ReturnValue_2) == 0x000030, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, CallFunc_GetTransformAtSplinePoint_ReturnValue) == 0x000040, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::CallFunc_GetTransformAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, CallFunc_BreakTransform_Location) == 0x0000A0, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, CallFunc_BreakTransform_Rotation) == 0x0000B8, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, CallFunc_BreakTransform_Scale) == 0x0000D0, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x0000E8, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, CallFunc_BreakVector_X) == 0x0000F0, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, CallFunc_BreakVector_Y) == 0x0000F8, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, CallFunc_BreakVector_Z) == 0x000100, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000108, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00010C, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000110, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, K2Node_DynamicCast_AsActor) == 0x000118, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, K2Node_DynamicCast_bSuccess) == 0x000120, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, CallFunc_GetTransform_ReturnValue) == 0x000130, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000190, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000198, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000290, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, CallFunc_MakeVector_ReturnValue) == 0x000298, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, CallFunc_GetComponentByClass_ReturnValue) == 0x0002B0, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, CallFunc_GetTangentAtSplinePoint_ReturnValue) == 0x0002B8, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::CallFunc_GetTangentAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, CallFunc_GetTransformAtSplinePoint_ReturnValue_1) == 0x0002D0, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::CallFunc_GetTransformAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, CallFunc_Array_Add_ReturnValue) == 0x000330, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, CallFunc_BreakTransform_Location_1) == 0x000338, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, CallFunc_BreakTransform_Rotation_1) == 0x000350, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, CallFunc_BreakTransform_Scale_1) == 0x000368, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, CallFunc_GetNumberOfSplinePoints_ReturnValue_1) == 0x000380, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::CallFunc_GetNumberOfSplinePoints_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, CallFunc_BreakVector_X_1) == 0x000388, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, CallFunc_BreakVector_Y_1) == 0x000390, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, CallFunc_BreakVector_Z_1) == 0x000398, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0003A0, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0003A8, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0003B0, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, CallFunc_MakeVector_ReturnValue_1) == 0x0003B8, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, CallFunc_Array_Add_ReturnValue_1) == 0x0003D0, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, CallFunc_IsValid_ReturnValue) == 0x0003D4, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, CallFunc_Array_Add_ReturnValue_2) == 0x0003D8, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, Temp_int_Variable_2) == 0x0003DC, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, CallFunc_GetAttachedActors_OutActors) == 0x0003E0, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::CallFunc_GetAttachedActors_OutActors' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, CallFunc_Array_Get_Item) == 0x0003F0, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, CallFunc_Array_Length_ReturnValue_1) == 0x0003F8, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, CallFunc_Less_IntInt_ReturnValue) == 0x0003FC, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x0003FD, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_SetSplineMesh, CallFunc_Add_IntInt_ReturnValue_3) == 0x000400, "Member 'PCG_SplineMesh_MulArray_C_SetSplineMesh::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");

// Function PCG_SplineMesh_MulArray.PCG_SplineMesh_MulArray_C.Update Spline Mesh
// 0x04C8 (0x04C8 - 0x0000)
struct PCG_SplineMesh_MulArray_C_Update_Spline_Mesh final
{
public:
	bool                                          IsEndIndex;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInstancedStaticMeshComponent*          SubInstancedComponent;                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          MainInstancedComponent;                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInstancedStaticMeshComponent*          CallFunc_AddInstancedComponent_InstancedComponent; // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue_1;   // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          CallFunc_AddInstancedComponent_InstancedComponent_1; // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddWorldOffset_SweepHitResult;         // 0x0120(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_AddWorldOffset_SweepHitResult_1;       // 0x0218(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FString                                 CallFunc_GetActorNameWithMap_ReturnValue;          // 0x0310(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0320(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_349[0x7];                                      // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          CallFunc_AddInstancedComponent_InstancedComponent_2; // 0x0360(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddWorldOffset_SweepHitResult_2;       // 0x0368(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_GetMeshLengthByAxis_MeshLength;           // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetMeshLengthByAxis_MeshLength_1;         // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetMeshLengthByAxis_MeshLength_2;         // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0480(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue_1;            // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49C[0x4];                                      // 0x049C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_5;           // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_6;           // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_A_ImplicitCast;               // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh) == 0x000008, "Wrong alignment on PCG_SplineMesh_MulArray_C_Update_Spline_Mesh");
static_assert(sizeof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh) == 0x0004C8, "Wrong size on PCG_SplineMesh_MulArray_C_Update_Spline_Mesh");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, IsEndIndex) == 0x000000, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::IsEndIndex' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, SubInstancedComponent) == 0x000008, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::SubInstancedComponent' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, MainInstancedComponent) == 0x000010, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::MainInstancedComponent' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000020, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000038, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x000040, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000058, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000070, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, CallFunc_BooleanAND_ReturnValue) == 0x000078, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000080, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, CallFunc_BooleanAND_ReturnValue_1) == 0x000098, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, CallFunc_SelectFloat_ReturnValue) == 0x0000A0, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x0000A8, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, CallFunc_Not_PreBool_ReturnValue) == 0x0000C0, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, CallFunc_BooleanOR_ReturnValue) == 0x0000C1, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000C2, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, CallFunc_BooleanOR_ReturnValue_1) == 0x0000C3, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, CallFunc_AddInstancedComponent_InstancedComponent) == 0x0000C8, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::CallFunc_AddInstancedComponent_InstancedComponent' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x0000D0, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, CallFunc_GetLocationAtSplinePoint_ReturnValue_1) == 0x0000E8, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::CallFunc_GetLocationAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, CallFunc_AddInstancedComponent_InstancedComponent_1) == 0x000100, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::CallFunc_AddInstancedComponent_InstancedComponent_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000108, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, CallFunc_K2_AddWorldOffset_SweepHitResult) == 0x000120, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::CallFunc_K2_AddWorldOffset_SweepHitResult' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, CallFunc_K2_AddWorldOffset_SweepHitResult_1) == 0x000218, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::CallFunc_K2_AddWorldOffset_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, CallFunc_GetActorNameWithMap_ReturnValue) == 0x000310, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::CallFunc_GetActorNameWithMap_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, CallFunc_Concat_StrStr_ReturnValue) == 0x000320, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, CallFunc_GetSplineLength_ReturnValue) == 0x000330, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000338, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000340, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, CallFunc_BooleanAND_ReturnValue_2) == 0x000348, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, CallFunc_SelectFloat_ReturnValue_1) == 0x000350, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, CallFunc_SelectFloat_ReturnValue_2) == 0x000358, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, CallFunc_AddInstancedComponent_InstancedComponent_2) == 0x000360, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::CallFunc_AddInstancedComponent_InstancedComponent_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, CallFunc_K2_AddWorldOffset_SweepHitResult_2) == 0x000368, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::CallFunc_K2_AddWorldOffset_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, CallFunc_GetMeshLengthByAxis_MeshLength) == 0x000460, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::CallFunc_GetMeshLengthByAxis_MeshLength' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, CallFunc_GetMeshLengthByAxis_MeshLength_1) == 0x000468, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::CallFunc_GetMeshLengthByAxis_MeshLength_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, CallFunc_GetMeshLengthByAxis_MeshLength_2) == 0x000470, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::CallFunc_GetMeshLengthByAxis_MeshLength_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000478, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, CallFunc_MakeVector2D_ReturnValue) == 0x000480, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x000490, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, CallFunc_GetSplineLength_ReturnValue_1) == 0x000498, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::CallFunc_GetSplineLength_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0004A0, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, CallFunc_Add_DoubleDouble_ReturnValue_5) == 0x0004A8, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::CallFunc_Add_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, CallFunc_Add_DoubleDouble_ReturnValue_6) == 0x0004B0, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::CallFunc_Add_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, CallFunc_SelectFloat_A_ImplicitCast) == 0x0004B8, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::CallFunc_SelectFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_Update_Spline_Mesh, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x0004C0, "Member 'PCG_SplineMesh_MulArray_C_Update_Spline_Mesh::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function PCG_SplineMesh_MulArray.PCG_SplineMesh_MulArray_C.UserConstructionScript
// 0x0002 (0x0002 - 0x0000)
struct PCG_SplineMesh_MulArray_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_IsPlayingInEditor_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PCG_SplineMesh_MulArray_C_UserConstructionScript) == 0x000001, "Wrong alignment on PCG_SplineMesh_MulArray_C_UserConstructionScript");
static_assert(sizeof(PCG_SplineMesh_MulArray_C_UserConstructionScript) == 0x000002, "Wrong size on PCG_SplineMesh_MulArray_C_UserConstructionScript");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_UserConstructionScript, CallFunc_IsPlayingInEditor_ReturnValue) == 0x000000, "Member 'PCG_SplineMesh_MulArray_C_UserConstructionScript::CallFunc_IsPlayingInEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_UserConstructionScript, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'PCG_SplineMesh_MulArray_C_UserConstructionScript::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function PCG_SplineMesh_MulArray.PCG_SplineMesh_MulArray_C.曲线贴地
// 0x0310 (0x0310 - 0x0000)
struct PCG_SplineMesh_MulArray_C_曲线贴地 final
{
public:
	class USplineComponent*                       Spline_0;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0028(0x0010)(ConstParm, ReferenceParm)
	TArray<class USplineComponent*>               CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0038(0x0010)(ReferenceParm, ContainsInstancedReference)
	class USplineComponent*                       CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0058(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     CallFunc_LineTraceMultiForObjects_OutHits;         // 0x00C0(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceMultiForObjects_ReturnValue;     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Array_Get_Item_1;                         // 0x00D8(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D6[0x2];                                      // 0x01D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0250(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALandscapeProxy*                        K2Node_DynamicCast_AsLandscape_Proxy;              // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BA[0x6];                                      // 0x02BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x02F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PCG_SplineMesh_MulArray_C_曲线贴地) == 0x000008, "Wrong alignment on PCG_SplineMesh_MulArray_C_曲线贴地");
static_assert(sizeof(PCG_SplineMesh_MulArray_C_曲线贴地) == 0x000310, "Wrong size on PCG_SplineMesh_MulArray_C_曲线贴地");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, Spline_0) == 0x000000, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::Spline_0' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, Temp_int_Variable) == 0x000008, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, Temp_int_Array_Index_Variable) == 0x000010, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, Temp_bool_True_if_break_was_hit_Variable) == 0x00001C, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, CallFunc_Not_PreBool_ReturnValue) == 0x000024, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, Temp_object_Variable) == 0x000028, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000038, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, CallFunc_Array_Get_Item) == 0x000048, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, K2Node_MakeArray_Array) == 0x000058, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, Temp_int_Loop_Counter_Variable_1) == 0x000068, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x000070, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, CallFunc_Add_VectorVector_ReturnValue) == 0x000088, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000A0, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, CallFunc_Less_IntInt_ReturnValue) == 0x0000B8, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, CallFunc_LineTraceMultiForObjects_OutHits) == 0x0000C0, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::CallFunc_LineTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, CallFunc_LineTraceMultiForObjects_ReturnValue) == 0x0000D0, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::CallFunc_LineTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, CallFunc_Array_Get_Item_1) == 0x0000D8, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, CallFunc_Array_Length_ReturnValue_1) == 0x0001D0, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, CallFunc_BreakHitResult_bBlockingHit) == 0x0001D4, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001D5, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, CallFunc_BreakHitResult_Time) == 0x0001D8, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, CallFunc_BreakHitResult_Distance) == 0x0001DC, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, CallFunc_BreakHitResult_Location) == 0x0001E0, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, CallFunc_BreakHitResult_ImpactPoint) == 0x0001F8, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, CallFunc_BreakHitResult_Normal) == 0x000210, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, CallFunc_BreakHitResult_ImpactNormal) == 0x000228, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, CallFunc_BreakHitResult_PhysMat) == 0x000240, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, CallFunc_BreakHitResult_HitActor) == 0x000248, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, CallFunc_BreakHitResult_HitComponent) == 0x000250, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, CallFunc_BreakHitResult_HitBoneName) == 0x000258, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, CallFunc_BreakHitResult_BoneName) == 0x000260, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, CallFunc_BreakHitResult_HitItem) == 0x000268, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, CallFunc_BreakHitResult_ElementIndex) == 0x00026C, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, CallFunc_BreakHitResult_FaceIndex) == 0x000270, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, CallFunc_BreakHitResult_TraceStart) == 0x000278, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, CallFunc_BreakHitResult_TraceEnd) == 0x000290, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002A8, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, K2Node_DynamicCast_AsLandscape_Proxy) == 0x0002B0, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::K2Node_DynamicCast_AsLandscape_Proxy' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, K2Node_DynamicCast_bSuccess) == 0x0002B8, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, CallFunc_BooleanAND_ReturnValue) == 0x0002B9, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, CallFunc_BreakVector_X) == 0x0002C0, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, CallFunc_BreakVector_Y) == 0x0002C8, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, CallFunc_BreakVector_Z) == 0x0002D0, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, CallFunc_Add_IntInt_ReturnValue_2) == 0x0002D8, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x0002DC, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0002E0, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, CallFunc_Subtract_IntInt_ReturnValue) == 0x0002E8, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, CallFunc_MakeVector_ReturnValue) == 0x0002F0, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PCG_SplineMesh_MulArray_C_曲线贴地, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000308, "Member 'PCG_SplineMesh_MulArray_C_曲线贴地::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

}

