#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Challenge_AimList_Puzzle

#include "Basic.hpp"


namespace SDK::Params
{

// Function WBP_Challenge_AimList_Puzzle.WBP_Challenge_AimList_Puzzle_C.ExecuteUbergraph_WBP_Challenge_AimList_Puzzle
// 0x0010 (0x0010 - 0x0000)
struct WBP_Challenge_AimList_Puzzle_C_ExecuteUbergraph_WBP_Challenge_AimList_Puzzle final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Challenge_AimList_Puzzle_C_ExecuteUbergraph_WBP_Challenge_AimList_Puzzle) == 0x000008, "Wrong alignment on WBP_Challenge_AimList_Puzzle_C_ExecuteUbergraph_WBP_Challenge_AimList_Puzzle");
static_assert(sizeof(WBP_Challenge_AimList_Puzzle_C_ExecuteUbergraph_WBP_Challenge_AimList_Puzzle) == 0x000010, "Wrong size on WBP_Challenge_AimList_Puzzle_C_ExecuteUbergraph_WBP_Challenge_AimList_Puzzle");
static_assert(offsetof(WBP_Challenge_AimList_Puzzle_C_ExecuteUbergraph_WBP_Challenge_AimList_Puzzle, EntryPoint) == 0x000000, "Member 'WBP_Challenge_AimList_Puzzle_C_ExecuteUbergraph_WBP_Challenge_AimList_Puzzle::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Challenge_AimList_Puzzle_C_ExecuteUbergraph_WBP_Challenge_AimList_Puzzle, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_Challenge_AimList_Puzzle_C_ExecuteUbergraph_WBP_Challenge_AimList_Puzzle::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_Challenge_AimList_Puzzle.WBP_Challenge_AimList_Puzzle_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct WBP_Challenge_AimList_Puzzle_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Challenge_AimList_Puzzle_C_GetModuleName) == 0x000008, "Wrong alignment on WBP_Challenge_AimList_Puzzle_C_GetModuleName");
static_assert(sizeof(WBP_Challenge_AimList_Puzzle_C_GetModuleName) == 0x000010, "Wrong size on WBP_Challenge_AimList_Puzzle_C_GetModuleName");
static_assert(offsetof(WBP_Challenge_AimList_Puzzle_C_GetModuleName, ReturnValue) == 0x000000, "Member 'WBP_Challenge_AimList_Puzzle_C_GetModuleName::ReturnValue' has a wrong offset!");

}

