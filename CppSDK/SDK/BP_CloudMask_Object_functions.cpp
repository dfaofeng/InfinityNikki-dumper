#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CloudMask_Object

#include "Basic.hpp"

#include "BP_CloudMask_Object_classes.hpp"
#include "BP_CloudMask_Object_parameters.hpp"


namespace SDK
{

// Function BP_CloudMask_Object.BP_CloudMask_Object_C.Construction Cloud
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_CloudMask_Object_C::Construction_Cloud()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CloudMask_Object_C", "Construction Cloud");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CloudMask_Object.BP_CloudMask_Object_C.Delete Cloud
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CloudMask_Object_C::Delete_Cloud()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CloudMask_Object_C", "Delete Cloud");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CloudMask_Object.BP_CloudMask_Object_C.Initialize
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CloudMask_Object_C::Initialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CloudMask_Object_C", "Initialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CloudMask_Object.BP_CloudMask_Object_C.Update Mask Generator
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_CloudMask_Object_C::Update_Mask_Generator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CloudMask_Object_C", "Update Mask Generator");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CloudMask_Object.BP_CloudMask_Object_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_CloudMask_Object_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CloudMask_Object_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

