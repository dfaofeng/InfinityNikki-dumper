#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: S_TimeStamp

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// UserDefinedStruct S_TimeStamp.S_TimeStamp
// 0x0068 (0x0068 - 0x0000)
struct FS_TimeStamp final
{
public:
	double                                        DayNightProportions_3_2F79798942606841B1D67F81FE2C6D6E; // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DayHour_10_913BDB6D4F989A5B9264CB978BEAF663;       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NightHour_11_429FB2F943EAB272F0A03E973EA1DFB9;     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SunriseHour_12_21437F914C317FCBB94A0A8740824DBE;   // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SunsetHour_13_D7F2E1D44EAB96C83EC17A821C1B82BD;    // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MorningHour_14_FE9A432743162EA02845F4B176E477D2;   // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AfternoonHour_15_7142BFD84F707C6DDB3DAB98D366E887; // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MoonAngle_25_2057D8A847BCA2FC3F69E7843DB8D0EC;     // 0x0038(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MoonAngleSecond_19_70F984CC488720931F4A10AD118D46A5; // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MoonCycle_21_FED4EEC444BA907AA9EA30B87712763E;     // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        StarCycle_23_D199C7D54EA5178944A95BB72290AF64;     // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FS_TimeStamp) == 0x000008, "Wrong alignment on FS_TimeStamp");
static_assert(sizeof(FS_TimeStamp) == 0x000068, "Wrong size on FS_TimeStamp");
static_assert(offsetof(FS_TimeStamp, DayNightProportions_3_2F79798942606841B1D67F81FE2C6D6E) == 0x000000, "Member 'FS_TimeStamp::DayNightProportions_3_2F79798942606841B1D67F81FE2C6D6E' has a wrong offset!");
static_assert(offsetof(FS_TimeStamp, DayHour_10_913BDB6D4F989A5B9264CB978BEAF663) == 0x000008, "Member 'FS_TimeStamp::DayHour_10_913BDB6D4F989A5B9264CB978BEAF663' has a wrong offset!");
static_assert(offsetof(FS_TimeStamp, NightHour_11_429FB2F943EAB272F0A03E973EA1DFB9) == 0x000010, "Member 'FS_TimeStamp::NightHour_11_429FB2F943EAB272F0A03E973EA1DFB9' has a wrong offset!");
static_assert(offsetof(FS_TimeStamp, SunriseHour_12_21437F914C317FCBB94A0A8740824DBE) == 0x000018, "Member 'FS_TimeStamp::SunriseHour_12_21437F914C317FCBB94A0A8740824DBE' has a wrong offset!");
static_assert(offsetof(FS_TimeStamp, SunsetHour_13_D7F2E1D44EAB96C83EC17A821C1B82BD) == 0x000020, "Member 'FS_TimeStamp::SunsetHour_13_D7F2E1D44EAB96C83EC17A821C1B82BD' has a wrong offset!");
static_assert(offsetof(FS_TimeStamp, MorningHour_14_FE9A432743162EA02845F4B176E477D2) == 0x000028, "Member 'FS_TimeStamp::MorningHour_14_FE9A432743162EA02845F4B176E477D2' has a wrong offset!");
static_assert(offsetof(FS_TimeStamp, AfternoonHour_15_7142BFD84F707C6DDB3DAB98D366E887) == 0x000030, "Member 'FS_TimeStamp::AfternoonHour_15_7142BFD84F707C6DDB3DAB98D366E887' has a wrong offset!");
static_assert(offsetof(FS_TimeStamp, MoonAngle_25_2057D8A847BCA2FC3F69E7843DB8D0EC) == 0x000038, "Member 'FS_TimeStamp::MoonAngle_25_2057D8A847BCA2FC3F69E7843DB8D0EC' has a wrong offset!");
static_assert(offsetof(FS_TimeStamp, MoonAngleSecond_19_70F984CC488720931F4A10AD118D46A5) == 0x000050, "Member 'FS_TimeStamp::MoonAngleSecond_19_70F984CC488720931F4A10AD118D46A5' has a wrong offset!");
static_assert(offsetof(FS_TimeStamp, MoonCycle_21_FED4EEC444BA907AA9EA30B87712763E) == 0x000058, "Member 'FS_TimeStamp::MoonCycle_21_FED4EEC444BA907AA9EA30B87712763E' has a wrong offset!");
static_assert(offsetof(FS_TimeStamp, StarCycle_23_D199C7D54EA5178944A95BB72290AF64) == 0x000060, "Member 'FS_TimeStamp::StarCycle_23_D199C7D54EA5178944A95BB72290AF64' has a wrong offset!");

}

