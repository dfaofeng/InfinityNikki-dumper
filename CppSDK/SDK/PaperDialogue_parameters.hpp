#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PaperDialogue

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "PaperDialogue_structs.hpp"


namespace SDK::Params
{

// Function PaperDialogue.PaperDialogue.OnTriggerEvent
// 0x0004 (0x0004 - 0x0000)
struct PaperDialogue_OnTriggerEvent final
{
public:
	int32                                         I;                                                 // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogue_OnTriggerEvent) == 0x000004, "Wrong alignment on PaperDialogue_OnTriggerEvent");
static_assert(sizeof(PaperDialogue_OnTriggerEvent) == 0x000004, "Wrong size on PaperDialogue_OnTriggerEvent");
static_assert(offsetof(PaperDialogue_OnTriggerEvent, I) == 0x000000, "Member 'PaperDialogue_OnTriggerEvent::I' has a wrong offset!");

// Function PaperDialogue.PaperDialogueBPLibrary.ConvertStageCustomExtendedData
// 0x0020 (0x0020 - 0x0000)
struct PaperDialogueBPLibrary_ConvertStageCustomExtendedData final
{
public:
	struct FDialogueCustomExtendedData            InCustomExtendedData;                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UStructProperty*                        OutStructData;                                     // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PaperDialogueBPLibrary_ConvertStageCustomExtendedData) == 0x000008, "Wrong alignment on PaperDialogueBPLibrary_ConvertStageCustomExtendedData");
static_assert(sizeof(PaperDialogueBPLibrary_ConvertStageCustomExtendedData) == 0x000020, "Wrong size on PaperDialogueBPLibrary_ConvertStageCustomExtendedData");
static_assert(offsetof(PaperDialogueBPLibrary_ConvertStageCustomExtendedData, InCustomExtendedData) == 0x000000, "Member 'PaperDialogueBPLibrary_ConvertStageCustomExtendedData::InCustomExtendedData' has a wrong offset!");
static_assert(offsetof(PaperDialogueBPLibrary_ConvertStageCustomExtendedData, OutStructData) == 0x000010, "Member 'PaperDialogueBPLibrary_ConvertStageCustomExtendedData::OutStructData' has a wrong offset!");
static_assert(offsetof(PaperDialogueBPLibrary_ConvertStageCustomExtendedData, ReturnValue) == 0x000018, "Member 'PaperDialogueBPLibrary_ConvertStageCustomExtendedData::ReturnValue' has a wrong offset!");

// Function PaperDialogue.PaperDialogueBPLibrary.ConvertStageCustomExtendedJson
// 0x0020 (0x0020 - 0x0000)
struct PaperDialogueBPLibrary_ConvertStageCustomExtendedJson final
{
public:
	class FString                                 InCustomExtendedJson;                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStructProperty*                        OutStructData;                                     // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PaperDialogueBPLibrary_ConvertStageCustomExtendedJson) == 0x000008, "Wrong alignment on PaperDialogueBPLibrary_ConvertStageCustomExtendedJson");
static_assert(sizeof(PaperDialogueBPLibrary_ConvertStageCustomExtendedJson) == 0x000020, "Wrong size on PaperDialogueBPLibrary_ConvertStageCustomExtendedJson");
static_assert(offsetof(PaperDialogueBPLibrary_ConvertStageCustomExtendedJson, InCustomExtendedJson) == 0x000000, "Member 'PaperDialogueBPLibrary_ConvertStageCustomExtendedJson::InCustomExtendedJson' has a wrong offset!");
static_assert(offsetof(PaperDialogueBPLibrary_ConvertStageCustomExtendedJson, OutStructData) == 0x000010, "Member 'PaperDialogueBPLibrary_ConvertStageCustomExtendedJson::OutStructData' has a wrong offset!");
static_assert(offsetof(PaperDialogueBPLibrary_ConvertStageCustomExtendedJson, ReturnValue) == 0x000018, "Member 'PaperDialogueBPLibrary_ConvertStageCustomExtendedJson::ReturnValue' has a wrong offset!");

// Function PaperDialogue.PaperDialogueBPLibrary.GetCameraShakeTrackGenerationConfig
// 0x0030 (0x0030 - 0x0000)
struct PaperDialogueBPLibrary_GetCameraShakeTrackGenerationConfig final
{
public:
	struct FPaperDialogueGenerationCameraShakeTracks ReturnValue;                                    // 0x0000(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueBPLibrary_GetCameraShakeTrackGenerationConfig) == 0x000008, "Wrong alignment on PaperDialogueBPLibrary_GetCameraShakeTrackGenerationConfig");
static_assert(sizeof(PaperDialogueBPLibrary_GetCameraShakeTrackGenerationConfig) == 0x000030, "Wrong size on PaperDialogueBPLibrary_GetCameraShakeTrackGenerationConfig");
static_assert(offsetof(PaperDialogueBPLibrary_GetCameraShakeTrackGenerationConfig, ReturnValue) == 0x000000, "Member 'PaperDialogueBPLibrary_GetCameraShakeTrackGenerationConfig::ReturnValue' has a wrong offset!");

// Function PaperDialogue.PaperDialogueBPLibrary.GetCameraTrackGenerationConfig
// 0x0020 (0x0020 - 0x0000)
struct PaperDialogueBPLibrary_GetCameraTrackGenerationConfig final
{
public:
	struct FPaperDialogueGenerationSetupCameraStruct ReturnValue;                                    // 0x0000(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueBPLibrary_GetCameraTrackGenerationConfig) == 0x000008, "Wrong alignment on PaperDialogueBPLibrary_GetCameraTrackGenerationConfig");
static_assert(sizeof(PaperDialogueBPLibrary_GetCameraTrackGenerationConfig) == 0x000020, "Wrong size on PaperDialogueBPLibrary_GetCameraTrackGenerationConfig");
static_assert(offsetof(PaperDialogueBPLibrary_GetCameraTrackGenerationConfig, ReturnValue) == 0x000000, "Member 'PaperDialogueBPLibrary_GetCameraTrackGenerationConfig::ReturnValue' has a wrong offset!");

// Function PaperDialogue.PaperDialogueBPLibrary.GetCharacterNameableTrackGenerationConfig
// 0x0050 (0x0050 - 0x0000)
struct PaperDialogueBPLibrary_GetCharacterNameableTrackGenerationConfig final
{
public:
	struct FPaperDialogueGenerationCharacterNameableTracks ReturnValue;                              // 0x0000(0x0050)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueBPLibrary_GetCharacterNameableTrackGenerationConfig) == 0x000008, "Wrong alignment on PaperDialogueBPLibrary_GetCharacterNameableTrackGenerationConfig");
static_assert(sizeof(PaperDialogueBPLibrary_GetCharacterNameableTrackGenerationConfig) == 0x000050, "Wrong size on PaperDialogueBPLibrary_GetCharacterNameableTrackGenerationConfig");
static_assert(offsetof(PaperDialogueBPLibrary_GetCharacterNameableTrackGenerationConfig, ReturnValue) == 0x000000, "Member 'PaperDialogueBPLibrary_GetCharacterNameableTrackGenerationConfig::ReturnValue' has a wrong offset!");

// Function PaperDialogue.PaperDialogueBPLibrary.GetCustomTrackAndSlotConfigs
// 0x0010 (0x0010 - 0x0000)
struct PaperDialogueBPLibrary_GetCustomTrackAndSlotConfigs final
{
public:
	struct FPaperDialogueGenerationCustomTracks   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueBPLibrary_GetCustomTrackAndSlotConfigs) == 0x000008, "Wrong alignment on PaperDialogueBPLibrary_GetCustomTrackAndSlotConfigs");
static_assert(sizeof(PaperDialogueBPLibrary_GetCustomTrackAndSlotConfigs) == 0x000010, "Wrong size on PaperDialogueBPLibrary_GetCustomTrackAndSlotConfigs");
static_assert(offsetof(PaperDialogueBPLibrary_GetCustomTrackAndSlotConfigs, ReturnValue) == 0x000000, "Member 'PaperDialogueBPLibrary_GetCustomTrackAndSlotConfigs::ReturnValue' has a wrong offset!");

// Function PaperDialogue.PaperDialogueBPLibrary.GetEmotionTrackGenerationConfig
// 0x00C0 (0x00C0 - 0x0000)
struct PaperDialogueBPLibrary_GetEmotionTrackGenerationConfig final
{
public:
	struct FPaperDialogueGenerationEmotionTracks  ReturnValue;                                       // 0x0000(0x00C0)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueBPLibrary_GetEmotionTrackGenerationConfig) == 0x000008, "Wrong alignment on PaperDialogueBPLibrary_GetEmotionTrackGenerationConfig");
static_assert(sizeof(PaperDialogueBPLibrary_GetEmotionTrackGenerationConfig) == 0x0000C0, "Wrong size on PaperDialogueBPLibrary_GetEmotionTrackGenerationConfig");
static_assert(offsetof(PaperDialogueBPLibrary_GetEmotionTrackGenerationConfig, ReturnValue) == 0x000000, "Member 'PaperDialogueBPLibrary_GetEmotionTrackGenerationConfig::ReturnValue' has a wrong offset!");

// Function PaperDialogue.PaperDialogueBPLibrary.GetFadeTrackGenerationConfig
// 0x0038 (0x0038 - 0x0000)
struct PaperDialogueBPLibrary_GetFadeTrackGenerationConfig final
{
public:
	struct FPaperDialogueGenerationSetupFadeStruct ReturnValue;                                      // 0x0000(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueBPLibrary_GetFadeTrackGenerationConfig) == 0x000008, "Wrong alignment on PaperDialogueBPLibrary_GetFadeTrackGenerationConfig");
static_assert(sizeof(PaperDialogueBPLibrary_GetFadeTrackGenerationConfig) == 0x000038, "Wrong size on PaperDialogueBPLibrary_GetFadeTrackGenerationConfig");
static_assert(offsetof(PaperDialogueBPLibrary_GetFadeTrackGenerationConfig, ReturnValue) == 0x000000, "Member 'PaperDialogueBPLibrary_GetFadeTrackGenerationConfig::ReturnValue' has a wrong offset!");

// Function PaperDialogue.PaperDialogueBPLibrary.GetGestureTrackGenerationConfig
// 0x0050 (0x0050 - 0x0000)
struct PaperDialogueBPLibrary_GetGestureTrackGenerationConfig final
{
public:
	struct FPaperDialogueGenerationGestureTracks  ReturnValue;                                       // 0x0000(0x0050)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueBPLibrary_GetGestureTrackGenerationConfig) == 0x000008, "Wrong alignment on PaperDialogueBPLibrary_GetGestureTrackGenerationConfig");
static_assert(sizeof(PaperDialogueBPLibrary_GetGestureTrackGenerationConfig) == 0x000050, "Wrong size on PaperDialogueBPLibrary_GetGestureTrackGenerationConfig");
static_assert(offsetof(PaperDialogueBPLibrary_GetGestureTrackGenerationConfig, ReturnValue) == 0x000000, "Member 'PaperDialogueBPLibrary_GetGestureTrackGenerationConfig::ReturnValue' has a wrong offset!");

// Function PaperDialogue.PaperDialogueBPLibrary.GetHighHeelTrackGenerationConfig
// 0x0068 (0x0068 - 0x0000)
struct PaperDialogueBPLibrary_GetHighHeelTrackGenerationConfig final
{
public:
	struct FPaperDialogueGenerationHighHeelTracks ReturnValue;                                       // 0x0000(0x0068)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueBPLibrary_GetHighHeelTrackGenerationConfig) == 0x000008, "Wrong alignment on PaperDialogueBPLibrary_GetHighHeelTrackGenerationConfig");
static_assert(sizeof(PaperDialogueBPLibrary_GetHighHeelTrackGenerationConfig) == 0x000068, "Wrong size on PaperDialogueBPLibrary_GetHighHeelTrackGenerationConfig");
static_assert(offsetof(PaperDialogueBPLibrary_GetHighHeelTrackGenerationConfig, ReturnValue) == 0x000000, "Member 'PaperDialogueBPLibrary_GetHighHeelTrackGenerationConfig::ReturnValue' has a wrong offset!");

// Function PaperDialogue.PaperDialogueBPLibrary.GetIndexByDisplayName
// 0x0030 (0x0030 - 0x0000)
struct PaperDialogueBPLibrary_GetIndexByDisplayName final
{
public:
	struct FSoftObjectPath                        EnumSoftPath;                                      // 0x0000(0x0020)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   DisplayName;                                       // 0x0020(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         ReturnValue;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueBPLibrary_GetIndexByDisplayName) == 0x000008, "Wrong alignment on PaperDialogueBPLibrary_GetIndexByDisplayName");
static_assert(sizeof(PaperDialogueBPLibrary_GetIndexByDisplayName) == 0x000030, "Wrong size on PaperDialogueBPLibrary_GetIndexByDisplayName");
static_assert(offsetof(PaperDialogueBPLibrary_GetIndexByDisplayName, EnumSoftPath) == 0x000000, "Member 'PaperDialogueBPLibrary_GetIndexByDisplayName::EnumSoftPath' has a wrong offset!");
static_assert(offsetof(PaperDialogueBPLibrary_GetIndexByDisplayName, DisplayName) == 0x000020, "Member 'PaperDialogueBPLibrary_GetIndexByDisplayName::DisplayName' has a wrong offset!");
static_assert(offsetof(PaperDialogueBPLibrary_GetIndexByDisplayName, ReturnValue) == 0x000028, "Member 'PaperDialogueBPLibrary_GetIndexByDisplayName::ReturnValue' has a wrong offset!");

// Function PaperDialogue.PaperDialogueBPLibrary.GetLookAtTrackGenerationConfig
// 0x00B8 (0x00B8 - 0x0000)
struct PaperDialogueBPLibrary_GetLookAtTrackGenerationConfig final
{
public:
	struct FPaperDialogueGenerationLookAtTracks   ReturnValue;                                       // 0x0000(0x00B8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueBPLibrary_GetLookAtTrackGenerationConfig) == 0x000008, "Wrong alignment on PaperDialogueBPLibrary_GetLookAtTrackGenerationConfig");
static_assert(sizeof(PaperDialogueBPLibrary_GetLookAtTrackGenerationConfig) == 0x0000B8, "Wrong size on PaperDialogueBPLibrary_GetLookAtTrackGenerationConfig");
static_assert(offsetof(PaperDialogueBPLibrary_GetLookAtTrackGenerationConfig, ReturnValue) == 0x000000, "Member 'PaperDialogueBPLibrary_GetLookAtTrackGenerationConfig::ReturnValue' has a wrong offset!");

// Function PaperDialogue.PaperDialogueBPLibrary.GetResimulationTrackGenerationConfig
// 0x0028 (0x0028 - 0x0000)
struct PaperDialogueBPLibrary_GetResimulationTrackGenerationConfig final
{
public:
	struct FPaperDialogueGenerationResimulationTracks ReturnValue;                                   // 0x0000(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueBPLibrary_GetResimulationTrackGenerationConfig) == 0x000008, "Wrong alignment on PaperDialogueBPLibrary_GetResimulationTrackGenerationConfig");
static_assert(sizeof(PaperDialogueBPLibrary_GetResimulationTrackGenerationConfig) == 0x000028, "Wrong size on PaperDialogueBPLibrary_GetResimulationTrackGenerationConfig");
static_assert(offsetof(PaperDialogueBPLibrary_GetResimulationTrackGenerationConfig, ReturnValue) == 0x000000, "Member 'PaperDialogueBPLibrary_GetResimulationTrackGenerationConfig::ReturnValue' has a wrong offset!");

// Function PaperDialogue.PaperDialogueBPLibrary.GetTrackAndSlotConfigs
// 0x0020 (0x0020 - 0x0000)
struct PaperDialogueBPLibrary_GetTrackAndSlotConfigs final
{
public:
	struct FPaperDialogueGenerationAnimationTracks ReturnValue;                                      // 0x0000(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueBPLibrary_GetTrackAndSlotConfigs) == 0x000008, "Wrong alignment on PaperDialogueBPLibrary_GetTrackAndSlotConfigs");
static_assert(sizeof(PaperDialogueBPLibrary_GetTrackAndSlotConfigs) == 0x000020, "Wrong size on PaperDialogueBPLibrary_GetTrackAndSlotConfigs");
static_assert(offsetof(PaperDialogueBPLibrary_GetTrackAndSlotConfigs, ReturnValue) == 0x000000, "Member 'PaperDialogueBPLibrary_GetTrackAndSlotConfigs::ReturnValue' has a wrong offset!");

// Function PaperDialogue.PaperDialogueBPLibrary.GetTransformTrackGenerationConfig
// 0x0020 (0x0020 - 0x0000)
struct PaperDialogueBPLibrary_GetTransformTrackGenerationConfig final
{
public:
	struct FPaperDialogueGenerationTransformTracks ReturnValue;                                      // 0x0000(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueBPLibrary_GetTransformTrackGenerationConfig) == 0x000008, "Wrong alignment on PaperDialogueBPLibrary_GetTransformTrackGenerationConfig");
static_assert(sizeof(PaperDialogueBPLibrary_GetTransformTrackGenerationConfig) == 0x000020, "Wrong size on PaperDialogueBPLibrary_GetTransformTrackGenerationConfig");
static_assert(offsetof(PaperDialogueBPLibrary_GetTransformTrackGenerationConfig, ReturnValue) == 0x000000, "Member 'PaperDialogueBPLibrary_GetTransformTrackGenerationConfig::ReturnValue' has a wrong offset!");

// Function PaperDialogue.PaperDialogueBPLibrary.GetUniteTrackAndSlotConfigs
// 0x0078 (0x0078 - 0x0000)
struct PaperDialogueBPLibrary_GetUniteTrackAndSlotConfigs final
{
public:
	struct FPaperDialogueGenerationUnifiedAnimationTracks ReturnValue;                               // 0x0000(0x0078)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueBPLibrary_GetUniteTrackAndSlotConfigs) == 0x000008, "Wrong alignment on PaperDialogueBPLibrary_GetUniteTrackAndSlotConfigs");
static_assert(sizeof(PaperDialogueBPLibrary_GetUniteTrackAndSlotConfigs) == 0x000078, "Wrong size on PaperDialogueBPLibrary_GetUniteTrackAndSlotConfigs");
static_assert(offsetof(PaperDialogueBPLibrary_GetUniteTrackAndSlotConfigs, ReturnValue) == 0x000000, "Member 'PaperDialogueBPLibrary_GetUniteTrackAndSlotConfigs::ReturnValue' has a wrong offset!");

// Function PaperDialogue.PaperDialogueBPLibrary.InitDialogueData
// 0x0001 (0x0001 - 0x0000)
struct PaperDialogueBPLibrary_InitDialogueData final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueBPLibrary_InitDialogueData) == 0x000001, "Wrong alignment on PaperDialogueBPLibrary_InitDialogueData");
static_assert(sizeof(PaperDialogueBPLibrary_InitDialogueData) == 0x000001, "Wrong size on PaperDialogueBPLibrary_InitDialogueData");
static_assert(offsetof(PaperDialogueBPLibrary_InitDialogueData, ReturnValue) == 0x000000, "Member 'PaperDialogueBPLibrary_InitDialogueData::ReturnValue' has a wrong offset!");

// Function PaperDialogue.PaperDialogueBPLibrary.PlayDialogueStage
// 0x00F0 (0x00F0 - 0x0000)
struct PaperDialogueBPLibrary_PlayDialogueStage final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             SpawnTransform;                                    // 0x0010(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPaperDialogueStage*                    DialogueStage;                                     // 0x0070(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPaperDialogueUserWidget*               InDialogueWidget;                                  // 0x0078(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FName, class AActor*>              BindingActorsBySlotName;                           // 0x0080(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class FName>                           UnSwitchAvatarTags;                                // 0x00D0(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bAutoPlay;                                         // 0x00E0(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bExitAfterPlayEnd;                                 // 0x00E1(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableOverrideInstanceData;                       // 0x00E2(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAttachBindActorToSequence;                        // 0x00E3(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APaperDialogueSequenceActor*            ReturnValue;                                       // 0x00E8(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueBPLibrary_PlayDialogueStage) == 0x000010, "Wrong alignment on PaperDialogueBPLibrary_PlayDialogueStage");
static_assert(sizeof(PaperDialogueBPLibrary_PlayDialogueStage) == 0x0000F0, "Wrong size on PaperDialogueBPLibrary_PlayDialogueStage");
static_assert(offsetof(PaperDialogueBPLibrary_PlayDialogueStage, WorldContextObject) == 0x000000, "Member 'PaperDialogueBPLibrary_PlayDialogueStage::WorldContextObject' has a wrong offset!");
static_assert(offsetof(PaperDialogueBPLibrary_PlayDialogueStage, SpawnTransform) == 0x000010, "Member 'PaperDialogueBPLibrary_PlayDialogueStage::SpawnTransform' has a wrong offset!");
static_assert(offsetof(PaperDialogueBPLibrary_PlayDialogueStage, DialogueStage) == 0x000070, "Member 'PaperDialogueBPLibrary_PlayDialogueStage::DialogueStage' has a wrong offset!");
static_assert(offsetof(PaperDialogueBPLibrary_PlayDialogueStage, InDialogueWidget) == 0x000078, "Member 'PaperDialogueBPLibrary_PlayDialogueStage::InDialogueWidget' has a wrong offset!");
static_assert(offsetof(PaperDialogueBPLibrary_PlayDialogueStage, BindingActorsBySlotName) == 0x000080, "Member 'PaperDialogueBPLibrary_PlayDialogueStage::BindingActorsBySlotName' has a wrong offset!");
static_assert(offsetof(PaperDialogueBPLibrary_PlayDialogueStage, UnSwitchAvatarTags) == 0x0000D0, "Member 'PaperDialogueBPLibrary_PlayDialogueStage::UnSwitchAvatarTags' has a wrong offset!");
static_assert(offsetof(PaperDialogueBPLibrary_PlayDialogueStage, bAutoPlay) == 0x0000E0, "Member 'PaperDialogueBPLibrary_PlayDialogueStage::bAutoPlay' has a wrong offset!");
static_assert(offsetof(PaperDialogueBPLibrary_PlayDialogueStage, bExitAfterPlayEnd) == 0x0000E1, "Member 'PaperDialogueBPLibrary_PlayDialogueStage::bExitAfterPlayEnd' has a wrong offset!");
static_assert(offsetof(PaperDialogueBPLibrary_PlayDialogueStage, bEnableOverrideInstanceData) == 0x0000E2, "Member 'PaperDialogueBPLibrary_PlayDialogueStage::bEnableOverrideInstanceData' has a wrong offset!");
static_assert(offsetof(PaperDialogueBPLibrary_PlayDialogueStage, bAttachBindActorToSequence) == 0x0000E3, "Member 'PaperDialogueBPLibrary_PlayDialogueStage::bAttachBindActorToSequence' has a wrong offset!");
static_assert(offsetof(PaperDialogueBPLibrary_PlayDialogueStage, ReturnValue) == 0x0000E8, "Member 'PaperDialogueBPLibrary_PlayDialogueStage::ReturnValue' has a wrong offset!");

// Function PaperDialogue.PaperDialogueSequenceActor.AddBindingBySlotIndex
// 0x0010 (0x0010 - 0x0000)
struct PaperDialogueSequenceActor_AddBindingBySlotIndex final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 InBindingActor;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueSequenceActor_AddBindingBySlotIndex) == 0x000008, "Wrong alignment on PaperDialogueSequenceActor_AddBindingBySlotIndex");
static_assert(sizeof(PaperDialogueSequenceActor_AddBindingBySlotIndex) == 0x000010, "Wrong size on PaperDialogueSequenceActor_AddBindingBySlotIndex");
static_assert(offsetof(PaperDialogueSequenceActor_AddBindingBySlotIndex, SlotIndex) == 0x000000, "Member 'PaperDialogueSequenceActor_AddBindingBySlotIndex::SlotIndex' has a wrong offset!");
static_assert(offsetof(PaperDialogueSequenceActor_AddBindingBySlotIndex, InBindingActor) == 0x000008, "Member 'PaperDialogueSequenceActor_AddBindingBySlotIndex::InBindingActor' has a wrong offset!");

// Function PaperDialogue.PaperDialogueSequenceActor.AddBindingBySlotName
// 0x0010 (0x0010 - 0x0000)
struct PaperDialogueSequenceActor_AddBindingBySlotName final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 InBindingActor;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueSequenceActor_AddBindingBySlotName) == 0x000008, "Wrong alignment on PaperDialogueSequenceActor_AddBindingBySlotName");
static_assert(sizeof(PaperDialogueSequenceActor_AddBindingBySlotName) == 0x000010, "Wrong size on PaperDialogueSequenceActor_AddBindingBySlotName");
static_assert(offsetof(PaperDialogueSequenceActor_AddBindingBySlotName, Name_0) == 0x000000, "Member 'PaperDialogueSequenceActor_AddBindingBySlotName::Name_0' has a wrong offset!");
static_assert(offsetof(PaperDialogueSequenceActor_AddBindingBySlotName, InBindingActor) == 0x000008, "Member 'PaperDialogueSequenceActor_AddBindingBySlotName::InBindingActor' has a wrong offset!");

// Function PaperDialogue.PaperDialogueSequenceActor.GetDialogue
// 0x0008 (0x0008 - 0x0000)
struct PaperDialogueSequenceActor_GetDialogue final
{
public:
	class UPaperDialogue*                         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueSequenceActor_GetDialogue) == 0x000008, "Wrong alignment on PaperDialogueSequenceActor_GetDialogue");
static_assert(sizeof(PaperDialogueSequenceActor_GetDialogue) == 0x000008, "Wrong size on PaperDialogueSequenceActor_GetDialogue");
static_assert(offsetof(PaperDialogueSequenceActor_GetDialogue, ReturnValue) == 0x000000, "Member 'PaperDialogueSequenceActor_GetDialogue::ReturnValue' has a wrong offset!");

// Function PaperDialogue.PaperDialogueSequenceActor.GetDialogueCharacters
// 0x0050 (0x0050 - 0x0000)
struct PaperDialogueSequenceActor_GetDialogueCharacters final
{
public:
	TMap<int32, class AActor*>                    ReturnValue;                                       // 0x0000(0x0050)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueSequenceActor_GetDialogueCharacters) == 0x000008, "Wrong alignment on PaperDialogueSequenceActor_GetDialogueCharacters");
static_assert(sizeof(PaperDialogueSequenceActor_GetDialogueCharacters) == 0x000050, "Wrong size on PaperDialogueSequenceActor_GetDialogueCharacters");
static_assert(offsetof(PaperDialogueSequenceActor_GetDialogueCharacters, ReturnValue) == 0x000000, "Member 'PaperDialogueSequenceActor_GetDialogueCharacters::ReturnValue' has a wrong offset!");

// Function PaperDialogue.PaperDialogueSequenceActor.GetDialogueGraph
// 0x0008 (0x0008 - 0x0000)
struct PaperDialogueSequenceActor_GetDialogueGraph final
{
public:
	class UPaperDialogueStage*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueSequenceActor_GetDialogueGraph) == 0x000008, "Wrong alignment on PaperDialogueSequenceActor_GetDialogueGraph");
static_assert(sizeof(PaperDialogueSequenceActor_GetDialogueGraph) == 0x000008, "Wrong size on PaperDialogueSequenceActor_GetDialogueGraph");
static_assert(offsetof(PaperDialogueSequenceActor_GetDialogueGraph, ReturnValue) == 0x000000, "Member 'PaperDialogueSequenceActor_GetDialogueGraph::ReturnValue' has a wrong offset!");

// Function PaperDialogue.PaperDialogueSequenceActor.IsAutoPlay
// 0x0001 (0x0001 - 0x0000)
struct PaperDialogueSequenceActor_IsAutoPlay final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueSequenceActor_IsAutoPlay) == 0x000001, "Wrong alignment on PaperDialogueSequenceActor_IsAutoPlay");
static_assert(sizeof(PaperDialogueSequenceActor_IsAutoPlay) == 0x000001, "Wrong size on PaperDialogueSequenceActor_IsAutoPlay");
static_assert(offsetof(PaperDialogueSequenceActor_IsAutoPlay, ReturnValue) == 0x000000, "Member 'PaperDialogueSequenceActor_IsAutoPlay::ReturnValue' has a wrong offset!");

// Function PaperDialogue.PaperDialogueSequenceActor.IsPlaying
// 0x0001 (0x0001 - 0x0000)
struct PaperDialogueSequenceActor_IsPlaying final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueSequenceActor_IsPlaying) == 0x000001, "Wrong alignment on PaperDialogueSequenceActor_IsPlaying");
static_assert(sizeof(PaperDialogueSequenceActor_IsPlaying) == 0x000001, "Wrong size on PaperDialogueSequenceActor_IsPlaying");
static_assert(offsetof(PaperDialogueSequenceActor_IsPlaying, ReturnValue) == 0x000000, "Member 'PaperDialogueSequenceActor_IsPlaying::ReturnValue' has a wrong offset!");

// Function PaperDialogue.PaperDialogueSequenceActor.JumpToGroup
// 0x0008 (0x0008 - 0x0000)
struct PaperDialogueSequenceActor_JumpToGroup final
{
public:
	int32                                         GroupID;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PaperDialogueSequenceActor_JumpToGroup) == 0x000004, "Wrong alignment on PaperDialogueSequenceActor_JumpToGroup");
static_assert(sizeof(PaperDialogueSequenceActor_JumpToGroup) == 0x000008, "Wrong size on PaperDialogueSequenceActor_JumpToGroup");
static_assert(offsetof(PaperDialogueSequenceActor_JumpToGroup, GroupID) == 0x000000, "Member 'PaperDialogueSequenceActor_JumpToGroup::GroupID' has a wrong offset!");
static_assert(offsetof(PaperDialogueSequenceActor_JumpToGroup, ReturnValue) == 0x000004, "Member 'PaperDialogueSequenceActor_JumpToGroup::ReturnValue' has a wrong offset!");

// Function PaperDialogue.PaperDialogueSequenceActor.Pause
// 0x0002 (0x0002 - 0x0000)
struct PaperDialogueSequenceActor_Pause final
{
public:
	bool                                          bPause;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueSequenceActor_Pause) == 0x000001, "Wrong alignment on PaperDialogueSequenceActor_Pause");
static_assert(sizeof(PaperDialogueSequenceActor_Pause) == 0x000002, "Wrong size on PaperDialogueSequenceActor_Pause");
static_assert(offsetof(PaperDialogueSequenceActor_Pause, bPause) == 0x000000, "Member 'PaperDialogueSequenceActor_Pause::bPause' has a wrong offset!");
static_assert(offsetof(PaperDialogueSequenceActor_Pause, ReturnValue) == 0x000001, "Member 'PaperDialogueSequenceActor_Pause::ReturnValue' has a wrong offset!");

// Function PaperDialogue.PaperDialogueSequenceActor.Play
// 0x0004 (0x0004 - 0x0000)
struct PaperDialogueSequenceActor_Play final
{
public:
	int32                                         StartLineIndex;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueSequenceActor_Play) == 0x000004, "Wrong alignment on PaperDialogueSequenceActor_Play");
static_assert(sizeof(PaperDialogueSequenceActor_Play) == 0x000004, "Wrong size on PaperDialogueSequenceActor_Play");
static_assert(offsetof(PaperDialogueSequenceActor_Play, StartLineIndex) == 0x000000, "Member 'PaperDialogueSequenceActor_Play::StartLineIndex' has a wrong offset!");

// Function PaperDialogue.PaperDialogueSequenceActor.SetAutoPlay
// 0x0001 (0x0001 - 0x0000)
struct PaperDialogueSequenceActor_SetAutoPlay final
{
public:
	bool                                          InAutoPlay;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueSequenceActor_SetAutoPlay) == 0x000001, "Wrong alignment on PaperDialogueSequenceActor_SetAutoPlay");
static_assert(sizeof(PaperDialogueSequenceActor_SetAutoPlay) == 0x000001, "Wrong size on PaperDialogueSequenceActor_SetAutoPlay");
static_assert(offsetof(PaperDialogueSequenceActor_SetAutoPlay, InAutoPlay) == 0x000000, "Member 'PaperDialogueSequenceActor_SetAutoPlay::InAutoPlay' has a wrong offset!");

// Function PaperDialogue.PaperDialogueSequenceActor.SetDialogue
// 0x0008 (0x0008 - 0x0000)
struct PaperDialogueSequenceActor_SetDialogue final
{
public:
	class UPaperDialogue*                         InDlg;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueSequenceActor_SetDialogue) == 0x000008, "Wrong alignment on PaperDialogueSequenceActor_SetDialogue");
static_assert(sizeof(PaperDialogueSequenceActor_SetDialogue) == 0x000008, "Wrong size on PaperDialogueSequenceActor_SetDialogue");
static_assert(offsetof(PaperDialogueSequenceActor_SetDialogue, InDlg) == 0x000000, "Member 'PaperDialogueSequenceActor_SetDialogue::InDlg' has a wrong offset!");

// Function PaperDialogue.PaperDialogueSequenceActor.SetDialogueGraph
// 0x0008 (0x0008 - 0x0000)
struct PaperDialogueSequenceActor_SetDialogueGraph final
{
public:
	class UPaperDialogueStage*                    InGraph;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueSequenceActor_SetDialogueGraph) == 0x000008, "Wrong alignment on PaperDialogueSequenceActor_SetDialogueGraph");
static_assert(sizeof(PaperDialogueSequenceActor_SetDialogueGraph) == 0x000008, "Wrong size on PaperDialogueSequenceActor_SetDialogueGraph");
static_assert(offsetof(PaperDialogueSequenceActor_SetDialogueGraph, InGraph) == 0x000000, "Member 'PaperDialogueSequenceActor_SetDialogueGraph::InGraph' has a wrong offset!");

// Function PaperDialogue.PaperDialogueSequenceActor.SetDynamicActorByName
// 0x0010 (0x0010 - 0x0000)
struct PaperDialogueSequenceActor_SetDynamicActorByName final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 Actor;                                             // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueSequenceActor_SetDynamicActorByName) == 0x000008, "Wrong alignment on PaperDialogueSequenceActor_SetDynamicActorByName");
static_assert(sizeof(PaperDialogueSequenceActor_SetDynamicActorByName) == 0x000010, "Wrong size on PaperDialogueSequenceActor_SetDynamicActorByName");
static_assert(offsetof(PaperDialogueSequenceActor_SetDynamicActorByName, Name_0) == 0x000000, "Member 'PaperDialogueSequenceActor_SetDynamicActorByName::Name_0' has a wrong offset!");
static_assert(offsetof(PaperDialogueSequenceActor_SetDynamicActorByName, Actor) == 0x000008, "Member 'PaperDialogueSequenceActor_SetDynamicActorByName::Actor' has a wrong offset!");

// Function PaperDialogue.PaperDialogueSequenceActor.SetDynamicActorByNameWithParent
// 0x0018 (0x0018 - 0x0000)
struct PaperDialogueSequenceActor_SetDynamicActorByNameWithParent final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 Actor;                                             // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 ParentActor;                                       // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueSequenceActor_SetDynamicActorByNameWithParent) == 0x000008, "Wrong alignment on PaperDialogueSequenceActor_SetDynamicActorByNameWithParent");
static_assert(sizeof(PaperDialogueSequenceActor_SetDynamicActorByNameWithParent) == 0x000018, "Wrong size on PaperDialogueSequenceActor_SetDynamicActorByNameWithParent");
static_assert(offsetof(PaperDialogueSequenceActor_SetDynamicActorByNameWithParent, Name_0) == 0x000000, "Member 'PaperDialogueSequenceActor_SetDynamicActorByNameWithParent::Name_0' has a wrong offset!");
static_assert(offsetof(PaperDialogueSequenceActor_SetDynamicActorByNameWithParent, Actor) == 0x000008, "Member 'PaperDialogueSequenceActor_SetDynamicActorByNameWithParent::Actor' has a wrong offset!");
static_assert(offsetof(PaperDialogueSequenceActor_SetDynamicActorByNameWithParent, ParentActor) == 0x000010, "Member 'PaperDialogueSequenceActor_SetDynamicActorByNameWithParent::ParentActor' has a wrong offset!");

// Function PaperDialogue.PaperDialogueSequenceActor.SetDynamicActorBySlot
// 0x0010 (0x0010 - 0x0000)
struct PaperDialogueSequenceActor_SetDynamicActorBySlot final
{
public:
	int32                                         nSlot;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Actor;                                             // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueSequenceActor_SetDynamicActorBySlot) == 0x000008, "Wrong alignment on PaperDialogueSequenceActor_SetDynamicActorBySlot");
static_assert(sizeof(PaperDialogueSequenceActor_SetDynamicActorBySlot) == 0x000010, "Wrong size on PaperDialogueSequenceActor_SetDynamicActorBySlot");
static_assert(offsetof(PaperDialogueSequenceActor_SetDynamicActorBySlot, nSlot) == 0x000000, "Member 'PaperDialogueSequenceActor_SetDynamicActorBySlot::nSlot' has a wrong offset!");
static_assert(offsetof(PaperDialogueSequenceActor_SetDynamicActorBySlot, Actor) == 0x000008, "Member 'PaperDialogueSequenceActor_SetDynamicActorBySlot::Actor' has a wrong offset!");

// Function PaperDialogue.PaperDialogueSequenceActor.SetExitAfterPlayEnd
// 0x0001 (0x0001 - 0x0000)
struct PaperDialogueSequenceActor_SetExitAfterPlayEnd final
{
public:
	bool                                          Exit;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueSequenceActor_SetExitAfterPlayEnd) == 0x000001, "Wrong alignment on PaperDialogueSequenceActor_SetExitAfterPlayEnd");
static_assert(sizeof(PaperDialogueSequenceActor_SetExitAfterPlayEnd) == 0x000001, "Wrong size on PaperDialogueSequenceActor_SetExitAfterPlayEnd");
static_assert(offsetof(PaperDialogueSequenceActor_SetExitAfterPlayEnd, Exit) == 0x000000, "Member 'PaperDialogueSequenceActor_SetExitAfterPlayEnd::Exit' has a wrong offset!");

// Function PaperDialogue.PaperDialogueSequenceActor.SetPlayRate
// 0x0004 (0x0004 - 0x0000)
struct PaperDialogueSequenceActor_SetPlayRate final
{
public:
	float                                         PlayRate;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueSequenceActor_SetPlayRate) == 0x000004, "Wrong alignment on PaperDialogueSequenceActor_SetPlayRate");
static_assert(sizeof(PaperDialogueSequenceActor_SetPlayRate) == 0x000004, "Wrong size on PaperDialogueSequenceActor_SetPlayRate");
static_assert(offsetof(PaperDialogueSequenceActor_SetPlayRate, PlayRate) == 0x000000, "Member 'PaperDialogueSequenceActor_SetPlayRate::PlayRate' has a wrong offset!");

// Function PaperDialogue.PaperDialogueSequenceActor.GetPlayRate
// 0x0004 (0x0004 - 0x0000)
struct PaperDialogueSequenceActor_GetPlayRate final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueSequenceActor_GetPlayRate) == 0x000004, "Wrong alignment on PaperDialogueSequenceActor_GetPlayRate");
static_assert(sizeof(PaperDialogueSequenceActor_GetPlayRate) == 0x000004, "Wrong size on PaperDialogueSequenceActor_GetPlayRate");
static_assert(offsetof(PaperDialogueSequenceActor_GetPlayRate, ReturnValue) == 0x000000, "Member 'PaperDialogueSequenceActor_GetPlayRate::ReturnValue' has a wrong offset!");

// Function PaperDialogue.PaperDialogueStage.GetCharacterTransformInLevelSequence
// 0x0080 (0x0080 - 0x0000)
struct PaperDialogueStage_GetCharacterTransformInLevelSequence final
{
public:
	class FName                                   InSpeakerTag;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             OutTransform;                                      // 0x0010(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_71[0xF];                                       // 0x0071(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PaperDialogueStage_GetCharacterTransformInLevelSequence) == 0x000010, "Wrong alignment on PaperDialogueStage_GetCharacterTransformInLevelSequence");
static_assert(sizeof(PaperDialogueStage_GetCharacterTransformInLevelSequence) == 0x000080, "Wrong size on PaperDialogueStage_GetCharacterTransformInLevelSequence");
static_assert(offsetof(PaperDialogueStage_GetCharacterTransformInLevelSequence, InSpeakerTag) == 0x000000, "Member 'PaperDialogueStage_GetCharacterTransformInLevelSequence::InSpeakerTag' has a wrong offset!");
static_assert(offsetof(PaperDialogueStage_GetCharacterTransformInLevelSequence, OutTransform) == 0x000010, "Member 'PaperDialogueStage_GetCharacterTransformInLevelSequence::OutTransform' has a wrong offset!");
static_assert(offsetof(PaperDialogueStage_GetCharacterTransformInLevelSequence, ReturnValue) == 0x000070, "Member 'PaperDialogueStage_GetCharacterTransformInLevelSequence::ReturnValue' has a wrong offset!");

// Function PaperDialogue.PaperDialogueStage.FindLevelSequenceBySectionName
// 0x0010 (0x0010 - 0x0000)
struct PaperDialogueStage_FindLevelSequenceBySectionName final
{
public:
	class FName                                   SectionName;                                       // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULevelSequence*                         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueStage_FindLevelSequenceBySectionName) == 0x000008, "Wrong alignment on PaperDialogueStage_FindLevelSequenceBySectionName");
static_assert(sizeof(PaperDialogueStage_FindLevelSequenceBySectionName) == 0x000010, "Wrong size on PaperDialogueStage_FindLevelSequenceBySectionName");
static_assert(offsetof(PaperDialogueStage_FindLevelSequenceBySectionName, SectionName) == 0x000000, "Member 'PaperDialogueStage_FindLevelSequenceBySectionName::SectionName' has a wrong offset!");
static_assert(offsetof(PaperDialogueStage_FindLevelSequenceBySectionName, ReturnValue) == 0x000008, "Member 'PaperDialogueStage_FindLevelSequenceBySectionName::ReturnValue' has a wrong offset!");

// Function PaperDialogue.PaperDialogueStage.GetDialogueSetCharacterSlots
// 0x0018 (0x0018 - 0x0000)
struct PaperDialogueStage_GetDialogueSetCharacterSlots final
{
public:
	TArray<struct FDialogueCharacterSlot>         DialogueSetCharacterSlots;                         // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PaperDialogueStage_GetDialogueSetCharacterSlots) == 0x000008, "Wrong alignment on PaperDialogueStage_GetDialogueSetCharacterSlots");
static_assert(sizeof(PaperDialogueStage_GetDialogueSetCharacterSlots) == 0x000018, "Wrong size on PaperDialogueStage_GetDialogueSetCharacterSlots");
static_assert(offsetof(PaperDialogueStage_GetDialogueSetCharacterSlots, DialogueSetCharacterSlots) == 0x000000, "Member 'PaperDialogueStage_GetDialogueSetCharacterSlots::DialogueSetCharacterSlots' has a wrong offset!");
static_assert(offsetof(PaperDialogueStage_GetDialogueSetCharacterSlots, ReturnValue) == 0x000010, "Member 'PaperDialogueStage_GetDialogueSetCharacterSlots::ReturnValue' has a wrong offset!");

// Function PaperDialogue.PaperDialogueUserWidget.GetCurrentDialogueStage
// 0x0008 (0x0008 - 0x0000)
struct PaperDialogueUserWidget_GetCurrentDialogueStage final
{
public:
	class UPaperDialogueStage*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueUserWidget_GetCurrentDialogueStage) == 0x000008, "Wrong alignment on PaperDialogueUserWidget_GetCurrentDialogueStage");
static_assert(sizeof(PaperDialogueUserWidget_GetCurrentDialogueStage) == 0x000008, "Wrong size on PaperDialogueUserWidget_GetCurrentDialogueStage");
static_assert(offsetof(PaperDialogueUserWidget_GetCurrentDialogueStage, ReturnValue) == 0x000000, "Member 'PaperDialogueUserWidget_GetCurrentDialogueStage::ReturnValue' has a wrong offset!");

// Function PaperDialogue.PaperDialogueUserWidget.GetLevelSequenceAutoPlayStatus
// 0x0001 (0x0001 - 0x0000)
struct PaperDialogueUserWidget_GetLevelSequenceAutoPlayStatus final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueUserWidget_GetLevelSequenceAutoPlayStatus) == 0x000001, "Wrong alignment on PaperDialogueUserWidget_GetLevelSequenceAutoPlayStatus");
static_assert(sizeof(PaperDialogueUserWidget_GetLevelSequenceAutoPlayStatus) == 0x000001, "Wrong size on PaperDialogueUserWidget_GetLevelSequenceAutoPlayStatus");
static_assert(offsetof(PaperDialogueUserWidget_GetLevelSequenceAutoPlayStatus, ReturnValue) == 0x000000, "Member 'PaperDialogueUserWidget_GetLevelSequenceAutoPlayStatus::ReturnValue' has a wrong offset!");

// Function PaperDialogue.PaperDialogueUserWidget.IsSequencePlayerPaused
// 0x0001 (0x0001 - 0x0000)
struct PaperDialogueUserWidget_IsSequencePlayerPaused final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueUserWidget_IsSequencePlayerPaused) == 0x000001, "Wrong alignment on PaperDialogueUserWidget_IsSequencePlayerPaused");
static_assert(sizeof(PaperDialogueUserWidget_IsSequencePlayerPaused) == 0x000001, "Wrong size on PaperDialogueUserWidget_IsSequencePlayerPaused");
static_assert(offsetof(PaperDialogueUserWidget_IsSequencePlayerPaused, ReturnValue) == 0x000000, "Member 'PaperDialogueUserWidget_IsSequencePlayerPaused::ReturnValue' has a wrong offset!");

// Function PaperDialogue.PaperDialogueUserWidget.OnBlueprintNodeClick
// 0x0008 (0x0008 - 0x0000)
struct PaperDialogueUserWidget_OnBlueprintNodeClick final
{
public:
	int32                                         ItemIndex;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PaperDialogueUserWidget_OnBlueprintNodeClick) == 0x000004, "Wrong alignment on PaperDialogueUserWidget_OnBlueprintNodeClick");
static_assert(sizeof(PaperDialogueUserWidget_OnBlueprintNodeClick) == 0x000008, "Wrong size on PaperDialogueUserWidget_OnBlueprintNodeClick");
static_assert(offsetof(PaperDialogueUserWidget_OnBlueprintNodeClick, ItemIndex) == 0x000000, "Member 'PaperDialogueUserWidget_OnBlueprintNodeClick::ItemIndex' has a wrong offset!");
static_assert(offsetof(PaperDialogueUserWidget_OnBlueprintNodeClick, ReturnValue) == 0x000004, "Member 'PaperDialogueUserWidget_OnBlueprintNodeClick::ReturnValue' has a wrong offset!");

// Function PaperDialogue.PaperDialogueUserWidget.OnChangeDialogueNodeState
// 0x0001 (0x0001 - 0x0000)
struct PaperDialogueUserWidget_OnChangeDialogueNodeState final
{
public:
	EFDialogueUserWidgetState                     CurrentState;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueUserWidget_OnChangeDialogueNodeState) == 0x000001, "Wrong alignment on PaperDialogueUserWidget_OnChangeDialogueNodeState");
static_assert(sizeof(PaperDialogueUserWidget_OnChangeDialogueNodeState) == 0x000001, "Wrong size on PaperDialogueUserWidget_OnChangeDialogueNodeState");
static_assert(offsetof(PaperDialogueUserWidget_OnChangeDialogueNodeState, CurrentState) == 0x000000, "Member 'PaperDialogueUserWidget_OnChangeDialogueNodeState::CurrentState' has a wrong offset!");

// Function PaperDialogue.PaperDialogueUserWidget.OnClickedAutoPlay
// 0x0001 (0x0001 - 0x0000)
struct PaperDialogueUserWidget_OnClickedAutoPlay final
{
public:
	bool                                          bAutoPlay;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueUserWidget_OnClickedAutoPlay) == 0x000001, "Wrong alignment on PaperDialogueUserWidget_OnClickedAutoPlay");
static_assert(sizeof(PaperDialogueUserWidget_OnClickedAutoPlay) == 0x000001, "Wrong size on PaperDialogueUserWidget_OnClickedAutoPlay");
static_assert(offsetof(PaperDialogueUserWidget_OnClickedAutoPlay, bAutoPlay) == 0x000000, "Member 'PaperDialogueUserWidget_OnClickedAutoPlay::bAutoPlay' has a wrong offset!");

// Function PaperDialogue.PaperDialogueUserWidget.OnConditionItemClick
// 0x0001 (0x0001 - 0x0000)
struct PaperDialogueUserWidget_OnConditionItemClick final
{
public:
	bool                                          bIsTrue;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueUserWidget_OnConditionItemClick) == 0x000001, "Wrong alignment on PaperDialogueUserWidget_OnConditionItemClick");
static_assert(sizeof(PaperDialogueUserWidget_OnConditionItemClick) == 0x000001, "Wrong size on PaperDialogueUserWidget_OnConditionItemClick");
static_assert(offsetof(PaperDialogueUserWidget_OnConditionItemClick, bIsTrue) == 0x000000, "Member 'PaperDialogueUserWidget_OnConditionItemClick::bIsTrue' has a wrong offset!");

// Function PaperDialogue.PaperDialogueUserWidget.OnMenuItemClick
// 0x0004 (0x0004 - 0x0000)
struct PaperDialogueUserWidget_OnMenuItemClick final
{
public:
	int32                                         MenuIndex;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueUserWidget_OnMenuItemClick) == 0x000004, "Wrong alignment on PaperDialogueUserWidget_OnMenuItemClick");
static_assert(sizeof(PaperDialogueUserWidget_OnMenuItemClick) == 0x000004, "Wrong size on PaperDialogueUserWidget_OnMenuItemClick");
static_assert(offsetof(PaperDialogueUserWidget_OnMenuItemClick, MenuIndex) == 0x000000, "Member 'PaperDialogueUserWidget_OnMenuItemClick::MenuIndex' has a wrong offset!");

// Function PaperDialogue.PaperDialogueUserWidget.OnMenuItemClickByChoiceLineID
// 0x0008 (0x0008 - 0x0000)
struct PaperDialogueUserWidget_OnMenuItemClickByChoiceLineID final
{
public:
	class FName                                   ChoiceLineID;                                      // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueUserWidget_OnMenuItemClickByChoiceLineID) == 0x000004, "Wrong alignment on PaperDialogueUserWidget_OnMenuItemClickByChoiceLineID");
static_assert(sizeof(PaperDialogueUserWidget_OnMenuItemClickByChoiceLineID) == 0x000008, "Wrong size on PaperDialogueUserWidget_OnMenuItemClickByChoiceLineID");
static_assert(offsetof(PaperDialogueUserWidget_OnMenuItemClickByChoiceLineID, ChoiceLineID) == 0x000000, "Member 'PaperDialogueUserWidget_OnMenuItemClickByChoiceLineID::ChoiceLineID' has a wrong offset!");

// Function PaperDialogue.PaperDialogueUserWidget.OnPlayBlueprintNode
// 0x0010 (0x0010 - 0x0000)
struct PaperDialogueUserWidget_OnPlayBlueprintNode final
{
public:
	int64                                         UId;                                               // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPaperDialogueBlueprintNode*            BlueprintNode;                                     // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueUserWidget_OnPlayBlueprintNode) == 0x000008, "Wrong alignment on PaperDialogueUserWidget_OnPlayBlueprintNode");
static_assert(sizeof(PaperDialogueUserWidget_OnPlayBlueprintNode) == 0x000010, "Wrong size on PaperDialogueUserWidget_OnPlayBlueprintNode");
static_assert(offsetof(PaperDialogueUserWidget_OnPlayBlueprintNode, UId) == 0x000000, "Member 'PaperDialogueUserWidget_OnPlayBlueprintNode::UId' has a wrong offset!");
static_assert(offsetof(PaperDialogueUserWidget_OnPlayBlueprintNode, BlueprintNode) == 0x000008, "Member 'PaperDialogueUserWidget_OnPlayBlueprintNode::BlueprintNode' has a wrong offset!");

// Function PaperDialogue.PaperDialogueUserWidget.OnPlayConditionNode
// 0x0010 (0x0010 - 0x0000)
struct PaperDialogueUserWidget_OnPlayConditionNode final
{
public:
	int64                                         UId;                                               // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPreviewValue;                                     // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PaperDialogueUserWidget_OnPlayConditionNode) == 0x000008, "Wrong alignment on PaperDialogueUserWidget_OnPlayConditionNode");
static_assert(sizeof(PaperDialogueUserWidget_OnPlayConditionNode) == 0x000010, "Wrong size on PaperDialogueUserWidget_OnPlayConditionNode");
static_assert(offsetof(PaperDialogueUserWidget_OnPlayConditionNode, UId) == 0x000000, "Member 'PaperDialogueUserWidget_OnPlayConditionNode::UId' has a wrong offset!");
static_assert(offsetof(PaperDialogueUserWidget_OnPlayConditionNode, bPreviewValue) == 0x000008, "Member 'PaperDialogueUserWidget_OnPlayConditionNode::bPreviewValue' has a wrong offset!");

// Function PaperDialogue.PaperDialogueUserWidget.OnPlayDialogueSectionNodeBegin
// 0x0010 (0x0010 - 0x0000)
struct PaperDialogueUserWidget_OnPlayDialogueSectionNodeBegin final
{
public:
	int64                                         UId;                                               // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   DialogueId;                                        // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueUserWidget_OnPlayDialogueSectionNodeBegin) == 0x000008, "Wrong alignment on PaperDialogueUserWidget_OnPlayDialogueSectionNodeBegin");
static_assert(sizeof(PaperDialogueUserWidget_OnPlayDialogueSectionNodeBegin) == 0x000010, "Wrong size on PaperDialogueUserWidget_OnPlayDialogueSectionNodeBegin");
static_assert(offsetof(PaperDialogueUserWidget_OnPlayDialogueSectionNodeBegin, UId) == 0x000000, "Member 'PaperDialogueUserWidget_OnPlayDialogueSectionNodeBegin::UId' has a wrong offset!");
static_assert(offsetof(PaperDialogueUserWidget_OnPlayDialogueSectionNodeBegin, DialogueId) == 0x000008, "Member 'PaperDialogueUserWidget_OnPlayDialogueSectionNodeBegin::DialogueId' has a wrong offset!");

// Function PaperDialogue.PaperDialogueUserWidget.OnPlayDialogueSectionNodeEnd
// 0x0010 (0x0010 - 0x0000)
struct PaperDialogueUserWidget_OnPlayDialogueSectionNodeEnd final
{
public:
	int64                                         UId;                                               // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   DialogueId;                                        // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueUserWidget_OnPlayDialogueSectionNodeEnd) == 0x000008, "Wrong alignment on PaperDialogueUserWidget_OnPlayDialogueSectionNodeEnd");
static_assert(sizeof(PaperDialogueUserWidget_OnPlayDialogueSectionNodeEnd) == 0x000010, "Wrong size on PaperDialogueUserWidget_OnPlayDialogueSectionNodeEnd");
static_assert(offsetof(PaperDialogueUserWidget_OnPlayDialogueSectionNodeEnd, UId) == 0x000000, "Member 'PaperDialogueUserWidget_OnPlayDialogueSectionNodeEnd::UId' has a wrong offset!");
static_assert(offsetof(PaperDialogueUserWidget_OnPlayDialogueSectionNodeEnd, DialogueId) == 0x000008, "Member 'PaperDialogueUserWidget_OnPlayDialogueSectionNodeEnd::DialogueId' has a wrong offset!");

// Function PaperDialogue.PaperDialogueUserWidget.OnPlayFunctionNode
// 0x0010 (0x0010 - 0x0000)
struct PaperDialogueUserWidget_OnPlayFunctionNode final
{
public:
	int64                                         UId;                                               // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FunctionName;                                      // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueUserWidget_OnPlayFunctionNode) == 0x000008, "Wrong alignment on PaperDialogueUserWidget_OnPlayFunctionNode");
static_assert(sizeof(PaperDialogueUserWidget_OnPlayFunctionNode) == 0x000010, "Wrong size on PaperDialogueUserWidget_OnPlayFunctionNode");
static_assert(offsetof(PaperDialogueUserWidget_OnPlayFunctionNode, UId) == 0x000000, "Member 'PaperDialogueUserWidget_OnPlayFunctionNode::UId' has a wrong offset!");
static_assert(offsetof(PaperDialogueUserWidget_OnPlayFunctionNode, FunctionName) == 0x000008, "Member 'PaperDialogueUserWidget_OnPlayFunctionNode::FunctionName' has a wrong offset!");

// Function PaperDialogue.PaperDialogueUserWidget.OnPlayLevelSequenceNodeBegin
// 0x0008 (0x0008 - 0x0000)
struct PaperDialogueUserWidget_OnPlayLevelSequenceNodeBegin final
{
public:
	int64                                         UId;                                               // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueUserWidget_OnPlayLevelSequenceNodeBegin) == 0x000008, "Wrong alignment on PaperDialogueUserWidget_OnPlayLevelSequenceNodeBegin");
static_assert(sizeof(PaperDialogueUserWidget_OnPlayLevelSequenceNodeBegin) == 0x000008, "Wrong size on PaperDialogueUserWidget_OnPlayLevelSequenceNodeBegin");
static_assert(offsetof(PaperDialogueUserWidget_OnPlayLevelSequenceNodeBegin, UId) == 0x000000, "Member 'PaperDialogueUserWidget_OnPlayLevelSequenceNodeBegin::UId' has a wrong offset!");

// Function PaperDialogue.PaperDialogueUserWidget.OnPlayLevelSequenceNodeEnd
// 0x0008 (0x0008 - 0x0000)
struct PaperDialogueUserWidget_OnPlayLevelSequenceNodeEnd final
{
public:
	int64                                         UId;                                               // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueUserWidget_OnPlayLevelSequenceNodeEnd) == 0x000008, "Wrong alignment on PaperDialogueUserWidget_OnPlayLevelSequenceNodeEnd");
static_assert(sizeof(PaperDialogueUserWidget_OnPlayLevelSequenceNodeEnd) == 0x000008, "Wrong size on PaperDialogueUserWidget_OnPlayLevelSequenceNodeEnd");
static_assert(offsetof(PaperDialogueUserWidget_OnPlayLevelSequenceNodeEnd, UId) == 0x000000, "Member 'PaperDialogueUserWidget_OnPlayLevelSequenceNodeEnd::UId' has a wrong offset!");

// Function PaperDialogue.PaperDialogueUserWidget.OnPlayMenuItems
// 0x0030 (0x0030 - 0x0000)
struct PaperDialogueUserWidget_OnPlayMenuItems final
{
public:
	int64                                         UId;                                               // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ChoiceHubName;                                     // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bChoiceSlot;                                       // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SpecialUIWidgetType;                               // 0x0014(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPaperDialogueChoiceLineConfig> DialogueChoices;                                   // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueUserWidget_OnPlayMenuItems) == 0x000008, "Wrong alignment on PaperDialogueUserWidget_OnPlayMenuItems");
static_assert(sizeof(PaperDialogueUserWidget_OnPlayMenuItems) == 0x000030, "Wrong size on PaperDialogueUserWidget_OnPlayMenuItems");
static_assert(offsetof(PaperDialogueUserWidget_OnPlayMenuItems, UId) == 0x000000, "Member 'PaperDialogueUserWidget_OnPlayMenuItems::UId' has a wrong offset!");
static_assert(offsetof(PaperDialogueUserWidget_OnPlayMenuItems, ChoiceHubName) == 0x000008, "Member 'PaperDialogueUserWidget_OnPlayMenuItems::ChoiceHubName' has a wrong offset!");
static_assert(offsetof(PaperDialogueUserWidget_OnPlayMenuItems, bChoiceSlot) == 0x000010, "Member 'PaperDialogueUserWidget_OnPlayMenuItems::bChoiceSlot' has a wrong offset!");
static_assert(offsetof(PaperDialogueUserWidget_OnPlayMenuItems, SpecialUIWidgetType) == 0x000014, "Member 'PaperDialogueUserWidget_OnPlayMenuItems::SpecialUIWidgetType' has a wrong offset!");
static_assert(offsetof(PaperDialogueUserWidget_OnPlayMenuItems, DialogueChoices) == 0x000020, "Member 'PaperDialogueUserWidget_OnPlayMenuItems::DialogueChoices' has a wrong offset!");

// Function PaperDialogue.PaperDialogueUserWidget.OnPlayOutputNode
// 0x0008 (0x0008 - 0x0000)
struct PaperDialogueUserWidget_OnPlayOutputNode final
{
public:
	int64                                         UId;                                               // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueUserWidget_OnPlayOutputNode) == 0x000008, "Wrong alignment on PaperDialogueUserWidget_OnPlayOutputNode");
static_assert(sizeof(PaperDialogueUserWidget_OnPlayOutputNode) == 0x000008, "Wrong size on PaperDialogueUserWidget_OnPlayOutputNode");
static_assert(offsetof(PaperDialogueUserWidget_OnPlayOutputNode, UId) == 0x000000, "Member 'PaperDialogueUserWidget_OnPlayOutputNode::UId' has a wrong offset!");

// Function PaperDialogue.PaperDialogueUserWidget.OnPlayPersistentNode
// 0x0018 (0x0018 - 0x0000)
struct PaperDialogueUserWidget_OnPlayPersistentNode final
{
public:
	int64                                         UId;                                               // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   InPersistentName;                                  // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InPersistentValue;                                 // 0x0010(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PaperDialogueUserWidget_OnPlayPersistentNode) == 0x000008, "Wrong alignment on PaperDialogueUserWidget_OnPlayPersistentNode");
static_assert(sizeof(PaperDialogueUserWidget_OnPlayPersistentNode) == 0x000018, "Wrong size on PaperDialogueUserWidget_OnPlayPersistentNode");
static_assert(offsetof(PaperDialogueUserWidget_OnPlayPersistentNode, UId) == 0x000000, "Member 'PaperDialogueUserWidget_OnPlayPersistentNode::UId' has a wrong offset!");
static_assert(offsetof(PaperDialogueUserWidget_OnPlayPersistentNode, InPersistentName) == 0x000008, "Member 'PaperDialogueUserWidget_OnPlayPersistentNode::InPersistentName' has a wrong offset!");
static_assert(offsetof(PaperDialogueUserWidget_OnPlayPersistentNode, InPersistentValue) == 0x000010, "Member 'PaperDialogueUserWidget_OnPlayPersistentNode::InPersistentValue' has a wrong offset!");

// Function PaperDialogue.PaperDialogueUserWidget.OnUpdateDialogueLine
// 0x0038 (0x0038 - 0x0000)
struct PaperDialogueUserWidget_OnUpdateDialogueLine final
{
public:
	int32                                         LineIndex;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SpeakerTag;                                        // 0x0004(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TempNameTitleId;                                   // 0x000C(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   StringID;                                          // 0x0014(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   SpeakerLine;                                       // 0x0020(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         Duration;                                          // 0x0030(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsLineBreak;                                       // 0x0034(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PaperDialogueUserWidget_OnUpdateDialogueLine) == 0x000008, "Wrong alignment on PaperDialogueUserWidget_OnUpdateDialogueLine");
static_assert(sizeof(PaperDialogueUserWidget_OnUpdateDialogueLine) == 0x000038, "Wrong size on PaperDialogueUserWidget_OnUpdateDialogueLine");
static_assert(offsetof(PaperDialogueUserWidget_OnUpdateDialogueLine, LineIndex) == 0x000000, "Member 'PaperDialogueUserWidget_OnUpdateDialogueLine::LineIndex' has a wrong offset!");
static_assert(offsetof(PaperDialogueUserWidget_OnUpdateDialogueLine, SpeakerTag) == 0x000004, "Member 'PaperDialogueUserWidget_OnUpdateDialogueLine::SpeakerTag' has a wrong offset!");
static_assert(offsetof(PaperDialogueUserWidget_OnUpdateDialogueLine, TempNameTitleId) == 0x00000C, "Member 'PaperDialogueUserWidget_OnUpdateDialogueLine::TempNameTitleId' has a wrong offset!");
static_assert(offsetof(PaperDialogueUserWidget_OnUpdateDialogueLine, StringID) == 0x000014, "Member 'PaperDialogueUserWidget_OnUpdateDialogueLine::StringID' has a wrong offset!");
static_assert(offsetof(PaperDialogueUserWidget_OnUpdateDialogueLine, SpeakerLine) == 0x000020, "Member 'PaperDialogueUserWidget_OnUpdateDialogueLine::SpeakerLine' has a wrong offset!");
static_assert(offsetof(PaperDialogueUserWidget_OnUpdateDialogueLine, Duration) == 0x000030, "Member 'PaperDialogueUserWidget_OnUpdateDialogueLine::Duration' has a wrong offset!");
static_assert(offsetof(PaperDialogueUserWidget_OnUpdateDialogueLine, IsLineBreak) == 0x000034, "Member 'PaperDialogueUserWidget_OnUpdateDialogueLine::IsLineBreak' has a wrong offset!");

// Function PaperDialogue.PaperDialogueWidget.OnUpdateLine
// 0x0028 (0x0028 - 0x0000)
struct PaperDialogueWidget_OnUpdateLine final
{
public:
	int32                                         InCurrentLineIndex;                                // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SpeakerTag;                                        // 0x0004(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   InNewLine;                                         // 0x0010(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         Duration;                                          // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsLineBreak;                                       // 0x0024(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PaperDialogueWidget_OnUpdateLine) == 0x000008, "Wrong alignment on PaperDialogueWidget_OnUpdateLine");
static_assert(sizeof(PaperDialogueWidget_OnUpdateLine) == 0x000028, "Wrong size on PaperDialogueWidget_OnUpdateLine");
static_assert(offsetof(PaperDialogueWidget_OnUpdateLine, InCurrentLineIndex) == 0x000000, "Member 'PaperDialogueWidget_OnUpdateLine::InCurrentLineIndex' has a wrong offset!");
static_assert(offsetof(PaperDialogueWidget_OnUpdateLine, SpeakerTag) == 0x000004, "Member 'PaperDialogueWidget_OnUpdateLine::SpeakerTag' has a wrong offset!");
static_assert(offsetof(PaperDialogueWidget_OnUpdateLine, InNewLine) == 0x000010, "Member 'PaperDialogueWidget_OnUpdateLine::InNewLine' has a wrong offset!");
static_assert(offsetof(PaperDialogueWidget_OnUpdateLine, Duration) == 0x000020, "Member 'PaperDialogueWidget_OnUpdateLine::Duration' has a wrong offset!");
static_assert(offsetof(PaperDialogueWidget_OnUpdateLine, IsLineBreak) == 0x000024, "Member 'PaperDialogueWidget_OnUpdateLine::IsLineBreak' has a wrong offset!");

// Function PaperDialogue.PaperDialogueWidget.SetDialogue
// 0x0008 (0x0008 - 0x0000)
struct PaperDialogueWidget_SetDialogue final
{
public:
	class UPaperDialogue*                         InDlg;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperDialogueWidget_SetDialogue) == 0x000008, "Wrong alignment on PaperDialogueWidget_SetDialogue");
static_assert(sizeof(PaperDialogueWidget_SetDialogue) == 0x000008, "Wrong size on PaperDialogueWidget_SetDialogue");
static_assert(offsetof(PaperDialogueWidget_SetDialogue, InDlg) == 0x000000, "Member 'PaperDialogueWidget_SetDialogue::InDlg' has a wrong offset!");

}

