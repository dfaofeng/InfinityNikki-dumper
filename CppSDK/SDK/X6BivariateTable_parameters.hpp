#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: X6BivariateTable

#include "Basic.hpp"


namespace SDK::Params
{

// Function X6BivariateTable.X6BivariateTableFunctionLibrary.GetCellDataAsInt
// 0x0020 (0x0020 - 0x0000)
struct X6BivariateTableFunctionLibrary_GetCellDataAsInt final
{
public:
	const class UX6BivariateTable*                InTable;                                           // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   RowName;                                           // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ColumnName;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(X6BivariateTableFunctionLibrary_GetCellDataAsInt) == 0x000008, "Wrong alignment on X6BivariateTableFunctionLibrary_GetCellDataAsInt");
static_assert(sizeof(X6BivariateTableFunctionLibrary_GetCellDataAsInt) == 0x000020, "Wrong size on X6BivariateTableFunctionLibrary_GetCellDataAsInt");
static_assert(offsetof(X6BivariateTableFunctionLibrary_GetCellDataAsInt, InTable) == 0x000000, "Member 'X6BivariateTableFunctionLibrary_GetCellDataAsInt::InTable' has a wrong offset!");
static_assert(offsetof(X6BivariateTableFunctionLibrary_GetCellDataAsInt, RowName) == 0x000008, "Member 'X6BivariateTableFunctionLibrary_GetCellDataAsInt::RowName' has a wrong offset!");
static_assert(offsetof(X6BivariateTableFunctionLibrary_GetCellDataAsInt, ColumnName) == 0x000010, "Member 'X6BivariateTableFunctionLibrary_GetCellDataAsInt::ColumnName' has a wrong offset!");
static_assert(offsetof(X6BivariateTableFunctionLibrary_GetCellDataAsInt, ReturnValue) == 0x000018, "Member 'X6BivariateTableFunctionLibrary_GetCellDataAsInt::ReturnValue' has a wrong offset!");

// Function X6BivariateTable.X6BivariateTableFunctionLibrary.GetCellDataAsInt_ByIndex
// 0x0018 (0x0018 - 0x0000)
struct X6BivariateTableFunctionLibrary_GetCellDataAsInt_ByIndex final
{
public:
	const class UX6BivariateTable*                InTable;                                           // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RowIndex;                                          // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ColumnIndex;                                       // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(X6BivariateTableFunctionLibrary_GetCellDataAsInt_ByIndex) == 0x000008, "Wrong alignment on X6BivariateTableFunctionLibrary_GetCellDataAsInt_ByIndex");
static_assert(sizeof(X6BivariateTableFunctionLibrary_GetCellDataAsInt_ByIndex) == 0x000018, "Wrong size on X6BivariateTableFunctionLibrary_GetCellDataAsInt_ByIndex");
static_assert(offsetof(X6BivariateTableFunctionLibrary_GetCellDataAsInt_ByIndex, InTable) == 0x000000, "Member 'X6BivariateTableFunctionLibrary_GetCellDataAsInt_ByIndex::InTable' has a wrong offset!");
static_assert(offsetof(X6BivariateTableFunctionLibrary_GetCellDataAsInt_ByIndex, RowIndex) == 0x000008, "Member 'X6BivariateTableFunctionLibrary_GetCellDataAsInt_ByIndex::RowIndex' has a wrong offset!");
static_assert(offsetof(X6BivariateTableFunctionLibrary_GetCellDataAsInt_ByIndex, ColumnIndex) == 0x00000C, "Member 'X6BivariateTableFunctionLibrary_GetCellDataAsInt_ByIndex::ColumnIndex' has a wrong offset!");
static_assert(offsetof(X6BivariateTableFunctionLibrary_GetCellDataAsInt_ByIndex, ReturnValue) == 0x000010, "Member 'X6BivariateTableFunctionLibrary_GetCellDataAsInt_ByIndex::ReturnValue' has a wrong offset!");

// Function X6BivariateTable.X6BivariateTableFunctionLibrary.GetRowOrColumnNum
// 0x0010 (0x0010 - 0x0000)
struct X6BivariateTableFunctionLibrary_GetRowOrColumnNum final
{
public:
	const class UX6BivariateTable*                InTable;                                           // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(X6BivariateTableFunctionLibrary_GetRowOrColumnNum) == 0x000008, "Wrong alignment on X6BivariateTableFunctionLibrary_GetRowOrColumnNum");
static_assert(sizeof(X6BivariateTableFunctionLibrary_GetRowOrColumnNum) == 0x000010, "Wrong size on X6BivariateTableFunctionLibrary_GetRowOrColumnNum");
static_assert(offsetof(X6BivariateTableFunctionLibrary_GetRowOrColumnNum, InTable) == 0x000000, "Member 'X6BivariateTableFunctionLibrary_GetRowOrColumnNum::InTable' has a wrong offset!");
static_assert(offsetof(X6BivariateTableFunctionLibrary_GetRowOrColumnNum, ReturnValue) == 0x000008, "Member 'X6BivariateTableFunctionLibrary_GetRowOrColumnNum::ReturnValue' has a wrong offset!");

}

