#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: X6ClothDIYRuntime

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// Class X6ClothDIYRuntime.X6ClothDIYBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UX6ClothDIYBlueprintLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void AsyncConstructTexture2DFromEncryptedFiles(const TArray<class FString>& PhotoPaths, TDelegate<void(const TArray<class FString>& Paths, const TArray<class UTexture2D*>& Tex)> Callback);
	static void AsyncSaveTexture2DToEncryptedFile(class UTexture2D* InTexture, const class FString& InSavePath);
	static void BeginDrawCanvasToRenderTarget2DArrayWithSliceIndex(class UObject* WorldContextObject, class UTextureRenderTarget2DArray* TextureRenderTarget, class UCanvas** Canvas, struct FVector2D* Size, struct FX6DIYDrawToRenderTarget2DArrayContext* Context);
	static bool ConstructTexture2DArrayByRenderTarget2Ds(const TArray<class UTextureRenderTarget2D*>& InSourceTargets, class UTexture2DArray** OutTexture2DArray);
	static class UTexture2D* ConstructTexture2DFromEncryptedFile(const class FString& InFilePath);
	static class FString ConvertBase64DataToString(const class FString& InBase64Data);
	static class FString ConvertStringToBase64Data(const class FString& InString);
	static void CopyTexture2DArrayToTarget2DArray(class UTexture2DArray* InSourceTexture2DArray, class UTexture2DArray* InTargetTexture2DArray);
	static void DrawMPTToRT(class UObject* WorldContextObject, class UTexture* InTexture, class UTextureRenderTarget2D* RenderTarget, const struct FVector4f& WriteValue, int32 Index_0);
	static void EndDrawCanvasToRenderTarget2DArrayWithSliceIndex(class UObject* WorldContextObject, const struct FX6DIYDrawToRenderTarget2DArrayContext& Context, int32 TargetSliceIndex);
	static float GetScalarParameterValue(class UMaterialInterface* InMaterialInterface, class FName InParamName);
	static class UTexture* GetTextureParameterValue(class UMaterialInterface* InMaterialInterface, class FName InParamName);
	static struct FLinearColor GetVectorParameterValue(class UMaterialInterface* InMaterialInterface, class FName InParamName);
	static void MarkComponentRenderStateDirty(class UActorComponent* InComponent);
	static bool ResetMaterialInstanceDynamicScalarParam(class UMaterialInstanceDynamic* InMID, class FName ParamName);
	static bool ResetMaterialInstanceDynamicTextureParam(class UMaterialInstanceDynamic* InMID, class FName ParamName);
	static bool ResetMaterialInstanceDynamicVectorParam(class UMaterialInstanceDynamic* InMID, class FName ParamName);
	static bool SetScalarParameterValue(class UMaterialInstance* InMaterialInstance, class FName InParamName, const float& InValue);
	static void SetTextureParameterValueByParentMaterial(class UMeshComponent* MeshComponent, class UMaterialInstance* ParentMI, class FName InParamName, class UTexture* InTexture);
	static void SetTextureParameterValueOnMaterials(class UMeshComponent* MeshComponent, class FName InParamName, class UTexture* InTexture);
	static bool SpliteTexture2DArrayIntoTexture2Ds(class UTexture2DArray* InTexture2DArray, TArray<class UTexture2D*>* OutTexture2Ds);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"X6ClothDIYBlueprintLibrary">();
	}
	static class UX6ClothDIYBlueprintLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UX6ClothDIYBlueprintLibrary>();
	}
};
static_assert(alignof(UX6ClothDIYBlueprintLibrary) == 0x000008, "Wrong alignment on UX6ClothDIYBlueprintLibrary");
static_assert(sizeof(UX6ClothDIYBlueprintLibrary) == 0x000028, "Wrong size on UX6ClothDIYBlueprintLibrary");

// Class X6ClothDIYRuntime.X6ClothDIYEditorOnlyBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UX6ClothDIYEditorOnlyBlueprintLibrary final : public UBlueprintFunctionLibrary
{
public:
	static TArray<class UMaterialInterface*> GetSkeletalMeshFurMaterials(class USkeletalMesh* InSkeletalMesh);
	static bool GetTextureAreaMeanColor(class UTexture* InQueryTexture, const struct FVector2D& LeftUpPoint, const struct FVector2D& Size, struct FLinearColor* OutMeanColor);
	static class FName GetTextureParamNameFromEvolutionDT(class UDataTable* InDT, int32 MatIndex, class UTexture* InQueryTexture);
	static class FName GetTextureParamNameFromSkeletalMesh(class USkeletalMesh* InSkeletalMesh, int32 MatIndex, class UTexture* InQueryTexture);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"X6ClothDIYEditorOnlyBlueprintLibrary">();
	}
	static class UX6ClothDIYEditorOnlyBlueprintLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UX6ClothDIYEditorOnlyBlueprintLibrary>();
	}
};
static_assert(alignof(UX6ClothDIYEditorOnlyBlueprintLibrary) == 0x000008, "Wrong alignment on UX6ClothDIYEditorOnlyBlueprintLibrary");
static_assert(sizeof(UX6ClothDIYEditorOnlyBlueprintLibrary) == 0x000028, "Wrong size on UX6ClothDIYEditorOnlyBlueprintLibrary");

}

