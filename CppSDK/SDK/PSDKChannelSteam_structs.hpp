#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PSDKChannelSteam

#include "Basic.hpp"

#include "PSDKBasic_structs.hpp"
#include "PSDKConfig_structs.hpp"


namespace SDK
{

// ScriptStruct PSDKChannelSteam.PSdkSteamBindAccountModel
// 0x0008 (0x0008 - 0x0000)
struct FPSdkSteamBindAccountModel final
{
public:
	int32                                         account_type;                                      // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Force;                                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FPSdkSteamBindAccountModel) == 0x000004, "Wrong alignment on FPSdkSteamBindAccountModel");
static_assert(sizeof(FPSdkSteamBindAccountModel) == 0x000008, "Wrong size on FPSdkSteamBindAccountModel");
static_assert(offsetof(FPSdkSteamBindAccountModel, account_type) == 0x000000, "Member 'FPSdkSteamBindAccountModel::account_type' has a wrong offset!");
static_assert(offsetof(FPSdkSteamBindAccountModel, Force) == 0x000004, "Member 'FPSdkSteamBindAccountModel::Force' has a wrong offset!");

// ScriptStruct PSDKChannelSteam.PSdkSteamAccountInfoModel
// 0x00A0 (0x00A0 - 0x0000)
struct FPSdkSteamAccountInfoModel final
{
public:
	bool                                          Real_Switch;                                       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Youth_Switch;                                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Guest_Need_Bind;                                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Third_Nid;                                         // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Third_Token;                                       // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Account;                                           // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Nid;                                               // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Token;                                             // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Refresh_Token;                                     // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         IsNew;                                             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         IsGuest;                                           // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AccountType;                                       // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RoleId;                                            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Extra;                                             // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SteamId;                                           // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPSdkSteamBindAccountModel             Bind_Account;                                      // 0x0098(0x0008)(NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FPSdkSteamAccountInfoModel) == 0x000008, "Wrong alignment on FPSdkSteamAccountInfoModel");
static_assert(sizeof(FPSdkSteamAccountInfoModel) == 0x0000A0, "Wrong size on FPSdkSteamAccountInfoModel");
static_assert(offsetof(FPSdkSteamAccountInfoModel, Real_Switch) == 0x000000, "Member 'FPSdkSteamAccountInfoModel::Real_Switch' has a wrong offset!");
static_assert(offsetof(FPSdkSteamAccountInfoModel, Youth_Switch) == 0x000001, "Member 'FPSdkSteamAccountInfoModel::Youth_Switch' has a wrong offset!");
static_assert(offsetof(FPSdkSteamAccountInfoModel, Guest_Need_Bind) == 0x000002, "Member 'FPSdkSteamAccountInfoModel::Guest_Need_Bind' has a wrong offset!");
static_assert(offsetof(FPSdkSteamAccountInfoModel, Third_Nid) == 0x000008, "Member 'FPSdkSteamAccountInfoModel::Third_Nid' has a wrong offset!");
static_assert(offsetof(FPSdkSteamAccountInfoModel, Third_Token) == 0x000018, "Member 'FPSdkSteamAccountInfoModel::Third_Token' has a wrong offset!");
static_assert(offsetof(FPSdkSteamAccountInfoModel, Account) == 0x000028, "Member 'FPSdkSteamAccountInfoModel::Account' has a wrong offset!");
static_assert(offsetof(FPSdkSteamAccountInfoModel, Nid) == 0x000038, "Member 'FPSdkSteamAccountInfoModel::Nid' has a wrong offset!");
static_assert(offsetof(FPSdkSteamAccountInfoModel, Token) == 0x000048, "Member 'FPSdkSteamAccountInfoModel::Token' has a wrong offset!");
static_assert(offsetof(FPSdkSteamAccountInfoModel, Refresh_Token) == 0x000058, "Member 'FPSdkSteamAccountInfoModel::Refresh_Token' has a wrong offset!");
static_assert(offsetof(FPSdkSteamAccountInfoModel, IsNew) == 0x000068, "Member 'FPSdkSteamAccountInfoModel::IsNew' has a wrong offset!");
static_assert(offsetof(FPSdkSteamAccountInfoModel, IsGuest) == 0x00006C, "Member 'FPSdkSteamAccountInfoModel::IsGuest' has a wrong offset!");
static_assert(offsetof(FPSdkSteamAccountInfoModel, AccountType) == 0x000070, "Member 'FPSdkSteamAccountInfoModel::AccountType' has a wrong offset!");
static_assert(offsetof(FPSdkSteamAccountInfoModel, RoleId) == 0x000074, "Member 'FPSdkSteamAccountInfoModel::RoleId' has a wrong offset!");
static_assert(offsetof(FPSdkSteamAccountInfoModel, Extra) == 0x000078, "Member 'FPSdkSteamAccountInfoModel::Extra' has a wrong offset!");
static_assert(offsetof(FPSdkSteamAccountInfoModel, SteamId) == 0x000088, "Member 'FPSdkSteamAccountInfoModel::SteamId' has a wrong offset!");
static_assert(offsetof(FPSdkSteamAccountInfoModel, Bind_Account) == 0x000098, "Member 'FPSdkSteamAccountInfoModel::Bind_Account' has a wrong offset!");

// ScriptStruct PSDKChannelSteam.PSdkSteamAccountApiModel
// 0x00A0 (0x00D8 - 0x0038)
struct FPSdkSteamAccountApiModel final : public FPSBffBasicModel
{
public:
	struct FPSdkSteamAccountInfoModel             Data;                                              // 0x0038(0x00A0)(NativeAccessSpecifierPublic)
};
static_assert(alignof(FPSdkSteamAccountApiModel) == 0x000008, "Wrong alignment on FPSdkSteamAccountApiModel");
static_assert(sizeof(FPSdkSteamAccountApiModel) == 0x0000D8, "Wrong size on FPSdkSteamAccountApiModel");
static_assert(offsetof(FPSdkSteamAccountApiModel, Data) == 0x000038, "Member 'FPSdkSteamAccountApiModel::Data' has a wrong offset!");

// ScriptStruct PSDKChannelSteam.SDKSteamChannelPreCheckInfoModel
// 0x0040 (0x0040 - 0x0000)
struct FSDKSteamChannelPreCheckInfoModel final
{
public:
	class FString                                 steam_status;                                      // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 steam_currency;                                    // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 steam_country;                                     // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 steam_id;                                          // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSDKSteamChannelPreCheckInfoModel) == 0x000008, "Wrong alignment on FSDKSteamChannelPreCheckInfoModel");
static_assert(sizeof(FSDKSteamChannelPreCheckInfoModel) == 0x000040, "Wrong size on FSDKSteamChannelPreCheckInfoModel");
static_assert(offsetof(FSDKSteamChannelPreCheckInfoModel, steam_status) == 0x000000, "Member 'FSDKSteamChannelPreCheckInfoModel::steam_status' has a wrong offset!");
static_assert(offsetof(FSDKSteamChannelPreCheckInfoModel, steam_currency) == 0x000010, "Member 'FSDKSteamChannelPreCheckInfoModel::steam_currency' has a wrong offset!");
static_assert(offsetof(FSDKSteamChannelPreCheckInfoModel, steam_country) == 0x000020, "Member 'FSDKSteamChannelPreCheckInfoModel::steam_country' has a wrong offset!");
static_assert(offsetof(FSDKSteamChannelPreCheckInfoModel, steam_id) == 0x000030, "Member 'FSDKSteamChannelPreCheckInfoModel::steam_id' has a wrong offset!");

// ScriptStruct PSDKChannelSteam.SDKSteamChannelPreCheckModel
// 0x0040 (0x0078 - 0x0038)
struct FSDKSteamChannelPreCheckModel final : public FPSBffBasicModel
{
public:
	struct FSDKSteamChannelPreCheckInfoModel      Data;                                              // 0x0038(0x0040)(NativeAccessSpecifierPublic)
};
static_assert(alignof(FSDKSteamChannelPreCheckModel) == 0x000008, "Wrong alignment on FSDKSteamChannelPreCheckModel");
static_assert(sizeof(FSDKSteamChannelPreCheckModel) == 0x000078, "Wrong size on FSDKSteamChannelPreCheckModel");
static_assert(offsetof(FSDKSteamChannelPreCheckModel, Data) == 0x000038, "Member 'FSDKSteamChannelPreCheckModel::Data' has a wrong offset!");

// ScriptStruct PSDKChannelSteam.PSdkSteamLanguagesRow
// 0x0000 (0x00D8 - 0x00D8)
struct FPSdkSteamLanguagesRow final : public FPSDKLanguageTableRowBase
{
};
static_assert(alignof(FPSdkSteamLanguagesRow) == 0x000008, "Wrong alignment on FPSdkSteamLanguagesRow");
static_assert(sizeof(FPSdkSteamLanguagesRow) == 0x0000D8, "Wrong size on FPSdkSteamLanguagesRow");

// ScriptStruct PSDKChannelSteam.PSdkSteamPayOrderInfoModel
// 0x0180 (0x0180 - 0x0000)
struct FPSdkSteamPayOrderInfoModel final
{
public:
	class FString                                 accnt_id;                                          // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Amount;                                            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 channelOrderID;                                    // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 charge_type;                                       // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 game_money;                                        // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Image;                                             // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 money;                                             // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Nid;                                               // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 notify_url;                                        // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Num;                                               // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 orderSign;                                         // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 order_extra;                                       // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 steam_trans_id;                                    // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 steam_order_id;                                    // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 order_id;                                          // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 order_ip;                                          // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Platform;                                          // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 product_id;                                        // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 product_name;                                      // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 tradeNum;                                          // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 zoneId;                                            // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 product_desc;                                      // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UserName;                                          // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 role_name;                                         // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FPSdkSteamPayOrderInfoModel) == 0x000008, "Wrong alignment on FPSdkSteamPayOrderInfoModel");
static_assert(sizeof(FPSdkSteamPayOrderInfoModel) == 0x000180, "Wrong size on FPSdkSteamPayOrderInfoModel");
static_assert(offsetof(FPSdkSteamPayOrderInfoModel, accnt_id) == 0x000000, "Member 'FPSdkSteamPayOrderInfoModel::accnt_id' has a wrong offset!");
static_assert(offsetof(FPSdkSteamPayOrderInfoModel, Amount) == 0x000010, "Member 'FPSdkSteamPayOrderInfoModel::Amount' has a wrong offset!");
static_assert(offsetof(FPSdkSteamPayOrderInfoModel, channelOrderID) == 0x000020, "Member 'FPSdkSteamPayOrderInfoModel::channelOrderID' has a wrong offset!");
static_assert(offsetof(FPSdkSteamPayOrderInfoModel, charge_type) == 0x000030, "Member 'FPSdkSteamPayOrderInfoModel::charge_type' has a wrong offset!");
static_assert(offsetof(FPSdkSteamPayOrderInfoModel, game_money) == 0x000040, "Member 'FPSdkSteamPayOrderInfoModel::game_money' has a wrong offset!");
static_assert(offsetof(FPSdkSteamPayOrderInfoModel, Image) == 0x000050, "Member 'FPSdkSteamPayOrderInfoModel::Image' has a wrong offset!");
static_assert(offsetof(FPSdkSteamPayOrderInfoModel, money) == 0x000060, "Member 'FPSdkSteamPayOrderInfoModel::money' has a wrong offset!");
static_assert(offsetof(FPSdkSteamPayOrderInfoModel, Nid) == 0x000070, "Member 'FPSdkSteamPayOrderInfoModel::Nid' has a wrong offset!");
static_assert(offsetof(FPSdkSteamPayOrderInfoModel, notify_url) == 0x000080, "Member 'FPSdkSteamPayOrderInfoModel::notify_url' has a wrong offset!");
static_assert(offsetof(FPSdkSteamPayOrderInfoModel, Num) == 0x000090, "Member 'FPSdkSteamPayOrderInfoModel::Num' has a wrong offset!");
static_assert(offsetof(FPSdkSteamPayOrderInfoModel, orderSign) == 0x0000A0, "Member 'FPSdkSteamPayOrderInfoModel::orderSign' has a wrong offset!");
static_assert(offsetof(FPSdkSteamPayOrderInfoModel, order_extra) == 0x0000B0, "Member 'FPSdkSteamPayOrderInfoModel::order_extra' has a wrong offset!");
static_assert(offsetof(FPSdkSteamPayOrderInfoModel, steam_trans_id) == 0x0000C0, "Member 'FPSdkSteamPayOrderInfoModel::steam_trans_id' has a wrong offset!");
static_assert(offsetof(FPSdkSteamPayOrderInfoModel, steam_order_id) == 0x0000D0, "Member 'FPSdkSteamPayOrderInfoModel::steam_order_id' has a wrong offset!");
static_assert(offsetof(FPSdkSteamPayOrderInfoModel, order_id) == 0x0000E0, "Member 'FPSdkSteamPayOrderInfoModel::order_id' has a wrong offset!");
static_assert(offsetof(FPSdkSteamPayOrderInfoModel, order_ip) == 0x0000F0, "Member 'FPSdkSteamPayOrderInfoModel::order_ip' has a wrong offset!");
static_assert(offsetof(FPSdkSteamPayOrderInfoModel, Platform) == 0x000100, "Member 'FPSdkSteamPayOrderInfoModel::Platform' has a wrong offset!");
static_assert(offsetof(FPSdkSteamPayOrderInfoModel, product_id) == 0x000110, "Member 'FPSdkSteamPayOrderInfoModel::product_id' has a wrong offset!");
static_assert(offsetof(FPSdkSteamPayOrderInfoModel, product_name) == 0x000120, "Member 'FPSdkSteamPayOrderInfoModel::product_name' has a wrong offset!");
static_assert(offsetof(FPSdkSteamPayOrderInfoModel, tradeNum) == 0x000130, "Member 'FPSdkSteamPayOrderInfoModel::tradeNum' has a wrong offset!");
static_assert(offsetof(FPSdkSteamPayOrderInfoModel, zoneId) == 0x000140, "Member 'FPSdkSteamPayOrderInfoModel::zoneId' has a wrong offset!");
static_assert(offsetof(FPSdkSteamPayOrderInfoModel, product_desc) == 0x000150, "Member 'FPSdkSteamPayOrderInfoModel::product_desc' has a wrong offset!");
static_assert(offsetof(FPSdkSteamPayOrderInfoModel, UserName) == 0x000160, "Member 'FPSdkSteamPayOrderInfoModel::UserName' has a wrong offset!");
static_assert(offsetof(FPSdkSteamPayOrderInfoModel, role_name) == 0x000170, "Member 'FPSdkSteamPayOrderInfoModel::role_name' has a wrong offset!");

// ScriptStruct PSDKChannelSteam.PSdkSteamPayYouthChargeModel
// 0x001C (0x001C - 0x0000)
struct FPSdkSteamPayYouthChargeModel final
{
public:
	int32                                         Age;                                               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AuthStatus;                                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         day_money;                                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Limit;                                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         month_money;                                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         month_remain_money;                                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         once_money_limit;                                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FPSdkSteamPayYouthChargeModel) == 0x000004, "Wrong alignment on FPSdkSteamPayYouthChargeModel");
static_assert(sizeof(FPSdkSteamPayYouthChargeModel) == 0x00001C, "Wrong size on FPSdkSteamPayYouthChargeModel");
static_assert(offsetof(FPSdkSteamPayYouthChargeModel, Age) == 0x000000, "Member 'FPSdkSteamPayYouthChargeModel::Age' has a wrong offset!");
static_assert(offsetof(FPSdkSteamPayYouthChargeModel, AuthStatus) == 0x000004, "Member 'FPSdkSteamPayYouthChargeModel::AuthStatus' has a wrong offset!");
static_assert(offsetof(FPSdkSteamPayYouthChargeModel, day_money) == 0x000008, "Member 'FPSdkSteamPayYouthChargeModel::day_money' has a wrong offset!");
static_assert(offsetof(FPSdkSteamPayYouthChargeModel, Limit) == 0x00000C, "Member 'FPSdkSteamPayYouthChargeModel::Limit' has a wrong offset!");
static_assert(offsetof(FPSdkSteamPayYouthChargeModel, month_money) == 0x000010, "Member 'FPSdkSteamPayYouthChargeModel::month_money' has a wrong offset!");
static_assert(offsetof(FPSdkSteamPayYouthChargeModel, month_remain_money) == 0x000014, "Member 'FPSdkSteamPayYouthChargeModel::month_remain_money' has a wrong offset!");
static_assert(offsetof(FPSdkSteamPayYouthChargeModel, once_money_limit) == 0x000018, "Member 'FPSdkSteamPayYouthChargeModel::once_money_limit' has a wrong offset!");

// ScriptStruct PSDKChannelSteam.PSdkSteamPayDataModel
// 0x01A0 (0x01A0 - 0x0000)
struct FPSdkSteamPayDataModel final
{
public:
	struct FPSdkSteamPayOrderInfoModel            Order_Info;                                        // 0x0000(0x0180)(NativeAccessSpecifierPublic)
	struct FPSdkSteamPayYouthChargeModel          Youth_Charge;                                      // 0x0180(0x001C)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FPSdkSteamPayDataModel) == 0x000008, "Wrong alignment on FPSdkSteamPayDataModel");
static_assert(sizeof(FPSdkSteamPayDataModel) == 0x0001A0, "Wrong size on FPSdkSteamPayDataModel");
static_assert(offsetof(FPSdkSteamPayDataModel, Order_Info) == 0x000000, "Member 'FPSdkSteamPayDataModel::Order_Info' has a wrong offset!");
static_assert(offsetof(FPSdkSteamPayDataModel, Youth_Charge) == 0x000180, "Member 'FPSdkSteamPayDataModel::Youth_Charge' has a wrong offset!");

// ScriptStruct PSDKChannelSteam.PSdkSteamPayModel
// 0x01A0 (0x01D8 - 0x0038)
struct FPSdkSteamPayModel final : public FPSBffBasicModel
{
public:
	struct FPSdkSteamPayDataModel                 Data;                                              // 0x0038(0x01A0)(NativeAccessSpecifierPublic)
};
static_assert(alignof(FPSdkSteamPayModel) == 0x000008, "Wrong alignment on FPSdkSteamPayModel");
static_assert(sizeof(FPSdkSteamPayModel) == 0x0001D8, "Wrong size on FPSdkSteamPayModel");
static_assert(offsetof(FPSdkSteamPayModel, Data) == 0x000038, "Member 'FPSdkSteamPayModel::Data' has a wrong offset!");

}

