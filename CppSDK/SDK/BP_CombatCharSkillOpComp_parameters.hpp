#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CombatCharSkillOpComp

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "ESkillInputType_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_CombatCharSkillOpComp.BP_CombatCharSkillOpComp_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_CombatCharSkillOpComp_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CombatCharSkillOpComp_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_CombatCharSkillOpComp_C_ReceiveEndPlay");
static_assert(sizeof(BP_CombatCharSkillOpComp_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_CombatCharSkillOpComp_C_ReceiveEndPlay");
static_assert(offsetof(BP_CombatCharSkillOpComp_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_CombatCharSkillOpComp_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_CombatCharSkillOpComp.BP_CombatCharSkillOpComp_C.ExecuteUbergraph_BP_CombatCharSkillOpComp
// 0x0008 (0x0008 - 0x0000)
struct BP_CombatCharSkillOpComp_C_ExecuteUbergraph_BP_CombatCharSkillOpComp final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CombatCharSkillOpComp_C_ExecuteUbergraph_BP_CombatCharSkillOpComp) == 0x000004, "Wrong alignment on BP_CombatCharSkillOpComp_C_ExecuteUbergraph_BP_CombatCharSkillOpComp");
static_assert(sizeof(BP_CombatCharSkillOpComp_C_ExecuteUbergraph_BP_CombatCharSkillOpComp) == 0x000008, "Wrong size on BP_CombatCharSkillOpComp_C_ExecuteUbergraph_BP_CombatCharSkillOpComp");
static_assert(offsetof(BP_CombatCharSkillOpComp_C_ExecuteUbergraph_BP_CombatCharSkillOpComp, EntryPoint) == 0x000000, "Member 'BP_CombatCharSkillOpComp_C_ExecuteUbergraph_BP_CombatCharSkillOpComp::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CombatCharSkillOpComp_C_ExecuteUbergraph_BP_CombatCharSkillOpComp, K2Node_Event_EndPlayReason) == 0x000004, "Member 'BP_CombatCharSkillOpComp_C_ExecuteUbergraph_BP_CombatCharSkillOpComp::K2Node_Event_EndPlayReason' has a wrong offset!");

// Function BP_CombatCharSkillOpComp.BP_CombatCharSkillOpComp_C.BP_ResetOverrideInputTagByInputType
// 0x0010 (0x0010 - 0x0000)
struct BP_CombatCharSkillOpComp_C_BP_ResetOverrideInputTagByInputType final
{
public:
	ESkillInputType                               InSkillInputType;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_Map_Find_Value;                           // 0x0004(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CombatCharSkillOpComp_C_BP_ResetOverrideInputTagByInputType) == 0x000004, "Wrong alignment on BP_CombatCharSkillOpComp_C_BP_ResetOverrideInputTagByInputType");
static_assert(sizeof(BP_CombatCharSkillOpComp_C_BP_ResetOverrideInputTagByInputType) == 0x000010, "Wrong size on BP_CombatCharSkillOpComp_C_BP_ResetOverrideInputTagByInputType");
static_assert(offsetof(BP_CombatCharSkillOpComp_C_BP_ResetOverrideInputTagByInputType, InSkillInputType) == 0x000000, "Member 'BP_CombatCharSkillOpComp_C_BP_ResetOverrideInputTagByInputType::InSkillInputType' has a wrong offset!");
static_assert(offsetof(BP_CombatCharSkillOpComp_C_BP_ResetOverrideInputTagByInputType, CallFunc_Map_Find_Value) == 0x000004, "Member 'BP_CombatCharSkillOpComp_C_BP_ResetOverrideInputTagByInputType::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_CombatCharSkillOpComp_C_BP_ResetOverrideInputTagByInputType, CallFunc_Map_Find_ReturnValue) == 0x00000C, "Member 'BP_CombatCharSkillOpComp_C_BP_ResetOverrideInputTagByInputType::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_CombatCharSkillOpComp.BP_CombatCharSkillOpComp_C.BP_OverrideSkillIDByInputType
// 0x0008 (0x0008 - 0x0000)
struct BP_CombatCharSkillOpComp_C_BP_OverrideSkillIDByInputType final
{
public:
	ESkillInputType                               InSkillInputType;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InSkillID;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CombatCharSkillOpComp_C_BP_OverrideSkillIDByInputType) == 0x000004, "Wrong alignment on BP_CombatCharSkillOpComp_C_BP_OverrideSkillIDByInputType");
static_assert(sizeof(BP_CombatCharSkillOpComp_C_BP_OverrideSkillIDByInputType) == 0x000008, "Wrong size on BP_CombatCharSkillOpComp_C_BP_OverrideSkillIDByInputType");
static_assert(offsetof(BP_CombatCharSkillOpComp_C_BP_OverrideSkillIDByInputType, InSkillInputType) == 0x000000, "Member 'BP_CombatCharSkillOpComp_C_BP_OverrideSkillIDByInputType::InSkillInputType' has a wrong offset!");
static_assert(offsetof(BP_CombatCharSkillOpComp_C_BP_OverrideSkillIDByInputType, InSkillID) == 0x000004, "Member 'BP_CombatCharSkillOpComp_C_BP_OverrideSkillIDByInputType::InSkillID' has a wrong offset!");

// Function BP_CombatCharSkillOpComp.BP_CombatCharSkillOpComp_C.BP_OverrideInputTagByInputType
// 0x000C (0x000C - 0x0000)
struct BP_CombatCharSkillOpComp_C_BP_OverrideInputTagByInputType final
{
public:
	ESkillInputType                               InSkillInputType;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           InputTag;                                          // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CombatCharSkillOpComp_C_BP_OverrideInputTagByInputType) == 0x000004, "Wrong alignment on BP_CombatCharSkillOpComp_C_BP_OverrideInputTagByInputType");
static_assert(sizeof(BP_CombatCharSkillOpComp_C_BP_OverrideInputTagByInputType) == 0x00000C, "Wrong size on BP_CombatCharSkillOpComp_C_BP_OverrideInputTagByInputType");
static_assert(offsetof(BP_CombatCharSkillOpComp_C_BP_OverrideInputTagByInputType, InSkillInputType) == 0x000000, "Member 'BP_CombatCharSkillOpComp_C_BP_OverrideInputTagByInputType::InSkillInputType' has a wrong offset!");
static_assert(offsetof(BP_CombatCharSkillOpComp_C_BP_OverrideInputTagByInputType, InputTag) == 0x000004, "Member 'BP_CombatCharSkillOpComp_C_BP_OverrideInputTagByInputType::InputTag' has a wrong offset!");

// Function BP_CombatCharSkillOpComp.BP_CombatCharSkillOpComp_C.BP_OverrideAbilityClassByInputType
// 0x0010 (0x0010 - 0x0000)
struct BP_CombatCharSkillOpComp_C_BP_OverrideAbilityClassByInputType final
{
public:
	ESkillInputType                               InSkillInputType;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 AbilityClass;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CombatCharSkillOpComp_C_BP_OverrideAbilityClassByInputType) == 0x000008, "Wrong alignment on BP_CombatCharSkillOpComp_C_BP_OverrideAbilityClassByInputType");
static_assert(sizeof(BP_CombatCharSkillOpComp_C_BP_OverrideAbilityClassByInputType) == 0x000010, "Wrong size on BP_CombatCharSkillOpComp_C_BP_OverrideAbilityClassByInputType");
static_assert(offsetof(BP_CombatCharSkillOpComp_C_BP_OverrideAbilityClassByInputType, InSkillInputType) == 0x000000, "Member 'BP_CombatCharSkillOpComp_C_BP_OverrideAbilityClassByInputType::InSkillInputType' has a wrong offset!");
static_assert(offsetof(BP_CombatCharSkillOpComp_C_BP_OverrideAbilityClassByInputType, AbilityClass) == 0x000008, "Member 'BP_CombatCharSkillOpComp_C_BP_OverrideAbilityClassByInputType::AbilityClass' has a wrong offset!");

// Function BP_CombatCharSkillOpComp.BP_CombatCharSkillOpComp_C.BP_EnableSkillIDOverride
// 0x0001 (0x0001 - 0x0000)
struct BP_CombatCharSkillOpComp_C_BP_EnableSkillIDOverride final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CombatCharSkillOpComp_C_BP_EnableSkillIDOverride) == 0x000001, "Wrong alignment on BP_CombatCharSkillOpComp_C_BP_EnableSkillIDOverride");
static_assert(sizeof(BP_CombatCharSkillOpComp_C_BP_EnableSkillIDOverride) == 0x000001, "Wrong size on BP_CombatCharSkillOpComp_C_BP_EnableSkillIDOverride");
static_assert(offsetof(BP_CombatCharSkillOpComp_C_BP_EnableSkillIDOverride, Enable) == 0x000000, "Member 'BP_CombatCharSkillOpComp_C_BP_EnableSkillIDOverride::Enable' has a wrong offset!");

// Function BP_CombatCharSkillOpComp.BP_CombatCharSkillOpComp_C.BP_CastSkillByAbilityCls
// 0x0028 (0x0028 - 0x0000)
struct BP_CombatCharSkillOpComp_C_BP_CastSkillByAbilityCls final
{
public:
	TSoftClassPtr<class UClass>                   AbilityCls;                                        // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_CombatCharSkillOpComp_C_BP_CastSkillByAbilityCls) == 0x000008, "Wrong alignment on BP_CombatCharSkillOpComp_C_BP_CastSkillByAbilityCls");
static_assert(sizeof(BP_CombatCharSkillOpComp_C_BP_CastSkillByAbilityCls) == 0x000028, "Wrong size on BP_CombatCharSkillOpComp_C_BP_CastSkillByAbilityCls");
static_assert(offsetof(BP_CombatCharSkillOpComp_C_BP_CastSkillByAbilityCls, AbilityCls) == 0x000000, "Member 'BP_CombatCharSkillOpComp_C_BP_CastSkillByAbilityCls::AbilityCls' has a wrong offset!");

// Function BP_CombatCharSkillOpComp.BP_CombatCharSkillOpComp_C.BP_CastSkill
// 0x0028 (0x0028 - 0x0000)
struct BP_CombatCharSkillOpComp_C_BP_CastSkill final
{
public:
	int32                                         skillID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitDir;                                            // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         TargetId;                                          // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CombatCharSkillOpComp_C_BP_CastSkill) == 0x000008, "Wrong alignment on BP_CombatCharSkillOpComp_C_BP_CastSkill");
static_assert(sizeof(BP_CombatCharSkillOpComp_C_BP_CastSkill) == 0x000028, "Wrong size on BP_CombatCharSkillOpComp_C_BP_CastSkill");
static_assert(offsetof(BP_CombatCharSkillOpComp_C_BP_CastSkill, skillID) == 0x000000, "Member 'BP_CombatCharSkillOpComp_C_BP_CastSkill::skillID' has a wrong offset!");
static_assert(offsetof(BP_CombatCharSkillOpComp_C_BP_CastSkill, HitDir) == 0x000008, "Member 'BP_CombatCharSkillOpComp_C_BP_CastSkill::HitDir' has a wrong offset!");
static_assert(offsetof(BP_CombatCharSkillOpComp_C_BP_CastSkill, TargetId) == 0x000020, "Member 'BP_CombatCharSkillOpComp_C_BP_CastSkill::TargetId' has a wrong offset!");

// Function BP_CombatCharSkillOpComp.BP_CombatCharSkillOpComp_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct BP_CombatCharSkillOpComp_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_CombatCharSkillOpComp_C_GetModuleName) == 0x000008, "Wrong alignment on BP_CombatCharSkillOpComp_C_GetModuleName");
static_assert(sizeof(BP_CombatCharSkillOpComp_C_GetModuleName) == 0x000010, "Wrong size on BP_CombatCharSkillOpComp_C_GetModuleName");
static_assert(offsetof(BP_CombatCharSkillOpComp_C_GetModuleName, ReturnValue) == 0x000000, "Member 'BP_CombatCharSkillOpComp_C_GetModuleName::ReturnValue' has a wrong offset!");

}

