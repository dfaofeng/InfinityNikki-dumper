#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: X6BlueprintMinBPLibrary

#include "Basic.hpp"

#include "X6BlueprintMinBPLibrary_classes.hpp"
#include "X6BlueprintMinBPLibrary_parameters.hpp"


namespace SDK
{

// Function X6BlueprintMinBPLibrary.X6BlueprintMinBPLibrary_C.TrySendMsgToStartGame
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           actorWithEntryComp                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int64                                   miniGameId                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UX6BlueprintMinBPLibrary_C::TrySendMsgToStartGame(class AActor* actorWithEntryComp, int64 miniGameId, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintMinBPLibrary_C", "TrySendMsgToStartGame");

	Params::X6BlueprintMinBPLibrary_C_TrySendMsgToStartGame Parms{};

	Parms.actorWithEntryComp = actorWithEntryComp;
	Parms.miniGameId = miniGameId;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function X6BlueprintMinBPLibrary.X6BlueprintMinBPLibrary_C.Test_ClearAllMiniGameLvlSeqPlayRecord
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UX6BlueprintMinBPLibrary_C::Test_ClearAllMiniGameLvlSeqPlayRecord(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintMinBPLibrary_C", "Test_ClearAllMiniGameLvlSeqPlayRecord");

	Params::X6BlueprintMinBPLibrary_C_Test_ClearAllMiniGameLvlSeqPlayRecord Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function X6BlueprintMinBPLibrary.X6BlueprintMinBPLibrary_C.TeleportPlayerToActor
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           TargetLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UX6BlueprintMinBPLibrary_C::TeleportPlayerToActor(class AActor* TargetLocation, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintMinBPLibrary_C", "TeleportPlayerToActor");

	Params::X6BlueprintMinBPLibrary_C_TeleportPlayerToActor Parms{};

	Parms.TargetLocation = TargetLocation;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function X6BlueprintMinBPLibrary.X6BlueprintMinBPLibrary_C.TeleportPlayerByTag
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    TeleportTag                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    bNoFadeOutIn                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   PosOffset                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  RotationOffsetY                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSkipLoadingCheck                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bRotateCamera                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UX6BlueprintMinBPLibrary_C::TeleportPlayerByTag(const class FString& TeleportTag, bool bNoFadeOutIn, const struct FVector& PosOffset, double RotationOffsetY, bool bSkipLoadingCheck, bool bRotateCamera, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintMinBPLibrary_C", "TeleportPlayerByTag");

	Params::X6BlueprintMinBPLibrary_C_TeleportPlayerByTag Parms{};

	Parms.TeleportTag = std::move(TeleportTag);
	Parms.bNoFadeOutIn = bNoFadeOutIn;
	Parms.PosOffset = std::move(PosOffset);
	Parms.RotationOffsetY = RotationOffsetY;
	Parms.bSkipLoadingCheck = bSkipLoadingCheck;
	Parms.bRotateCamera = bRotateCamera;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function X6BlueprintMinBPLibrary.X6BlueprintMinBPLibrary_C.TeleportPlayer
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   TargettLocation                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  TargetRotation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bNoFadeOutIn                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UX6BlueprintMinBPLibrary_C::TeleportPlayer(class ACharacter* Player, const struct FVector& TargettLocation, const struct FRotator& TargetRotation, bool bNoFadeOutIn, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintMinBPLibrary_C", "TeleportPlayer");

	Params::X6BlueprintMinBPLibrary_C_TeleportPlayer Parms{};

	Parms.Player = Player;
	Parms.TargettLocation = std::move(TargettLocation);
	Parms.TargetRotation = std::move(TargetRotation);
	Parms.bNoFadeOutIn = bNoFadeOutIn;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function X6BlueprintMinBPLibrary.X6BlueprintMinBPLibrary_C.SpawnActor
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           SpawnClass                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Position                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor**                          Value                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UX6BlueprintMinBPLibrary_C::SpawnActor(class UClass* SpawnClass, const struct FVector& Position, const struct FRotator& Rotation, class UObject* __WorldContext, class AActor** Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintMinBPLibrary_C", "SpawnActor");

	Params::X6BlueprintMinBPLibrary_C_SpawnActor Parms{};

	Parms.SpawnClass = SpawnClass;
	Parms.Position = std::move(Position);
	Parms.Rotation = std::move(Rotation);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function X6BlueprintMinBPLibrary.X6BlueprintMinBPLibrary_C.ShowMessageOnScreen
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  TextDuration                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMessageHUDEnum                         MessageType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMessageHUDHead                         HeadImage                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class FString>&                  MessageID                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UX6BlueprintMinBPLibrary_C::ShowMessageOnScreen(double TextDuration, EMessageHUDEnum MessageType, EMessageHUDHead HeadImage, TArray<class FString>& MessageID, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintMinBPLibrary_C", "ShowMessageOnScreen");

	Params::X6BlueprintMinBPLibrary_C_ShowMessageOnScreen Parms{};

	Parms.TextDuration = TextDuration;
	Parms.MessageType = MessageType;
	Parms.HeadImage = HeadImage;
	Parms.MessageID = std::move(MessageID);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	MessageID = std::move(Parms.MessageID);
}


// Function X6BlueprintMinBPLibrary.X6BlueprintMinBPLibrary_C.ShowMessageHUDOnScreen
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FText>&                    Messages                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// double                                  TextDuration                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMessageHUDEnum                         MessageType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMessageHUDHead                         HeadImage                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMessageBoxModeEnum                     PopupMode                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DaMiaoHudTextAutoEnd                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class FString>&                  MessageID                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UX6BlueprintMinBPLibrary_C::ShowMessageHUDOnScreen(TArray<class FText>& Messages, double TextDuration, EMessageHUDEnum MessageType, EMessageHUDHead HeadImage, EMessageBoxModeEnum PopupMode, bool DaMiaoHudTextAutoEnd, TArray<class FString>& MessageID, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintMinBPLibrary_C", "ShowMessageHUDOnScreen");

	Params::X6BlueprintMinBPLibrary_C_ShowMessageHUDOnScreen Parms{};

	Parms.Messages = std::move(Messages);
	Parms.TextDuration = TextDuration;
	Parms.MessageType = MessageType;
	Parms.HeadImage = HeadImage;
	Parms.PopupMode = PopupMode;
	Parms.DaMiaoHudTextAutoEnd = DaMiaoHudTextAutoEnd;
	Parms.MessageID = std::move(MessageID);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Messages = std::move(Parms.Messages);
	MessageID = std::move(Parms.MessageID);
}


// Function X6BlueprintMinBPLibrary.X6BlueprintMinBPLibrary_C.SetSimulatePhysics
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    bSimulate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UX6BlueprintMinBPLibrary_C::SetSimulatePhysics(class UPrimitiveComponent* Target, bool bSimulate, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintMinBPLibrary_C", "SetSimulatePhysics");

	Params::X6BlueprintMinBPLibrary_C_SetSimulatePhysics Parms{};

	Parms.Target = Target;
	Parms.bSimulate = bSimulate;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function X6BlueprintMinBPLibrary.X6BlueprintMinBPLibrary_C.SetMiniGameLvlSeqPlayed
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_MiniGame_C*                   MiniGame                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    bPlayed                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UX6BlueprintMinBPLibrary_C::SetMiniGameLvlSeqPlayed(class ABP_MiniGame_C* MiniGame, bool bPlayed, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintMinBPLibrary_C", "SetMiniGameLvlSeqPlayed");

	Params::X6BlueprintMinBPLibrary_C_SetMiniGameLvlSeqPlayed Parms{};

	Parms.MiniGame = MiniGame;
	Parms.bPlayed = bPlayed;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function X6BlueprintMinBPLibrary.X6BlueprintMinBPLibrary_C.ResumeGame
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UX6BlueprintMinBPLibrary_C::ResumeGame(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintMinBPLibrary_C", "ResumeGame");

	Params::X6BlueprintMinBPLibrary_C_ResumeGame Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function X6BlueprintMinBPLibrary.X6BlueprintMinBPLibrary_C.RemoveMiniGameMoveCameraState
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UX6BlueprintMinBPLibrary_C::RemoveMiniGameMoveCameraState(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintMinBPLibrary_C", "RemoveMiniGameMoveCameraState");

	Params::X6BlueprintMinBPLibrary_C_RemoveMiniGameMoveCameraState Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function X6BlueprintMinBPLibrary.X6BlueprintMinBPLibrary_C.PuzzleSpawnerInGroupResetFinishCB
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SpawnerActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    bSuccess                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UX6BlueprintMinBPLibrary_C::PuzzleSpawnerInGroupResetFinishCB(class AActor* SpawnerActor, bool bSuccess, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintMinBPLibrary_C", "PuzzleSpawnerInGroupResetFinishCB");

	Params::X6BlueprintMinBPLibrary_C_PuzzleSpawnerInGroupResetFinishCB Parms{};

	Parms.SpawnerActor = SpawnerActor;
	Parms.bSuccess = bSuccess;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function X6BlueprintMinBPLibrary.X6BlueprintMinBPLibrary_C.PlayMiniGameLvlSeq
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_MiniGame_C*                   MiniGame                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ULevelSequence*                   Sequence                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ALevelSequenceActor**             SequenceActor                                          (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ULevelSequencePlayer**            SequencePlayer                                         (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UX6BlueprintMinBPLibrary_C::PlayMiniGameLvlSeq(class ABP_MiniGame_C* MiniGame, class ULevelSequence* Sequence, class UObject* __WorldContext, class ALevelSequenceActor** SequenceActor, class ULevelSequencePlayer** SequencePlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintMinBPLibrary_C", "PlayMiniGameLvlSeq");

	Params::X6BlueprintMinBPLibrary_C_PlayMiniGameLvlSeq Parms{};

	Parms.MiniGame = MiniGame;
	Parms.Sequence = Sequence;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (SequenceActor != nullptr)
		*SequenceActor = Parms.SequenceActor;

	if (SequencePlayer != nullptr)
		*SequencePlayer = Parms.SequencePlayer;
}


// Function X6BlueprintMinBPLibrary.X6BlueprintMinBPLibrary_C.PauseGame
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UX6BlueprintMinBPLibrary_C::PauseGame(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintMinBPLibrary_C", "PauseGame");

	Params::X6BlueprintMinBPLibrary_C_PauseGame Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function X6BlueprintMinBPLibrary.X6BlueprintMinBPLibrary_C.OverLapRequestHistoryToStartGame
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           actorWithEntryComp                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int64                                   miniGameId                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UX6BlueprintMinBPLibrary_C::OverLapRequestHistoryToStartGame(class AActor* actorWithEntryComp, int64 miniGameId, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintMinBPLibrary_C", "OverLapRequestHistoryToStartGame");

	Params::X6BlueprintMinBPLibrary_C_OverLapRequestHistoryToStartGame Parms{};

	Parms.actorWithEntryComp = actorWithEntryComp;
	Parms.miniGameId = miniGameId;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function X6BlueprintMinBPLibrary.X6BlueprintMinBPLibrary_C.LaunchPlayer
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   LaunchVelocity                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    XYOverride                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ZOverride                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UX6BlueprintMinBPLibrary_C::LaunchPlayer(class ACharacter* Character, const struct FVector& LaunchVelocity, bool XYOverride, bool ZOverride, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintMinBPLibrary_C", "LaunchPlayer");

	Params::X6BlueprintMinBPLibrary_C_LaunchPlayer Parms{};

	Parms.Character = Character;
	Parms.LaunchVelocity = std::move(LaunchVelocity);
	Parms.XYOverride = XYOverride;
	Parms.ZOverride = ZOverride;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function X6BlueprintMinBPLibrary.X6BlueprintMinBPLibrary_C.IsMiniGameLvlSeqPlayed
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ABP_MiniGame_C*                   MiniGame                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   bIsPlayed                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UX6BlueprintMinBPLibrary_C::IsMiniGameLvlSeqPlayed(class ABP_MiniGame_C* MiniGame, class UObject* __WorldContext, bool* bIsPlayed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintMinBPLibrary_C", "IsMiniGameLvlSeqPlayed");

	Params::X6BlueprintMinBPLibrary_C_IsMiniGameLvlSeqPlayed Parms{};

	Parms.MiniGame = MiniGame;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (bIsPlayed != nullptr)
		*bIsPlayed = Parms.bIsPlayed;
}


// Function X6BlueprintMinBPLibrary.X6BlueprintMinBPLibrary_C.HideActor
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AX6Actor*                         Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    bHidden                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UX6BlueprintMinBPLibrary_C::HideActor(class AX6Actor* Target, bool bHidden, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintMinBPLibrary_C", "HideActor");

	Params::X6BlueprintMinBPLibrary_C_HideActor Parms{};

	Parms.Target = Target;
	Parms.bHidden = bHidden;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function X6BlueprintMinBPLibrary.X6BlueprintMinBPLibrary_C.GetLocalPlayerPawn
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ACharacter**                      LocalPlayerPawn                                        (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UX6BlueprintMinBPLibrary_C::GetLocalPlayerPawn(class UObject* __WorldContext, class ACharacter** LocalPlayerPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintMinBPLibrary_C", "GetLocalPlayerPawn");

	Params::X6BlueprintMinBPLibrary_C_GetLocalPlayerPawn Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (LocalPlayerPawn != nullptr)
		*LocalPlayerPawn = Parms.LocalPlayerPawn;
}


// Function X6BlueprintMinBPLibrary.X6BlueprintMinBPLibrary_C.DestroyMiniGame
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           entryActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UX6BlueprintMinBPLibrary_C::DestroyMiniGame(class AActor* entryActor, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintMinBPLibrary_C", "DestroyMiniGame");

	Params::X6BlueprintMinBPLibrary_C_DestroyMiniGame Parms{};

	Parms.entryActor = entryActor;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function X6BlueprintMinBPLibrary.X6BlueprintMinBPLibrary_C.DestroyActor
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AX6Actor*                         Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UX6BlueprintMinBPLibrary_C::DestroyActor(class AX6Actor* Target, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintMinBPLibrary_C", "DestroyActor");

	Params::X6BlueprintMinBPLibrary_C_DestroyActor Parms{};

	Parms.Target = Target;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function X6BlueprintMinBPLibrary.X6BlueprintMinBPLibrary_C.CreateMiniGame
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           entryActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UX6BlueprintMinBPLibrary_C::CreateMiniGame(class AActor* entryActor, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintMinBPLibrary_C", "CreateMiniGame");

	Params::X6BlueprintMinBPLibrary_C_CreateMiniGame Parms{};

	Parms.entryActor = entryActor;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function X6BlueprintMinBPLibrary.X6BlueprintMinBPLibrary_C.CheckHaveVoucherCost
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   miniGameId                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   bHave                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UX6BlueprintMinBPLibrary_C::CheckHaveVoucherCost(int64 miniGameId, class UObject* __WorldContext, bool* bHave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintMinBPLibrary_C", "CheckHaveVoucherCost");

	Params::X6BlueprintMinBPLibrary_C_CheckHaveVoucherCost Parms{};

	Parms.miniGameId = miniGameId;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (bHave != nullptr)
		*bHave = Parms.bHave;
}


// Function X6BlueprintMinBPLibrary.X6BlueprintMinBPLibrary_C.CheckHaveVoucher
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   miniGameId                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   bHave                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UX6BlueprintMinBPLibrary_C::CheckHaveVoucher(int64 miniGameId, class UObject* __WorldContext, bool* bHave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintMinBPLibrary_C", "CheckHaveVoucher");

	Params::X6BlueprintMinBPLibrary_C_CheckHaveVoucher Parms{};

	Parms.miniGameId = miniGameId;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (bHave != nullptr)
		*bHave = Parms.bHave;
}


// Function X6BlueprintMinBPLibrary.X6BlueprintMinBPLibrary_C.BP_QuitCurrentSuitAbility
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UX6BlueprintMinBPLibrary_C::BP_QuitCurrentSuitAbility(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintMinBPLibrary_C", "BP_QuitCurrentSuitAbility");

	Params::X6BlueprintMinBPLibrary_C_BP_QuitCurrentSuitAbility Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function X6BlueprintMinBPLibrary.X6BlueprintMinBPLibrary_C.BP_GetActorsBySpawnGroupID
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   SpawnGroupID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<class AActor*>*                  Actors                                                 (Parm, OutParm)

void UX6BlueprintMinBPLibrary_C::BP_GetActorsBySpawnGroupID(int64 SpawnGroupID, class UObject* __WorldContext, TArray<class AActor*>* Actors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintMinBPLibrary_C", "BP_GetActorsBySpawnGroupID");

	Params::X6BlueprintMinBPLibrary_C_BP_GetActorsBySpawnGroupID Parms{};

	Parms.SpawnGroupID = SpawnGroupID;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Actors != nullptr)
		*Actors = std::move(Parms.Actors);
}


// Function X6BlueprintMinBPLibrary.X6BlueprintMinBPLibrary_C.BP_GetActorBySpawnerID
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   SpawnerID                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor**                          Actor                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UX6BlueprintMinBPLibrary_C::BP_GetActorBySpawnerID(int64 SpawnerID, class UObject* __WorldContext, class AActor** Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintMinBPLibrary_C", "BP_GetActorBySpawnerID");

	Params::X6BlueprintMinBPLibrary_C_BP_GetActorBySpawnerID Parms{};

	Parms.SpawnerID = SpawnerID;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Actor != nullptr)
		*Actor = Parms.Actor;
}


// Function X6BlueprintMinBPLibrary.X6BlueprintMinBPLibrary_C.AddMiniGameMoveCameraState
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UX6BlueprintMinBPLibrary_C::AddMiniGameMoveCameraState(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintMinBPLibrary_C", "AddMiniGameMoveCameraState");

	Params::X6BlueprintMinBPLibrary_C_AddMiniGameMoveCameraState Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function X6BlueprintMinBPLibrary.X6BlueprintMinBPLibrary_C.ActorRotateToTarget
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UX6BlueprintMinBPLibrary_C::ActorRotateToTarget(class AActor* Actor, class AActor* Target, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintMinBPLibrary_C", "ActorRotateToTarget");

	Params::X6BlueprintMinBPLibrary_C_ActorRotateToTarget Parms{};

	Parms.Actor = Actor;
	Parms.Target = Target;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}

}

