#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ANS_ControlSound

#include "Basic.hpp"

#include "Enum_ANSControlSoundCondition_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ANS_ControlSound.ANS_ControlSound_C
// 0x0070 (0x00A0 - 0x0030)
class UANS_ControlSound_C final : public UAnimNotifyState
{
public:
	bool                                          bReachedEndPostEvent;                              // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        BlendOutTime;                                      // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UAkAudioEvent>           BeginAkEvent;                                      // 0x0040(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TSoftObjectPtr<class UAkAudioEvent>           EndAkEvent;                                        // 0x0068(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<Enum_ANSControlSoundCondition>         Conditions;                                        // 0x0090(0x0010)(Edit, BlueprintVisible)

public:
	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ANS_ControlSound_C">();
	}
	static class UANS_ControlSound_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UANS_ControlSound_C>();
	}
};
static_assert(alignof(UANS_ControlSound_C) == 0x000008, "Wrong alignment on UANS_ControlSound_C");
static_assert(sizeof(UANS_ControlSound_C) == 0x0000A0, "Wrong size on UANS_ControlSound_C");
static_assert(offsetof(UANS_ControlSound_C, bReachedEndPostEvent) == 0x000030, "Member 'UANS_ControlSound_C::bReachedEndPostEvent' has a wrong offset!");
static_assert(offsetof(UANS_ControlSound_C, BlendOutTime) == 0x000038, "Member 'UANS_ControlSound_C::BlendOutTime' has a wrong offset!");
static_assert(offsetof(UANS_ControlSound_C, BeginAkEvent) == 0x000040, "Member 'UANS_ControlSound_C::BeginAkEvent' has a wrong offset!");
static_assert(offsetof(UANS_ControlSound_C, EndAkEvent) == 0x000068, "Member 'UANS_ControlSound_C::EndAkEvent' has a wrong offset!");
static_assert(offsetof(UANS_ControlSound_C, Conditions) == 0x000090, "Member 'UANS_ControlSound_C::Conditions' has a wrong offset!");

}

