#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DyEnvSky

#include "Basic.hpp"

#include "BP_DyEnvSky_classes.hpp"
#include "BP_DyEnvSky_parameters.hpp"


namespace SDK
{

// Function BP_DyEnvSky.BP_DyEnvSky_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_DyEnvSky_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DyEnvSky_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DyEnvSky.BP_DyEnvSky_C.SetupStarfield
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_DyEnvSky_C::SetupStarfield()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DyEnvSky_C", "SetupStarfield");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DyEnvSky.BP_DyEnvSky_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DyEnvSky_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DyEnvSky_C", "ReceiveTick");

	Params::BP_DyEnvSky_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DyEnvSky.BP_DyEnvSky_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_DyEnvSky_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DyEnvSky_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DyEnvSky.BP_DyEnvSky_C.PostConstruct0
// (BlueprintCallable, BlueprintEvent)

void ABP_DyEnvSky_C::PostConstruct0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DyEnvSky_C", "PostConstruct0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DyEnvSky.BP_DyEnvSky_C.PostConstruct
// (BlueprintCallable, BlueprintEvent)

void ABP_DyEnvSky_C::PostConstruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DyEnvSky_C", "PostConstruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DyEnvSky.BP_DyEnvSky_C.OnLoaded_75399A6F4F15C2371B910B86BCB7B2D2
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_DyEnvSky_C::OnLoaded_75399A6F4F15C2371B910B86BCB7B2D2(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DyEnvSky_C", "OnLoaded_75399A6F4F15C2371B910B86BCB7B2D2");

	Params::BP_DyEnvSky_C_OnLoaded_75399A6F4F15C2371B910B86BCB7B2D2 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DyEnvSky.BP_DyEnvSky_C.Manual Operation TOD
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DyEnvSky_C::Manual_Operation_TOD(double Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DyEnvSky_C", "Manual Operation TOD");

	Params::BP_DyEnvSky_C_Manual_Operation_TOD Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DyEnvSky.BP_DyEnvSky_C.LimitSunRotator
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FSunLightLerpConfig&       Final_Sun_Light_Setting                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// class ADirectionalLight*                Sun_Light                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ADirectionalLight*                Moon_Light                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Free                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Limited                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Swap_Factor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DyEnvSky_C::LimitSunRotator(const struct FSunLightLerpConfig& Final_Sun_Light_Setting, class ADirectionalLight* Sun_Light, class ADirectionalLight* Moon_Light, double Free, double Limited, double Swap_Factor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DyEnvSky_C", "LimitSunRotator");

	Params::BP_DyEnvSky_C_LimitSunRotator Parms{};

	Parms.Final_Sun_Light_Setting = std::move(Final_Sun_Light_Setting);
	Parms.Sun_Light = Sun_Light;
	Parms.Moon_Light = Moon_Light;
	Parms.Free = Free;
	Parms.Limited = Limited;
	Parms.Swap_Factor = Swap_Factor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DyEnvSky.BP_DyEnvSky_C.Gizmo
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DyEnvSky_C::Gizmo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DyEnvSky_C", "Gizmo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DyEnvSky.BP_DyEnvSky_C.ExecuteUbergraph_BP_DyEnvSky
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DyEnvSky_C::ExecuteUbergraph_BP_DyEnvSky(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DyEnvSky_C", "ExecuteUbergraph_BP_DyEnvSky");

	Params::BP_DyEnvSky_C_ExecuteUbergraph_BP_DyEnvSky Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DyEnvSky.BP_DyEnvSky_C.DrawTrack
// (BlueprintCallable, BlueprintEvent)

void ABP_DyEnvSky_C::DrawTrack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DyEnvSky_C", "DrawTrack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DyEnvSky.BP_DyEnvSky_C.CalculatorFinalDirLitRot
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InRotFree                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InRotLimited                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InRotFreeMoon                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DyEnvSky_C::CalculatorFinalDirLitRot(double InRotFree, double InRotLimited, double InRotFreeMoon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DyEnvSky_C", "CalculatorFinalDirLitRot");

	Params::BP_DyEnvSky_C_CalculatorFinalDirLitRot Parms{};

	Parms.InRotFree = InRotFree;
	Parms.InRotLimited = InRotLimited;
	Parms.InRotFreeMoon = InRotFreeMoon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DyEnvSky.BP_DyEnvSky_C.BPI_WeatherData
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           WeatherPreset                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_DyEnvSky_C::BPI_WeatherData(class UClass* WeatherPreset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DyEnvSky_C", "BPI_WeatherData");

	Params::BP_DyEnvSky_C_BPI_WeatherData Parms{};

	Parms.WeatherPreset = WeatherPreset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DyEnvSky.BP_DyEnvSky_C.BPI_WeatherChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    RegionName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    UnloadWeatherName                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    LoadWeatherName                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_DyEnvSky_C::BPI_WeatherChanged(const class FString& RegionName, const class FString& UnloadWeatherName, const class FString& LoadWeatherName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DyEnvSky_C", "BPI_WeatherChanged");

	Params::BP_DyEnvSky_C_BPI_WeatherChanged Parms{};

	Parms.RegionName = std::move(RegionName);
	Parms.UnloadWeatherName = std::move(UnloadWeatherName);
	Parms.LoadWeatherName = std::move(LoadWeatherName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DyEnvSky.BP_DyEnvSky_C.BPI_TODTime
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DyEnvSky_C::BPI_TODTime(double Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DyEnvSky_C", "BPI_TODTime");

	Params::BP_DyEnvSky_C_BPI_TODTime Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DyEnvSky.BP_DyEnvSky_C.BPI_TodState
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DyEnvSky_C::BPI_TodState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DyEnvSky_C", "BPI_TodState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DyEnvSky.BP_DyEnvSky_C.BPI_SaveAsset
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    OnlySyncContent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    OnlyWriteParam                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DyEnvSky_C::BPI_SaveAsset(bool OnlySyncContent, bool OnlyWriteParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DyEnvSky_C", "BPI_SaveAsset");

	Params::BP_DyEnvSky_C_BPI_SaveAsset Parms{};

	Parms.OnlySyncContent = OnlySyncContent;
	Parms.OnlyWriteParam = OnlyWriteParam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DyEnvSky.BP_DyEnvSky_C.BPI_ReloadFile
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DyEnvSky_C::BPI_ReloadFile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DyEnvSky_C", "BPI_ReloadFile");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DyEnvSky.BP_DyEnvSky_C.BPI_EditorUpdateRole
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FLinearColor&              LocalLightColor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DyEnvSky_C::BPI_EditorUpdateRole(const struct FLinearColor& LocalLightColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DyEnvSky_C", "BPI_EditorUpdateRole");

	Params::BP_DyEnvSky_C_BPI_EditorUpdateRole Parms{};

	Parms.LocalLightColor = std::move(LocalLightColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DyEnvSky.BP_DyEnvSky_C.BPI_EditorUpdate
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DyEnvSky_C::BPI_EditorUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DyEnvSky_C", "BPI_EditorUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DyEnvSky.BP_DyEnvSky_C.BPI_CLFSPostContruct
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DyEnvSky_C::BPI_CLFSPostContruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DyEnvSky_C", "BPI_CLFSPostContruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DyEnvSky.BP_DyEnvSky_C.Blend SkyLayerTexture2D
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_DyEnvSky_C::Blend_SkyLayerTexture2D()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DyEnvSky_C", "Blend SkyLayerTexture2D");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DyEnvSky.BP_DyEnvSky_C.Blend SkyBoxTexture2D
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_DyEnvSky_C::Blend_SkyBoxTexture2D()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DyEnvSky_C", "Blend SkyBoxTexture2D");

	UObject::ProcessEvent(Func, nullptr);
}

}

