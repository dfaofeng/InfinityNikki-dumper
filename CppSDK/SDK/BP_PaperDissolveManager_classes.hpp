#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PaperDissolveManager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "PaperEffects_classes.hpp"
#include "MeshandIndex_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PaperDissolveManager.BP_PaperDissolveManager_C
// 0x0250 (0x05F8 - 0x03A8)
class ABP_PaperDissolveManager_C final : public APaperDissolveManager
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class UActorComponent*>                SMOpacityLast;                                     // 0x03B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UInstancedStaticMeshComponent*>  OpacityComp;                                       // 0x03C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TSet<class AActor*>                           FoliageLast;                                       // 0x03D8(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TSet<class ABP_DissolveFoliageActor_C*>       Foliage;                                           // 0x0428(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          Stop;                                              // 0x0478(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_479[0x7];                                      // 0x0479(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        PlayRateIn;                                        // 0x0480(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PlayRateOut;                                       // 0x0488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              DissolveCaller;                                    // 0x0490(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<class ABP_DissolveFoliageActor_C*>     FoliageToRemove;                                   // 0x04A0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int64                                         LastTick;                                          // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSet<struct FMeshAndIndex>                    MeshAndIndex;                                      // 0x04B8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TSet<class UBP_DissolveActorComponent_C*>     DissolvingActor;                                   // 0x0508(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TSet<class UBP_DissolveActorComponent_C*>     DissolvingActorLast;                               // 0x0558(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TSet<class UBP_DissolveActorComponent_C*>     DissolvingActorToRemove;                           // 0x05A8(0x0050)(Edit, BlueprintVisible, ContainsInstancedReference)

public:
	void ExecuteUbergraph_BP_PaperDissolveManager(int32 EntryPoint);
	void Is_Actor_Dissolveable_Item(class AActor* Actor, bool* CanDissolve, class AActor** OutActor, bool* Dissolving, class UBP_DissolveActorComponent_C** DissolveActor);
	void Is_Actor_Instanced_Foliage(class AActor* Actor, bool* CanDissolve);
	void OnInstancedFoliageDissolve(const TArray<struct FNeedDissolveItemInfo>& ISMs);
	void Return();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PaperDissolveManager_C">();
	}
	static class ABP_PaperDissolveManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PaperDissolveManager_C>();
	}
};
static_assert(alignof(ABP_PaperDissolveManager_C) == 0x000008, "Wrong alignment on ABP_PaperDissolveManager_C");
static_assert(sizeof(ABP_PaperDissolveManager_C) == 0x0005F8, "Wrong size on ABP_PaperDissolveManager_C");
static_assert(offsetof(ABP_PaperDissolveManager_C, UberGraphFrame) == 0x0003A8, "Member 'ABP_PaperDissolveManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_PaperDissolveManager_C, DefaultSceneRoot) == 0x0003B0, "Member 'ABP_PaperDissolveManager_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_PaperDissolveManager_C, SMOpacityLast) == 0x0003B8, "Member 'ABP_PaperDissolveManager_C::SMOpacityLast' has a wrong offset!");
static_assert(offsetof(ABP_PaperDissolveManager_C, OpacityComp) == 0x0003C8, "Member 'ABP_PaperDissolveManager_C::OpacityComp' has a wrong offset!");
static_assert(offsetof(ABP_PaperDissolveManager_C, FoliageLast) == 0x0003D8, "Member 'ABP_PaperDissolveManager_C::FoliageLast' has a wrong offset!");
static_assert(offsetof(ABP_PaperDissolveManager_C, Foliage) == 0x000428, "Member 'ABP_PaperDissolveManager_C::Foliage' has a wrong offset!");
static_assert(offsetof(ABP_PaperDissolveManager_C, Stop) == 0x000478, "Member 'ABP_PaperDissolveManager_C::Stop' has a wrong offset!");
static_assert(offsetof(ABP_PaperDissolveManager_C, PlayRateIn) == 0x000480, "Member 'ABP_PaperDissolveManager_C::PlayRateIn' has a wrong offset!");
static_assert(offsetof(ABP_PaperDissolveManager_C, PlayRateOut) == 0x000488, "Member 'ABP_PaperDissolveManager_C::PlayRateOut' has a wrong offset!");
static_assert(offsetof(ABP_PaperDissolveManager_C, DissolveCaller) == 0x000490, "Member 'ABP_PaperDissolveManager_C::DissolveCaller' has a wrong offset!");
static_assert(offsetof(ABP_PaperDissolveManager_C, FoliageToRemove) == 0x0004A0, "Member 'ABP_PaperDissolveManager_C::FoliageToRemove' has a wrong offset!");
static_assert(offsetof(ABP_PaperDissolveManager_C, LastTick) == 0x0004B0, "Member 'ABP_PaperDissolveManager_C::LastTick' has a wrong offset!");
static_assert(offsetof(ABP_PaperDissolveManager_C, MeshAndIndex) == 0x0004B8, "Member 'ABP_PaperDissolveManager_C::MeshAndIndex' has a wrong offset!");
static_assert(offsetof(ABP_PaperDissolveManager_C, DissolvingActor) == 0x000508, "Member 'ABP_PaperDissolveManager_C::DissolvingActor' has a wrong offset!");
static_assert(offsetof(ABP_PaperDissolveManager_C, DissolvingActorLast) == 0x000558, "Member 'ABP_PaperDissolveManager_C::DissolvingActorLast' has a wrong offset!");
static_assert(offsetof(ABP_PaperDissolveManager_C, DissolvingActorToRemove) == 0x0005A8, "Member 'ABP_PaperDissolveManager_C::DissolvingActorToRemove' has a wrong offset!");

}

