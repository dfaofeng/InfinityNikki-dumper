#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: X6BlueprintCommonLibrary

#include "Basic.hpp"

#include "Enum_InformID_structs.hpp"
#include "ECharacterType_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "E_SafezoneType_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Enum_CenterInfoType_structs.hpp"
#include "Engine_structs.hpp"
#include "MainHUDItem_structs.hpp"


namespace SDK::Params
{

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.X6SpawnNSAttached
// 0x0070 (0x0070 - 0x0000)
struct X6BlueprintCommonLibrary_C_X6SpawnNSAttached final
{
public:
	class UNiagaraSystem*                         NSAsset;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        AttachComp;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   AttachSocket;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         LocationType;                                      // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAutoDestroy;                                      // 0x0049(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAutoActivate;                                     // 0x004A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      FXCom;                                             // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_X6SpawnNSAttached) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_X6SpawnNSAttached");
static_assert(sizeof(X6BlueprintCommonLibrary_C_X6SpawnNSAttached) == 0x000070, "Wrong size on X6BlueprintCommonLibrary_C_X6SpawnNSAttached");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAttached, NSAsset) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAttached::NSAsset' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAttached, AttachComp) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAttached::AttachComp' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAttached, AttachSocket) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAttached::AttachSocket' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAttached, Location) == 0x000018, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAttached::Location' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAttached, Rotation) == 0x000030, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAttached::Rotation' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAttached, LocationType) == 0x000048, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAttached::LocationType' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAttached, bAutoDestroy) == 0x000049, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAttached::bAutoDestroy' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAttached, bAutoActivate) == 0x00004A, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAttached::bAutoActivate' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAttached, __WorldContext) == 0x000050, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAttached::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAttached, FXCom) == 0x000058, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAttached::FXCom' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAttached, CallFunc_GetValidValue_ReturnValue) == 0x000060, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAttached::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAttached, CallFunc_SpawnSystemAttached_ReturnValue) == 0x000068, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAttached::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.X6SpawnNSAtLocation
// 0x0078 (0x0078 - 0x0000)
struct X6BlueprintCommonLibrary_C_X6SpawnNSAtLocation final
{
public:
	class UObject*                                WorldContext;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         NSAsset;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                Scale;                                             // 0x0040(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAutoDestroy;                                      // 0x0058(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAutoActivate;                                     // 0x0059(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      FXCom;                                             // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_X6SpawnNSAtLocation) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_X6SpawnNSAtLocation");
static_assert(sizeof(X6BlueprintCommonLibrary_C_X6SpawnNSAtLocation) == 0x000078, "Wrong size on X6BlueprintCommonLibrary_C_X6SpawnNSAtLocation");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAtLocation, WorldContext) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAtLocation::WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAtLocation, NSAsset) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAtLocation::NSAsset' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAtLocation, Location) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAtLocation::Location' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAtLocation, Rotation) == 0x000028, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAtLocation::Rotation' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAtLocation, Scale) == 0x000040, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAtLocation::Scale' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAtLocation, bAutoDestroy) == 0x000058, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAtLocation::bAutoDestroy' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAtLocation, bAutoActivate) == 0x000059, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAtLocation::bAutoActivate' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAtLocation, __WorldContext) == 0x000060, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAtLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAtLocation, FXCom) == 0x000068, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAtLocation::FXCom' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAtLocation, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000070, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAtLocation::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.X6SpawnNSAlongSpline
// 0x0140 (0x0140 - 0x0000)
struct X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline final
{
public:
	class UNiagaraSystem*                         NiagaraAsset;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       Spline;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        HeightOffset;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UNiagaraComponent*>              NiagaraComps;                                      // 0x0020(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UNiagaraComponent*>              RetNiagaraComps;                                   // 0x0030(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          Temp_bool_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x1];                                       // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue_1;   // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue_2;   // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_1;    // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable;                              // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline");
static_assert(sizeof(X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline) == 0x000140, "Wrong size on X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline, NiagaraAsset) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline::NiagaraAsset' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline, Spline) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline::Spline' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline, HeightOffset) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline::HeightOffset' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline, __WorldContext) == 0x000018, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline, NiagaraComps) == 0x000020, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline::NiagaraComps' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline, RetNiagaraComps) == 0x000030, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline::RetNiagaraComps' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline, Temp_bool_Variable) == 0x000040, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline, CallFunc_IsValid_ReturnValue_1) == 0x000042, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline, Temp_int_Variable) == 0x000044, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline, CallFunc_Add_IntInt_ReturnValue_1) == 0x00004C, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000050, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline, CallFunc_Subtract_IntInt_ReturnValue) == 0x000054, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x000058, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline, CallFunc_GetLocationAtSplinePoint_ReturnValue_1) == 0x000078, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline::CallFunc_GetLocationAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000090, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline, CallFunc_MakeVector_ReturnValue) == 0x0000A8, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline, CallFunc_GetLocationAtSplinePoint_ReturnValue_2) == 0x0000C0, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline::CallFunc_GetLocationAtSplinePoint_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline, CallFunc_GetNumberOfSplinePoints_ReturnValue_1) == 0x0000D8, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline::CallFunc_GetNumberOfSplinePoints_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline, CallFunc_Add_VectorVector_ReturnValue) == 0x0000E0, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000F8, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000100, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000108, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline, CallFunc_Array_Add_ReturnValue) == 0x00010C, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline, Temp_struct_Variable) == 0x000110, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline, K2Node_Select_Default) == 0x000128, "Member 'X6BlueprintCommonLibrary_C_X6SpawnNSAlongSpline::K2Node_Select_Default' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.X6PushBackCharacter
// 0x00D0 (0x00D0 - 0x0000)
struct X6BlueprintCommonLibrary_C_X6PushBackCharacter final
{
public:
	class ACharacter*                             TargetCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        ForceXY;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ForceZ;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_X6PushBackCharacter) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_X6PushBackCharacter");
static_assert(sizeof(X6BlueprintCommonLibrary_C_X6PushBackCharacter) == 0x0000D0, "Wrong size on X6BlueprintCommonLibrary_C_X6PushBackCharacter");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6PushBackCharacter, TargetCharacter) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_X6PushBackCharacter::TargetCharacter' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6PushBackCharacter, Actor) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_X6PushBackCharacter::Actor' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6PushBackCharacter, ForceXY) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_X6PushBackCharacter::ForceXY' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6PushBackCharacter, ForceZ) == 0x000018, "Member 'X6BlueprintCommonLibrary_C_X6PushBackCharacter::ForceZ' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6PushBackCharacter, __WorldContext) == 0x000020, "Member 'X6BlueprintCommonLibrary_C_X6PushBackCharacter::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6PushBackCharacter, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'X6BlueprintCommonLibrary_C_X6PushBackCharacter::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6PushBackCharacter, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000040, "Member 'X6BlueprintCommonLibrary_C_X6PushBackCharacter::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6PushBackCharacter, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000058, "Member 'X6BlueprintCommonLibrary_C_X6PushBackCharacter::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6PushBackCharacter, CallFunc_Normal_ReturnValue) == 0x000070, "Member 'X6BlueprintCommonLibrary_C_X6PushBackCharacter::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6PushBackCharacter, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000088, "Member 'X6BlueprintCommonLibrary_C_X6PushBackCharacter::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6PushBackCharacter, CallFunc_BreakVector_X) == 0x0000A0, "Member 'X6BlueprintCommonLibrary_C_X6PushBackCharacter::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6PushBackCharacter, CallFunc_BreakVector_Y) == 0x0000A8, "Member 'X6BlueprintCommonLibrary_C_X6PushBackCharacter::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6PushBackCharacter, CallFunc_BreakVector_Z) == 0x0000B0, "Member 'X6BlueprintCommonLibrary_C_X6PushBackCharacter::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6PushBackCharacter, CallFunc_MakeVector_ReturnValue) == 0x0000B8, "Member 'X6BlueprintCommonLibrary_C_X6PushBackCharacter::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.X6HideActors
// 0x0040 (0x0040 - 0x0000)
struct X6BlueprintCommonLibrary_C_X6HideActors final
{
public:
	TArray<class AActor*>                         Actor;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Hide;                                              // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_X6HideActors) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_X6HideActors");
static_assert(sizeof(X6BlueprintCommonLibrary_C_X6HideActors) == 0x000040, "Wrong size on X6BlueprintCommonLibrary_C_X6HideActors");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6HideActors, Actor) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_X6HideActors::Actor' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6HideActors, Hide) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_X6HideActors::Hide' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6HideActors, __WorldContext) == 0x000018, "Member 'X6BlueprintCommonLibrary_C_X6HideActors::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6HideActors, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'X6BlueprintCommonLibrary_C_X6HideActors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6HideActors, Temp_int_Array_Index_Variable) == 0x000024, "Member 'X6BlueprintCommonLibrary_C_X6HideActors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6HideActors, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'X6BlueprintCommonLibrary_C_X6HideActors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6HideActors, CallFunc_Array_Get_Item) == 0x000030, "Member 'X6BlueprintCommonLibrary_C_X6HideActors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6HideActors, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'X6BlueprintCommonLibrary_C_X6HideActors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6HideActors, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'X6BlueprintCommonLibrary_C_X6HideActors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.X6HideActor
// 0x0030 (0x0030 - 0x0000)
struct X6BlueprintCommonLibrary_C_X6HideActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Hide;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_InteractiveActorComponent_C*        CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_X6HideActor) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_X6HideActor");
static_assert(sizeof(X6BlueprintCommonLibrary_C_X6HideActor) == 0x000030, "Wrong size on X6BlueprintCommonLibrary_C_X6HideActor");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6HideActor, Actor) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_X6HideActor::Actor' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6HideActor, Hide) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_X6HideActor::Hide' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6HideActor, __WorldContext) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_X6HideActor::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6HideActor, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'X6BlueprintCommonLibrary_C_X6HideActor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6HideActor, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'X6BlueprintCommonLibrary_C_X6HideActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6HideActor, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'X6BlueprintCommonLibrary_C_X6HideActor::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_X6HideActor, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'X6BlueprintCommonLibrary_C_X6HideActor::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.WidgetsCustomNavigation
// 0x0028 (0x0028 - 0x0000)
struct X6BlueprintCommonLibrary_C_WidgetsCustomNavigation final
{
public:
	TArray<class UWidget*>                        Widgets;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	EUINavigation                                 NavigationDir;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Wrap;                                              // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                FocusRecipient;                                    // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_WidgetsCustomNavigation) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_WidgetsCustomNavigation");
static_assert(sizeof(X6BlueprintCommonLibrary_C_WidgetsCustomNavigation) == 0x000028, "Wrong size on X6BlueprintCommonLibrary_C_WidgetsCustomNavigation");
static_assert(offsetof(X6BlueprintCommonLibrary_C_WidgetsCustomNavigation, Widgets) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_WidgetsCustomNavigation::Widgets' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_WidgetsCustomNavigation, NavigationDir) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_WidgetsCustomNavigation::NavigationDir' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_WidgetsCustomNavigation, Wrap) == 0x000011, "Member 'X6BlueprintCommonLibrary_C_WidgetsCustomNavigation::Wrap' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_WidgetsCustomNavigation, __WorldContext) == 0x000018, "Member 'X6BlueprintCommonLibrary_C_WidgetsCustomNavigation::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_WidgetsCustomNavigation, FocusRecipient) == 0x000020, "Member 'X6BlueprintCommonLibrary_C_WidgetsCustomNavigation::FocusRecipient' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.UpdateAndClampInteger
// 0x0028 (0x0028 - 0x0000)
struct X6BlueprintCommonLibrary_C_UpdateAndClampInteger final
{
public:
	int32                                         Current;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Add;                                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Min;                                               // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Max;                                               // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_UpdateAndClampInteger) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_UpdateAndClampInteger");
static_assert(sizeof(X6BlueprintCommonLibrary_C_UpdateAndClampInteger) == 0x000028, "Wrong size on X6BlueprintCommonLibrary_C_UpdateAndClampInteger");
static_assert(offsetof(X6BlueprintCommonLibrary_C_UpdateAndClampInteger, Current) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_UpdateAndClampInteger::Current' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_UpdateAndClampInteger, Add) == 0x000004, "Member 'X6BlueprintCommonLibrary_C_UpdateAndClampInteger::Add' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_UpdateAndClampInteger, Min) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_UpdateAndClampInteger::Min' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_UpdateAndClampInteger, Max) == 0x00000C, "Member 'X6BlueprintCommonLibrary_C_UpdateAndClampInteger::Max' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_UpdateAndClampInteger, __WorldContext) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_UpdateAndClampInteger::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_UpdateAndClampInteger, ReturnValue) == 0x000018, "Member 'X6BlueprintCommonLibrary_C_UpdateAndClampInteger::ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_UpdateAndClampInteger, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'X6BlueprintCommonLibrary_C_UpdateAndClampInteger::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_UpdateAndClampInteger, CallFunc_Clamp_ReturnValue) == 0x000020, "Member 'X6BlueprintCommonLibrary_C_UpdateAndClampInteger::CallFunc_Clamp_ReturnValue' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.SpawnActorByActorSoftClassReference
// 0x00B0 (0x00B0 - 0x0000)
struct X6BlueprintCommonLibrary_C_SpawnActorByActorSoftClassReference final
{
public:
	TSoftClassPtr<class UClass>                   ActorClassRef;                                     // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0040(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ActorClass;                                        // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UObject>                    CallFunc_Conv_SoftClassReferenceToClass_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsActor;                   // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsActor_1;                 // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_X6SpawnActor_ReturnValue;                 // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_SpawnActorByActorSoftClassReference) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_SpawnActorByActorSoftClassReference");
static_assert(sizeof(X6BlueprintCommonLibrary_C_SpawnActorByActorSoftClassReference) == 0x0000B0, "Wrong size on X6BlueprintCommonLibrary_C_SpawnActorByActorSoftClassReference");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SpawnActorByActorSoftClassReference, ActorClassRef) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_SpawnActorByActorSoftClassReference::ActorClassRef' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SpawnActorByActorSoftClassReference, Location) == 0x000028, "Member 'X6BlueprintCommonLibrary_C_SpawnActorByActorSoftClassReference::Location' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SpawnActorByActorSoftClassReference, Rotation) == 0x000040, "Member 'X6BlueprintCommonLibrary_C_SpawnActorByActorSoftClassReference::Rotation' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SpawnActorByActorSoftClassReference, __WorldContext) == 0x000058, "Member 'X6BlueprintCommonLibrary_C_SpawnActorByActorSoftClassReference::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SpawnActorByActorSoftClassReference, ReturnValue) == 0x000060, "Member 'X6BlueprintCommonLibrary_C_SpawnActorByActorSoftClassReference::ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SpawnActorByActorSoftClassReference, ActorClass) == 0x000068, "Member 'X6BlueprintCommonLibrary_C_SpawnActorByActorSoftClassReference::ActorClass' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SpawnActorByActorSoftClassReference, CallFunc_Conv_SoftClassReferenceToClass_ReturnValue) == 0x000070, "Member 'X6BlueprintCommonLibrary_C_SpawnActorByActorSoftClassReference::CallFunc_Conv_SoftClassReferenceToClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SpawnActorByActorSoftClassReference, K2Node_ClassDynamicCast_AsActor) == 0x000078, "Member 'X6BlueprintCommonLibrary_C_SpawnActorByActorSoftClassReference::K2Node_ClassDynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SpawnActorByActorSoftClassReference, K2Node_ClassDynamicCast_bSuccess) == 0x000080, "Member 'X6BlueprintCommonLibrary_C_SpawnActorByActorSoftClassReference::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SpawnActorByActorSoftClassReference, K2Node_ClassDynamicCast_AsActor_1) == 0x000088, "Member 'X6BlueprintCommonLibrary_C_SpawnActorByActorSoftClassReference::K2Node_ClassDynamicCast_AsActor_1' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SpawnActorByActorSoftClassReference, K2Node_ClassDynamicCast_bSuccess_1) == 0x000090, "Member 'X6BlueprintCommonLibrary_C_SpawnActorByActorSoftClassReference::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SpawnActorByActorSoftClassReference, CallFunc_X6SpawnActor_ReturnValue) == 0x000098, "Member 'X6BlueprintCommonLibrary_C_SpawnActorByActorSoftClassReference::CallFunc_X6SpawnActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SpawnActorByActorSoftClassReference, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x0000A0, "Member 'X6BlueprintCommonLibrary_C_SpawnActorByActorSoftClassReference::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SpawnActorByActorSoftClassReference, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x0000A8, "Member 'X6BlueprintCommonLibrary_C_SpawnActorByActorSoftClassReference::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.SnapToGround
// 0x03A0 (0x03A0 - 0x0000)
struct X6BlueprintCommonLibrary_C_SnapToGround final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        LineTraceStartZ;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LineTraceEndZ;                                     // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0020(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x00A0(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x019A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19B[0x1];                                      // 0x019B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0218(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x02A0(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_SnapToGround) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_SnapToGround");
static_assert(sizeof(X6BlueprintCommonLibrary_C_SnapToGround) == 0x0003A0, "Wrong size on X6BlueprintCommonLibrary_C_SnapToGround");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SnapToGround, Actor) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_SnapToGround::Actor' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SnapToGround, LineTraceStartZ) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_SnapToGround::LineTraceStartZ' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SnapToGround, LineTraceEndZ) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_SnapToGround::LineTraceEndZ' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SnapToGround, __WorldContext) == 0x000018, "Member 'X6BlueprintCommonLibrary_C_SnapToGround::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SnapToGround, Temp_object_Variable) == 0x000020, "Member 'X6BlueprintCommonLibrary_C_SnapToGround::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SnapToGround, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'X6BlueprintCommonLibrary_C_SnapToGround::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SnapToGround, CallFunc_BreakVector_X) == 0x000048, "Member 'X6BlueprintCommonLibrary_C_SnapToGround::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SnapToGround, CallFunc_BreakVector_Y) == 0x000050, "Member 'X6BlueprintCommonLibrary_C_SnapToGround::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SnapToGround, CallFunc_BreakVector_Z) == 0x000058, "Member 'X6BlueprintCommonLibrary_C_SnapToGround::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SnapToGround, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000060, "Member 'X6BlueprintCommonLibrary_C_SnapToGround::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SnapToGround, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000068, "Member 'X6BlueprintCommonLibrary_C_SnapToGround::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SnapToGround, CallFunc_MakeVector_ReturnValue) == 0x000070, "Member 'X6BlueprintCommonLibrary_C_SnapToGround::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SnapToGround, CallFunc_MakeVector_ReturnValue_1) == 0x000088, "Member 'X6BlueprintCommonLibrary_C_SnapToGround::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SnapToGround, CallFunc_LineTraceSingle_OutHit) == 0x0000A0, "Member 'X6BlueprintCommonLibrary_C_SnapToGround::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SnapToGround, CallFunc_LineTraceSingle_ReturnValue) == 0x000198, "Member 'X6BlueprintCommonLibrary_C_SnapToGround::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SnapToGround, CallFunc_BreakHitResult_bBlockingHit) == 0x000199, "Member 'X6BlueprintCommonLibrary_C_SnapToGround::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SnapToGround, CallFunc_BreakHitResult_bInitialOverlap) == 0x00019A, "Member 'X6BlueprintCommonLibrary_C_SnapToGround::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SnapToGround, CallFunc_BreakHitResult_Time) == 0x00019C, "Member 'X6BlueprintCommonLibrary_C_SnapToGround::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SnapToGround, CallFunc_BreakHitResult_Distance) == 0x0001A0, "Member 'X6BlueprintCommonLibrary_C_SnapToGround::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SnapToGround, CallFunc_BreakHitResult_Location) == 0x0001A8, "Member 'X6BlueprintCommonLibrary_C_SnapToGround::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SnapToGround, CallFunc_BreakHitResult_ImpactPoint) == 0x0001C0, "Member 'X6BlueprintCommonLibrary_C_SnapToGround::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SnapToGround, CallFunc_BreakHitResult_Normal) == 0x0001D8, "Member 'X6BlueprintCommonLibrary_C_SnapToGround::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SnapToGround, CallFunc_BreakHitResult_ImpactNormal) == 0x0001F0, "Member 'X6BlueprintCommonLibrary_C_SnapToGround::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SnapToGround, CallFunc_BreakHitResult_PhysMat) == 0x000208, "Member 'X6BlueprintCommonLibrary_C_SnapToGround::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SnapToGround, CallFunc_BreakHitResult_HitActor) == 0x000210, "Member 'X6BlueprintCommonLibrary_C_SnapToGround::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SnapToGround, CallFunc_BreakHitResult_HitComponent) == 0x000218, "Member 'X6BlueprintCommonLibrary_C_SnapToGround::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SnapToGround, CallFunc_BreakHitResult_HitBoneName) == 0x000220, "Member 'X6BlueprintCommonLibrary_C_SnapToGround::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SnapToGround, CallFunc_BreakHitResult_BoneName) == 0x000228, "Member 'X6BlueprintCommonLibrary_C_SnapToGround::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SnapToGround, CallFunc_BreakHitResult_HitItem) == 0x000230, "Member 'X6BlueprintCommonLibrary_C_SnapToGround::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SnapToGround, CallFunc_BreakHitResult_ElementIndex) == 0x000234, "Member 'X6BlueprintCommonLibrary_C_SnapToGround::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SnapToGround, CallFunc_BreakHitResult_FaceIndex) == 0x000238, "Member 'X6BlueprintCommonLibrary_C_SnapToGround::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SnapToGround, CallFunc_BreakHitResult_TraceStart) == 0x000240, "Member 'X6BlueprintCommonLibrary_C_SnapToGround::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SnapToGround, CallFunc_BreakHitResult_TraceEnd) == 0x000258, "Member 'X6BlueprintCommonLibrary_C_SnapToGround::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SnapToGround, CallFunc_BreakVector_X_1) == 0x000270, "Member 'X6BlueprintCommonLibrary_C_SnapToGround::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SnapToGround, CallFunc_BreakVector_Y_1) == 0x000278, "Member 'X6BlueprintCommonLibrary_C_SnapToGround::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SnapToGround, CallFunc_BreakVector_Z_1) == 0x000280, "Member 'X6BlueprintCommonLibrary_C_SnapToGround::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SnapToGround, CallFunc_MakeVector_ReturnValue_2) == 0x000288, "Member 'X6BlueprintCommonLibrary_C_SnapToGround::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SnapToGround, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x0002A0, "Member 'X6BlueprintCommonLibrary_C_SnapToGround::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_SnapToGround, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000398, "Member 'X6BlueprintCommonLibrary_C_SnapToGround::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.RequestSpawnInteractiveActor
// 0x0090 (0x0090 - 0x0000)
struct X6BlueprintCommonLibrary_C_RequestSpawnInteractiveActor final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         ConfigID;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0010(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isOnGround;                                        // 0x0070(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OutputId;                                          // 0x0074(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Parent;                                            // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0080(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_RequestSpawnInteractiveActor) == 0x000010, "Wrong alignment on X6BlueprintCommonLibrary_C_RequestSpawnInteractiveActor");
static_assert(sizeof(X6BlueprintCommonLibrary_C_RequestSpawnInteractiveActor) == 0x000090, "Wrong size on X6BlueprintCommonLibrary_C_RequestSpawnInteractiveActor");
static_assert(offsetof(X6BlueprintCommonLibrary_C_RequestSpawnInteractiveActor, Context) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_RequestSpawnInteractiveActor::Context' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_RequestSpawnInteractiveActor, ConfigID) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_RequestSpawnInteractiveActor::ConfigID' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_RequestSpawnInteractiveActor, Transform) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_RequestSpawnInteractiveActor::Transform' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_RequestSpawnInteractiveActor, isOnGround) == 0x000070, "Member 'X6BlueprintCommonLibrary_C_RequestSpawnInteractiveActor::isOnGround' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_RequestSpawnInteractiveActor, OutputId) == 0x000074, "Member 'X6BlueprintCommonLibrary_C_RequestSpawnInteractiveActor::OutputId' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_RequestSpawnInteractiveActor, Parent) == 0x000078, "Member 'X6BlueprintCommonLibrary_C_RequestSpawnInteractiveActor::Parent' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_RequestSpawnInteractiveActor, __WorldContext) == 0x000080, "Member 'X6BlueprintCommonLibrary_C_RequestSpawnInteractiveActor::__WorldContext' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.RequestDestroyInteractiveActor
// 0x0018 (0x0018 - 0x0000)
struct X6BlueprintCommonLibrary_C_RequestDestroyInteractiveActor final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_RequestDestroyInteractiveActor) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_RequestDestroyInteractiveActor");
static_assert(sizeof(X6BlueprintCommonLibrary_C_RequestDestroyInteractiveActor) == 0x000018, "Wrong size on X6BlueprintCommonLibrary_C_RequestDestroyInteractiveActor");
static_assert(offsetof(X6BlueprintCommonLibrary_C_RequestDestroyInteractiveActor, Context) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_RequestDestroyInteractiveActor::Context' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_RequestDestroyInteractiveActor, Actor) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_RequestDestroyInteractiveActor::Actor' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_RequestDestroyInteractiveActor, __WorldContext) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_RequestDestroyInteractiveActor::__WorldContext' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.GetSystemStateNotifyMgr
// 0x0030 (0x0030 - 0x0000)
struct X6BlueprintCommonLibrary_C_GetSystemStateNotifyMgr final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SystemStateNotifyManager_C*         SystemStateNotifyMgr;                              // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNikkiGameInstance_BP_C*                K2Node_DynamicCast_AsNikki_Game_Instance_BP;       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SystemStateNotifyManager_C*         CallFunc_GetSystemStateNotifyManager_SystemStateNotifyMgr; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_GetSystemStateNotifyMgr) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_GetSystemStateNotifyMgr");
static_assert(sizeof(X6BlueprintCommonLibrary_C_GetSystemStateNotifyMgr) == 0x000030, "Wrong size on X6BlueprintCommonLibrary_C_GetSystemStateNotifyMgr");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetSystemStateNotifyMgr, __WorldContext) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_GetSystemStateNotifyMgr::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetSystemStateNotifyMgr, SystemStateNotifyMgr) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_GetSystemStateNotifyMgr::SystemStateNotifyMgr' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetSystemStateNotifyMgr, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_GetSystemStateNotifyMgr::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetSystemStateNotifyMgr, K2Node_DynamicCast_AsNikki_Game_Instance_BP) == 0x000018, "Member 'X6BlueprintCommonLibrary_C_GetSystemStateNotifyMgr::K2Node_DynamicCast_AsNikki_Game_Instance_BP' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetSystemStateNotifyMgr, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'X6BlueprintCommonLibrary_C_GetSystemStateNotifyMgr::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetSystemStateNotifyMgr, CallFunc_GetSystemStateNotifyManager_SystemStateNotifyMgr) == 0x000028, "Member 'X6BlueprintCommonLibrary_C_GetSystemStateNotifyMgr::CallFunc_GetSystemStateNotifyManager_SystemStateNotifyMgr' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.GetPetCharacter
// 0x0010 (0x0010 - 0x0000)
struct X6BlueprintCommonLibrary_C_GetPetCharacter final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             Character;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_GetPetCharacter) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_GetPetCharacter");
static_assert(sizeof(X6BlueprintCommonLibrary_C_GetPetCharacter) == 0x000010, "Wrong size on X6BlueprintCommonLibrary_C_GetPetCharacter");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetPetCharacter, __WorldContext) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_GetPetCharacter::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetPetCharacter, Character) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_GetPetCharacter::Character' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.GetNearestActorOfClass
// 0x0158 (0x0158 - 0x0000)
struct X6BlueprintCommonLibrary_C_GetNearestActorOfClass final
{
public:
	class UClass*                                 Class_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Radius;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 NewParam;                                          // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 LoopActor;                                         // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 TempActor;                                         // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	double                                        ShortestPath;                                      // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Targets;                                           // 0x0038(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class ACharacter*                             CallFunc_GetLocalPlayerPawn_LocalPlayerPawn;       // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetLocalPlayerPawn_LocalPlayerPawn_1;     // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetLocalPlayerPawn_LocalPlayerPawn_2;     // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetLocalPlayerPawn_LocalPlayerPawn_3;     // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x00C0(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue_1;            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0118(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x0128(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast; // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_GetNearestActorOfClass) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_GetNearestActorOfClass");
static_assert(sizeof(X6BlueprintCommonLibrary_C_GetNearestActorOfClass) == 0x000158, "Wrong size on X6BlueprintCommonLibrary_C_GetNearestActorOfClass");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetNearestActorOfClass, Class_0) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_GetNearestActorOfClass::Class_0' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetNearestActorOfClass, Radius) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_GetNearestActorOfClass::Radius' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetNearestActorOfClass, __WorldContext) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_GetNearestActorOfClass::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetNearestActorOfClass, NewParam) == 0x000018, "Member 'X6BlueprintCommonLibrary_C_GetNearestActorOfClass::NewParam' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetNearestActorOfClass, LoopActor) == 0x000020, "Member 'X6BlueprintCommonLibrary_C_GetNearestActorOfClass::LoopActor' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetNearestActorOfClass, TempActor) == 0x000028, "Member 'X6BlueprintCommonLibrary_C_GetNearestActorOfClass::TempActor' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetNearestActorOfClass, ShortestPath) == 0x000030, "Member 'X6BlueprintCommonLibrary_C_GetNearestActorOfClass::ShortestPath' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetNearestActorOfClass, Targets) == 0x000038, "Member 'X6BlueprintCommonLibrary_C_GetNearestActorOfClass::Targets' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetNearestActorOfClass, CallFunc_GetLocalPlayerPawn_LocalPlayerPawn) == 0x000048, "Member 'X6BlueprintCommonLibrary_C_GetNearestActorOfClass::CallFunc_GetLocalPlayerPawn_LocalPlayerPawn' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetNearestActorOfClass, CallFunc_GetLocalPlayerPawn_LocalPlayerPawn_1) == 0x000050, "Member 'X6BlueprintCommonLibrary_C_GetNearestActorOfClass::CallFunc_GetLocalPlayerPawn_LocalPlayerPawn_1' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetNearestActorOfClass, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000058, "Member 'X6BlueprintCommonLibrary_C_GetNearestActorOfClass::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetNearestActorOfClass, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000070, "Member 'X6BlueprintCommonLibrary_C_GetNearestActorOfClass::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetNearestActorOfClass, CallFunc_GetLocalPlayerPawn_LocalPlayerPawn_2) == 0x000088, "Member 'X6BlueprintCommonLibrary_C_GetNearestActorOfClass::CallFunc_GetLocalPlayerPawn_LocalPlayerPawn_2' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetNearestActorOfClass, CallFunc_GetLocalPlayerPawn_LocalPlayerPawn_3) == 0x000090, "Member 'X6BlueprintCommonLibrary_C_GetNearestActorOfClass::CallFunc_GetLocalPlayerPawn_LocalPlayerPawn_3' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetNearestActorOfClass, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000098, "Member 'X6BlueprintCommonLibrary_C_GetNearestActorOfClass::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetNearestActorOfClass, CallFunc_IsValid_ReturnValue) == 0x0000B0, "Member 'X6BlueprintCommonLibrary_C_GetNearestActorOfClass::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetNearestActorOfClass, Temp_int_Array_Index_Variable) == 0x0000B4, "Member 'X6BlueprintCommonLibrary_C_GetNearestActorOfClass::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetNearestActorOfClass, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000B8, "Member 'X6BlueprintCommonLibrary_C_GetNearestActorOfClass::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetNearestActorOfClass, Temp_object_Variable) == 0x0000C0, "Member 'X6BlueprintCommonLibrary_C_GetNearestActorOfClass::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetNearestActorOfClass, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x0000D0, "Member 'X6BlueprintCommonLibrary_C_GetNearestActorOfClass::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetNearestActorOfClass, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x0000E8, "Member 'X6BlueprintCommonLibrary_C_GetNearestActorOfClass::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetNearestActorOfClass, CallFunc_Vector_Distance_ReturnValue) == 0x000100, "Member 'X6BlueprintCommonLibrary_C_GetNearestActorOfClass::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetNearestActorOfClass, CallFunc_Vector_Distance_ReturnValue_1) == 0x000108, "Member 'X6BlueprintCommonLibrary_C_GetNearestActorOfClass::CallFunc_Vector_Distance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetNearestActorOfClass, Temp_int_Loop_Counter_Variable) == 0x000110, "Member 'X6BlueprintCommonLibrary_C_GetNearestActorOfClass::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetNearestActorOfClass, CallFunc_Add_IntInt_ReturnValue) == 0x000114, "Member 'X6BlueprintCommonLibrary_C_GetNearestActorOfClass::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetNearestActorOfClass, K2Node_MakeArray_Array) == 0x000118, "Member 'X6BlueprintCommonLibrary_C_GetNearestActorOfClass::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetNearestActorOfClass, CallFunc_SphereOverlapActors_OutActors) == 0x000128, "Member 'X6BlueprintCommonLibrary_C_GetNearestActorOfClass::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetNearestActorOfClass, CallFunc_SphereOverlapActors_ReturnValue) == 0x000138, "Member 'X6BlueprintCommonLibrary_C_GetNearestActorOfClass::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetNearestActorOfClass, CallFunc_Array_Get_Item) == 0x000140, "Member 'X6BlueprintCommonLibrary_C_GetNearestActorOfClass::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetNearestActorOfClass, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000148, "Member 'X6BlueprintCommonLibrary_C_GetNearestActorOfClass::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetNearestActorOfClass, CallFunc_Array_Length_ReturnValue) == 0x00014C, "Member 'X6BlueprintCommonLibrary_C_GetNearestActorOfClass::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetNearestActorOfClass, CallFunc_Less_IntInt_ReturnValue) == 0x000150, "Member 'X6BlueprintCommonLibrary_C_GetNearestActorOfClass::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetNearestActorOfClass, CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast) == 0x000154, "Member 'X6BlueprintCommonLibrary_C_GetNearestActorOfClass::CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.GetDistanceToActor
// 0x0030 (0x0030 - 0x0000)
struct X6BlueprintCommonLibrary_C_GetDistanceToActor final
{
public:
	class AActor*                                 Actor1;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor2;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Distance;                                          // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_Distance_ImplicitCast;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_GetDistanceToActor) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_GetDistanceToActor");
static_assert(sizeof(X6BlueprintCommonLibrary_C_GetDistanceToActor) == 0x000030, "Wrong size on X6BlueprintCommonLibrary_C_GetDistanceToActor");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetDistanceToActor, Actor1) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_GetDistanceToActor::Actor1' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetDistanceToActor, Actor2) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_GetDistanceToActor::Actor2' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetDistanceToActor, __WorldContext) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_GetDistanceToActor::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetDistanceToActor, Distance) == 0x000018, "Member 'X6BlueprintCommonLibrary_C_GetDistanceToActor::Distance' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetDistanceToActor, CallFunc_GetDistanceTo_ReturnValue) == 0x000020, "Member 'X6BlueprintCommonLibrary_C_GetDistanceToActor::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetDistanceToActor, K2Node_FunctionResult_Distance_ImplicitCast) == 0x000028, "Member 'X6BlueprintCommonLibrary_C_GetDistanceToActor::K2Node_FunctionResult_Distance_ImplicitCast' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.GetDistanceFromPointToPlane
// 0x0090 (0x0090 - 0x0000)
struct X6BlueprintCommonLibrary_C_GetDistanceFromPointToPlane final
{
public:
	struct FVector                                Point;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PlaneBase;                                         // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PlaneNormal;                                       // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Distance;                                          // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ProjectPointOnToPlane_ReturnValue;        // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_GetDistanceFromPointToPlane) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_GetDistanceFromPointToPlane");
static_assert(sizeof(X6BlueprintCommonLibrary_C_GetDistanceFromPointToPlane) == 0x000090, "Wrong size on X6BlueprintCommonLibrary_C_GetDistanceFromPointToPlane");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetDistanceFromPointToPlane, Point) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_GetDistanceFromPointToPlane::Point' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetDistanceFromPointToPlane, PlaneBase) == 0x000018, "Member 'X6BlueprintCommonLibrary_C_GetDistanceFromPointToPlane::PlaneBase' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetDistanceFromPointToPlane, PlaneNormal) == 0x000030, "Member 'X6BlueprintCommonLibrary_C_GetDistanceFromPointToPlane::PlaneNormal' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetDistanceFromPointToPlane, __WorldContext) == 0x000048, "Member 'X6BlueprintCommonLibrary_C_GetDistanceFromPointToPlane::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetDistanceFromPointToPlane, Distance) == 0x000050, "Member 'X6BlueprintCommonLibrary_C_GetDistanceFromPointToPlane::Distance' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetDistanceFromPointToPlane, CallFunc_ProjectPointOnToPlane_ReturnValue) == 0x000058, "Member 'X6BlueprintCommonLibrary_C_GetDistanceFromPointToPlane::CallFunc_ProjectPointOnToPlane_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetDistanceFromPointToPlane, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000070, "Member 'X6BlueprintCommonLibrary_C_GetDistanceFromPointToPlane::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetDistanceFromPointToPlane, CallFunc_VSize_ReturnValue) == 0x000088, "Member 'X6BlueprintCommonLibrary_C_GetDistanceFromPointToPlane::CallFunc_VSize_ReturnValue' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.GetAssetsInFolderByClassType
// 0x0360 (0x0360 - 0x0000)
struct X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType final
{
public:
	class FString                                 FolderName;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bRecursive;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 assetClassType;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UObject*>                        Assets;                                            // 0x0028(0x0010)(Parm, OutParm)
	TArray<class UObject*>                        assetsArray;                                       // 0x0038(0x0010)(Edit, BlueprintVisible)
	TSet<struct FTopLevelAssetPath>               Temp_struct_Variable;                              // 0x0048(0x0050)(ConstParm)
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ConstParm, ReferenceParm)
	TArray<class FName>                           K2Node_MakeArray_Array_1;                          // 0x00C8(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FTopLevelAssetPath>             Temp_struct_Variable_1;                            // 0x00D8(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FSoftObjectPath>                Temp_struct_Variable_2;                            // 0x00E8(0x0010)(ConstParm, ReferenceParm)
	TArray<class FName>                           Temp_name_Variable;                                // 0x00F8(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<class FName>                             Temp_name_Variable_1;                              // 0x0118(0x0050)(ConstParm)
	struct FARFilter                              CallFunc_MakeARFilter_ReturnValue;                 // 0x0168(0x0150)()
	TScriptInterface<class IAssetRegistry>        CallFunc_GetAssetRegistry_ReturnValue;             // 0x02B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TArray<struct FAssetData>                     CallFunc_GetAssets_OutAssetData;                   // 0x02C8(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetAssets_ReturnValue;                    // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D9[0x3];                                      // 0x02D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAssetData                             CallFunc_Array_Get_Item;                           // 0x02E0(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_349[0x7];                                      // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetAsset_ReturnValue;                     // 0x0350(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType");
static_assert(sizeof(X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType) == 0x000360, "Wrong size on X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType, FolderName) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType::FolderName' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType, bRecursive) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType::bRecursive' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType, assetClassType) == 0x000018, "Member 'X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType::assetClassType' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType, __WorldContext) == 0x000020, "Member 'X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType, Assets) == 0x000028, "Member 'X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType::Assets' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType, assetsArray) == 0x000038, "Member 'X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType::assetsArray' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType, Temp_struct_Variable) == 0x000048, "Member 'X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType, CallFunc_GetClassDisplayName_ReturnValue) == 0x000098, "Member 'X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType, CallFunc_Conv_StringToName_ReturnValue) == 0x0000A8, "Member 'X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType, CallFunc_Conv_StringToName_ReturnValue_1) == 0x0000B0, "Member 'X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType, K2Node_MakeArray_Array) == 0x0000B8, "Member 'X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType, K2Node_MakeArray_Array_1) == 0x0000C8, "Member 'X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType, Temp_struct_Variable_1) == 0x0000D8, "Member 'X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType, Temp_struct_Variable_2) == 0x0000E8, "Member 'X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType, Temp_name_Variable) == 0x0000F8, "Member 'X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType, Temp_int_Array_Index_Variable) == 0x000108, "Member 'X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType, Temp_int_Loop_Counter_Variable) == 0x00010C, "Member 'X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType, CallFunc_Add_IntInt_ReturnValue) == 0x000110, "Member 'X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType, Temp_name_Variable_1) == 0x000118, "Member 'X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType, CallFunc_MakeARFilter_ReturnValue) == 0x000168, "Member 'X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType::CallFunc_MakeARFilter_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType, CallFunc_GetAssetRegistry_ReturnValue) == 0x0002B8, "Member 'X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType::CallFunc_GetAssetRegistry_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType, CallFunc_GetAssets_OutAssetData) == 0x0002C8, "Member 'X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType::CallFunc_GetAssets_OutAssetData' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType, CallFunc_GetAssets_ReturnValue) == 0x0002D8, "Member 'X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType::CallFunc_GetAssets_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType, CallFunc_Array_Length_ReturnValue) == 0x0002DC, "Member 'X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType, CallFunc_Array_Get_Item) == 0x0002E0, "Member 'X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType, CallFunc_Less_IntInt_ReturnValue) == 0x000348, "Member 'X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType, CallFunc_GetAsset_ReturnValue) == 0x000350, "Member 'X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType::CallFunc_GetAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType, CallFunc_Array_Add_ReturnValue) == 0x000358, "Member 'X6BlueprintCommonLibrary_C_GetAssetsInFolderByClassType::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.GetAllNSAssetInFolder
// 0x0080 (0x0080 - 0x0000)
struct X6BlueprintCommonLibrary_C_GetAllNSAssetInFolder final
{
public:
	class FString                                 FolderName;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bRecursive;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UNiagaraSystem*>                 Assets;                                            // 0x0020(0x0010)(Parm, OutParm)
	TArray<class UNiagaraSystem*>                 assetsArray;                                       // 0x0030(0x0010)(Edit, BlueprintVisible)
	TArray<class UObject*>                        CallFunc_GetAssetsInFolderByClassType_assets;      // 0x0040(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_DynamicCast_AsNiagara_System;               // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_GetAllNSAssetInFolder) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_GetAllNSAssetInFolder");
static_assert(sizeof(X6BlueprintCommonLibrary_C_GetAllNSAssetInFolder) == 0x000080, "Wrong size on X6BlueprintCommonLibrary_C_GetAllNSAssetInFolder");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetAllNSAssetInFolder, FolderName) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_GetAllNSAssetInFolder::FolderName' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetAllNSAssetInFolder, bRecursive) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_GetAllNSAssetInFolder::bRecursive' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetAllNSAssetInFolder, __WorldContext) == 0x000018, "Member 'X6BlueprintCommonLibrary_C_GetAllNSAssetInFolder::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetAllNSAssetInFolder, Assets) == 0x000020, "Member 'X6BlueprintCommonLibrary_C_GetAllNSAssetInFolder::Assets' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetAllNSAssetInFolder, assetsArray) == 0x000030, "Member 'X6BlueprintCommonLibrary_C_GetAllNSAssetInFolder::assetsArray' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetAllNSAssetInFolder, CallFunc_GetAssetsInFolderByClassType_assets) == 0x000040, "Member 'X6BlueprintCommonLibrary_C_GetAllNSAssetInFolder::CallFunc_GetAssetsInFolderByClassType_assets' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetAllNSAssetInFolder, Temp_int_Array_Index_Variable) == 0x000050, "Member 'X6BlueprintCommonLibrary_C_GetAllNSAssetInFolder::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetAllNSAssetInFolder, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'X6BlueprintCommonLibrary_C_GetAllNSAssetInFolder::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetAllNSAssetInFolder, CallFunc_Array_Get_Item) == 0x000058, "Member 'X6BlueprintCommonLibrary_C_GetAllNSAssetInFolder::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetAllNSAssetInFolder, K2Node_DynamicCast_AsNiagara_System) == 0x000060, "Member 'X6BlueprintCommonLibrary_C_GetAllNSAssetInFolder::K2Node_DynamicCast_AsNiagara_System' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetAllNSAssetInFolder, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'X6BlueprintCommonLibrary_C_GetAllNSAssetInFolder::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetAllNSAssetInFolder, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'X6BlueprintCommonLibrary_C_GetAllNSAssetInFolder::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetAllNSAssetInFolder, CallFunc_Array_Add_ReturnValue) == 0x000070, "Member 'X6BlueprintCommonLibrary_C_GetAllNSAssetInFolder::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetAllNSAssetInFolder, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'X6BlueprintCommonLibrary_C_GetAllNSAssetInFolder::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetAllNSAssetInFolder, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'X6BlueprintCommonLibrary_C_GetAllNSAssetInFolder::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.CreateObjectViaSoftObjectPath
// 0x00D0 (0x00D0 - 0x0000)
struct X6BlueprintCommonLibrary_C_CreateObjectViaSoftObjectPath final
{
public:
	struct FSoftObjectPath                        SoftObjectPath;                                    // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                Outer_0;                                           // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CreatedObject;                                     // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 TempClass;                                         // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue; // 0x0040(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_SpawnObject_ReturnValue;                  // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue_1; // 0x0080(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_1;             // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_CreateObjectViaSoftObjectPath) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_CreateObjectViaSoftObjectPath");
static_assert(sizeof(X6BlueprintCommonLibrary_C_CreateObjectViaSoftObjectPath) == 0x0000D0, "Wrong size on X6BlueprintCommonLibrary_C_CreateObjectViaSoftObjectPath");
static_assert(offsetof(X6BlueprintCommonLibrary_C_CreateObjectViaSoftObjectPath, SoftObjectPath) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_CreateObjectViaSoftObjectPath::SoftObjectPath' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_CreateObjectViaSoftObjectPath, Outer_0) == 0x000020, "Member 'X6BlueprintCommonLibrary_C_CreateObjectViaSoftObjectPath::Outer_0' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_CreateObjectViaSoftObjectPath, __WorldContext) == 0x000028, "Member 'X6BlueprintCommonLibrary_C_CreateObjectViaSoftObjectPath::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_CreateObjectViaSoftObjectPath, CreatedObject) == 0x000030, "Member 'X6BlueprintCommonLibrary_C_CreateObjectViaSoftObjectPath::CreatedObject' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_CreateObjectViaSoftObjectPath, TempClass) == 0x000038, "Member 'X6BlueprintCommonLibrary_C_CreateObjectViaSoftObjectPath::TempClass' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_CreateObjectViaSoftObjectPath, CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue) == 0x000040, "Member 'X6BlueprintCommonLibrary_C_CreateObjectViaSoftObjectPath::CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_CreateObjectViaSoftObjectPath, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000068, "Member 'X6BlueprintCommonLibrary_C_CreateObjectViaSoftObjectPath::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_CreateObjectViaSoftObjectPath, CallFunc_SpawnObject_ReturnValue) == 0x000070, "Member 'X6BlueprintCommonLibrary_C_CreateObjectViaSoftObjectPath::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_CreateObjectViaSoftObjectPath, CallFunc_IsValidClass_ReturnValue) == 0x000078, "Member 'X6BlueprintCommonLibrary_C_CreateObjectViaSoftObjectPath::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_CreateObjectViaSoftObjectPath, CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue_1) == 0x000080, "Member 'X6BlueprintCommonLibrary_C_CreateObjectViaSoftObjectPath::CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_CreateObjectViaSoftObjectPath, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x0000A8, "Member 'X6BlueprintCommonLibrary_C_CreateObjectViaSoftObjectPath::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_CreateObjectViaSoftObjectPath, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x0000B0, "Member 'X6BlueprintCommonLibrary_C_CreateObjectViaSoftObjectPath::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_CreateObjectViaSoftObjectPath, CallFunc_GetObjectClass_ReturnValue) == 0x0000B8, "Member 'X6BlueprintCommonLibrary_C_CreateObjectViaSoftObjectPath::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_CreateObjectViaSoftObjectPath, CallFunc_GetObjectClass_ReturnValue_1) == 0x0000C0, "Member 'X6BlueprintCommonLibrary_C_CreateObjectViaSoftObjectPath::CallFunc_GetObjectClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_CreateObjectViaSoftObjectPath, CallFunc_IsValid_ReturnValue) == 0x0000C8, "Member 'X6BlueprintCommonLibrary_C_CreateObjectViaSoftObjectPath::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BPUpdateWaterSurfaceHeightWithSpeed
// 0x0048 (0x0048 - 0x0000)
struct X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightWithSpeed final
{
public:
	class AActor*                                 WaterActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        TotalHeightToUpdate;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SpeedToUpdate;                                     // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UX6WaterBuoyancyManagerComponent*       BuoyancyManagerComponent;                          // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UX6WaterBuoyancyManagerComponent*       CallFunc_GetComponentByClass_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_UpdateWaterSurfaceHeightWithSpeed_TotalHeightToUpdate_ImplicitCast; // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateWaterSurfaceHeightWithSpeed_UpdateHeightSpeed_ImplicitCast; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightWithSpeed) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightWithSpeed");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightWithSpeed) == 0x000048, "Wrong size on X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightWithSpeed");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightWithSpeed, WaterActor) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightWithSpeed::WaterActor' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightWithSpeed, TotalHeightToUpdate) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightWithSpeed::TotalHeightToUpdate' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightWithSpeed, SpeedToUpdate) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightWithSpeed::SpeedToUpdate' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightWithSpeed, __WorldContext) == 0x000018, "Member 'X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightWithSpeed::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightWithSpeed, BuoyancyManagerComponent) == 0x000020, "Member 'X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightWithSpeed::BuoyancyManagerComponent' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightWithSpeed, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightWithSpeed::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightWithSpeed, CallFunc_GetComponentByClass_ReturnValue) == 0x000030, "Member 'X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightWithSpeed::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightWithSpeed, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightWithSpeed::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightWithSpeed, CallFunc_UpdateWaterSurfaceHeightWithSpeed_TotalHeightToUpdate_ImplicitCast) == 0x00003C, "Member 'X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightWithSpeed::CallFunc_UpdateWaterSurfaceHeightWithSpeed_TotalHeightToUpdate_ImplicitCast' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightWithSpeed, CallFunc_UpdateWaterSurfaceHeightWithSpeed_UpdateHeightSpeed_ImplicitCast) == 0x000040, "Member 'X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightWithSpeed::CallFunc_UpdateWaterSurfaceHeightWithSpeed_UpdateHeightSpeed_ImplicitCast' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BPUpdateWaterSurfaceHeightInTime
// 0x0048 (0x0048 - 0x0000)
struct X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightInTime final
{
public:
	class AActor*                                 WaterActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        TotalHeightToUpdate;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TimeDuration;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UX6WaterBuoyancyManagerComponent*       BuoyancyManagerComponent;                          // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UX6WaterBuoyancyManagerComponent*       CallFunc_GetComponentByClass_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_UpdateWaterSurfaceHeightInTime_TotalHeightToUpdate_ImplicitCast; // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateWaterSurfaceHeightInTime_TimeDuration_ImplicitCast; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightInTime) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightInTime");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightInTime) == 0x000048, "Wrong size on X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightInTime");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightInTime, WaterActor) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightInTime::WaterActor' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightInTime, TotalHeightToUpdate) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightInTime::TotalHeightToUpdate' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightInTime, TimeDuration) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightInTime::TimeDuration' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightInTime, __WorldContext) == 0x000018, "Member 'X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightInTime::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightInTime, BuoyancyManagerComponent) == 0x000020, "Member 'X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightInTime::BuoyancyManagerComponent' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightInTime, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightInTime::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightInTime, CallFunc_GetComponentByClass_ReturnValue) == 0x000030, "Member 'X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightInTime::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightInTime, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightInTime::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightInTime, CallFunc_UpdateWaterSurfaceHeightInTime_TotalHeightToUpdate_ImplicitCast) == 0x00003C, "Member 'X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightInTime::CallFunc_UpdateWaterSurfaceHeightInTime_TotalHeightToUpdate_ImplicitCast' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightInTime, CallFunc_UpdateWaterSurfaceHeightInTime_TimeDuration_ImplicitCast) == 0x000040, "Member 'X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeightInTime::CallFunc_UpdateWaterSurfaceHeightInTime_TimeDuration_ImplicitCast' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BPUpdateWaterSurfaceHeight
// 0x0038 (0x0038 - 0x0000)
struct X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeight final
{
public:
	class AActor*                                 WaterActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        HeightOffset;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UX6WaterBuoyancyManagerComponent*       BuoyancyManagerComponent;                          // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UX6WaterBuoyancyManagerComponent*       CallFunc_GetComponentByClass_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_UpdateWaterSurfaceHeight_HeightOfffsetToUpdate_ImplicitCast; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeight) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeight");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeight) == 0x000038, "Wrong size on X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeight");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeight, WaterActor) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeight::WaterActor' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeight, HeightOffset) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeight::HeightOffset' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeight, __WorldContext) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeight::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeight, BuoyancyManagerComponent) == 0x000018, "Member 'X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeight::BuoyancyManagerComponent' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeight, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeight, CallFunc_GetComponentByClass_ReturnValue) == 0x000028, "Member 'X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeight::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeight, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeight::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeight, CallFunc_UpdateWaterSurfaceHeight_HeightOfffsetToUpdate_ImplicitCast) == 0x000034, "Member 'X6BlueprintCommonLibrary_C_BPUpdateWaterSurfaceHeight::CallFunc_UpdateWaterSurfaceHeight_HeightOfffsetToUpdate_ImplicitCast' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BPUpdateWaterDensity
// 0x0038 (0x0038 - 0x0000)
struct X6BlueprintCommonLibrary_C_BPUpdateWaterDensity final
{
public:
	class AActor*                                 WaterActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        NewDensity;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UX6WaterBuoyancyManagerComponent*       BuoyancyManagerComponent;                          // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UX6WaterBuoyancyManagerComponent*       CallFunc_GetComponentByClass_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_UpdateWaterDensity_NewDensity_ImplicitCast; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BPUpdateWaterDensity) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BPUpdateWaterDensity");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BPUpdateWaterDensity) == 0x000038, "Wrong size on X6BlueprintCommonLibrary_C_BPUpdateWaterDensity");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPUpdateWaterDensity, WaterActor) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BPUpdateWaterDensity::WaterActor' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPUpdateWaterDensity, NewDensity) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BPUpdateWaterDensity::NewDensity' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPUpdateWaterDensity, __WorldContext) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_BPUpdateWaterDensity::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPUpdateWaterDensity, BuoyancyManagerComponent) == 0x000018, "Member 'X6BlueprintCommonLibrary_C_BPUpdateWaterDensity::BuoyancyManagerComponent' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPUpdateWaterDensity, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'X6BlueprintCommonLibrary_C_BPUpdateWaterDensity::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPUpdateWaterDensity, CallFunc_GetComponentByClass_ReturnValue) == 0x000028, "Member 'X6BlueprintCommonLibrary_C_BPUpdateWaterDensity::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPUpdateWaterDensity, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'X6BlueprintCommonLibrary_C_BPUpdateWaterDensity::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPUpdateWaterDensity, CallFunc_UpdateWaterDensity_NewDensity_ImplicitCast) == 0x000034, "Member 'X6BlueprintCommonLibrary_C_BPUpdateWaterDensity::CallFunc_UpdateWaterDensity_NewDensity_ImplicitCast' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BPUpdateFloatingActorDensity
// 0x0038 (0x0038 - 0x0000)
struct X6BlueprintCommonLibrary_C_BPUpdateFloatingActorDensity final
{
public:
	class AActor*                                 FloatingActor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        NewDensity;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UX6BuoyancyEffectComponent*             BuoyancyEffectComponent;                           // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UX6BuoyancyEffectComponent*             CallFunc_GetComponentByClass_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_UpdateActorDensity_NewDensity_ImplicitCast; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BPUpdateFloatingActorDensity) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BPUpdateFloatingActorDensity");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BPUpdateFloatingActorDensity) == 0x000038, "Wrong size on X6BlueprintCommonLibrary_C_BPUpdateFloatingActorDensity");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPUpdateFloatingActorDensity, FloatingActor) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BPUpdateFloatingActorDensity::FloatingActor' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPUpdateFloatingActorDensity, NewDensity) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BPUpdateFloatingActorDensity::NewDensity' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPUpdateFloatingActorDensity, __WorldContext) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_BPUpdateFloatingActorDensity::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPUpdateFloatingActorDensity, BuoyancyEffectComponent) == 0x000018, "Member 'X6BlueprintCommonLibrary_C_BPUpdateFloatingActorDensity::BuoyancyEffectComponent' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPUpdateFloatingActorDensity, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'X6BlueprintCommonLibrary_C_BPUpdateFloatingActorDensity::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPUpdateFloatingActorDensity, CallFunc_GetComponentByClass_ReturnValue) == 0x000028, "Member 'X6BlueprintCommonLibrary_C_BPUpdateFloatingActorDensity::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPUpdateFloatingActorDensity, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'X6BlueprintCommonLibrary_C_BPUpdateFloatingActorDensity::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPUpdateFloatingActorDensity, CallFunc_UpdateActorDensity_NewDensity_ImplicitCast) == 0x000034, "Member 'X6BlueprintCommonLibrary_C_BPUpdateFloatingActorDensity::CallFunc_UpdateActorDensity_NewDensity_ImplicitCast' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BPStopCameraFocusFeature
// 0x0018 (0x0018 - 0x0000)
struct X6BlueprintCommonLibrary_C_BPStopCameraFocusFeature final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetLocalPlayerPawn_LocalPlayerPawn;       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BPStopCameraFocusFeature) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BPStopCameraFocusFeature");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BPStopCameraFocusFeature) == 0x000018, "Wrong size on X6BlueprintCommonLibrary_C_BPStopCameraFocusFeature");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPStopCameraFocusFeature, __WorldContext) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BPStopCameraFocusFeature::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPStopCameraFocusFeature, CallFunc_GetLocalPlayerPawn_LocalPlayerPawn) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BPStopCameraFocusFeature::CallFunc_GetLocalPlayerPawn_LocalPlayerPawn' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPStopCameraFocusFeature, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_BPStopCameraFocusFeature::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BPMessageHUDState
// 0x0008 (0x0008 - 0x0000)
struct X6BlueprintCommonLibrary_C_BPMessageHUDState final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BPMessageHUDState) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BPMessageHUDState");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BPMessageHUDState) == 0x000008, "Wrong size on X6BlueprintCommonLibrary_C_BPMessageHUDState");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPMessageHUDState, __WorldContext) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BPMessageHUDState::__WorldContext' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BPLib_CameraShake
// 0x0028 (0x0028 - 0x0000)
struct X6BlueprintCommonLibrary_C_BPLib_CameraShake final
{
public:
	class UClass*                                 shakeAssetClass;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCameraShakeBase*                       CallFunc_StartCameraShake_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BPLib_CameraShake) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BPLib_CameraShake");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BPLib_CameraShake) == 0x000028, "Wrong size on X6BlueprintCommonLibrary_C_BPLib_CameraShake");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPLib_CameraShake, shakeAssetClass) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BPLib_CameraShake::shakeAssetClass' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPLib_CameraShake, __WorldContext) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BPLib_CameraShake::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPLib_CameraShake, CallFunc_IsValidClass_ReturnValue) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_BPLib_CameraShake::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPLib_CameraShake, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000018, "Member 'X6BlueprintCommonLibrary_C_BPLib_CameraShake::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPLib_CameraShake, CallFunc_StartCameraShake_ReturnValue) == 0x000020, "Member 'X6BlueprintCommonLibrary_C_BPLib_CameraShake::CallFunc_StartCameraShake_ReturnValue' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BPIsActorFloatingOnWaterSurface
// 0x0030 (0x0030 - 0x0000)
struct X6BlueprintCommonLibrary_C_BPIsActorFloatingOnWaterSurface final
{
public:
	class AActor*                                 ActorToCheck;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          FloatingOnWaterSurface;                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UX6BuoyancyEffectComponent*             BuoyancyEffectComponent;                           // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UX6BuoyancyEffectComponent*             CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActorFloatingOnWaterSurface_ReturnValue; // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BPIsActorFloatingOnWaterSurface) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BPIsActorFloatingOnWaterSurface");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BPIsActorFloatingOnWaterSurface) == 0x000030, "Wrong size on X6BlueprintCommonLibrary_C_BPIsActorFloatingOnWaterSurface");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPIsActorFloatingOnWaterSurface, ActorToCheck) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BPIsActorFloatingOnWaterSurface::ActorToCheck' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPIsActorFloatingOnWaterSurface, __WorldContext) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BPIsActorFloatingOnWaterSurface::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPIsActorFloatingOnWaterSurface, FloatingOnWaterSurface) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_BPIsActorFloatingOnWaterSurface::FloatingOnWaterSurface' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPIsActorFloatingOnWaterSurface, BuoyancyEffectComponent) == 0x000018, "Member 'X6BlueprintCommonLibrary_C_BPIsActorFloatingOnWaterSurface::BuoyancyEffectComponent' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPIsActorFloatingOnWaterSurface, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'X6BlueprintCommonLibrary_C_BPIsActorFloatingOnWaterSurface::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPIsActorFloatingOnWaterSurface, CallFunc_IsActorFloatingOnWaterSurface_ReturnValue) == 0x000028, "Member 'X6BlueprintCommonLibrary_C_BPIsActorFloatingOnWaterSurface::CallFunc_IsActorFloatingOnWaterSurface_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPIsActorFloatingOnWaterSurface, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'X6BlueprintCommonLibrary_C_BPIsActorFloatingOnWaterSurface::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPIsActorFloatingOnWaterSurface, CallFunc_IsValid_ReturnValue_1) == 0x00002A, "Member 'X6BlueprintCommonLibrary_C_BPIsActorFloatingOnWaterSurface::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BPGetValueFromCurveByDeltaSeconds
// 0x0088 (0x0088 - 0x0000)
struct X6BlueprintCommonLibrary_C_BPGetValueFromCurveByDeltaSeconds final
{
public:
	class UCurveFloat*                            FCurve;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        DeltaSeconds;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurveTimeLength;                                   // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Elapsed_Timer;                                     // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_ReturnValue_ImplicitCast;    // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BPGetValueFromCurveByDeltaSeconds) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BPGetValueFromCurveByDeltaSeconds");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BPGetValueFromCurveByDeltaSeconds) == 0x000088, "Wrong size on X6BlueprintCommonLibrary_C_BPGetValueFromCurveByDeltaSeconds");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetValueFromCurveByDeltaSeconds, FCurve) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BPGetValueFromCurveByDeltaSeconds::FCurve' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetValueFromCurveByDeltaSeconds, DeltaSeconds) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BPGetValueFromCurveByDeltaSeconds::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetValueFromCurveByDeltaSeconds, __WorldContext) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_BPGetValueFromCurveByDeltaSeconds::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetValueFromCurveByDeltaSeconds, ReturnValue) == 0x000018, "Member 'X6BlueprintCommonLibrary_C_BPGetValueFromCurveByDeltaSeconds::ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetValueFromCurveByDeltaSeconds, CurveTimeLength) == 0x000020, "Member 'X6BlueprintCommonLibrary_C_BPGetValueFromCurveByDeltaSeconds::CurveTimeLength' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetValueFromCurveByDeltaSeconds, Elapsed_Timer) == 0x000028, "Member 'X6BlueprintCommonLibrary_C_BPGetValueFromCurveByDeltaSeconds::Elapsed_Timer' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetValueFromCurveByDeltaSeconds, CallFunc_GetTimeRange_MinTime) == 0x000030, "Member 'X6BlueprintCommonLibrary_C_BPGetValueFromCurveByDeltaSeconds::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetValueFromCurveByDeltaSeconds, CallFunc_GetTimeRange_MaxTime) == 0x000034, "Member 'X6BlueprintCommonLibrary_C_BPGetValueFromCurveByDeltaSeconds::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetValueFromCurveByDeltaSeconds, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000038, "Member 'X6BlueprintCommonLibrary_C_BPGetValueFromCurveByDeltaSeconds::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetValueFromCurveByDeltaSeconds, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000040, "Member 'X6BlueprintCommonLibrary_C_BPGetValueFromCurveByDeltaSeconds::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetValueFromCurveByDeltaSeconds, CallFunc_GetFloatValue_ReturnValue) == 0x000050, "Member 'X6BlueprintCommonLibrary_C_BPGetValueFromCurveByDeltaSeconds::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetValueFromCurveByDeltaSeconds, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000054, "Member 'X6BlueprintCommonLibrary_C_BPGetValueFromCurveByDeltaSeconds::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetValueFromCurveByDeltaSeconds, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'X6BlueprintCommonLibrary_C_BPGetValueFromCurveByDeltaSeconds::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetValueFromCurveByDeltaSeconds, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000060, "Member 'X6BlueprintCommonLibrary_C_BPGetValueFromCurveByDeltaSeconds::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetValueFromCurveByDeltaSeconds, K2Node_FunctionResult_ReturnValue_ImplicitCast) == 0x000068, "Member 'X6BlueprintCommonLibrary_C_BPGetValueFromCurveByDeltaSeconds::K2Node_FunctionResult_ReturnValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetValueFromCurveByDeltaSeconds, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000070, "Member 'X6BlueprintCommonLibrary_C_BPGetValueFromCurveByDeltaSeconds::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetValueFromCurveByDeltaSeconds, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000078, "Member 'X6BlueprintCommonLibrary_C_BPGetValueFromCurveByDeltaSeconds::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetValueFromCurveByDeltaSeconds, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000080, "Member 'X6BlueprintCommonLibrary_C_BPGetValueFromCurveByDeltaSeconds::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BPGetNearestActorFromActor
// 0x0140 (0x0140 - 0x0000)
struct X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor final
{
public:
	class UClass*                                 Class_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Radius;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CenterActor;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ReturnActor;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 LoopActor;                                         // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ParamterActor;                                     // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 TempActor;                                         // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	double                                        ShortestPath;                                      // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Targets;                                           // 0x0048(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x00D0(0x0010)(ConstParm, ReferenceParm)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x00E0(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x00F0(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue_1;            // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast; // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor) == 0x000140, "Wrong size on X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor, Class_0) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor::Class_0' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor, Radius) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor::Radius' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor, CenterActor) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor::CenterActor' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor, __WorldContext) == 0x000018, "Member 'X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor, ReturnActor) == 0x000020, "Member 'X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor::ReturnActor' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor, LoopActor) == 0x000028, "Member 'X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor::LoopActor' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor, ParamterActor) == 0x000030, "Member 'X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor::ParamterActor' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor, TempActor) == 0x000038, "Member 'X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor::TempActor' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor, ShortestPath) == 0x000040, "Member 'X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor::ShortestPath' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor, Targets) == 0x000048, "Member 'X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor::Targets' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor, Temp_int_Array_Index_Variable) == 0x000058, "Member 'X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00005C, "Member 'X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor, CallFunc_IsValid_ReturnValue) == 0x00005D, "Member 'X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000068, "Member 'X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000080, "Member 'X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000098, "Member 'X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor, CallFunc_Vector_Distance_ReturnValue) == 0x0000B0, "Member 'X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x0000B8, "Member 'X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor, Temp_object_Variable) == 0x0000D0, "Member 'X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor, K2Node_MakeArray_Array) == 0x0000E0, "Member 'X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor, CallFunc_SphereOverlapActors_OutActors) == 0x0000F0, "Member 'X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor, CallFunc_SphereOverlapActors_ReturnValue) == 0x000100, "Member 'X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor, CallFunc_Array_Get_Item) == 0x000108, "Member 'X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor, CallFunc_Array_Length_ReturnValue) == 0x000110, "Member 'X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor, CallFunc_Less_IntInt_ReturnValue) == 0x000114, "Member 'X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x000118, "Member 'X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor, CallFunc_Vector_Distance_ReturnValue_1) == 0x000130, "Member 'X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor::CallFunc_Vector_Distance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000138, "Member 'X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor, CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast) == 0x00013C, "Member 'X6BlueprintCommonLibrary_C_BPGetNearestActorFromActor::CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BPForceActorEnterWater
// 0x0080 (0x0080 - 0x0000)
struct X6BlueprintCommonLibrary_C_BPForceActorEnterWater final
{
public:
	class AActor*                                 ActorToEnterWater;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 WaterActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UX6BuoyancyEffectComponent*             BuoyancyEffectComponent;                           // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UX6WaterBuoyancyManagerComponent*       BuoyancyManagerComponent;                          // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UX6WaterBuoyancyManagerComponent*       CallFunc_GetComponentByClass_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UX6BuoyancyEffectComponent*             CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_OnActorBeginEnterWater_WaterSurfaceHeight_ImplicitCast; // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BPForceActorEnterWater) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BPForceActorEnterWater");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BPForceActorEnterWater) == 0x000080, "Wrong size on X6BlueprintCommonLibrary_C_BPForceActorEnterWater");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPForceActorEnterWater, ActorToEnterWater) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BPForceActorEnterWater::ActorToEnterWater' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPForceActorEnterWater, WaterActor) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BPForceActorEnterWater::WaterActor' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPForceActorEnterWater, __WorldContext) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_BPForceActorEnterWater::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPForceActorEnterWater, BuoyancyEffectComponent) == 0x000018, "Member 'X6BlueprintCommonLibrary_C_BPForceActorEnterWater::BuoyancyEffectComponent' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPForceActorEnterWater, BuoyancyManagerComponent) == 0x000020, "Member 'X6BlueprintCommonLibrary_C_BPForceActorEnterWater::BuoyancyManagerComponent' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPForceActorEnterWater, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'X6BlueprintCommonLibrary_C_BPForceActorEnterWater::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPForceActorEnterWater, CallFunc_GetComponentByClass_ReturnValue) == 0x000040, "Member 'X6BlueprintCommonLibrary_C_BPForceActorEnterWater::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPForceActorEnterWater, CallFunc_BreakVector_X) == 0x000048, "Member 'X6BlueprintCommonLibrary_C_BPForceActorEnterWater::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPForceActorEnterWater, CallFunc_BreakVector_Y) == 0x000050, "Member 'X6BlueprintCommonLibrary_C_BPForceActorEnterWater::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPForceActorEnterWater, CallFunc_BreakVector_Z) == 0x000058, "Member 'X6BlueprintCommonLibrary_C_BPForceActorEnterWater::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPForceActorEnterWater, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'X6BlueprintCommonLibrary_C_BPForceActorEnterWater::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPForceActorEnterWater, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000068, "Member 'X6BlueprintCommonLibrary_C_BPForceActorEnterWater::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPForceActorEnterWater, CallFunc_IsValid_ReturnValue_1) == 0x000070, "Member 'X6BlueprintCommonLibrary_C_BPForceActorEnterWater::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPForceActorEnterWater, CallFunc_BooleanAND_ReturnValue) == 0x000071, "Member 'X6BlueprintCommonLibrary_C_BPForceActorEnterWater::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPForceActorEnterWater, CallFunc_IsValid_ReturnValue_2) == 0x000072, "Member 'X6BlueprintCommonLibrary_C_BPForceActorEnterWater::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPForceActorEnterWater, CallFunc_IsValid_ReturnValue_3) == 0x000073, "Member 'X6BlueprintCommonLibrary_C_BPForceActorEnterWater::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPForceActorEnterWater, CallFunc_BooleanAND_ReturnValue_1) == 0x000074, "Member 'X6BlueprintCommonLibrary_C_BPForceActorEnterWater::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPForceActorEnterWater, CallFunc_OnActorBeginEnterWater_WaterSurfaceHeight_ImplicitCast) == 0x000078, "Member 'X6BlueprintCommonLibrary_C_BPForceActorEnterWater::CallFunc_OnActorBeginEnterWater_WaterSurfaceHeight_ImplicitCast' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BPEnableActorSimulateBuoyancy
// 0x0038 (0x0038 - 0x0000)
struct X6BlueprintCommonLibrary_C_BPEnableActorSimulateBuoyancy final
{
public:
	class AActor*                                 FloatingActor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableSimulate;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UX6BuoyancyEffectComponent*             BuoyancyEffectComponent;                           // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UX6BuoyancyEffectComponent*             CallFunc_GetComponentByClass_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BPEnableActorSimulateBuoyancy) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BPEnableActorSimulateBuoyancy");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BPEnableActorSimulateBuoyancy) == 0x000038, "Wrong size on X6BlueprintCommonLibrary_C_BPEnableActorSimulateBuoyancy");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPEnableActorSimulateBuoyancy, FloatingActor) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BPEnableActorSimulateBuoyancy::FloatingActor' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPEnableActorSimulateBuoyancy, EnableSimulate) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BPEnableActorSimulateBuoyancy::EnableSimulate' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPEnableActorSimulateBuoyancy, __WorldContext) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_BPEnableActorSimulateBuoyancy::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPEnableActorSimulateBuoyancy, BuoyancyEffectComponent) == 0x000018, "Member 'X6BlueprintCommonLibrary_C_BPEnableActorSimulateBuoyancy::BuoyancyEffectComponent' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPEnableActorSimulateBuoyancy, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'X6BlueprintCommonLibrary_C_BPEnableActorSimulateBuoyancy::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPEnableActorSimulateBuoyancy, CallFunc_GetComponentByClass_ReturnValue) == 0x000028, "Member 'X6BlueprintCommonLibrary_C_BPEnableActorSimulateBuoyancy::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BPEnableActorSimulateBuoyancy, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'X6BlueprintCommonLibrary_C_BPEnableActorSimulateBuoyancy::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_UpdateUITips
// 0x0010 (0x0010 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_UpdateUITips final
{
public:
	int32                                         LevelID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GameStage;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_UpdateUITips) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_UpdateUITips");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_UpdateUITips) == 0x000010, "Wrong size on X6BlueprintCommonLibrary_C_BP_UpdateUITips");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_UpdateUITips, LevelID) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_UpdateUITips::LevelID' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_UpdateUITips, GameStage) == 0x000004, "Member 'X6BlueprintCommonLibrary_C_BP_UpdateUITips::GameStage' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_UpdateUITips, __WorldContext) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_UpdateUITips::__WorldContext' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_UnTrackMarker
// 0x0010 (0x0010 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_UnTrackMarker final
{
public:
	class UBP_Marker_C*                           Marker;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_UnTrackMarker) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_UnTrackMarker");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_UnTrackMarker) == 0x000010, "Wrong size on X6BlueprintCommonLibrary_C_BP_UnTrackMarker");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_UnTrackMarker, Marker) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_UnTrackMarker::Marker' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_UnTrackMarker, __WorldContext) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_UnTrackMarker::__WorldContext' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_TrackMarker
// 0x0010 (0x0010 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_TrackMarker final
{
public:
	class UBP_Marker_C*                           Marker;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_TrackMarker) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_TrackMarker");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_TrackMarker) == 0x000010, "Wrong size on X6BlueprintCommonLibrary_C_BP_TrackMarker");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_TrackMarker, Marker) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_TrackMarker::Marker' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_TrackMarker, __WorldContext) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_TrackMarker::__WorldContext' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_SyncNikkiPlayerPos
// 0x0040 (0x0040 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_SyncNikkiPlayerPos final
{
public:
	struct FVector                                Pos;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rot;                                               // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                Context;                                           // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_SyncNikkiPlayerPos) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_SyncNikkiPlayerPos");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_SyncNikkiPlayerPos) == 0x000040, "Wrong size on X6BlueprintCommonLibrary_C_BP_SyncNikkiPlayerPos");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_SyncNikkiPlayerPos, Pos) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_SyncNikkiPlayerPos::Pos' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_SyncNikkiPlayerPos, Rot) == 0x000018, "Member 'X6BlueprintCommonLibrary_C_BP_SyncNikkiPlayerPos::Rot' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_SyncNikkiPlayerPos, Context) == 0x000030, "Member 'X6BlueprintCommonLibrary_C_BP_SyncNikkiPlayerPos::Context' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_SyncNikkiPlayerPos, __WorldContext) == 0x000038, "Member 'X6BlueprintCommonLibrary_C_BP_SyncNikkiPlayerPos::__WorldContext' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_ShowDressmain
// 0x0008 (0x0008 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_ShowDressmain final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_ShowDressmain) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_ShowDressmain");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_ShowDressmain) == 0x000008, "Wrong size on X6BlueprintCommonLibrary_C_BP_ShowDressmain");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_ShowDressmain, __WorldContext) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_ShowDressmain::__WorldContext' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_SetRotationWithAnimation
// 0x0028 (0x0028 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_SetRotationWithAnimation final
{
public:
	struct FRotator                               NewRotation;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAnimSequence*                          PlayAnimation;                                     // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_SetRotationWithAnimation) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_SetRotationWithAnimation");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_SetRotationWithAnimation) == 0x000028, "Wrong size on X6BlueprintCommonLibrary_C_BP_SetRotationWithAnimation");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_SetRotationWithAnimation, NewRotation) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_SetRotationWithAnimation::NewRotation' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_SetRotationWithAnimation, PlayAnimation) == 0x000018, "Member 'X6BlueprintCommonLibrary_C_BP_SetRotationWithAnimation::PlayAnimation' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_SetRotationWithAnimation, __WorldContext) == 0x000020, "Member 'X6BlueprintCommonLibrary_C_BP_SetRotationWithAnimation::__WorldContext' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_SetNiagaraActorTags
// 0x0018 (0x0018 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_SetNiagaraActorTags final
{
public:
	class USceneComponent*                        NiagaraComp;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OwnerActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_SetNiagaraActorTags) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_SetNiagaraActorTags");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_SetNiagaraActorTags) == 0x000018, "Wrong size on X6BlueprintCommonLibrary_C_BP_SetNiagaraActorTags");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_SetNiagaraActorTags, NiagaraComp) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_SetNiagaraActorTags::NiagaraComp' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_SetNiagaraActorTags, OwnerActor) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_SetNiagaraActorTags::OwnerActor' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_SetNiagaraActorTags, __WorldContext) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_BP_SetNiagaraActorTags::__WorldContext' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_SetMainHUDItemVisibility
// 0x0010 (0x0010 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_SetMainHUDItemVisibility final
{
public:
	EMainHUDItem                                  HUDItem;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Visibility;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_SetMainHUDItemVisibility) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_SetMainHUDItemVisibility");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_SetMainHUDItemVisibility) == 0x000010, "Wrong size on X6BlueprintCommonLibrary_C_BP_SetMainHUDItemVisibility");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_SetMainHUDItemVisibility, HUDItem) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_SetMainHUDItemVisibility::HUDItem' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_SetMainHUDItemVisibility, Visibility) == 0x000004, "Member 'X6BlueprintCommonLibrary_C_BP_SetMainHUDItemVisibility::Visibility' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_SetMainHUDItemVisibility, __WorldContext) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_SetMainHUDItemVisibility::__WorldContext' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_SetLevelProcess
// 0x0010 (0x0010 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_SetLevelProcess final
{
public:
	int32                                         LevelProcess;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_SetLevelProcess) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_SetLevelProcess");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_SetLevelProcess) == 0x000010, "Wrong size on X6BlueprintCommonLibrary_C_BP_SetLevelProcess");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_SetLevelProcess, LevelProcess) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_SetLevelProcess::LevelProcess' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_SetLevelProcess, __WorldContext) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_SetLevelProcess::__WorldContext' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_SetLevelPass
// 0x0008 (0x0008 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_SetLevelPass final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_SetLevelPass) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_SetLevelPass");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_SetLevelPass) == 0x000008, "Wrong size on X6BlueprintCommonLibrary_C_BP_SetLevelPass");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_SetLevelPass, __WorldContext) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_SetLevelPass::__WorldContext' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_SetLevelChallengeSuccess
// 0x0008 (0x0008 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_SetLevelChallengeSuccess final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_SetLevelChallengeSuccess) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_SetLevelChallengeSuccess");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_SetLevelChallengeSuccess) == 0x000008, "Wrong size on X6BlueprintCommonLibrary_C_BP_SetLevelChallengeSuccess");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_SetLevelChallengeSuccess, __WorldContext) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_SetLevelChallengeSuccess::__WorldContext' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_SetActorTickEnabled
// 0x0028 (0x0028 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_SetActorTickEnabled final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnabled;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Tag;                                               // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_SetActorTickEnabled) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_SetActorTickEnabled");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_SetActorTickEnabled) == 0x000028, "Wrong size on X6BlueprintCommonLibrary_C_BP_SetActorTickEnabled");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_SetActorTickEnabled, Actor) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_SetActorTickEnabled::Actor' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_SetActorTickEnabled, bEnabled) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_SetActorTickEnabled::bEnabled' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_SetActorTickEnabled, Tag) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_BP_SetActorTickEnabled::Tag' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_SetActorTickEnabled, __WorldContext) == 0x000020, "Member 'X6BlueprintCommonLibrary_C_BP_SetActorTickEnabled::__WorldContext' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_SetActorHiddenInGame
// 0x0028 (0x0028 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_SetActorHiddenInGame final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bNewHidden;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Tag;                                               // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_SetActorHiddenInGame) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_SetActorHiddenInGame");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_SetActorHiddenInGame) == 0x000028, "Wrong size on X6BlueprintCommonLibrary_C_BP_SetActorHiddenInGame");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_SetActorHiddenInGame, Actor) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_SetActorHiddenInGame::Actor' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_SetActorHiddenInGame, bNewHidden) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_SetActorHiddenInGame::bNewHidden' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_SetActorHiddenInGame, Tag) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_BP_SetActorHiddenInGame::Tag' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_SetActorHiddenInGame, __WorldContext) == 0x000020, "Member 'X6BlueprintCommonLibrary_C_BP_SetActorHiddenInGame::__WorldContext' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_SetActorFrozen
// 0x0028 (0x0028 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_SetActorFrozen final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bFreeze;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Tag;                                               // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_SetActorFrozen) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_SetActorFrozen");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_SetActorFrozen) == 0x000028, "Wrong size on X6BlueprintCommonLibrary_C_BP_SetActorFrozen");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_SetActorFrozen, Actor) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_SetActorFrozen::Actor' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_SetActorFrozen, bFreeze) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_SetActorFrozen::bFreeze' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_SetActorFrozen, Tag) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_BP_SetActorFrozen::Tag' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_SetActorFrozen, __WorldContext) == 0x000020, "Member 'X6BlueprintCommonLibrary_C_BP_SetActorFrozen::__WorldContext' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_SetActorEnableGravity
// 0x0028 (0x0028 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_SetActorEnableGravity final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnableGravity;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Tag;                                               // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_SetActorEnableGravity) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_SetActorEnableGravity");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_SetActorEnableGravity) == 0x000028, "Wrong size on X6BlueprintCommonLibrary_C_BP_SetActorEnableGravity");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_SetActorEnableGravity, Actor) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_SetActorEnableGravity::Actor' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_SetActorEnableGravity, bEnableGravity) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_SetActorEnableGravity::bEnableGravity' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_SetActorEnableGravity, Tag) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_BP_SetActorEnableGravity::Tag' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_SetActorEnableGravity, __WorldContext) == 0x000020, "Member 'X6BlueprintCommonLibrary_C_BP_SetActorEnableGravity::__WorldContext' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_SetActorEnableCollision
// 0x0028 (0x0028 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_SetActorEnableCollision final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnableCollision;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Tag;                                               // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_SetActorEnableCollision) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_SetActorEnableCollision");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_SetActorEnableCollision) == 0x000028, "Wrong size on X6BlueprintCommonLibrary_C_BP_SetActorEnableCollision");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_SetActorEnableCollision, Actor) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_SetActorEnableCollision::Actor' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_SetActorEnableCollision, bEnableCollision) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_SetActorEnableCollision::bEnableCollision' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_SetActorEnableCollision, Tag) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_BP_SetActorEnableCollision::Tag' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_SetActorEnableCollision, __WorldContext) == 0x000020, "Member 'X6BlueprintCommonLibrary_C_BP_SetActorEnableCollision::__WorldContext' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_RequestEnterBattle
// 0x0010 (0x0010 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_RequestEnterBattle final
{
public:
	int32                                         LevelID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_RequestEnterBattle) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_RequestEnterBattle");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_RequestEnterBattle) == 0x000010, "Wrong size on X6BlueprintCommonLibrary_C_BP_RequestEnterBattle");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_RequestEnterBattle, LevelID) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_RequestEnterBattle::LevelID' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_RequestEnterBattle, __WorldContext) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_RequestEnterBattle::__WorldContext' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_RequestConsumeOutput
// 0x0018 (0x0018 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_RequestConsumeOutput final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         OutputId;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_RequestConsumeOutput) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_RequestConsumeOutput");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_RequestConsumeOutput) == 0x000018, "Wrong size on X6BlueprintCommonLibrary_C_BP_RequestConsumeOutput");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_RequestConsumeOutput, Context) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_RequestConsumeOutput::Context' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_RequestConsumeOutput, OutputId) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_RequestConsumeOutput::OutputId' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_RequestConsumeOutput, __WorldContext) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_BP_RequestConsumeOutput::__WorldContext' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_RequestBackToWorld
// 0x0038 (0x0038 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_RequestBackToWorld final
{
public:
	struct FVector                                PlayerLocation;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               PlayerRotation;                                    // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_RequestBackToWorld) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_RequestBackToWorld");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_RequestBackToWorld) == 0x000038, "Wrong size on X6BlueprintCommonLibrary_C_BP_RequestBackToWorld");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_RequestBackToWorld, PlayerLocation) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_RequestBackToWorld::PlayerLocation' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_RequestBackToWorld, PlayerRotation) == 0x000018, "Member 'X6BlueprintCommonLibrary_C_BP_RequestBackToWorld::PlayerRotation' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_RequestBackToWorld, __WorldContext) == 0x000030, "Member 'X6BlueprintCommonLibrary_C_BP_RequestBackToWorld::__WorldContext' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_RemoveMarker
// 0x0010 (0x0010 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_RemoveMarker final
{
public:
	class UBP_Marker_C*                           Marker;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_RemoveMarker) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_RemoveMarker");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_RemoveMarker) == 0x000010, "Wrong size on X6BlueprintCommonLibrary_C_BP_RemoveMarker");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_RemoveMarker, Marker) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_RemoveMarker::Marker' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_RemoveMarker, __WorldContext) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_RemoveMarker::__WorldContext' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_RemoveCacheActor
// 0x0010 (0x0010 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_RemoveCacheActor final
{
public:
	int32                                         cachePoolId;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_RemoveCacheActor) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_RemoveCacheActor");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_RemoveCacheActor) == 0x000010, "Wrong size on X6BlueprintCommonLibrary_C_BP_RemoveCacheActor");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_RemoveCacheActor, cachePoolId) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_RemoveCacheActor::cachePoolId' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_RemoveCacheActor, __WorldContext) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_RemoveCacheActor::__WorldContext' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_PlayVideo
// 0x0020 (0x0020 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_PlayVideo final
{
public:
	class FString                                 StrVedioPath;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                Contxt;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_PlayVideo) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_PlayVideo");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_PlayVideo) == 0x000020, "Wrong size on X6BlueprintCommonLibrary_C_BP_PlayVideo");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_PlayVideo, StrVedioPath) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_PlayVideo::StrVedioPath' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_PlayVideo, Contxt) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_BP_PlayVideo::Contxt' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_PlayVideo, __WorldContext) == 0x000018, "Member 'X6BlueprintCommonLibrary_C_BP_PlayVideo::__WorldContext' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_PlayLevelSeqAtCustomizeTransfrom
// 0x0190 (0x0190 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_PlayLevelSeqAtCustomizeTransfrom final
{
public:
	class ALevelSequenceActor*                    LevelSeqToPlay;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CustomizeTransform;                                // 0x0010(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BaseLocationForLevelSeq;                           // 0x0070(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0088(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_NegateVector_ReturnValue;                 // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_118[0x8];                                      // 0x0118(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0120(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDefaultLevelSequenceInstanceData*      CallFunc_SpawnObject_ReturnValue;                  // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_PlayLevelSeqAtCustomizeTransfrom) == 0x000010, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_PlayLevelSeqAtCustomizeTransfrom");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_PlayLevelSeqAtCustomizeTransfrom) == 0x000190, "Wrong size on X6BlueprintCommonLibrary_C_BP_PlayLevelSeqAtCustomizeTransfrom");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_PlayLevelSeqAtCustomizeTransfrom, LevelSeqToPlay) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_PlayLevelSeqAtCustomizeTransfrom::LevelSeqToPlay' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_PlayLevelSeqAtCustomizeTransfrom, CustomizeTransform) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_BP_PlayLevelSeqAtCustomizeTransfrom::CustomizeTransform' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_PlayLevelSeqAtCustomizeTransfrom, BaseLocationForLevelSeq) == 0x000070, "Member 'X6BlueprintCommonLibrary_C_BP_PlayLevelSeqAtCustomizeTransfrom::BaseLocationForLevelSeq' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_PlayLevelSeqAtCustomizeTransfrom, __WorldContext) == 0x000088, "Member 'X6BlueprintCommonLibrary_C_BP_PlayLevelSeqAtCustomizeTransfrom::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_PlayLevelSeqAtCustomizeTransfrom, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'X6BlueprintCommonLibrary_C_BP_PlayLevelSeqAtCustomizeTransfrom::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_PlayLevelSeqAtCustomizeTransfrom, CallFunc_BreakTransform_Location) == 0x000098, "Member 'X6BlueprintCommonLibrary_C_BP_PlayLevelSeqAtCustomizeTransfrom::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_PlayLevelSeqAtCustomizeTransfrom, CallFunc_BreakTransform_Rotation) == 0x0000B0, "Member 'X6BlueprintCommonLibrary_C_BP_PlayLevelSeqAtCustomizeTransfrom::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_PlayLevelSeqAtCustomizeTransfrom, CallFunc_BreakTransform_Scale) == 0x0000C8, "Member 'X6BlueprintCommonLibrary_C_BP_PlayLevelSeqAtCustomizeTransfrom::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_PlayLevelSeqAtCustomizeTransfrom, CallFunc_NegateVector_ReturnValue) == 0x0000E0, "Member 'X6BlueprintCommonLibrary_C_BP_PlayLevelSeqAtCustomizeTransfrom::CallFunc_NegateVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_PlayLevelSeqAtCustomizeTransfrom, CallFunc_TransformLocation_ReturnValue) == 0x0000F8, "Member 'X6BlueprintCommonLibrary_C_BP_PlayLevelSeqAtCustomizeTransfrom::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_PlayLevelSeqAtCustomizeTransfrom, CallFunc_GetSequencePlayer_ReturnValue) == 0x000110, "Member 'X6BlueprintCommonLibrary_C_BP_PlayLevelSeqAtCustomizeTransfrom::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_PlayLevelSeqAtCustomizeTransfrom, CallFunc_MakeTransform_ReturnValue) == 0x000120, "Member 'X6BlueprintCommonLibrary_C_BP_PlayLevelSeqAtCustomizeTransfrom::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_PlayLevelSeqAtCustomizeTransfrom, CallFunc_SpawnObject_ReturnValue) == 0x000180, "Member 'X6BlueprintCommonLibrary_C_BP_PlayLevelSeqAtCustomizeTransfrom::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_PlayLevelSeqAtCustomizeTransfrom, CallFunc_IsValid_ReturnValue_1) == 0x000188, "Member 'X6BlueprintCommonLibrary_C_BP_PlayLevelSeqAtCustomizeTransfrom::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_NotifyLogicFadeInFinish
// 0x0010 (0x0010 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_NotifyLogicFadeInFinish final
{
public:
	class UUserWidget*                            Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_NotifyLogicFadeInFinish) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_NotifyLogicFadeInFinish");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_NotifyLogicFadeInFinish) == 0x000010, "Wrong size on X6BlueprintCommonLibrary_C_BP_NotifyLogicFadeInFinish");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_NotifyLogicFadeInFinish, Widget) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_NotifyLogicFadeInFinish::Widget' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_NotifyLogicFadeInFinish, __WorldContext) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_NotifyLogicFadeInFinish::__WorldContext' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_Multi_InteractiveObjActive
// 0x0020 (0x0020 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_Multi_InteractiveObjActive final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Data;                                              // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_Multi_InteractiveObjActive) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_Multi_InteractiveObjActive");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_Multi_InteractiveObjActive) == 0x000020, "Wrong size on X6BlueprintCommonLibrary_C_BP_Multi_InteractiveObjActive");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_Multi_InteractiveObjActive, Actor) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_Multi_InteractiveObjActive::Actor' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_Multi_InteractiveObjActive, Data) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_Multi_InteractiveObjActive::Data' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_Multi_InteractiveObjActive, __WorldContext) == 0x000018, "Member 'X6BlueprintCommonLibrary_C_BP_Multi_InteractiveObjActive::__WorldContext' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_IsLightOnTime
// 0x0010 (0x0010 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_IsLightOnTime final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLightOnTime;                                    // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_IsLightOnTime) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_IsLightOnTime");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_IsLightOnTime) == 0x000010, "Wrong size on X6BlueprintCommonLibrary_C_BP_IsLightOnTime");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_IsLightOnTime, __WorldContext) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_IsLightOnTime::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_IsLightOnTime, bIsLightOnTime) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_IsLightOnTime::bIsLightOnTime' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_GetWorldIDFromLevelData
// 0x0010 (0x0010 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_GetWorldIDFromLevelData final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         worldId;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_GetWorldIDFromLevelData) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_GetWorldIDFromLevelData");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_GetWorldIDFromLevelData) == 0x000010, "Wrong size on X6BlueprintCommonLibrary_C_BP_GetWorldIDFromLevelData");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetWorldIDFromLevelData, __WorldContext) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_GetWorldIDFromLevelData::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetWorldIDFromLevelData, worldId) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_GetWorldIDFromLevelData::worldId' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_GetSoloLevelManager
// 0x0010 (0x0010 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_GetSoloLevelManager final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PaperSoloLevelManager_C*            SoloLevelManager;                                  // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_GetSoloLevelManager) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_GetSoloLevelManager");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_GetSoloLevelManager) == 0x000010, "Wrong size on X6BlueprintCommonLibrary_C_BP_GetSoloLevelManager");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetSoloLevelManager, __WorldContext) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_GetSoloLevelManager::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetSoloLevelManager, SoloLevelManager) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_GetSoloLevelManager::SoloLevelManager' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_GetLevePass
// 0x0010 (0x0010 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_GetLevePass final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bLevelPass;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_GetLevePass) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_GetLevePass");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_GetLevePass) == 0x000010, "Wrong size on X6BlueprintCommonLibrary_C_BP_GetLevePass");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetLevePass, __WorldContext) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_GetLevePass::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetLevePass, bLevelPass) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_GetLevePass::bLevelPass' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_GetLevelProcess
// 0x0010 (0x0010 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_GetLevelProcess final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         LevelProcess;                                      // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_GetLevelProcess) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_GetLevelProcess");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_GetLevelProcess) == 0x000010, "Wrong size on X6BlueprintCommonLibrary_C_BP_GetLevelProcess");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetLevelProcess, __WorldContext) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_GetLevelProcess::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetLevelProcess, LevelProcess) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_GetLevelProcess::LevelProcess' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_GetLevelChallengeSuccess
// 0x0010 (0x0010 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_GetLevelChallengeSuccess final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bLevelChallengeSuccess;                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_GetLevelChallengeSuccess) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_GetLevelChallengeSuccess");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_GetLevelChallengeSuccess) == 0x000010, "Wrong size on X6BlueprintCommonLibrary_C_BP_GetLevelChallengeSuccess");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetLevelChallengeSuccess, __WorldContext) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_GetLevelChallengeSuccess::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetLevelChallengeSuccess, bLevelChallengeSuccess) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_GetLevelChallengeSuccess::bLevelChallengeSuccess' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_GetLevelChallengeID
// 0x0010 (0x0010 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_GetLevelChallengeID final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         LevelProcess;                                      // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_GetLevelChallengeID) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_GetLevelChallengeID");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_GetLevelChallengeID) == 0x000010, "Wrong size on X6BlueprintCommonLibrary_C_BP_GetLevelChallengeID");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetLevelChallengeID, __WorldContext) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_GetLevelChallengeID::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetLevelChallengeID, LevelProcess) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_GetLevelChallengeID::LevelProcess' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_GetItemCountById
// 0x0018 (0x0018 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_GetItemCountById final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Num;                                               // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_GetItemCountById) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_GetItemCountById");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_GetItemCountById) == 0x000018, "Wrong size on X6BlueprintCommonLibrary_C_BP_GetItemCountById");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetItemCountById, ID) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_GetItemCountById::ID' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetItemCountById, __WorldContext) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_GetItemCountById::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetItemCountById, Num) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_BP_GetItemCountById::Num' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_GetIsDayTime
// 0x0010 (0x0010 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_GetIsDayTime final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsDayTime;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_GetIsDayTime) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_GetIsDayTime");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_GetIsDayTime) == 0x000010, "Wrong size on X6BlueprintCommonLibrary_C_BP_GetIsDayTime");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetIsDayTime, __WorldContext) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_GetIsDayTime::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetIsDayTime, bIsDayTime) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_GetIsDayTime::bIsDayTime' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_GetGlobalFXManager
// 0x0010 (0x0010 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_GetGlobalFXManager final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_PaperFXManager_C*                   FXManager;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_GetGlobalFXManager) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_GetGlobalFXManager");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_GetGlobalFXManager) == 0x000010, "Wrong size on X6BlueprintCommonLibrary_C_BP_GetGlobalFXManager");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetGlobalFXManager, __WorldContext) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_GetGlobalFXManager::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetGlobalFXManager, FXManager) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_GetGlobalFXManager::FXManager' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_GetGameTime
// 0x0018 (0x0018 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_GetGameTime final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Hour;                                              // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Min;                                               // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_GetGameTime) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_GetGameTime");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_GetGameTime) == 0x000018, "Wrong size on X6BlueprintCommonLibrary_C_BP_GetGameTime");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetGameTime, __WorldContext) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_GetGameTime::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetGameTime, Hour) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_GetGameTime::Hour' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetGameTime, Min) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_BP_GetGameTime::Min' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_GetCharacterType
// 0x0018 (0x0018 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_GetCharacterType final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECharacterType                                Type;                                              // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_GetCharacterType) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_GetCharacterType");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_GetCharacterType) == 0x000018, "Wrong size on X6BlueprintCommonLibrary_C_BP_GetCharacterType");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetCharacterType, Actor) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_GetCharacterType::Actor' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetCharacterType, __WorldContext) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_GetCharacterType::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetCharacterType, Type) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_BP_GetCharacterType::Type' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_GetCharacterTag
// 0x0018 (0x0018 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_GetCharacterTag final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CharacterTag;                                      // 0x0010(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_GetCharacterTag) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_GetCharacterTag");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_GetCharacterTag) == 0x000018, "Wrong size on X6BlueprintCommonLibrary_C_BP_GetCharacterTag");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetCharacterTag, Actor) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_GetCharacterTag::Actor' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetCharacterTag, __WorldContext) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_GetCharacterTag::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetCharacterTag, CharacterTag) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_BP_GetCharacterTag::CharacterTag' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_GetCharacterID
// 0x0018 (0x0018 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_GetCharacterID final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int64                                         ID;                                                // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_GetCharacterID) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_GetCharacterID");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_GetCharacterID) == 0x000018, "Wrong size on X6BlueprintCommonLibrary_C_BP_GetCharacterID");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetCharacterID, Actor) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_GetCharacterID::Actor' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetCharacterID, __WorldContext) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_GetCharacterID::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetCharacterID, ID) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_BP_GetCharacterID::ID' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_GetBlackScreenManager
// 0x0010 (0x0010 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_GetBlackScreenManager final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PaperBlackScreenManager_C*          BlackScreenManager;                                // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_GetBlackScreenManager) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_GetBlackScreenManager");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_GetBlackScreenManager) == 0x000010, "Wrong size on X6BlueprintCommonLibrary_C_BP_GetBlackScreenManager");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetBlackScreenManager, __WorldContext) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_GetBlackScreenManager::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetBlackScreenManager, BlackScreenManager) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_GetBlackScreenManager::BlackScreenManager' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_GetActorSpawnerID
// 0x0018 (0x0018 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_GetActorSpawnerID final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int64                                         SpawnerID;                                         // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_GetActorSpawnerID) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_GetActorSpawnerID");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_GetActorSpawnerID) == 0x000018, "Wrong size on X6BlueprintCommonLibrary_C_BP_GetActorSpawnerID");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetActorSpawnerID, Actor) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_GetActorSpawnerID::Actor' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetActorSpawnerID, __WorldContext) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_GetActorSpawnerID::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetActorSpawnerID, SpawnerID) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_BP_GetActorSpawnerID::SpawnerID' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_GetActorEntityID
// 0x0018 (0x0018 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_GetActorEntityID final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int64                                         EntityID;                                          // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_GetActorEntityID) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_GetActorEntityID");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_GetActorEntityID) == 0x000018, "Wrong size on X6BlueprintCommonLibrary_C_BP_GetActorEntityID");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetActorEntityID, Actor) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_GetActorEntityID::Actor' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetActorEntityID, __WorldContext) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_GetActorEntityID::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetActorEntityID, EntityID) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_BP_GetActorEntityID::EntityID' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_DestroySafezoneVolume
// 0x0010 (0x0010 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_DestroySafezoneVolume final
{
public:
	int32                                         SafezoneHandle;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_DestroySafezoneVolume) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_DestroySafezoneVolume");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_DestroySafezoneVolume) == 0x000010, "Wrong size on X6BlueprintCommonLibrary_C_BP_DestroySafezoneVolume");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_DestroySafezoneVolume, SafezoneHandle) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_DestroySafezoneVolume::SafezoneHandle' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_DestroySafezoneVolume, __WorldContext) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_DestroySafezoneVolume::__WorldContext' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_DeleteNPCHeadMarker
// 0x0010 (0x0010 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_DeleteNPCHeadMarker final
{
public:
	class UBP_Marker_C*                           Marker;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_DeleteNPCHeadMarker) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_DeleteNPCHeadMarker");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_DeleteNPCHeadMarker) == 0x000010, "Wrong size on X6BlueprintCommonLibrary_C_BP_DeleteNPCHeadMarker");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_DeleteNPCHeadMarker, Marker) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_DeleteNPCHeadMarker::Marker' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_DeleteNPCHeadMarker, __WorldContext) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_DeleteNPCHeadMarker::__WorldContext' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_CreateSafezoneVolume
// 0x0048 (0x0048 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_CreateSafezoneVolume final
{
public:
	TArray<class AActor*>                         actors_whitelist;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Postion;                                           // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Range;                                             // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SafezoneType                                safezone_type;                                     // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Handle;                                            // 0x0040(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_CreateSafezoneVolume) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_CreateSafezoneVolume");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_CreateSafezoneVolume) == 0x000048, "Wrong size on X6BlueprintCommonLibrary_C_BP_CreateSafezoneVolume");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_CreateSafezoneVolume, actors_whitelist) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_CreateSafezoneVolume::actors_whitelist' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_CreateSafezoneVolume, Postion) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_BP_CreateSafezoneVolume::Postion' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_CreateSafezoneVolume, Range) == 0x000028, "Member 'X6BlueprintCommonLibrary_C_BP_CreateSafezoneVolume::Range' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_CreateSafezoneVolume, safezone_type) == 0x000030, "Member 'X6BlueprintCommonLibrary_C_BP_CreateSafezoneVolume::safezone_type' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_CreateSafezoneVolume, __WorldContext) == 0x000038, "Member 'X6BlueprintCommonLibrary_C_BP_CreateSafezoneVolume::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_CreateSafezoneVolume, Handle) == 0x000040, "Member 'X6BlueprintCommonLibrary_C_BP_CreateSafezoneVolume::Handle' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_CheckWoolenHeartObtianedbySpawnerID
// 0x0018 (0x0018 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_CheckWoolenHeartObtianedbySpawnerID final
{
public:
	int64                                         SpawnerID;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bObtained;                                         // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_CheckWoolenHeartObtianedbySpawnerID) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_CheckWoolenHeartObtianedbySpawnerID");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_CheckWoolenHeartObtianedbySpawnerID) == 0x000018, "Wrong size on X6BlueprintCommonLibrary_C_BP_CheckWoolenHeartObtianedbySpawnerID");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_CheckWoolenHeartObtianedbySpawnerID, SpawnerID) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_CheckWoolenHeartObtianedbySpawnerID::SpawnerID' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_CheckWoolenHeartObtianedbySpawnerID, __WorldContext) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_CheckWoolenHeartObtianedbySpawnerID::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_CheckWoolenHeartObtianedbySpawnerID, bObtained) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_BP_CheckWoolenHeartObtianedbySpawnerID::bObtained' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_CenterInfoPushTips
// 0x0050 (0x0050 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_CenterInfoPushTips final
{
public:
	Enum_CenterInfoType                           InfoType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 MainTitle;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 ExtraTitle;                                        // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 MainContent;                                       // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 ExtraContent;                                      // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_CenterInfoPushTips) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_CenterInfoPushTips");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_CenterInfoPushTips) == 0x000050, "Wrong size on X6BlueprintCommonLibrary_C_BP_CenterInfoPushTips");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_CenterInfoPushTips, InfoType) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_CenterInfoPushTips::InfoType' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_CenterInfoPushTips, MainTitle) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_CenterInfoPushTips::MainTitle' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_CenterInfoPushTips, ExtraTitle) == 0x000018, "Member 'X6BlueprintCommonLibrary_C_BP_CenterInfoPushTips::ExtraTitle' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_CenterInfoPushTips, MainContent) == 0x000028, "Member 'X6BlueprintCommonLibrary_C_BP_CenterInfoPushTips::MainContent' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_CenterInfoPushTips, ExtraContent) == 0x000038, "Member 'X6BlueprintCommonLibrary_C_BP_CenterInfoPushTips::ExtraContent' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_CenterInfoPushTips, __WorldContext) == 0x000048, "Member 'X6BlueprintCommonLibrary_C_BP_CenterInfoPushTips::__WorldContext' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_CenterInfoPushStaticInform
// 0x0010 (0x0010 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_CenterInfoPushStaticInform final
{
public:
	Enum_InformID                                 InformID;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_CenterInfoPushStaticInform) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_CenterInfoPushStaticInform");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_CenterInfoPushStaticInform) == 0x000010, "Wrong size on X6BlueprintCommonLibrary_C_BP_CenterInfoPushStaticInform");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_CenterInfoPushStaticInform, InformID) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_CenterInfoPushStaticInform::InformID' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_CenterInfoPushStaticInform, __WorldContext) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_CenterInfoPushStaticInform::__WorldContext' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_AddNPCHeadMarker
// 0x0028 (0x0028 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_AddNPCHeadMarker final
{
public:
	class FString                                 markerCfgId;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 NPC;                                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_Marker_C*                           Marker;                                            // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_AddNPCHeadMarker) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_AddNPCHeadMarker");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_AddNPCHeadMarker) == 0x000028, "Wrong size on X6BlueprintCommonLibrary_C_BP_AddNPCHeadMarker");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_AddNPCHeadMarker, markerCfgId) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_AddNPCHeadMarker::markerCfgId' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_AddNPCHeadMarker, NPC) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_BP_AddNPCHeadMarker::NPC' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_AddNPCHeadMarker, __WorldContext) == 0x000018, "Member 'X6BlueprintCommonLibrary_C_BP_AddNPCHeadMarker::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_AddNPCHeadMarker, Marker) == 0x000020, "Member 'X6BlueprintCommonLibrary_C_BP_AddNPCHeadMarker::Marker' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_AddMarkerforCurrentWorldActor
// 0x0030 (0x0030 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_AddMarkerforCurrentWorldActor final
{
public:
	class FString                                 markerCfgId;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          isMannualTrack;                                    // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_Marker_C*                           Marker;                                            // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_AddMarkerforCurrentWorldActor) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_AddMarkerforCurrentWorldActor");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_AddMarkerforCurrentWorldActor) == 0x000030, "Wrong size on X6BlueprintCommonLibrary_C_BP_AddMarkerforCurrentWorldActor");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_AddMarkerforCurrentWorldActor, markerCfgId) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_AddMarkerforCurrentWorldActor::markerCfgId' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_AddMarkerforCurrentWorldActor, Actor) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_BP_AddMarkerforCurrentWorldActor::Actor' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_AddMarkerforCurrentWorldActor, isMannualTrack) == 0x000018, "Member 'X6BlueprintCommonLibrary_C_BP_AddMarkerforCurrentWorldActor::isMannualTrack' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_AddMarkerforCurrentWorldActor, __WorldContext) == 0x000020, "Member 'X6BlueprintCommonLibrary_C_BP_AddMarkerforCurrentWorldActor::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_AddMarkerforCurrentWorldActor, Marker) == 0x000028, "Member 'X6BlueprintCommonLibrary_C_BP_AddMarkerforCurrentWorldActor::Marker' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_AddMarkerForActor
// 0x0030 (0x0030 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_AddMarkerForActor final
{
public:
	class FString                                 markerCfgId;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         worldId;                                           // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isMannualTrack;                                    // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_Marker_C*                           Marker;                                            // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_AddMarkerForActor) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_AddMarkerForActor");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_AddMarkerForActor) == 0x000030, "Wrong size on X6BlueprintCommonLibrary_C_BP_AddMarkerForActor");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_AddMarkerForActor, markerCfgId) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_AddMarkerForActor::markerCfgId' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_AddMarkerForActor, Actor) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_BP_AddMarkerForActor::Actor' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_AddMarkerForActor, worldId) == 0x000018, "Member 'X6BlueprintCommonLibrary_C_BP_AddMarkerForActor::worldId' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_AddMarkerForActor, isMannualTrack) == 0x00001C, "Member 'X6BlueprintCommonLibrary_C_BP_AddMarkerForActor::isMannualTrack' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_AddMarkerForActor, __WorldContext) == 0x000020, "Member 'X6BlueprintCommonLibrary_C_BP_AddMarkerForActor::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_AddMarkerForActor, Marker) == 0x000028, "Member 'X6BlueprintCommonLibrary_C_BP_AddMarkerForActor::Marker' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_AddCacheActor
// 0x0018 (0x0018 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_AddCacheActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         cachePoolId;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_AddCacheActor) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_AddCacheActor");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_AddCacheActor) == 0x000018, "Wrong size on X6BlueprintCommonLibrary_C_BP_AddCacheActor");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_AddCacheActor, Actor) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_AddCacheActor::Actor' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_AddCacheActor, __WorldContext) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_AddCacheActor::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_AddCacheActor, cachePoolId) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_BP_AddCacheActor::cachePoolId' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.ApplyComponentPosToActor
// 0x0240 (0x0240 - 0x0000)
struct X6BlueprintCommonLibrary_C_ApplyComponentPosToActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        RefSceneComponent;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NewWorldPos;                                       // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0048(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_1;     // 0x0148(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_ApplyComponentPosToActor) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_ApplyComponentPosToActor");
static_assert(sizeof(X6BlueprintCommonLibrary_C_ApplyComponentPosToActor) == 0x000240, "Wrong size on X6BlueprintCommonLibrary_C_ApplyComponentPosToActor");
static_assert(offsetof(X6BlueprintCommonLibrary_C_ApplyComponentPosToActor, Actor) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_ApplyComponentPosToActor::Actor' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_ApplyComponentPosToActor, RefSceneComponent) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_ApplyComponentPosToActor::RefSceneComponent' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_ApplyComponentPosToActor, __WorldContext) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_ApplyComponentPosToActor::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_ApplyComponentPosToActor, NewWorldPos) == 0x000018, "Member 'X6BlueprintCommonLibrary_C_ApplyComponentPosToActor::NewWorldPos' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_ApplyComponentPosToActor, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000030, "Member 'X6BlueprintCommonLibrary_C_ApplyComponentPosToActor::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_ApplyComponentPosToActor, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000048, "Member 'X6BlueprintCommonLibrary_C_ApplyComponentPosToActor::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_ApplyComponentPosToActor, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000140, "Member 'X6BlueprintCommonLibrary_C_ApplyComponentPosToActor::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_ApplyComponentPosToActor, CallFunc_K2_SetWorldLocation_SweepHitResult_1) == 0x000148, "Member 'X6BlueprintCommonLibrary_C_ApplyComponentPosToActor::CallFunc_K2_SetWorldLocation_SweepHitResult_1' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_UpdateRidderItem
// 0x0010 (0x0010 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_UpdateRidderItem final
{
public:
	int32                                         ItemId;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Add;                                               // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_UpdateRidderItem) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_UpdateRidderItem");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_UpdateRidderItem) == 0x000010, "Wrong size on X6BlueprintCommonLibrary_C_BP_UpdateRidderItem");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_UpdateRidderItem, ItemId) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_UpdateRidderItem::ItemId' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_UpdateRidderItem, Add) == 0x000004, "Member 'X6BlueprintCommonLibrary_C_BP_UpdateRidderItem::Add' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_UpdateRidderItem, __WorldContext) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_UpdateRidderItem::__WorldContext' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_ShowMainUI
// 0x0010 (0x0010 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_ShowMainUI final
{
public:
	int32                                         MainModeID;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SubModeID;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_ShowMainUI) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_ShowMainUI");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_ShowMainUI) == 0x000010, "Wrong size on X6BlueprintCommonLibrary_C_BP_ShowMainUI");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_ShowMainUI, MainModeID) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_ShowMainUI::MainModeID' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_ShowMainUI, SubModeID) == 0x000004, "Member 'X6BlueprintCommonLibrary_C_BP_ShowMainUI::SubModeID' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_ShowMainUI, __WorldContext) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_ShowMainUI::__WorldContext' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_ShowMainHud
// 0x0010 (0x0010 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_ShowMainHud final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_ShowMainHud) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_ShowMainHud");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_ShowMainHud) == 0x000010, "Wrong size on X6BlueprintCommonLibrary_C_BP_ShowMainHud");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_ShowMainHud, Show) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_ShowMainHud::Show' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_ShowMainHud, __WorldContext) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_ShowMainHud::__WorldContext' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_ShowHUDLockCamera
// 0x0010 (0x0010 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_ShowHUDLockCamera final
{
public:
	bool                                          toShow;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_ShowHUDLockCamera) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_ShowHUDLockCamera");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_ShowHUDLockCamera) == 0x000010, "Wrong size on X6BlueprintCommonLibrary_C_BP_ShowHUDLockCamera");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_ShowHUDLockCamera, toShow) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_ShowHUDLockCamera::toShow' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_ShowHUDLockCamera, __WorldContext) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_ShowHUDLockCamera::__WorldContext' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_ShowBlurScreen
// 0x0010 (0x0010 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_ShowBlurScreen final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BlurStrength;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_ShowBlurScreen) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_ShowBlurScreen");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_ShowBlurScreen) == 0x000010, "Wrong size on X6BlueprintCommonLibrary_C_BP_ShowBlurScreen");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_ShowBlurScreen, Show) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_ShowBlurScreen::Show' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_ShowBlurScreen, BlurStrength) == 0x000004, "Member 'X6BlueprintCommonLibrary_C_BP_ShowBlurScreen::BlurStrength' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_ShowBlurScreen, __WorldContext) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_ShowBlurScreen::__WorldContext' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_SetCurrentGamePlayMode
// 0x0010 (0x0010 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_SetCurrentGamePlayMode final
{
public:
	int32                                         MainModeID;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SubModeID;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_SetCurrentGamePlayMode) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_SetCurrentGamePlayMode");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_SetCurrentGamePlayMode) == 0x000010, "Wrong size on X6BlueprintCommonLibrary_C_BP_SetCurrentGamePlayMode");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_SetCurrentGamePlayMode, MainModeID) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_SetCurrentGamePlayMode::MainModeID' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_SetCurrentGamePlayMode, SubModeID) == 0x000004, "Member 'X6BlueprintCommonLibrary_C_BP_SetCurrentGamePlayMode::SubModeID' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_SetCurrentGamePlayMode, __WorldContext) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_SetCurrentGamePlayMode::__WorldContext' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_RequestLoadStreamingLevel
// 0x0068 (0x0068 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_RequestLoadStreamingLevel final
{
public:
	int32                                         LevelID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LevelPath;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                levelLocation;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PlayerLocation;                                    // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               PlayerRotation;                                    // 0x0048(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_RequestLoadStreamingLevel) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_RequestLoadStreamingLevel");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_RequestLoadStreamingLevel) == 0x000068, "Wrong size on X6BlueprintCommonLibrary_C_BP_RequestLoadStreamingLevel");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_RequestLoadStreamingLevel, LevelID) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_RequestLoadStreamingLevel::LevelID' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_RequestLoadStreamingLevel, LevelPath) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_RequestLoadStreamingLevel::LevelPath' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_RequestLoadStreamingLevel, levelLocation) == 0x000018, "Member 'X6BlueprintCommonLibrary_C_BP_RequestLoadStreamingLevel::levelLocation' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_RequestLoadStreamingLevel, PlayerLocation) == 0x000030, "Member 'X6BlueprintCommonLibrary_C_BP_RequestLoadStreamingLevel::PlayerLocation' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_RequestLoadStreamingLevel, PlayerRotation) == 0x000048, "Member 'X6BlueprintCommonLibrary_C_BP_RequestLoadStreamingLevel::PlayerRotation' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_RequestLoadStreamingLevel, __WorldContext) == 0x000060, "Member 'X6BlueprintCommonLibrary_C_BP_RequestLoadStreamingLevel::__WorldContext' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_GetIsConnected
// 0x0010 (0x0010 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_GetIsConnected final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsConnected;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_GetIsConnected) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_GetIsConnected");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_GetIsConnected) == 0x000010, "Wrong size on X6BlueprintCommonLibrary_C_BP_GetIsConnected");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetIsConnected, __WorldContext) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_GetIsConnected::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetIsConnected, IsConnected) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_GetIsConnected::IsConnected' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_GetCurrentClientTime
// 0x0018 (0x0018 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_GetCurrentClientTime final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CurrentTime;                                       // 0x0008(0x0010)(Parm, OutParm)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_GetCurrentClientTime) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_GetCurrentClientTime");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_GetCurrentClientTime) == 0x000018, "Wrong size on X6BlueprintCommonLibrary_C_BP_GetCurrentClientTime");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetCurrentClientTime, __WorldContext) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_GetCurrentClientTime::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetCurrentClientTime, CurrentTime) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_GetCurrentClientTime::CurrentTime' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_GetActorID
// 0x0018 (0x0018 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_GetActorID final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int64                                         ID;                                                // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_GetActorID) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_GetActorID");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_GetActorID) == 0x000018, "Wrong size on X6BlueprintCommonLibrary_C_BP_GetActorID");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetActorID, Actor) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_GetActorID::Actor' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetActorID, __WorldContext) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_GetActorID::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_GetActorID, ID) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_BP_GetActorID::ID' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_DestroyItemByNetID
// 0x0010 (0x0010 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_DestroyItemByNetID final
{
public:
	int64                                         NetID;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_DestroyItemByNetID) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_DestroyItemByNetID");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_DestroyItemByNetID) == 0x000010, "Wrong size on X6BlueprintCommonLibrary_C_BP_DestroyItemByNetID");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_DestroyItemByNetID, NetID) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_DestroyItemByNetID::NetID' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_DestroyItemByNetID, __WorldContext) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_DestroyItemByNetID::__WorldContext' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_CloseMainUI
// 0x0010 (0x0010 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_CloseMainUI final
{
public:
	int32                                         MainModeID;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SubModeID;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_CloseMainUI) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_CloseMainUI");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_CloseMainUI) == 0x000010, "Wrong size on X6BlueprintCommonLibrary_C_BP_CloseMainUI");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_CloseMainUI, MainModeID) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_CloseMainUI::MainModeID' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_CloseMainUI, SubModeID) == 0x000004, "Member 'X6BlueprintCommonLibrary_C_BP_CloseMainUI::SubModeID' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_CloseMainUI, __WorldContext) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_CloseMainUI::__WorldContext' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_AutoPickUpThrowableItem
// 0x0010 (0x0010 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_AutoPickUpThrowableItem final
{
public:
	class AX6Actor*                               NewThrowableItem;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_AutoPickUpThrowableItem) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_AutoPickUpThrowableItem");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_AutoPickUpThrowableItem) == 0x000010, "Wrong size on X6BlueprintCommonLibrary_C_BP_AutoPickUpThrowableItem");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_AutoPickUpThrowableItem, NewThrowableItem) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_AutoPickUpThrowableItem::NewThrowableItem' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_AutoPickUpThrowableItem, __WorldContext) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_AutoPickUpThrowableItem::__WorldContext' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP Auto Put Down Throwable Item
// 0x0008 (0x0008 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_Auto_Put_Down_Throwable_Item final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_Auto_Put_Down_Throwable_Item) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_Auto_Put_Down_Throwable_Item");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_Auto_Put_Down_Throwable_Item) == 0x000008, "Wrong size on X6BlueprintCommonLibrary_C_BP_Auto_Put_Down_Throwable_Item");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_Auto_Put_Down_Throwable_Item, __WorldContext) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_Auto_Put_Down_Throwable_Item::__WorldContext' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.ModifySourceSocketOnMesh
// 0x01E0 (0x01E0 - 0x0000)
struct X6BlueprintCommonLibrary_C_ModifySourceSocketOnMesh final
{
public:
	class USkeletalMeshComponent*                 mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   SourceSocket;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0020(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_InvertTransform_ReturnValue;              // 0x0080(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x00E0(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_ModifySourceSocketOnMesh) == 0x000010, "Wrong alignment on X6BlueprintCommonLibrary_C_ModifySourceSocketOnMesh");
static_assert(sizeof(X6BlueprintCommonLibrary_C_ModifySourceSocketOnMesh) == 0x0001E0, "Wrong size on X6BlueprintCommonLibrary_C_ModifySourceSocketOnMesh");
static_assert(offsetof(X6BlueprintCommonLibrary_C_ModifySourceSocketOnMesh, mesh) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_ModifySourceSocketOnMesh::mesh' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_ModifySourceSocketOnMesh, SourceSocket) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_ModifySourceSocketOnMesh::SourceSocket' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_ModifySourceSocketOnMesh, __WorldContext) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_ModifySourceSocketOnMesh::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_ModifySourceSocketOnMesh, CallFunc_GetSocketTransform_ReturnValue) == 0x000020, "Member 'X6BlueprintCommonLibrary_C_ModifySourceSocketOnMesh::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_ModifySourceSocketOnMesh, CallFunc_InvertTransform_ReturnValue) == 0x000080, "Member 'X6BlueprintCommonLibrary_C_ModifySourceSocketOnMesh::CallFunc_InvertTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_ModifySourceSocketOnMesh, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x0000E0, "Member 'X6BlueprintCommonLibrary_C_ModifySourceSocketOnMesh::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.GetMainSkeletalMesh
// 0x0058 (0x0058 - 0x0000)
struct X6BlueprintCommonLibrary_C_GetMainSkeletalMesh final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   MeshTag;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 mesh;                                              // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ComponentHasTag_ReturnValue;              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53[0x1];                                       // 0x0053(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_GetMainSkeletalMesh) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_GetMainSkeletalMesh");
static_assert(sizeof(X6BlueprintCommonLibrary_C_GetMainSkeletalMesh) == 0x000058, "Wrong size on X6BlueprintCommonLibrary_C_GetMainSkeletalMesh");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetMainSkeletalMesh, Actor) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_GetMainSkeletalMesh::Actor' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetMainSkeletalMesh, MeshTag) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_GetMainSkeletalMesh::MeshTag' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetMainSkeletalMesh, __WorldContext) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_GetMainSkeletalMesh::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetMainSkeletalMesh, mesh) == 0x000018, "Member 'X6BlueprintCommonLibrary_C_GetMainSkeletalMesh::mesh' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetMainSkeletalMesh, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000020, "Member 'X6BlueprintCommonLibrary_C_GetMainSkeletalMesh::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetMainSkeletalMesh, Temp_bool_True_if_break_was_hit_Variable) == 0x000030, "Member 'X6BlueprintCommonLibrary_C_GetMainSkeletalMesh::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetMainSkeletalMesh, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'X6BlueprintCommonLibrary_C_GetMainSkeletalMesh::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetMainSkeletalMesh, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'X6BlueprintCommonLibrary_C_GetMainSkeletalMesh::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetMainSkeletalMesh, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'X6BlueprintCommonLibrary_C_GetMainSkeletalMesh::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetMainSkeletalMesh, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'X6BlueprintCommonLibrary_C_GetMainSkeletalMesh::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetMainSkeletalMesh, CallFunc_Array_Get_Item) == 0x000048, "Member 'X6BlueprintCommonLibrary_C_GetMainSkeletalMesh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetMainSkeletalMesh, CallFunc_ComponentHasTag_ReturnValue) == 0x000050, "Member 'X6BlueprintCommonLibrary_C_GetMainSkeletalMesh::CallFunc_ComponentHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetMainSkeletalMesh, CallFunc_Less_IntInt_ReturnValue) == 0x000051, "Member 'X6BlueprintCommonLibrary_C_GetMainSkeletalMesh::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetMainSkeletalMesh, CallFunc_BooleanAND_ReturnValue) == 0x000052, "Member 'X6BlueprintCommonLibrary_C_GetMainSkeletalMesh::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_GetMainSkeletalMesh, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'X6BlueprintCommonLibrary_C_GetMainSkeletalMesh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function X6BlueprintCommonLibrary.X6BlueprintCommonLibrary_C.BP_CreatePreviewMesh
// 0x0088 (0x0088 - 0x0000)
struct X6BlueprintCommonLibrary_C_BP_CreatePreviewMesh final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          PreviewMesh;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   MeshTag;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   TargetSocket;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SourceSocket;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 MeshComp;                                          // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 TargetMeshComp;                                    // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetMainSkeletalMesh_Mesh;                 // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm)
	TArray<class USkeletalMeshComponent*>         CallFunc_GetComponentsByTag_ReturnValue;           // 0x0058(0x0010)(ReferenceParm, ContainsInstancedReference)
	class USkeletalMeshComponent*                 CallFunc_AddComponentByClass_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6BlueprintCommonLibrary_C_BP_CreatePreviewMesh) == 0x000008, "Wrong alignment on X6BlueprintCommonLibrary_C_BP_CreatePreviewMesh");
static_assert(sizeof(X6BlueprintCommonLibrary_C_BP_CreatePreviewMesh) == 0x000088, "Wrong size on X6BlueprintCommonLibrary_C_BP_CreatePreviewMesh");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_CreatePreviewMesh, Actor) == 0x000000, "Member 'X6BlueprintCommonLibrary_C_BP_CreatePreviewMesh::Actor' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_CreatePreviewMesh, PreviewMesh) == 0x000008, "Member 'X6BlueprintCommonLibrary_C_BP_CreatePreviewMesh::PreviewMesh' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_CreatePreviewMesh, MeshTag) == 0x000010, "Member 'X6BlueprintCommonLibrary_C_BP_CreatePreviewMesh::MeshTag' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_CreatePreviewMesh, TargetSocket) == 0x000018, "Member 'X6BlueprintCommonLibrary_C_BP_CreatePreviewMesh::TargetSocket' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_CreatePreviewMesh, SourceSocket) == 0x000020, "Member 'X6BlueprintCommonLibrary_C_BP_CreatePreviewMesh::SourceSocket' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_CreatePreviewMesh, __WorldContext) == 0x000028, "Member 'X6BlueprintCommonLibrary_C_BP_CreatePreviewMesh::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_CreatePreviewMesh, MeshComp) == 0x000030, "Member 'X6BlueprintCommonLibrary_C_BP_CreatePreviewMesh::MeshComp' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_CreatePreviewMesh, TargetMeshComp) == 0x000038, "Member 'X6BlueprintCommonLibrary_C_BP_CreatePreviewMesh::TargetMeshComp' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_CreatePreviewMesh, CallFunc_GetMainSkeletalMesh_Mesh) == 0x000040, "Member 'X6BlueprintCommonLibrary_C_BP_CreatePreviewMesh::CallFunc_GetMainSkeletalMesh_Mesh' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_CreatePreviewMesh, K2Node_MakeArray_Array) == 0x000048, "Member 'X6BlueprintCommonLibrary_C_BP_CreatePreviewMesh::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_CreatePreviewMesh, CallFunc_GetComponentsByTag_ReturnValue) == 0x000058, "Member 'X6BlueprintCommonLibrary_C_BP_CreatePreviewMesh::CallFunc_GetComponentsByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_CreatePreviewMesh, CallFunc_AddComponentByClass_ReturnValue) == 0x000068, "Member 'X6BlueprintCommonLibrary_C_BP_CreatePreviewMesh::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_CreatePreviewMesh, CallFunc_Array_Get_Item) == 0x000070, "Member 'X6BlueprintCommonLibrary_C_BP_CreatePreviewMesh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_CreatePreviewMesh, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000078, "Member 'X6BlueprintCommonLibrary_C_BP_CreatePreviewMesh::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_CreatePreviewMesh, CallFunc_Array_Length_ReturnValue) == 0x00007C, "Member 'X6BlueprintCommonLibrary_C_BP_CreatePreviewMesh::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(X6BlueprintCommonLibrary_C_BP_CreatePreviewMesh, CallFunc_Greater_IntInt_ReturnValue) == 0x000080, "Member 'X6BlueprintCommonLibrary_C_BP_CreatePreviewMesh::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

}

