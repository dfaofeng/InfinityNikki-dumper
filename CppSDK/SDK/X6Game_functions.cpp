#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: X6Game

#include "Basic.hpp"

#include "X6Game_classes.hpp"
#include "X6Game_parameters.hpp"


namespace SDK
{

// Function X6Game.ActorEventListener.OnPooledActorDestroyed
// (Final, Native, Public)
// Parameters:
// class AActor*                           InActorAboutToDestroy                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UActorEventListener::OnPooledActorDestroyed(class AActor* InActorAboutToDestroy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ActorEventListener", "OnPooledActorDestroyed");

	Params::ActorEventListener_OnPooledActorDestroyed Parms{};

	Parms.InActorAboutToDestroy = InActorAboutToDestroy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.AsyncQueryPositionTask.QueryFlyingFollowPosition
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           GoalActor                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           FollowingActor                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FQueryFlyingFollowPositionArgs&Args                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAsyncQueryPositionTask::QueryFlyingFollowPosition(class AActor* GoalActor, class AActor* FollowingActor, const struct FQueryFlyingFollowPositionArgs& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AsyncQueryPositionTask", "QueryFlyingFollowPosition");

	Params::AsyncQueryPositionTask_QueryFlyingFollowPosition Parms{};

	Parms.GoalActor = GoalActor;
	Parms.FollowingActor = FollowingActor;
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.AnimNotify_PlayFootstepEffect.SetRowName
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const class FName&                      NewRowName                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimNotify_PlayFootstepEffect::SetRowName(const class FName& NewRowName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimNotify_PlayFootstepEffect", "SetRowName");

	Params::AnimNotify_PlayFootstepEffect_SetRowName Parms{};

	Parms.NewRowName = NewRowName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.AnimNotify_PlayFootstepEffect.SetSocketName
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const class FName&                      NewSocketName                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimNotify_PlayFootstepEffect::SetSocketName(const class FName& NewSocketName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimNotify_PlayFootstepEffect", "SetSocketName");

	Params::AnimNotify_PlayFootstepEffect_SetSocketName Parms{};

	Parms.NewSocketName = NewSocketName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.BipedalLocomotionAnimInstance.BlueprintPostInitializeDataContainer
// (Event, Public, BlueprintEvent)

void UBipedalLocomotionAnimInstance::BlueprintPostInitializeDataContainer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BipedalLocomotionAnimInstance", "BlueprintPostInitializeDataContainer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function X6Game.BipedalLocomotionAnimInstance.GetAdditiveAlpha
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBipedalLocomotionAnimInstance::GetAdditiveAlpha()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BipedalLocomotionAnimInstance", "GetAdditiveAlpha");

	Params::BipedalLocomotionAnimInstance_GetAdditiveAlpha Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.BipedalLocomotionAnimInstance.GetLandRecoveryAlpha
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBipedalLocomotionAnimInstance::GetLandRecoveryAlpha()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BipedalLocomotionAnimInstance", "GetLandRecoveryAlpha");

	Params::BipedalLocomotionAnimInstance_GetLandRecoveryAlpha Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.BipedalLocomotionAnimInstance.GetNextIdleBreak
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimSequenceBase*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAnimSequenceBase* UBipedalLocomotionAnimInstance::GetNextIdleBreak()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BipedalLocomotionAnimInstance", "GetNextIdleBreak");

	Params::BipedalLocomotionAnimInstance_GetNextIdleBreak Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.BipedalLocomotionAnimInstance.HasAnyIdleBreak
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBipedalLocomotionAnimInstance::HasAnyIdleBreak()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BipedalLocomotionAnimInstance", "HasAnyIdleBreak");

	Params::BipedalLocomotionAnimInstance_HasAnyIdleBreak Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.BipedalLocomotionAnimInstance.IsForcingIdleReadyInIdleState
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBipedalLocomotionAnimInstance::IsForcingIdleReadyInIdleState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BipedalLocomotionAnimInstance", "IsForcingIdleReadyInIdleState");

	Params::BipedalLocomotionAnimInstance_IsForcingIdleReadyInIdleState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.BipedalLocomotionAnimInstance.UseFallLoopAsJump
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBipedalLocomotionAnimInstance::UseFallLoopAsJump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BipedalLocomotionAnimInstance", "UseFallLoopAsJump");

	Params::BipedalLocomotionAnimInstance_UseFallLoopAsJump Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.LocomotionDataContainerBase.SetAnimInstance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAnimInstance*                    AnimInstance                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULocomotionDataContainerBase::SetAnimInstance(class UAnimInstance* AnimInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocomotionDataContainerBase", "SetAnimInstance");

	Params::LocomotionDataContainerBase_SetAnimInstance Parms{};

	Parms.AnimInstance = AnimInstance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.BipedalLocomotionDataContainer.OnMovementModeChanged
// (Final, Native, Private)
// Parameters:
// class ACharacter*                       Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovementMode                           PrevMovementMode                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   PrevCustomMode                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBipedalLocomotionDataContainer::OnMovementModeChanged(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PrevCustomMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BipedalLocomotionDataContainer", "OnMovementModeChanged");

	Params::BipedalLocomotionDataContainer_OnMovementModeChanged Parms{};

	Parms.Character = Character;
	Parms.PrevMovementMode = PrevMovementMode;
	Parms.PrevCustomMode = PrevCustomMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.BipedalLocomotionDataContainer.SetStandardSpeeds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InStandardWalkSpeed                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InStandardJogSpeed                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InStandardSprintSpeed                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBipedalLocomotionDataContainer::SetStandardSpeeds(float InStandardWalkSpeed, float InStandardJogSpeed, float InStandardSprintSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BipedalLocomotionDataContainer", "SetStandardSpeeds");

	Params::BipedalLocomotionDataContainer_SetStandardSpeeds Parms{};

	Parms.InStandardWalkSpeed = InStandardWalkSpeed;
	Parms.InStandardJogSpeed = InStandardJogSpeed;
	Parms.InStandardSprintSpeed = InStandardSprintSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.BipedalLocomotionDataContainer.UpdateFloatingJumpStates
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   InFloatingJumpStage                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBipedalLocomotionDataContainer::UpdateFloatingJumpStates(uint8 InFloatingJumpStage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BipedalLocomotionDataContainer", "UpdateFloatingJumpStates");

	Params::BipedalLocomotionDataContainer_UpdateFloatingJumpStates Parms{};

	Parms.InFloatingJumpStage = InFloatingJumpStage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.BipedalLocomotionDataContainer.UpdatePlayerMovementStates
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EMovementMode                           InMovementMode                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ELocomotionGait                         InAllowGait                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InAllowSpeed                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBipedalLocomotionDataContainer::UpdatePlayerMovementStates(EMovementMode InMovementMode, ELocomotionGait InAllowGait, float InAllowSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BipedalLocomotionDataContainer", "UpdatePlayerMovementStates");

	Params::BipedalLocomotionDataContainer_UpdatePlayerMovementStates Parms{};

	Parms.InMovementMode = InMovementMode;
	Parms.InAllowGait = InAllowGait;
	Parms.InAllowSpeed = InAllowSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.CameraModifierVolumeActor.OnActorEnterVolume
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACameraModifierVolumeActor::OnActorEnterVolume(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraModifierVolumeActor", "OnActorEnterVolume");

	Params::CameraModifierVolumeActor_OnActorEnterVolume Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.CameraModifierVolumeActor.OnActorLeaveVolume
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACameraModifierVolumeActor::OnActorLeaveVolume(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraModifierVolumeActor", "OnActorLeaveVolume");

	Params::CameraModifierVolumeActor_OnActorLeaveVolume Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.CameraModifierVolumeActor.OnEnterBoxComponentBeginOverlap
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ACameraModifierVolumeActor::OnEnterBoxComponentBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraModifierVolumeActor", "OnEnterBoxComponentBeginOverlap");

	Params::CameraModifierVolumeActor_OnEnterBoxComponentBeginOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.CameraModifierVolumeActor.OnExitBoxBoxComponentEndOverlap
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACameraModifierVolumeActor::OnExitBoxBoxComponentEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraModifierVolumeActor", "OnExitBoxBoxComponentEndOverlap");

	Params::CameraModifierVolumeActor_OnExitBoxBoxComponentEndOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.CameraModifier_CameraBlur.InitializeBlend
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const float                             BlendInTime                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             BlendOutTime                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCameraModifier_CameraBlur::InitializeBlend(const float BlendInTime, const float BlendOutTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraModifier_CameraBlur", "InitializeBlend");

	Params::CameraModifier_CameraBlur_InitializeBlend Parms{};

	Parms.BlendInTime = BlendInTime;
	Parms.BlendOutTime = BlendOutTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.CameraModifier_CameraBlur.InitializeMotionBlur
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const float                             InBlurAmount                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             InBlurMax                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCameraModifier_CameraBlur::InitializeMotionBlur(const float InBlurAmount, const float InBlurMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraModifier_CameraBlur", "InitializeMotionBlur");

	Params::CameraModifier_CameraBlur_InitializeMotionBlur Parms{};

	Parms.InBlurAmount = InBlurAmount;
	Parms.InBlurMax = InBlurMax;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.CameraModifier_CameraBlur.InitializeRadiusBlur
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const float                             InOffset                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             InRadius                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             InHardness                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             InSwitchDir                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCameraModifier_CameraBlur::InitializeRadiusBlur(const float InOffset, const float InRadius, const float InHardness, const float InSwitchDir)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraModifier_CameraBlur", "InitializeRadiusBlur");

	Params::CameraModifier_CameraBlur_InitializeRadiusBlur Parms{};

	Parms.InOffset = InOffset;
	Parms.InRadius = InRadius;
	Parms.InHardness = InHardness;
	Parms.InSwitchDir = InSwitchDir;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.CustomNavLinkMoveInterface.OnLanded
// (Native, Event, Public, BlueprintEvent)

void ICustomNavLinkMoveInterface::OnLanded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomNavLinkMoveInterface", "OnLanded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.CustomNavLinkMoveInterface.OnLinkMoveRemoved
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UX6PathFollowingComponent*        PathComp                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ICustomNavLinkMoveInterface::OnLinkMoveRemoved(class UX6PathFollowingComponent* PathComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomNavLinkMoveInterface", "OnLinkMoveRemoved");

	Params::CustomNavLinkMoveInterface_OnLinkMoveRemoved Parms{};

	Parms.PathComp = PathComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.CustomNavLinkMoveInterface.OnLinkMoveStart
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// class UX6PathFollowingComponent*        PathComp                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   StartPoint                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   DestPoint                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ICustomNavLinkMoveInterface::OnLinkMoveStart(class UX6PathFollowingComponent* PathComp, const struct FVector& StartPoint, const struct FVector& DestPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomNavLinkMoveInterface", "OnLinkMoveStart");

	Params::CustomNavLinkMoveInterface_OnLinkMoveStart Parms{};

	Parms.PathComp = PathComp;
	Parms.StartPoint = std::move(StartPoint);
	Parms.DestPoint = std::move(DestPoint);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.CustomNavLinkMoveInterface.OnLinkMoveStop
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UX6PathFollowingComponent*        PathComp                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ICustomNavLinkMoveInterface::OnLinkMoveStop(class UX6PathFollowingComponent* PathComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomNavLinkMoveInterface", "OnLinkMoveStop");

	Params::CustomNavLinkMoveInterface_OnLinkMoveStop Parms{};

	Parms.PathComp = PathComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.CustomNavLinkMoveInterface.StopBlockDetectionInNavLink
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ICustomNavLinkMoveInterface::StopBlockDetectionInNavLink() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomNavLinkMoveInterface", "StopBlockDetectionInNavLink");

	Params::CustomNavLinkMoveInterface_StopBlockDetectionInNavLink Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.CustomNavLinkMoveInterface.StopCheckingReachTarget
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ICustomNavLinkMoveInterface::StopCheckingReachTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomNavLinkMoveInterface", "StopCheckingReachTarget");

	Params::CustomNavLinkMoveInterface_StopCheckingReachTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6TickObject.DeInit
// (Native, Event, Public, BlueprintEvent)

void UX6TickObject::DeInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6TickObject", "DeInit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6TickObject.Init
// (Native, Event, Public, BlueprintEvent)

void UX6TickObject::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6TickObject", "Init");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6TickObject.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6TickObject::ReceiveTick(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6TickObject", "ReceiveTick");

	Params::X6TickObject_ReceiveTick Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.X6TickObject.SetTickable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsTickable                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6TickObject::SetTickable(bool IsTickable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6TickObject", "SetTickable");

	Params::X6TickObject_SetTickable Parms{};

	Parms.IsTickable = IsTickable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6TickObject.SetTickableWhenPaused
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsTickableWhenPaused                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6TickObject::SetTickableWhenPaused(bool IsTickableWhenPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6TickObject", "SetTickableWhenPaused");

	Params::X6TickObject_SetTickableWhenPaused Parms{};

	Parms.IsTickableWhenPaused = IsTickableWhenPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.DaMiaoLocomotionAnimInstance.BlueprintPrepareDependencies
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDaMiaoLocomotionAnimInstance::BlueprintPrepareDependencies()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DaMiaoLocomotionAnimInstance", "BlueprintPrepareDependencies");

	Params::DaMiaoLocomotionAnimInstance_BlueprintPrepareDependencies Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.DaMiaoLocomotionAnimInstance.BlueprintUpdatePlayerStates
// (Event, Protected, BlueprintEvent)
// Parameters:
// const float                             DeltaSeconds                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDaMiaoLocomotionAnimInstance::BlueprintUpdatePlayerStates(const float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DaMiaoLocomotionAnimInstance", "BlueprintUpdatePlayerStates");

	Params::DaMiaoLocomotionAnimInstance_BlueprintUpdatePlayerStates Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.DaMiaoLocomotionAnimInstance.LoadDamiaoRelaxAnimCompeted
// (Final, Native, Public, HasOutParams)
// Parameters:
// int32                                   AsyncId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class UObject*>&           InLoadedObjects                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UDaMiaoLocomotionAnimInstance::LoadDamiaoRelaxAnimCompeted(int32 AsyncId, const TArray<class UObject*>& InLoadedObjects)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DaMiaoLocomotionAnimInstance", "LoadDamiaoRelaxAnimCompeted");

	Params::DaMiaoLocomotionAnimInstance_LoadDamiaoRelaxAnimCompeted Parms{};

	Parms.AsyncId = AsyncId;
	Parms.InLoadedObjects = std::move(InLoadedObjects);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.DaMiaoLocomotionAnimInstance.OnApplyAdditiveUpdate
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UDaMiaoLocomotionAnimInstance::OnApplyAdditiveUpdate(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DaMiaoLocomotionAnimInstance", "OnApplyAdditiveUpdate");

	Params::DaMiaoLocomotionAnimInstance_OnApplyAdditiveUpdate Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.DaMiaoLocomotionAnimInstance.OnCycleStateMachineUpdate
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UDaMiaoLocomotionAnimInstance::OnCycleStateMachineUpdate(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DaMiaoLocomotionAnimInstance", "OnCycleStateMachineUpdate");

	Params::DaMiaoLocomotionAnimInstance_OnCycleStateMachineUpdate Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.DaMiaoLocomotionAnimInstance.OnJumpStartStateBecomeRelevant
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UDaMiaoLocomotionAnimInstance::OnJumpStartStateBecomeRelevant(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DaMiaoLocomotionAnimInstance", "OnJumpStartStateBecomeRelevant");

	Params::DaMiaoLocomotionAnimInstance_OnJumpStartStateBecomeRelevant Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.DaMiaoLocomotionAnimInstance.OnLandRecoveryAdditiveStateBecomeRelevant
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UDaMiaoLocomotionAnimInstance::OnLandRecoveryAdditiveStateBecomeRelevant(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DaMiaoLocomotionAnimInstance", "OnLandRecoveryAdditiveStateBecomeRelevant");

	Params::DaMiaoLocomotionAnimInstance_OnLandRecoveryAdditiveStateBecomeRelevant Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.DaMiaoLocomotionAnimInstance.OnReJumpStateBecomeRelevant
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UDaMiaoLocomotionAnimInstance::OnReJumpStateBecomeRelevant(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DaMiaoLocomotionAnimInstance", "OnReJumpStateBecomeRelevant");

	Params::DaMiaoLocomotionAnimInstance_OnReJumpStateBecomeRelevant Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.DaMiaoLocomotionAnimInstance.OnStartLeanAdditiveBlendSpacePlayerUpdate
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UDaMiaoLocomotionAnimInstance::OnStartLeanAdditiveBlendSpacePlayerUpdate(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DaMiaoLocomotionAnimInstance", "OnStartLeanAdditiveBlendSpacePlayerUpdate");

	Params::DaMiaoLocomotionAnimInstance_OnStartLeanAdditiveBlendSpacePlayerUpdate Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.DaMiaoLocomotionAnimInstance.OnStartSequencePlayerUpdate
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UDaMiaoLocomotionAnimInstance::OnStartSequencePlayerUpdate(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DaMiaoLocomotionAnimInstance", "OnStartSequencePlayerUpdate");

	Params::DaMiaoLocomotionAnimInstance_OnStartSequencePlayerUpdate Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.DaMiaoLocomotionAnimInstance.OnStartStateBecomeRelevant
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UDaMiaoLocomotionAnimInstance::OnStartStateBecomeRelevant(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DaMiaoLocomotionAnimInstance", "OnStartStateBecomeRelevant");

	Params::DaMiaoLocomotionAnimInstance_OnStartStateBecomeRelevant Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.DaMiaoLocomotionAnimInstance.OnStartStateUpdate
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UDaMiaoLocomotionAnimInstance::OnStartStateUpdate(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DaMiaoLocomotionAnimInstance", "OnStartStateUpdate");

	Params::DaMiaoLocomotionAnimInstance_OnStartStateUpdate Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.DaMiaoLocomotionAnimInstance.OnStopSequencePlayerBecomeRelevant
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UDaMiaoLocomotionAnimInstance::OnStopSequencePlayerBecomeRelevant(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DaMiaoLocomotionAnimInstance", "OnStopSequencePlayerBecomeRelevant");

	Params::DaMiaoLocomotionAnimInstance_OnStopSequencePlayerBecomeRelevant Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.DaMiaoLocomotionAnimInstance.OnStopStateBecomeRelevant
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UDaMiaoLocomotionAnimInstance::OnStopStateBecomeRelevant(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DaMiaoLocomotionAnimInstance", "OnStopStateBecomeRelevant");

	Params::DaMiaoLocomotionAnimInstance_OnStopStateBecomeRelevant Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.DaMiaoLocomotionAnimInstance.OnTurnInPlaceStateBecomeRelevant
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UDaMiaoLocomotionAnimInstance::OnTurnInPlaceStateBecomeRelevant(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DaMiaoLocomotionAnimInstance", "OnTurnInPlaceStateBecomeRelevant");

	Params::DaMiaoLocomotionAnimInstance_OnTurnInPlaceStateBecomeRelevant Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.DaMiaoLocomotionAnimInstance.ReEnterJump
// (Final, Native, Protected, BlueprintCallable)

void UDaMiaoLocomotionAnimInstance::ReEnterJump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DaMiaoLocomotionAnimInstance", "ReEnterJump");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.DaMiaoLocomotionAnimInstance.ResetPendingGroundedLocomotionAnimSet
// (Final, Native, Public, BlueprintCallable)

void UDaMiaoLocomotionAnimInstance::ResetPendingGroundedLocomotionAnimSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DaMiaoLocomotionAnimInstance", "ResetPendingGroundedLocomotionAnimSet");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.DaMiaoLocomotionAnimInstance.SetDashState
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    IsInDash                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDaMiaoLocomotionAnimInstance::SetDashState(bool IsInDash)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DaMiaoLocomotionAnimInstance", "SetDashState");

	Params::DaMiaoLocomotionAnimInstance_SetDashState Parms{};

	Parms.IsInDash = IsInDash;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.DaMiaoLocomotionAnimInstance.SetPendingGroundedLocomotionAnimSet
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FDaMiaoGroundedLocomotionAnimSet&InGroundedLocomotionAnimSet                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UDaMiaoLocomotionAnimInstance::SetPendingGroundedLocomotionAnimSet(const struct FDaMiaoGroundedLocomotionAnimSet& InGroundedLocomotionAnimSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DaMiaoLocomotionAnimInstance", "SetPendingGroundedLocomotionAnimSet");

	Params::DaMiaoLocomotionAnimInstance_SetPendingGroundedLocomotionAnimSet Parms{};

	Parms.InGroundedLocomotionAnimSet = std::move(InGroundedLocomotionAnimSet);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.DaMiaoLocomotionAnimInstance.UpdateDamiaoFloatParam
// (Final, Native, Public)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDaMiaoLocomotionAnimInstance::UpdateDamiaoFloatParam(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DaMiaoLocomotionAnimInstance", "UpdateDamiaoFloatParam");

	Params::DaMiaoLocomotionAnimInstance_UpdateDamiaoFloatParam Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.DaMiaoLocomotionAnimInstance.UpdateNativeAllowGait
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const ENativePlayerLocomotionType       InGait                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDaMiaoLocomotionAnimInstance::UpdateNativeAllowGait(const ENativePlayerLocomotionType InGait)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DaMiaoLocomotionAnimInstance", "UpdateNativeAllowGait");

	Params::DaMiaoLocomotionAnimInstance_UpdateNativeAllowGait Parms{};

	Parms.InGait = InGait;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.DaMiaoLocomotionAnimInstance.UpdateNativeFloatingJumpStage
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const ENativePlayerFloatingJumpStage    InStage                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDaMiaoLocomotionAnimInstance::UpdateNativeFloatingJumpStage(const ENativePlayerFloatingJumpStage InStage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DaMiaoLocomotionAnimInstance", "UpdateNativeFloatingJumpStage");

	Params::DaMiaoLocomotionAnimInstance_UpdateNativeFloatingJumpStage Parms{};

	Parms.InStage = InStage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterMovementComponent.ClearGravityDisabledTags
// (Final, Native, Public, BlueprintCallable)

void UX6CharacterMovementComponent::ClearGravityDisabledTags()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterMovementComponent", "ClearGravityDisabledTags");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterMovementComponent.ClearMovementModeCache
// (Native, Public, BlueprintCallable)

void UX6CharacterMovementComponent::ClearMovementModeCache()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterMovementComponent", "ClearMovementModeCache");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterMovementComponent.DisableGravity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Tag                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CharacterMovementComponent::DisableGravity(class FName Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterMovementComponent", "DisableGravity");

	Params::X6CharacterMovementComponent_DisableGravity Parms{};

	Parms.Tag = Tag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterMovementComponent.EnableGravity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Tag                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CharacterMovementComponent::EnableGravity(class FName Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterMovementComponent", "EnableGravity");

	Params::X6CharacterMovementComponent_EnableGravity Parms{};

	Parms.Tag = Tag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterMovementComponent.FreezeX6CharacterMovement
// (Native, Public, BlueprintCallable)

void UX6CharacterMovementComponent::FreezeX6CharacterMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterMovementComponent", "FreezeX6CharacterMovement");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterMovementComponent.GetEnableInertiaVelocityProcess
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6CharacterMovementComponent::GetEnableInertiaVelocityProcess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterMovementComponent", "GetEnableInertiaVelocityProcess");

	Params::X6CharacterMovementComponent_GetEnableInertiaVelocityProcess Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterMovementComponent.IsRootMotionBrake2D
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6CharacterMovementComponent::IsRootMotionBrake2D()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterMovementComponent", "IsRootMotionBrake2D");

	Params::X6CharacterMovementComponent_IsRootMotionBrake2D Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterMovementComponent.IsX6CharacterMovementFrozen
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6CharacterMovementComponent::IsX6CharacterMovementFrozen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterMovementComponent", "IsX6CharacterMovementFrozen");

	Params::X6CharacterMovementComponent_IsX6CharacterMovementFrozen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterMovementComponent.K2_ForceUpdateBaseFromFloor
// (Native, Public, BlueprintCallable)

void UX6CharacterMovementComponent::K2_ForceUpdateBaseFromFloor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterMovementComponent", "K2_ForceUpdateBaseFromFloor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterMovementComponent.MulticastHasAnyAccelerationChanged
// (Net, Native, Event, NetMulticast, Protected, HasDefaults)
// Parameters:
// const bool                              bNewHasAnyAcceleration                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CharacterMovementComponent::MulticastHasAnyAccelerationChanged(const bool bNewHasAnyAcceleration, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterMovementComponent", "MulticastHasAnyAccelerationChanged");

	Params::X6CharacterMovementComponent_MulticastHasAnyAccelerationChanged Parms{};

	Parms.bNewHasAnyAcceleration = bNewHasAnyAcceleration;
	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterMovementComponent.SetBrakeWithRootMotion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bInBrakeWithRootMotion                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CharacterMovementComponent::SetBrakeWithRootMotion(const bool bInBrakeWithRootMotion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterMovementComponent", "SetBrakeWithRootMotion");

	Params::X6CharacterMovementComponent_SetBrakeWithRootMotion Parms{};

	Parms.bInBrakeWithRootMotion = bInBrakeWithRootMotion;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterMovementComponent.SetEnableInertiaVelocityProcess
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CharacterMovementComponent::SetEnableInertiaVelocityProcess(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterMovementComponent", "SetEnableInertiaVelocityProcess");

	Params::X6CharacterMovementComponent_SetEnableInertiaVelocityProcess Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterMovementComponent.SetEnableUpdateRegularMovementBase
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CharacterMovementComponent::SetEnableUpdateRegularMovementBase(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterMovementComponent", "SetEnableUpdateRegularMovementBase");

	Params::X6CharacterMovementComponent_SetEnableUpdateRegularMovementBase Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterMovementComponent.SetMovementModeAtCache
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6CharacterMovementComponent::SetMovementModeAtCache(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterMovementComponent", "SetMovementModeAtCache");

	Params::X6CharacterMovementComponent_SetMovementModeAtCache Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterMovementComponent.SetMovementModeWithTag
// (Native, Public, BlueprintCallable)
// Parameters:
// EMovementMode                           NewMovementMode                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   NewCustomMode                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Tag                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CharacterMovementComponent::SetMovementModeWithTag(EMovementMode NewMovementMode, uint8 NewCustomMode, class FName Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterMovementComponent", "SetMovementModeWithTag");

	Params::X6CharacterMovementComponent_SetMovementModeWithTag Parms{};

	Parms.NewMovementMode = NewMovementMode;
	Parms.NewCustomMode = NewCustomMode;
	Parms.Tag = Tag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterMovementComponent.SetRootMotionBrakeDistance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const float                             InBrakeDistance                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CharacterMovementComponent::SetRootMotionBrakeDistance(const float InBrakeDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterMovementComponent", "SetRootMotionBrakeDistance");

	Params::X6CharacterMovementComponent_SetRootMotionBrakeDistance Parms{};

	Parms.InBrakeDistance = InBrakeDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterMovementComponent.SetRootMotionBrakeDuration
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const float                             InBrakeDuration                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CharacterMovementComponent::SetRootMotionBrakeDuration(const float InBrakeDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterMovementComponent", "SetRootMotionBrakeDuration");

	Params::X6CharacterMovementComponent_SetRootMotionBrakeDuration Parms{};

	Parms.InBrakeDuration = InBrakeDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterMovementComponent.SetToPrevMovementMode
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6CharacterMovementComponent::SetToPrevMovementMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterMovementComponent", "SetToPrevMovementMode");

	Params::X6CharacterMovementComponent_SetToPrevMovementMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterMovementComponent.SetToTagMovementMode
// (Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Tag                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Previous                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6CharacterMovementComponent::SetToTagMovementMode(class FName Tag, int32 Previous)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterMovementComponent", "SetToTagMovementMode");

	Params::X6CharacterMovementComponent_SetToTagMovementMode Parms{};

	Parms.Tag = Tag;
	Parms.Previous = Previous;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterMovementComponent.StopActiveTurnInplace
// (Native, Public, BlueprintCallable)

void UX6CharacterMovementComponent::StopActiveTurnInplace()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterMovementComponent", "StopActiveTurnInplace");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterMovementComponent.UnfreezeX6CharacterMovement
// (Native, Public, BlueprintCallable)

void UX6CharacterMovementComponent::UnfreezeX6CharacterMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterMovementComponent", "UnfreezeX6CharacterMovement");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterMovementComponent.UpdateRegularMovementBaseVelocity
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CharacterMovementComponent::UpdateRegularMovementBaseVelocity(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterMovementComponent", "UpdateRegularMovementBaseVelocity");

	Params::X6CharacterMovementComponent_UpdateRegularMovementBaseVelocity Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterMovementComponent.X6_ClearComponentTickDisabledTags
// (Final, Native, Public, BlueprintCallable)

void UX6CharacterMovementComponent::X6_ClearComponentTickDisabledTags()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterMovementComponent", "X6_ClearComponentTickDisabledTags");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterMovementComponent.X6_GetComponentTickDisabledTags
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TSet<class FName>*                      OutTags                                                (Parm, OutParm, NativeAccessSpecifierPublic)

void UX6CharacterMovementComponent::X6_GetComponentTickDisabledTags(TSet<class FName>* OutTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterMovementComponent", "X6_GetComponentTickDisabledTags");

	Params::X6CharacterMovementComponent_X6_GetComponentTickDisabledTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTags != nullptr)
		*OutTags = std::move(Parms.OutTags);
}


// Function X6Game.X6CharacterMovementComponent.X6_SetComponentTickEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Tag                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6CharacterMovementComponent::X6_SetComponentTickEnabled(bool bEnabled, class FName Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterMovementComponent", "X6_SetComponentTickEnabled");

	Params::X6CharacterMovementComponent_X6_SetComponentTickEnabled Parms{};

	Parms.bEnabled = bEnabled;
	Parms.Tag = Tag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterMovementComponent.CanTurningInplace
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6CharacterMovementComponent::CanTurningInplace() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterMovementComponent", "CanTurningInplace");

	Params::X6CharacterMovementComponent_CanTurningInplace Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterMovementComponent.EnableUpdateRegularMovementBase
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6CharacterMovementComponent::EnableUpdateRegularMovementBase() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterMovementComponent", "EnableUpdateRegularMovementBase");

	Params::X6CharacterMovementComponent_EnableUpdateRegularMovementBase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterMovementComponent.GetBrakeWithRootMotion
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6CharacterMovementComponent::GetBrakeWithRootMotion() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterMovementComponent", "GetBrakeWithRootMotion");

	Params::X6CharacterMovementComponent_GetBrakeWithRootMotion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterMovementComponent.GetCurrentDynamicMovementBaseTransform
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FTransform                 ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FTransform UX6CharacterMovementComponent::GetCurrentDynamicMovementBaseTransform() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterMovementComponent", "GetCurrentDynamicMovementBaseTransform");

	Params::X6CharacterMovementComponent_GetCurrentDynamicMovementBaseTransform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterMovementComponent.GetLastDynamicMovementBaseTransform
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FTransform                 ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FTransform UX6CharacterMovementComponent::GetLastDynamicMovementBaseTransform() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterMovementComponent", "GetLastDynamicMovementBaseTransform");

	Params::X6CharacterMovementComponent_GetLastDynamicMovementBaseTransform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterMovementComponent.GetRegularMovementBaseVelocity
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UX6CharacterMovementComponent::GetRegularMovementBaseVelocity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterMovementComponent", "GetRegularMovementBaseVelocity");

	Params::X6CharacterMovementComponent_GetRegularMovementBaseVelocity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterMovementComponent.GetRootMotionBrakeDistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6CharacterMovementComponent::GetRootMotionBrakeDistance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterMovementComponent", "GetRootMotionBrakeDistance");

	Params::X6CharacterMovementComponent_GetRootMotionBrakeDistance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterMovementComponent.GetTransformAfterUpdateMovementBase
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FTransform                 ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FTransform UX6CharacterMovementComponent::GetTransformAfterUpdateMovementBase() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterMovementComponent", "GetTransformAfterUpdateMovementBase");

	Params::X6CharacterMovementComponent_GetTransformAfterUpdateMovementBase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterMovementComponent.GetTransformBeforeUpdateMovementBase
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FTransform                 ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FTransform UX6CharacterMovementComponent::GetTransformBeforeUpdateMovementBase() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterMovementComponent", "GetTransformBeforeUpdateMovementBase");

	Params::X6CharacterMovementComponent_GetTransformBeforeUpdateMovementBase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterMovementComponent.IsDisableGravity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6CharacterMovementComponent::IsDisableGravity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterMovementComponent", "IsDisableGravity");

	Params::X6CharacterMovementComponent_IsDisableGravity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterMovementComponent.IsRegularMovementBaseValid
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6CharacterMovementComponent::IsRegularMovementBaseValid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterMovementComponent", "IsRegularMovementBaseValid");

	Params::X6CharacterMovementComponent_IsRegularMovementBaseValid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CircularListEntry.OnEntryReleased
// (Event, Protected, BlueprintEvent)

void IX6CircularListEntry::OnEntryReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CircularListEntry", "OnEntryReleased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function X6Game.X6CircularListEntry.OnItemSelectionChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsSelected                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IX6CircularListEntry::OnItemSelectionChanged(bool bIsSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CircularListEntry", "OnItemSelectionChanged");

	Params::X6CircularListEntry_OnItemSelectionChanged Parms{};

	Parms.bIsSelected = bIsSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.X6CircularListEntry.OnListItemObjectSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UObject*                          ListItemObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IX6CircularListEntry::OnListItemObjectSet(class UObject* ListItemObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CircularListEntry", "OnListItemObjectSet");

	Params::X6CircularListEntry_OnListItemObjectSet Parms{};

	Parms.ListItemObject = ListItemObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.X6CircularListEntryLibrary.GetListItemObject
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TScriptInterface<class IX6CircularListEntry>X6CircularListEntry                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UX6CircularListEntryLibrary::GetListItemObject(TScriptInterface<class IX6CircularListEntry> X6CircularListEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CircularListEntryLibrary", "GetListItemObject");

	Params::X6CircularListEntryLibrary_GetListItemObject Parms{};

	Parms.X6CircularListEntry = X6CircularListEntry;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CircularListEntryLibrary.GetOwningListView
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TScriptInterface<class IX6CircularListEntry>X6CircularListEntry                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UX6CircularListView*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UX6CircularListView* UX6CircularListEntryLibrary::GetOwningListView(TScriptInterface<class IX6CircularListEntry> X6CircularListEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CircularListEntryLibrary", "GetOwningListView");

	Params::X6CircularListEntryLibrary_GetOwningListView Parms{};

	Parms.X6CircularListEntry = X6CircularListEntry;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CircularListEntryLibrary.IsListItemSelected
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TScriptInterface<class IX6CircularListEntry>X6CircularListEntry                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6CircularListEntryLibrary::IsListItemSelected(TScriptInterface<class IX6CircularListEntry> X6CircularListEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CircularListEntryLibrary", "IsListItemSelected");

	Params::X6CircularListEntryLibrary_IsListItemSelected Parms{};

	Parms.X6CircularListEntry = X6CircularListEntry;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.LocomotionRequestInterface.RequestEnableInterruptAnimation
// (Native, Event, Public, BlueprintEvent)

void ILocomotionRequestInterface::RequestEnableInterruptAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocomotionRequestInterface", "RequestEnableInterruptAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.LocomotionRequestInterface.RequestTurnInPlaceByAngle
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   InAngleToTurn                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void()>&                OnComplete                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void()>&                OnInterrupt                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ILocomotionRequestInterface::RequestTurnInPlaceByAngle(float InAngleToTurn, const TDelegate<void()>& OnComplete, const TDelegate<void()>& OnInterrupt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocomotionRequestInterface", "RequestTurnInPlaceByAngle");

	Params::LocomotionRequestInterface_RequestTurnInPlaceByAngle Parms{};

	Parms.InAngleToTurn = InAngleToTurn;
	Parms.OnComplete = OnComplete;
	Parms.OnInterrupt = OnInterrupt;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.LocomotionRequestInterface.SetCanInterruptPendingStopState
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const bool                              bCanInterrupt                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ILocomotionRequestInterface::SetCanInterruptPendingStopState(const bool bCanInterrupt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocomotionRequestInterface", "SetCanInterruptPendingStopState");

	Params::LocomotionRequestInterface_SetCanInterruptPendingStopState Parms{};

	Parms.bCanInterrupt = bCanInterrupt;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.LocomotionRequestInterface.CanEverTurnInPlace
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ILocomotionRequestInterface::CanEverTurnInPlace() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocomotionRequestInterface", "CanEverTurnInPlace");

	Params::LocomotionRequestInterface_CanEverTurnInPlace Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.LookAtLogicHandler.BlueprintDeinit
// (Event, Public, BlueprintEvent)

void ULookAtLogicHandler::BlueprintDeinit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LookAtLogicHandler", "BlueprintDeinit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function X6Game.LookAtLogicHandler.BlueprintInit
// (Event, Public, BlueprintEvent)
// Parameters:
// class UX6GeneralAnimationDataComponent* InOwnerComponent                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULookAtLogicHandler::BlueprintInit(class UX6GeneralAnimationDataComponent* InOwnerComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LookAtLogicHandler", "BlueprintInit");

	Params::LookAtLogicHandler_BlueprintInit Parms{};

	Parms.InOwnerComponent = InOwnerComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.LookAtLogicHandler.BlueprintTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULookAtLogicHandler::BlueprintTick(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LookAtLogicHandler", "BlueprintTick");

	Params::LookAtLogicHandler_BlueprintTick Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.LookAtLogicHandler.EyeBlinkOnce
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bRandomBlink                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForce                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULookAtLogicHandler::EyeBlinkOnce(bool bRandomBlink, bool bForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LookAtLogicHandler", "EyeBlinkOnce");

	Params::LookAtLogicHandler_EyeBlinkOnce Parms{};

	Parms.bRandomBlink = bRandomBlink;
	Parms.bForce = bForce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.LookAtLogicHandler.GetActorLookAtOffset
// (Native, Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ULookAtLogicHandler::GetActorLookAtOffset(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LookAtLogicHandler", "GetActorLookAtOffset");

	Params::LookAtLogicHandler_GetActorLookAtOffset Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.LookAtLogicHandler.OnEyeBlinkEnd
// (Final, Native, Public, BlueprintCallable)

void ULookAtLogicHandler::OnEyeBlinkEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LookAtLogicHandler", "OnEyeBlinkEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.LookAtLogicHandler.OnTurnInPlaceComplete
// (Final, Native, Private)

void ULookAtLogicHandler::OnTurnInPlaceComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LookAtLogicHandler", "OnTurnInPlaceComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.LookAtLogicHandler.OnTurnInPlaceInterrupted
// (Final, Native, Private)

void ULookAtLogicHandler::OnTurnInPlaceInterrupted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LookAtLogicHandler", "OnTurnInPlaceInterrupted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.LookAtLogicHandler.PauseLookAt
// (Final, Native, Public, BlueprintCallable)

void ULookAtLogicHandler::PauseLookAt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LookAtLogicHandler", "PauseLookAt");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.LookAtLogicHandler.ResumeLookAt
// (Final, Native, Public, BlueprintCallable)

void ULookAtLogicHandler::ResumeLookAt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LookAtLogicHandler", "ResumeLookAt");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.LookAtLogicHandler.SetCanOwnerActorDoLookAt
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bInCanOwnerActorDoLookAt                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULookAtLogicHandler::SetCanOwnerActorDoLookAt(bool bInCanOwnerActorDoLookAt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LookAtLogicHandler", "SetCanOwnerActorDoLookAt");

	Params::LookAtLogicHandler_SetCanOwnerActorDoLookAt Parms{};

	Parms.bInCanOwnerActorDoLookAt = bInCanOwnerActorDoLookAt;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.LookAtLogicHandler.GetOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* ULookAtLogicHandler::GetOwner() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LookAtLogicHandler", "GetOwner");

	Params::LookAtLogicHandler_GetOwner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.LookAtLogicHandler.GetOwnerComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UX6GeneralAnimationDataComponent* ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UX6GeneralAnimationDataComponent* ULookAtLogicHandler::GetOwnerComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LookAtLogicHandler", "GetOwnerComponent");

	Params::LookAtLogicHandler_GetOwnerComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.LookAtLogicHandler.IsEyeBlinking
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULookAtLogicHandler::IsEyeBlinking() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LookAtLogicHandler", "IsEyeBlinking");

	Params::LookAtLogicHandler_IsEyeBlinking Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6ActorComponent.AttributeChange
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    AttributeName                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6ActorComponent::AttributeChange(const class FString& AttributeName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ActorComponent", "AttributeChange");

	Params::X6ActorComponent_AttributeChange Parms{};

	Parms.AttributeName = std::move(AttributeName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ActorComponent.SetAttributeChangeToSave
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Change                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6ActorComponent::SetAttributeChangeToSave(bool Change)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ActorComponent", "SetAttributeChangeToSave");

	Params::X6ActorComponent_SetAttributeChangeToSave Parms{};

	Parms.Change = Change;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.MainCharacterRPCHelperBaseComponent.BP_OnMulticastRemoveLookAtActor
// (Event, Public, BlueprintEvent)
// Parameters:
// const ELookAtEventType                  LookAtEventType                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bClearAll                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMainCharacterRPCHelperBaseComponent::BP_OnMulticastRemoveLookAtActor(const ELookAtEventType LookAtEventType, class AActor* TargetActor, const bool bClearAll)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainCharacterRPCHelperBaseComponent", "BP_OnMulticastRemoveLookAtActor");

	Params::MainCharacterRPCHelperBaseComponent_BP_OnMulticastRemoveLookAtActor Parms{};

	Parms.LookAtEventType = LookAtEventType;
	Parms.TargetActor = TargetActor;
	Parms.bClearAll = bClearAll;

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.MainCharacterRPCHelperBaseComponent.BP_OnMulticastRemoveLookAtEventsByType
// (Event, Public, BlueprintEvent)
// Parameters:
// const ELookAtEventType                  LookAtEventType                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bClearAll                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMainCharacterRPCHelperBaseComponent::BP_OnMulticastRemoveLookAtEventsByType(const ELookAtEventType LookAtEventType, const bool bClearAll)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainCharacterRPCHelperBaseComponent", "BP_OnMulticastRemoveLookAtEventsByType");

	Params::MainCharacterRPCHelperBaseComponent_BP_OnMulticastRemoveLookAtEventsByType Parms{};

	Parms.LookAtEventType = LookAtEventType;
	Parms.bClearAll = bClearAll;

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.MainCharacterRPCHelperBaseComponent.BP_OnMulticastRemoveLookAtLocation
// (Event, Public, BlueprintEvent)
// Parameters:
// const ELookAtEventType                  LookAtEventType                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bClearAll                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMainCharacterRPCHelperBaseComponent::BP_OnMulticastRemoveLookAtLocation(const ELookAtEventType LookAtEventType, const bool bClearAll)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainCharacterRPCHelperBaseComponent", "BP_OnMulticastRemoveLookAtLocation");

	Params::MainCharacterRPCHelperBaseComponent_BP_OnMulticastRemoveLookAtLocation Parms{};

	Parms.LookAtEventType = LookAtEventType;
	Parms.bClearAll = bClearAll;

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.MainCharacterRPCHelperBaseComponent.BP_OnMulticastRequestLookAtActor
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const ELookAtEventType                  LookAtEventType                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLookAtRequestParams&      Params_0                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UMainCharacterRPCHelperBaseComponent::BP_OnMulticastRequestLookAtActor(const ELookAtEventType LookAtEventType, class AActor* TargetActor, const struct FLookAtRequestParams& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainCharacterRPCHelperBaseComponent", "BP_OnMulticastRequestLookAtActor");

	Params::MainCharacterRPCHelperBaseComponent_BP_OnMulticastRequestLookAtActor Parms{};

	Parms.LookAtEventType = LookAtEventType;
	Parms.TargetActor = TargetActor;
	Parms.Params_0 = std::move(Params_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.MainCharacterRPCHelperBaseComponent.BP_OnMulticastRequestLookAtLocation
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// const ELookAtEventType                  LookAtEventType                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   TargetLocation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMainCharacterRPCHelperBaseComponent::BP_OnMulticastRequestLookAtLocation(const ELookAtEventType LookAtEventType, const struct FVector& TargetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainCharacterRPCHelperBaseComponent", "BP_OnMulticastRequestLookAtLocation");

	Params::MainCharacterRPCHelperBaseComponent_BP_OnMulticastRequestLookAtLocation Parms{};

	Parms.LookAtEventType = LookAtEventType;
	Parms.TargetLocation = std::move(TargetLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.MainCharacterRPCHelperBaseComponent.Multicast_RemoveLookAtActor
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// const ELookAtEventType                  LookAtEventType                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bClearAll                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMainCharacterRPCHelperBaseComponent::Multicast_RemoveLookAtActor(const ELookAtEventType LookAtEventType, class AActor* TargetActor, const bool bClearAll)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainCharacterRPCHelperBaseComponent", "Multicast_RemoveLookAtActor");

	Params::MainCharacterRPCHelperBaseComponent_Multicast_RemoveLookAtActor Parms{};

	Parms.LookAtEventType = LookAtEventType;
	Parms.TargetActor = TargetActor;
	Parms.bClearAll = bClearAll;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.MainCharacterRPCHelperBaseComponent.Multicast_RemoveLookAtEventsByType
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// const ELookAtEventType                  LookAtEventType                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bClearAll                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMainCharacterRPCHelperBaseComponent::Multicast_RemoveLookAtEventsByType(const ELookAtEventType LookAtEventType, const bool bClearAll)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainCharacterRPCHelperBaseComponent", "Multicast_RemoveLookAtEventsByType");

	Params::MainCharacterRPCHelperBaseComponent_Multicast_RemoveLookAtEventsByType Parms{};

	Parms.LookAtEventType = LookAtEventType;
	Parms.bClearAll = bClearAll;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.MainCharacterRPCHelperBaseComponent.Multicast_RemoveLookAtLocation
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// const ELookAtEventType                  LookAtEventType                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bClearAll                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMainCharacterRPCHelperBaseComponent::Multicast_RemoveLookAtLocation(const ELookAtEventType LookAtEventType, const bool bClearAll)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainCharacterRPCHelperBaseComponent", "Multicast_RemoveLookAtLocation");

	Params::MainCharacterRPCHelperBaseComponent_Multicast_RemoveLookAtLocation Parms{};

	Parms.LookAtEventType = LookAtEventType;
	Parms.bClearAll = bClearAll;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.MainCharacterRPCHelperBaseComponent.Multicast_RequestLookAtActor
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// const ELookAtEventType                  LookAtEventType                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLookAtRequestParams&      Params_0                                               (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UMainCharacterRPCHelperBaseComponent::Multicast_RequestLookAtActor(const ELookAtEventType LookAtEventType, class AActor* TargetActor, const struct FLookAtRequestParams& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainCharacterRPCHelperBaseComponent", "Multicast_RequestLookAtActor");

	Params::MainCharacterRPCHelperBaseComponent_Multicast_RequestLookAtActor Parms{};

	Parms.LookAtEventType = LookAtEventType;
	Parms.TargetActor = TargetActor;
	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.MainCharacterRPCHelperBaseComponent.Multicast_RequestLookAtLocation
// (Net, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// const ELookAtEventType                  LookAtEventType                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   TargetLocation                                         (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMainCharacterRPCHelperBaseComponent::Multicast_RequestLookAtLocation(const ELookAtEventType LookAtEventType, const struct FVector& TargetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainCharacterRPCHelperBaseComponent", "Multicast_RequestLookAtLocation");

	Params::MainCharacterRPCHelperBaseComponent_Multicast_RequestLookAtLocation Parms{};

	Parms.LookAtEventType = LookAtEventType;
	Parms.TargetLocation = std::move(TargetLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.MaskWidget.AddMaskClickClip
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector2D&                 Position                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 Size                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       Mask                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMaskWidget::AddMaskClickClip(const struct FVector2D& Position, const struct FVector2D& Size, class UTexture2D* Mask)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaskWidget", "AddMaskClickClip");

	Params::MaskWidget_AddMaskClickClip Parms{};

	Parms.Position = std::move(Position);
	Parms.Size = std::move(Size);
	Parms.Mask = Mask;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.MaskWidget.EnableMaskClickClip
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int32&                            ClipIndex                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Enable                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaskWidget::EnableMaskClickClip(const int32& ClipIndex, bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaskWidget", "EnableMaskClickClip");

	Params::MaskWidget_EnableMaskClickClip Parms{};

	Parms.ClipIndex = ClipIndex;
	Parms.Enable = Enable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.MaskWidget.RemoveMaskClickClip
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int32&                            ClipIndex                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMaskWidget::RemoveMaskClickClip(const int32& ClipIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaskWidget", "RemoveMaskClickClip");

	Params::MaskWidget_RemoveMaskClickClip Parms{};

	Parms.ClipIndex = ClipIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.MaskWidget.SetBgColorAndOpacity
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FLinearColor&              InColorAndOpacity                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaskWidget::SetBgColorAndOpacity(const struct FLinearColor& InColorAndOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaskWidget", "SetBgColorAndOpacity");

	Params::MaskWidget_SetBgColorAndOpacity Parms{};

	Parms.InColorAndOpacity = std::move(InColorAndOpacity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.MaskWidget.SetBgImage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2D*                       Tex                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMatchSize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaskWidget::SetBgImage(class UTexture2D* Tex, bool bMatchSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaskWidget", "SetBgImage");

	Params::MaskWidget_SetBgImage Parms{};

	Parms.Tex = Tex;
	Parms.bMatchSize = bMatchSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.MaskWidget.SetBgOpacity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InOpacity                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaskWidget::SetBgOpacity(float InOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaskWidget", "SetBgOpacity");

	Params::MaskWidget_SetBgOpacity Parms{};

	Parms.InOpacity = InOpacity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.MaskWidget.SetBrushTintColor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FSlateColor&               TintColor                                              (Parm, NativeAccessSpecifierPublic)

void UMaskWidget::SetBrushTintColor(const struct FSlateColor& TintColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaskWidget", "SetBrushTintColor");

	Params::MaskWidget_SetBrushTintColor Parms{};

	Parms.TintColor = std::move(TintColor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.MaskWidget.SetMaskImage
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int32&                            ClipIndex                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       Tex                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaskWidget::SetMaskImage(const int32& ClipIndex, class UTexture2D* Tex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaskWidget", "SetMaskImage");

	Params::MaskWidget_SetMaskImage Parms{};

	Parms.ClipIndex = ClipIndex;
	Parms.Tex = Tex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.MaskWidget.SetMaskPos
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const int32&                            ClipIndex                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 Pos                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaskWidget::SetMaskPos(const int32& ClipIndex, const struct FVector2D& Pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaskWidget", "SetMaskPos");

	Params::MaskWidget_SetMaskPos Parms{};

	Parms.ClipIndex = ClipIndex;
	Parms.Pos = std::move(Pos);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.MaskWidget.SetMaskPosSize
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const int32&                            ClipIndex                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector4&                  PosSize                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaskWidget::SetMaskPosSize(const int32& ClipIndex, const struct FVector4& PosSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaskWidget", "SetMaskPosSize");

	Params::MaskWidget_SetMaskPosSize Parms{};

	Parms.ClipIndex = ClipIndex;
	Parms.PosSize = std::move(PosSize);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.MaskWidget.SetMaskPosSizeXYZW
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int32&                            ClipIndex                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float&                            X                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float&                            Y                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float&                            Z                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float&                            W                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaskWidget::SetMaskPosSizeXYZW(const int32& ClipIndex, const float& X, const float& Y, const float& Z, const float& W)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaskWidget", "SetMaskPosSizeXYZW");

	Params::MaskWidget_SetMaskPosSizeXYZW Parms{};

	Parms.ClipIndex = ClipIndex;
	Parms.X = X;
	Parms.Y = Y;
	Parms.Z = Z;
	Parms.W = W;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.MaskWidget.SetMaskPosXY
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int32&                            ClipIndex                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float&                            X                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float&                            Y                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaskWidget::SetMaskPosXY(const int32& ClipIndex, const float& X, const float& Y)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaskWidget", "SetMaskPosXY");

	Params::MaskWidget_SetMaskPosXY Parms{};

	Parms.ClipIndex = ClipIndex;
	Parms.X = X;
	Parms.Y = Y;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.MaskWidget.SetMaskSize
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const int32&                            ClipIndex                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 Size                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaskWidget::SetMaskSize(const int32& ClipIndex, const struct FVector2D& Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaskWidget", "SetMaskSize");

	Params::MaskWidget_SetMaskSize Parms{};

	Parms.ClipIndex = ClipIndex;
	Parms.Size = std::move(Size);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.MaskWidget.SetMaskSizeXY
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int32&                            ClipIndex                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float&                            X                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float&                            Y                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaskWidget::SetMaskSizeXY(const int32& ClipIndex, const float& X, const float& Y)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaskWidget", "SetMaskSizeXY");

	Params::MaskWidget_SetMaskSizeXY Parms{};

	Parms.ClipIndex = ClipIndex;
	Parms.X = X;
	Parms.Y = Y;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.NikkiClothAnimInstance.UpdateSitRigCurveValue
// (Final, Native, Private)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNikkiClothAnimInstance::UpdateSitRigCurveValue(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NikkiClothAnimInstance", "UpdateSitRigCurveValue");

	Params::NikkiClothAnimInstance_UpdateSitRigCurveValue Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.NikkiJumpLocomotionAnimInstance.SetJumpMainState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ENikkiJumpState                         InJumpState                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNikkiJumpLocomotionAnimInstance::SetJumpMainState(ENikkiJumpState InJumpState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NikkiJumpLocomotionAnimInstance", "SetJumpMainState");

	Params::NikkiJumpLocomotionAnimInstance_SetJumpMainState Parms{};

	Parms.InJumpState = InJumpState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.NikkiJumpLocomotionAnimInstance.SetJumpState_Fall
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ENikkiJumpState_Fall                    InFall                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNikkiJumpLocomotionAnimInstance::SetJumpState_Fall(ENikkiJumpState_Fall InFall)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NikkiJumpLocomotionAnimInstance", "SetJumpState_Fall");

	Params::NikkiJumpLocomotionAnimInstance_SetJumpState_Fall Parms{};

	Parms.InFall = InFall;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.NikkiJumpLocomotionAnimInstance.SetJumpState_TakeOff
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ENikkiJumpState_TakeOff                 InTakeOff                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNikkiJumpLocomotionAnimInstance::SetJumpState_TakeOff(ENikkiJumpState_TakeOff InTakeOff)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NikkiJumpLocomotionAnimInstance", "SetJumpState_TakeOff");

	Params::NikkiJumpLocomotionAnimInstance_SetJumpState_TakeOff Parms{};

	Parms.InTakeOff = InTakeOff;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.NikkiMovementComponent.K2_CrouchWithEvent
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bClientSimulation                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNikkiMovementComponent::K2_CrouchWithEvent(bool bClientSimulation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NikkiMovementComponent", "K2_CrouchWithEvent");

	Params::NikkiMovementComponent_K2_CrouchWithEvent Parms{};

	Parms.bClientSimulation = bClientSimulation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.NikkiMovementComponent.K2_IsValidLandingSpot
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   CapsuleLocation                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNikkiMovementComponent::K2_IsValidLandingSpot(const struct FVector& CapsuleLocation, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NikkiMovementComponent", "K2_IsValidLandingSpot");

	Params::NikkiMovementComponent_K2_IsValidLandingSpot Parms{};

	Parms.CapsuleLocation = std::move(CapsuleLocation);
	Parms.Hit = std::move(Hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.NikkiMovementComponent.K2_StepUp
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   GravDir                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Delta                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNikkiMovementComponent::K2_StepUp(const struct FVector& GravDir, const struct FVector& Delta, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NikkiMovementComponent", "K2_StepUp");

	Params::NikkiMovementComponent_K2_StepUp Parms{};

	Parms.GravDir = std::move(GravDir);
	Parms.Delta = std::move(Delta);
	Parms.Hit = std::move(Hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.NPCLocomotionTemplateBase.OnAutomaticRuleStateUpdate
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UNPCLocomotionTemplateBase::OnAutomaticRuleStateUpdate(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCLocomotionTemplateBase", "OnAutomaticRuleStateUpdate");

	Params::NPCLocomotionTemplateBase_OnAutomaticRuleStateUpdate Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.NPCLocomotionTemplateBase.OnMirrorIdleTransitionSequencePlayerBecomeRelevant
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UNPCLocomotionTemplateBase::OnMirrorIdleTransitionSequencePlayerBecomeRelevant(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCLocomotionTemplateBase", "OnMirrorIdleTransitionSequencePlayerBecomeRelevant");

	Params::NPCLocomotionTemplateBase_OnMirrorIdleTransitionSequencePlayerBecomeRelevant Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.NPCLocomotionTemplateBase.OnOutputPoseBecomeRelevant
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UNPCLocomotionTemplateBase::OnOutputPoseBecomeRelevant(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCLocomotionTemplateBase", "OnOutputPoseBecomeRelevant");

	Params::NPCLocomotionTemplateBase_OnOutputPoseBecomeRelevant Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.NPCLocomotionTemplateBase.OnOutputPoseInitialUpdate
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UNPCLocomotionTemplateBase::OnOutputPoseInitialUpdate(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCLocomotionTemplateBase", "OnOutputPoseInitialUpdate");

	Params::NPCLocomotionTemplateBase_OnOutputPoseInitialUpdate Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.NPCLocomotionTemplateBase.OnStarFSequencePlayerBecomeRelevant
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UNPCLocomotionTemplateBase::OnStarFSequencePlayerBecomeRelevant(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCLocomotionTemplateBase", "OnStarFSequencePlayerBecomeRelevant");

	Params::NPCLocomotionTemplateBase_OnStarFSequencePlayerBecomeRelevant Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.NPCLocomotionTemplateBase.OnStarL180SequencePlayerBecomeRelevant
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UNPCLocomotionTemplateBase::OnStarL180SequencePlayerBecomeRelevant(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCLocomotionTemplateBase", "OnStarL180SequencePlayerBecomeRelevant");

	Params::NPCLocomotionTemplateBase_OnStarL180SequencePlayerBecomeRelevant Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.NPCLocomotionTemplateBase.OnStarL90SequencePlayerBecomeRelevant
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UNPCLocomotionTemplateBase::OnStarL90SequencePlayerBecomeRelevant(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCLocomotionTemplateBase", "OnStarL90SequencePlayerBecomeRelevant");

	Params::NPCLocomotionTemplateBase_OnStarL90SequencePlayerBecomeRelevant Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.NPCLocomotionTemplateBase.OnStartStateBecomeRelevant
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UNPCLocomotionTemplateBase::OnStartStateBecomeRelevant(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCLocomotionTemplateBase", "OnStartStateBecomeRelevant");

	Params::NPCLocomotionTemplateBase_OnStartStateBecomeRelevant Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.NPCLocomotionTemplateBase.OnStopL0SequencePlayerBecomeRelevant
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UNPCLocomotionTemplateBase::OnStopL0SequencePlayerBecomeRelevant(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCLocomotionTemplateBase", "OnStopL0SequencePlayerBecomeRelevant");

	Params::NPCLocomotionTemplateBase_OnStopL0SequencePlayerBecomeRelevant Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.NPCLocomotionTemplateBase.OnStopL180SequencePlayerBecomeRelevant
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UNPCLocomotionTemplateBase::OnStopL180SequencePlayerBecomeRelevant(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCLocomotionTemplateBase", "OnStopL180SequencePlayerBecomeRelevant");

	Params::NPCLocomotionTemplateBase_OnStopL180SequencePlayerBecomeRelevant Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.NPCLocomotionTemplateBase.OnStopL90SequencePlayerBecomeRelevant
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UNPCLocomotionTemplateBase::OnStopL90SequencePlayerBecomeRelevant(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCLocomotionTemplateBase", "OnStopL90SequencePlayerBecomeRelevant");

	Params::NPCLocomotionTemplateBase_OnStopL90SequencePlayerBecomeRelevant Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.NPCLocomotionTemplateBase.OnStopSequencePlayerUpdate
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UNPCLocomotionTemplateBase::OnStopSequencePlayerUpdate(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCLocomotionTemplateBase", "OnStopSequencePlayerUpdate");

	Params::NPCLocomotionTemplateBase_OnStopSequencePlayerUpdate Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.NPCLocomotionTemplateBase.OnStopStateBecomeRelevant
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UNPCLocomotionTemplateBase::OnStopStateBecomeRelevant(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCLocomotionTemplateBase", "OnStopStateBecomeRelevant");

	Params::NPCLocomotionTemplateBase_OnStopStateBecomeRelevant Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.NPCLocomotionTemplateBase.OnStopStateUpdate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UNPCLocomotionTemplateBase::OnStopStateUpdate(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCLocomotionTemplateBase", "OnStopStateUpdate");

	Params::NPCLocomotionTemplateBase_OnStopStateUpdate Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.NPCLocomotionTemplateBase.OnTurnInPlaceStateBecomeRelevant
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UNPCLocomotionTemplateBase::OnTurnInPlaceStateBecomeRelevant(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCLocomotionTemplateBase", "OnTurnInPlaceStateBecomeRelevant");

	Params::NPCLocomotionTemplateBase_OnTurnInPlaceStateBecomeRelevant Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.PlayerJumpPromptLineProcessor.CanDoMantleInFalling
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// const struct FVector&                   CapsuleBaseLocation                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   CurrentPlayerInputVector                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   CurActorLocation                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerJumpPromptLineProcessor::CanDoMantleInFalling(const struct FVector& CapsuleBaseLocation, const struct FVector& CurrentPlayerInputVector, const struct FVector& CurActorLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerJumpPromptLineProcessor", "CanDoMantleInFalling");

	Params::PlayerJumpPromptLineProcessor_CanDoMantleInFalling Parms{};

	Parms.CapsuleBaseLocation = std::move(CapsuleBaseLocation);
	Parms.CurrentPlayerInputVector = std::move(CurrentPlayerInputVector);
	Parms.CurActorLocation = std::move(CurActorLocation);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function X6Game.PlayerJumpPromptLineProcessor.CanDrawPredictJumpCurve
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerJumpPromptLineProcessor::CanDrawPredictJumpCurve()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerJumpPromptLineProcessor", "CanDrawPredictJumpCurve");

	Params::PlayerJumpPromptLineProcessor_CanDrawPredictJumpCurve Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.PlayerJumpPromptLineProcessor.CanDrawRealTimeJumpCurve
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   CurrentSpeedXY                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerJumpPromptLineProcessor::CanDrawRealTimeJumpCurve(float CurrentSpeedXY)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerJumpPromptLineProcessor", "CanDrawRealTimeJumpCurve");

	Params::PlayerJumpPromptLineProcessor_CanDrawRealTimeJumpCurve Parms{};

	Parms.CurrentSpeedXY = CurrentSpeedXY;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.PlayerJumpPromptLineProcessor.DebugDrawPredicJumpCurveLineInWorldSpace
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// const struct FVector&                   WorldStartLocation                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FVector>&           CurveTrack                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FLinearColor&              LineColor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerJumpPromptLineProcessor::DebugDrawPredicJumpCurveLineInWorldSpace(const struct FVector& WorldStartLocation, const TArray<struct FVector>& CurveTrack, const struct FLinearColor& LineColor, float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerJumpPromptLineProcessor", "DebugDrawPredicJumpCurveLineInWorldSpace");

	Params::PlayerJumpPromptLineProcessor_DebugDrawPredicJumpCurveLineInWorldSpace Parms{};

	Parms.WorldStartLocation = std::move(WorldStartLocation);
	Parms.CurveTrack = std::move(CurveTrack);
	Parms.LineColor = std::move(LineColor);
	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.PlayerJumpPromptLineProcessor.Deinitialize
// (Native, Event, Public, BlueprintEvent)

void UPlayerJumpPromptLineProcessor::Deinitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerJumpPromptLineProcessor", "Deinitialize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.PlayerJumpPromptLineProcessor.DrawPredictJumpCurve
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   CosntGravityZ                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerJumpPromptLineProcessor::DrawPredictJumpCurve(float CosntGravityZ, float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerJumpPromptLineProcessor", "DrawPredictJumpCurve");

	Params::PlayerJumpPromptLineProcessor_DrawPredictJumpCurve Parms{};

	Parms.CosntGravityZ = CosntGravityZ;
	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.PlayerJumpPromptLineProcessor.EnableJumpPromptLineFeature
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Tag                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerJumpPromptLineProcessor::EnableJumpPromptLineFeature(bool bEnable, class FName Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerJumpPromptLineProcessor", "EnableJumpPromptLineFeature");

	Params::PlayerJumpPromptLineProcessor_EnableJumpPromptLineFeature Parms{};

	Parms.bEnable = bEnable;
	Parms.Tag = Tag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.PlayerJumpPromptLineProcessor.HasPlayerStateToHideJumpCurve
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerJumpPromptLineProcessor::HasPlayerStateToHideJumpCurve()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerJumpPromptLineProcessor", "HasPlayerStateToHideJumpCurve");

	Params::PlayerJumpPromptLineProcessor_HasPlayerStateToHideJumpCurve Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.PlayerJumpPromptLineProcessor.IsEnableJumpPromptLineFeature
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerJumpPromptLineProcessor::IsEnableJumpPromptLineFeature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerJumpPromptLineProcessor", "IsEnableJumpPromptLineFeature");

	Params::PlayerJumpPromptLineProcessor_IsEnableJumpPromptLineFeature Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.PlayerJumpPromptLineProcessor.IsFXAssetLoaded
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerJumpPromptLineProcessor::IsFXAssetLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerJumpPromptLineProcessor", "IsFXAssetLoaded");

	Params::PlayerJumpPromptLineProcessor_IsFXAssetLoaded Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.PlayerJumpPromptLineProcessor.IsFXAssetPathNotNull
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerJumpPromptLineProcessor::IsFXAssetPathNotNull()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerJumpPromptLineProcessor", "IsFXAssetPathNotNull");

	Params::PlayerJumpPromptLineProcessor_IsFXAssetPathNotNull Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.PlayerJumpPromptLineProcessor.IsJumpCurveCanShow
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerJumpPromptLineProcessor::IsJumpCurveCanShow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerJumpPromptLineProcessor", "IsJumpCurveCanShow");

	Params::PlayerJumpPromptLineProcessor_IsJumpCurveCanShow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.PlayerJumpPromptLineProcessor.OnInitialize
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ACharacter*                       Owner                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UX6RMWalkingComponent*            X6RMWalkingComponent                                   (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UX6RMInAirComponent*              X6RMInAirComponent                                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerJumpPromptLineProcessor::OnInitialize(class ACharacter* Owner, class UX6RMWalkingComponent* X6RMWalkingComponent, class UX6RMInAirComponent* X6RMInAirComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerJumpPromptLineProcessor", "OnInitialize");

	Params::PlayerJumpPromptLineProcessor_OnInitialize Parms{};

	Parms.Owner = Owner;
	Parms.X6RMWalkingComponent = X6RMWalkingComponent;
	Parms.X6RMInAirComponent = X6RMInAirComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.PlayerJumpPromptLineProcessor.SetEnableJumpPromptLineFeature
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerJumpPromptLineProcessor::SetEnableJumpPromptLineFeature(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerJumpPromptLineProcessor", "SetEnableJumpPromptLineFeature");

	Params::PlayerJumpPromptLineProcessor_SetEnableJumpPromptLineFeature Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.PlayerJumpPromptLineProcessor.SetHasPlayerStateToHideJumpCurve
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerJumpPromptLineProcessor::SetHasPlayerStateToHideJumpCurve(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerJumpPromptLineProcessor", "SetHasPlayerStateToHideJumpCurve");

	Params::PlayerJumpPromptLineProcessor_SetHasPlayerStateToHideJumpCurve Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.PlayerJumpPromptLineProcessor.SetJumpCurveCanShow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerJumpPromptLineProcessor::SetJumpCurveCanShow(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerJumpPromptLineProcessor", "SetJumpCurveCanShow");

	Params::PlayerJumpPromptLineProcessor_SetJumpCurveCanShow Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.PlayerJumpPromptLineProcessor.TryPointToPointJumping
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   SourcePoint                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   TargetPoint                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector*                         OutVelocity                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SteppingSimulationTime                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CosntGravityZ                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxSimulationTime                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    EnableDebugDraw                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerJumpPromptLineProcessor::TryPointToPointJumping(const struct FVector& SourcePoint, const struct FVector& TargetPoint, struct FVector* OutVelocity, float SteppingSimulationTime, float CosntGravityZ, float MaxSimulationTime, bool EnableDebugDraw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerJumpPromptLineProcessor", "TryPointToPointJumping");

	Params::PlayerJumpPromptLineProcessor_TryPointToPointJumping Parms{};

	Parms.SourcePoint = std::move(SourcePoint);
	Parms.TargetPoint = std::move(TargetPoint);
	Parms.SteppingSimulationTime = SteppingSimulationTime;
	Parms.CosntGravityZ = CosntGravityZ;
	Parms.MaxSimulationTime = MaxSimulationTime;
	Parms.EnableDebugDraw = EnableDebugDraw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVelocity != nullptr)
		*OutVelocity = std::move(Parms.OutVelocity);

	return Parms.ReturnValue;
}


// Function X6Game.PlayerLocomotionLogicProxy.CaculateCurRotationActorInterpSpeed
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FRotator&                  CurrentCameraRotation                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// const struct FRotator&                  PreCameraRotation                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   CameraRYawClampUpperLimit                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CurveSampleValue                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                      RotateCurve                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                      RAngleToRYawSpeedRateMappingCurve                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CurrentTurnAroundAngle                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPlayerLocomotionLogicProxy::CaculateCurRotationActorInterpSpeed(const struct FRotator& CurrentCameraRotation, const struct FRotator& PreCameraRotation, float CameraRYawClampUpperLimit, float CurveSampleValue, float DeltaSeconds, class UCurveFloat* RotateCurve, class UCurveFloat* RAngleToRYawSpeedRateMappingCurve, float CurrentTurnAroundAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerLocomotionLogicProxy", "CaculateCurRotationActorInterpSpeed");

	Params::PlayerLocomotionLogicProxy_CaculateCurRotationActorInterpSpeed Parms{};

	Parms.CurrentCameraRotation = std::move(CurrentCameraRotation);
	Parms.PreCameraRotation = std::move(PreCameraRotation);
	Parms.CameraRYawClampUpperLimit = CameraRYawClampUpperLimit;
	Parms.CurveSampleValue = CurveSampleValue;
	Parms.DeltaSeconds = DeltaSeconds;
	Parms.RotateCurve = RotateCurve;
	Parms.RAngleToRYawSpeedRateMappingCurve = RAngleToRYawSpeedRateMappingCurve;
	Parms.CurrentTurnAroundAngle = CurrentTurnAroundAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.PlayerLocomotionLogicProxy.GatherCurrentCameraInformation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           PlayerCameraManager                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInputValid                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerLocomotionLogicProxy::GatherCurrentCameraInformation(class AActor* PlayerCameraManager, bool bInputValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerLocomotionLogicProxy", "GatherCurrentCameraInformation");

	Params::PlayerLocomotionLogicProxy_GatherCurrentCameraInformation Parms{};

	Parms.PlayerCameraManager = PlayerCameraManager;
	Parms.bInputValid = bInputValid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.PlayerLocomotionLogicProxy.GetCurFrameInputContext
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FFrameInputContext               ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FFrameInputContext UPlayerLocomotionLogicProxy::GetCurFrameInputContext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerLocomotionLogicProxy", "GetCurFrameInputContext");

	Params::PlayerLocomotionLogicProxy_GetCurFrameInputContext Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.PlayerLocomotionLogicProxy.GetMappedSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCharacterMovementComponent*      CharacterMovementComponent                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LowerSpeedVal                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MiddleSpeedVal                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   HighSpeedVal                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPlayerLocomotionLogicProxy::GetMappedSpeed(class UCharacterMovementComponent* CharacterMovementComponent, float LowerSpeedVal, float MiddleSpeedVal, float HighSpeedVal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerLocomotionLogicProxy", "GetMappedSpeed");

	Params::PlayerLocomotionLogicProxy_GetMappedSpeed Parms{};

	Parms.CharacterMovementComponent = CharacterMovementComponent;
	Parms.LowerSpeedVal = LowerSpeedVal;
	Parms.MiddleSpeedVal = MiddleSpeedVal;
	Parms.HighSpeedVal = HighSpeedVal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.PlayerLocomotionLogicProxy.GetTurnAroundAngle
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   InputMovingDirection                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   CurrentForwardVector                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPlayerLocomotionLogicProxy::GetTurnAroundAngle(const struct FVector& InputMovingDirection, const struct FVector& CurrentForwardVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerLocomotionLogicProxy", "GetTurnAroundAngle");

	Params::PlayerLocomotionLogicProxy_GetTurnAroundAngle Parms{};

	Parms.InputMovingDirection = std::move(InputMovingDirection);
	Parms.CurrentForwardVector = std::move(CurrentForwardVector);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.PlayerLocomotionLogicProxy.InitCameraContext
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FRotator&                  CurrentCameraRotation                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// const struct FRotator&                  PreCameraRotation                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bCameraStateChanged                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOnNewTargetCameraBlendEnd                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerLocomotionLogicProxy::InitCameraContext(const struct FRotator& CurrentCameraRotation, const struct FRotator& PreCameraRotation, bool bCameraStateChanged, bool bOnNewTargetCameraBlendEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerLocomotionLogicProxy", "InitCameraContext");

	Params::PlayerLocomotionLogicProxy_InitCameraContext Parms{};

	Parms.CurrentCameraRotation = std::move(CurrentCameraRotation);
	Parms.PreCameraRotation = std::move(PreCameraRotation);
	Parms.bCameraStateChanged = bCameraStateChanged;
	Parms.bOnNewTargetCameraBlendEnd = bOnNewTargetCameraBlendEnd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.PlayerLocomotionLogicProxy.InitInputConfigData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   LogicalFramesPerSecond                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PreStartFrames                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnableStartMovingInputCache                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartMovingInputCacheFrames                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnableMutationCache                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MutationInputCacheFrames                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnableInvalidInput                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InvalidInputFrames                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MutationInputSizeThreshold                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MutationInputDirectionThreshold                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerLocomotionLogicProxy::InitInputConfigData(float LogicalFramesPerSecond, float PreStartFrames, bool bEnableStartMovingInputCache, float StartMovingInputCacheFrames, bool bEnableMutationCache, float MutationInputCacheFrames, bool bEnableInvalidInput, float InvalidInputFrames, float MutationInputSizeThreshold, float MutationInputDirectionThreshold)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerLocomotionLogicProxy", "InitInputConfigData");

	Params::PlayerLocomotionLogicProxy_InitInputConfigData Parms{};

	Parms.LogicalFramesPerSecond = LogicalFramesPerSecond;
	Parms.PreStartFrames = PreStartFrames;
	Parms.bEnableStartMovingInputCache = bEnableStartMovingInputCache;
	Parms.StartMovingInputCacheFrames = StartMovingInputCacheFrames;
	Parms.bEnableMutationCache = bEnableMutationCache;
	Parms.MutationInputCacheFrames = MutationInputCacheFrames;
	Parms.bEnableInvalidInput = bEnableInvalidInput;
	Parms.InvalidInputFrames = InvalidInputFrames;
	Parms.MutationInputSizeThreshold = MutationInputSizeThreshold;
	Parms.MutationInputDirectionThreshold = MutationInputDirectionThreshold;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.PlayerLocomotionLogicProxy.IsEnableMutationCache
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerLocomotionLogicProxy::IsEnableMutationCache()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerLocomotionLogicProxy", "IsEnableMutationCache");

	Params::PlayerLocomotionLogicProxy_IsEnableMutationCache Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.PlayerLocomotionLogicProxy.IsNeedStartMovingCache
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerLocomotionLogicProxy::IsNeedStartMovingCache()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerLocomotionLogicProxy", "IsNeedStartMovingCache");

	Params::PlayerLocomotionLogicProxy_IsNeedStartMovingCache Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.PlayerLocomotionLogicProxy.ProcessBasicOnGroundTurnAroundMovementLogic
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UCharacterMovementComponent*      CharacterMovementComponent                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator*                        CurrentTargetRotation                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// const struct FVector&                   InputMovingDirection                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RotationTargetInterpSpeed                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RotationActorInterpSpeed                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPlayerLocomotionLogicProxy::ProcessBasicOnGroundTurnAroundMovementLogic(class UCharacterMovementComponent* CharacterMovementComponent, struct FRotator* CurrentTargetRotation, const struct FVector& InputMovingDirection, float RotationTargetInterpSpeed, float RotationActorInterpSpeed, float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerLocomotionLogicProxy", "ProcessBasicOnGroundTurnAroundMovementLogic");

	Params::PlayerLocomotionLogicProxy_ProcessBasicOnGroundTurnAroundMovementLogic Parms{};

	Parms.CharacterMovementComponent = CharacterMovementComponent;
	Parms.InputMovingDirection = std::move(InputMovingDirection);
	Parms.RotationTargetInterpSpeed = RotationTargetInterpSpeed;
	Parms.RotationActorInterpSpeed = RotationActorInterpSpeed;
	Parms.DeltaSeconds = DeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CurrentTargetRotation != nullptr)
		*CurrentTargetRotation = std::move(Parms.CurrentTargetRotation);

	return Parms.ReturnValue;
}


// Function X6Game.PlayerLocomotionLogicProxy.ProcessInputValueCacheLogic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsMoving                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerLocomotionLogicProxy::ProcessInputValueCacheLogic(float DeltaSeconds, bool bIsMoving)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerLocomotionLogicProxy", "ProcessInputValueCacheLogic");

	Params::PlayerLocomotionLogicProxy_ProcessInputValueCacheLogic Parms{};

	Parms.DeltaSeconds = DeltaSeconds;
	Parms.bIsMoving = bIsMoving;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.PlayerLocomotionLogicProxy.RecordCurInputInformation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   CurrentInputValForMoveForward                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CurrentInputValForMoveRight                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PreInputValForMoveForward                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PreInputValForMoveRight                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerLocomotionLogicProxy::RecordCurInputInformation(float CurrentInputValForMoveForward, float CurrentInputValForMoveRight, float PreInputValForMoveForward, float PreInputValForMoveRight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerLocomotionLogicProxy", "RecordCurInputInformation");

	Params::PlayerLocomotionLogicProxy_RecordCurInputInformation Parms{};

	Parms.CurrentInputValForMoveForward = CurrentInputValForMoveForward;
	Parms.CurrentInputValForMoveRight = CurrentInputValForMoveRight;
	Parms.PreInputValForMoveForward = PreInputValForMoveForward;
	Parms.PreInputValForMoveRight = PreInputValForMoveRight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.PlayerLocomotionLogicProxy.ReplayCameraContext
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator*                        CurrentCameraRotation                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FRotator*                        PreCameraRotation                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool*                                   bCameraStateChanged                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   bOnNewTargetCameraBlendEnd                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerLocomotionLogicProxy::ReplayCameraContext(struct FRotator* CurrentCameraRotation, struct FRotator* PreCameraRotation, bool* bCameraStateChanged, bool* bOnNewTargetCameraBlendEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerLocomotionLogicProxy", "ReplayCameraContext");

	Params::PlayerLocomotionLogicProxy_ReplayCameraContext Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CurrentCameraRotation != nullptr)
		*CurrentCameraRotation = std::move(Parms.CurrentCameraRotation);

	if (PreCameraRotation != nullptr)
		*PreCameraRotation = std::move(Parms.PreCameraRotation);

	if (bCameraStateChanged != nullptr)
		*bCameraStateChanged = Parms.bCameraStateChanged;

	if (bOnNewTargetCameraBlendEnd != nullptr)
		*bOnNewTargetCameraBlendEnd = Parms.bOnNewTargetCameraBlendEnd;
}


// Function X6Game.PlayerLocomotionLogicProxy.ReplayCurInputInformation
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float*                                  PolishInputValForMoveForward                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  PolishInputValForMoveRight                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  PolishPreInputValForMoveForward                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  PolishPreInputValForMoveRight                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerLocomotionLogicProxy::ReplayCurInputInformation(float* PolishInputValForMoveForward, float* PolishInputValForMoveRight, float* PolishPreInputValForMoveForward, float* PolishPreInputValForMoveRight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerLocomotionLogicProxy", "ReplayCurInputInformation");

	Params::PlayerLocomotionLogicProxy_ReplayCurInputInformation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PolishInputValForMoveForward != nullptr)
		*PolishInputValForMoveForward = Parms.PolishInputValForMoveForward;

	if (PolishInputValForMoveRight != nullptr)
		*PolishInputValForMoveRight = Parms.PolishInputValForMoveRight;

	if (PolishPreInputValForMoveForward != nullptr)
		*PolishPreInputValForMoveForward = Parms.PolishPreInputValForMoveForward;

	if (PolishPreInputValForMoveRight != nullptr)
		*PolishPreInputValForMoveRight = Parms.PolishPreInputValForMoveRight;
}


// Function X6Game.PlayerLocomotionLogicProxy.ResetInputCache
// (Final, Native, Public, BlueprintCallable)

void UPlayerLocomotionLogicProxy::ResetInputCache()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerLocomotionLogicProxy", "ResetInputCache");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.PlayerLocomotionLogicProxy.SmoothPlayerRotation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator*                        CurrentTargetRotation                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// const struct FRotator&                  NewTargetRotation                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// const struct FRotator&                  CurActorRotation                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   RotationTargetInterpSpeed                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RotationActorInterpSpeed                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator UPlayerLocomotionLogicProxy::SmoothPlayerRotation(struct FRotator* CurrentTargetRotation, const struct FRotator& NewTargetRotation, const struct FRotator& CurActorRotation, float RotationTargetInterpSpeed, float RotationActorInterpSpeed, float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerLocomotionLogicProxy", "SmoothPlayerRotation");

	Params::PlayerLocomotionLogicProxy_SmoothPlayerRotation Parms{};

	Parms.NewTargetRotation = std::move(NewTargetRotation);
	Parms.CurActorRotation = std::move(CurActorRotation);
	Parms.RotationTargetInterpSpeed = RotationTargetInterpSpeed;
	Parms.RotationActorInterpSpeed = RotationActorInterpSpeed;
	Parms.DeltaSeconds = DeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CurrentTargetRotation != nullptr)
		*CurrentTargetRotation = std::move(Parms.CurrentTargetRotation);

	return Parms.ReturnValue;
}


// Function X6Game.PlayerShadowDecalProcessor.CaculateShadowTargetInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACharacter*                       OwnerCharacter                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMeshComponent*           SkeletalMeshComponent                                  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerShadowDecalProcessor::CaculateShadowTargetInfo(class ACharacter* OwnerCharacter, class USkeletalMeshComponent* SkeletalMeshComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerShadowDecalProcessor", "CaculateShadowTargetInfo");

	Params::PlayerShadowDecalProcessor_CaculateShadowTargetInfo Parms{};

	Parms.OwnerCharacter = OwnerCharacter;
	Parms.SkeletalMeshComponent = SkeletalMeshComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.PlayerShadowDecalProcessor.GetRealCapsultHeight
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ACharacter*                       OwnerCharacter                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPlayerShadowDecalProcessor::GetRealCapsultHeight(class ACharacter* OwnerCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerShadowDecalProcessor", "GetRealCapsultHeight");

	Params::PlayerShadowDecalProcessor_GetRealCapsultHeight Parms{};

	Parms.OwnerCharacter = OwnerCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.PlayerShadowDecalProcessor.InitConfigInformation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// float                                   MaxTraceDownHeight                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxJumpHeight                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   ShadowDecalSize                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SphereTraceRadius                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                      Curve_ShadowDecalDistanceMappedToScale2D               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerShadowDecalProcessor::InitConfigInformation(float MaxTraceDownHeight, float MaxJumpHeight, const struct FVector& ShadowDecalSize, float SphereTraceRadius, class UCurveFloat* Curve_ShadowDecalDistanceMappedToScale2D)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerShadowDecalProcessor", "InitConfigInformation");

	Params::PlayerShadowDecalProcessor_InitConfigInformation Parms{};

	Parms.MaxTraceDownHeight = MaxTraceDownHeight;
	Parms.MaxJumpHeight = MaxJumpHeight;
	Parms.ShadowDecalSize = std::move(ShadowDecalSize);
	Parms.SphereTraceRadius = SphereTraceRadius;
	Parms.Curve_ShadowDecalDistanceMappedToScale2D = Curve_ShadowDecalDistanceMappedToScale2D;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.PlayerShadowDecalProcessor.InitShadowDynamicMIParam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             OpacityParamName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             BlurWeightParamName                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ScaleParamName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerShadowDecalProcessor::InitShadowDynamicMIParam(class FName OpacityParamName, class FName BlurWeightParamName, class FName ScaleParamName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerShadowDecalProcessor", "InitShadowDynamicMIParam");

	Params::PlayerShadowDecalProcessor_InitShadowDynamicMIParam Parms{};

	Parms.OpacityParamName = OpacityParamName;
	Parms.BlurWeightParamName = BlurWeightParamName;
	Parms.ScaleParamName = ScaleParamName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.PlayerShadowDecalProcessor.UpdateDecalMaterialInstanceParam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ACharacter*                       OwnerCharacter                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         ShadowDynamicMI                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerShadowDecalProcessor::UpdateDecalMaterialInstanceParam(float DeltaSeconds, class ACharacter* OwnerCharacter, class UMaterialInstanceDynamic* ShadowDynamicMI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerShadowDecalProcessor", "UpdateDecalMaterialInstanceParam");

	Params::PlayerShadowDecalProcessor_UpdateDecalMaterialInstanceParam Parms{};

	Parms.DeltaSeconds = DeltaSeconds;
	Parms.OwnerCharacter = OwnerCharacter;
	Parms.ShadowDynamicMI = ShadowDynamicMI;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.PlayerShadowDecalProcessor.UpdateDrawPlayerShadowDecal
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ACharacter*                       OwnerCharacter                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMeshComponent*           SkeletalMeshComponent                                  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDecalComponent*                  DecalComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  ShadowOnWaterPlaneMeshComp                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerShadowDecalProcessor::UpdateDrawPlayerShadowDecal(float DeltaSeconds, class ACharacter* OwnerCharacter, class USkeletalMeshComponent* SkeletalMeshComponent, class UDecalComponent* DecalComponent, class USceneComponent* ShadowOnWaterPlaneMeshComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerShadowDecalProcessor", "UpdateDrawPlayerShadowDecal");

	Params::PlayerShadowDecalProcessor_UpdateDrawPlayerShadowDecal Parms{};

	Parms.DeltaSeconds = DeltaSeconds;
	Parms.OwnerCharacter = OwnerCharacter;
	Parms.SkeletalMeshComponent = SkeletalMeshComponent;
	Parms.DecalComponent = DecalComponent;
	Parms.ShadowOnWaterPlaneMeshComp = ShadowOnWaterPlaneMeshComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.PlayerShadowDecalProcessor.UpdateDrawPlayerShadowDecal_Mobile
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ACharacter*                       OwnerCharacter                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMeshComponent*           SkeletalMeshComponent                                  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  CubeMeshComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  ShadowOnWaterPlaneMeshComp                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerShadowDecalProcessor::UpdateDrawPlayerShadowDecal_Mobile(float DeltaSeconds, class ACharacter* OwnerCharacter, class USkeletalMeshComponent* SkeletalMeshComponent, class USceneComponent* CubeMeshComponent, class USceneComponent* ShadowOnWaterPlaneMeshComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerShadowDecalProcessor", "UpdateDrawPlayerShadowDecal_Mobile");

	Params::PlayerShadowDecalProcessor_UpdateDrawPlayerShadowDecal_Mobile Parms{};

	Parms.DeltaSeconds = DeltaSeconds;
	Parms.OwnerCharacter = OwnerCharacter;
	Parms.SkeletalMeshComponent = SkeletalMeshComponent;
	Parms.CubeMeshComponent = CubeMeshComponent;
	Parms.ShadowOnWaterPlaneMeshComp = ShadowOnWaterPlaneMeshComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.QuadrupedLocomotionAnimInstance.DeterminTransToContractionPose
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQuadrupedLocomotionAnimInstance::DeterminTransToContractionPose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuadrupedLocomotionAnimInstance", "DeterminTransToContractionPose");

	Params::QuadrupedLocomotionAnimInstance_DeterminTransToContractionPose Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.QuadrupedLocomotionAnimInstance.DeterminTransToRightFoot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQuadrupedLocomotionAnimInstance::DeterminTransToRightFoot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuadrupedLocomotionAnimInstance", "DeterminTransToRightFoot");

	Params::QuadrupedLocomotionAnimInstance_DeterminTransToRightFoot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.QuadrupedLocomotionAnimInstance.HandleOnMovementInputChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    PrevHasMovementInput                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    NewHasMovementInput                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQuadrupedLocomotionAnimInstance::HandleOnMovementInputChanged(bool PrevHasMovementInput, bool NewHasMovementInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuadrupedLocomotionAnimInstance", "HandleOnMovementInputChanged");

	Params::QuadrupedLocomotionAnimInstance_HandleOnMovementInputChanged Parms{};

	Parms.PrevHasMovementInput = PrevHasMovementInput;
	Parms.NewHasMovementInput = NewHasMovementInput;

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.RegularMovementDebugContext.Deinitialize
// (Native, Event, Public, BlueprintEvent)

void URegularMovementDebugContext::Deinitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RegularMovementDebugContext", "Deinitialize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RegularMovementDebugContext.OnInitialize
// (Native, Event, Public, BlueprintEvent)

void URegularMovementDebugContext::OnInitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RegularMovementDebugContext", "OnInitialize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RenderTargetBox.SetIgnoreHittestGrid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InIgnoreHittestGrid                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URenderTargetBox::SetIgnoreHittestGrid(bool InIgnoreHittestGrid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RenderTargetBox", "SetIgnoreHittestGrid");

	Params::RenderTargetBox_SetIgnoreHittestGrid Parms{};

	Parms.InIgnoreHittestGrid = InIgnoreHittestGrid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RenderTargetBox.SetRenderTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTextureRenderTarget2D*           RenderTarget                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URenderTargetBox::SetRenderTarget(class UTextureRenderTarget2D* RenderTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RenderTargetBox", "SetRenderTarget");

	Params::RenderTargetBox_SetRenderTarget Parms{};

	Parms.RenderTarget = RenderTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RenderTargetBox.SetShowChild
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InShowChild                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URenderTargetBox::SetShowChild(bool InShowChild)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RenderTargetBox", "SetShowChild");

	Params::RenderTargetBox_SetShowChild Parms{};

	Parms.InShowChild = InShowChild;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RenderTargetBox.UpdateRenderTarget
// (Final, Native, Public, BlueprintCallable)

void URenderTargetBox::UpdateRenderTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RenderTargetBox", "UpdateRenderTarget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMBaseLogicProcessor.CaculateCurRotationActorInterpSpeed
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FRotator&                  CurrentCameraRotation                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// const struct FRotator&                  PreCameraRotation                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   CameraRYawClampUpperLimit                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CurveSampleValue                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                      RotateCurve                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                      RAngleToRYawSpeedRateMappingCurve                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CurrentTurnAroundAngle                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float URMBaseLogicProcessor::CaculateCurRotationActorInterpSpeed(const struct FRotator& CurrentCameraRotation, const struct FRotator& PreCameraRotation, float CameraRYawClampUpperLimit, float CurveSampleValue, float DeltaSeconds, class UCurveFloat* RotateCurve, class UCurveFloat* RAngleToRYawSpeedRateMappingCurve, float CurrentTurnAroundAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMBaseLogicProcessor", "CaculateCurRotationActorInterpSpeed");

	Params::RMBaseLogicProcessor_CaculateCurRotationActorInterpSpeed Parms{};

	Parms.CurrentCameraRotation = std::move(CurrentCameraRotation);
	Parms.PreCameraRotation = std::move(PreCameraRotation);
	Parms.CameraRYawClampUpperLimit = CameraRYawClampUpperLimit;
	Parms.CurveSampleValue = CurveSampleValue;
	Parms.DeltaSeconds = DeltaSeconds;
	Parms.RotateCurve = RotateCurve;
	Parms.RAngleToRYawSpeedRateMappingCurve = RAngleToRYawSpeedRateMappingCurve;
	Parms.CurrentTurnAroundAngle = CurrentTurnAroundAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMBaseLogicProcessor.Deinitialize
// (Native, Event, Public, BlueprintEvent)

void URMBaseLogicProcessor::Deinitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMBaseLogicProcessor", "Deinitialize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMBaseLogicProcessor.GatherCurrentCameraInformation
// (Final, Native, Public, BlueprintCallable)

void URMBaseLogicProcessor::GatherCurrentCameraInformation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMBaseLogicProcessor", "GatherCurrentCameraInformation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMBaseLogicProcessor.GetCameraContext
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FRMCameraContext                 ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FRMCameraContext URMBaseLogicProcessor::GetCameraContext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMBaseLogicProcessor", "GetCameraContext");

	Params::RMBaseLogicProcessor_GetCameraContext Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMBaseLogicProcessor.GetInputContext
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FRMInputContext                  ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FRMInputContext URMBaseLogicProcessor::GetInputContext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMBaseLogicProcessor", "GetInputContext");

	Params::RMBaseLogicProcessor_GetInputContext Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMBaseLogicProcessor.GetMappedSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   CurrentSpeed2DVal                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LowerSpeedVal                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MiddleSpeedVal                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   HighSpeedVal                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float URMBaseLogicProcessor::GetMappedSpeed(float CurrentSpeed2DVal, float LowerSpeedVal, float MiddleSpeedVal, float HighSpeedVal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMBaseLogicProcessor", "GetMappedSpeed");

	Params::RMBaseLogicProcessor_GetMappedSpeed Parms{};

	Parms.CurrentSpeed2DVal = CurrentSpeed2DVal;
	Parms.LowerSpeedVal = LowerSpeedVal;
	Parms.MiddleSpeedVal = MiddleSpeedVal;
	Parms.HighSpeedVal = HighSpeedVal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMBaseLogicProcessor.GetMostRecentValidInputInfoByValidDuration
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   ValidDuration                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFrameInputContext*              InputContext                                           (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMBaseLogicProcessor::GetMostRecentValidInputInfoByValidDuration(float ValidDuration, struct FFrameInputContext* InputContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMBaseLogicProcessor", "GetMostRecentValidInputInfoByValidDuration");

	Params::RMBaseLogicProcessor_GetMostRecentValidInputInfoByValidDuration Parms{};

	Parms.ValidDuration = ValidDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (InputContext != nullptr)
		*InputContext = std::move(Parms.InputContext);

	return Parms.ReturnValue;
}


// Function X6Game.RMBaseLogicProcessor.GetTurnAroundAngle
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   InputMovingDirection                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   CurrentForwardVector                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float URMBaseLogicProcessor::GetTurnAroundAngle(const struct FVector& InputMovingDirection, const struct FVector& CurrentForwardVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMBaseLogicProcessor", "GetTurnAroundAngle");

	Params::RMBaseLogicProcessor_GetTurnAroundAngle Parms{};

	Parms.InputMovingDirection = std::move(InputMovingDirection);
	Parms.CurrentForwardVector = std::move(CurrentForwardVector);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMBaseLogicProcessor.GetVariableInputScaleValue
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRMInputConfig&            RMInputConfig                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bIsForwardAxis                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CurrentInputValForMoveForward                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CurrentInputValForMoveRight                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float URMBaseLogicProcessor::GetVariableInputScaleValue(const struct FRMInputConfig& RMInputConfig, bool bIsForwardAxis, float CurrentInputValForMoveForward, float CurrentInputValForMoveRight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMBaseLogicProcessor", "GetVariableInputScaleValue");

	Params::RMBaseLogicProcessor_GetVariableInputScaleValue Parms{};

	Parms.RMInputConfig = std::move(RMInputConfig);
	Parms.bIsForwardAxis = bIsForwardAxis;
	Parms.CurrentInputValForMoveForward = CurrentInputValForMoveForward;
	Parms.CurrentInputValForMoveRight = CurrentInputValForMoveRight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMBaseLogicProcessor.InitInputConfigData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   LogicalFramesPerSecond                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PreStartFrames                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnableStartMovingInputCache                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartMovingInputCacheFrames                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnableMutationCache                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MutationInputCacheFrames                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnableInvalidInput                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InvalidInputFrames                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MutationInputSizeThreshold                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MutationInputDirectionThreshold                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URMBaseLogicProcessor::InitInputConfigData(float LogicalFramesPerSecond, float PreStartFrames, bool bEnableStartMovingInputCache, float StartMovingInputCacheFrames, bool bEnableMutationCache, float MutationInputCacheFrames, bool bEnableInvalidInput, float InvalidInputFrames, float MutationInputSizeThreshold, float MutationInputDirectionThreshold)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMBaseLogicProcessor", "InitInputConfigData");

	Params::RMBaseLogicProcessor_InitInputConfigData Parms{};

	Parms.LogicalFramesPerSecond = LogicalFramesPerSecond;
	Parms.PreStartFrames = PreStartFrames;
	Parms.bEnableStartMovingInputCache = bEnableStartMovingInputCache;
	Parms.StartMovingInputCacheFrames = StartMovingInputCacheFrames;
	Parms.bEnableMutationCache = bEnableMutationCache;
	Parms.MutationInputCacheFrames = MutationInputCacheFrames;
	Parms.bEnableInvalidInput = bEnableInvalidInput;
	Parms.InvalidInputFrames = InvalidInputFrames;
	Parms.MutationInputSizeThreshold = MutationInputSizeThreshold;
	Parms.MutationInputDirectionThreshold = MutationInputDirectionThreshold;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMBaseLogicProcessor.IsEnableMutationCache
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMBaseLogicProcessor::IsEnableMutationCache()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMBaseLogicProcessor", "IsEnableMutationCache");

	Params::RMBaseLogicProcessor_IsEnableMutationCache Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMBaseLogicProcessor.IsKeepPolishInputStateOnce
// (Final, Native, Public, BlueprintCallable)

void URMBaseLogicProcessor::IsKeepPolishInputStateOnce()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMBaseLogicProcessor", "IsKeepPolishInputStateOnce");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMBaseLogicProcessor.IsNeedStartMovingCache
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMBaseLogicProcessor::IsNeedStartMovingCache()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMBaseLogicProcessor", "IsNeedStartMovingCache");

	Params::RMBaseLogicProcessor_IsNeedStartMovingCache Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMBaseLogicProcessor.KeepPolishInputStateOnce
// (Final, Native, Public, BlueprintCallable)

void URMBaseLogicProcessor::KeepPolishInputStateOnce()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMBaseLogicProcessor", "KeepPolishInputStateOnce");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMBaseLogicProcessor.ObtainingPreciseValueThroughIntegralCalculation
// (Native, Public, BlueprintCallable)
// Parameters:
// class UCurveFloat*                      CurCurve                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// double                                  CurSampleValue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// double                                  AdvanceTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// double                                  SamplingInterval                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

double URMBaseLogicProcessor::ObtainingPreciseValueThroughIntegralCalculation(class UCurveFloat* CurCurve, double CurSampleValue, double AdvanceTime, double SamplingInterval)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMBaseLogicProcessor", "ObtainingPreciseValueThroughIntegralCalculation");

	Params::RMBaseLogicProcessor_ObtainingPreciseValueThroughIntegralCalculation Parms{};

	Parms.CurCurve = CurCurve;
	Parms.CurSampleValue = CurSampleValue;
	Parms.AdvanceTime = AdvanceTime;
	Parms.SamplingInterval = SamplingInterval;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMBaseLogicProcessor.OnInitialize
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           OwnerActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URMBaseLogicProcessor::OnInitialize(class AActor* OwnerActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMBaseLogicProcessor", "OnInitialize");

	Params::RMBaseLogicProcessor_OnInitialize Parms{};

	Parms.OwnerActor = OwnerActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMBaseLogicProcessor.PolishInputValue
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRMInputConfig&            RMInputConfig                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   CurrentInputValForMoveForward                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CurrentInputValForMoveRight                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMBaseLogicProcessor::PolishInputValue(const struct FRMInputConfig& RMInputConfig, float CurrentInputValForMoveForward, float CurrentInputValForMoveRight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMBaseLogicProcessor", "PolishInputValue");

	Params::RMBaseLogicProcessor_PolishInputValue Parms{};

	Parms.RMInputConfig = std::move(RMInputConfig);
	Parms.CurrentInputValForMoveForward = CurrentInputValForMoveForward;
	Parms.CurrentInputValForMoveRight = CurrentInputValForMoveRight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMBaseLogicProcessor.ProcessBasicOnGroundTurnAroundMovementLogic
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UCharacterMovementComponent*      CharacterMovementComponent                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator*                        CurrentTargetRotation                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// const struct FVector&                   InputMovingDirection                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RotationTargetInterpSpeed                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RotationActorInterpSpeed                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float URMBaseLogicProcessor::ProcessBasicOnGroundTurnAroundMovementLogic(class UCharacterMovementComponent* CharacterMovementComponent, struct FRotator* CurrentTargetRotation, const struct FVector& InputMovingDirection, float RotationTargetInterpSpeed, float RotationActorInterpSpeed, float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMBaseLogicProcessor", "ProcessBasicOnGroundTurnAroundMovementLogic");

	Params::RMBaseLogicProcessor_ProcessBasicOnGroundTurnAroundMovementLogic Parms{};

	Parms.CharacterMovementComponent = CharacterMovementComponent;
	Parms.InputMovingDirection = std::move(InputMovingDirection);
	Parms.RotationTargetInterpSpeed = RotationTargetInterpSpeed;
	Parms.RotationActorInterpSpeed = RotationActorInterpSpeed;
	Parms.DeltaSeconds = DeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CurrentTargetRotation != nullptr)
		*CurrentTargetRotation = std::move(Parms.CurrentTargetRotation);

	return Parms.ReturnValue;
}


// Function X6Game.RMBaseLogicProcessor.ProcessFollowUpTurnAroundMovementLogic
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UCharacterMovementComponent*      CharacterMovementComponent                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   InputMovingDirection                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RotationTargetInterpSpeed                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMBaseLogicProcessor::ProcessFollowUpTurnAroundMovementLogic(class UCharacterMovementComponent* CharacterMovementComponent, const struct FVector& InputMovingDirection, float RotationTargetInterpSpeed, float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMBaseLogicProcessor", "ProcessFollowUpTurnAroundMovementLogic");

	Params::RMBaseLogicProcessor_ProcessFollowUpTurnAroundMovementLogic Parms{};

	Parms.CharacterMovementComponent = CharacterMovementComponent;
	Parms.InputMovingDirection = std::move(InputMovingDirection);
	Parms.RotationTargetInterpSpeed = RotationTargetInterpSpeed;
	Parms.DeltaSeconds = DeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMBaseLogicProcessor.ProcessInputAngularDeadZone
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UCharacterMovementComponent*CharacterMovementComponent                             (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRMInputConfig&            RMInputConfig                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const float                             DeltaSeconds                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URMBaseLogicProcessor::ProcessInputAngularDeadZone(const class UCharacterMovementComponent* CharacterMovementComponent, const struct FRMInputConfig& RMInputConfig, const float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMBaseLogicProcessor", "ProcessInputAngularDeadZone");

	Params::RMBaseLogicProcessor_ProcessInputAngularDeadZone Parms{};

	Parms.CharacterMovementComponent = CharacterMovementComponent;
	Parms.RMInputConfig = std::move(RMInputConfig);
	Parms.DeltaSeconds = DeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMBaseLogicProcessor.ProcessInputValueCacheLogic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsMoving                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMBaseLogicProcessor::ProcessInputValueCacheLogic(float DeltaSeconds, bool bIsMoving)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMBaseLogicProcessor", "ProcessInputValueCacheLogic");

	Params::RMBaseLogicProcessor_ProcessInputValueCacheLogic Parms{};

	Parms.DeltaSeconds = DeltaSeconds;
	Parms.bIsMoving = bIsMoving;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMBaseLogicProcessor.ProcessRegularFallingTurnAroundMovementLogic
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UCharacterMovementComponent*      CharacterMovementComponent                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   InputMovingDirection                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RotationTargetInterpSpeed                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RotationActorInterpSpeed                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMBaseLogicProcessor::ProcessRegularFallingTurnAroundMovementLogic(class UCharacterMovementComponent* CharacterMovementComponent, const struct FVector& InputMovingDirection, float RotationTargetInterpSpeed, float RotationActorInterpSpeed, float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMBaseLogicProcessor", "ProcessRegularFallingTurnAroundMovementLogic");

	Params::RMBaseLogicProcessor_ProcessRegularFallingTurnAroundMovementLogic Parms{};

	Parms.CharacterMovementComponent = CharacterMovementComponent;
	Parms.InputMovingDirection = std::move(InputMovingDirection);
	Parms.RotationTargetInterpSpeed = RotationTargetInterpSpeed;
	Parms.RotationActorInterpSpeed = RotationActorInterpSpeed;
	Parms.DeltaSeconds = DeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMBaseLogicProcessor.RecordCurInputInformation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   CurrentInputValForMoveForward                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CurrentInputValForMoveRight                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PreInputValForMoveForward                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PreInputValForMoveRight                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URMBaseLogicProcessor::RecordCurInputInformation(float CurrentInputValForMoveForward, float CurrentInputValForMoveRight, float PreInputValForMoveForward, float PreInputValForMoveRight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMBaseLogicProcessor", "RecordCurInputInformation");

	Params::RMBaseLogicProcessor_RecordCurInputInformation Parms{};

	Parms.CurrentInputValForMoveForward = CurrentInputValForMoveForward;
	Parms.CurrentInputValForMoveRight = CurrentInputValForMoveRight;
	Parms.PreInputValForMoveForward = PreInputValForMoveForward;
	Parms.PreInputValForMoveRight = PreInputValForMoveRight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMBaseLogicProcessor.RemapInputAccordingToSwitchWalkMode
// (Native, Public, BlueprintCallable)
// Parameters:
// class URMProxyTickRecordInterface*      TickRecord                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URMBaseLogicProcessor::RemapInputAccordingToSwitchWalkMode(class URMProxyTickRecordInterface* TickRecord)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMBaseLogicProcessor", "RemapInputAccordingToSwitchWalkMode");

	Params::RMBaseLogicProcessor_RemapInputAccordingToSwitchWalkMode Parms{};

	Parms.TickRecord = TickRecord;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMBaseLogicProcessor.ReplayCurInputInformation
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float*                                  PolishInputValForMoveForward                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  PolishInputValForMoveRight                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  PolishPreInputValForMoveForward                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  PolishPreInputValForMoveRight                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URMBaseLogicProcessor::ReplayCurInputInformation(float* PolishInputValForMoveForward, float* PolishInputValForMoveRight, float* PolishPreInputValForMoveForward, float* PolishPreInputValForMoveRight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMBaseLogicProcessor", "ReplayCurInputInformation");

	Params::RMBaseLogicProcessor_ReplayCurInputInformation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PolishInputValForMoveForward != nullptr)
		*PolishInputValForMoveForward = Parms.PolishInputValForMoveForward;

	if (PolishInputValForMoveRight != nullptr)
		*PolishInputValForMoveRight = Parms.PolishInputValForMoveRight;

	if (PolishPreInputValForMoveForward != nullptr)
		*PolishPreInputValForMoveForward = Parms.PolishPreInputValForMoveForward;

	if (PolishPreInputValForMoveRight != nullptr)
		*PolishPreInputValForMoveRight = Parms.PolishPreInputValForMoveRight;
}


// Function X6Game.RMBaseLogicProcessor.ResetCameraContext
// (Final, Native, Public, BlueprintCallable)

void URMBaseLogicProcessor::ResetCameraContext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMBaseLogicProcessor", "ResetCameraContext");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMBaseLogicProcessor.ResetInputCache
// (Final, Native, Public, BlueprintCallable)

void URMBaseLogicProcessor::ResetInputCache()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMBaseLogicProcessor", "ResetInputCache");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMBaseLogicProcessor.ResetInputContext
// (Final, Native, Public, BlueprintCallable)

void URMBaseLogicProcessor::ResetInputContext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMBaseLogicProcessor", "ResetInputContext");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMBaseLogicProcessor.SmoothPlayerRotation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator*                        CurrentTargetRotation                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// const struct FRotator&                  NewTargetRotation                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// const struct FRotator&                  CurActorRotation                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   RotationTargetInterpSpeed                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RotationActorInterpSpeed                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator URMBaseLogicProcessor::SmoothPlayerRotation(struct FRotator* CurrentTargetRotation, const struct FRotator& NewTargetRotation, const struct FRotator& CurActorRotation, float RotationTargetInterpSpeed, float RotationActorInterpSpeed, float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMBaseLogicProcessor", "SmoothPlayerRotation");

	Params::RMBaseLogicProcessor_SmoothPlayerRotation Parms{};

	Parms.NewTargetRotation = std::move(NewTargetRotation);
	Parms.CurActorRotation = std::move(CurActorRotation);
	Parms.RotationTargetInterpSpeed = RotationTargetInterpSpeed;
	Parms.RotationActorInterpSpeed = RotationActorInterpSpeed;
	Parms.DeltaSeconds = DeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CurrentTargetRotation != nullptr)
		*CurrentTargetRotation = std::move(Parms.CurrentTargetRotation);

	return Parms.ReturnValue;
}


// Function X6Game.RMBaseLogicProcessor.SmoothPlayerRotationConstant
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FRotator&                  CurrentRotation                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// const struct FRotator&                  TargetRotation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   RotationTargetInterpSpeed                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator URMBaseLogicProcessor::SmoothPlayerRotationConstant(const struct FRotator& CurrentRotation, const struct FRotator& TargetRotation, float RotationTargetInterpSpeed, float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMBaseLogicProcessor", "SmoothPlayerRotationConstant");

	Params::RMBaseLogicProcessor_SmoothPlayerRotationConstant Parms{};

	Parms.CurrentRotation = std::move(CurrentRotation);
	Parms.TargetRotation = std::move(TargetRotation);
	Parms.RotationTargetInterpSpeed = RotationTargetInterpSpeed;
	Parms.DeltaSeconds = DeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMConfigContextInterface.Deinitialize
// (Native, Event, Public, BlueprintEvent)

void URMConfigContextInterface::Deinitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMConfigContextInterface", "Deinitialize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMConfigContextInterface.OnInitialize
// (Native, Event, Public, BlueprintEvent)

void URMConfigContextInterface::OnInitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMConfigContextInterface", "OnInitialize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMOutputContextInterface.Deinitialize
// (Native, Event, Public, BlueprintEvent)

void URMOutputContextInterface::Deinitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMOutputContextInterface", "Deinitialize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMOutputContextInterface.OnInitialize
// (Native, Event, Public, BlueprintEvent)

void URMOutputContextInterface::OnInitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMOutputContextInterface", "OnInitialize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMBehaviorTreeProxyInterface.Deinitialize
// (Native, Event, Public, BlueprintEvent)

void URMBehaviorTreeProxyInterface::Deinitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMBehaviorTreeProxyInterface", "Deinitialize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMBehaviorTreeProxyInterface.OnInitialize
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UActorComponent*                  OuterComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCharacterMovementComponent*      CharacterMovementComponent                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URMBehaviorTreeProxyInterface::OnInitialize(class UActorComponent* OuterComp, class UCharacterMovementComponent* CharacterMovementComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMBehaviorTreeProxyInterface", "OnInitialize");

	Params::RMBehaviorTreeProxyInterface_OnInitialize Parms{};

	Parms.OuterComp = OuterComp;
	Parms.CharacterMovementComponent = CharacterMovementComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMProxyTickRecordInterface.Deinitialize
// (Native, Event, Public, BlueprintEvent)

void URMProxyTickRecordInterface::Deinitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMProxyTickRecordInterface", "Deinitialize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMProxyTickRecordInterface.GetConfigContext
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class URMConfigContextInterface*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URMConfigContextInterface* URMProxyTickRecordInterface::GetConfigContext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMProxyTickRecordInterface", "GetConfigContext");

	Params::RMProxyTickRecordInterface_GetConfigContext Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMProxyTickRecordInterface.GetCurrentProxy
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class URMBehaviorTreeProxyInterface*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URMBehaviorTreeProxyInterface* URMProxyTickRecordInterface::GetCurrentProxy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMProxyTickRecordInterface", "GetCurrentProxy");

	Params::RMProxyTickRecordInterface_GetCurrentProxy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMProxyTickRecordInterface.GetDebugContext
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class URegularMovementDebugContext*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URegularMovementDebugContext* URMProxyTickRecordInterface::GetDebugContext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMProxyTickRecordInterface", "GetDebugContext");

	Params::RMProxyTickRecordInterface_GetDebugContext Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMProxyTickRecordInterface.GetOutputContext
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class URMOutputContextInterface*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URMOutputContextInterface* URMProxyTickRecordInterface::GetOutputContext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMProxyTickRecordInterface", "GetOutputContext");

	Params::RMProxyTickRecordInterface_GetOutputContext Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMProxyTickRecordInterface.GetStateInstructionContext
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class URMStateInstructionContext*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URMStateInstructionContext* URMProxyTickRecordInterface::GetStateInstructionContext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMProxyTickRecordInterface", "GetStateInstructionContext");

	Params::RMProxyTickRecordInterface_GetStateInstructionContext Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMProxyTickRecordInterface.GetUseButtonSwitchWalk
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMProxyTickRecordInterface::GetUseButtonSwitchWalk()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMProxyTickRecordInterface", "GetUseButtonSwitchWalk");

	Params::RMProxyTickRecordInterface_GetUseButtonSwitchWalk Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMProxyTickRecordInterface.OnInitialize
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           Owner                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URMBaseLogicProcessor*            RMLogicProxy                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class URMOutputContextInterface>RMOutputContextClass                                   (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class URMStateInstructionContext>RMStateInstructionContextClass                         (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class URMConfigContextInterface>RMConfigContextClass                                   (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class URegularMovementDebugContext>RMDebugContextClass                                    (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URMProxyTickRecordInterface::OnInitialize(class AActor* Owner, class URMBaseLogicProcessor* RMLogicProxy, TSubclassOf<class URMOutputContextInterface> RMOutputContextClass, TSubclassOf<class URMStateInstructionContext> RMStateInstructionContextClass, TSubclassOf<class URMConfigContextInterface> RMConfigContextClass, TSubclassOf<class URegularMovementDebugContext> RMDebugContextClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMProxyTickRecordInterface", "OnInitialize");

	Params::RMProxyTickRecordInterface_OnInitialize Parms{};

	Parms.Owner = Owner;
	Parms.RMLogicProxy = RMLogicProxy;
	Parms.RMOutputContextClass = RMOutputContextClass;
	Parms.RMStateInstructionContextClass = RMStateInstructionContextClass;
	Parms.RMConfigContextClass = RMConfigContextClass;
	Parms.RMDebugContextClass = RMDebugContextClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMProxyTickRecordInterface.SetConfigContext
// (Native, Public, BlueprintCallable)
// Parameters:
// class URMConfigContextInterface*        RMConfigContextInterface                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URMProxyTickRecordInterface::SetConfigContext(class URMConfigContextInterface* RMConfigContextInterface)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMProxyTickRecordInterface", "SetConfigContext");

	Params::RMProxyTickRecordInterface_SetConfigContext Parms{};

	Parms.RMConfigContextInterface = RMConfigContextInterface;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMProxyTickRecordInterface.SetCurrentProxy
// (Native, Public, BlueprintCallable)
// Parameters:
// class URMBehaviorTreeProxyInterface*    RMProxyInterface                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URMProxyTickRecordInterface::SetCurrentProxy(class URMBehaviorTreeProxyInterface* RMProxyInterface)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMProxyTickRecordInterface", "SetCurrentProxy");

	Params::RMProxyTickRecordInterface_SetCurrentProxy Parms{};

	Parms.RMProxyInterface = RMProxyInterface;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMProxyTickRecordInterface.SetOutputContext
// (Native, Public, BlueprintCallable)
// Parameters:
// class URMOutputContextInterface*        RMOutputContextInterface                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URMProxyTickRecordInterface::SetOutputContext(class URMOutputContextInterface* RMOutputContextInterface)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMProxyTickRecordInterface", "SetOutputContext");

	Params::RMProxyTickRecordInterface_SetOutputContext Parms{};

	Parms.RMOutputContextInterface = RMOutputContextInterface;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMProxyTickRecordInterface.SetStateInstructionContext
// (Native, Public, BlueprintCallable)
// Parameters:
// class URMStateInstructionContext*       RMStateInstructionContext                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URMProxyTickRecordInterface::SetStateInstructionContext(class URMStateInstructionContext* RMStateInstructionContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMProxyTickRecordInterface", "SetStateInstructionContext");

	Params::RMProxyTickRecordInterface_SetStateInstructionContext Parms{};

	Parms.RMStateInstructionContext = RMStateInstructionContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMProxyTickRecordInterface.SetUseButtonSwitchWalk
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewUseButtonSwitchWalk                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URMProxyTickRecordInterface::SetUseButtonSwitchWalk(bool bNewUseButtonSwitchWalk)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMProxyTickRecordInterface", "SetUseButtonSwitchWalk");

	Params::RMProxyTickRecordInterface_SetUseButtonSwitchWalk Parms{};

	Parms.bNewUseButtonSwitchWalk = bNewUseButtonSwitchWalk;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMStateInstructionContext.BP_AddState
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   StateID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URMStateInstructionContext::BP_AddState(int32 StateID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateInstructionContext", "BP_AddState");

	Params::RMStateInstructionContext_BP_AddState Parms{};

	Parms.StateID = StateID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.RMStateInstructionContext.BP_CanDoAction
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ActionId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMStateInstructionContext::BP_CanDoAction(int32 ActionId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateInstructionContext", "BP_CanDoAction");

	Params::RMStateInstructionContext_BP_CanDoAction Parms{};

	Parms.ActionId = ActionId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMStateInstructionContext.BP_DoAction
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   ActionId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URMStateInstructionContext::BP_DoAction(int32 ActionId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateInstructionContext", "BP_DoAction");

	Params::RMStateInstructionContext_BP_DoAction Parms{};

	Parms.ActionId = ActionId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.RMStateInstructionContext.BP_HasState
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   StateID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMStateInstructionContext::BP_HasState(int32 StateID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateInstructionContext", "BP_HasState");

	Params::RMStateInstructionContext_BP_HasState Parms{};

	Parms.StateID = StateID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMStateInstructionContext.BP_RemoveState
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   StateID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URMStateInstructionContext::BP_RemoveState(int32 StateID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateInstructionContext", "BP_RemoveState");

	Params::RMStateInstructionContext_BP_RemoveState Parms{};

	Parms.StateID = StateID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.RMStateInstructionContext.Deinitialize
// (Native, Event, Public, BlueprintEvent)

void URMStateInstructionContext::Deinitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateInstructionContext", "Deinitialize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMStateInstructionContext.OnInitialize
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           OwnerActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URMStateInstructionContext::OnInitialize(class AActor* OwnerActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateInstructionContext", "OnInitialize");

	Params::RMStateInstructionContext_OnInitialize Parms{};

	Parms.OwnerActor = OwnerActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMConfigContext_InAir.ResetCrashSetting
// (Final, Native, Public, BlueprintCallable)

void URMConfigContext_InAir::ResetCrashSetting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMConfigContext_InAir", "ResetCrashSetting");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMConfigContext_InAir.SetCrashSetting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   inCrashVelocityZ                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   inCrashGravity                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                      inCrashGravityCurve                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   inCrashBrakingDecelerationFalling                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   inCrashFallingLateralFriction                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   inCrashAirControl                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    inEnableLimitCrashMaxFallingSpeed                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   inCrashMaxFallingSpeed                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URMConfigContext_InAir::SetCrashSetting(float inCrashVelocityZ, float inCrashGravity, class UCurveFloat* inCrashGravityCurve, float inCrashBrakingDecelerationFalling, float inCrashFallingLateralFriction, float inCrashAirControl, bool inEnableLimitCrashMaxFallingSpeed, float inCrashMaxFallingSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMConfigContext_InAir", "SetCrashSetting");

	Params::RMConfigContext_InAir_SetCrashSetting Parms{};

	Parms.inCrashVelocityZ = inCrashVelocityZ;
	Parms.inCrashGravity = inCrashGravity;
	Parms.inCrashGravityCurve = inCrashGravityCurve;
	Parms.inCrashBrakingDecelerationFalling = inCrashBrakingDecelerationFalling;
	Parms.inCrashFallingLateralFriction = inCrashFallingLateralFriction;
	Parms.inCrashAirControl = inCrashAirControl;
	Parms.inEnableLimitCrashMaxFallingSpeed = inEnableLimitCrashMaxFallingSpeed;
	Parms.inCrashMaxFallingSpeed = inCrashMaxFallingSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMInputActionProcessor.Deinitialize
// (Native, Event, Public, BlueprintEvent)

void URMInputActionProcessor::Deinitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMInputActionProcessor", "Deinitialize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMInputActionProcessor.OnInitialize
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class URMProxyTickRecordInterface*      TickRecord                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URMInputActionProcessor::OnInitialize(class URMProxyTickRecordInterface* TickRecord)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMInputActionProcessor", "OnInitialize");

	Params::RMInputActionProcessor_OnInitialize Parms{};

	Parms.TickRecord = TickRecord;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMInputActionProcessor.OnInputActionProcessorSwitch
// (Native, Event, Public, BlueprintEvent)

void URMInputActionProcessor::OnInputActionProcessorSwitch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMInputActionProcessor", "OnInputActionProcessorSwitch");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMInputActionProcessor_InAir.CanCrash
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bForce                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    NeedToDoAction                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMInputActionProcessor_InAir::CanCrash(bool bForce, bool NeedToDoAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMInputActionProcessor_InAir", "CanCrash");

	Params::RMInputActionProcessor_InAir_CanCrash Parms{};

	Parms.bForce = bForce;
	Parms.NeedToDoAction = NeedToDoAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMInputActionProcessor_InAir.CanFloat
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bForce                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMInputActionProcessor_InAir::CanFloat(bool bForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMInputActionProcessor_InAir", "CanFloat");

	Params::RMInputActionProcessor_InAir_CanFloat Parms{};

	Parms.bForce = bForce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMInputActionProcessor_InAir.CanJump
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bForce                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    NeedToDoAction                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMInputActionProcessor_InAir::CanJump(bool bForce, bool NeedToDoAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMInputActionProcessor_InAir", "CanJump");

	Params::RMInputActionProcessor_InAir_CanJump Parms{};

	Parms.bForce = bForce;
	Parms.NeedToDoAction = NeedToDoAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMInputActionProcessor_InAir.DoCrash
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bForce                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMInputActionProcessor_InAir::DoCrash(bool bForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMInputActionProcessor_InAir", "DoCrash");

	Params::RMInputActionProcessor_InAir_DoCrash Parms{};

	Parms.bForce = bForce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMInputActionProcessor_InAir.DoFall
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bForce                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMInputActionProcessor_InAir::DoFall(bool bForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMInputActionProcessor_InAir", "DoFall");

	Params::RMInputActionProcessor_InAir_DoFall Parms{};

	Parms.bForce = bForce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMInputActionProcessor_InAir.DoFloat
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bForce                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMInputActionProcessor_InAir::DoFloat(bool bForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMInputActionProcessor_InAir", "DoFloat");

	Params::RMInputActionProcessor_InAir_DoFloat Parms{};

	Parms.bForce = bForce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMInputActionProcessor_InAir.DoJump
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bForce                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERegularJumpMode                        NewRegularJumpMode                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMInputActionProcessor_InAir::DoJump(bool bForce, ERegularJumpMode NewRegularJumpMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMInputActionProcessor_InAir", "DoJump");

	Params::RMInputActionProcessor_InAir_DoJump Parms{};

	Parms.bForce = bForce;
	Parms.NewRegularJumpMode = NewRegularJumpMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMInputActionProcessor_InAir.DoLand
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bForce                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMInputActionProcessor_InAir::DoLand(bool bForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMInputActionProcessor_InAir", "DoLand");

	Params::RMInputActionProcessor_InAir_DoLand Parms{};

	Parms.bForce = bForce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMInputActionProcessor_InAir.DoReleaseToFall
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMInputActionProcessor_InAir::DoReleaseToFall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMInputActionProcessor_InAir", "DoReleaseToFall");

	Params::RMInputActionProcessor_InAir_DoReleaseToFall Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMInputActionProcessor_InAir.EnterFloatByJumpApex
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMInputActionProcessor_InAir::EnterFloatByJumpApex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMInputActionProcessor_InAir", "EnterFloatByJumpApex");

	Params::RMInputActionProcessor_InAir_EnterFloatByJumpApex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMInputActionProcessor_InAir.GetStateMachineContext
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class URMStateMachineContext_InAir*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URMStateMachineContext_InAir* URMInputActionProcessor_InAir::GetStateMachineContext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMInputActionProcessor_InAir", "GetStateMachineContext");

	Params::RMInputActionProcessor_InAir_GetStateMachineContext Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMInputActionProcessor_InAir.Handle_DetermineActionSlotJumpIsAvailable
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMInputActionProcessor_InAir::Handle_DetermineActionSlotJumpIsAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMInputActionProcessor_InAir", "Handle_DetermineActionSlotJumpIsAvailable");

	Params::RMInputActionProcessor_InAir_Handle_DetermineActionSlotJumpIsAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMInputActionProcessor_InAir.OnReachedJumpApex
// (Final, Native, Public, BlueprintCallable)

void URMInputActionProcessor_InAir::OnReachedJumpApex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMInputActionProcessor_InAir", "OnReachedJumpApex");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMInputActionProcessor_InAir.ProcessActionAndState
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URMInputActionProcessor_InAir::ProcessActionAndState(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMInputActionProcessor_InAir", "ProcessActionAndState");

	Params::RMInputActionProcessor_InAir_ProcessActionAndState Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMInputActionProcessor_InAir.ProcessRequestedJumpActions
// (Native, Event, Public, BlueprintEvent)

void URMInputActionProcessor_InAir::ProcessRequestedJumpActions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMInputActionProcessor_InAir", "ProcessRequestedJumpActions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMInputActionProcessor_InAir.SetStateMachineContext
// (Native, Public, BlueprintCallable)
// Parameters:
// class URMStateMachineContext_InAir*     inStateMachineContext                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URMInputActionProcessor_InAir::SetStateMachineContext(class URMStateMachineContext_InAir* inStateMachineContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMInputActionProcessor_InAir", "SetStateMachineContext");

	Params::RMInputActionProcessor_InAir_SetStateMachineContext Parms{};

	Parms.inStateMachineContext = inStateMachineContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMOutputContext_InAir.GetOverrideGravityScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float URMOutputContext_InAir::GetOverrideGravityScale()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMOutputContext_InAir", "GetOverrideGravityScale");

	Params::RMOutputContext_InAir_GetOverrideGravityScale Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMOutputContext_InAir.GetStageDuration
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERegularFloatingJumpStage               InStage                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float URMOutputContext_InAir::GetStageDuration(ERegularFloatingJumpStage InStage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMOutputContext_InAir", "GetStageDuration");

	Params::RMOutputContext_InAir_GetStageDuration Parms{};

	Parms.InStage = InStage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMOutputContext_InAir.ResetOverrideGravityScale
// (Final, Native, Public, BlueprintCallable)

void URMOutputContext_InAir::ResetOverrideGravityScale()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMOutputContext_InAir", "ResetOverrideGravityScale");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMOutputContext_InAir.ResetStageDuration
// (Final, Native, Public, BlueprintCallable)

void URMOutputContext_InAir::ResetStageDuration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMOutputContext_InAir", "ResetStageDuration");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMOutputContext_InAir.SetOverrideGravityScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   GravityScale                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERegularFloatingJumpStage               InStage                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URMOutputContext_InAir::SetOverrideGravityScale(float GravityScale, ERegularFloatingJumpStage InStage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMOutputContext_InAir", "SetOverrideGravityScale");

	Params::RMOutputContext_InAir_SetOverrideGravityScale Parms{};

	Parms.GravityScale = GravityScale;
	Parms.InStage = InStage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMOutputContext_InAir.SetStageDuration
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERegularFloatingJumpStage               InStage                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   inDuration                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URMOutputContext_InAir::SetStageDuration(ERegularFloatingJumpStage InStage, float inDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMOutputContext_InAir", "SetStageDuration");

	Params::RMOutputContext_InAir_SetStageDuration Parms{};

	Parms.InStage = InStage;
	Parms.inDuration = inDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMOutputContext_InAir.UpdateStateDuration
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URMOutputContext_InAir::UpdateStateDuration(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMOutputContext_InAir", "UpdateStateDuration");

	Params::RMOutputContext_InAir_UpdateStateDuration Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMOutputContext_OnGround.CanSwitchToNewAllowedGait
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERegularLocomotionType                  NewAllowedGait                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMOutputContext_OnGround::CanSwitchToNewAllowedGait(ERegularLocomotionType NewAllowedGait)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMOutputContext_OnGround", "CanSwitchToNewAllowedGait");

	Params::RMOutputContext_OnGround_CanSwitchToNewAllowedGait Parms{};

	Parms.NewAllowedGait = NewAllowedGait;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMOutputContext_OnGround.TryToSwitchSprintGait
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnterSprint                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URMOutputContext_OnGround::TryToSwitchSprintGait(bool bEnterSprint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMOutputContext_OnGround", "TryToSwitchSprintGait");

	Params::RMOutputContext_OnGround_TryToSwitchSprintGait Parms{};

	Parms.bEnterSprint = bEnterSprint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMOutputContext_OnGround.TryToSwitchWalkOrRunGait
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bWalkOrRun                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URMOutputContext_OnGround::TryToSwitchWalkOrRunGait(bool bWalkOrRun)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMOutputContext_OnGround", "TryToSwitchWalkOrRunGait");

	Params::RMOutputContext_OnGround_TryToSwitchWalkOrRunGait Parms{};

	Parms.bWalkOrRun = bWalkOrRun;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMPTickRecord_InAir.CanAutoDoFloatWhenReachingApex
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMPTickRecord_InAir::CanAutoDoFloatWhenReachingApex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMPTickRecord_InAir", "CanAutoDoFloatWhenReachingApex");

	Params::RMPTickRecord_InAir_CanAutoDoFloatWhenReachingApex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMPTickRecord_InAir.CanAutoDoJumpInAirWhenReachingApex
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMPTickRecord_InAir::CanAutoDoJumpInAirWhenReachingApex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMPTickRecord_InAir", "CanAutoDoJumpInAirWhenReachingApex");

	Params::RMPTickRecord_InAir_CanAutoDoJumpInAirWhenReachingApex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMPTickRecord_InAir.CanReleaseToFall
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMPTickRecord_InAir::CanReleaseToFall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMPTickRecord_InAir", "CanReleaseToFall");

	Params::RMPTickRecord_InAir_CanReleaseToFall Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMPTickRecord_InAir.CheckCanDecelerateFallSpeedInFloatStage
// (Final, Native, Public, BlueprintCallable)

void URMPTickRecord_InAir::CheckCanDecelerateFallSpeedInFloatStage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMPTickRecord_InAir", "CheckCanDecelerateFallSpeedInFloatStage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMPTickRecord_InAir.ClearAccumulateDurationOfCacheDoubleJumpInput
// (Final, Native, Public, BlueprintCallable)

void URMPTickRecord_InAir::ClearAccumulateDurationOfCacheDoubleJumpInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMPTickRecord_InAir", "ClearAccumulateDurationOfCacheDoubleJumpInput");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMPTickRecord_InAir.ClearAccumulateDurationOfCacheJumpInput
// (Final, Native, Public, BlueprintCallable)

void URMPTickRecord_InAir::ClearAccumulateDurationOfCacheJumpInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMPTickRecord_InAir", "ClearAccumulateDurationOfCacheJumpInput");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMPTickRecord_InAir.ClearAccumulateDurationOfResponseJumpInputWhenOffLedgeTimer
// (Final, Native, Public, BlueprintCallable)

void URMPTickRecord_InAir::ClearAccumulateDurationOfResponseJumpInputWhenOffLedgeTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMPTickRecord_InAir", "ClearAccumulateDurationOfResponseJumpInputWhenOffLedgeTimer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMPTickRecord_InAir.ClearJumpCount
// (Final, Native, Public, BlueprintCallable)

void URMPTickRecord_InAir::ClearJumpCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMPTickRecord_InAir", "ClearJumpCount");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMPTickRecord_InAir.ClearTimerHandle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FTimerHandle&              TimerHandle                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URMPTickRecord_InAir::ClearTimerHandle(const struct FTimerHandle& TimerHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMPTickRecord_InAir", "ClearTimerHandle");

	Params::RMPTickRecord_InAir_ClearTimerHandle Parms{};

	Parms.TimerHandle = std::move(TimerHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMPTickRecord_InAir.GetCharacterMovementComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCharacterMovementComponent*      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCharacterMovementComponent* URMPTickRecord_InAir::GetCharacterMovementComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMPTickRecord_InAir", "GetCharacterMovementComponent");

	Params::RMPTickRecord_InAir_GetCharacterMovementComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMPTickRecord_InAir.HandleOn_KeepCurrentTrendFeature
// (Native, Event, Public, BlueprintEvent)

void URMPTickRecord_InAir::HandleOn_KeepCurrentTrendFeature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMPTickRecord_InAir", "HandleOn_KeepCurrentTrendFeature");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMPTickRecord_InAir.HandleOn_ProcessMovementParamsChangeWhenPlayingSkill
// (Native, Event, Public, BlueprintEvent)

void URMPTickRecord_InAir::HandleOn_ProcessMovementParamsChangeWhenPlayingSkill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMPTickRecord_InAir", "HandleOn_ProcessMovementParamsChangeWhenPlayingSkill");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMPTickRecord_InAir.HandleOn_UpdateAttributesByGeneralConfig
// (Final, Native, Public, BlueprintCallable)

void URMPTickRecord_InAir::HandleOn_UpdateAttributesByGeneralConfig()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMPTickRecord_InAir", "HandleOn_UpdateAttributesByGeneralConfig");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMPTickRecord_InAir.HandleOn_UpdateAttributesByStageChange
// (Final, Native, Public, BlueprintCallable)

void URMPTickRecord_InAir::HandleOn_UpdateAttributesByStageChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMPTickRecord_InAir", "HandleOn_UpdateAttributesByStageChange");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMPTickRecord_InAir.HandleOn_UpdateBrakingFrictionFactorValue
// (Final, Native, Public, BlueprintCallable)

void URMPTickRecord_InAir::HandleOn_UpdateBrakingFrictionFactorValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMPTickRecord_InAir", "HandleOn_UpdateBrakingFrictionFactorValue");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMPTickRecord_InAir.HandleOn_UpdateRunUpDecelerationInFloatStage
// (Final, Native, Public, BlueprintCallable)

void URMPTickRecord_InAir::HandleOn_UpdateRunUpDecelerationInFloatStage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMPTickRecord_InAir", "HandleOn_UpdateRunUpDecelerationInFloatStage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMPTickRecord_InAir.HasFloatAbility
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMPTickRecord_InAir::HasFloatAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMPTickRecord_InAir", "HasFloatAbility");

	Params::RMPTickRecord_InAir_HasFloatAbility Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMPTickRecord_InAir.HasJumpAbility
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMPTickRecord_InAir::HasJumpAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMPTickRecord_InAir", "HasJumpAbility");

	Params::RMPTickRecord_InAir_HasJumpAbility Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMPTickRecord_InAir.InitAccumlateTime_InMovementModeFalling
// (Final, Native, Public, BlueprintCallable)

void URMPTickRecord_InAir::InitAccumlateTime_InMovementModeFalling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMPTickRecord_InAir", "InitAccumlateTime_InMovementModeFalling");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMPTickRecord_InAir.IsApex
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMPTickRecord_InAir::IsApex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMPTickRecord_InAir", "IsApex");

	Params::RMPTickRecord_InAir_IsApex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMPTickRecord_InAir.IsBeforeApex
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMPTickRecord_InAir::IsBeforeApex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMPTickRecord_InAir", "IsBeforeApex");

	Params::RMPTickRecord_InAir_IsBeforeApex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMPTickRecord_InAir.IsInCrashStage
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMPTickRecord_InAir::IsInCrashStage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMPTickRecord_InAir", "IsInCrashStage");

	Params::RMPTickRecord_InAir_IsInCrashStage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMPTickRecord_InAir.IsInFallStage
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMPTickRecord_InAir::IsInFallStage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMPTickRecord_InAir", "IsInFallStage");

	Params::RMPTickRecord_InAir_IsInFallStage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMPTickRecord_InAir.IsInFloatStage
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMPTickRecord_InAir::IsInFloatStage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMPTickRecord_InAir", "IsInFloatStage");

	Params::RMPTickRecord_InAir_IsInFloatStage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMPTickRecord_InAir.IsInJumpStage
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMPTickRecord_InAir::IsInJumpStage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMPTickRecord_InAir", "IsInJumpStage");

	Params::RMPTickRecord_InAir_IsInJumpStage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMPTickRecord_InAir.IsOnLand
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMPTickRecord_InAir::IsOnLand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMPTickRecord_InAir", "IsOnLand");

	Params::RMPTickRecord_InAir_IsOnLand Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMPTickRecord_InAir.IsUseDoubleJumpZVelocity
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMPTickRecord_InAir::IsUseDoubleJumpZVelocity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMPTickRecord_InAir", "IsUseDoubleJumpZVelocity");

	Params::RMPTickRecord_InAir_IsUseDoubleJumpZVelocity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMPTickRecord_InAir.ResetInputAction_Jump
// (Final, Native, Public, BlueprintCallable)

void URMPTickRecord_InAir::ResetInputAction_Jump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMPTickRecord_InAir", "ResetInputAction_Jump");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMPTickRecord_InAir.ResetOverrideGravityScale
// (Final, Native, Public, BlueprintCallable)

void URMPTickRecord_InAir::ResetOverrideGravityScale()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMPTickRecord_InAir", "ResetOverrideGravityScale");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMPTickRecord_InAir.ResetOwnerJumpStateConfig
// (Native, Event, Public, BlueprintEvent)

void URMPTickRecord_InAir::ResetOwnerJumpStateConfig()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMPTickRecord_InAir", "ResetOwnerJumpStateConfig");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMPTickRecord_InAir.SetOverrideGravityScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewGravityScale                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERegularFloatingJumpStage               JumpStage                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URMPTickRecord_InAir::SetOverrideGravityScale(float NewGravityScale, ERegularFloatingJumpStage JumpStage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMPTickRecord_InAir", "SetOverrideGravityScale");

	Params::RMPTickRecord_InAir_SetOverrideGravityScale Parms{};

	Parms.NewGravityScale = NewGravityScale;
	Parms.JumpStage = JumpStage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMPTickRecord_InAir.SetRegularJumpMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERegularJumpMode                        NewRegularJumpMode                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URMPTickRecord_InAir::SetRegularJumpMode(ERegularJumpMode NewRegularJumpMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMPTickRecord_InAir", "SetRegularJumpMode");

	Params::RMPTickRecord_InAir_SetRegularJumpMode Parms{};

	Parms.NewRegularJumpMode = NewRegularJumpMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMPTickRecord_InAir.SetTimer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    FunctionName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLooping                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InitialStartDelay                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InitialStartDelayVariance                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTimerHandle                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTimerHandle URMPTickRecord_InAir::SetTimer(class UObject* Object, const class FString& FunctionName, float Time, bool bLooping, float InitialStartDelay, float InitialStartDelayVariance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMPTickRecord_InAir", "SetTimer");

	Params::RMPTickRecord_InAir_SetTimer Parms{};

	Parms.Object = Object;
	Parms.FunctionName = std::move(FunctionName);
	Parms.Time = Time;
	Parms.bLooping = bLooping;
	Parms.InitialStartDelay = InitialStartDelay;
	Parms.InitialStartDelayVariance = InitialStartDelayVariance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMPTickRecord_InAir.StartAccumulateDurationOfCacheDoubleJumpInput
// (Final, Native, Public, BlueprintCallable)

void URMPTickRecord_InAir::StartAccumulateDurationOfCacheDoubleJumpInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMPTickRecord_InAir", "StartAccumulateDurationOfCacheDoubleJumpInput");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMPTickRecord_InAir.StartAccumulateDurationOfCacheJumpInput
// (Final, Native, Public, BlueprintCallable)

void URMPTickRecord_InAir::StartAccumulateDurationOfCacheJumpInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMPTickRecord_InAir", "StartAccumulateDurationOfCacheJumpInput");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMPTickRecord_InAir.StartAccumulateDurationOfResponseJumpInputWhenOffLedgeTimer
// (Final, Native, Public, BlueprintCallable)

void URMPTickRecord_InAir::StartAccumulateDurationOfResponseJumpInputWhenOffLedgeTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMPTickRecord_InAir", "StartAccumulateDurationOfResponseJumpInputWhenOffLedgeTimer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMPTickRecord_InAir.StopAccumulateTime_InMovementModeFalling
// (Final, Native, Public, BlueprintCallable)

void URMPTickRecord_InAir::StopAccumulateTime_InMovementModeFalling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMPTickRecord_InAir", "StopAccumulateTime_InMovementModeFalling");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMPTickRecord_InAir.UpdateAccumulateTime_InMovementModeFalling
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URMPTickRecord_InAir::UpdateAccumulateTime_InMovementModeFalling(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMPTickRecord_InAir", "UpdateAccumulateTime_InMovementModeFalling");

	Params::RMPTickRecord_InAir_UpdateAccumulateTime_InMovementModeFalling Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMPTickRecord_InAir.UpdateDebugInfo
// (Native, Event, Public, BlueprintEvent)

void URMPTickRecord_InAir::UpdateDebugInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMPTickRecord_InAir", "UpdateDebugInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMPTickRecord_OnGround.CanChangeCurDesiredGaitToNewGait
// (Native, Public, BlueprintCallable)
// Parameters:
// ERegularLocomotionType                  Gait                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMPTickRecord_OnGround::CanChangeCurDesiredGaitToNewGait(ERegularLocomotionType Gait)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMPTickRecord_OnGround", "CanChangeCurDesiredGaitToNewGait");

	Params::RMPTickRecord_OnGround_CanChangeCurDesiredGaitToNewGait Parms{};

	Parms.Gait = Gait;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMPTickRecord_OnGround.HasSprintAbility
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMPTickRecord_OnGround::HasSprintAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMPTickRecord_OnGround", "HasSprintAbility");

	Params::RMPTickRecord_OnGround_HasSprintAbility Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function X6Game.RMPTickRecord_OnGround.SwitchRequiringSprintOperation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InputBoolValue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URMPTickRecord_OnGround::SwitchRequiringSprintOperation(bool InputBoolValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMPTickRecord_OnGround", "SwitchRequiringSprintOperation");

	Params::RMPTickRecord_OnGround_SwitchRequiringSprintOperation Parms{};

	Parms.InputBoolValue = InputBoolValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMPTickRecord_OnGround.SwitchRequiringWalkOperation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InputBoolValue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URMPTickRecord_OnGround::SwitchRequiringWalkOperation(bool InputBoolValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMPTickRecord_OnGround", "SwitchRequiringWalkOperation");

	Params::RMPTickRecord_OnGround_SwitchRequiringWalkOperation Parms{};

	Parms.InputBoolValue = InputBoolValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMStateMachineContext_InAir.BP_ChangeJumpStage
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// ERegularFloatingJumpStage               NewStage                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceUpdate                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URMStateMachineContext_InAir::BP_ChangeJumpStage(ERegularFloatingJumpStage NewStage, bool bForceUpdate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateMachineContext_InAir", "BP_ChangeJumpStage");

	Params::RMStateMachineContext_InAir_BP_ChangeJumpStage Parms{};

	Parms.NewStage = NewStage;
	Parms.bForceUpdate = bForceUpdate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMStateMachineContext_InAir.BP_Handle_StageChanged
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// ERegularFloatingJumpStage               PreviousStage                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERegularFloatingJumpStage               NewStage                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URMStateMachineContext_InAir::BP_Handle_StageChanged(ERegularFloatingJumpStage PreviousStage, ERegularFloatingJumpStage NewStage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateMachineContext_InAir", "BP_Handle_StageChanged");

	Params::RMStateMachineContext_InAir_BP_Handle_StageChanged Parms{};

	Parms.PreviousStage = PreviousStage;
	Parms.NewStage = NewStage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMStateMachineContext_InAir.BP_OnEnterCrash
// (Native, Event, Protected, BlueprintEvent)

void URMStateMachineContext_InAir::BP_OnEnterCrash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateMachineContext_InAir", "BP_OnEnterCrash");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMStateMachineContext_InAir.BP_OnEnterFall
// (Native, Event, Protected, BlueprintEvent)

void URMStateMachineContext_InAir::BP_OnEnterFall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateMachineContext_InAir", "BP_OnEnterFall");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMStateMachineContext_InAir.BP_OnEnterFloat
// (Native, Event, Protected, BlueprintEvent)

void URMStateMachineContext_InAir::BP_OnEnterFloat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateMachineContext_InAir", "BP_OnEnterFloat");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMStateMachineContext_InAir.BP_OnEnterJump
// (Native, Event, Protected, BlueprintEvent)

void URMStateMachineContext_InAir::BP_OnEnterJump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateMachineContext_InAir", "BP_OnEnterJump");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMStateMachineContext_InAir.BP_OnEnterOnLand
// (Native, Event, Protected, BlueprintEvent)

void URMStateMachineContext_InAir::BP_OnEnterOnLand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateMachineContext_InAir", "BP_OnEnterOnLand");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMStateMachineContext_InAir.BP_OnExitCrash
// (Native, Event, Protected, BlueprintEvent)

void URMStateMachineContext_InAir::BP_OnExitCrash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateMachineContext_InAir", "BP_OnExitCrash");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMStateMachineContext_InAir.BP_OnExitFall
// (Native, Event, Protected, BlueprintEvent)

void URMStateMachineContext_InAir::BP_OnExitFall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateMachineContext_InAir", "BP_OnExitFall");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMStateMachineContext_InAir.BP_OnExitFloat
// (Native, Event, Protected, BlueprintEvent)

void URMStateMachineContext_InAir::BP_OnExitFloat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateMachineContext_InAir", "BP_OnExitFloat");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMStateMachineContext_InAir.BP_OnExitJump
// (Native, Event, Protected, BlueprintEvent)

void URMStateMachineContext_InAir::BP_OnExitJump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateMachineContext_InAir", "BP_OnExitJump");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMStateMachineContext_InAir.BP_OnExitOnLand
// (Native, Event, Protected, BlueprintEvent)

void URMStateMachineContext_InAir::BP_OnExitOnLand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateMachineContext_InAir", "BP_OnExitOnLand");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMStateMachineContext_InAir.CanCrash
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMStateMachineContext_InAir::CanCrash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateMachineContext_InAir", "CanCrash");

	Params::RMStateMachineContext_InAir_CanCrash Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMStateMachineContext_InAir.CanDoFloat
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bForce                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMStateMachineContext_InAir::CanDoFloat(bool bForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateMachineContext_InAir", "CanDoFloat");

	Params::RMStateMachineContext_InAir_CanDoFloat Parms{};

	Parms.bForce = bForce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMStateMachineContext_InAir.CanJump
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bForce                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    NeedToDoAction                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMStateMachineContext_InAir::CanJump(bool bForce, bool NeedToDoAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateMachineContext_InAir", "CanJump");

	Params::RMStateMachineContext_InAir_CanJump Parms{};

	Parms.bForce = bForce;
	Parms.NeedToDoAction = NeedToDoAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMStateMachineContext_InAir.CanMultipleJump
// (Native, Public, BlueprintCallable)
// Parameters:
// ERegularJumpMode                        NewRegularJumpMode                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    NeedToDoAction                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMStateMachineContext_InAir::CanMultipleJump(ERegularJumpMode NewRegularJumpMode, bool NeedToDoAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateMachineContext_InAir", "CanMultipleJump");

	Params::RMStateMachineContext_InAir_CanMultipleJump Parms{};

	Parms.NewRegularJumpMode = NewRegularJumpMode;
	Parms.NeedToDoAction = NeedToDoAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMStateMachineContext_InAir.ChangeJumpStage
// (Native, Protected, BlueprintCallable)
// Parameters:
// ERegularFloatingJumpStage               NewStage                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceUpdate                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URMStateMachineContext_InAir::ChangeJumpStage(ERegularFloatingJumpStage NewStage, bool bForceUpdate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateMachineContext_InAir", "ChangeJumpStage");

	Params::RMStateMachineContext_InAir_ChangeJumpStage Parms{};

	Parms.NewStage = NewStage;
	Parms.bForceUpdate = bForceUpdate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMStateMachineContext_InAir.Clear_Timer_CheckPerchWhenInFloatingStage
// (Final, Native, Public, BlueprintCallable)

void URMStateMachineContext_InAir::Clear_Timer_CheckPerchWhenInFloatingStage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateMachineContext_InAir", "Clear_Timer_CheckPerchWhenInFloatingStage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMStateMachineContext_InAir.Deinitialize
// (Native, Event, Public, BlueprintEvent)

void URMStateMachineContext_InAir::Deinitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateMachineContext_InAir", "Deinitialize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMStateMachineContext_InAir.DoCrash
// (Final, Native, Public, BlueprintCallable)

void URMStateMachineContext_InAir::DoCrash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateMachineContext_InAir", "DoCrash");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMStateMachineContext_InAir.DoFall
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bForce                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMStateMachineContext_InAir::DoFall(bool bForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateMachineContext_InAir", "DoFall");

	Params::RMStateMachineContext_InAir_DoFall Parms{};

	Parms.bForce = bForce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMStateMachineContext_InAir.DoFloat
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bForce                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMStateMachineContext_InAir::DoFloat(bool bForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateMachineContext_InAir", "DoFloat");

	Params::RMStateMachineContext_InAir_DoFloat Parms{};

	Parms.bForce = bForce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMStateMachineContext_InAir.DoJump
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bForce                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERegularJumpMode                        NewRegularJumpMode                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMStateMachineContext_InAir::DoJump(bool bForce, ERegularJumpMode NewRegularJumpMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateMachineContext_InAir", "DoJump");

	Params::RMStateMachineContext_InAir_DoJump Parms{};

	Parms.bForce = bForce;
	Parms.NewRegularJumpMode = NewRegularJumpMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMStateMachineContext_InAir.DoLand
// (Final, Native, Public, BlueprintCallable)

void URMStateMachineContext_InAir::DoLand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateMachineContext_InAir", "DoLand");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMStateMachineContext_InAir.DoMultipleJump
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bForce                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERegularJumpMode                        NewRegularJumpMode                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMStateMachineContext_InAir::DoMultipleJump(bool bForce, ERegularJumpMode NewRegularJumpMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateMachineContext_InAir", "DoMultipleJump");

	Params::RMStateMachineContext_InAir_DoMultipleJump Parms{};

	Parms.bForce = bForce;
	Parms.NewRegularJumpMode = NewRegularJumpMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMStateMachineContext_InAir.DoReleaseToFall
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMStateMachineContext_InAir::DoReleaseToFall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateMachineContext_InAir", "DoReleaseToFall");

	Params::RMStateMachineContext_InAir_DoReleaseToFall Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMStateMachineContext_InAir.Handle_CheckPerchWhenInFloatingState
// (Final, Native, Public, BlueprintCallable)

void URMStateMachineContext_InAir::Handle_CheckPerchWhenInFloatingState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateMachineContext_InAir", "Handle_CheckPerchWhenInFloatingState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMStateMachineContext_InAir.Handle_DetermineActionSlotJumpIsAvailable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMStateMachineContext_InAir::Handle_DetermineActionSlotJumpIsAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateMachineContext_InAir", "Handle_DetermineActionSlotJumpIsAvailable");

	Params::RMStateMachineContext_InAir_Handle_DetermineActionSlotJumpIsAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMStateMachineContext_InAir.HasFloatAbility
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMStateMachineContext_InAir::HasFloatAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateMachineContext_InAir", "HasFloatAbility");

	Params::RMStateMachineContext_InAir_HasFloatAbility Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMStateMachineContext_InAir.HasJumpAbility
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URMStateMachineContext_InAir::HasJumpAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateMachineContext_InAir", "HasJumpAbility");

	Params::RMStateMachineContext_InAir_HasJumpAbility Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.RMStateMachineContext_InAir.OnCheckPerchWhenInFloatingStage
// (Final, Native, Private)

void URMStateMachineContext_InAir::OnCheckPerchWhenInFloatingStage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateMachineContext_InAir", "OnCheckPerchWhenInFloatingStage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMStateMachineContext_InAir.OnEnterCrash
// (Native, Protected)

void URMStateMachineContext_InAir::OnEnterCrash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateMachineContext_InAir", "OnEnterCrash");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMStateMachineContext_InAir.OnEnterFall
// (Native, Protected)

void URMStateMachineContext_InAir::OnEnterFall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateMachineContext_InAir", "OnEnterFall");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMStateMachineContext_InAir.OnEnterFloat
// (Native, Protected)

void URMStateMachineContext_InAir::OnEnterFloat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateMachineContext_InAir", "OnEnterFloat");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMStateMachineContext_InAir.OnEnterJump
// (Native, Protected)

void URMStateMachineContext_InAir::OnEnterJump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateMachineContext_InAir", "OnEnterJump");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMStateMachineContext_InAir.OnEnterOnLand
// (Native, Protected)

void URMStateMachineContext_InAir::OnEnterOnLand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateMachineContext_InAir", "OnEnterOnLand");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMStateMachineContext_InAir.OnExitCrash
// (Native, Protected)

void URMStateMachineContext_InAir::OnExitCrash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateMachineContext_InAir", "OnExitCrash");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMStateMachineContext_InAir.OnExitFall
// (Native, Protected)

void URMStateMachineContext_InAir::OnExitFall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateMachineContext_InAir", "OnExitFall");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMStateMachineContext_InAir.OnExitFloat
// (Native, Protected)

void URMStateMachineContext_InAir::OnExitFloat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateMachineContext_InAir", "OnExitFloat");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMStateMachineContext_InAir.OnExitJump
// (Native, Protected)

void URMStateMachineContext_InAir::OnExitJump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateMachineContext_InAir", "OnExitJump");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMStateMachineContext_InAir.OnExitOnLand
// (Native, Protected)

void URMStateMachineContext_InAir::OnExitOnLand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateMachineContext_InAir", "OnExitOnLand");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.RMStateMachineContext_InAir.OnInitialize
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class URMProxyTickRecordInterface*      TickRecord                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URMStateMachineContext_InAir::OnInitialize(class URMProxyTickRecordInterface* TickRecord)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RMStateMachineContext_InAir", "OnInitialize");

	Params::RMStateMachineContext_InAir_OnInitialize Parms{};

	Parms.TickRecord = TickRecord;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.ScreenShotManager.BindDelegateToViewportResized
// (Final, Native, Public, BlueprintCallable)

void UScreenShotManager::BindDelegateToViewportResized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScreenShotManager", "BindDelegateToViewportResized");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.ScreenShotManager.ClearCachedScreenShot
// (Final, Native, Public, BlueprintCallable)

void UScreenShotManager::ClearCachedScreenShot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScreenShotManager", "ClearCachedScreenShot");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.ScreenShotManager.DoHighResShot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Cmd                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UScreenShotManager::DoHighResShot(const class FString& Cmd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScreenShotManager", "DoHighResShot");

	Params::ScreenShotManager_DoHighResShot Parms{};

	Parms.Cmd = std::move(Cmd);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.ScreenShotManager.DoShot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bShowUI                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UScreenShotManager::DoShot(bool bShowUI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScreenShotManager", "DoShot");

	Params::ScreenShotManager_DoShot Parms{};

	Parms.bShowUI = bShowUI;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.ScreenShotManager.UnbindDelegateFromViewportResized
// (Final, Native, Public, BlueprintCallable)

void UScreenShotManager::UnbindDelegateFromViewportResized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScreenShotManager", "UnbindDelegateFromViewportResized");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.ScreenShotManager.GetLastCapturedScreenShot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UScreenShotManager::GetLastCapturedScreenShot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScreenShotManager", "GetLastCapturedScreenShot");

	Params::ScreenShotManager_GetLastCapturedScreenShot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.StimuliManager.AddStimuliSensor
// (Final, Native, Public)
// Parameters:
// int64                                   Identifier                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OwnerActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SenseRadius                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SenseHalfAngle                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStimuliManager::AddStimuliSensor(int64 Identifier, class AActor* OwnerActor, float SenseRadius, float SenseHalfAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StimuliManager", "AddStimuliSensor");

	Params::StimuliManager_AddStimuliSensor Parms{};

	Parms.Identifier = Identifier;
	Parms.OwnerActor = OwnerActor;
	Parms.SenseRadius = SenseRadius;
	Parms.SenseHalfAngle = SenseHalfAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.StimuliManager.AddStimuliSource
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// int64                                   Identifier                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Owner                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   InitLocation                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FStimuliSource&            StimuliSource                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UStimuliManager::AddStimuliSource(int64 Identifier, class AActor* Owner, const struct FVector& InitLocation, const struct FStimuliSource& StimuliSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StimuliManager", "AddStimuliSource");

	Params::StimuliManager_AddStimuliSource Parms{};

	Parms.Identifier = Identifier;
	Parms.Owner = Owner;
	Parms.InitLocation = std::move(InitLocation);
	Parms.StimuliSource = std::move(StimuliSource);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.StimuliManager.RemoveAllStimuliSource
// (Final, Native, Public)
// Parameters:
// int64                                   Identifier                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStimuliManager::RemoveAllStimuliSource(int64 Identifier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StimuliManager", "RemoveAllStimuliSource");

	Params::StimuliManager_RemoveAllStimuliSource Parms{};

	Parms.Identifier = Identifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.StimuliManager.RemoveMultiStimuliSource
// (Final, Native, Public, HasOutParams)
// Parameters:
// int64                                   Identifier                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<int32>&                    StimuliTags                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UStimuliManager::RemoveMultiStimuliSource(int64 Identifier, const TArray<int32>& StimuliTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StimuliManager", "RemoveMultiStimuliSource");

	Params::StimuliManager_RemoveMultiStimuliSource Parms{};

	Parms.Identifier = Identifier;
	Parms.StimuliTags = std::move(StimuliTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.StimuliManager.RemoveStimuliSensor
// (Final, Native, Public)
// Parameters:
// int64                                   Identifier                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStimuliManager::RemoveStimuliSensor(int64 Identifier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StimuliManager", "RemoveStimuliSensor");

	Params::StimuliManager_RemoveStimuliSensor Parms{};

	Parms.Identifier = Identifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.StimuliManager.RemoveStimuliSource
// (Final, Native, Public)
// Parameters:
// int64                                   Identifier                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   StimuliTag                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStimuliManager::RemoveStimuliSource(int64 Identifier, int32 StimuliTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StimuliManager", "RemoveStimuliSource");

	Params::StimuliManager_RemoveStimuliSource Parms{};

	Parms.Identifier = Identifier;
	Parms.StimuliTag = StimuliTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.StimuliManager.FindStimuliSource
// (Final, Native, Public, HasOutParams, Const)
// Parameters:
// int64                                   Identifier                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   StimuliTag                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FStimuliSource*                  OutSource                                              (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UStimuliManager::FindStimuliSource(int64 Identifier, int32 StimuliTag, struct FStimuliSource* OutSource) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StimuliManager", "FindStimuliSource");

	Params::StimuliManager_FindStimuliSource Parms{};

	Parms.Identifier = Identifier;
	Parms.StimuliTag = StimuliTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSource != nullptr)
		*OutSource = std::move(Parms.OutSource);

	return Parms.ReturnValue;
}


// Function X6Game.StimuliManager.HasStimuliSourceSet
// (Final, Native, Public, Const)
// Parameters:
// int64                                   Identifier                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UStimuliManager::HasStimuliSourceSet(int64 Identifier) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StimuliManager", "HasStimuliSourceSet");

	Params::StimuliManager_HasStimuliSourceSet Parms{};

	Parms.Identifier = Identifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.StimuliPreprocessSystem.OnActorDestroy
// (Final, Native, Protected)
// Parameters:
// class AActor*                           DestroyedActor                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStimuliPreprocessSystem::OnActorDestroy(class AActor* DestroyedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StimuliPreprocessSystem", "OnActorDestroy");

	Params::StimuliPreprocessSystem_OnActorDestroy Parms{};

	Parms.DestroyedActor = DestroyedActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.StimuliPreprocessSystem.OnSenseStimuli
// (Final, Native, Protected, HasOutParams, HasDefaults)
// Parameters:
// int64                                   Identifier                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   SourceLocation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           SourceActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   StimuliTag                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class AActor*>&            SenseActors                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    IsPendingRemove                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStimuliPreprocessSystem::OnSenseStimuli(int64 Identifier, const struct FVector& SourceLocation, class AActor* SourceActor, int32 StimuliTag, const TArray<class AActor*>& SenseActors, bool IsPendingRemove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StimuliPreprocessSystem", "OnSenseStimuli");

	Params::StimuliPreprocessSystem_OnSenseStimuli Parms{};

	Parms.Identifier = Identifier;
	Parms.SourceLocation = std::move(SourceLocation);
	Parms.SourceActor = SourceActor;
	Parms.StimuliTag = StimuliTag;
	Parms.SenseActors = std::move(SenseActors);
	Parms.IsPendingRemove = IsPendingRemove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.StimuliPreprocessSystem.OnStimuliSourceSetRemoved
// (Final, Native, Protected)
// Parameters:
// int64                                   Identifier                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   StimuliTag                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OwnerActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStimuliPreprocessSystem::OnStimuliSourceSetRemoved(int64 Identifier, int32 StimuliTag, class AActor* OwnerActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StimuliPreprocessSystem", "OnStimuliSourceSetRemoved");

	Params::StimuliPreprocessSystem_OnStimuliSourceSetRemoved Parms{};

	Parms.Identifier = Identifier;
	Parms.StimuliTag = StimuliTag;
	Parms.OwnerActor = OwnerActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.StimuliPreprocessSystem.RegisterPreprocessorRule
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AActor*                           OwnerActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FStimuliPreprocessorRule&  Rule                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UStimuliPreprocessSystem::RegisterPreprocessorRule(class AActor* OwnerActor, const struct FStimuliPreprocessorRule& Rule)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StimuliPreprocessSystem", "RegisterPreprocessorRule");

	Params::StimuliPreprocessSystem_RegisterPreprocessorRule Parms{};

	Parms.OwnerActor = OwnerActor;
	Parms.Rule = std::move(Rule);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.StimuliPreprocessSystem.UnregisterPreprocessorRule
// (Final, Native, Public)
// Parameters:
// class AActor*                           OwnerActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStimuliPreprocessSystem::UnregisterPreprocessorRule(class AActor* OwnerActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StimuliPreprocessSystem", "UnregisterPreprocessorRule");

	Params::StimuliPreprocessSystem_UnregisterPreprocessorRule Parms{};

	Parms.OwnerActor = OwnerActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.TargetSystemComponent.CustomFilterTargets
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const TArray<class AActor*>&            Actors                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UTargetSystemComponent::CustomFilterTargets(const TArray<class AActor*>& Actors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TargetSystemComponent", "CustomFilterTargets");

	Params::TargetSystemComponent_CustomFilterTargets Parms{};

	Parms.Actors = std::move(Actors);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.TargetSystemComponent.ExcuteTargetSwitchCommand
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTargetSwitchCommand*             TargetSwitchCommand                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTargetSystemComponent::ExcuteTargetSwitchCommand(class UTargetSwitchCommand* TargetSwitchCommand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TargetSystemComponent", "ExcuteTargetSwitchCommand");

	Params::TargetSystemComponent_ExcuteTargetSwitchCommand Parms{};

	Parms.TargetSwitchCommand = TargetSwitchCommand;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.TargetSystemComponent.GetCurrentCharacterInputVector
// (Native, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UTargetSystemComponent::GetCurrentCharacterInputVector()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TargetSystemComponent", "GetCurrentCharacterInputVector");

	Params::TargetSystemComponent_GetCurrentCharacterInputVector Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.TargetSystemComponent.GetSwitchTargetCommandByType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETargetSwitchMode                       TargetSwitchMode                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTargetSwitchCommand*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTargetSwitchCommand* UTargetSystemComponent::GetSwitchTargetCommandByType(ETargetSwitchMode TargetSwitchMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TargetSystemComponent", "GetSwitchTargetCommandByType");

	Params::TargetSystemComponent_GetSwitchTargetCommandByType Parms{};

	Parms.TargetSwitchMode = TargetSwitchMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.TargetSystemComponent.GetTargetLockedStatus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTargetSystemComponent::GetTargetLockedStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TargetSystemComponent", "GetTargetLockedStatus");

	Params::TargetSystemComponent_GetTargetLockedStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.TargetSystemComponent.IsEnableTargetLocking
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTargetSystemComponent::IsEnableTargetLocking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TargetSystemComponent", "IsEnableTargetLocking");

	Params::TargetSystemComponent_IsEnableTargetLocking Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.TargetSystemComponent.TargetActor
// (Final, Native, Public, BlueprintCallable)

void UTargetSystemComponent::TargetActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TargetSystemComponent", "TargetActor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.TargetSystemComponent.TargetActorWithAxisInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   AxisValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTargetSystemComponent::TargetActorWithAxisInput(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TargetSystemComponent", "TargetActorWithAxisInput");

	Params::TargetSystemComponent_TargetActorWithAxisInput Parms{};

	Parms.AxisValue = AxisValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.TargetSystemComponent.TargetFilterByPriorityRuleAndRotation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const TArray<class AActor*>&            Actors                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FRotator&                  CurrentRotation                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    needInArea                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UTargetSystemComponent::TargetFilterByPriorityRuleAndRotation(const TArray<class AActor*>& Actors, const struct FRotator& CurrentRotation, bool needInArea)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TargetSystemComponent", "TargetFilterByPriorityRuleAndRotation");

	Params::TargetSystemComponent_TargetFilterByPriorityRuleAndRotation Parms{};

	Parms.Actors = std::move(Actors);
	Parms.CurrentRotation = std::move(CurrentRotation);
	Parms.needInArea = needInArea;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.TargetSystemComponent.TargetFilterByPriorityRuleAndRotation_Override
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// const TArray<class AActor*>&            Actors                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FRotator&                  CurrentRotation                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    needInArea                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UTargetSystemComponent::TargetFilterByPriorityRuleAndRotation_Override(const TArray<class AActor*>& Actors, const struct FRotator& CurrentRotation, bool needInArea)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TargetSystemComponent", "TargetFilterByPriorityRuleAndRotation_Override");

	Params::TargetSystemComponent_TargetFilterByPriorityRuleAndRotation_Override Parms{};

	Parms.Actors = std::move(Actors);
	Parms.CurrentRotation = std::move(CurrentRotation);
	Parms.needInArea = needInArea;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.TargetSystemComponent.TargetLockOff
// (Final, Native, Public, BlueprintCallable)

void UTargetSystemComponent::TargetLockOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TargetSystemComponent", "TargetLockOff");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.TargetSystemComponent.GetLockedOnTargetActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UTargetSystemComponent::GetLockedOnTargetActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TargetSystemComponent", "GetLockedOnTargetActor");

	Params::TargetSystemComponent_GetLockedOnTargetActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.TargetSystemComponent.IsLocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTargetSystemComponent::IsLocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TargetSystemComponent", "IsLocked");

	Params::TargetSystemComponent_IsLocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.TargetSystemTargetableInterface.GetLockedOnMeshSocket
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ITargetSystemTargetableInterface::GetLockedOnMeshSocket() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TargetSystemTargetableInterface", "GetLockedOnMeshSocket");

	Params::TargetSystemTargetableInterface_GetLockedOnMeshSocket Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.TargetSystemTargetableInterface.IsTargetable
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ITargetSystemTargetableInterface::IsTargetable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TargetSystemTargetableInterface", "IsTargetable");

	Params::TargetSystemTargetableInterface_IsTargetable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.WaterVoxelContainer.AddCompAndDelegate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USceneComponent*                  Component                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool IsInWater)>         OnWaterActorsChanged                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWaterVoxelContainer::AddCompAndDelegate(class USceneComponent* Component, TDelegate<void(bool IsInWater)> OnWaterActorsChanged)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaterVoxelContainer", "AddCompAndDelegate");

	Params::WaterVoxelContainer_AddCompAndDelegate Parms{};

	Parms.Component = Component;
	Parms.OnWaterActorsChanged = OnWaterActorsChanged;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.WaterVoxelContainer.CollectAndDrawLeafBoxes
// (Final, Native, Public, BlueprintCallable)

void AWaterVoxelContainer::CollectAndDrawLeafBoxes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaterVoxelContainer", "CollectAndDrawLeafBoxes");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.WaterVoxelContainer.DrawLeafBoxes
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          targetUObject                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LifeTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDrawComplicated                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWaterVoxelContainer::DrawLeafBoxes(class UObject* targetUObject, float LifeTime, bool bDrawComplicated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaterVoxelContainer", "DrawLeafBoxes");

	Params::WaterVoxelContainer_DrawLeafBoxes Parms{};

	Parms.targetUObject = targetUObject;
	Parms.LifeTime = LifeTime;
	Parms.bDrawComplicated = bDrawComplicated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.WaterVoxelContainer.ImportBigWorldWaterVoxelFromDT
// (Final, Native, Public, BlueprintCallable)

void AWaterVoxelContainer::ImportBigWorldWaterVoxelFromDT()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaterVoxelContainer", "ImportBigWorldWaterVoxelFromDT");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.WaterVoxelContainer.ImportOtherLevelWaterVoxelFromDT
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString*                          LevelName                                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWaterVoxelContainer::ImportOtherLevelWaterVoxelFromDT(class FString* LevelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaterVoxelContainer", "ImportOtherLevelWaterVoxelFromDT");

	Params::WaterVoxelContainer_ImportOtherLevelWaterVoxelFromDT Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (LevelName != nullptr)
		*LevelName = std::move(Parms.LevelName);
}


// Function X6Game.WaterVoxelContainer.ImportWaterVoxelFromDTByWorldID
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString*                          worldId                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool IsAdd)>             InOnAssetLoaded                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWaterVoxelContainer::ImportWaterVoxelFromDTByWorldID(class FString* worldId, TDelegate<void(bool IsAdd)> InOnAssetLoaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaterVoxelContainer", "ImportWaterVoxelFromDTByWorldID");

	Params::WaterVoxelContainer_ImportWaterVoxelFromDTByWorldID Parms{};

	Parms.InOnAssetLoaded = InOnAssetLoaded;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (worldId != nullptr)
		*worldId = std::move(Parms.worldId);
}


// Function X6Game.WaterVoxelContainer.IsEnteredWater
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   Point                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWaterVoxelContainer::IsEnteredWater(const struct FVector& Point)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaterVoxelContainer", "IsEnteredWater");

	Params::WaterVoxelContainer_IsEnteredWater Parms{};

	Parms.Point = std::move(Point);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.WaterVoxelContainer.RemoveCompAndDelegate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USceneComponent*                  Component                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWaterVoxelContainer::RemoveCompAndDelegate(class USceneComponent* Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaterVoxelContainer", "RemoveCompAndDelegate");

	Params::WaterVoxelContainer_RemoveCompAndDelegate Parms{};

	Parms.Component = Component;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.WaterVoxelContainer.SetEnableDebugDraw
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWaterVoxelContainer::SetEnableDebugDraw(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaterVoxelContainer", "SetEnableDebugDraw");

	Params::WaterVoxelContainer_SetEnableDebugDraw Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.WaterVoxelContainer.SetNotDrawLeafBoxes
// (Final, Native, Public, BlueprintCallable)

void AWaterVoxelContainer::SetNotDrawLeafBoxes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaterVoxelContainer", "SetNotDrawLeafBoxes");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AbilityTask_ChargeUp.ChargeUpProxy
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UX6AbilityTask_ChargeUp*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UX6AbilityTask_ChargeUp* UX6AbilityTask_ChargeUp::ChargeUpProxy(class UGameplayAbility* OwningAbility, float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AbilityTask_ChargeUp", "ChargeUpProxy");

	Params::X6AbilityTask_ChargeUp_ChargeUpProxy Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AbilityTask_ChargeUp.OnReleaseCallback
// (Final, Native, Public)

void UX6AbilityTask_ChargeUp::OnReleaseCallback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AbilityTask_ChargeUp", "OnReleaseCallback");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AbilityTask_PerformTargeting.X6PerformTargetingRequest
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTargetingPreset*                 InTargetingPreset                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAllowAsync                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UX6AbilityTask_PerformTargeting*  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UX6AbilityTask_PerformTargeting* UX6AbilityTask_PerformTargeting::X6PerformTargetingRequest(class UGameplayAbility* OwningAbility, class UTargetingPreset* InTargetingPreset, bool bAllowAsync)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AbilityTask_PerformTargeting", "X6PerformTargetingRequest");

	Params::X6AbilityTask_PerformTargeting_X6PerformTargetingRequest Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.InTargetingPreset = InTargetingPreset;
	Parms.bAllowAsync = bAllowAsync;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AbilityTask_PlayMontageForMeshAndWaitForEvent.PlayMontageForMeshAndWaitForEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TaskInstanceName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMeshComponent*           mesh_0                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*                     MontageToPlay_0                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Rate_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             StartSection_0                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bStopWhenAbilityEnds_0                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AnimRootMotionTranslationScale_0                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OverrideBlendOutTimeForCancelAbility_0                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OverrideBlendOutTimeForStopWhenEndAbility_0            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMirror_0                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UX6AbilityTask_PlayMontageForMeshAndWaitForEvent*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UX6AbilityTask_PlayMontageForMeshAndWaitForEvent* UX6AbilityTask_PlayMontageForMeshAndWaitForEvent::PlayMontageForMeshAndWaitForEvent(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, class USkeletalMeshComponent* mesh_0, class UAnimMontage* MontageToPlay_0, float Rate_0, class FName StartSection_0, bool bStopWhenAbilityEnds_0, float AnimRootMotionTranslationScale_0, float OverrideBlendOutTimeForCancelAbility_0, float OverrideBlendOutTimeForStopWhenEndAbility_0, bool bMirror_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AbilityTask_PlayMontageForMeshAndWaitForEvent", "PlayMontageForMeshAndWaitForEvent");

	Params::X6AbilityTask_PlayMontageForMeshAndWaitForEvent_PlayMontageForMeshAndWaitForEvent Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.TaskInstanceName = TaskInstanceName;
	Parms.mesh_0 = mesh_0;
	Parms.MontageToPlay_0 = MontageToPlay_0;
	Parms.Rate_0 = Rate_0;
	Parms.StartSection_0 = StartSection_0;
	Parms.bStopWhenAbilityEnds_0 = bStopWhenAbilityEnds_0;
	Parms.AnimRootMotionTranslationScale_0 = AnimRootMotionTranslationScale_0;
	Parms.OverrideBlendOutTimeForCancelAbility_0 = OverrideBlendOutTimeForCancelAbility_0;
	Parms.OverrideBlendOutTimeForStopWhenEndAbility_0 = OverrideBlendOutTimeForStopWhenEndAbility_0;
	Parms.bMirror_0 = bMirror_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AbilityTask_PlayMontageForMeshAndWaitForEvent.OnNotifyBeginReceived
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FName                             NotifyName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FBranchingPointNotifyPayload&BranchingPointNotifyPayload                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UX6AbilityTask_PlayMontageForMeshAndWaitForEvent::OnNotifyBeginReceived(class FName NotifyName, const struct FBranchingPointNotifyPayload& BranchingPointNotifyPayload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AbilityTask_PlayMontageForMeshAndWaitForEvent", "OnNotifyBeginReceived");

	Params::X6AbilityTask_PlayMontageForMeshAndWaitForEvent_OnNotifyBeginReceived Parms{};

	Parms.NotifyName = NotifyName;
	Parms.BranchingPointNotifyPayload = std::move(BranchingPointNotifyPayload);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AbilityTask_PlayMontageForMeshAndWaitForEvent.OnNotifyEndReceived
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FName                             NotifyName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FBranchingPointNotifyPayload&BranchingPointNotifyPayload                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UX6AbilityTask_PlayMontageForMeshAndWaitForEvent::OnNotifyEndReceived(class FName NotifyName, const struct FBranchingPointNotifyPayload& BranchingPointNotifyPayload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AbilityTask_PlayMontageForMeshAndWaitForEvent", "OnNotifyEndReceived");

	Params::X6AbilityTask_PlayMontageForMeshAndWaitForEvent_OnNotifyEndReceived Parms{};

	Parms.NotifyName = NotifyName;
	Parms.BranchingPointNotifyPayload = std::move(BranchingPointNotifyPayload);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AbilityTask_SpawnBullet.SpawnBulletProxy
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimaryDataAsset*                TriggerData_0                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsModifyHitDirection_0                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TargetActor_0                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UX6AbilityTask_SpawnBullet*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UX6AbilityTask_SpawnBullet* UX6AbilityTask_SpawnBullet::SpawnBulletProxy(class UGameplayAbility* OwningAbility, class UPrimaryDataAsset* TriggerData_0, bool IsModifyHitDirection_0, class AActor* TargetActor_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AbilityTask_SpawnBullet", "SpawnBulletProxy");

	Params::X6AbilityTask_SpawnBullet_SpawnBulletProxy Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.TriggerData_0 = TriggerData_0;
	Parms.IsModifyHitDirection_0 = IsModifyHitDirection_0;
	Parms.TargetActor_0 = TargetActor_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AbilityTask_WaitAccelChange.X6WaitAccelChange
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bChangeToZero                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UX6AbilityTask_WaitAccelChange*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UX6AbilityTask_WaitAccelChange* UX6AbilityTask_WaitAccelChange::X6WaitAccelChange(class UGameplayAbility* OwningAbility, bool bChangeToZero)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AbilityTask_WaitAccelChange", "X6WaitAccelChange");

	Params::X6AbilityTask_WaitAccelChange_X6WaitAccelChange Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.bChangeToZero = bChangeToZero;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6Actor.PostServerInit
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bServer                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6Actor::PostServerInit(bool bServer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Actor", "PostServerInit");

	Params::X6Actor_PostServerInit Parms{};

	Parms.bServer = bServer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.X6Actor.PostSpawnerGroupSpawned
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AX6Actor::PostSpawnerGroupSpawned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Actor", "PostSpawnerGroupSpawned");

	UObject::ProcessEvent(Func, nullptr);
}


// Function X6Game.X6Actor.ServerInit
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bServer                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6Actor::ServerInit(bool bServer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Actor", "ServerInit");

	Params::X6Actor_ServerInit Parms{};

	Parms.bServer = bServer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.X6Actor.X6_AddTag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const TArray<class FName>&              NewX6Tags                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void AX6Actor::X6_AddTag(const TArray<class FName>& NewX6Tags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Actor", "X6_AddTag");

	Params::X6Actor_X6_AddTag Parms{};

	Parms.NewX6Tags = std::move(NewX6Tags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6Actor.X6_ClearAndInvalidateTimerHandle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FTimerHandle&              Handle                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6Actor::X6_ClearAndInvalidateTimerHandle(const struct FTimerHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Actor", "X6_ClearAndInvalidateTimerHandle");

	Params::X6Actor_X6_ClearAndInvalidateTimerHandle Parms{};

	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6Actor.X6_ClearTimer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    FunctionName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6Actor::X6_ClearTimer(class UObject* Object, const class FString& FunctionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Actor", "X6_ClearTimer");

	Params::X6Actor_X6_ClearTimer Parms{};

	Parms.Object = Object;
	Parms.FunctionName = std::move(FunctionName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6Actor.X6_ClearTimerDelegate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void()>                       Delegate                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6Actor::X6_ClearTimerDelegate(TDelegate<void()> Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Actor", "X6_ClearTimerDelegate");

	Params::X6Actor_X6_ClearTimerDelegate Parms{};

	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6Actor.X6_ClearTimerHandle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FTimerHandle&              Handle                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6Actor::X6_ClearTimerHandle(const struct FTimerHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Actor", "X6_ClearTimerHandle");

	Params::X6Actor_X6_ClearTimerHandle Parms{};

	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6Actor.X6_DeleteTag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    strTag                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6Actor::X6_DeleteTag(const class FString& strTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Actor", "X6_DeleteTag");

	Params::X6Actor_X6_DeleteTag Parms{};

	Parms.strTag = std::move(strTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6Actor.X6_GetActorHiddenFlags
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSet<int32>*                            OutFlags                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6Actor::X6_GetActorHiddenFlags(TSet<int32>* OutFlags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Actor", "X6_GetActorHiddenFlags");

	Params::X6Actor_X6_GetActorHiddenFlags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutFlags != nullptr)
		*OutFlags = std::move(Parms.OutFlags);

	return Parms.ReturnValue;
}


// Function X6Game.X6Actor.X6_GetTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> AX6Actor::X6_GetTag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Actor", "X6_GetTag");

	Params::X6Actor_X6_GetTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6Actor.X6_GetTimerElapsedTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    FunctionName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AX6Actor::X6_GetTimerElapsedTime(class UObject* Object, const class FString& FunctionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Actor", "X6_GetTimerElapsedTime");

	Params::X6Actor_X6_GetTimerElapsedTime Parms{};

	Parms.Object = Object;
	Parms.FunctionName = std::move(FunctionName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6Actor.X6_GetTimerElapsedTimeDelegate
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TDelegate<void()>                       Delegate                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AX6Actor::X6_GetTimerElapsedTimeDelegate(TDelegate<void()> Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Actor", "X6_GetTimerElapsedTimeDelegate");

	Params::X6Actor_X6_GetTimerElapsedTimeDelegate Parms{};

	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6Actor.X6_GetTimerElapsedTimeDelegateEachTrigger
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TDelegate<void()>                       Delegate                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AX6Actor::X6_GetTimerElapsedTimeDelegateEachTrigger(TDelegate<void()> Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Actor", "X6_GetTimerElapsedTimeDelegateEachTrigger");

	Params::X6Actor_X6_GetTimerElapsedTimeDelegateEachTrigger Parms{};

	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6Actor.X6_GetTimerElapsedTimeEachTrigger
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    FunctionName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AX6Actor::X6_GetTimerElapsedTimeEachTrigger(class UObject* Object, const class FString& FunctionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Actor", "X6_GetTimerElapsedTimeEachTrigger");

	Params::X6Actor_X6_GetTimerElapsedTimeEachTrigger Parms{};

	Parms.Object = Object;
	Parms.FunctionName = std::move(FunctionName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6Actor.X6_GetTimerElapsedTimeHandle
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FTimerHandle&              Handle                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AX6Actor::X6_GetTimerElapsedTimeHandle(const struct FTimerHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Actor", "X6_GetTimerElapsedTimeHandle");

	Params::X6Actor_X6_GetTimerElapsedTimeHandle Parms{};

	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6Actor.X6_GetTimerElapsedTimeHandleEachTrigger
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FTimerHandle&              Handle                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AX6Actor::X6_GetTimerElapsedTimeHandleEachTrigger(const struct FTimerHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Actor", "X6_GetTimerElapsedTimeHandleEachTrigger");

	Params::X6Actor_X6_GetTimerElapsedTimeHandleEachTrigger Parms{};

	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6Actor.X6_GetTimerRemainingTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    FunctionName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AX6Actor::X6_GetTimerRemainingTime(class UObject* Object, const class FString& FunctionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Actor", "X6_GetTimerRemainingTime");

	Params::X6Actor_X6_GetTimerRemainingTime Parms{};

	Parms.Object = Object;
	Parms.FunctionName = std::move(FunctionName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6Actor.X6_GetTimerRemainingTimeDelegate
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TDelegate<void()>                       Delegate                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AX6Actor::X6_GetTimerRemainingTimeDelegate(TDelegate<void()> Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Actor", "X6_GetTimerRemainingTimeDelegate");

	Params::X6Actor_X6_GetTimerRemainingTimeDelegate Parms{};

	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6Actor.X6_GetTimerRemainingTimeHandle
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FTimerHandle&              Handle                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AX6Actor::X6_GetTimerRemainingTimeHandle(const struct FTimerHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Actor", "X6_GetTimerRemainingTimeHandle");

	Params::X6Actor_X6_GetTimerRemainingTimeHandle Parms{};

	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6Actor.X6_HasSimulatePhysicsComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6Actor::X6_HasSimulatePhysicsComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Actor", "X6_HasSimulatePhysicsComponent");

	Params::X6Actor_X6_HasSimulatePhysicsComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6Actor.X6_HasTag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    strTag                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6Actor::X6_HasTag(const class FString& strTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Actor", "X6_HasTag");

	Params::X6Actor_X6_HasTag Parms{};

	Parms.strTag = std::move(strTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6Actor.X6_IsTimerActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    FunctionName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6Actor::X6_IsTimerActive(class UObject* Object, const class FString& FunctionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Actor", "X6_IsTimerActive");

	Params::X6Actor_X6_IsTimerActive Parms{};

	Parms.Object = Object;
	Parms.FunctionName = std::move(FunctionName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6Actor.X6_IsTimerActiveDelegate
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TDelegate<void()>                       Delegate                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6Actor::X6_IsTimerActiveDelegate(TDelegate<void()> Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Actor", "X6_IsTimerActiveDelegate");

	Params::X6Actor_X6_IsTimerActiveDelegate Parms{};

	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6Actor.X6_IsTimerActiveHandle
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FTimerHandle&              Handle                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6Actor::X6_IsTimerActiveHandle(const struct FTimerHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Actor", "X6_IsTimerActiveHandle");

	Params::X6Actor_X6_IsTimerActiveHandle Parms{};

	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6Actor.X6_IsTimerPaused
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    FunctionName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6Actor::X6_IsTimerPaused(class UObject* Object, const class FString& FunctionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Actor", "X6_IsTimerPaused");

	Params::X6Actor_X6_IsTimerPaused Parms{};

	Parms.Object = Object;
	Parms.FunctionName = std::move(FunctionName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6Actor.X6_IsTimerPausedDelegate
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TDelegate<void()>                       Delegate                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6Actor::X6_IsTimerPausedDelegate(TDelegate<void()> Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Actor", "X6_IsTimerPausedDelegate");

	Params::X6Actor_X6_IsTimerPausedDelegate Parms{};

	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6Actor.X6_IsTimerPausedHandle
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FTimerHandle&              Handle                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6Actor::X6_IsTimerPausedHandle(const struct FTimerHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Actor", "X6_IsTimerPausedHandle");

	Params::X6Actor_X6_IsTimerPausedHandle Parms{};

	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6Actor.X6_IsValidTimerHandle
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FTimerHandle&              Handle                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6Actor::X6_IsValidTimerHandle(const struct FTimerHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Actor", "X6_IsValidTimerHandle");

	Params::X6Actor_X6_IsValidTimerHandle Parms{};

	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6Actor.X6_PauseTimer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    FunctionName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6Actor::X6_PauseTimer(class UObject* Object, const class FString& FunctionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Actor", "X6_PauseTimer");

	Params::X6Actor_X6_PauseTimer Parms{};

	Parms.Object = Object;
	Parms.FunctionName = std::move(FunctionName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6Actor.X6_PauseTimerDelegate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void()>                       Delegate                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6Actor::X6_PauseTimerDelegate(TDelegate<void()> Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Actor", "X6_PauseTimerDelegate");

	Params::X6Actor_X6_PauseTimerDelegate Parms{};

	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6Actor.X6_PauseTimerHandle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FTimerHandle&              Handle                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6Actor::X6_PauseTimerHandle(const struct FTimerHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Actor", "X6_PauseTimerHandle");

	Params::X6Actor_X6_PauseTimerHandle Parms{};

	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6Actor.X6_RequireActorFade
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bFadeIn                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   FadeOutHiddenFlag                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInView                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6Actor::X6_RequireActorFade(bool bFadeIn, int32 FadeOutHiddenFlag, bool bInView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Actor", "X6_RequireActorFade");

	Params::X6Actor_X6_RequireActorFade Parms{};

	Parms.bFadeIn = bFadeIn;
	Parms.FadeOutHiddenFlag = FadeOutHiddenFlag;
	Parms.bInView = bInView;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6Actor.X6_SetActorHiddenInGame
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewHidden                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bClearFlag                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6Actor::X6_SetActorHiddenInGame(bool bNewHidden, int32 Flag, bool bClearFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Actor", "X6_SetActorHiddenInGame");

	Params::X6Actor_X6_SetActorHiddenInGame Parms{};

	Parms.bNewHidden = bNewHidden;
	Parms.Flag = Flag;
	Parms.bClearFlag = bClearFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6Actor.X6_SetTimer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    FunctionName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLooping                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InitialStartDelay                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InitialStartDelayVariance                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTimerHandle                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTimerHandle AX6Actor::X6_SetTimer(class UObject* Object, const class FString& FunctionName, float Time, bool bLooping, float InitialStartDelay, float InitialStartDelayVariance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Actor", "X6_SetTimer");

	Params::X6Actor_X6_SetTimer Parms{};

	Parms.Object = Object;
	Parms.FunctionName = std::move(FunctionName);
	Parms.Time = Time;
	Parms.bLooping = bLooping;
	Parms.InitialStartDelay = InitialStartDelay;
	Parms.InitialStartDelayVariance = InitialStartDelayVariance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6Actor.X6_SetTimerDelegate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void()>                       Delegate                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLooping                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InitialStartDelay                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InitialStartDelayVariance                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTimerHandle                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTimerHandle AX6Actor::X6_SetTimerDelegate(TDelegate<void()> Delegate, float Time, bool bLooping, float InitialStartDelay, float InitialStartDelayVariance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Actor", "X6_SetTimerDelegate");

	Params::X6Actor_X6_SetTimerDelegate Parms{};

	Parms.Delegate = Delegate;
	Parms.Time = Time;
	Parms.bLooping = bLooping;
	Parms.InitialStartDelay = InitialStartDelay;
	Parms.InitialStartDelayVariance = InitialStartDelayVariance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6Actor.X6_SimulatePhysicsDisable
// (Final, Native, Public, BlueprintCallable)

void AX6Actor::X6_SimulatePhysicsDisable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Actor", "X6_SimulatePhysicsDisable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6Actor.X6_SimulatePhysicsEnable
// (Final, Native, Public, BlueprintCallable)

void AX6Actor::X6_SimulatePhysicsEnable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Actor", "X6_SimulatePhysicsEnable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6Actor.X6_TimerExists
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    FunctionName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6Actor::X6_TimerExists(class UObject* Object, const class FString& FunctionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Actor", "X6_TimerExists");

	Params::X6Actor_X6_TimerExists Parms{};

	Parms.Object = Object;
	Parms.FunctionName = std::move(FunctionName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6Actor.X6_TimerExistsDelegate
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TDelegate<void()>                       Delegate                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6Actor::X6_TimerExistsDelegate(TDelegate<void()> Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Actor", "X6_TimerExistsDelegate");

	Params::X6Actor_X6_TimerExistsDelegate Parms{};

	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6Actor.X6_TimerExistsHandle
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FTimerHandle&              Handle                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6Actor::X6_TimerExistsHandle(const struct FTimerHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Actor", "X6_TimerExistsHandle");

	Params::X6Actor_X6_TimerExistsHandle Parms{};

	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6Actor.X6_UnPauseTimer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    FunctionName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6Actor::X6_UnPauseTimer(class UObject* Object, const class FString& FunctionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Actor", "X6_UnPauseTimer");

	Params::X6Actor_X6_UnPauseTimer Parms{};

	Parms.Object = Object;
	Parms.FunctionName = std::move(FunctionName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6Actor.X6_UnPauseTimerDelegate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void()>                       Delegate                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6Actor::X6_UnPauseTimerDelegate(TDelegate<void()> Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Actor", "X6_UnPauseTimerDelegate");

	Params::X6Actor_X6_UnPauseTimerDelegate Parms{};

	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6Actor.X6_UnPauseTimerHandle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FTimerHandle&              Handle                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6Actor::X6_UnPauseTimerHandle(const struct FTimerHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Actor", "X6_UnPauseTimerHandle");

	Params::X6Actor_X6_UnPauseTimerHandle Parms{};

	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AdjustmentBlendWarpComponent.AddOrUpdateWarpTarget
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FMotionWarpingTarget&      WarpTarget                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UX6AdjustmentBlendWarpComponent::AddOrUpdateWarpTarget(const struct FMotionWarpingTarget& WarpTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AdjustmentBlendWarpComponent", "AddOrUpdateWarpTarget");

	Params::X6AdjustmentBlendWarpComponent_AddOrUpdateWarpTarget Parms{};

	Parms.WarpTarget = std::move(WarpTarget);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AdjustmentBlendWarpComponent.RemoveWarpTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             WarpTargetName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UX6AdjustmentBlendWarpComponent::RemoveWarpTarget(class FName WarpTargetName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AdjustmentBlendWarpComponent", "RemoveWarpTarget");

	Params::X6AdjustmentBlendWarpComponent_RemoveWarpTarget Parms{};

	Parms.WarpTargetName = WarpTargetName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AIBlueprintLibrary.AdjustLocationWhenOverlap
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           OwnerActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCapsuleComponent*                CapsuleComponet                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AIBlueprintLibrary::AdjustLocationWhenOverlap(class AActor* OwnerActor, class UCapsuleComponent* CapsuleComponet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AIBlueprintLibrary", "AdjustLocationWhenOverlap");

	Params::X6AIBlueprintLibrary_AdjustLocationWhenOverlap Parms{};

	Parms.OwnerActor = OwnerActor;
	Parms.CapsuleComponet = CapsuleComponet;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AIBlueprintLibrary.CachedOrResetCapsuleCompLocation
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           OwnerActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCapsuleComponent*                CapsuleComponet                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bResetData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   IsRootComponent                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  Radius                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  HalfHeight                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<int64, float>*                     ChildComponentRelativeZMap                             (Parm, OutParm, NativeAccessSpecifierPublic)

void UX6AIBlueprintLibrary::CachedOrResetCapsuleCompLocation(class AActor* OwnerActor, class UCapsuleComponent* CapsuleComponet, bool bResetData, bool* IsRootComponent, float* Radius, float* HalfHeight, TMap<int64, float>* ChildComponentRelativeZMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AIBlueprintLibrary", "CachedOrResetCapsuleCompLocation");

	Params::X6AIBlueprintLibrary_CachedOrResetCapsuleCompLocation Parms{};

	Parms.OwnerActor = OwnerActor;
	Parms.CapsuleComponet = CapsuleComponet;
	Parms.bResetData = bResetData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsRootComponent != nullptr)
		*IsRootComponent = Parms.IsRootComponent;

	if (Radius != nullptr)
		*Radius = Parms.Radius;

	if (HalfHeight != nullptr)
		*HalfHeight = Parms.HalfHeight;

	if (ChildComponentRelativeZMap != nullptr)
		*ChildComponentRelativeZMap = std::move(Parms.ChildComponentRelativeZMap);
}


// Function X6Game.X6AIBlueprintLibrary.DisableActorRelatedTicks
// (Final, Native, Static, Public, HasOutParams)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                           IgnoreClass                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UObject*>*                 OutDisabledUObjects                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UX6AIBlueprintLibrary::DisableActorRelatedTicks(class AActor* Actor, class UClass* IgnoreClass, TArray<class UObject*>* OutDisabledUObjects)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AIBlueprintLibrary", "DisableActorRelatedTicks");

	Params::X6AIBlueprintLibrary_DisableActorRelatedTicks Parms{};

	Parms.Actor = Actor;
	Parms.IgnoreClass = IgnoreClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDisabledUObjects != nullptr)
		*OutDisabledUObjects = std::move(Parms.OutDisabledUObjects);
}


// Function X6Game.X6AIBlueprintLibrary.EnableUObjectsTick
// (Final, Native, Static, Public)
// Parameters:
// const TArray<class UObject*>&           UObjects                                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UX6AIBlueprintLibrary::EnableUObjectsTick(const TArray<class UObject*>& UObjects)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AIBlueprintLibrary", "EnableUObjectsTick");

	Params::X6AIBlueprintLibrary_EnableUObjectsTick Parms{};

	Parms.UObjects = std::move(UObjects);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AIBlueprintLibrary.FindWalkableFloorInTargetSurround
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class ACharacter*                       FollowTargetCharacter                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ACharacter*                       OwnerCharacter                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector*                         OutWlakablePoint                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDetectDirectLand                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DirectLandDownTraceDis                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SecondTraceDeltaDistance                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   HorizontalDistance                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DownDistance                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   WaterCollionChannel                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AIBlueprintLibrary::FindWalkableFloorInTargetSurround(class ACharacter* FollowTargetCharacter, class ACharacter* OwnerCharacter, struct FVector* OutWlakablePoint, bool bDetectDirectLand, float DirectLandDownTraceDis, float SecondTraceDeltaDistance, float HorizontalDistance, float DownDistance, int32 WaterCollionChannel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AIBlueprintLibrary", "FindWalkableFloorInTargetSurround");

	Params::X6AIBlueprintLibrary_FindWalkableFloorInTargetSurround Parms{};

	Parms.FollowTargetCharacter = FollowTargetCharacter;
	Parms.OwnerCharacter = OwnerCharacter;
	Parms.bDetectDirectLand = bDetectDirectLand;
	Parms.DirectLandDownTraceDis = DirectLandDownTraceDis;
	Parms.SecondTraceDeltaDistance = SecondTraceDeltaDistance;
	Parms.HorizontalDistance = HorizontalDistance;
	Parms.DownDistance = DownDistance;
	Parms.WaterCollionChannel = WaterCollionChannel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutWlakablePoint != nullptr)
		*OutWlakablePoint = std::move(Parms.OutWlakablePoint);

	return Parms.ReturnValue;
}


// Function X6Game.X6AIBlueprintLibrary.GetActorCollisionHalfHeight
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6AIBlueprintLibrary::GetActorCollisionHalfHeight(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AIBlueprintLibrary", "GetActorCollisionHalfHeight");

	Params::X6AIBlueprintLibrary_GetActorCollisionHalfHeight Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AIBlueprintLibrary.GetActorCollisionRadius
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6AIBlueprintLibrary::GetActorCollisionRadius(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AIBlueprintLibrary", "GetActorCollisionRadius");

	Params::X6AIBlueprintLibrary_GetActorCollisionRadius Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AIBlueprintLibrary.GetActorNavLocation
// (Final, Native, Static, Public, HasDefaults)
// Parameters:
// const class AActor*                     Actor                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UX6AIBlueprintLibrary::GetActorNavLocation(const class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AIBlueprintLibrary", "GetActorNavLocation");

	Params::X6AIBlueprintLibrary_GetActorNavLocation Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AIBlueprintLibrary.GetDistToActorWithoutRadius
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           ActorA                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ActorB                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              OnXYPlane                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6AIBlueprintLibrary::GetDistToActorWithoutRadius(class AActor* ActorA, class AActor* ActorB, const bool OnXYPlane)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AIBlueprintLibrary", "GetDistToActorWithoutRadius");

	Params::X6AIBlueprintLibrary_GetDistToActorWithoutRadius Parms{};

	Parms.ActorA = ActorA;
	Parms.ActorB = ActorB;
	Parms.OnXYPlane = OnXYPlane;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AIBlueprintLibrary.GetRootBehaviorTree
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AAIController*                    Controller                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBehaviorTree*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBehaviorTree* UX6AIBlueprintLibrary::GetRootBehaviorTree(class AAIController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AIBlueprintLibrary", "GetRootBehaviorTree");

	Params::X6AIBlueprintLibrary_GetRootBehaviorTree Parms{};

	Parms.Controller = Controller;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AIBlueprintLibrary.GetSignedAngleBetweenVector
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   A                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   B                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6AIBlueprintLibrary::GetSignedAngleBetweenVector(const struct FVector& A, const struct FVector& B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AIBlueprintLibrary", "GetSignedAngleBetweenVector");

	Params::X6AIBlueprintLibrary_GetSignedAngleBetweenVector Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AIBlueprintLibrary.InsertSteeringPointToPath
// (Final, Native, Static, Public, HasOutParams, HasDefaults)
// Parameters:
// class UX6NavigationPathPoints*          PathPoints                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Orientation                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxSteeringAngle                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartSteeringDistance                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  OutYaw                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UX6AIBlueprintLibrary::InsertSteeringPointToPath(class UX6NavigationPathPoints* PathPoints, const struct FVector& Orientation, float MaxSteeringAngle, float StartSteeringDistance, float* OutYaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AIBlueprintLibrary", "InsertSteeringPointToPath");

	Params::X6AIBlueprintLibrary_InsertSteeringPointToPath Parms{};

	Parms.PathPoints = PathPoints;
	Parms.Orientation = std::move(Orientation);
	Parms.MaxSteeringAngle = MaxSteeringAngle;
	Parms.StartSteeringDistance = StartSteeringDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutYaw != nullptr)
		*OutYaw = Parms.OutYaw;

	return Parms.ReturnValue;
}


// Function X6Game.X6AIBlueprintLibrary.InvalidLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UX6AIBlueprintLibrary::InvalidLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AIBlueprintLibrary", "InvalidLocation");

	Params::X6AIBlueprintLibrary_InvalidLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AIBlueprintLibrary.InvalidRotation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator UX6AIBlueprintLibrary::InvalidRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AIBlueprintLibrary", "InvalidRotation");

	Params::X6AIBlueprintLibrary_InvalidRotation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AIBlueprintLibrary.IsActorInRange
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           TestActor                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   OriginPoint                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Radius                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AIBlueprintLibrary::IsActorInRange(class AActor* TestActor, const struct FVector& OriginPoint, const float Radius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AIBlueprintLibrary", "IsActorInRange");

	Params::X6AIBlueprintLibrary_IsActorInRange Parms{};

	Parms.TestActor = TestActor;
	Parms.OriginPoint = std::move(OriginPoint);
	Parms.Radius = Radius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AIBlueprintLibrary.IsActorMovingOnGround
// (Final, Native, Static, Public)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AIBlueprintLibrary::IsActorMovingOnGround(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AIBlueprintLibrary", "IsActorMovingOnGround");

	Params::X6AIBlueprintLibrary_IsActorMovingOnGround Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AIBlueprintLibrary.IsAgentFollowingAPath
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APawn*                            Agent                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AIBlueprintLibrary::IsAgentFollowingAPath(class APawn* Agent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AIBlueprintLibrary", "IsAgentFollowingAPath");

	Params::X6AIBlueprintLibrary_IsAgentFollowingAPath Parms{};

	Parms.Agent = Agent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AIBlueprintLibrary.IsNoneBBKeySelector
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FBlackboardKeySelector&    InBBKeySelector                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AIBlueprintLibrary::IsNoneBBKeySelector(const struct FBlackboardKeySelector& InBBKeySelector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AIBlueprintLibrary", "IsNoneBBKeySelector");

	Params::X6AIBlueprintLibrary_IsNoneBBKeySelector Parms{};

	Parms.InBBKeySelector = std::move(InBBKeySelector);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AIBlueprintLibrary.IsPointInActorCone
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   TestPoint                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             ConeHalfAngle                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             ConeAngleOffset                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              OnXYPlane                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AIBlueprintLibrary::IsPointInActorCone(const struct FVector& TestPoint, class AActor* Actor, const float ConeHalfAngle, const float ConeAngleOffset, const bool OnXYPlane)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AIBlueprintLibrary", "IsPointInActorCone");

	Params::X6AIBlueprintLibrary_IsPointInActorCone Parms{};

	Parms.TestPoint = std::move(TestPoint);
	Parms.Actor = Actor;
	Parms.ConeHalfAngle = ConeHalfAngle;
	Parms.ConeAngleOffset = ConeAngleOffset;
	Parms.OnXYPlane = OnXYPlane;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AIBlueprintLibrary.IsPointInActorRange
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   TestPoint                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Radius                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             HalfAngle                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             AngleOffset                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AIBlueprintLibrary::IsPointInActorRange(class AActor* Actor, const struct FVector& TestPoint, const float Radius, const float HalfAngle, const float AngleOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AIBlueprintLibrary", "IsPointInActorRange");

	Params::X6AIBlueprintLibrary_IsPointInActorRange Parms{};

	Parms.Actor = Actor;
	Parms.TestPoint = std::move(TestPoint);
	Parms.Radius = Radius;
	Parms.HalfAngle = HalfAngle;
	Parms.AngleOffset = AngleOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AIBlueprintLibrary.IsPointInActorRange2D
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   TestPoint                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Radius                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             HalfAngle                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             AngleOffset                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AIBlueprintLibrary::IsPointInActorRange2D(class AActor* Actor, const struct FVector& TestPoint, const float Radius, const float HalfAngle, const float AngleOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AIBlueprintLibrary", "IsPointInActorRange2D");

	Params::X6AIBlueprintLibrary_IsPointInActorRange2D Parms{};

	Parms.Actor = Actor;
	Parms.TestPoint = std::move(TestPoint);
	Parms.Radius = Radius;
	Parms.HalfAngle = HalfAngle;
	Parms.AngleOffset = AngleOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AIBlueprintLibrary.LineSphereIntersection
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   CircleCenter                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   LineStart                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   LineEnd                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AIBlueprintLibrary::LineSphereIntersection(const struct FVector& CircleCenter, float Radius, const struct FVector& LineStart, const struct FVector& LineEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AIBlueprintLibrary", "LineSphereIntersection");

	Params::X6AIBlueprintLibrary_LineSphereIntersection Parms{};

	Parms.CircleCenter = std::move(CircleCenter);
	Parms.Radius = Radius;
	Parms.LineStart = std::move(LineStart);
	Parms.LineEnd = std::move(LineEnd);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AIBlueprintLibrary.MakeNavigationPathPoints
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<struct FVector>&           PointLocations                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class UX6NavigationPathPoints*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UX6NavigationPathPoints* UX6AIBlueprintLibrary::MakeNavigationPathPoints(const TArray<struct FVector>& PointLocations)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AIBlueprintLibrary", "MakeNavigationPathPoints");

	Params::X6AIBlueprintLibrary_MakeNavigationPathPoints Parms{};

	Parms.PointLocations = std::move(PointLocations);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AIBlueprintLibrary.PathPointsSineInterp
// (Final, Native, Static, Public)
// Parameters:
// class UX6NavigationPathPoints*          PathPoints                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AActor*                     PathOwner                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             OneCycleSampleNum                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             AmplitudeMin                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             AmplitudeMax                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             FrequencyMin                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             FrequencyMax                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AIBlueprintLibrary::PathPointsSineInterp(class UX6NavigationPathPoints* PathPoints, const class AActor* PathOwner, const int32 OneCycleSampleNum, const float AmplitudeMin, const float AmplitudeMax, const float FrequencyMin, const float FrequencyMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AIBlueprintLibrary", "PathPointsSineInterp");

	Params::X6AIBlueprintLibrary_PathPointsSineInterp Parms{};

	Parms.PathPoints = PathPoints;
	Parms.PathOwner = PathOwner;
	Parms.OneCycleSampleNum = OneCycleSampleNum;
	Parms.AmplitudeMin = AmplitudeMin;
	Parms.AmplitudeMax = AmplitudeMax;
	Parms.FrequencyMin = FrequencyMin;
	Parms.FrequencyMax = FrequencyMax;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AIBlueprintLibrary.SetPreciseReachThreshold
// (Final, Native, Static, Public)
// Parameters:
// class AAIController*                    Controller                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AgentRadiusMultiplier                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AgentHalfHeightMultiplier                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AIBlueprintLibrary::SetPreciseReachThreshold(class AAIController* Controller, float AgentRadiusMultiplier, float AgentHalfHeightMultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AIBlueprintLibrary", "SetPreciseReachThreshold");

	Params::X6AIBlueprintLibrary_SetPreciseReachThreshold Parms{};

	Parms.Controller = Controller;
	Parms.AgentRadiusMultiplier = AgentRadiusMultiplier;
	Parms.AgentHalfHeightMultiplier = AgentHalfHeightMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AIBlueprintLibrary.ShowAIGameplayDebugger
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsShow                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InTargetActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>*                          EnableFeaturesArray                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UX6AIBlueprintLibrary::ShowAIGameplayDebugger(class UObject* WorldContextObject, bool bIsShow, class AActor* InTargetActor, TArray<int32>* EnableFeaturesArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AIBlueprintLibrary", "ShowAIGameplayDebugger");

	Params::X6AIBlueprintLibrary_ShowAIGameplayDebugger Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.bIsShow = bIsShow;
	Parms.InTargetActor = InTargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (EnableFeaturesArray != nullptr)
		*EnableFeaturesArray = std::move(Parms.EnableFeaturesArray);
}


// Function X6Game.X6AIBlueprintLibrary.SmoothPathByConstantRadius
// (Final, Native, Static, Public, HasOutParams)
// Parameters:
// class AActor*                           PathOwner                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVector>*                 InOutPath                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InterpStep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDrawDebug                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DrawTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AIBlueprintLibrary::SmoothPathByConstantRadius(class AActor* PathOwner, TArray<struct FVector>* InOutPath, float Radius, float InterpStep, bool bDrawDebug, float DrawTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AIBlueprintLibrary", "SmoothPathByConstantRadius");

	Params::X6AIBlueprintLibrary_SmoothPathByConstantRadius Parms{};

	Parms.PathOwner = PathOwner;
	Parms.Radius = Radius;
	Parms.InterpStep = InterpStep;
	Parms.bDrawDebug = bDrawDebug;
	Parms.DrawTime = DrawTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (InOutPath != nullptr)
		*InOutPath = std::move(Parms.InOutPath);

	return Parms.ReturnValue;
}


// Function X6Game.X6AIBlueprintLibrary.StopAIMovementAndResetVelocity
// (Final, Native, Static, Public)
// Parameters:
// class AAIController*                    AIController                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AIBlueprintLibrary::StopAIMovementAndResetVelocity(class AAIController* AIController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AIBlueprintLibrary", "StopAIMovementAndResetVelocity");

	Params::X6AIBlueprintLibrary_StopAIMovementAndResetVelocity Parms{};

	Parms.AIController = AIController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AIBlueprintLibrary.SubsteppingQInterpTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults)
// Parameters:
// const struct FRotator&                  Current                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// const struct FRotator&                  Target                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InterpSpeed                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeStep                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator UX6AIBlueprintLibrary::SubsteppingQInterpTo(const struct FRotator& Current, const struct FRotator& Target, float DeltaTime, float InterpSpeed, float TimeStep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AIBlueprintLibrary", "SubsteppingQInterpTo");

	Params::X6AIBlueprintLibrary_SubsteppingQInterpTo Parms{};

	Parms.Current = std::move(Current);
	Parms.Target = std::move(Target);
	Parms.DeltaTime = DeltaTime;
	Parms.InterpSpeed = InterpSpeed;
	Parms.TimeStep = TimeStep;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AIBlueprintLibrary.SubsteppingVInterpTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults)
// Parameters:
// const struct FVector&                   Current                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Target                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InterpSpeed                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeStep                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UX6AIBlueprintLibrary::SubsteppingVInterpTo(const struct FVector& Current, const struct FVector& Target, float DeltaTime, float InterpSpeed, float TimeStep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AIBlueprintLibrary", "SubsteppingVInterpTo");

	Params::X6AIBlueprintLibrary_SubsteppingVInterpTo Parms{};

	Parms.Current = std::move(Current);
	Parms.Target = std::move(Target);
	Parms.DeltaTime = DeltaTime;
	Parms.InterpSpeed = InterpSpeed;
	Parms.TimeStep = TimeStep;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AIBlueprintLibrary.TestFloorDist
// (Final, Native, Static, Public, HasOutParams)
// Parameters:
// const class AActor*                     TestActor                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETraceTypeQuery                         TraceType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LineDistance                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFindFloorResult*                OutFindFloorResult                                     (Parm, OutParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UX6AIBlueprintLibrary::TestFloorDist(const class AActor* TestActor, ETraceTypeQuery TraceType, float LineDistance, struct FFindFloorResult* OutFindFloorResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AIBlueprintLibrary", "TestFloorDist");

	Params::X6AIBlueprintLibrary_TestFloorDist Parms{};

	Parms.TestActor = TestActor;
	Parms.TraceType = TraceType;
	Parms.LineDistance = LineDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutFindFloorResult != nullptr)
		*OutFindFloorResult = std::move(Parms.OutFindFloorResult);
}


// Function X6Game.X6AIBlueprintLibrary.TryAdjustPathEndPoint
// (Final, Native, Static, Public, HasOutParams, HasDefaults)
// Parameters:
// class UX6NavigationPathPoints*          PathPoints                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           PathOwner                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   DesiredLocation                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AcceptanceMinDistanceSq                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AcceptanceMaxDistanceSq                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class AActor*>&            ActorsToIgnore                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AIBlueprintLibrary::TryAdjustPathEndPoint(class UX6NavigationPathPoints* PathPoints, class AActor* PathOwner, const struct FVector& DesiredLocation, float AcceptanceMinDistanceSq, float AcceptanceMaxDistanceSq, const TArray<class AActor*>& ActorsToIgnore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AIBlueprintLibrary", "TryAdjustPathEndPoint");

	Params::X6AIBlueprintLibrary_TryAdjustPathEndPoint Parms{};

	Parms.PathPoints = PathPoints;
	Parms.PathOwner = PathOwner;
	Parms.DesiredLocation = std::move(DesiredLocation);
	Parms.AcceptanceMinDistanceSq = AcceptanceMinDistanceSq;
	Parms.AcceptanceMaxDistanceSq = AcceptanceMaxDistanceSq;
	Parms.ActorsToIgnore = std::move(ActorsToIgnore);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AIBlueprintLibrary.VisibilityClippingPathPoints
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APawn*                            OwnerActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UX6NavigationPathPoints*          PathPoints                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EVisibilityClipMode                     ClipMode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ClipScreenSize                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   IterationCount                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AIBlueprintLibrary::VisibilityClippingPathPoints(class APawn* OwnerActor, class UX6NavigationPathPoints* PathPoints, EVisibilityClipMode ClipMode, float ClipScreenSize, int32 IterationCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AIBlueprintLibrary", "VisibilityClippingPathPoints");

	Params::X6AIBlueprintLibrary_VisibilityClippingPathPoints Parms{};

	Parms.OwnerActor = OwnerActor;
	Parms.PathPoints = PathPoints;
	Parms.ClipMode = ClipMode;
	Parms.ClipScreenSize = ClipScreenSize;
	Parms.IterationCount = IterationCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AIController.SetGetOutOfNavmeshThreshold
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   threshold                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6AIController::SetGetOutOfNavmeshThreshold(int32 threshold)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AIController", "SetGetOutOfNavmeshThreshold");

	Params::X6AIController_SetGetOutOfNavmeshThreshold Parms{};

	Parms.threshold = threshold;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AIController.ClearMaxPitchAngle
// (Final, Native, Public, BlueprintCallable)

void AX6AIController::ClearMaxPitchAngle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AIController", "ClearMaxPitchAngle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AIController.FlyToActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class AActor*                     Goal                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AcceptanceRadius                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bStopOnOverlap                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   UserFlag                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPathFollowingRequestResult             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPathFollowingRequestResult AX6AIController::FlyToActor(const class AActor* Goal, float AcceptanceRadius, bool bStopOnOverlap, int32 UserFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AIController", "FlyToActor");

	Params::X6AIController_FlyToActor Parms{};

	Parms.Goal = Goal;
	Parms.AcceptanceRadius = AcceptanceRadius;
	Parms.bStopOnOverlap = bStopOnOverlap;
	Parms.UserFlag = UserFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AIController.FlyToLocation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   dest                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AcceptanceRadius                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bStopOnOverlap                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   UserFlag                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPathFollowingRequestResult             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPathFollowingRequestResult AX6AIController::FlyToLocation(const struct FVector& dest, float AcceptanceRadius, bool bStopOnOverlap, int32 UserFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AIController", "FlyToLocation");

	Params::X6AIController_FlyToLocation Parms{};

	Parms.dest = std::move(dest);
	Parms.AcceptanceRadius = AcceptanceRadius;
	Parms.bStopOnOverlap = bStopOnOverlap;
	Parms.UserFlag = UserFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AIController.GetAccelerationRotateSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AX6AIController::GetAccelerationRotateSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AIController", "GetAccelerationRotateSpeed");

	Params::X6AIController_GetAccelerationRotateSpeed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AIController.GetPerceptionComponent
// (Native, Public, BlueprintCallable)
// Parameters:
// class UAIPerceptionComponent*           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAIPerceptionComponent* AX6AIController::GetPerceptionComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AIController", "GetPerceptionComponent");

	Params::X6AIController_GetPerceptionComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AIController.MoveToLocationWithFlag
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   dest                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   UserFlag                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AcceptanceRadius                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bStopOnOverlap                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUsePathfinding                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bProjectDestinationToNavigation                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCanStrafe                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UNavigationQueryFilter>FilterClass                                            (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAllowPartialPath                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPathFollowingRequestResult             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPathFollowingRequestResult AX6AIController::MoveToLocationWithFlag(const struct FVector& dest, int32 UserFlag, float AcceptanceRadius, bool bStopOnOverlap, bool bUsePathfinding, bool bProjectDestinationToNavigation, bool bCanStrafe, TSubclassOf<class UNavigationQueryFilter> FilterClass, bool bAllowPartialPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AIController", "MoveToLocationWithFlag");

	Params::X6AIController_MoveToLocationWithFlag Parms{};

	Parms.dest = std::move(dest);
	Parms.UserFlag = UserFlag;
	Parms.AcceptanceRadius = AcceptanceRadius;
	Parms.bStopOnOverlap = bStopOnOverlap;
	Parms.bUsePathfinding = bUsePathfinding;
	Parms.bProjectDestinationToNavigation = bProjectDestinationToNavigation;
	Parms.bCanStrafe = bCanStrafe;
	Parms.FilterClass = FilterClass;
	Parms.bAllowPartialPath = bAllowPartialPath;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AIController.MoveToLocationWithPath
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   dest                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FVector>&           PathPoints                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   UserFlag                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AcceptanceRadius                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bStopOnOverlap                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUsePathfinding                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bProjectDestinationToNavigation                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCanStrafe                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UNavigationQueryFilter>FilterClass                                            (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAllowPartialPaths                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPathFollowingRequestResult             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPathFollowingRequestResult AX6AIController::MoveToLocationWithPath(const struct FVector& dest, const TArray<struct FVector>& PathPoints, int32 UserFlag, float AcceptanceRadius, bool bStopOnOverlap, bool bUsePathfinding, bool bProjectDestinationToNavigation, bool bCanStrafe, TSubclassOf<class UNavigationQueryFilter> FilterClass, bool bAllowPartialPaths)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AIController", "MoveToLocationWithPath");

	Params::X6AIController_MoveToLocationWithPath Parms{};

	Parms.dest = std::move(dest);
	Parms.PathPoints = std::move(PathPoints);
	Parms.UserFlag = UserFlag;
	Parms.AcceptanceRadius = AcceptanceRadius;
	Parms.bStopOnOverlap = bStopOnOverlap;
	Parms.bUsePathfinding = bUsePathfinding;
	Parms.bProjectDestinationToNavigation = bProjectDestinationToNavigation;
	Parms.bCanStrafe = bCanStrafe;
	Parms.FilterClass = FilterClass;
	Parms.bAllowPartialPaths = bAllowPartialPaths;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AIController.OnForceRepath
// (Final, Native, Private, BlueprintCallable)

void AX6AIController::OnForceRepath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AIController", "OnForceRepath");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AIController.OnGetServerPath
// (Native, Protected)
// Parameters:
// int64                                   InRequestID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UX6NavigationPathPoints*          PathPoints                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6AIController::OnGetServerPath(int64 InRequestID, class UX6NavigationPathPoints* PathPoints)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AIController", "OnGetServerPath");

	Params::X6AIController_OnGetServerPath Parms{};

	Parms.InRequestID = InRequestID;
	Parms.PathPoints = PathPoints;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AIController.PauseBehaviorTree
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Reason                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6AIController::PauseBehaviorTree(const class FString& Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AIController", "PauseBehaviorTree");

	Params::X6AIController_PauseBehaviorTree Parms{};

	Parms.Reason = std::move(Reason);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AIController.ReportMoveOutOfNavmesh
// (Final, Native, Public, BlueprintCallable)

void AX6AIController::ReportMoveOutOfNavmesh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AIController", "ReportMoveOutOfNavmesh");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AIController.ResumeBehaviorTree
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Reason                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6AIController::ResumeBehaviorTree(const class FString& Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AIController", "ResumeBehaviorTree");

	Params::X6AIController_ResumeBehaviorTree Parms{};

	Parms.Reason = std::move(Reason);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AIController.SetAccelerationRotateSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InAccelerationRotateSpeed                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6AIController::SetAccelerationRotateSpeed(float InAccelerationRotateSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AIController", "SetAccelerationRotateSpeed");

	Params::X6AIController_SetAccelerationRotateSpeed Parms{};

	Parms.InAccelerationRotateSpeed = InAccelerationRotateSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AIController.SetMaxPitchAngle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ControlDepressionAngle                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ControlElevationAngle                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6AIController::SetMaxPitchAngle(float ControlDepressionAngle, float ControlElevationAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AIController", "SetMaxPitchAngle");

	Params::X6AIController_SetMaxPitchAngle Parms{};

	Parms.ControlDepressionAngle = ControlDepressionAngle;
	Parms.ControlElevationAngle = ControlElevationAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AIController.SetUseServerPathFinding
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InUseServerPathFinding                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6AIController::SetUseServerPathFinding(bool InUseServerPathFinding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AIController", "SetUseServerPathFinding");

	Params::X6AIController_SetUseServerPathFinding Parms{};

	Parms.InUseServerPathFinding = InUseServerPathFinding;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AIController.StopBehaviorTree
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Reason                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6AIController::StopBehaviorTree(const class FString& Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AIController", "StopBehaviorTree");

	Params::X6AIController_StopBehaviorTree Parms{};

	Parms.Reason = std::move(Reason);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AIController.X6FollowSpecifiedPath
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UX6NavigationPathPoints*          PathPoints                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AcceptanceRadius                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bStopOnOverlap                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   UserFlag                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCanStrafe                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPathFollowingRequestResult             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPathFollowingRequestResult AX6AIController::X6FollowSpecifiedPath(class UX6NavigationPathPoints* PathPoints, float AcceptanceRadius, bool bStopOnOverlap, int32 UserFlag, bool bCanStrafe)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AIController", "X6FollowSpecifiedPath");

	Params::X6AIController_X6FollowSpecifiedPath Parms{};

	Parms.PathPoints = PathPoints;
	Parms.AcceptanceRadius = AcceptanceRadius;
	Parms.bStopOnOverlap = bStopOnOverlap;
	Parms.UserFlag = UserFlag;
	Parms.bCanStrafe = bCanStrafe;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AIController.X6MoveToActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Goal                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AcceptanceRadius                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bStopOnOverlap                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUsePathfinding                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   UserFlag                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDirectMoveIfPossible                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FDirectMoveParams&         DirectMoveChecker                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bCanStrafe                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UNavigationQueryFilter>FilterClass                                            (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAllowPartialPath                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPathFollowingRequestResult             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPathFollowingRequestResult AX6AIController::X6MoveToActor(class AActor* Goal, float AcceptanceRadius, bool bStopOnOverlap, bool bUsePathfinding, int32 UserFlag, bool bDirectMoveIfPossible, const struct FDirectMoveParams& DirectMoveChecker, bool bCanStrafe, TSubclassOf<class UNavigationQueryFilter> FilterClass, bool bAllowPartialPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AIController", "X6MoveToActor");

	Params::X6AIController_X6MoveToActor Parms{};

	Parms.Goal = Goal;
	Parms.AcceptanceRadius = AcceptanceRadius;
	Parms.bStopOnOverlap = bStopOnOverlap;
	Parms.bUsePathfinding = bUsePathfinding;
	Parms.UserFlag = UserFlag;
	Parms.bDirectMoveIfPossible = bDirectMoveIfPossible;
	Parms.DirectMoveChecker = std::move(DirectMoveChecker);
	Parms.bCanStrafe = bCanStrafe;
	Parms.FilterClass = FilterClass;
	Parms.bAllowPartialPath = bAllowPartialPath;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AIController.X6MoveToLocation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   dest                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AcceptanceRadius                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bStopOnOverlap                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUsePathfinding                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   UserFlag                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDirectMoveIfPossible                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FDirectMoveParams&         DirectMoveChecker                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bProjectDestinationToNavigation                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCanStrafe                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UNavigationQueryFilter>FilterClass                                            (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAllowPartialPaths                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  FinalRotation                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// EPathFollowingRequestResult             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPathFollowingRequestResult AX6AIController::X6MoveToLocation(const struct FVector& dest, float AcceptanceRadius, bool bStopOnOverlap, bool bUsePathfinding, int32 UserFlag, bool bDirectMoveIfPossible, const struct FDirectMoveParams& DirectMoveChecker, bool bProjectDestinationToNavigation, bool bCanStrafe, TSubclassOf<class UNavigationQueryFilter> FilterClass, bool bAllowPartialPaths, const struct FRotator& FinalRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AIController", "X6MoveToLocation");

	Params::X6AIController_X6MoveToLocation Parms{};

	Parms.dest = std::move(dest);
	Parms.AcceptanceRadius = AcceptanceRadius;
	Parms.bStopOnOverlap = bStopOnOverlap;
	Parms.bUsePathfinding = bUsePathfinding;
	Parms.UserFlag = UserFlag;
	Parms.bDirectMoveIfPossible = bDirectMoveIfPossible;
	Parms.DirectMoveChecker = std::move(DirectMoveChecker);
	Parms.bProjectDestinationToNavigation = bProjectDestinationToNavigation;
	Parms.bCanStrafe = bCanStrafe;
	Parms.FilterClass = FilterClass;
	Parms.bAllowPartialPaths = bAllowPartialPaths;
	Parms.FinalRotation = std::move(FinalRotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AIController.X6RunBehaviorTree
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBehaviorTree*                    BTAsset                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6AIController::X6RunBehaviorTree(class UBehaviorTree* BTAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AIController", "X6RunBehaviorTree");

	Params::X6AIController_X6RunBehaviorTree Parms{};

	Parms.BTAsset = BTAsset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AIController.CanDirectMoveToLocation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FVector&                   dest                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FDirectMoveParams&         DirectMoveChecker                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// EX6DirectMoveCheckMode                  CheckMode                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6AIController::CanDirectMoveToLocation(const struct FVector& dest, const struct FDirectMoveParams& DirectMoveChecker, EX6DirectMoveCheckMode CheckMode) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AIController", "CanDirectMoveToLocation");

	Params::X6AIController_CanDirectMoveToLocation Parms{};

	Parms.dest = std::move(dest);
	Parms.DirectMoveChecker = std::move(DirectMoveChecker);
	Parms.CheckMode = CheckMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AIPerceptionComponent.AddModifier
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UAISense>             SenseClass                                             (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UX6AISenseModifier*               ToAddModifier                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AIPerceptionComponent::AddModifier(TSubclassOf<class UAISense> SenseClass, class UX6AISenseModifier* ToAddModifier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AIPerceptionComponent", "AddModifier");

	Params::X6AIPerceptionComponent_AddModifier Parms{};

	Parms.SenseClass = SenseClass;
	Parms.ToAddModifier = ToAddModifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AIPerceptionComponent.AddSenseConfig
// (Final, Native, Public)
// Parameters:
// class UAISenseConfig*                   SenseConfig                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AIPerceptionComponent::AddSenseConfig(class UAISenseConfig* SenseConfig)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AIPerceptionComponent", "AddSenseConfig");

	Params::X6AIPerceptionComponent_AddSenseConfig Parms{};

	Parms.SenseConfig = SenseConfig;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AIPerceptionComponent.RemoveAllSenseConfigs
// (Final, Native, Public)

void UX6AIPerceptionComponent::RemoveAllSenseConfigs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AIPerceptionComponent", "RemoveAllSenseConfigs");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AIPerceptionComponent.SetSenseEnabledSafe
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UAISense>             SenseClass                                             (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bEnable                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AIPerceptionComponent::SetSenseEnabledSafe(TSubclassOf<class UAISense> SenseClass, const bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AIPerceptionComponent", "SetSenseEnabledSafe");

	Params::X6AIPerceptionComponent_SetSenseEnabledSafe Parms{};

	Parms.SenseClass = SenseClass;
	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AIPerformanceManager.GetFunctionBudgetInMicroseconds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FName&                      InFunctionName                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6AIPerformanceManager::GetFunctionBudgetInMicroseconds(const class FName& InFunctionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AIPerformanceManager", "GetFunctionBudgetInMicroseconds");

	Params::X6AIPerformanceManager_GetFunctionBudgetInMicroseconds Parms{};

	Parms.InFunctionName = InFunctionName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AIPerformanceManager.RegisterUnImportantFunctionDelegate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TDelegate<void()>&                ExecuteDelegate                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AIPerformanceManager::RegisterUnImportantFunctionDelegate(const TDelegate<void()>& ExecuteDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AIPerformanceManager", "RegisterUnImportantFunctionDelegate");

	Params::X6AIPerformanceManager_RegisterUnImportantFunctionDelegate Parms{};

	Parms.ExecuteDelegate = ExecuteDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AISenseConfig_Sight.NeedLineTrace
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AISenseConfig_Sight::NeedLineTrace()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AISenseConfig_Sight", "NeedLineTrace");

	Params::X6AISenseConfig_Sight_NeedLineTrace Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AISense_Sight.IsInterestedTarget
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// const class AActor*                     ListenerActor                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UX6AISenseConfig_Sight*           Config                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AISense_Sight::IsInterestedTarget(const class AActor* ListenerActor, class AActor* TargetActor, class UX6AISenseConfig_Sight* Config)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AISense_Sight", "IsInterestedTarget");

	Params::X6AISense_Sight_IsInterestedTarget Parms{};

	Parms.ListenerActor = ListenerActor;
	Parms.TargetActor = TargetActor;
	Parms.Config = Config;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AISense_Sight.ReportStimulus
// (Event, Protected, BlueprintEvent)
// Parameters:
// const class AActor*                     ListenerActor                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UX6AISenseConfig_Sight*           Config                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EX6AISenseSightResultType               ResultType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLastResult                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AISense_Sight::ReportStimulus(const class AActor* ListenerActor, class AActor* TargetActor, class UX6AISenseConfig_Sight* Config, EX6AISenseSightResultType ResultType, bool bLastResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AISense_Sight", "ReportStimulus");

	Params::X6AISense_Sight_ReportStimulus Parms{};

	Parms.ListenerActor = ListenerActor;
	Parms.TargetActor = TargetActor;
	Parms.Config = Config;
	Parms.ResultType = ResultType;
	Parms.bLastResult = bLastResult;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function X6Game.X6AIStimuliSourceComponent.GetSocketPos
// (Final, Native, Public, HasOutParams, HasDefaults, Const)
// Parameters:
// const class FName&                      SocketName                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector*                         OutPos                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AIStimuliSourceComponent::GetSocketPos(const class FName& SocketName, struct FVector* OutPos) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AIStimuliSourceComponent", "GetSocketPos");

	Params::X6AIStimuliSourceComponent_GetSocketPos Parms{};

	Parms.SocketName = SocketName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPos != nullptr)
		*OutPos = std::move(Parms.OutPos);

	return Parms.ReturnValue;
}


// Function X6Game.AsyncActionLoadSoftObjPath.AsyncLoadPrimaryAsset
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FSoftObjectPath>&   InAssetsToLoad                                         (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    InForceLoadBPClass                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAsyncActionLoadSoftObjPath*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAsyncActionLoadSoftObjPath* UAsyncActionLoadSoftObjPath::AsyncLoadPrimaryAsset(class UObject* WorldContextObject, const TArray<struct FSoftObjectPath>& InAssetsToLoad, bool InForceLoadBPClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AsyncActionLoadSoftObjPath", "AsyncLoadPrimaryAsset");

	Params::AsyncActionLoadSoftObjPath_AsyncLoadPrimaryAsset Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InAssetsToLoad = std::move(InAssetsToLoad);
	Parms.InForceLoadBPClass = InForceLoadBPClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6TileView.AddAnItem
// (Final, Native, Protected, BlueprintCallable)

void UX6TileView::AddAnItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6TileView", "AddAnItem");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6TileView.BP_NavigateToItemIndex
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const int32&                            ItemIndex                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6TileView::BP_NavigateToItemIndex(const int32& ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6TileView", "BP_NavigateToItemIndex");

	Params::X6TileView_BP_NavigateToItemIndex Parms{};

	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6TileView.BP_OnTileItemValueChanged
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const int32&                            Index_0                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6TileView::BP_OnTileItemValueChanged(const int32& Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6TileView", "BP_OnTileItemValueChanged");

	Params::X6TileView_BP_OnTileItemValueChanged Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6TileView.BP_ScrollItemIndexIntoView
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const int32&                            ItemIndex                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6TileView::BP_ScrollItemIndexIntoView(const int32& ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6TileView", "BP_ScrollItemIndexIntoView");

	Params::X6TileView_BP_ScrollItemIndexIntoView Parms{};

	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6TileView.BP_SetItemSelectionByIndex
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const int32&                            Index_0                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSelected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6TileView::BP_SetItemSelectionByIndex(const int32& Index_0, bool bSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6TileView", "BP_SetItemSelectionByIndex");

	Params::X6TileView_BP_SetItemSelectionByIndex Parms{};

	Parms.Index_0 = Index_0;
	Parms.bSelected = bSelected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6TileView.BP_SetSelectedItemByIndex
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const int32&                            Index_0                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6TileView::BP_SetSelectedItemByIndex(const int32& Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6TileView", "BP_SetSelectedItemByIndex");

	Params::X6TileView_BP_SetSelectedItemByIndex Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6TileView.BP_SetTileItemCount
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const int32&                            Count                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6TileView::BP_SetTileItemCount(const int32& Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6TileView", "BP_SetTileItemCount");

	Params::X6TileView_BP_SetTileItemCount Parms{};

	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6TileView.GetLineOrientationItemNums
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UX6TileView::GetLineOrientationItemNums()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6TileView", "GetLineOrientationItemNums");

	Params::X6TileView_GetLineOrientationItemNums Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6TileView.GetScrollVelocity
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6TileView::GetScrollVelocity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6TileView", "GetScrollVelocity");

	Params::X6TileView_GetScrollVelocity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6TileView.RemoveItemByIndex
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const int32&                            Index_0                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6TileView::RemoveItemByIndex(const int32& Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6TileView", "RemoveItemByIndex");

	Params::X6TileView_RemoveItemByIndex Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6TileView.BP_GetSelectedIndex
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UX6TileView::BP_GetSelectedIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6TileView", "BP_GetSelectedIndex");

	Params::X6TileView_BP_GetSelectedIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6TileView.BP_GetSelectedItemsViaIndex
// (Final, Native, Protected, HasOutParams, BlueprintCallable, Const)
// Parameters:
// TArray<int32>*                          Items                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6TileView::BP_GetSelectedItemsViaIndex(TArray<int32>* Items) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6TileView", "BP_GetSelectedItemsViaIndex");

	Params::X6TileView_BP_GetSelectedItemsViaIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Items != nullptr)
		*Items = std::move(Parms.Items);

	return Parms.ReturnValue;
}


// Function X6Game.X6TileView.BP_IsItemVisibleByIndex
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32&                            Index_0                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6TileView::BP_IsItemVisibleByIndex(const int32& Index_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6TileView", "BP_IsItemVisibleByIndex");

	Params::X6TileView_BP_IsItemVisibleByIndex Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AsyncCollisionTraceBlueprintLibrary.AsyncBoxOverlapActors
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   BoxPos                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   BoxExtent                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<EObjectTypeQuery>&         ObjectTypes                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class UClass*                           ActorClassFilter                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class AActor*>&            ActorsToIgnore                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(bool bIsOverlap, const TArray<class AActor*>& OverlapActors)>DelegateCallback                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AsyncCollisionTraceBlueprintLibrary::AsyncBoxOverlapActors(class UObject* WorldContextObject, const struct FVector& BoxPos, const struct FVector& BoxExtent, const TArray<EObjectTypeQuery>& ObjectTypes, class UClass* ActorClassFilter, const TArray<class AActor*>& ActorsToIgnore, TDelegate<void(bool bIsOverlap, const TArray<class AActor*>& OverlapActors)> DelegateCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AsyncCollisionTraceBlueprintLibrary", "AsyncBoxOverlapActors");

	Params::X6AsyncCollisionTraceBlueprintLibrary_AsyncBoxOverlapActors Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.BoxPos = std::move(BoxPos);
	Parms.BoxExtent = std::move(BoxExtent);
	Parms.ObjectTypes = std::move(ObjectTypes);
	Parms.ActorClassFilter = ActorClassFilter;
	Parms.ActorsToIgnore = std::move(ActorsToIgnore);
	Parms.DelegateCallback = DelegateCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AsyncCollisionTraceBlueprintLibrary.AsyncCapsuleOverlapActors
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   CapsulePos                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   HalfHeight                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<EObjectTypeQuery>&         ObjectTypes                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class UClass*                           ActorClassFilter                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class AActor*>&            ActorsToIgnore                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(bool bIsOverlap, const TArray<class AActor*>& OverlapActors)>DelegateCallback                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AsyncCollisionTraceBlueprintLibrary::AsyncCapsuleOverlapActors(class UObject* WorldContextObject, const struct FVector& CapsulePos, float Radius, float HalfHeight, const TArray<EObjectTypeQuery>& ObjectTypes, class UClass* ActorClassFilter, const TArray<class AActor*>& ActorsToIgnore, TDelegate<void(bool bIsOverlap, const TArray<class AActor*>& OverlapActors)> DelegateCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AsyncCollisionTraceBlueprintLibrary", "AsyncCapsuleOverlapActors");

	Params::X6AsyncCollisionTraceBlueprintLibrary_AsyncCapsuleOverlapActors Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.CapsulePos = std::move(CapsulePos);
	Parms.Radius = Radius;
	Parms.HalfHeight = HalfHeight;
	Parms.ObjectTypes = std::move(ObjectTypes);
	Parms.ActorClassFilter = ActorClassFilter;
	Parms.ActorsToIgnore = std::move(ActorsToIgnore);
	Parms.DelegateCallback = DelegateCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AsyncCollisionTraceBlueprintLibrary.AsyncLineTraceByChannel
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// EX6AsyncTraceType                       InTraceType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Start                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   End                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECollisionChannel                       InTraceChannel                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bTraceComplex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class AActor*>&            ActorsToIgnore                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(bool bIsHit, const TArray<struct FHitResult>& HitResults, uint32 CustomFlag)>DelegateCallback                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CustomFlag                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AsyncCollisionTraceBlueprintLibrary::AsyncLineTraceByChannel(EX6AsyncTraceType InTraceType, class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, ECollisionChannel InTraceChannel, bool bTraceComplex, const TArray<class AActor*>& ActorsToIgnore, TDelegate<void(bool bIsHit, const TArray<struct FHitResult>& HitResults, uint32 CustomFlag)> DelegateCallback, int32 CustomFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AsyncCollisionTraceBlueprintLibrary", "AsyncLineTraceByChannel");

	Params::X6AsyncCollisionTraceBlueprintLibrary_AsyncLineTraceByChannel Parms{};

	Parms.InTraceType = InTraceType;
	Parms.WorldContextObject = WorldContextObject;
	Parms.Start = std::move(Start);
	Parms.End = std::move(End);
	Parms.InTraceChannel = InTraceChannel;
	Parms.bTraceComplex = bTraceComplex;
	Parms.ActorsToIgnore = std::move(ActorsToIgnore);
	Parms.DelegateCallback = DelegateCallback;
	Parms.CustomFlag = CustomFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AsyncCollisionTraceBlueprintLibrary.AsyncOverlapActorsCustomizeChannel
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UShapeComponent*            shapeComp                                              (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECollisionResponse                      AllChannelsResponse                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TMap<ECollisionChannel, ECollisionResponse>&TraceChannels                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bTraceComplex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class AActor*>&            ActorsToIgnore                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const TArray<class UClass*>&            ActorsClassFilter                                      (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TDelegate<void(bool bIsOverlap, const TArray<class AActor*>& OverlapActors)>DelegateCallback                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AsyncCollisionTraceBlueprintLibrary::AsyncOverlapActorsCustomizeChannel(class UObject* WorldContextObject, const class UShapeComponent* shapeComp, ECollisionResponse AllChannelsResponse, const TMap<ECollisionChannel, ECollisionResponse>& TraceChannels, bool bTraceComplex, const TArray<class AActor*>& ActorsToIgnore, const TArray<class UClass*>& ActorsClassFilter, TDelegate<void(bool bIsOverlap, const TArray<class AActor*>& OverlapActors)> DelegateCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AsyncCollisionTraceBlueprintLibrary", "AsyncOverlapActorsCustomizeChannel");

	Params::X6AsyncCollisionTraceBlueprintLibrary_AsyncOverlapActorsCustomizeChannel Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.shapeComp = shapeComp;
	Parms.AllChannelsResponse = AllChannelsResponse;
	Parms.TraceChannels = std::move(TraceChannels);
	Parms.bTraceComplex = bTraceComplex;
	Parms.ActorsToIgnore = std::move(ActorsToIgnore);
	Parms.ActorsClassFilter = std::move(ActorsClassFilter);
	Parms.DelegateCallback = DelegateCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AsyncCollisionTraceBlueprintLibrary.AsyncSphereOverlapActors
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   SpherePos                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SphereRadius                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<EObjectTypeQuery>&         ObjectTypes                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class UClass*                           ActorClassFilter                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class AActor*>&            ActorsToIgnore                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(bool bIsOverlap, const TArray<class AActor*>& OverlapActors)>DelegateCallback                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AsyncCollisionTraceBlueprintLibrary::AsyncSphereOverlapActors(class UObject* WorldContextObject, const struct FVector& SpherePos, float SphereRadius, const TArray<EObjectTypeQuery>& ObjectTypes, class UClass* ActorClassFilter, const TArray<class AActor*>& ActorsToIgnore, TDelegate<void(bool bIsOverlap, const TArray<class AActor*>& OverlapActors)> DelegateCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AsyncCollisionTraceBlueprintLibrary", "AsyncSphereOverlapActors");

	Params::X6AsyncCollisionTraceBlueprintLibrary_AsyncSphereOverlapActors Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SpherePos = std::move(SpherePos);
	Parms.SphereRadius = SphereRadius;
	Parms.ObjectTypes = std::move(ObjectTypes);
	Parms.ActorClassFilter = ActorClassFilter;
	Parms.ActorsToIgnore = std::move(ActorsToIgnore);
	Parms.DelegateCallback = DelegateCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6NavigationSubSystem.AddRoad
// (Final, Native, Public)
// Parameters:
// class UX6SplineRoad*                    Road                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NavigationSubSystem::AddRoad(class UX6SplineRoad* Road)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NavigationSubSystem", "AddRoad");

	Params::X6NavigationSubSystem_AddRoad Parms{};

	Parms.Road = Road;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6NavigationSubSystem.AddRoadNodesToPathV2
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<struct FVector>*                 PathPoints                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<int32>*                          OffMeshIdxs                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// const TMap<int32, int64>&               SplineNodes                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    DebugDraw                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DebugDrawDuration                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NavigationSubSystem::AddRoadNodesToPathV2(TArray<struct FVector>* PathPoints, TArray<int32>* OffMeshIdxs, const TMap<int32, int64>& SplineNodes, bool DebugDraw, float DebugDrawDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NavigationSubSystem", "AddRoadNodesToPathV2");

	Params::X6NavigationSubSystem_AddRoadNodesToPathV2 Parms{};

	Parms.SplineNodes = std::move(SplineNodes);
	Parms.DebugDraw = DebugDraw;
	Parms.DebugDrawDuration = DebugDrawDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PathPoints != nullptr)
		*PathPoints = std::move(Parms.PathPoints);

	if (OffMeshIdxs != nullptr)
		*OffMeshIdxs = std::move(Parms.OffMeshIdxs);
}


// Function X6Game.X6NavigationSubSystem.DrawNavLink
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UWorld*                           InWorld                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FNavigationLink>*         NavLinks                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// const struct FLinearColor&              Color                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NavigationSubSystem::DrawNavLink(class UWorld* InWorld, TArray<struct FNavigationLink>* NavLinks, const struct FLinearColor& Color, float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NavigationSubSystem", "DrawNavLink");

	Params::X6NavigationSubSystem_DrawNavLink Parms{};

	Parms.InWorld = InWorld;
	Parms.Color = std::move(Color);
	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (NavLinks != nullptr)
		*NavLinks = std::move(Parms.NavLinks);
}


// Function X6Game.X6NavigationSubSystem.DrawNavMesh
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UWorld*                           InWorld                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVector>*                 Tiles                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// const struct FLinearColor&              Color                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NavigationSubSystem::DrawNavMesh(class UWorld* InWorld, TArray<struct FVector>* Tiles, const struct FLinearColor& Color, float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NavigationSubSystem", "DrawNavMesh");

	Params::X6NavigationSubSystem_DrawNavMesh Parms{};

	Parms.InWorld = InWorld;
	Parms.Color = std::move(Color);
	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Tiles != nullptr)
		*Tiles = std::move(Parms.Tiles);
}


// Function X6Game.X6NavigationSubSystem.GetNavigationRegionFilterFlags
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// int32*                                  OutIncludeFlags                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutExcludeFlags                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   StartLocation                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   GoalLocation                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NavigationSubSystem::GetNavigationRegionFilterFlags(int32* OutIncludeFlags, int32* OutExcludeFlags, const struct FVector& StartLocation, const struct FVector& GoalLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NavigationSubSystem", "GetNavigationRegionFilterFlags");

	Params::X6NavigationSubSystem_GetNavigationRegionFilterFlags Parms{};

	Parms.StartLocation = std::move(StartLocation);
	Parms.GoalLocation = std::move(GoalLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutIncludeFlags != nullptr)
		*OutIncludeFlags = Parms.OutIncludeFlags;

	if (OutExcludeFlags != nullptr)
		*OutExcludeFlags = Parms.OutExcludeFlags;
}


// Function X6Game.X6NavigationSubSystem.RemoveAllRoad
// (Final, Native, Public)

void UX6NavigationSubSystem::RemoveAllRoad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NavigationSubSystem", "RemoveAllRoad");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6NavigationSubSystem.RemoveRoad
// (Final, Native, Public)
// Parameters:
// int64                                   RoadID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NavigationSubSystem::RemoveRoad(int64 RoadID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NavigationSubSystem", "RemoveRoad");

	Params::X6NavigationSubSystem_RemoveRoad Parms{};

	Parms.RoadID = RoadID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6NavigationSubSystem.SetRoadOffsetClamp
// (Final, Native, Public)
// Parameters:
// float                                   ClampMin                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ClampMax                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NavigationSubSystem::SetRoadOffsetClamp(float ClampMin, float ClampMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NavigationSubSystem", "SetRoadOffsetClamp");

	Params::X6NavigationSubSystem_SetRoadOffsetClamp Parms{};

	Parms.ClampMin = ClampMin;
	Parms.ClampMax = ClampMax;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6NavigationSubSystem.SetSegmentSampleStep
// (Final, Native, Public)
// Parameters:
// const float                             NewStep                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NavigationSubSystem::SetSegmentSampleStep(const float NewStep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NavigationSubSystem", "SetSegmentSampleStep");

	Params::X6NavigationSubSystem_SetSegmentSampleStep Parms{};

	Parms.NewStep = NewStep;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6NavigationSubSystem.SetSegmentStepsMinDistance
// (Final, Native, Public)
// Parameters:
// float                                   Distance                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NavigationSubSystem::SetSegmentStepsMinDistance(float Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NavigationSubSystem", "SetSegmentStepsMinDistance");

	Params::X6NavigationSubSystem_SetSegmentStepsMinDistance Parms{};

	Parms.Distance = Distance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6NavigationSubSystem.GetOwnerRoad
// (Final, Native, Public, Const)
// Parameters:
// int64                                   NodeUID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UX6SplineRoad*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UX6SplineRoad* UX6NavigationSubSystem::GetOwnerRoad(int64 NodeUID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NavigationSubSystem", "GetOwnerRoad");

	Params::X6NavigationSubSystem_GetOwnerRoad Parms{};

	Parms.NodeUID = NodeUID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6NavigationSubSystem.GetOwnerRoadUID
// (Final, Native, Public, Const)
// Parameters:
// int64                                   NodeUID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UX6NavigationSubSystem::GetOwnerRoadUID(int64 NodeUID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NavigationSubSystem", "GetOwnerRoadUID");

	Params::X6NavigationSubSystem_GetOwnerRoadUID Parms{};

	Parms.NodeUID = NodeUID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6NavigationSubSystem.GetSegmentSampleStep
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6NavigationSubSystem::GetSegmentSampleStep() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NavigationSubSystem", "GetSegmentSampleStep");

	Params::X6NavigationSubSystem_GetSegmentSampleStep Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6NavigationSubSystem.GetSegmentStepsMinDistanceSq
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6NavigationSubSystem::GetSegmentStepsMinDistanceSq() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NavigationSubSystem", "GetSegmentStepsMinDistanceSq");

	Params::X6NavigationSubSystem_GetSegmentStepsMinDistanceSq Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6NavigationSubSystem.HasRoadNode
// (Final, Native, Public, Const)
// Parameters:
// int64                                   NodeUID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6NavigationSubSystem::HasRoadNode(int64 NodeUID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NavigationSubSystem", "HasRoadNode");

	Params::X6NavigationSubSystem_HasRoadNode Parms{};

	Parms.NodeUID = NodeUID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6NavigationSubSystem.MakeNavigationPathPoints
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<struct FVector>&           PointLocations                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const TMap<int32, int64>&               NavLinkMark                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const TMap<int32, int64>&               RoadNodeMark                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UX6NavigationPathPoints*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UX6NavigationPathPoints* UX6NavigationSubSystem::MakeNavigationPathPoints(const TArray<struct FVector>& PointLocations, const TMap<int32, int64>& NavLinkMark, const TMap<int32, int64>& RoadNodeMark) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NavigationSubSystem", "MakeNavigationPathPoints");

	Params::X6NavigationSubSystem_MakeNavigationPathPoints Parms{};

	Parms.PointLocations = std::move(PointLocations);
	Parms.NavLinkMark = std::move(NavLinkMark);
	Parms.RoadNodeMark = std::move(RoadNodeMark);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6NavigationSubSystem.MakePureNavigationPathPoints
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<struct FVector>&           PointLocations                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class UX6NavigationPathPoints*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UX6NavigationPathPoints* UX6NavigationSubSystem::MakePureNavigationPathPoints(const TArray<struct FVector>& PointLocations) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NavigationSubSystem", "MakePureNavigationPathPoints");

	Params::X6NavigationSubSystem_MakePureNavigationPathPoints Parms{};

	Parms.PointLocations = std::move(PointLocations);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AvatarSubsystem.OnActorDestroyed
// (Final, Native, Private)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AvatarSubsystem::OnActorDestroyed(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AvatarSubsystem", "OnActorDestroyed");

	Params::X6AvatarSubsystem_OnActorDestroyed Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.AvatarComponent.CopySkeletalMeshFromActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Template                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAvatarComponent::CopySkeletalMeshFromActor(class AActor* Template)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AvatarComponent", "CopySkeletalMeshFromActor");

	Params::AvatarComponent_CopySkeletalMeshFromActor Parms{};

	Parms.Template = Template;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.AvatarComponent.SetAvatarTag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Tag                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAvatarComponent::SetAvatarTag(const class FString& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AvatarComponent", "SetAvatarTag");

	Params::AvatarComponent_SetAvatarTag Parms{};

	Parms.Tag = std::move(Tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.AvatarComponent.SetSkeletalMeshFromMapping
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TMap<class FName, class USkeletalMesh*>&PartToMeshMapping                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class USkeletalMeshComponent*           MainSkeletal                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAvatarComponent::SetSkeletalMeshFromMapping(const TMap<class FName, class USkeletalMesh*>& PartToMeshMapping, class USkeletalMeshComponent* MainSkeletal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AvatarComponent", "SetSkeletalMeshFromMapping");

	Params::AvatarComponent_SetSkeletalMeshFromMapping Parms{};

	Parms.PartToMeshMapping = std::move(PartToMeshMapping);
	Parms.MainSkeletal = MainSkeletal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.AvatarComponent.SetupAvatarByDataConfig
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           MainMeshComp                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SuitId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TMap<class FName, struct FClothMeshSetting>&PartToClothMeshMapping                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAvatarComponent::SetupAvatarByDataConfig(class USkeletalMeshComponent* MainMeshComp, int32 SuitId, const TMap<class FName, struct FClothMeshSetting>& PartToClothMeshMapping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AvatarComponent", "SetupAvatarByDataConfig");

	Params::AvatarComponent_SetupAvatarByDataConfig Parms{};

	Parms.MainMeshComp = MainMeshComp;
	Parms.SuitId = SuitId;
	Parms.PartToClothMeshMapping = std::move(PartToClothMeshMapping);

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.AvatarComponent.SetupAvatarByRuntime
// (Event, Public, BlueprintEvent)
// Parameters:
// const class FString&                    NewTag                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAvatarComponent::SetupAvatarByRuntime(const class FString& NewTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AvatarComponent", "SetupAvatarByRuntime");

	Params::AvatarComponent_SetupAvatarByRuntime Parms{};

	Parms.NewTag = std::move(NewTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.X6AvatarPreviewSubsystem.OnActorDestroyed
// (Final, Native, Private)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AvatarPreviewSubsystem::OnActorDestroyed(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AvatarPreviewSubsystem", "OnActorDestroyed");

	Params::X6AvatarPreviewSubsystem_OnActorDestroyed Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AvatarPreviewSubsystem.OnGenAssetActorDestory
// (Final, Native, Private)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AvatarPreviewSubsystem::OnGenAssetActorDestory(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AvatarPreviewSubsystem", "OnGenAssetActorDestory");

	Params::X6AvatarPreviewSubsystem_OnGenAssetActorDestory Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AvatarPreviewComponent.InitWithCharacterGenAsset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCharacterGenAsset*               inCharacterGenAsset                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AvatarPreviewComponent::InitWithCharacterGenAsset(class UCharacterGenAsset* inCharacterGenAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AvatarPreviewComponent", "InitWithCharacterGenAsset");

	Params::X6AvatarPreviewComponent_InitWithCharacterGenAsset Parms{};

	Parms.inCharacterGenAsset = inCharacterGenAsset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AvatarPreviewComponent.SetAvatarTag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   AvatarTagValue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AvatarPreviewComponent::SetAvatarTag(int32 AvatarTagValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AvatarPreviewComponent", "SetAvatarTag");

	Params::X6AvatarPreviewComponent_SetAvatarTag Parms{};

	Parms.AvatarTagValue = AvatarTagValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AvatarPreviewComponent.SetAvatarTagByName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    EnumDisplayName                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AvatarPreviewComponent::SetAvatarTagByName(const class FString& EnumDisplayName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AvatarPreviewComponent", "SetAvatarTagByName");

	Params::X6AvatarPreviewComponent_SetAvatarTagByName Parms{};

	Parms.EnumDisplayName = std::move(EnumDisplayName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AvatarPreviewComponent.TestHiddenPart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   AvatarTagValue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AvatarPreviewComponent::TestHiddenPart(int32 AvatarTagValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AvatarPreviewComponent", "TestHiddenPart");

	Params::X6AvatarPreviewComponent_TestHiddenPart Parms{};

	Parms.AvatarTagValue = AvatarTagValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AvatarPreviewComponent.TestHighHeel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   AvatarTagValue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AvatarPreviewComponent::TestHighHeel(int32 AvatarTagValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AvatarPreviewComponent", "TestHighHeel");

	Params::X6AvatarPreviewComponent_TestHighHeel Parms{};

	Parms.AvatarTagValue = AvatarTagValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6TargetingSelectionTask_ChargeUpBase.AddHitResult
// (Final, Native, Protected, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const struct FTargetingRequestHandle&   TargetingHandle                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FHitResult&                HitResult                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6TargetingSelectionTask_ChargeUpBase::AddHitResult(const struct FTargetingRequestHandle& TargetingHandle, const struct FHitResult& HitResult) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6TargetingSelectionTask_ChargeUpBase", "AddHitResult");

	Params::X6TargetingSelectionTask_ChargeUpBase_AddHitResult Parms{};

	Parms.TargetingHandle = std::move(TargetingHandle);
	Parms.HitResult = std::move(HitResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6TargetingSelectionTask_ChargeUpBase.AddSingleTargetComponentForPriority
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FTargetingRequestHandle&   TargetingHandle                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              InTargetComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6TargetingSelectionTask_ChargeUpBase::AddSingleTargetComponentForPriority(const struct FTargetingRequestHandle& TargetingHandle, class UPrimitiveComponent* InTargetComponent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6TargetingSelectionTask_ChargeUpBase", "AddSingleTargetComponentForPriority");

	Params::X6TargetingSelectionTask_ChargeUpBase_AddSingleTargetComponentForPriority Parms{};

	Parms.TargetingHandle = std::move(TargetingHandle);
	Parms.InTargetComponent = InTargetComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6TargetingSelectionTask_ChargeUpBase.AddTargetActor
// (Final, Native, Protected, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const struct FTargetingRequestHandle&   TargetingHandle                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class AActor*                           InTargetActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6TargetingSelectionTask_ChargeUpBase::AddTargetActor(const struct FTargetingRequestHandle& TargetingHandle, class AActor* InTargetActor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6TargetingSelectionTask_ChargeUpBase", "AddTargetActor");

	Params::X6TargetingSelectionTask_ChargeUpBase_AddTargetActor Parms{};

	Parms.TargetingHandle = std::move(TargetingHandle);
	Parms.InTargetActor = InTargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6TargetingSelectionTask_ChargeUpBase.AddTargetComponent
// (Final, Native, Protected, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const struct FTargetingRequestHandle&   TargetingHandle                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              InTargetComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6TargetingSelectionTask_ChargeUpBase::AddTargetComponent(const struct FTargetingRequestHandle& TargetingHandle, class UPrimitiveComponent* InTargetComponent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6TargetingSelectionTask_ChargeUpBase", "AddTargetComponent");

	Params::X6TargetingSelectionTask_ChargeUpBase_AddTargetComponent Parms{};

	Parms.TargetingHandle = std::move(TargetingHandle);
	Parms.InTargetComponent = InTargetComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6TargetingSelectionTask_ChargeUpBase.K2_CanSelect
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// const struct FTargetingRequestHandle&   TargetingHandle                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FTargetingSourceContext&   SourceContext                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6TargetingSelectionTask_ChargeUpBase::K2_CanSelect(const struct FTargetingRequestHandle& TargetingHandle, const struct FTargetingSourceContext& SourceContext) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6TargetingSelectionTask_ChargeUpBase", "K2_CanSelect");

	Params::X6TargetingSelectionTask_ChargeUpBase_K2_CanSelect Parms{};

	Parms.TargetingHandle = std::move(TargetingHandle);
	Parms.SourceContext = std::move(SourceContext);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6TargetingSelectionTask_ChargeUpBase.K2_IsExistForwardTargets
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class AActor*                     SourceActor                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   InHalfSize                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   InOffset                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6TargetingSelectionTask_ChargeUpBase::K2_IsExistForwardTargets(const class AActor* SourceActor, const struct FVector& InHalfSize, const struct FVector& InOffset) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6TargetingSelectionTask_ChargeUpBase", "K2_IsExistForwardTargets");

	Params::X6TargetingSelectionTask_ChargeUpBase_K2_IsExistForwardTargets Parms{};

	Parms.SourceActor = SourceActor;
	Parms.InHalfSize = std::move(InHalfSize);
	Parms.InOffset = std::move(InOffset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6TargetingSelectionTask_ChargeUpBase.K2_IsResultsExistTargetActorOrComponent
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const struct FTargetingRequestHandle&   TargetingHandle                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class AActor*                           InTargetActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              InTargetComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6TargetingSelectionTask_ChargeUpBase::K2_IsResultsExistTargetActorOrComponent(const struct FTargetingRequestHandle& TargetingHandle, class AActor* InTargetActor, class UPrimitiveComponent* InTargetComponent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6TargetingSelectionTask_ChargeUpBase", "K2_IsResultsExistTargetActorOrComponent");

	Params::X6TargetingSelectionTask_ChargeUpBase_K2_IsResultsExistTargetActorOrComponent Parms{};

	Parms.TargetingHandle = std::move(TargetingHandle);
	Parms.InTargetActor = InTargetActor;
	Parms.InTargetComponent = InTargetComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6TargetingSelectionTask_ChargeUpBase.SelectTargets
// (Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// const struct FTargetingRequestHandle&   TargetingHandle                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FTargetingSourceContext&   SourceContext                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UX6TargetingSelectionTask_ChargeUpBase::SelectTargets(const struct FTargetingRequestHandle& TargetingHandle, const struct FTargetingSourceContext& SourceContext) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6TargetingSelectionTask_ChargeUpBase", "SelectTargets");

	Params::X6TargetingSelectionTask_ChargeUpBase_SelectTargets Parms{};

	Parms.TargetingHandle = std::move(TargetingHandle);
	Parms.SourceContext = std::move(SourceContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.X6TargetingSelectionTask_ChargeUpBase.UpdateSelectingTransformInfo
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable, Const)
// Parameters:
// const class AActor*                     SourceActor                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName&                      SocketName                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             DepthLength                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Offset                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6TargetingSelectionTask_ChargeUpBase::UpdateSelectingTransformInfo(const class AActor* SourceActor, const class FName& SocketName, const float DepthLength, const struct FVector& Offset) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6TargetingSelectionTask_ChargeUpBase", "UpdateSelectingTransformInfo");

	Params::X6TargetingSelectionTask_ChargeUpBase_UpdateSelectingTransformInfo Parms{};

	Parms.SourceActor = SourceActor;
	Parms.SocketName = SocketName;
	Parms.DepthLength = DepthLength;
	Parms.Offset = std::move(Offset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BasePuzzleManager.HandleActorTypePropertiesBeginPlayCompleted
// (Event, Public, BlueprintEvent)

void AX6BasePuzzleManager::HandleActorTypePropertiesBeginPlayCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BasePuzzleManager", "HandleActorTypePropertiesBeginPlayCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function X6Game.X6BasePuzzleManager.HandleCheckPropertiesBeginPlayCompleted
// (Final, Native, Public)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6BasePuzzleManager::HandleCheckPropertiesBeginPlayCompleted(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BasePuzzleManager", "HandleCheckPropertiesBeginPlayCompleted");

	Params::X6BasePuzzleManager_HandleCheckPropertiesBeginPlayCompleted Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterBase.OnRep_X6ReplicatedBasedMovementState
// (Native, Public)

void AX6CharacterBase::OnRep_X6ReplicatedBasedMovementState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "OnRep_X6ReplicatedBasedMovementState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterBase.OnRep_X6ReplicatedMovementBase
// (Native, Public)

void AX6CharacterBase::OnRep_X6ReplicatedMovementBase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "OnRep_X6ReplicatedMovementBase");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterBase.PostSpawnerGroupSpawned
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AX6CharacterBase::PostSpawnerGroupSpawned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "PostSpawnerGroupSpawned");

	UObject::ProcessEvent(Func, nullptr);
}


// Function X6Game.X6CharacterBase.ReceiveMovementFromServer
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FX6ReplicatedMovement&     InReplicatedMovement                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AX6CharacterBase::ReceiveMovementFromServer(const struct FX6ReplicatedMovement& InReplicatedMovement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "ReceiveMovementFromServer");

	Params::X6CharacterBase_ReceiveMovementFromServer Parms{};

	Parms.InReplicatedMovement = std::move(InReplicatedMovement);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterBase.ServerInit
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bServer                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6CharacterBase::ServerInit(bool bServer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "ServerInit");

	Params::X6CharacterBase_ServerInit Parms{};

	Parms.bServer = bServer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.X6CharacterBase.SetLocalRole
// (Final, Native, Public)
// Parameters:
// ENetRole                                InRole                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6CharacterBase::SetLocalRole(ENetRole InRole)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "SetLocalRole");

	Params::X6CharacterBase_SetLocalRole Parms{};

	Parms.InRole = InRole;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterBase.SetSimulatedReplicateMovement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bInSimulatedReplicateMovement                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bRefreshReplication                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6CharacterBase::SetSimulatedReplicateMovement(const bool bInSimulatedReplicateMovement, const bool bRefreshReplication)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "SetSimulatedReplicateMovement");

	Params::X6CharacterBase_SetSimulatedReplicateMovement Parms{};

	Parms.bInSimulatedReplicateMovement = bInSimulatedReplicateMovement;
	Parms.bRefreshReplication = bRefreshReplication;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterBase.X6_AddTag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const TArray<class FName>&              NewX6Tags                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void AX6CharacterBase::X6_AddTag(const TArray<class FName>& NewX6Tags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "X6_AddTag");

	Params::X6CharacterBase_X6_AddTag Parms{};

	Parms.NewX6Tags = std::move(NewX6Tags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterBase.X6_ClearAndInvalidateTimerHandle
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FTimerHandle&                    Handle                                                 (Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6CharacterBase::X6_ClearAndInvalidateTimerHandle(struct FTimerHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "X6_ClearAndInvalidateTimerHandle");

	Params::X6CharacterBase_X6_ClearAndInvalidateTimerHandle Parms{};

	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Handle = std::move(Parms.Handle);
}


// Function X6Game.X6CharacterBase.X6_ClearTimer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    FunctionName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6CharacterBase::X6_ClearTimer(class UObject* Object, const class FString& FunctionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "X6_ClearTimer");

	Params::X6CharacterBase_X6_ClearTimer Parms{};

	Parms.Object = Object;
	Parms.FunctionName = std::move(FunctionName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterBase.X6_ClearTimerDelegate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void()>                       Delegate                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6CharacterBase::X6_ClearTimerDelegate(TDelegate<void()> Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "X6_ClearTimerDelegate");

	Params::X6CharacterBase_X6_ClearTimerDelegate Parms{};

	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterBase.X6_ClearTimerHandle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FTimerHandle&              Handle                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6CharacterBase::X6_ClearTimerHandle(const struct FTimerHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "X6_ClearTimerHandle");

	Params::X6CharacterBase_X6_ClearTimerHandle Parms{};

	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterBase.X6_DeleteTag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    strTag                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6CharacterBase::X6_DeleteTag(const class FString& strTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "X6_DeleteTag");

	Params::X6CharacterBase_X6_DeleteTag Parms{};

	Parms.strTag = std::move(strTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterBase.X6_GetActorHiddenFlags
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSet<int32>*                            OutFlags                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6CharacterBase::X6_GetActorHiddenFlags(TSet<int32>* OutFlags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "X6_GetActorHiddenFlags");

	Params::X6CharacterBase_X6_GetActorHiddenFlags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutFlags != nullptr)
		*OutFlags = std::move(Parms.OutFlags);

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterBase.X6_GetTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> AX6CharacterBase::X6_GetTag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "X6_GetTag");

	Params::X6CharacterBase_X6_GetTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterBase.X6_GetTimerElapsedTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    FunctionName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AX6CharacterBase::X6_GetTimerElapsedTime(class UObject* Object, const class FString& FunctionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "X6_GetTimerElapsedTime");

	Params::X6CharacterBase_X6_GetTimerElapsedTime Parms{};

	Parms.Object = Object;
	Parms.FunctionName = std::move(FunctionName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterBase.X6_GetTimerElapsedTimeDelegate
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TDelegate<void()>                       Delegate                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AX6CharacterBase::X6_GetTimerElapsedTimeDelegate(TDelegate<void()> Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "X6_GetTimerElapsedTimeDelegate");

	Params::X6CharacterBase_X6_GetTimerElapsedTimeDelegate Parms{};

	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterBase.X6_GetTimerElapsedTimeDelegateEachTrigger
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TDelegate<void()>                       Delegate                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AX6CharacterBase::X6_GetTimerElapsedTimeDelegateEachTrigger(TDelegate<void()> Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "X6_GetTimerElapsedTimeDelegateEachTrigger");

	Params::X6CharacterBase_X6_GetTimerElapsedTimeDelegateEachTrigger Parms{};

	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterBase.X6_GetTimerElapsedTimeEachTrigger
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    FunctionName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AX6CharacterBase::X6_GetTimerElapsedTimeEachTrigger(class UObject* Object, const class FString& FunctionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "X6_GetTimerElapsedTimeEachTrigger");

	Params::X6CharacterBase_X6_GetTimerElapsedTimeEachTrigger Parms{};

	Parms.Object = Object;
	Parms.FunctionName = std::move(FunctionName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterBase.X6_GetTimerElapsedTimeHandle
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FTimerHandle&              Handle                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AX6CharacterBase::X6_GetTimerElapsedTimeHandle(const struct FTimerHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "X6_GetTimerElapsedTimeHandle");

	Params::X6CharacterBase_X6_GetTimerElapsedTimeHandle Parms{};

	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterBase.X6_GetTimerElapsedTimeHandleEachTrigger
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FTimerHandle&              Handle                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AX6CharacterBase::X6_GetTimerElapsedTimeHandleEachTrigger(const struct FTimerHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "X6_GetTimerElapsedTimeHandleEachTrigger");

	Params::X6CharacterBase_X6_GetTimerElapsedTimeHandleEachTrigger Parms{};

	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterBase.X6_GetTimerRemainingTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    FunctionName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AX6CharacterBase::X6_GetTimerRemainingTime(class UObject* Object, const class FString& FunctionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "X6_GetTimerRemainingTime");

	Params::X6CharacterBase_X6_GetTimerRemainingTime Parms{};

	Parms.Object = Object;
	Parms.FunctionName = std::move(FunctionName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterBase.X6_GetTimerRemainingTimeDelegate
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TDelegate<void()>                       Delegate                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AX6CharacterBase::X6_GetTimerRemainingTimeDelegate(TDelegate<void()> Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "X6_GetTimerRemainingTimeDelegate");

	Params::X6CharacterBase_X6_GetTimerRemainingTimeDelegate Parms{};

	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterBase.X6_GetTimerRemainingTimeHandle
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FTimerHandle&              Handle                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AX6CharacterBase::X6_GetTimerRemainingTimeHandle(const struct FTimerHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "X6_GetTimerRemainingTimeHandle");

	Params::X6CharacterBase_X6_GetTimerRemainingTimeHandle Parms{};

	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterBase.X6_HasTag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    strTag                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6CharacterBase::X6_HasTag(const class FString& strTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "X6_HasTag");

	Params::X6CharacterBase_X6_HasTag Parms{};

	Parms.strTag = std::move(strTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterBase.X6_IsTimerActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    FunctionName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6CharacterBase::X6_IsTimerActive(class UObject* Object, const class FString& FunctionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "X6_IsTimerActive");

	Params::X6CharacterBase_X6_IsTimerActive Parms{};

	Parms.Object = Object;
	Parms.FunctionName = std::move(FunctionName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterBase.X6_IsTimerActiveDelegate
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TDelegate<void()>                       Delegate                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6CharacterBase::X6_IsTimerActiveDelegate(TDelegate<void()> Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "X6_IsTimerActiveDelegate");

	Params::X6CharacterBase_X6_IsTimerActiveDelegate Parms{};

	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterBase.X6_IsTimerActiveHandle
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FTimerHandle&              Handle                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6CharacterBase::X6_IsTimerActiveHandle(const struct FTimerHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "X6_IsTimerActiveHandle");

	Params::X6CharacterBase_X6_IsTimerActiveHandle Parms{};

	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterBase.X6_IsTimerPaused
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    FunctionName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6CharacterBase::X6_IsTimerPaused(class UObject* Object, const class FString& FunctionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "X6_IsTimerPaused");

	Params::X6CharacterBase_X6_IsTimerPaused Parms{};

	Parms.Object = Object;
	Parms.FunctionName = std::move(FunctionName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterBase.X6_IsTimerPausedDelegate
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TDelegate<void()>                       Delegate                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6CharacterBase::X6_IsTimerPausedDelegate(TDelegate<void()> Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "X6_IsTimerPausedDelegate");

	Params::X6CharacterBase_X6_IsTimerPausedDelegate Parms{};

	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterBase.X6_IsTimerPausedHandle
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FTimerHandle&              Handle                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6CharacterBase::X6_IsTimerPausedHandle(const struct FTimerHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "X6_IsTimerPausedHandle");

	Params::X6CharacterBase_X6_IsTimerPausedHandle Parms{};

	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterBase.X6_IsValidTimerHandle
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FTimerHandle&              Handle                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6CharacterBase::X6_IsValidTimerHandle(const struct FTimerHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "X6_IsValidTimerHandle");

	Params::X6CharacterBase_X6_IsValidTimerHandle Parms{};

	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterBase.X6_PauseTimer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    FunctionName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6CharacterBase::X6_PauseTimer(class UObject* Object, const class FString& FunctionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "X6_PauseTimer");

	Params::X6CharacterBase_X6_PauseTimer Parms{};

	Parms.Object = Object;
	Parms.FunctionName = std::move(FunctionName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterBase.X6_PauseTimerDelegate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void()>                       Delegate                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6CharacterBase::X6_PauseTimerDelegate(TDelegate<void()> Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "X6_PauseTimerDelegate");

	Params::X6CharacterBase_X6_PauseTimerDelegate Parms{};

	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterBase.X6_PauseTimerHandle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FTimerHandle&              Handle                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6CharacterBase::X6_PauseTimerHandle(const struct FTimerHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "X6_PauseTimerHandle");

	Params::X6CharacterBase_X6_PauseTimerHandle Parms{};

	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterBase.X6_RequireActorFade
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bFadeIn                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   FadeOutHiddenFlag                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInView                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6CharacterBase::X6_RequireActorFade(bool bFadeIn, int32 FadeOutHiddenFlag, bool bInView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "X6_RequireActorFade");

	Params::X6CharacterBase_X6_RequireActorFade Parms{};

	Parms.bFadeIn = bFadeIn;
	Parms.FadeOutHiddenFlag = FadeOutHiddenFlag;
	Parms.bInView = bInView;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterBase.X6_SetActorHiddenInGame
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewHidden                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bClearFlag                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6CharacterBase::X6_SetActorHiddenInGame(bool bNewHidden, int32 Flag, bool bClearFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "X6_SetActorHiddenInGame");

	Params::X6CharacterBase_X6_SetActorHiddenInGame Parms{};

	Parms.bNewHidden = bNewHidden;
	Parms.Flag = Flag;
	Parms.bClearFlag = bClearFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterBase.X6_SetTimer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    FunctionName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLooping                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InitialStartDelay                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InitialStartDelayVariance                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTimerHandle                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTimerHandle AX6CharacterBase::X6_SetTimer(class UObject* Object, const class FString& FunctionName, float Time, bool bLooping, float InitialStartDelay, float InitialStartDelayVariance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "X6_SetTimer");

	Params::X6CharacterBase_X6_SetTimer Parms{};

	Parms.Object = Object;
	Parms.FunctionName = std::move(FunctionName);
	Parms.Time = Time;
	Parms.bLooping = bLooping;
	Parms.InitialStartDelay = InitialStartDelay;
	Parms.InitialStartDelayVariance = InitialStartDelayVariance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterBase.X6_SetTimerDelegate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void()>                       Delegate                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLooping                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InitialStartDelay                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InitialStartDelayVariance                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTimerHandle                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTimerHandle AX6CharacterBase::X6_SetTimerDelegate(TDelegate<void()> Delegate, float Time, bool bLooping, float InitialStartDelay, float InitialStartDelayVariance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "X6_SetTimerDelegate");

	Params::X6CharacterBase_X6_SetTimerDelegate Parms{};

	Parms.Delegate = Delegate;
	Parms.Time = Time;
	Parms.bLooping = bLooping;
	Parms.InitialStartDelay = InitialStartDelay;
	Parms.InitialStartDelayVariance = InitialStartDelayVariance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterBase.X6_TimerExists
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    FunctionName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6CharacterBase::X6_TimerExists(class UObject* Object, const class FString& FunctionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "X6_TimerExists");

	Params::X6CharacterBase_X6_TimerExists Parms{};

	Parms.Object = Object;
	Parms.FunctionName = std::move(FunctionName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterBase.X6_TimerExistsDelegate
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TDelegate<void()>                       Delegate                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6CharacterBase::X6_TimerExistsDelegate(TDelegate<void()> Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "X6_TimerExistsDelegate");

	Params::X6CharacterBase_X6_TimerExistsDelegate Parms{};

	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterBase.X6_TimerExistsHandle
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FTimerHandle&              Handle                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6CharacterBase::X6_TimerExistsHandle(const struct FTimerHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "X6_TimerExistsHandle");

	Params::X6CharacterBase_X6_TimerExistsHandle Parms{};

	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterBase.X6_UnPauseTimer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    FunctionName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6CharacterBase::X6_UnPauseTimer(class UObject* Object, const class FString& FunctionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "X6_UnPauseTimer");

	Params::X6CharacterBase_X6_UnPauseTimer Parms{};

	Parms.Object = Object;
	Parms.FunctionName = std::move(FunctionName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterBase.X6_UnPauseTimerDelegate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void()>                       Delegate                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6CharacterBase::X6_UnPauseTimerDelegate(TDelegate<void()> Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "X6_UnPauseTimerDelegate");

	Params::X6CharacterBase_X6_UnPauseTimerDelegate Parms{};

	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterBase.X6_UnPauseTimerHandle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FTimerHandle&              Handle                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6CharacterBase::X6_UnPauseTimerHandle(const struct FTimerHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "X6_UnPauseTimerHandle");

	Params::X6CharacterBase_X6_UnPauseTimerHandle Parms{};

	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterBase.GetMoveGoalOffsetInternal
// (Native, Event, Protected, HasDefaults, BlueprintEvent, Const)
// Parameters:
// const class AActor*                     MovingActor                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AX6CharacterBase::GetMoveGoalOffsetInternal(const class AActor* MovingActor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "GetMoveGoalOffsetInternal");

	Params::X6CharacterBase_GetMoveGoalOffsetInternal Parms{};

	Parms.MovingActor = MovingActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterBase.IsSimulatedReplicateAttachment
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6CharacterBase::IsSimulatedReplicateAttachment() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "IsSimulatedReplicateAttachment");

	Params::X6CharacterBase_IsSimulatedReplicateAttachment Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterBase.IsSimulatedReplicateMovement
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6CharacterBase::IsSimulatedReplicateMovement() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterBase", "IsSimulatedReplicateMovement");

	Params::X6CharacterBase_IsSimulatedReplicateMovement Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterWithAbilities.K2_SetReplicatePriority
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewReplicatePriority                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6CharacterWithAbilities::K2_SetReplicatePriority(int32 NewReplicatePriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterWithAbilities", "K2_SetReplicatePriority");

	Params::X6CharacterWithAbilities_K2_SetReplicatePriority Parms{};

	Parms.NewReplicatePriority = NewReplicatePriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterWithAbilities.K2_SetShouldForceReplicateProperty
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bReplicate                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6CharacterWithAbilities::K2_SetShouldForceReplicateProperty(bool bReplicate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterWithAbilities", "K2_SetShouldForceReplicateProperty");

	Params::X6CharacterWithAbilities_K2_SetShouldForceReplicateProperty Parms{};

	Parms.bReplicate = bReplicate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterWithAbilities.GetX6AbilitySystemComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UX6AbilitySystemComponent*        ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UX6AbilitySystemComponent* AX6CharacterWithAbilities::GetX6AbilitySystemComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterWithAbilities", "GetX6AbilitySystemComponent");

	Params::X6CharacterWithAbilities_GetX6AbilitySystemComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6NikkiPawn.Client_GetCameraState
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AX6NikkiPawn::Client_GetCameraState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NikkiPawn", "Client_GetCameraState");

	Params::X6NikkiPawn_Client_GetCameraState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6NikkiPawn.IsCarryItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6NikkiPawn::IsCarryItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NikkiPawn", "IsCarryItem");

	Params::X6NikkiPawn_IsCarryItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6NikkiPawn.IsEnableFootIK
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6NikkiPawn::IsEnableFootIK()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NikkiPawn", "IsEnableFootIK");

	Params::X6NikkiPawn_IsEnableFootIK Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BasicMoveableComponent.GatherCurrentInputDirection
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           ReferenceActor                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ForwardInputValue                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RightInputValue                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UX6BasicMoveableComponent::GatherCurrentInputDirection(class AActor* ReferenceActor, float ForwardInputValue, float RightInputValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BasicMoveableComponent", "GatherCurrentInputDirection");

	Params::X6BasicMoveableComponent_GatherCurrentInputDirection Parms{};

	Parms.ReferenceActor = ReferenceActor;
	Parms.ForwardInputValue = ForwardInputValue;
	Parms.RightInputValue = RightInputValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BasicRegularMovementComponent.CalculateMovementBlockedByHeight
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FHitResult&                HitResult                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// float                                   BoundaryFromLowToHigh                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EnterBlockAngle                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6BasicRegularMovementComponent::CalculateMovementBlockedByHeight(const struct FHitResult& HitResult, float BoundaryFromLowToHigh, float EnterBlockAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BasicRegularMovementComponent", "CalculateMovementBlockedByHeight");

	Params::X6BasicRegularMovementComponent_CalculateMovementBlockedByHeight Parms{};

	Parms.HitResult = std::move(HitResult);
	Parms.BoundaryFromLowToHigh = BoundaryFromLowToHigh;
	Parms.EnterBlockAngle = EnterBlockAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BasicRegularMovementComponent.CheckExitMovementBlockedByState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ExitBlockAngle                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BasicRegularMovementComponent::CheckExitMovementBlockedByState(float DeltaSeconds, float ExitBlockAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BasicRegularMovementComponent", "CheckExitMovementBlockedByState");

	Params::X6BasicRegularMovementComponent_CheckExitMovementBlockedByState Parms{};

	Parms.DeltaSeconds = DeltaSeconds;
	Parms.ExitBlockAngle = ExitBlockAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6MultiPlayerSubSystem.GetAssetPath
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// const int32                             InGuid                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSoftObjectPath*                 OutPath                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6MultiPlayerSubSystem::GetAssetPath(const int32 InGuid, struct FSoftObjectPath* OutPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6MultiPlayerSubSystem", "GetAssetPath");

	Params::X6MultiPlayerSubSystem_GetAssetPath Parms{};

	Parms.InGuid = InGuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPath != nullptr)
		*OutPath = std::move(Parms.OutPath);
}


// Function X6Game.X6MultiPlayerSubSystem.RegisterSimulatedActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   EntityID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           NewSimulatedActor                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6MultiPlayerSubSystem::RegisterSimulatedActor(int32 EntityID, class AActor* NewSimulatedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6MultiPlayerSubSystem", "RegisterSimulatedActor");

	Params::X6MultiPlayerSubSystem_RegisterSimulatedActor Parms{};

	Parms.EntityID = EntityID;
	Parms.NewSimulatedActor = NewSimulatedActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6MultiPlayerSubSystem.RegisterSpawner
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int64                             SpawnerID                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6MultiPlayerSubSystem::RegisterSpawner(const int64 SpawnerID, class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6MultiPlayerSubSystem", "RegisterSpawner");

	Params::X6MultiPlayerSubSystem_RegisterSpawner Parms{};

	Parms.SpawnerID = SpawnerID;
	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6MultiPlayerSubSystem.UnregisterSimulatedActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   EntityID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6MultiPlayerSubSystem::UnregisterSimulatedActor(int32 EntityID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6MultiPlayerSubSystem", "UnregisterSimulatedActor");

	Params::X6MultiPlayerSubSystem_UnregisterSimulatedActor Parms{};

	Parms.EntityID = EntityID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6MultiPlayerSubSystem.UnregisterSpawner
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int64                             SpawnerID                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6MultiPlayerSubSystem::UnregisterSpawner(const int64 SpawnerID, class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6MultiPlayerSubSystem", "UnregisterSpawner");

	Params::X6MultiPlayerSubSystem_UnregisterSpawner Parms{};

	Parms.SpawnerID = SpawnerID;
	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6MultiPlayerSubSystem.GetAssetGuid
// (Final, Native, Public, HasOutParams, HasDefaults, Const)
// Parameters:
// const struct FSoftObjectPath&           InPath                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UX6MultiPlayerSubSystem::GetAssetGuid(const struct FSoftObjectPath& InPath) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6MultiPlayerSubSystem", "GetAssetGuid");

	Params::X6MultiPlayerSubSystem_GetAssetGuid Parms{};

	Parms.InPath = std::move(InPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6MultiPlayerSubSystem.GetAssetPathString
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InGuid                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UX6MultiPlayerSubSystem::GetAssetPathString(const int32 InGuid) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6MultiPlayerSubSystem", "GetAssetPathString");

	Params::X6MultiPlayerSubSystem_GetAssetPathString Parms{};

	Parms.InGuid = InGuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6MultiPlayerSubSystem.GetPathStringGuid
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FString&                    InPathString                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UX6MultiPlayerSubSystem::GetPathStringGuid(const class FString& InPathString) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6MultiPlayerSubSystem", "GetPathStringGuid");

	Params::X6MultiPlayerSubSystem_GetPathStringGuid Parms{};

	Parms.InPathString = std::move(InPathString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CarrierBaseProcessor.DeInit
// (Native, Event, Public, BlueprintEvent)

void UX6CarrierBaseProcessor::DeInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CarrierBaseProcessor", "DeInit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CarrierBaseProcessor.Init
// (Native, Event, Public, BlueprintEvent)

void UX6CarrierBaseProcessor::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CarrierBaseProcessor", "Init");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CarrierBaseProcessor.Update
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CarrierBaseProcessor::Update(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CarrierBaseProcessor", "Update");

	Params::X6CarrierBaseProcessor_Update Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BikePosturalCorrectionProcessor.BP_CacheRuntimeVariables
// (Native, Event, Public, BlueprintEvent)

void UX6BikePosturalCorrectionProcessor::BP_CacheRuntimeVariables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BikePosturalCorrectionProcessor", "BP_CacheRuntimeVariables");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BikePosturalCorrectionProcessor.BP_SetBikeData
// (Native, Event, Public, BlueprintEvent)

void UX6BikePosturalCorrectionProcessor::BP_SetBikeData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BikePosturalCorrectionProcessor", "BP_SetBikeData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BikePosturalCorrectionProcessor.CheckBikeInAirState
// (Final, Native, Public, BlueprintCallable)

void UX6BikePosturalCorrectionProcessor::CheckBikeInAirState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BikePosturalCorrectionProcessor", "CheckBikeInAirState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BikePosturalCorrectionProcessor.COMAdjustment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BikePosturalCorrectionProcessor::COMAdjustment(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BikePosturalCorrectionProcessor", "COMAdjustment");

	Params::X6BikePosturalCorrectionProcessor_COMAdjustment Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BikePosturalCorrectionProcessor.RecoverVerticality
// (Native, Event, Public, BlueprintEvent)

void UX6BikePosturalCorrectionProcessor::RecoverVerticality()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BikePosturalCorrectionProcessor", "RecoverVerticality");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BikePosturalCorrectionProcessor.SetUseAccelerateSlopeCalculate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bUseAccelerate                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BikePosturalCorrectionProcessor::SetUseAccelerateSlopeCalculate(bool bUseAccelerate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BikePosturalCorrectionProcessor", "SetUseAccelerateSlopeCalculate");

	Params::X6BikePosturalCorrectionProcessor_SetUseAccelerateSlopeCalculate Parms{};

	Parms.bUseAccelerate = bUseAccelerate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BikePosturalCorrectionProcessor.TiltLimit
// (Final, Native, Public, BlueprintCallable)

void UX6BikePosturalCorrectionProcessor::TiltLimit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BikePosturalCorrectionProcessor", "TiltLimit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BikePosturalCorrectionProcessor.UpdateBikeOnSlopeAngle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BikePosturalCorrectionProcessor::UpdateBikeOnSlopeAngle(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BikePosturalCorrectionProcessor", "UpdateBikeOnSlopeAngle");

	Params::X6BikePosturalCorrectionProcessor_UpdateBikeOnSlopeAngle Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BikePosturalCorrectionProcessor.UpdateBikeWheelInAirAngle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6BikePosturalCorrectionProcessor::UpdateBikeWheelInAirAngle(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BikePosturalCorrectionProcessor", "UpdateBikeWheelInAirAngle");

	Params::X6BikePosturalCorrectionProcessor_UpdateBikeWheelInAirAngle Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BikePosturalCorrectionProcessor.UpdateBikeWheelOnGroundAngle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BikePosturalCorrectionProcessor::UpdateBikeWheelOnGroundAngle(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BikePosturalCorrectionProcessor", "UpdateBikeWheelOnGroundAngle");

	Params::X6BikePosturalCorrectionProcessor_UpdateBikeWheelOnGroundAngle Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BikePosturalCorrectionProcessor.UpdateBikeWheelRotationAngle
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BikePosturalCorrectionProcessor::UpdateBikeWheelRotationAngle(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BikePosturalCorrectionProcessor", "UpdateBikeWheelRotationAngle");

	Params::X6BikePosturalCorrectionProcessor_UpdateBikeWheelRotationAngle Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BikePosturalCorrectionProcessor.UpdateFloorNormal
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BikePosturalCorrectionProcessor::UpdateFloorNormal(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BikePosturalCorrectionProcessor", "UpdateFloorNormal");

	Params::X6BikePosturalCorrectionProcessor_UpdateFloorNormal Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BikePosturalCorrectionProcessor.UpdateRelativeRotation
// (Final, Native, Public, BlueprintCallable)

void UX6BikePosturalCorrectionProcessor::UpdateRelativeRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BikePosturalCorrectionProcessor", "UpdateRelativeRotation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6GetActiveAudioComponentOpertion.Activate
// (Final, Native, Public)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6GetActiveAudioComponentOpertion::Activate(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GetActiveAudioComponentOpertion", "Activate");

	Params::X6GetActiveAudioComponentOpertion_Activate Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.ActorFaceTowardsActor
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bTurnInPlace                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bLookAt                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLookAtParams&             LookAtParam                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const TDelegate<void()>&                OnComplete                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void()>&                OnInterrupt                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::ActorFaceTowardsActor(class AActor* InActor, class AActor* TargetActor, const bool bTurnInPlace, const bool bLookAt, const struct FLookAtParams& LookAtParam, const TDelegate<void()>& OnComplete, const TDelegate<void()>& OnInterrupt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "ActorFaceTowardsActor");

	Params::X6BlueprintLibrary_ActorFaceTowardsActor Parms{};

	Parms.InActor = InActor;
	Parms.TargetActor = TargetActor;
	Parms.bTurnInPlace = bTurnInPlace;
	Parms.bLookAt = bLookAt;
	Parms.LookAtParam = std::move(LookAtParam);
	Parms.OnComplete = OnComplete;
	Parms.OnInterrupt = OnInterrupt;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.ActorFaceTowardsLocation
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   TargetLocation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bTurnInPlace                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bLookAt                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLookAtParams&             LookAtParam                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const TDelegate<void()>&                OnComplete                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void()>&                OnInterrupt                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::ActorFaceTowardsLocation(class AActor* InActor, const struct FVector& TargetLocation, const bool bTurnInPlace, const bool bLookAt, const struct FLookAtParams& LookAtParam, const TDelegate<void()>& OnComplete, const TDelegate<void()>& OnInterrupt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "ActorFaceTowardsLocation");

	Params::X6BlueprintLibrary_ActorFaceTowardsLocation Parms{};

	Parms.InActor = InActor;
	Parms.TargetLocation = std::move(TargetLocation);
	Parms.bTurnInPlace = bTurnInPlace;
	Parms.bLookAt = bLookAt;
	Parms.LookAtParam = std::move(LookAtParam);
	Parms.OnComplete = OnComplete;
	Parms.OnInterrupt = OnInterrupt;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.ActorFaceTowardsRotation
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  TargetRotation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// const bool                              bTurnInPlace                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bLookAt                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLookAtParams&             LookAtParam                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const TDelegate<void()>&                OnComplete                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void()>&                OnInterrupt                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::ActorFaceTowardsRotation(class AActor* InActor, const struct FRotator& TargetRotation, const bool bTurnInPlace, const bool bLookAt, const struct FLookAtParams& LookAtParam, const TDelegate<void()>& OnComplete, const TDelegate<void()>& OnInterrupt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "ActorFaceTowardsRotation");

	Params::X6BlueprintLibrary_ActorFaceTowardsRotation Parms{};

	Parms.InActor = InActor;
	Parms.TargetRotation = std::move(TargetRotation);
	Parms.bTurnInPlace = bTurnInPlace;
	Parms.bLookAt = bLookAt;
	Parms.LookAtParam = std::move(LookAtParam);
	Parms.OnComplete = OnComplete;
	Parms.OnInterrupt = OnInterrupt;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.AddEffectOutlineOnActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::AddEffectOutlineOnActor(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "AddEffectOutlineOnActor");

	Params::X6BlueprintLibrary_AddEffectOutlineOnActor Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.AddViewSlaveLocation
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   SlaveLocation                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BoostFactor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOverrideLocation                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::AddViewSlaveLocation(const struct FVector& SlaveLocation, float BoostFactor, bool bOverrideLocation, float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "AddViewSlaveLocation");

	Params::X6BlueprintLibrary_AddViewSlaveLocation Parms{};

	Parms.SlaveLocation = std::move(SlaveLocation);
	Parms.BoostFactor = BoostFactor;
	Parms.bOverrideLocation = bOverrideLocation;
	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.ApplyLevelTransform
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class ULevelStreaming*                  loadLevels                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTransform&                Transform                                              (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::ApplyLevelTransform(class ULevelStreaming* loadLevels, const struct FTransform& Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "ApplyLevelTransform");

	Params::X6BlueprintLibrary_ApplyLevelTransform Parms{};

	Parms.loadLevels = loadLevels;
	Parms.Transform = std::move(Transform);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.AsyncGetFoliageGeometryInfosInCircleRange
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Center                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const double                            Radius                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const TArray<struct FFoliageGeometryInfo>& OutFoliageGeometryInfos)>OnFoliageGeometryInfoReady                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::AsyncGetFoliageGeometryInfosInCircleRange(class UObject* WorldContextObject, const struct FVector& Center, const double Radius, TDelegate<void(const TArray<struct FFoliageGeometryInfo>& OutFoliageGeometryInfos)> OnFoliageGeometryInfoReady)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "AsyncGetFoliageGeometryInfosInCircleRange");

	Params::X6BlueprintLibrary_AsyncGetFoliageGeometryInfosInCircleRange Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Center = std::move(Center);
	Parms.Radius = Radius;
	Parms.OnFoliageGeometryInfoReady = OnFoliageGeometryInfoReady;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.CalculateBesselCurve
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   StartPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   ControllerPoint1                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   ControllerPoint2                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   EndPoint                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumPoints                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVector>*                 OutPoints                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6BlueprintLibrary::CalculateBesselCurve(const struct FVector& StartPoint, const struct FVector& ControllerPoint1, const struct FVector& ControllerPoint2, const struct FVector& EndPoint, int32 NumPoints, TArray<struct FVector>* OutPoints)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "CalculateBesselCurve");

	Params::X6BlueprintLibrary_CalculateBesselCurve Parms{};

	Parms.StartPoint = std::move(StartPoint);
	Parms.ControllerPoint1 = std::move(ControllerPoint1);
	Parms.ControllerPoint2 = std::move(ControllerPoint2);
	Parms.EndPoint = std::move(EndPoint);
	Parms.NumPoints = NumPoints;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPoints != nullptr)
		*OutPoints = std::move(Parms.OutPoints);

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.CheckActorHasBegunPlay
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BlueprintLibrary::CheckActorHasBegunPlay(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "CheckActorHasBegunPlay");

	Params::X6BlueprintLibrary_CheckActorHasBegunPlay Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.CheckBulletConditionCanTraceStartToEnd
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Start                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   End                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Radius                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   HalfSize                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  Orientation                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bTraceComplex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class AActor*>&            ActorsToIgnore                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// EDrawDebugTrace                         DrawDebugType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIgnoreSelf                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPenetrate                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLinearColor&              TraceColor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLinearColor&              TraceHitColor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DrawTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BlueprintLibrary::CheckBulletConditionCanTraceStartToEnd(class UObject* InWorldContextObject, const struct FVector& Start, const struct FVector& End, const float Radius, const struct FVector& HalfSize, const struct FRotator& Orientation, bool bTraceComplex, const TArray<class AActor*>& ActorsToIgnore, EDrawDebugTrace DrawDebugType, bool bIgnoreSelf, bool bPenetrate, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "CheckBulletConditionCanTraceStartToEnd");

	Params::X6BlueprintLibrary_CheckBulletConditionCanTraceStartToEnd Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.Start = std::move(Start);
	Parms.End = std::move(End);
	Parms.Radius = Radius;
	Parms.HalfSize = std::move(HalfSize);
	Parms.Orientation = std::move(Orientation);
	Parms.bTraceComplex = bTraceComplex;
	Parms.ActorsToIgnore = std::move(ActorsToIgnore);
	Parms.DrawDebugType = DrawDebugType;
	Parms.bIgnoreSelf = bIgnoreSelf;
	Parms.bPenetrate = bPenetrate;
	Parms.TraceColor = std::move(TraceColor);
	Parms.TraceHitColor = std::move(TraceHitColor);
	Parms.DrawTime = DrawTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.CheckIsInWater
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContextObject                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   CheckLocation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TraceLength                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MinWaterLengthTolerance                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOneLayerWaterCheck                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BlueprintLibrary::CheckIsInWater(const class UObject* InWorldContextObject, const struct FVector& CheckLocation, float TraceLength, float MinWaterLengthTolerance, bool bOneLayerWaterCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "CheckIsInWater");

	Params::X6BlueprintLibrary_CheckIsInWater Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.CheckLocation = std::move(CheckLocation);
	Parms.TraceLength = TraceLength;
	Parms.MinWaterLengthTolerance = MinWaterLengthTolerance;
	Parms.bOneLayerWaterCheck = bOneLayerWaterCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.ClearAnimInstanceRootMotionMovementParams
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UAnimInstance*                    AnimInstance                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTransform UX6BlueprintLibrary::ClearAnimInstanceRootMotionMovementParams(class UAnimInstance* AnimInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "ClearAnimInstanceRootMotionMovementParams");

	Params::X6BlueprintLibrary_ClearAnimInstanceRootMotionMovementParams Parms{};

	Parms.AnimInstance = AnimInstance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.ClearCurrentRootMotionSource
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UCharacterMovementComponent*      CharacterMovementComponent                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::ClearCurrentRootMotionSource(class UCharacterMovementComponent* CharacterMovementComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "ClearCurrentRootMotionSource");

	Params::X6BlueprintLibrary_ClearCurrentRootMotionSource Parms{};

	Parms.CharacterMovementComponent = CharacterMovementComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.ClearGameViewportForceCursorType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::ClearGameViewportForceCursorType(class UObject* InWorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "ClearGameViewportForceCursorType");

	Params::X6BlueprintLibrary_ClearGameViewportForceCursorType Parms{};

	Parms.InWorldContextObject = InWorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.ClearMeshComponentOverrideMaterials
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UMeshComponent*                   InMeshComponent                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::ClearMeshComponentOverrideMaterials(class UMeshComponent* InMeshComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "ClearMeshComponentOverrideMaterials");

	Params::X6BlueprintLibrary_ClearMeshComponentOverrideMaterials Parms{};

	Parms.InMeshComponent = InMeshComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.ClearStreamingPauseRenderingDelegate
// (Final, Native, Static, Public, BlueprintCallable)

void UX6BlueprintLibrary::ClearStreamingPauseRenderingDelegate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "ClearStreamingPauseRenderingDelegate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.ClearTransformUpdatedEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::ClearTransformUpdatedEvent(class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "ClearTransformUpdatedEvent");

	Params::X6BlueprintLibrary_ClearTransformUpdatedEvent Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.ClipboardCopy
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    CopyText                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::ClipboardCopy(const class FString& CopyText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "ClipboardCopy");

	Params::X6BlueprintLibrary_ClipboardCopy Parms{};

	Parms.CopyText = std::move(CopyText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.ClipboardPaste
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString*                          OutPasteText                                           (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::ClipboardPaste(class FString* OutPasteText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "ClipboardPaste");

	Params::X6BlueprintLibrary_ClipboardPaste Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPasteText != nullptr)
		*OutPasteText = std::move(Parms.OutPasteText);
}


// Function X6Game.X6BlueprintLibrary.ComponentSweepMulti
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// TArray<struct FHitResult>*              OutHits                                                (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// TArray<float>*                          PenetrationDepth                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              PrimComp                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Start                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   End                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FQuat&                     Quat                                                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::ComponentSweepMulti(TArray<struct FHitResult>* OutHits, TArray<float>* PenetrationDepth, class UPrimitiveComponent* PrimComp, const struct FVector& Start, const struct FVector& End, const struct FQuat& Quat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "ComponentSweepMulti");

	Params::X6BlueprintLibrary_ComponentSweepMulti Parms{};

	Parms.PrimComp = PrimComp;
	Parms.Start = std::move(Start);
	Parms.End = std::move(End);
	Parms.Quat = std::move(Quat);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutHits != nullptr)
		*OutHits = std::move(Parms.OutHits);

	if (PenetrationDepth != nullptr)
		*PenetrationDepth = std::move(Parms.PenetrationDepth);
}


// Function X6Game.X6BlueprintLibrary.ComputeGroundMovementDelta
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   Delta                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                RampHit                                                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// const bool                              bHitFromLineTrace                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UX6BlueprintLibrary::ComputeGroundMovementDelta(const struct FVector& Delta, const struct FHitResult& RampHit, const bool bHitFromLineTrace)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "ComputeGroundMovementDelta");

	Params::X6BlueprintLibrary_ComputeGroundMovementDelta Parms{};

	Parms.Delta = std::move(Delta);
	Parms.RampHit = std::move(RampHit);
	Parms.bHitFromLineTrace = bHitFromLineTrace;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.ConvertFileNameToObjectPath
// (Final, Native, Static, Public, HasOutParams)
// Parameters:
// const class FString&                    Filename                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString*                          PackageName                                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BlueprintLibrary::ConvertFileNameToObjectPath(const class FString& Filename, class FString* PackageName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "ConvertFileNameToObjectPath");

	Params::X6BlueprintLibrary_ConvertFileNameToObjectPath Parms{};

	Parms.Filename = std::move(Filename);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PackageName != nullptr)
		*PackageName = std::move(Parms.PackageName);

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.CopyFile
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    SourcePath                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    DestPath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BlueprintLibrary::CopyFile(const class FString& SourcePath, const class FString& DestPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "CopyFile");

	Params::X6BlueprintLibrary_CopyFile Parms{};

	Parms.SourcePath = std::move(SourcePath);
	Parms.DestPath = std::move(DestPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.CrashTest
// (Final, Native, Static, Public, BlueprintCallable)

void UX6BlueprintLibrary::CrashTest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "CrashTest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.CreateGuid
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGuid UX6BlueprintLibrary::CreateGuid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "CreateGuid");

	Params::X6BlueprintLibrary_CreateGuid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.CreateMediaTexture
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Outer_0                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMediaTexture*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMediaTexture* UX6BlueprintLibrary::CreateMediaTexture(class UObject* Outer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "CreateMediaTexture");

	Params::X6BlueprintLibrary_CreateMediaTexture Parms{};

	Parms.Outer_0 = Outer_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.CreateTextFromBuffer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    BufferStr                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UX6BlueprintLibrary::CreateTextFromBuffer(const class FString& BufferStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "CreateTextFromBuffer");

	Params::X6BlueprintLibrary_CreateTextFromBuffer Parms{};

	Parms.BufferStr = std::move(BufferStr);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.CreateTexture2DFromImageFile
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    ImageFileName                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2DDynamic*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2DDynamic* UX6BlueprintLibrary::CreateTexture2DFromImageFile(const class FString& ImageFileName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "CreateTexture2DFromImageFile");

	Params::X6BlueprintLibrary_CreateTexture2DFromImageFile Parms{};

	Parms.ImageFileName = std::move(ImageFileName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.CreateTexture2DFromWidget
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UWidget*                          Widget                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 DrawSize                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bWriteContentInGammaSpace                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UX6BlueprintLibrary::CreateTexture2DFromWidget(class UWidget* Widget, const struct FVector2D& DrawSize, bool bWriteContentInGammaSpace)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "CreateTexture2DFromWidget");

	Params::X6BlueprintLibrary_CreateTexture2DFromWidget Parms{};

	Parms.Widget = Widget;
	Parms.DrawSize = std::move(DrawSize);
	Parms.bWriteContentInGammaSpace = bWriteContentInGammaSpace;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.DeleteDirectory
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InDirPath                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    RequireExists                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Tree                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BlueprintLibrary::DeleteDirectory(const class FString& InDirPath, bool RequireExists, bool Tree)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "DeleteDirectory");

	Params::X6BlueprintLibrary_DeleteDirectory Parms{};

	Parms.InDirPath = std::move(InDirPath);
	Parms.RequireExists = RequireExists;
	Parms.Tree = Tree;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.DestroyActorRecusively
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           ActorToDestroy                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::DestroyActorRecusively(class AActor* ActorToDestroy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "DestroyActorRecusively");

	Params::X6BlueprintLibrary_DestroyActorRecusively Parms{};

	Parms.ActorToDestroy = ActorToDestroy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.DoesAnimHasNotifyOrNotifyState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UAnimSequence*                    InAnimationSequence                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UObject>              InNotifyOrNotifyStateClass                             (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BlueprintLibrary::DoesAnimHasNotifyOrNotifyState(class UAnimSequence* InAnimationSequence, TSubclassOf<class UObject> InNotifyOrNotifyStateClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "DoesAnimHasNotifyOrNotifyState");

	Params::X6BlueprintLibrary_DoesAnimHasNotifyOrNotifyState Parms{};

	Parms.InAnimationSequence = InAnimationSequence;
	Parms.InNotifyOrNotifyStateClass = InNotifyOrNotifyStateClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.DrawCylinderWithFOV
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTransform&                QueryTransform                                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Height                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FOV                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Segments                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FColor&                    Color                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LifeTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   DepthPriority                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Thickness                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   YawOffset                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::DrawCylinderWithFOV(const class UObject* WorldContextObject, const struct FTransform& QueryTransform, float Height, float Radius, float FOV, int32 Segments, const struct FColor& Color, float LifeTime, uint8 DepthPriority, float Thickness, float YawOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "DrawCylinderWithFOV");

	Params::X6BlueprintLibrary_DrawCylinderWithFOV Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.QueryTransform = std::move(QueryTransform);
	Parms.Height = Height;
	Parms.Radius = Radius;
	Parms.FOV = FOV;
	Parms.Segments = Segments;
	Parms.Color = std::move(Color);
	Parms.LifeTime = LifeTime;
	Parms.DepthPriority = DepthPriority;
	Parms.Thickness = Thickness;
	Parms.YawOffset = YawOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.FindAssetsInMemory
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class FString>&            InAssetPaths                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class UObject*>*                 OutObjects                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BlueprintLibrary::FindAssetsInMemory(const TArray<class FString>& InAssetPaths, TArray<class UObject*>* OutObjects)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "FindAssetsInMemory");

	Params::X6BlueprintLibrary_FindAssetsInMemory Parms{};

	Parms.InAssetPaths = std::move(InAssetPaths);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutObjects != nullptr)
		*OutObjects = std::move(Parms.OutObjects);

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.FindBindingIDByName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UMovieSceneSequence*              Sequence                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovieSceneObjectBindingSpace           Space                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMovieSceneObjectBindingID       ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FMovieSceneObjectBindingID UX6BlueprintLibrary::FindBindingIDByName(class UMovieSceneSequence* Sequence, const class FString& Name_0, EMovieSceneObjectBindingSpace Space)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "FindBindingIDByName");

	Params::X6BlueprintLibrary_FindBindingIDByName Parms{};

	Parms.Sequence = Sequence;
	Parms.Name_0 = std::move(Name_0);
	Parms.Space = Space;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.FindPackagesInDirectory
// (Final, Native, Static, Public, HasOutParams)
// Parameters:
// TArray<class FString>*                  OutPackages                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// const class FString&                    RootDir                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BlueprintLibrary::FindPackagesInDirectory(TArray<class FString>* OutPackages, const class FString& RootDir)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "FindPackagesInDirectory");

	Params::X6BlueprintLibrary_FindPackagesInDirectory Parms{};

	Parms.RootDir = std::move(RootDir);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPackages != nullptr)
		*OutPackages = std::move(Parms.OutPackages);

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.FlushWorldComposition
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::FlushWorldComposition(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "FlushWorldComposition");

	Params::X6BlueprintLibrary_FlushWorldComposition Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.ForceRefreshCurrentLanguage
// (Final, Native, Static, Public, BlueprintCallable)

void UX6BlueprintLibrary::ForceRefreshCurrentLanguage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "ForceRefreshCurrentLanguage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.ForceTickAnimationWithNoneDeltaTime
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*           InSkeletalMeshComponent                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::ForceTickAnimationWithNoneDeltaTime(class USkeletalMeshComponent* InSkeletalMeshComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "ForceTickAnimationWithNoneDeltaTime");

	Params::X6BlueprintLibrary_ForceTickAnimationWithNoneDeltaTime Parms{};

	Parms.InSkeletalMeshComponent = InSkeletalMeshComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.ForceTickAnimOnlyWithNoneDeltaTime
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*           InSkeletalMeshComponent                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::ForceTickAnimOnlyWithNoneDeltaTime(class USkeletalMeshComponent* InSkeletalMeshComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "ForceTickAnimOnlyWithNoneDeltaTime");

	Params::X6BlueprintLibrary_ForceTickAnimOnlyWithNoneDeltaTime Parms{};

	Parms.InSkeletalMeshComponent = InSkeletalMeshComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.GameViewportFadeIn
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlackDuration                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FadeInDuration                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShouldDisableInput                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::GameViewportFadeIn(class UObject* WorldContextObject, float BlackDuration, float FadeInDuration, bool bShouldDisableInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GameViewportFadeIn");

	Params::X6BlueprintLibrary_GameViewportFadeIn Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.BlackDuration = BlackDuration;
	Parms.FadeInDuration = FadeInDuration;
	Parms.bShouldDisableInput = bShouldDisableInput;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.GameViewportFadeOut
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FadeOutDuration                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShouldDisableInput                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::GameViewportFadeOut(class UObject* WorldContextObject, float FadeOutDuration, bool bShouldDisableInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GameViewportFadeOut");

	Params::X6BlueprintLibrary_GameViewportFadeOut Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.FadeOutDuration = FadeOutDuration;
	Parms.bShouldDisableInput = bShouldDisableInput;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.GameViewportFadeOutAndFadeIn
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FadeOutDuration                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlackDuration                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FadeInDuration                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShouldDisableInput                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceFade                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void()>&                _FadeOutEndEvent                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void()>&                _FadeBlackEndEvent                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void()>&                _FadeInEndEvent                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bStopFadeWhenPause                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLinearColor&              InFadeColor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BlueprintLibrary::GameViewportFadeOutAndFadeIn(class UObject* WorldContextObject, float FadeOutDuration, float BlackDuration, float FadeInDuration, bool bShouldDisableInput, bool bForceFade, const TDelegate<void()>& _FadeOutEndEvent, const TDelegate<void()>& _FadeBlackEndEvent, const TDelegate<void()>& _FadeInEndEvent, bool bStopFadeWhenPause, const struct FLinearColor& InFadeColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GameViewportFadeOutAndFadeIn");

	Params::X6BlueprintLibrary_GameViewportFadeOutAndFadeIn Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.FadeOutDuration = FadeOutDuration;
	Parms.BlackDuration = BlackDuration;
	Parms.FadeInDuration = FadeInDuration;
	Parms.bShouldDisableInput = bShouldDisableInput;
	Parms.bForceFade = bForceFade;
	Parms._FadeOutEndEvent = _FadeOutEndEvent;
	Parms._FadeBlackEndEvent = _FadeBlackEndEvent;
	Parms._FadeInEndEvent = _FadeInEndEvent;
	Parms.bStopFadeWhenPause = bStopFadeWhenPause;
	Parms.InFadeColor = std::move(InFadeColor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GameViewportHasFocus
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BlueprintLibrary::GameViewportHasFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GameViewportHasFocus");

	Params::X6BlueprintLibrary_GameViewportHasFocus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetActorByX6Tag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Tag                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> UX6BlueprintLibrary::GetActorByX6Tag(class UObject* WorldContextObject, const class FString& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetActorByX6Tag");

	Params::X6BlueprintLibrary_GetActorByX6Tag Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Tag = std::move(Tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetAddressPing
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    TargetAddress                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(float Result)>           Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::GetAddressPing(const class FString& TargetAddress, TDelegate<void(float Result)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetAddressPing");

	Params::X6BlueprintLibrary_GetAddressPing Parms{};

	Parms.TargetAddress = std::move(TargetAddress);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.GetAirPathfindingMng
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ADonNavigationManagerUnbound*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ADonNavigationManagerUnbound* UX6BlueprintLibrary::GetAirPathfindingMng(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetAirPathfindingMng");

	Params::X6BlueprintLibrary_GetAirPathfindingMng Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetAssetUserDataOfClass
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UAssetUserData>       InUserDataClass                                        (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAssetUserData*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAssetUserData* UX6BlueprintLibrary::GetAssetUserDataOfClass(class UObject* InObject, TSubclassOf<class UAssetUserData> InUserDataClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetAssetUserDataOfClass");

	Params::X6BlueprintLibrary_GetAssetUserDataOfClass Parms{};

	Parms.InObject = InObject;
	Parms.InUserDataClass = InUserDataClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetBatteryLevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UX6BlueprintLibrary::GetBatteryLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetBatteryLevel");

	Params::X6BlueprintLibrary_GetBatteryLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetBinaryVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UX6BlueprintLibrary::GetBinaryVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetBinaryVersion");

	Params::X6BlueprintLibrary_GetBinaryVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetBoneComponentLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class USkeletalMeshComponent*           MeshComponent                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             BoneName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UX6BlueprintLibrary::GetBoneComponentLocation(class USkeletalMeshComponent* MeshComponent, class FName BoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetBoneComponentLocation");

	Params::X6BlueprintLibrary_GetBoneComponentLocation Parms{};

	Parms.MeshComponent = MeshComponent;
	Parms.BoneName = BoneName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetBoneComponentQuaternion
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class USkeletalMeshComponent*           MeshComponent                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             BoneName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQuat                            ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FQuat UX6BlueprintLibrary::GetBoneComponentQuaternion(class USkeletalMeshComponent* MeshComponent, class FName BoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetBoneComponentQuaternion");

	Params::X6BlueprintLibrary_GetBoneComponentQuaternion Parms{};

	Parms.MeshComponent = MeshComponent;
	Parms.BoneName = BoneName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetBoneWorldLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class USkeletalMeshComponent*           MeshComponent                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             BoneName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UX6BlueprintLibrary::GetBoneWorldLocation(class USkeletalMeshComponent* MeshComponent, class FName BoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetBoneWorldLocation");

	Params::X6BlueprintLibrary_GetBoneWorldLocation Parms{};

	Parms.MeshComponent = MeshComponent;
	Parms.BoneName = BoneName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetBuildVersionDesc
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UX6BlueprintLibrary::GetBuildVersionDesc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetBuildVersionDesc");

	Params::X6BlueprintLibrary_GetBuildVersionDesc Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetCodesFromKey
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FKey&                      InKey                                                  (ConstParm, Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64*                                  OutKeyCode                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64*                                  OutCharCode                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::GetCodesFromKey(const struct FKey& InKey, int64* OutKeyCode, int64* OutCharCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetCodesFromKey");

	Params::X6BlueprintLibrary_GetCodesFromKey Parms{};

	Parms.InKey = std::move(InKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutKeyCode != nullptr)
		*OutKeyCode = Parms.OutKeyCode;

	if (OutCharCode != nullptr)
		*OutCharCode = Parms.OutCharCode;
}


// Function X6Game.X6BlueprintLibrary.GetComputeSlopeDegree
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContextObject                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<EObjectTypeQuery>&         ObjectTypes                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FVector&                   ForwardVector                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Start                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             DepthLength                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EDrawDebugTrace                         DrawDebugType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6BlueprintLibrary::GetComputeSlopeDegree(const class UObject* InWorldContextObject, const TArray<EObjectTypeQuery>& ObjectTypes, const struct FVector& ForwardVector, const struct FVector& Start, const float DepthLength, EDrawDebugTrace DrawDebugType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetComputeSlopeDegree");

	Params::X6BlueprintLibrary_GetComputeSlopeDegree Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.ObjectTypes = std::move(ObjectTypes);
	Parms.ForwardVector = std::move(ForwardVector);
	Parms.Start = std::move(Start);
	Parms.DepthLength = DepthLength;
	Parms.DrawDebugType = DrawDebugType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetComputeSlopeRotation
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContextObject                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<EObjectTypeQuery>&         ObjectTypes                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FTransform*                      CheckPointTransform                                    (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             InFloorAngle                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             DepthLength                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EDrawDebugTrace                         DrawDebugType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator UX6BlueprintLibrary::GetComputeSlopeRotation(const class UObject* InWorldContextObject, const TArray<EObjectTypeQuery>& ObjectTypes, struct FTransform* CheckPointTransform, const float InFloorAngle, const float DepthLength, EDrawDebugTrace DrawDebugType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetComputeSlopeRotation");

	Params::X6BlueprintLibrary_GetComputeSlopeRotation Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.ObjectTypes = std::move(ObjectTypes);
	Parms.InFloorAngle = InFloorAngle;
	Parms.DepthLength = DepthLength;
	Parms.DrawDebugType = DrawDebugType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CheckPointTransform != nullptr)
		*CheckPointTransform = std::move(Parms.CheckPointTransform);

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetCurrentTotalMillisecond
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UX6BlueprintLibrary::GetCurrentTotalMillisecond()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetCurrentTotalMillisecond");

	Params::X6BlueprintLibrary_GetCurrentTotalMillisecond Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetFileNames
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    InDirPath                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>*                  OutFileNames                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BlueprintLibrary::GetFileNames(const class FString& InDirPath, TArray<class FString>* OutFileNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetFileNames");

	Params::X6BlueprintLibrary_GetFileNames Parms{};

	Parms.InDirPath = std::move(InDirPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutFileNames != nullptr)
		*OutFileNames = std::move(Parms.OutFileNames);

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetFPS
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6BlueprintLibrary::GetFPS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetFPS");

	Params::X6BlueprintLibrary_GetFPS Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetFrameOfMarkedFrame
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   Sequence                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Label                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UX6BlueprintLibrary::GetFrameOfMarkedFrame(class ULevelSequence* Sequence, const class FString& Label)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetFrameOfMarkedFrame");

	Params::X6BlueprintLibrary_GetFrameOfMarkedFrame Parms{};

	Parms.Sequence = Sequence;
	Parms.Label = std::move(Label);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetKeyBoardFocusedWidget
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      InScopeWidget                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UX6BlueprintLibrary::GetKeyBoardFocusedWidget(class UUserWidget* InScopeWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetKeyBoardFocusedWidget");

	Params::X6BlueprintLibrary_GetKeyBoardFocusedWidget Parms{};

	Parms.InScopeWidget = InScopeWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetKeyFromCodes
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const int64                             KeyCode                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int64                             CharCode                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                             ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FKey UX6BlueprintLibrary::GetKeyFromCodes(const int64 KeyCode, const int64 CharCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetKeyFromCodes");

	Params::X6BlueprintLibrary_GetKeyFromCodes Parms{};

	Parms.KeyCode = KeyCode;
	Parms.CharCode = CharCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetLastUserInteractionDeltaTime
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bIgnoreMotionInput                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

double UX6BlueprintLibrary::GetLastUserInteractionDeltaTime(bool bIgnoreMotionInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetLastUserInteractionDeltaTime");

	Params::X6BlueprintLibrary_GetLastUserInteractionDeltaTime Parms{};

	Parms.bIgnoreMotionInput = bIgnoreMotionInput;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetLeftMouseButtonKey
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FKey                             ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FKey UX6BlueprintLibrary::GetLeftMouseButtonKey()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetLeftMouseButtonKey");

	Params::X6BlueprintLibrary_GetLeftMouseButtonKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetLevel
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UX6BlueprintLibrary::GetLevel(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetLevel");

	Params::X6BlueprintLibrary_GetLevel Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetLevelOffset
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UX6BlueprintLibrary::GetLevelOffset(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetLevelOffset");

	Params::X6BlueprintLibrary_GetLevelOffset Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetLocalPlayerCameraManager
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AX6PlayerCameraManager*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AX6PlayerCameraManager* UX6BlueprintLibrary::GetLocalPlayerCameraManager(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetLocalPlayerCameraManager");

	Params::X6BlueprintLibrary_GetLocalPlayerCameraManager Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetMainSkeletalComponent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMeshComponent*           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMeshComponent* UX6BlueprintLibrary::GetMainSkeletalComponent(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetMainSkeletalComponent");

	Params::X6BlueprintLibrary_GetMainSkeletalComponent Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetMostPriorityHitComponent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class AActor*                     InTargetActor                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPrimitiveComponent* UX6BlueprintLibrary::GetMostPriorityHitComponent(const class AActor* InTargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetMostPriorityHitComponent");

	Params::X6BlueprintLibrary_GetMostPriorityHitComponent Parms{};

	Parms.InTargetActor = InTargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetNavMeshTileSize
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6BlueprintLibrary::GetNavMeshTileSize(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetNavMeshTileSize");

	Params::X6BlueprintLibrary_GetNavMeshTileSize Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetNikkiAroundBound
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ACharacter*                       InNikki                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FNikkiAroundMeshInfo>     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FNikkiAroundMeshInfo> UX6BlueprintLibrary::GetNikkiAroundBound(class ACharacter* InNikki)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetNikkiAroundBound");

	Params::X6BlueprintLibrary_GetNikkiAroundBound Parms{};

	Parms.InNikki = InNikki;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetNikkiMeshForwardVector
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class ACharacter*                       InNikki                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIgnoreZAxis                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UX6BlueprintLibrary::GetNikkiMeshForwardVector(class ACharacter* InNikki, bool bIgnoreZAxis)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetNikkiMeshForwardVector");

	Params::X6BlueprintLibrary_GetNikkiMeshForwardVector Parms{};

	Parms.InNikki = InNikki;
	Parms.bIgnoreZAxis = bIgnoreZAxis;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetNikkiPlayerController
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AX6NikkiPlayerController*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AX6NikkiPlayerController* UX6BlueprintLibrary::GetNikkiPlayerController(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetNikkiPlayerController");

	Params::X6BlueprintLibrary_GetNikkiPlayerController Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetNotifyStartAndEndTime
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FAnimNotifyEvent&          InQueryNotify                                          (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// float*                                  OutStartTime                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  OutEndTime                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::GetNotifyStartAndEndTime(const struct FAnimNotifyEvent& InQueryNotify, float* OutStartTime, float* OutEndTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetNotifyStartAndEndTime");

	Params::X6BlueprintLibrary_GetNotifyStartAndEndTime Parms{};

	Parms.InQueryNotify = std::move(InQueryNotify);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutStartTime != nullptr)
		*OutStartTime = Parms.OutStartTime;

	if (OutEndTime != nullptr)
		*OutEndTime = Parms.OutEndTime;
}


// Function X6Game.X6BlueprintLibrary.GetObjectsMemoryUsage
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class UObject*>&           Objects                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

double UX6BlueprintLibrary::GetObjectsMemoryUsage(const TArray<class UObject*>& Objects)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetObjectsMemoryUsage");

	Params::X6BlueprintLibrary_GetObjectsMemoryUsage Parms{};

	Parms.Objects = std::move(Objects);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetPlatformMilliseconds
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

double UX6BlueprintLibrary::GetPlatformMilliseconds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetPlatformMilliseconds");

	Params::X6BlueprintLibrary_GetPlatformMilliseconds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetPointerPosition
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// int32                                   PointerIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2f                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2f UX6BlueprintLibrary::GetPointerPosition(int32 PointerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetPointerPosition");

	Params::X6BlueprintLibrary_GetPointerPosition Parms{};

	Parms.PointerIndex = PointerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetProjectVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UX6BlueprintLibrary::GetProjectVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetProjectVersion");

	Params::X6BlueprintLibrary_GetProjectVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetSafePaddingLeftRightSymmetric
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BlueprintLibrary::GetSafePaddingLeftRightSymmetric()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetSafePaddingLeftRightSymmetric");

	Params::X6BlueprintLibrary_GetSafePaddingLeftRightSymmetric Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetSafePaddingTopBottomSymmetric
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BlueprintLibrary::GetSafePaddingTopBottomSymmetric()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetSafePaddingTopBottomSymmetric");

	Params::X6BlueprintLibrary_GetSafePaddingTopBottomSymmetric Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetSafeZonePaddingMaxValue
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector4f                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector4f UX6BlueprintLibrary::GetSafeZonePaddingMaxValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetSafeZonePaddingMaxValue");

	Params::X6BlueprintLibrary_GetSafeZonePaddingMaxValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetSafeZonePaddingOriginalValue
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector4f                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector4f UX6BlueprintLibrary::GetSafeZonePaddingOriginalValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetSafeZonePaddingOriginalValue");

	Params::X6BlueprintLibrary_GetSafeZonePaddingOriginalValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetSequenceFloatCurveKeys
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UAnimSequence*                    AnimationSequence                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             CurveName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<float>*                          Times                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<float>*                          KeyData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::GetSequenceFloatCurveKeys(class UAnimSequence* AnimationSequence, class FName CurveName, TArray<float>* Times, TArray<float>* KeyData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetSequenceFloatCurveKeys");

	Params::X6BlueprintLibrary_GetSequenceFloatCurveKeys Parms{};

	Parms.AnimationSequence = AnimationSequence;
	Parms.CurveName = CurveName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Times != nullptr)
		*Times = std::move(Parms.Times);

	if (KeyData != nullptr)
		*KeyData = std::move(Parms.KeyData);
}


// Function X6Game.X6BlueprintLibrary.GetSequencerTransfromTrackBoxs
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UMovieSceneSequence*              InSequence                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMovieSceneSequencePlayer*        InPlayer                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTransform&                InTransform                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FBox>*                    OutBoxArray                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BlueprintLibrary::GetSequencerTransfromTrackBoxs(class UMovieSceneSequence* InSequence, class UMovieSceneSequencePlayer* InPlayer, const struct FTransform& InTransform, TArray<struct FBox>* OutBoxArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetSequencerTransfromTrackBoxs");

	Params::X6BlueprintLibrary_GetSequencerTransfromTrackBoxs Parms{};

	Parms.InSequence = InSequence;
	Parms.InPlayer = InPlayer;
	Parms.InTransform = std::move(InTransform);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutBoxArray != nullptr)
		*OutBoxArray = std::move(Parms.OutBoxArray);

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetSingleAnimCurrentTime
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*           MeshComp                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6BlueprintLibrary::GetSingleAnimCurrentTime(class USkeletalMeshComponent* MeshComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetSingleAnimCurrentTime");

	Params::X6BlueprintLibrary_GetSingleAnimCurrentTime Parms{};

	Parms.MeshComp = MeshComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetSkeletalMeshForwardVector
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*           InSkeletalMeshComponent                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIgnoreZAxis                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UX6BlueprintLibrary::GetSkeletalMeshForwardVector(class USkeletalMeshComponent* InSkeletalMeshComponent, bool bIgnoreZAxis)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetSkeletalMeshForwardVector");

	Params::X6BlueprintLibrary_GetSkeletalMeshForwardVector Parms{};

	Parms.InSkeletalMeshComponent = InSkeletalMeshComponent;
	Parms.bIgnoreZAxis = bIgnoreZAxis;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetSocketComponentSpaceTransformByTime
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*           SkeletalMeshComp                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimSequence*                    AnimSequence                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SocketName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTransform UX6BlueprintLibrary::GetSocketComponentSpaceTransformByTime(class USkeletalMeshComponent* SkeletalMeshComp, class UAnimSequence* AnimSequence, class FName SocketName, float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetSocketComponentSpaceTransformByTime");

	Params::X6BlueprintLibrary_GetSocketComponentSpaceTransformByTime Parms{};

	Parms.SkeletalMeshComp = SkeletalMeshComp;
	Parms.AnimSequence = AnimSequence;
	Parms.SocketName = SocketName;
	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetStringArrayFromFile
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    Filename                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>*                  Content                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::GetStringArrayFromFile(const class FString& Filename, TArray<class FString>* Content)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetStringArrayFromFile");

	Params::X6BlueprintLibrary_GetStringArrayFromFile Parms{};

	Parms.Filename = std::move(Filename);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Content != nullptr)
		*Content = std::move(Parms.Content);
}


// Function X6Game.X6BlueprintLibrary.GetStringFromFile
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    Filename                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString*                          Content                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BlueprintLibrary::GetStringFromFile(const class FString& Filename, class FString* Content)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetStringFromFile");

	Params::X6BlueprintLibrary_GetStringFromFile Parms{};

	Parms.Filename = std::move(Filename);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Content != nullptr)
		*Content = std::move(Parms.Content);

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetStringHash
// (Final, Native, Static, Public)
// Parameters:
// const class FString&                    Str                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UX6BlueprintLibrary::GetStringHash(const class FString& Str)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetStringHash");

	Params::X6BlueprintLibrary_GetStringHash Parms{};

	Parms.Str = std::move(Str);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetStringMD5
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Str                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UX6BlueprintLibrary::GetStringMD5(const class FString& Str)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetStringMD5");

	Params::X6BlueprintLibrary_GetStringMD5 Parms{};

	Parms.Str = std::move(Str);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetStructFieldsArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UStruct*                          Struct                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UX6BlueprintLibrary::GetStructFieldsArray(class UStruct* Struct)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetStructFieldsArray");

	Params::X6BlueprintLibrary_GetStructFieldsArray Parms{};

	Parms.Struct = Struct;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetSubWidgetByGuideTag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      InWidget                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InGuideTag                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UX6BlueprintLibrary::GetSubWidgetByGuideTag(class UUserWidget* InWidget, class FName InGuideTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetSubWidgetByGuideTag");

	Params::X6BlueprintLibrary_GetSubWidgetByGuideTag Parms{};

	Parms.InWidget = InWidget;
	Parms.InGuideTag = InGuideTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetSubWidgetWithGuideTag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      InWidget                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TMap<class FName, class UWidget*> ReturnValue                                            (ConstParm, ExportObject, Parm, OutParm, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

const TMap<class FName, class UWidget*> UX6BlueprintLibrary::GetSubWidgetWithGuideTag(class UUserWidget* InWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetSubWidgetWithGuideTag");

	Params::X6BlueprintLibrary_GetSubWidgetWithGuideTag Parms{};

	Parms.InWidget = InWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetSupportedAgentIndex
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UX6BlueprintLibrary::GetSupportedAgentIndex(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetSupportedAgentIndex");

	Params::X6BlueprintLibrary_GetSupportedAgentIndex Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetTargetCanFilterAndPriority
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UPrimitiveComponent*        Component                                              (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   bCanFilter                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  PriorityValue                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::GetTargetCanFilterAndPriority(const class UPrimitiveComponent* Component, bool* bCanFilter, int32* PriorityValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetTargetCanFilterAndPriority");

	Params::X6BlueprintLibrary_GetTargetCanFilterAndPriority Parms{};

	Parms.Component = Component;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bCanFilter != nullptr)
		*bCanFilter = Parms.bCanFilter;

	if (PriorityValue != nullptr)
		*PriorityValue = Parms.PriorityValue;
}


// Function X6Game.X6BlueprintLibrary.GetTargetFilterHitComponents
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class AActor*                     InTargetActor                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UPrimitiveComponent*>*     X6CombatHitComponents                                  (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::GetTargetFilterHitComponents(const class AActor* InTargetActor, TArray<class UPrimitiveComponent*>* X6CombatHitComponents)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetTargetFilterHitComponents");

	Params::X6BlueprintLibrary_GetTargetFilterHitComponents Parms{};

	Parms.InTargetActor = InTargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (X6CombatHitComponents != nullptr)
		*X6CombatHitComponents = std::move(Parms.X6CombatHitComponents);
}


// Function X6Game.X6BlueprintLibrary.GetVelocityAndPredictPath_CustomArc
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector*                         OutLaunchVelocity                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVector>*                 OutPathPositions                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// const struct FVector&                   StartPos                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   EndPos                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SimFrequency                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxSimTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EDrawDebugTrace                         DrawDebugType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DrawDebugTime                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OverrideGravityZ                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ArcParam                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::GetVelocityAndPredictPath_CustomArc(class UObject* WorldContextObject, struct FVector* OutLaunchVelocity, TArray<struct FVector>* OutPathPositions, const struct FVector& StartPos, const struct FVector& EndPos, float SimFrequency, float MaxSimTime, EDrawDebugTrace DrawDebugType, float DrawDebugTime, float OverrideGravityZ, float ArcParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetVelocityAndPredictPath_CustomArc");

	Params::X6BlueprintLibrary_GetVelocityAndPredictPath_CustomArc Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.StartPos = std::move(StartPos);
	Parms.EndPos = std::move(EndPos);
	Parms.SimFrequency = SimFrequency;
	Parms.MaxSimTime = MaxSimTime;
	Parms.DrawDebugType = DrawDebugType;
	Parms.DrawDebugTime = DrawDebugTime;
	Parms.OverrideGravityZ = OverrideGravityZ;
	Parms.ArcParam = ArcParam;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLaunchVelocity != nullptr)
		*OutLaunchVelocity = std::move(Parms.OutLaunchVelocity);

	if (OutPathPositions != nullptr)
		*OutPathPositions = std::move(Parms.OutPathPositions);
}


// Function X6Game.X6BlueprintLibrary.GetWidgetByGuideTag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InGuideTag                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UX6BlueprintLibrary::GetWidgetByGuideTag(class UObject* WorldContextObject, class FName InGuideTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetWidgetByGuideTag");

	Params::X6BlueprintLibrary_GetWidgetByGuideTag Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InGuideTag = InGuideTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetWidgetInViewport
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          InWidget                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UWidget*>*                 OutHierarchyWidgets                                    (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UX6BlueprintLibrary::GetWidgetInViewport(class UObject* InWidget, TArray<class UWidget*>* OutHierarchyWidgets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetWidgetInViewport");

	Params::X6BlueprintLibrary_GetWidgetInViewport Parms{};

	Parms.InWidget = InWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutHierarchyWidgets != nullptr)
		*OutHierarchyWidgets = std::move(Parms.OutHierarchyWidgets);

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetX6GameInstance
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UX6GameInstance*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UX6GameInstance* UX6BlueprintLibrary::GetX6GameInstance(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetX6GameInstance");

	Params::X6BlueprintLibrary_GetX6GameInstance Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.GetX6PlayerController
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AX6PlayerControllerBase*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AX6PlayerControllerBase* UX6BlueprintLibrary::GetX6PlayerController(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "GetX6PlayerController");

	Params::X6BlueprintLibrary_GetX6PlayerController Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.HasRootMotion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UAnimSequenceBase*                AnimSequenceBase                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BlueprintLibrary::HasRootMotion(class UAnimSequenceBase* AnimSequenceBase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "HasRootMotion");

	Params::X6BlueprintLibrary_HasRootMotion Parms{};

	Parms.AnimSequenceBase = AnimSequenceBase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.IsActorPlayingGivenAnimation
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           ActorObject                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FSoftObjectPath>&   AnimationSoftRefs                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BlueprintLibrary::IsActorPlayingGivenAnimation(class AActor* ActorObject, const TArray<struct FSoftObjectPath>& AnimationSoftRefs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "IsActorPlayingGivenAnimation");

	Params::X6BlueprintLibrary_IsActorPlayingGivenAnimation Parms{};

	Parms.ActorObject = ActorObject;
	Parms.AnimationSoftRefs = std::move(AnimationSoftRefs);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.IsAnyGamePadConnected
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BlueprintLibrary::IsAnyGamePadConnected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "IsAnyGamePadConnected");

	Params::X6BlueprintLibrary_IsAnyGamePadConnected Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.IsInViewport
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BlueprintLibrary::IsInViewport(class UObject* WorldContextObject, class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "IsInViewport");

	Params::X6BlueprintLibrary_IsInViewport Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.IsLoadingScreenFinished
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BlueprintLibrary::IsLoadingScreenFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "IsLoadingScreenFinished");

	Params::X6BlueprintLibrary_IsLoadingScreenFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.IsLocalPlayerController
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BlueprintLibrary::IsLocalPlayerController(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "IsLocalPlayerController");

	Params::X6BlueprintLibrary_IsLocalPlayerController Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.IsMontageSlotActivated
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UAnimInstance*                    AnimInstance                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName&                      SlotNodeName                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bCheckPlaying                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BlueprintLibrary::IsMontageSlotActivated(class UAnimInstance* AnimInstance, const class FName& SlotNodeName, const bool bCheckPlaying)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "IsMontageSlotActivated");

	Params::X6BlueprintLibrary_IsMontageSlotActivated Parms{};

	Parms.AnimInstance = AnimInstance;
	Parms.SlotNodeName = SlotNodeName;
	Parms.bCheckPlaying = bCheckPlaying;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.IsPlayerEyeBlinking
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InPlayerActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BlueprintLibrary::IsPlayerEyeBlinking(class AActor* InPlayerActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "IsPlayerEyeBlinking");

	Params::X6BlueprintLibrary_IsPlayerEyeBlinking Parms{};

	Parms.InPlayerActor = InPlayerActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.IsPlayingInEditor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BlueprintLibrary::IsPlayingInEditor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "IsPlayingInEditor");

	Params::X6BlueprintLibrary_IsPlayingInEditor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.IsPointInsideBoxComponent
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   Point                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBoxComponent*                    BoxComponent                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BlueprintLibrary::IsPointInsideBoxComponent(const struct FVector& Point, class UBoxComponent* BoxComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "IsPointInsideBoxComponent");

	Params::X6BlueprintLibrary_IsPointInsideBoxComponent Parms{};

	Parms.Point = std::move(Point);
	Parms.BoxComponent = BoxComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.IsPSOPrecompiling
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BlueprintLibrary::IsPSOPrecompiling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "IsPSOPrecompiling");

	Params::X6BlueprintLibrary_IsPSOPrecompiling Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.IsThisApplicationForeground
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BlueprintLibrary::IsThisApplicationForeground()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "IsThisApplicationForeground");

	Params::X6BlueprintLibrary_IsThisApplicationForeground Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.IsWidgetChildOf
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          Widget                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          PossibleParent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BlueprintLibrary::IsWidgetChildOf(class UWidget* Widget, class UWidget* PossibleParent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "IsWidgetChildOf");

	Params::X6BlueprintLibrary_IsWidgetChildOf Parms{};

	Parms.Widget = Widget;
	Parms.PossibleParent = PossibleParent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.IsWidgetRealVisible
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          InWidget                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BlueprintLibrary::IsWidgetRealVisible(class UWidget* InWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "IsWidgetRealVisible");

	Params::X6BlueprintLibrary_IsWidgetRealVisible Parms{};

	Parms.InWidget = InWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.IsWithEditor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BlueprintLibrary::IsWithEditor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "IsWithEditor");

	Params::X6BlueprintLibrary_IsWithEditor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.IsWorldPositionInViewport
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Position                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayerViewportRelative                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BlueprintLibrary::IsWorldPositionInViewport(class UObject* WorldContextObject, const struct FVector& Position, bool bPlayerViewportRelative)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "IsWorldPositionInViewport");

	Params::X6BlueprintLibrary_IsWorldPositionInViewport Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Position = std::move(Position);
	Parms.bPlayerViewportRelative = bPlayerViewportRelative;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.LineBoxIntersection
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FBox&                      Box                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// const struct FVector&                   Start                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   End                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Direction                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BlueprintLibrary::LineBoxIntersection(const struct FBox& Box, const struct FVector& Start, const struct FVector& End, const struct FVector& Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "LineBoxIntersection");

	Params::X6BlueprintLibrary_LineBoxIntersection Parms{};

	Parms.Box = std::move(Box);
	Parms.Start = std::move(Start);
	Parms.End = std::move(End);
	Parms.Direction = std::move(Direction);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.LoadAndActivateGameFeaturePlugin
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InGameFeaturePluginName                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::LoadAndActivateGameFeaturePlugin(const class FString& InGameFeaturePluginName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "LoadAndActivateGameFeaturePlugin");

	Params::X6BlueprintLibrary_LoadAndActivateGameFeaturePlugin Parms{};

	Parms.InGameFeaturePluginName = std::move(InGameFeaturePluginName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.LoadPropertiesFromConfig
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          obj                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Filename                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Instance_ID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::LoadPropertiesFromConfig(class UObject* obj, const class FString& Filename, int32 Instance_ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "LoadPropertiesFromConfig");

	Params::X6BlueprintLibrary_LoadPropertiesFromConfig Parms{};

	Parms.obj = obj;
	Parms.Filename = std::move(Filename);
	Parms.Instance_ID = Instance_ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.MarkAsGarbageByObject
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::MarkAsGarbageByObject(const class UObject* InObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "MarkAsGarbageByObject");

	Params::X6BlueprintLibrary_MarkAsGarbageByObject Parms{};

	Parms.InObject = InObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.MarkAsGarbageByPath
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InPackagePath                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::MarkAsGarbageByPath(const class FString& InPackagePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "MarkAsGarbageByPath");

	Params::X6BlueprintLibrary_MarkAsGarbageByPath Parms{};

	Parms.InPackagePath = std::move(InPackagePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.MatchesTagDepth
// (Final, Native, Static, Public, HasOutParams)
// Parameters:
// const struct FGameplayTag&              TagOne                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              TagTwo                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UX6BlueprintLibrary::MatchesTagDepth(const struct FGameplayTag& TagOne, const struct FGameplayTag& TagTwo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "MatchesTagDepth");

	Params::X6BlueprintLibrary_MatchesTagDepth Parms{};

	Parms.TagOne = std::move(TagOne);
	Parms.TagTwo = std::move(TagTwo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.NumPSOPrecompilesRemaining
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UX6BlueprintLibrary::NumPSOPrecompilesRemaining()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "NumPSOPrecompilesRemaining");

	Params::X6BlueprintLibrary_NumPSOPrecompilesRemaining Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.PaperDynamicLinkAnimClassLayers
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*           SKMeshComp                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UAnimInstance>        NewLinkAnimClass                                       (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BlueprintLibrary::PaperDynamicLinkAnimClassLayers(class USkeletalMeshComponent* SKMeshComp, TSubclassOf<class UAnimInstance> NewLinkAnimClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "PaperDynamicLinkAnimClassLayers");

	Params::X6BlueprintLibrary_PaperDynamicLinkAnimClassLayers Parms{};

	Parms.SKMeshComp = SKMeshComp;
	Parms.NewLinkAnimClass = NewLinkAnimClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.PaperDynamicSetAnimInstanceClass
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*           SKMeshComp                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UAnimInstance>        NewAnimClass                                           (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BlueprintLibrary::PaperDynamicSetAnimInstanceClass(class USkeletalMeshComponent* SKMeshComp, TSubclassOf<class UAnimInstance> NewAnimClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "PaperDynamicSetAnimInstanceClass");

	Params::X6BlueprintLibrary_PaperDynamicSetAnimInstanceClass Parms{};

	Parms.SKMeshComp = SKMeshComp;
	Parms.NewAnimClass = NewAnimClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.PlayerActorCancelLookAtActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ELookAtEventType                        InEventType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InPlayerActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InTargetActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bClearAll                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bNeedNetSync                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::PlayerActorCancelLookAtActor(ELookAtEventType InEventType, class AActor* InPlayerActor, class AActor* InTargetActor, const bool bClearAll, const bool bNeedNetSync)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "PlayerActorCancelLookAtActor");

	Params::X6BlueprintLibrary_PlayerActorCancelLookAtActor Parms{};

	Parms.InEventType = InEventType;
	Parms.InPlayerActor = InPlayerActor;
	Parms.InTargetActor = InTargetActor;
	Parms.bClearAll = bClearAll;
	Parms.bNeedNetSync = bNeedNetSync;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.PlayerActorCancelLookAtLocation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ELookAtEventType                        InEventType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InPlayerActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bClearAll                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bNeedNetSync                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::PlayerActorCancelLookAtLocation(ELookAtEventType InEventType, class AActor* InPlayerActor, const bool bClearAll, const bool bNeedNetSync)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "PlayerActorCancelLookAtLocation");

	Params::X6BlueprintLibrary_PlayerActorCancelLookAtLocation Parms{};

	Parms.InEventType = InEventType;
	Parms.InPlayerActor = InPlayerActor;
	Parms.bClearAll = bClearAll;
	Parms.bNeedNetSync = bNeedNetSync;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.PlayerActorCancleLookAtEventsByType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ELookAtEventType                        InEventType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InPlayerActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bClearAll                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bNeedNetSync                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::PlayerActorCancleLookAtEventsByType(ELookAtEventType InEventType, class AActor* InPlayerActor, const bool bClearAll, const bool bNeedNetSync)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "PlayerActorCancleLookAtEventsByType");

	Params::X6BlueprintLibrary_PlayerActorCancleLookAtEventsByType Parms{};

	Parms.InEventType = InEventType;
	Parms.InPlayerActor = InPlayerActor;
	Parms.bClearAll = bClearAll;
	Parms.bNeedNetSync = bNeedNetSync;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.PlayerActorLookAtActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ELookAtEventType                        InEventType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InPlayerActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InTargetActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bNeedTriggerTurn                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             OverrideTriggerTurnAngle                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bNeedNetSync                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::PlayerActorLookAtActor(ELookAtEventType InEventType, class AActor* InPlayerActor, class AActor* InTargetActor, const bool bNeedTriggerTurn, const float OverrideTriggerTurnAngle, const bool bNeedNetSync)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "PlayerActorLookAtActor");

	Params::X6BlueprintLibrary_PlayerActorLookAtActor Parms{};

	Parms.InEventType = InEventType;
	Parms.InPlayerActor = InPlayerActor;
	Parms.InTargetActor = InTargetActor;
	Parms.bNeedTriggerTurn = bNeedTriggerTurn;
	Parms.OverrideTriggerTurnAngle = OverrideTriggerTurnAngle;
	Parms.bNeedNetSync = bNeedNetSync;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.PlayerActorLookAtActorWithParams
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ELookAtEventType                        InEventType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InPlayerActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InTargetActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLookAtRequestParams&      LookAtRequestParams                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const bool                              bNeedNetSync                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::PlayerActorLookAtActorWithParams(ELookAtEventType InEventType, class AActor* InPlayerActor, class AActor* InTargetActor, const struct FLookAtRequestParams& LookAtRequestParams, const bool bNeedNetSync)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "PlayerActorLookAtActorWithParams");

	Params::X6BlueprintLibrary_PlayerActorLookAtActorWithParams Parms{};

	Parms.InEventType = InEventType;
	Parms.InPlayerActor = InPlayerActor;
	Parms.InTargetActor = InTargetActor;
	Parms.LookAtRequestParams = std::move(LookAtRequestParams);
	Parms.bNeedNetSync = bNeedNetSync;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.PlayerActorLookAtLocation
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// ELookAtEventType                        InEventType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InPlayerActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   InTargetLocation                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bNeedTriggerTurn                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             OverrideTriggerTurnAngle                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bNeedNetSync                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::PlayerActorLookAtLocation(ELookAtEventType InEventType, class AActor* InPlayerActor, const struct FVector& InTargetLocation, const bool bNeedTriggerTurn, const float OverrideTriggerTurnAngle, const bool bNeedNetSync)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "PlayerActorLookAtLocation");

	Params::X6BlueprintLibrary_PlayerActorLookAtLocation Parms{};

	Parms.InEventType = InEventType;
	Parms.InPlayerActor = InPlayerActor;
	Parms.InTargetLocation = std::move(InTargetLocation);
	Parms.bNeedTriggerTurn = bNeedTriggerTurn;
	Parms.OverrideTriggerTurnAngle = OverrideTriggerTurnAngle;
	Parms.bNeedNetSync = bNeedNetSync;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.PlayerActorLookAtLocationWithParams
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// ELookAtEventType                        InEventType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InPlayerActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   InTargetLocation                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLookAtRequestParams&      LookAtRequestParams                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const bool                              bNeedNetSync                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::PlayerActorLookAtLocationWithParams(ELookAtEventType InEventType, class AActor* InPlayerActor, const struct FVector& InTargetLocation, const struct FLookAtRequestParams& LookAtRequestParams, const bool bNeedNetSync)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "PlayerActorLookAtLocationWithParams");

	Params::X6BlueprintLibrary_PlayerActorLookAtLocationWithParams Parms{};

	Parms.InEventType = InEventType;
	Parms.InPlayerActor = InPlayerActor;
	Parms.InTargetLocation = std::move(InTargetLocation);
	Parms.LookAtRequestParams = std::move(LookAtRequestParams);
	Parms.bNeedNetSync = bNeedNetSync;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.PlayerActorPauseLookAt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InPlayerActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::PlayerActorPauseLookAt(class AActor* InPlayerActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "PlayerActorPauseLookAt");

	Params::X6BlueprintLibrary_PlayerActorPauseLookAt Parms{};

	Parms.InPlayerActor = InPlayerActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.PlayerActorResumeLookAt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InPlayerActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::PlayerActorResumeLookAt(class AActor* InPlayerActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "PlayerActorResumeLookAt");

	Params::X6BlueprintLibrary_PlayerActorResumeLookAt Parms{};

	Parms.InPlayerActor = InPlayerActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.PlayerEyeBlinkOnce
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InPlayerActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRandomBlink                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForce                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::PlayerEyeBlinkOnce(class AActor* InPlayerActor, bool bRandomBlink, bool bForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "PlayerEyeBlinkOnce");

	Params::X6BlueprintLibrary_PlayerEyeBlinkOnce Parms{};

	Parms.InPlayerActor = InPlayerActor;
	Parms.bRandomBlink = bRandomBlink;
	Parms.bForce = bForce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.PlayerMoveToLocationAfterFlushLevelStreaming
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   InLocation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::PlayerMoveToLocationAfterFlushLevelStreaming(class UObject* WorldContextObject, const struct FVector& InLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "PlayerMoveToLocationAfterFlushLevelStreaming");

	Params::X6BlueprintLibrary_PlayerMoveToLocationAfterFlushLevelStreaming Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InLocation = std::move(InLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.PrestreamTextures
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Seconds                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnableStreaming                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CinematicTextureGroups                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::PrestreamTextures(class AActor* Actor, float Seconds, bool bEnableStreaming, int32 CinematicTextureGroups)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "PrestreamTextures");

	Params::X6BlueprintLibrary_PrestreamTextures Parms{};

	Parms.Actor = Actor;
	Parms.Seconds = Seconds;
	Parms.bEnableStreaming = bEnableStreaming;
	Parms.CinematicTextureGroups = CinematicTextureGroups;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.RegisterAndAddComponent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UActorComponent*                  NewComponent                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAttachmentRule                         AttachmentRules                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InSocketName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BlueprintLibrary::RegisterAndAddComponent(class AActor* Actor, class UActorComponent* NewComponent, EAttachmentRule AttachmentRules, class FName InSocketName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "RegisterAndAddComponent");

	Params::X6BlueprintLibrary_RegisterAndAddComponent Parms{};

	Parms.Actor = Actor;
	Parms.NewComponent = NewComponent;
	Parms.AttachmentRules = AttachmentRules;
	Parms.InSocketName = InSocketName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.RegisterClickNotification
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          InWidget                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClickNotification*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UClickNotification* UX6BlueprintLibrary::RegisterClickNotification(class UWidget* InWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "RegisterClickNotification");

	Params::X6BlueprintLibrary_RegisterClickNotification Parms{};

	Parms.InWidget = InWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.RegisterGameViewportActivationChangedEvent
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void(bool bActivated)>& Callback                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UX6BlueprintLibrary::RegisterGameViewportActivationChangedEvent(const class UObject* WorldContextObject, const TDelegate<void(bool bActivated)>& Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "RegisterGameViewportActivationChangedEvent");

	Params::X6BlueprintLibrary_RegisterGameViewportActivationChangedEvent Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.RegisterViewportFocusChangingEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(bool IsFocused, bool IsInFocusPath)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UX6BlueprintLibrary::RegisterViewportFocusChangingEvent(TDelegate<void(bool IsFocused, bool IsInFocusPath)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "RegisterViewportFocusChangingEvent");

	Params::X6BlueprintLibrary_RegisterViewportFocusChangingEvent Parms{};

	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.ReleaseAllPointerCapture
// (Final, Native, Static, Public, BlueprintCallable)

void UX6BlueprintLibrary::ReleaseAllPointerCapture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "ReleaseAllPointerCapture");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.RemoveEffectOutlineOnActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::RemoveEffectOutlineOnActor(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "RemoveEffectOutlineOnActor");

	Params::X6BlueprintLibrary_RemoveEffectOutlineOnActor Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.RemoveTransformUpdatedEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BlueprintLibrary::RemoveTransformUpdatedEvent(class AActor* Target, int64 Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "RemoveTransformUpdatedEvent");

	Params::X6BlueprintLibrary_RemoveTransformUpdatedEvent Parms{};

	Parms.Target = Target;
	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.ReplaceVisibleTextWidgetsToKey
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::ReplaceVisibleTextWidgetsToKey(class UObject* InWorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "ReplaceVisibleTextWidgetsToKey");

	Params::X6BlueprintLibrary_ReplaceVisibleTextWidgetsToKey Parms{};

	Parms.InWorldContextObject = InWorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.RequestGameplayTag
// (Final, Native, Static, Public)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UX6BlueprintLibrary::RequestGameplayTag(class FName Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "RequestGameplayTag");

	Params::X6BlueprintLibrary_RequestGameplayTag Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.ResetAdvancedCameraRotation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::ResetAdvancedCameraRotation(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "ResetAdvancedCameraRotation");

	Params::X6BlueprintLibrary_ResetAdvancedCameraRotation Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.ResizeRenderTarget
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTextureRenderTarget2D*           RenderTarget                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Width                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Height                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::ResizeRenderTarget(class UTextureRenderTarget2D* RenderTarget, int32 Width, int32 Height)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "ResizeRenderTarget");

	Params::X6BlueprintLibrary_ResizeRenderTarget Parms{};

	Parms.RenderTarget = RenderTarget;
	Parms.Width = Width;
	Parms.Height = Height;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.ReTargetActorTickToLevel
// (Final, Native, Static, Public)
// Parameters:
// class ULevel*                           InLevel                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::ReTargetActorTickToLevel(class ULevel* InLevel, class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "ReTargetActorTickToLevel");

	Params::X6BlueprintLibrary_ReTargetActorTickToLevel Parms{};

	Parms.InLevel = InLevel;
	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.SavePropertiesToConfig
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          obj                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Filename                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Instance_ID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::SavePropertiesToConfig(class UObject* obj, const class FString& Filename, int32 Instance_ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "SavePropertiesToConfig");

	Params::X6BlueprintLibrary_SavePropertiesToConfig Parms{};

	Parms.obj = obj;
	Parms.Filename = std::move(Filename);
	Parms.Instance_ID = Instance_ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.SaveRenderTargetToFile
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTextureRenderTarget2D*           rt                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    fileDestination                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bWithAlpha                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BlueprintLibrary::SaveRenderTargetToFile(class UTextureRenderTarget2D* rt, const class FString& fileDestination, const bool bWithAlpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "SaveRenderTargetToFile");

	Params::X6BlueprintLibrary_SaveRenderTargetToFile Parms{};

	Parms.rt = rt;
	Parms.fileDestination = std::move(fileDestination);
	Parms.bWithAlpha = bWithAlpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.SaveStringToFile
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Filename                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BlueprintLibrary::SaveStringToFile(const class FString& String, const class FString& Filename)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "SaveStringToFile");

	Params::X6BlueprintLibrary_SaveStringToFile Parms{};

	Parms.String = std::move(String);
	Parms.Filename = std::move(Filename);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.SearchBulletConditionPathTargetResults
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Start                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   End                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Radius                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   HalfSize                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPenetrateMonster                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  Orientation                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// const TArray<EObjectTypeQuery>&         ObjectTypes                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bTraceComplex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class AActor*>&            ActorsToIgnore                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// EDrawDebugTrace                         DrawDebugType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FHitResult>*              OutHits                                                (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    bIgnoreSelf                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLinearColor&              TraceColor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLinearColor&              TraceHitColor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DrawTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BlueprintLibrary::SearchBulletConditionPathTargetResults(class UObject* InWorldContextObject, const struct FVector& Start, const struct FVector& End, const float Radius, const struct FVector& HalfSize, bool bPenetrateMonster, const struct FRotator& Orientation, const TArray<EObjectTypeQuery>& ObjectTypes, bool bTraceComplex, const TArray<class AActor*>& ActorsToIgnore, EDrawDebugTrace DrawDebugType, TArray<struct FHitResult>* OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "SearchBulletConditionPathTargetResults");

	Params::X6BlueprintLibrary_SearchBulletConditionPathTargetResults Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.Start = std::move(Start);
	Parms.End = std::move(End);
	Parms.Radius = Radius;
	Parms.HalfSize = std::move(HalfSize);
	Parms.bPenetrateMonster = bPenetrateMonster;
	Parms.Orientation = std::move(Orientation);
	Parms.ObjectTypes = std::move(ObjectTypes);
	Parms.bTraceComplex = bTraceComplex;
	Parms.ActorsToIgnore = std::move(ActorsToIgnore);
	Parms.DrawDebugType = DrawDebugType;
	Parms.bIgnoreSelf = bIgnoreSelf;
	Parms.TraceColor = std::move(TraceColor);
	Parms.TraceHitColor = std::move(TraceHitColor);
	Parms.DrawTime = DrawTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutHits != nullptr)
		*OutHits = std::move(Parms.OutHits);

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.SearchFilterConditionAreaTargetResults
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Start                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   End                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   HalfSize                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  Orientation                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// const TArray<EObjectTypeQuery>&         ObjectTypes                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bTraceComplex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class AActor*>&            ActorsToIgnore                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// EDrawDebugTrace                         DrawDebugType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FHitResult>*              OutHits                                                (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    bIgnoreSelf                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLinearColor&              TraceColor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLinearColor&              TraceHitColor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DrawTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::SearchFilterConditionAreaTargetResults(class UObject* InWorldContextObject, const struct FVector& Start, const struct FVector& End, const struct FVector& HalfSize, const struct FRotator& Orientation, const TArray<EObjectTypeQuery>& ObjectTypes, bool bTraceComplex, const TArray<class AActor*>& ActorsToIgnore, EDrawDebugTrace DrawDebugType, TArray<struct FHitResult>* OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "SearchFilterConditionAreaTargetResults");

	Params::X6BlueprintLibrary_SearchFilterConditionAreaTargetResults Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.Start = std::move(Start);
	Parms.End = std::move(End);
	Parms.HalfSize = std::move(HalfSize);
	Parms.Orientation = std::move(Orientation);
	Parms.ObjectTypes = std::move(ObjectTypes);
	Parms.bTraceComplex = bTraceComplex;
	Parms.ActorsToIgnore = std::move(ActorsToIgnore);
	Parms.DrawDebugType = DrawDebugType;
	Parms.bIgnoreSelf = bIgnoreSelf;
	Parms.TraceColor = std::move(TraceColor);
	Parms.TraceHitColor = std::move(TraceHitColor);
	Parms.DrawTime = DrawTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutHits != nullptr)
		*OutHits = std::move(Parms.OutHits);
}


// Function X6Game.X6BlueprintLibrary.SegmentIntersection2D
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   SegmentStartA                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   SegmentEndA                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   SegmentStartB                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   SegmentEndB                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector*                         IntersectionPoint                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BlueprintLibrary::SegmentIntersection2D(const struct FVector& SegmentStartA, const struct FVector& SegmentEndA, const struct FVector& SegmentStartB, const struct FVector& SegmentEndB, struct FVector* IntersectionPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "SegmentIntersection2D");

	Params::X6BlueprintLibrary_SegmentIntersection2D Parms{};

	Parms.SegmentStartA = std::move(SegmentStartA);
	Parms.SegmentEndA = std::move(SegmentEndA);
	Parms.SegmentStartB = std::move(SegmentStartB);
	Parms.SegmentEndB = std::move(SegmentEndB);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IntersectionPoint != nullptr)
		*IntersectionPoint = std::move(Parms.IntersectionPoint);

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.SetActorRootComponent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  InComponent                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::SetActorRootComponent(class AActor* InActor, class USceneComponent* InComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "SetActorRootComponent");

	Params::X6BlueprintLibrary_SetActorRootComponent Parms{};

	Parms.InActor = InActor;
	Parms.InComponent = InComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.SetEnableAnimMontageRootRotion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UAnimInstance*                    AnimInstace                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*                     AnimMontage                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::SetEnableAnimMontageRootRotion(class UAnimInstance* AnimInstace, class UAnimMontage* AnimMontage, bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "SetEnableAnimMontageRootRotion");

	Params::X6BlueprintLibrary_SetEnableAnimMontageRootRotion Parms{};

	Parms.AnimInstace = AnimInstace;
	Parms.AnimMontage = AnimMontage;
	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.SetGameUIFocusBrushEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::SetGameUIFocusBrushEnable(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "SetGameUIFocusBrushEnable");

	Params::X6BlueprintLibrary_SetGameUIFocusBrushEnable Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.SetGameViewportForceCursorType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMouseCursor                            InForceCursorType                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::SetGameViewportForceCursorType(class UObject* InWorldContextObject, EMouseCursor InForceCursorType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "SetGameViewportForceCursorType");

	Params::X6BlueprintLibrary_SetGameViewportForceCursorType Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InForceCursorType = InForceCursorType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.SetLoadingScreenScale
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   DPIScale                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::SetLoadingScreenScale(float DPIScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "SetLoadingScreenScale");

	Params::X6BlueprintLibrary_SetLoadingScreenScale Parms{};

	Parms.DPIScale = DPIScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.SetLoadingScreenWidget
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      InUserWidget                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MinimumLoadingScreenDisplayTime                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bWaitForManualStop                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAllowEngineTick                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::SetLoadingScreenWidget(class UUserWidget* InUserWidget, float MinimumLoadingScreenDisplayTime, bool bWaitForManualStop, bool bAllowEngineTick)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "SetLoadingScreenWidget");

	Params::X6BlueprintLibrary_SetLoadingScreenWidget Parms{};

	Parms.InUserWidget = InUserWidget;
	Parms.MinimumLoadingScreenDisplayTime = MinimumLoadingScreenDisplayTime;
	Parms.bWaitForManualStop = bWaitForManualStop;
	Parms.bAllowEngineTick = bAllowEngineTick;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.SetMouthShapeLanguage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InCulture                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::SetMouthShapeLanguage(const class FString& InCulture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "SetMouthShapeLanguage");

	Params::X6BlueprintLibrary_SetMouthShapeLanguage Parms{};

	Parms.InCulture = std::move(InCulture);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.SetPlayerActorLookAtLookAtSelectHighestScore
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InPlayerActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::SetPlayerActorLookAtLookAtSelectHighestScore(class AActor* InPlayerActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "SetPlayerActorLookAtLookAtSelectHighestScore");

	Params::X6BlueprintLibrary_SetPlayerActorLookAtLookAtSelectHighestScore Parms{};

	Parms.InPlayerActor = InPlayerActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.SetPlayerActorLookAtSelectLatestWithEventType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InPlayerActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ELookAtEventType                        InEventType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::SetPlayerActorLookAtSelectLatestWithEventType(class AActor* InPlayerActor, ELookAtEventType InEventType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "SetPlayerActorLookAtSelectLatestWithEventType");

	Params::X6BlueprintLibrary_SetPlayerActorLookAtSelectLatestWithEventType Parms{};

	Parms.InPlayerActor = InPlayerActor;
	Parms.InEventType = InEventType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.SetSafePaddingSymmetric
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bLeftRightSymmetric                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bTopBottomSymmetric                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::SetSafePaddingSymmetric(bool bLeftRightSymmetric, bool bTopBottomSymmetric)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "SetSafePaddingSymmetric");

	Params::X6BlueprintLibrary_SetSafePaddingSymmetric Parms{};

	Parms.bLeftRightSymmetric = bLeftRightSymmetric;
	Parms.bTopBottomSymmetric = bTopBottomSymmetric;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.SetSafeZonePaddingMaxValue
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   maxValX                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   maxValY                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   maxValZ                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   maxValW                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::SetSafeZonePaddingMaxValue(float maxValX, float maxValY, float maxValZ, float maxValW)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "SetSafeZonePaddingMaxValue");

	Params::X6BlueprintLibrary_SetSafeZonePaddingMaxValue Parms{};

	Parms.maxValX = maxValX;
	Parms.maxValY = maxValY;
	Parms.maxValZ = maxValZ;
	Parms.maxValW = maxValW;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.SetSingleAnimPosition
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*           MeshComp                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::SetSingleAnimPosition(class USkeletalMeshComponent* MeshComp, float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "SetSingleAnimPosition");

	Params::X6BlueprintLibrary_SetSingleAnimPosition Parms{};

	Parms.MeshComp = MeshComp;
	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.SetSkipUpdateAnimation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UAnimInstance*                    LinkedAnimInstace                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsSkipAnimationUpdate                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::SetSkipUpdateAnimation(class UAnimInstance* LinkedAnimInstace, bool IsSkipAnimationUpdate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "SetSkipUpdateAnimation");

	Params::X6BlueprintLibrary_SetSkipUpdateAnimation Parms{};

	Parms.LinkedAnimInstace = LinkedAnimInstace;
	Parms.IsSkipAnimationUpdate = IsSkipAnimationUpdate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.SetTransformUpdatedEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(class USceneComponent* UpdatedComponent, int32 UpdateTransformFlags, ETeleportType Teleport)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UX6BlueprintLibrary::SetTransformUpdatedEvent(class AActor* Target, TDelegate<void(class USceneComponent* UpdatedComponent, int32 UpdateTransformFlags, ETeleportType Teleport)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "SetTransformUpdatedEvent");

	Params::X6BlueprintLibrary_SetTransformUpdatedEvent Parms{};

	Parms.Target = Target;
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.SetWidgetNavigationEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::SetWidgetNavigationEnable(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "SetWidgetNavigationEnable");

	Params::X6BlueprintLibrary_SetWidgetNavigationEnable Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.StopLoadingScreen
// (Final, Native, Static, Public, BlueprintCallable)

void UX6BlueprintLibrary::StopLoadingScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "StopLoadingScreen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.SwitchTranslucentOrMaskedMaterails
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInTranslucent                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::SwitchTranslucentOrMaskedMaterails(class AActor* InActor, bool bInTranslucent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "SwitchTranslucentOrMaskedMaterails");

	Params::X6BlueprintLibrary_SwitchTranslucentOrMaskedMaterails Parms{};

	Parms.InActor = InActor;
	Parms.bInTranslucent = bInTranslucent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.TestPathSync
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   PathStart                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   PathEnd                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           PathfindingContext                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UNavigationQueryFilter>FilterClass                                            (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BlueprintLibrary::TestPathSync(class UObject* WorldContextObject, const struct FVector& PathStart, const struct FVector& PathEnd, class AActor* PathfindingContext, TSubclassOf<class UNavigationQueryFilter> FilterClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "TestPathSync");

	Params::X6BlueprintLibrary_TestPathSync Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PathStart = std::move(PathStart);
	Parms.PathEnd = std::move(PathEnd);
	Parms.PathfindingContext = PathfindingContext;
	Parms.FilterClass = FilterClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.UnloadGameFeaturePlugin
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InGameFeaturePluginName                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::UnloadGameFeaturePlugin(const class FString& InGameFeaturePluginName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "UnloadGameFeaturePlugin");

	Params::X6BlueprintLibrary_UnloadGameFeaturePlugin Parms{};

	Parms.InGameFeaturePluginName = std::move(InGameFeaturePluginName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.UnregisterClickNotification
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UClickNotification*               ClickNotification                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::UnregisterClickNotification(class UClickNotification* ClickNotification)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "UnregisterClickNotification");

	Params::X6BlueprintLibrary_UnregisterClickNotification Parms{};

	Parms.ClickNotification = ClickNotification;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.UnregisterGameViewportActivationChangedEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BlueprintLibrary::UnregisterGameViewportActivationChangedEvent(const class UObject* WorldContextObject, int64 Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "UnregisterGameViewportActivationChangedEvent");

	Params::X6BlueprintLibrary_UnregisterGameViewportActivationChangedEvent Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.UnregisterViewportFocusChangingEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int64                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BlueprintLibrary::UnregisterViewportFocusChangingEvent(int64 Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "UnregisterViewportFocusChangingEvent");

	Params::X6BlueprintLibrary_UnregisterViewportFocusChangingEvent Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.UpdateHiddenParts
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*           InMainSkMeshComp                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bIncludeMainSM                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::UpdateHiddenParts(class USkeletalMeshComponent* InMainSkMeshComp, const bool bIncludeMainSM)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "UpdateHiddenParts");

	Params::X6BlueprintLibrary_UpdateHiddenParts Parms{};

	Parms.InMainSkMeshComp = InMainSkMeshComp;
	Parms.bIncludeMainSM = bIncludeMainSM;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.UpdateTextureRenderTargetResource
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTextureRenderTarget2D*           rt                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bClearRenderTarget                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::UpdateTextureRenderTargetResource(class UTextureRenderTarget2D* rt, bool bClearRenderTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "UpdateTextureRenderTargetResource");

	Params::X6BlueprintLibrary_UpdateTextureRenderTargetResource Parms{};

	Parms.rt = rt;
	Parms.bClearRenderTarget = bClearRenderTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.UpdateTextureResource
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTextureRenderTarget2D*           rt                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::UpdateTextureResource(class UTextureRenderTarget2D* rt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "UpdateTextureResource");

	Params::X6BlueprintLibrary_UpdateTextureResource Parms{};

	Parms.rt = rt;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.X6AsyncLoadAssetClassViaSoftObjectPath
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FSoftObjectPath&           AssetClassPath                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(TSubclassOf<class UObject> Loaded)>OnLoaded                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::X6AsyncLoadAssetClassViaSoftObjectPath(class UObject* WorldContextObject, const struct FSoftObjectPath& AssetClassPath, TDelegate<void(TSubclassOf<class UObject> Loaded)> OnLoaded, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "X6AsyncLoadAssetClassViaSoftObjectPath");

	Params::X6BlueprintLibrary_X6AsyncLoadAssetClassViaSoftObjectPath Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.AssetClassPath = std::move(AssetClassPath);
	Parms.OnLoaded = OnLoaded;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.X6AsyncLoadAssetViaSoftObjectRef
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UObject>           Asset                                                  (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(class UObject* Loaded)>  OnLoaded                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::X6AsyncLoadAssetViaSoftObjectRef(class UObject* WorldContextObject, TSoftObjectPtr<class UObject> Asset, TDelegate<void(class UObject* Loaded)> OnLoaded, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "X6AsyncLoadAssetViaSoftObjectRef");

	Params::X6BlueprintLibrary_X6AsyncLoadAssetViaSoftObjectRef Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Asset = Asset;
	Parms.OnLoaded = OnLoaded;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.X6ConvertToTraceType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ECollisionChannel                       CollisionChannel                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETraceTypeQuery                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETraceTypeQuery UX6BlueprintLibrary::X6ConvertToTraceType(ECollisionChannel CollisionChannel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "X6ConvertToTraceType");

	Params::X6BlueprintLibrary_X6ConvertToTraceType Parms{};

	Parms.CollisionChannel = CollisionChannel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.X6GetArrayFromConfig
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    Session                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Path                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>*                  Result                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    bNeedReload                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UX6BlueprintLibrary::X6GetArrayFromConfig(const class FString& Session, const class FString& Key, const class FString& Path, TArray<class FString>* Result, bool bNeedReload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "X6GetArrayFromConfig");

	Params::X6BlueprintLibrary_X6GetArrayFromConfig Parms{};

	Parms.Session = std::move(Session);
	Parms.Key = std::move(Key);
	Parms.Path = std::move(Path);
	Parms.bNeedReload = bNeedReload;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = std::move(Parms.Result);

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.X6GetBoolFromConfig
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Session                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Path                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNeedReload                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BlueprintLibrary::X6GetBoolFromConfig(const class FString& Session, const class FString& Key, const class FString& Path, bool bNeedReload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "X6GetBoolFromConfig");

	Params::X6BlueprintLibrary_X6GetBoolFromConfig Parms{};

	Parms.Session = std::move(Session);
	Parms.Key = std::move(Key);
	Parms.Path = std::move(Path);
	Parms.bNeedReload = bNeedReload;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.X6GetIntFromConfig
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Session                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Path                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNeedReload                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UX6BlueprintLibrary::X6GetIntFromConfig(const class FString& Session, const class FString& Key, const class FString& Path, bool bNeedReload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "X6GetIntFromConfig");

	Params::X6BlueprintLibrary_X6GetIntFromConfig Parms{};

	Parms.Session = std::move(Session);
	Parms.Key = std::move(Key);
	Parms.Path = std::move(Path);
	Parms.bNeedReload = bNeedReload;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.X6GetRotatorFromConfig
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const class FString&                    Session                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Path                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNeedReload                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator UX6BlueprintLibrary::X6GetRotatorFromConfig(const class FString& Session, const class FString& Key, const class FString& Path, bool bNeedReload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "X6GetRotatorFromConfig");

	Params::X6BlueprintLibrary_X6GetRotatorFromConfig Parms{};

	Parms.Session = std::move(Session);
	Parms.Key = std::move(Key);
	Parms.Path = std::move(Path);
	Parms.bNeedReload = bNeedReload;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.X6GetStringFromConfig
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Session                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Path                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNeedReload                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UX6BlueprintLibrary::X6GetStringFromConfig(const class FString& Session, const class FString& Key, const class FString& Path, bool bNeedReload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "X6GetStringFromConfig");

	Params::X6BlueprintLibrary_X6GetStringFromConfig Parms{};

	Parms.Session = std::move(Session);
	Parms.Key = std::move(Key);
	Parms.Path = std::move(Path);
	Parms.bNeedReload = bNeedReload;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.X6GetVectorFromConfig
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const class FString&                    Session                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Path                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNeedReload                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UX6BlueprintLibrary::X6GetVectorFromConfig(const class FString& Session, const class FString& Key, const class FString& Path, bool bNeedReload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "X6GetVectorFromConfig");

	Params::X6BlueprintLibrary_X6GetVectorFromConfig Parms{};

	Parms.Session = std::move(Session);
	Parms.Key = std::move(Key);
	Parms.Path = std::move(Path);
	Parms.bNeedReload = bNeedReload;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.X6MakeBrushFromTexture
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          AssetObject                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Width                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Height                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSlateBrush                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FSlateBrush UX6BlueprintLibrary::X6MakeBrushFromTexture(class UObject* AssetObject, int32 Width, int32 Height)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "X6MakeBrushFromTexture");

	Params::X6BlueprintLibrary_X6MakeBrushFromTexture Parms{};

	Parms.AssetObject = AssetObject;
	Parms.Width = Width;
	Parms.Height = Height;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BlueprintLibrary.X6SetBoolToConfig
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Session                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Path                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::X6SetBoolToConfig(const class FString& Session, const class FString& Key, const class FString& Path, bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "X6SetBoolToConfig");

	Params::X6BlueprintLibrary_X6SetBoolToConfig Parms{};

	Parms.Session = std::move(Session);
	Parms.Key = std::move(Key);
	Parms.Path = std::move(Path);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.X6SetIntToConfig
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Session                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Path                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::X6SetIntToConfig(const class FString& Session, const class FString& Key, const class FString& Path, int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "X6SetIntToConfig");

	Params::X6BlueprintLibrary_X6SetIntToConfig Parms{};

	Parms.Session = std::move(Session);
	Parms.Key = std::move(Key);
	Parms.Path = std::move(Path);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.X6SetStringToConfig
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Session                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Path                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Value                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BlueprintLibrary::X6SetStringToConfig(const class FString& Session, const class FString& Key, const class FString& Path, const class FString& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "X6SetStringToConfig");

	Params::X6BlueprintLibrary_X6SetStringToConfig Parms{};

	Parms.Session = std::move(Session);
	Parms.Key = std::move(Key);
	Parms.Path = std::move(Path);
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BlueprintLibrary.X6SpawnActor
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                           SpawnClass                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   SpawnPosition                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  SpawnRotation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bAddToSoloLevel                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UX6BlueprintLibrary::X6SpawnActor(class UObject* WorldContextObject, class UClass* SpawnClass, const struct FVector& SpawnPosition, const struct FRotator& SpawnRotation, bool bAddToSoloLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BlueprintLibrary", "X6SpawnActor");

	Params::X6BlueprintLibrary_X6SpawnActor Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SpawnClass = SpawnClass;
	Parms.SpawnPosition = std::move(SpawnPosition);
	Parms.SpawnRotation = std::move(SpawnRotation);
	Parms.bAddToSoloLevel = bAddToSoloLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CombatCameraSynchronizerBase.EnableCombatSynchronize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CombatCameraSynchronizerBase::EnableCombatSynchronize(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CombatCameraSynchronizerBase", "EnableCombatSynchronize");

	Params::X6CombatCameraSynchronizerBase_EnableCombatSynchronize Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CombatCameraSynchronizerBase.SetCombatSyncSettingValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CombatCameraSynchronizerBase::SetCombatSyncSettingValue(bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CombatCameraSynchronizerBase", "SetCombatSyncSettingValue");

	Params::X6CombatCameraSynchronizerBase_SetCombatSyncSettingValue Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6PlayerControllerBase.SetTouchInputEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Enable                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6PlayerControllerBase::SetTouchInputEnable(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerControllerBase", "SetTouchInputEnable");

	Params::X6PlayerControllerBase_SetTouchInputEnable Parms{};

	Parms.Enable = Enable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6NikkiPlayerController.SetControlPawn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APawn*                            InPawn                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6NikkiPlayerController::SetControlPawn(class APawn* InPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NikkiPlayerController", "SetControlPawn");

	Params::X6NikkiPlayerController_SetControlPawn Parms{};

	Parms.InPawn = InPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BossCameraSynchronizer.BlueprintGetYawSyncTargetRotation
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator UX6BossCameraSynchronizer::BlueprintGetYawSyncTargetRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BossCameraSynchronizer", "BlueprintGetYawSyncTargetRotation");

	Params::X6BossCameraSynchronizer_BlueprintGetYawSyncTargetRotation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function X6Game.X6BossCameraSynchronizer.ClearRotateTargetBoss
// (Final, Native, Public, BlueprintCallable)

void UX6BossCameraSynchronizer::ClearRotateTargetBoss()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BossCameraSynchronizer", "ClearRotateTargetBoss");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BossCameraSynchronizer.SetRotateTargetBoss
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           BossCharacter                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BossCameraSynchronizer::SetRotateTargetBoss(class AActor* BossCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BossCameraSynchronizer", "SetRotateTargetBoss");

	Params::X6BossCameraSynchronizer_SetRotateTargetBoss Parms{};

	Parms.BossCharacter = BossCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BTDecorator_BlueprintBase.K2_OnInstanceDestroyed
// (Event, Protected, BlueprintEvent)

void UX6BTDecorator_BlueprintBase::K2_OnInstanceDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BTDecorator_BlueprintBase", "K2_OnInstanceDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function X6Game.X6NigaraBlueprintLibrary.GetNiagaraUserBoolParam
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UNiagaraSystem*                   InNiagaraSystem                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InUserParamName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6NigaraBlueprintLibrary::GetNiagaraUserBoolParam(class UNiagaraSystem* InNiagaraSystem, class FName InUserParamName, bool* OutValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6NigaraBlueprintLibrary", "GetNiagaraUserBoolParam");

	Params::X6NigaraBlueprintLibrary_GetNiagaraUserBoolParam Parms{};

	Parms.InNiagaraSystem = InNiagaraSystem;
	Parms.InUserParamName = InUserParamName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutValue != nullptr)
		*OutValue = Parms.OutValue;

	return Parms.ReturnValue;
}


// Function X6Game.X6NigaraBlueprintLibrary.GetNiagaraUserFloatParam
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UNiagaraSystem*                   InNiagaraSystem                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InUserParamName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  OutValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6NigaraBlueprintLibrary::GetNiagaraUserFloatParam(class UNiagaraSystem* InNiagaraSystem, class FName InUserParamName, float* OutValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6NigaraBlueprintLibrary", "GetNiagaraUserFloatParam");

	Params::X6NigaraBlueprintLibrary_GetNiagaraUserFloatParam Parms{};

	Parms.InNiagaraSystem = InNiagaraSystem;
	Parms.InUserParamName = InUserParamName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutValue != nullptr)
		*OutValue = Parms.OutValue;

	return Parms.ReturnValue;
}


// Function X6Game.X6NigaraBlueprintLibrary.GetNiagaraUserInt32Param
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UNiagaraSystem*                   InNiagaraSystem                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InUserParamName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6NigaraBlueprintLibrary::GetNiagaraUserInt32Param(class UNiagaraSystem* InNiagaraSystem, class FName InUserParamName, int32* OutValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6NigaraBlueprintLibrary", "GetNiagaraUserInt32Param");

	Params::X6NigaraBlueprintLibrary_GetNiagaraUserInt32Param Parms{};

	Parms.InNiagaraSystem = InNiagaraSystem;
	Parms.InUserParamName = InUserParamName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutValue != nullptr)
		*OutValue = Parms.OutValue;

	return Parms.ReturnValue;
}


// Function X6Game.X6NigaraBlueprintLibrary.GetNiagaraUserLinearColorParam
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UNiagaraSystem*                   InNiagaraSystem                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InUserParamName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor*                    OutValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6NigaraBlueprintLibrary::GetNiagaraUserLinearColorParam(class UNiagaraSystem* InNiagaraSystem, class FName InUserParamName, struct FLinearColor* OutValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6NigaraBlueprintLibrary", "GetNiagaraUserLinearColorParam");

	Params::X6NigaraBlueprintLibrary_GetNiagaraUserLinearColorParam Parms{};

	Parms.InNiagaraSystem = InNiagaraSystem;
	Parms.InUserParamName = InUserParamName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutValue != nullptr)
		*OutValue = std::move(Parms.OutValue);

	return Parms.ReturnValue;
}


// Function X6Game.X6NigaraBlueprintLibrary.GetNiagaraUserObjectParam
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UNiagaraSystem*                   InNiagaraSystem                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InUserParamName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject**                         OutValue                                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6NigaraBlueprintLibrary::GetNiagaraUserObjectParam(class UNiagaraSystem* InNiagaraSystem, class FName InUserParamName, class UObject** OutValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6NigaraBlueprintLibrary", "GetNiagaraUserObjectParam");

	Params::X6NigaraBlueprintLibrary_GetNiagaraUserObjectParam Parms{};

	Parms.InNiagaraSystem = InNiagaraSystem;
	Parms.InUserParamName = InUserParamName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutValue != nullptr)
		*OutValue = Parms.OutValue;

	return Parms.ReturnValue;
}


// Function X6Game.X6NigaraBlueprintLibrary.GetNiagaraUserVector2Param
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UNiagaraSystem*                   InNiagaraSystem                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InUserParamName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D*                       OutValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6NigaraBlueprintLibrary::GetNiagaraUserVector2Param(class UNiagaraSystem* InNiagaraSystem, class FName InUserParamName, struct FVector2D* OutValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6NigaraBlueprintLibrary", "GetNiagaraUserVector2Param");

	Params::X6NigaraBlueprintLibrary_GetNiagaraUserVector2Param Parms{};

	Parms.InNiagaraSystem = InNiagaraSystem;
	Parms.InUserParamName = InUserParamName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutValue != nullptr)
		*OutValue = std::move(Parms.OutValue);

	return Parms.ReturnValue;
}


// Function X6Game.X6NigaraBlueprintLibrary.GetNiagaraUserVector3Param
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UNiagaraSystem*                   InNiagaraSystem                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InUserParamName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector*                         OutValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6NigaraBlueprintLibrary::GetNiagaraUserVector3Param(class UNiagaraSystem* InNiagaraSystem, class FName InUserParamName, struct FVector* OutValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6NigaraBlueprintLibrary", "GetNiagaraUserVector3Param");

	Params::X6NigaraBlueprintLibrary_GetNiagaraUserVector3Param Parms{};

	Parms.InNiagaraSystem = InNiagaraSystem;
	Parms.InUserParamName = InUserParamName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutValue != nullptr)
		*OutValue = std::move(Parms.OutValue);

	return Parms.ReturnValue;
}


// Function X6Game.X6BTService_BlueprintBase.K2_OnInstanceDestroyed
// (Event, Protected, BlueprintEvent)

void UX6BTService_BlueprintBase::K2_OnInstanceDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BTService_BlueprintBase", "K2_OnInstanceDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function X6Game.X6BTTask_BlueprintBase.K2_OnInstanceDestroyed
// (Event, Protected, BlueprintEvent)

void UX6BTTask_BlueprintBase::K2_OnInstanceDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BTTask_BlueprintBase", "K2_OnInstanceDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function X6Game.X6BTTask_BlueprintBase.OnBlackboardKeyValueChange
// (Event, Protected, BlueprintEvent)
// Parameters:
// const class UBlackboardComponent*       Blackboard                                             (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             KeyName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BTTask_BlueprintBase::OnBlackboardKeyValueChange(const class UBlackboardComponent* Blackboard, class FName KeyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BTTask_BlueprintBase", "OnBlackboardKeyValueChange");

	Params::X6BTTask_BlueprintBase_OnBlackboardKeyValueChange Parms{};

	Parms.Blackboard = Blackboard;
	Parms.KeyName = KeyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.X6BTTask_BlueprintBase.K2_GetCustomDescription
// (Event, Protected, BlueprintEvent, Const)
// Parameters:
// const class FString&                    InDescripttion                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UX6BTTask_BlueprintBase::K2_GetCustomDescription(const class FString& InDescripttion) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BTTask_BlueprintBase", "K2_GetCustomDescription");

	Params::X6BTTask_BlueprintBase_K2_GetCustomDescription Parms{};

	Parms.InDescripttion = std::move(InDescripttion);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function X6Game.X6PlayerCameraManager.ApplyCameraModifierEffectByKey
// (Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCameraModifierSpecHandle        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FCameraModifierSpecHandle AX6PlayerCameraManager::ApplyCameraModifierEffectByKey(const class FString& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerCameraManager", "ApplyCameraModifierEffectByKey");

	Params::X6PlayerCameraManager_ApplyCameraModifierEffectByKey Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6PlayerCameraManager.ApplyRadiusBlurToPostProcessSettings
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const float                             InOffset                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             InRadius                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             InHardness                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             InSwitchDir                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPostProcessSettings*            InOutPostProcessSettings                               (Parm, OutParm, NativeAccessSpecifierPublic)
// const float                             InBlendWeight                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6PlayerCameraManager::ApplyRadiusBlurToPostProcessSettings(const float InOffset, const float InRadius, const float InHardness, const float InSwitchDir, struct FPostProcessSettings* InOutPostProcessSettings, const float InBlendWeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerCameraManager", "ApplyRadiusBlurToPostProcessSettings");

	Params::X6PlayerCameraManager_ApplyRadiusBlurToPostProcessSettings Parms{};

	Parms.InOffset = InOffset;
	Parms.InRadius = InRadius;
	Parms.InHardness = InHardness;
	Parms.InSwitchDir = InSwitchDir;
	Parms.InBlendWeight = InBlendWeight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (InOutPostProcessSettings != nullptr)
		*InOutPostProcessSettings = std::move(Parms.InOutPostProcessSettings);
}


// Function X6Game.X6PlayerCameraManager.BlendToViewTargetWithParam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECameraState                            CurrentCameraState                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           CurrentTarget                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECameraState                            NewCameraState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           NewTarget                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FViewTargetTransitionParams&TransitionParams                                       (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bOverrideTransitionParams                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6PlayerCameraManager::BlendToViewTargetWithParam(ECameraState CurrentCameraState, class AActor* CurrentTarget, ECameraState NewCameraState, class AActor* NewTarget, const struct FViewTargetTransitionParams& TransitionParams, bool bOverrideTransitionParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerCameraManager", "BlendToViewTargetWithParam");

	Params::X6PlayerCameraManager_BlendToViewTargetWithParam Parms{};

	Parms.CurrentCameraState = CurrentCameraState;
	Parms.CurrentTarget = CurrentTarget;
	Parms.NewCameraState = NewCameraState;
	Parms.NewTarget = NewTarget;
	Parms.TransitionParams = std::move(TransitionParams);
	Parms.bOverrideTransitionParams = bOverrideTransitionParams;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6PlayerCameraManager.CheckIsBlendingToOtherTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6PlayerCameraManager::CheckIsBlendingToOtherTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerCameraManager", "CheckIsBlendingToOtherTarget");

	Params::X6PlayerCameraManager_CheckIsBlendingToOtherTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6PlayerCameraManager.DEBUG_GetCameraModifierStackInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FDebugCameraModifierStackInfo>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FDebugCameraModifierStackInfo> AX6PlayerCameraManager::DEBUG_GetCameraModifierStackInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerCameraManager", "DEBUG_GetCameraModifierStackInfo");

	Params::X6PlayerCameraManager_DEBUG_GetCameraModifierStackInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6PlayerCameraManager.DEBUG_GetCameraTransformParam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FDebugCameraReviseParam          ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FDebugCameraReviseParam AX6PlayerCameraManager::DEBUG_GetCameraTransformParam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerCameraManager", "DEBUG_GetCameraTransformParam");

	Params::X6PlayerCameraManager_DEBUG_GetCameraTransformParam Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6PlayerCameraManager.FixLastViewTargetOfLevelSequence
// (Final, Native, Public, BlueprintCallable)

void AX6PlayerCameraManager::FixLastViewTargetOfLevelSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerCameraManager", "FixLastViewTargetOfLevelSequence");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6PlayerCameraManager.GetOutOfFrustumValue
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   TargetWorldLoc                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRangeMultiper                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AX6PlayerCameraManager::GetOutOfFrustumValue(const struct FVector& TargetWorldLoc, float InRangeMultiper)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerCameraManager", "GetOutOfFrustumValue");

	Params::X6PlayerCameraManager_GetOutOfFrustumValue Parms{};

	Parms.TargetWorldLoc = std::move(TargetWorldLoc);
	Parms.InRangeMultiper = InRangeMultiper;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6PlayerCameraManager.K2_ApplyCameraModifierEffectByKey
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6PlayerCameraManager::K2_ApplyCameraModifierEffectByKey(const class FString& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerCameraManager", "K2_ApplyCameraModifierEffectByKey");

	Params::X6PlayerCameraManager_K2_ApplyCameraModifierEffectByKey Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6PlayerCameraManager.K2_ChangeCameraStateTo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECameraState                            NewCameraState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           NewTarget                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6PlayerCameraManager::K2_ChangeCameraStateTo(ECameraState NewCameraState, class AActor* NewTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerCameraManager", "K2_ChangeCameraStateTo");

	Params::X6PlayerCameraManager_K2_ChangeCameraStateTo Parms{};

	Parms.NewCameraState = NewCameraState;
	Parms.NewTarget = NewTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6PlayerCameraManager.K2_OnCameraModifierEffectToSelf
// (Event, Protected, BlueprintEvent)
// Parameters:
// const struct FCameraModifierSpecHandle& ActiveHandle                                           (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AX6PlayerCameraManager::K2_OnCameraModifierEffectToSelf(const struct FCameraModifierSpecHandle& ActiveHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerCameraManager", "K2_OnCameraModifierEffectToSelf");

	Params::X6PlayerCameraManager_K2_OnCameraModifierEffectToSelf Parms{};

	Parms.ActiveHandle = std::move(ActiveHandle);

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.X6PlayerCameraManager.K2_PopAndSwitchToLastCameraState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bOverrideTransitionParams                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FViewTargetTransitionParams&TransitionParams                                       (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AX6PlayerCameraManager::K2_PopAndSwitchToLastCameraState(bool bOverrideTransitionParams, const struct FViewTargetTransitionParams& TransitionParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerCameraManager", "K2_PopAndSwitchToLastCameraState");

	Params::X6PlayerCameraManager_K2_PopAndSwitchToLastCameraState Parms{};

	Parms.bOverrideTransitionParams = bOverrideTransitionParams;
	Parms.TransitionParams = std::move(TransitionParams);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6PlayerCameraManager.K2_PushAndSwitchToCameraState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECameraState                            NewCameraState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           NewTarget                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOverrideTransitionParams                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FViewTargetTransitionParams&TransitionParams                                       (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AX6PlayerCameraManager::K2_PushAndSwitchToCameraState(ECameraState NewCameraState, class AActor* NewTarget, bool bOverrideTransitionParams, const struct FViewTargetTransitionParams& TransitionParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerCameraManager", "K2_PushAndSwitchToCameraState");

	Params::X6PlayerCameraManager_K2_PushAndSwitchToCameraState Parms{};

	Parms.NewCameraState = NewCameraState;
	Parms.NewTarget = NewTarget;
	Parms.bOverrideTransitionParams = bOverrideTransitionParams;
	Parms.TransitionParams = std::move(TransitionParams);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6PlayerCameraManager.K2_PushCameraState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECameraState                            NewCameraState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           NewTarget                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6PlayerCameraManager::K2_PushCameraState(ECameraState NewCameraState, class AActor* NewTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerCameraManager", "K2_PushCameraState");

	Params::X6PlayerCameraManager_K2_PushCameraState Parms{};

	Parms.NewCameraState = NewCameraState;
	Parms.NewTarget = NewTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6PlayerCameraManager.K2_SetViewTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           NewViewTarget                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FViewTargetTransitionParams&TransitionParams                                       (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AX6PlayerCameraManager::K2_SetViewTarget(class AActor* NewViewTarget, const struct FViewTargetTransitionParams& TransitionParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerCameraManager", "K2_SetViewTarget");

	Params::X6PlayerCameraManager_K2_SetViewTarget Parms{};

	Parms.NewViewTarget = NewViewTarget;
	Parms.TransitionParams = std::move(TransitionParams);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6PlayerCameraManager.K2_SwitchToCameraState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECameraState                            NewCameraState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           NewTarget                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6PlayerCameraManager::K2_SwitchToCameraState(ECameraState NewCameraState, class AActor* NewTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerCameraManager", "K2_SwitchToCameraState");

	Params::X6PlayerCameraManager_K2_SwitchToCameraState Parms{};

	Parms.NewCameraState = NewCameraState;
	Parms.NewTarget = NewTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6PlayerCameraManager.OnAssignViewTarget
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           NewTarget                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6PlayerCameraManager::OnAssignViewTarget(class AActor* NewTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerCameraManager", "OnAssignViewTarget");

	Params::X6PlayerCameraManager_OnAssignViewTarget Parms{};

	Parms.NewTarget = NewTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.X6PlayerCameraManager.OnSetViewTarget
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           NewViewTarget                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FViewTargetTransitionParams&TransitionParams                                       (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AX6PlayerCameraManager::OnSetViewTarget(class AActor* NewViewTarget, const struct FViewTargetTransitionParams& TransitionParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerCameraManager", "OnSetViewTarget");

	Params::X6PlayerCameraManager_OnSetViewTarget Parms{};

	Parms.NewViewTarget = NewViewTarget;
	Parms.TransitionParams = std::move(TransitionParams);

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.X6PlayerCameraManager.RemoveCameraModifierEffectByHandle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   HandleID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6PlayerCameraManager::RemoveCameraModifierEffectByHandle(int32 HandleID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerCameraManager", "RemoveCameraModifierEffectByHandle");

	Params::X6PlayerCameraManager_RemoveCameraModifierEffectByHandle Parms{};

	Parms.HandleID = HandleID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6PlayerCameraManager.RemoveCameraState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECameraState                            CameraStateToRemove                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TargetToRemove                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    BlendToTop                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOverrideTransitionParams                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FViewTargetTransitionParams&TransitionParams                                       (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AX6PlayerCameraManager::RemoveCameraState(ECameraState CameraStateToRemove, class AActor* TargetToRemove, bool BlendToTop, bool bOverrideTransitionParams, const struct FViewTargetTransitionParams& TransitionParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerCameraManager", "RemoveCameraState");

	Params::X6PlayerCameraManager_RemoveCameraState Parms{};

	Parms.CameraStateToRemove = CameraStateToRemove;
	Parms.TargetToRemove = TargetToRemove;
	Parms.BlendToTop = BlendToTop;
	Parms.bOverrideTransitionParams = bOverrideTransitionParams;
	Parms.TransitionParams = std::move(TransitionParams);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6PlayerCameraManager.ResetCameraExitConditions
// (Final, Native, Public, BlueprintCallable)

void AX6PlayerCameraManager::ResetCameraExitConditions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerCameraManager", "ResetCameraExitConditions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6PlayerCameraManager.SetKeepCameraCutRotationWhenBlendOut
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bInKeepCameraCutRotationWhenBlendOut                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6PlayerCameraManager::SetKeepCameraCutRotationWhenBlendOut(const bool bInKeepCameraCutRotationWhenBlendOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerCameraManager", "SetKeepCameraCutRotationWhenBlendOut");

	Params::X6PlayerCameraManager_SetKeepCameraCutRotationWhenBlendOut Parms{};

	Parms.bInKeepCameraCutRotationWhenBlendOut = bInKeepCameraCutRotationWhenBlendOut;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6PlayerCameraManager.SetResetCameraCutRotationWhenJumpOut
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bInResetCameraCutRotationWhenJumpCut                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6PlayerCameraManager::SetResetCameraCutRotationWhenJumpOut(const bool bInResetCameraCutRotationWhenJumpCut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerCameraManager", "SetResetCameraCutRotationWhenJumpOut");

	Params::X6PlayerCameraManager_SetResetCameraCutRotationWhenJumpOut Parms{};

	Parms.bInResetCameraCutRotationWhenJumpCut = bInResetCameraCutRotationWhenJumpCut;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6PlayerCameraManager.SetViewTargetInSequence
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           CameraActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DoCollisionTest                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EViewTargetBlendFunction                BlendFunc                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendExp                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLockOutgoing                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6PlayerCameraManager::SetViewTargetInSequence(class UObject* WorldContextObject, class AActor* CameraActor, bool DoCollisionTest, float BlendTime, EViewTargetBlendFunction BlendFunc, float BlendExp, bool bLockOutgoing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerCameraManager", "SetViewTargetInSequence");

	Params::X6PlayerCameraManager_SetViewTargetInSequence Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.CameraActor = CameraActor;
	Parms.DoCollisionTest = DoCollisionTest;
	Parms.BlendTime = BlendTime;
	Parms.BlendFunc = BlendFunc;
	Parms.BlendExp = BlendExp;
	Parms.bLockOutgoing = bLockOutgoing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6PlayerCameraManager.CheckCameraTransitionEnable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECameraState                            SourceCameraState                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECameraState                            TargetCameraState                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6PlayerCameraManager::CheckCameraTransitionEnable(ECameraState SourceCameraState, ECameraState TargetCameraState) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerCameraManager", "CheckCameraTransitionEnable");

	Params::X6PlayerCameraManager_CheckCameraTransitionEnable Parms{};

	Parms.SourceCameraState = SourceCameraState;
	Parms.TargetCameraState = TargetCameraState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6PlayerCameraManager.GetCurViewTarget
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AX6PlayerCameraManager::GetCurViewTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerCameraManager", "GetCurViewTarget");

	Params::X6PlayerCameraManager_GetCurViewTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6PlayerCameraManager.GetDesiredTargetRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator AX6PlayerCameraManager::GetDesiredTargetRotation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerCameraManager", "GetDesiredTargetRotation");

	Params::X6PlayerCameraManager_GetDesiredTargetRotation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6PlayerCameraManager.GetTransitionConfig
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const ECameraState                      SourceCameraState                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ECameraState                      TargetCameraState                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCameraTransitionConfig          ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FCameraTransitionConfig AX6PlayerCameraManager::GetTransitionConfig(const ECameraState SourceCameraState, const ECameraState TargetCameraState) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerCameraManager", "GetTransitionConfig");

	Params::X6PlayerCameraManager_GetTransitionConfig Parms{};

	Parms.SourceCameraState = SourceCameraState;
	Parms.TargetCameraState = TargetCameraState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6PlayerCameraManager.IsPossessedByLevelSequence
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const bool                              bIgnoreViewTargetDifference                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6PlayerCameraManager::IsPossessedByLevelSequence(const bool bIgnoreViewTargetDifference) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerCameraManager", "IsPossessedByLevelSequence");

	Params::X6PlayerCameraManager_IsPossessedByLevelSequence Parms{};

	Parms.bIgnoreViewTargetDifference = bIgnoreViewTargetDifference;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BTTask_DaMiaoAvoidance.OnPlayAnimationFinished
// (Final, Native, Private)
// Parameters:
// class FName                             NotifyName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BTTask_DaMiaoAvoidance::OnPlayAnimationFinished(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BTTask_DaMiaoAvoidance", "OnPlayAnimationFinished");

	Params::X6BTTask_DaMiaoAvoidance_OnPlayAnimationFinished Parms{};

	Parms.NotifyName = NotifyName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BulletActorBase.InitData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InCasterActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UX6BulletDataAsset*               InBulletDataAsset                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  InTargetComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InTargetActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6BulletActorBase::InitData(class AActor* InCasterActor, class UX6BulletDataAsset* InBulletDataAsset, class USceneComponent* InTargetComponent, class AActor* InTargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BulletActorBase", "InitData");

	Params::X6BulletActorBase_InitData Parms{};

	Parms.InCasterActor = InCasterActor;
	Parms.InBulletDataAsset = InBulletDataAsset;
	Parms.InTargetComponent = InTargetComponent;
	Parms.InTargetActor = InTargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BulletActorBase.K2_ClearTargetIfHit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           HitActor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6BulletActorBase::K2_ClearTargetIfHit(class AActor* HitActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BulletActorBase", "K2_ClearTargetIfHit");

	Params::X6BulletActorBase_K2_ClearTargetIfHit Parms{};

	Parms.HitActor = HitActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BulletActorBase.K2_DestroyModifiers
// (Final, Native, Public, BlueprintCallable)

void AX6BulletActorBase::K2_DestroyModifiers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BulletActorBase", "K2_DestroyModifiers");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BulletActorBase.K2_DoDelayDestroy
// (Event, Public, BlueprintEvent)

void AX6BulletActorBase::K2_DoDelayDestroy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BulletActorBase", "K2_DoDelayDestroy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function X6Game.X6BulletActorBase.K2_DoPendingDestroy
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// bool                                    bHitDamage                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           HitActor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   InDestroyHitImpactPoint                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6BulletActorBase::K2_DoPendingDestroy(bool bHitDamage, class AActor* HitActor, const struct FVector& InDestroyHitImpactPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BulletActorBase", "K2_DoPendingDestroy");

	Params::X6BulletActorBase_K2_DoPendingDestroy Parms{};

	Parms.bHitDamage = bHitDamage;
	Parms.HitActor = HitActor;
	Parms.InDestroyHitImpactPoint = std::move(InDestroyHitImpactPoint);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BulletActorBase.K2_OnDestroyBlocked
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// bool                                    bHitDamage                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AActor*                     HitActor                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   InDestroyHitImpactPoint                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UX6BulletSimpleBasicModifier*SourceModifier                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6BulletActorBase::K2_OnDestroyBlocked(bool bHitDamage, const class AActor* HitActor, const struct FVector& InDestroyHitImpactPoint, const class UX6BulletSimpleBasicModifier* SourceModifier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BulletActorBase", "K2_OnDestroyBlocked");

	Params::X6BulletActorBase_K2_OnDestroyBlocked Parms{};

	Parms.bHitDamage = bHitDamage;
	Parms.HitActor = HitActor;
	Parms.InDestroyHitImpactPoint = std::move(InDestroyHitImpactPoint);
	Parms.SourceModifier = SourceModifier;

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.X6BulletActorBase.K2_SetIsBlockingDestroy
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bBlock                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6BulletActorBase::K2_SetIsBlockingDestroy(bool bBlock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BulletActorBase", "K2_SetIsBlockingDestroy");

	Params::X6BulletActorBase_K2_SetIsBlockingDestroy Parms{};

	Parms.bBlock = bBlock;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BulletActorBase.OnAsyncLoadComplete
// (Final, Native, Public, BlueprintCallable)

void AX6BulletActorBase::OnAsyncLoadComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BulletActorBase", "OnAsyncLoadComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BulletActorBase.K2_GetAccumulateSeconds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AX6BulletActorBase::K2_GetAccumulateSeconds() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BulletActorBase", "K2_GetAccumulateSeconds");

	Params::X6BulletActorBase_K2_GetAccumulateSeconds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BulletActorBase.K2_GetBulletDestroyType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class AActor*                     HitActor                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bHitDamage                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EX6BulletDestroyType                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EX6BulletDestroyType AX6BulletActorBase::K2_GetBulletDestroyType(const class AActor* HitActor, bool bHitDamage) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BulletActorBase", "K2_GetBulletDestroyType");

	Params::X6BulletActorBase_K2_GetBulletDestroyType Parms{};

	Parms.HitActor = HitActor;
	Parms.bHitDamage = bHitDamage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BulletActorBase.K2_GetTargetActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AX6BulletActorBase::K2_GetTargetActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BulletActorBase", "K2_GetTargetActor");

	Params::X6BulletActorBase_K2_GetTargetActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BulletActorBase.K2_IsDestroyFromHit
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6BulletActorBase::K2_IsDestroyFromHit() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BulletActorBase", "K2_IsDestroyFromHit");

	Params::X6BulletActorBase_K2_IsDestroyFromHit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BulletActorBase.K2_IsPendingDestroy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6BulletActorBase::K2_IsPendingDestroy() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BulletActorBase", "K2_IsPendingDestroy");

	Params::X6BulletActorBase_K2_IsPendingDestroy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BulletModifier.Destroy
// (Native, Public)

void UX6BulletModifier::Destroy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BulletModifier", "Destroy");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BulletModifier.Init
// (Native, Public)
// Parameters:
// class AX6BulletActorBase*               InOwnerActor                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UX6BulletDataAsset*               InBulletDataAsset                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BulletModifier::Init(class AX6BulletActorBase* InOwnerActor, class UX6BulletDataAsset* InBulletDataAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BulletModifier", "Init");

	Params::X6BulletModifier_Init Parms{};

	Parms.InOwnerActor = InOwnerActor;
	Parms.InBulletDataAsset = InBulletDataAsset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BulletModifier.OnAsyncLoadComplete
// (Native, Public, BlueprintCallable)

void UX6BulletModifier::OnAsyncLoadComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BulletModifier", "OnAsyncLoadComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BulletModifier.SetActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Inactive                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BulletModifier::SetActive(bool Inactive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BulletModifier", "SetActive");

	Params::X6BulletModifier_SetActive Parms{};

	Parms.Inactive = Inactive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BulletModifier.Tick
// (Native, Public)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BulletModifier::Tick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BulletModifier", "Tick");

	Params::X6BulletModifier_Tick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BulletModifier.IsActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BulletModifier::IsActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BulletModifier", "IsActive");

	Params::X6BulletModifier_IsActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BulletModifier.K2_Destroy
// (Event, Public, BlueprintEvent, Const)

void UX6BulletModifier::K2_Destroy() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BulletModifier", "K2_Destroy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function X6Game.X6BulletModifier.K2_Init
// (Event, Public, BlueprintEvent, Const)

void UX6BulletModifier::K2_Init() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BulletModifier", "K2_Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function X6Game.X6BulletModifier.K2_OnAsyncLoadComplete
// (Event, Public, BlueprintEvent, Const)

void UX6BulletModifier::K2_OnAsyncLoadComplete() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BulletModifier", "K2_OnAsyncLoadComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function X6Game.X6BulletModifier.K2_Tick
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BulletModifier::K2_Tick(float DeltaSeconds) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BulletModifier", "K2_Tick");

	Params::X6BulletModifier_K2_Tick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.X6RecycableObjectInterface.OnPop
// (Native, Event, Public, BlueprintEvent)

void IX6RecycableObjectInterface::OnPop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RecycableObjectInterface", "OnPop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6RecycableObjectInterface.OnPreCreated
// (Native, Event, Public, BlueprintEvent)

void IX6RecycableObjectInterface::OnPreCreated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RecycableObjectInterface", "OnPreCreated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6RecycableObjectInterface.OnPush
// (Native, Event, Public, BlueprintEvent)

void IX6RecycableObjectInterface::OnPush()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RecycableObjectInterface", "OnPush");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6RecycableObjectInterface.RejectRecycle
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IX6RecycableObjectInterface::RejectRecycle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RecycableObjectInterface", "RejectRecycle");

	Params::X6RecycableObjectInterface_RejectRecycle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BulletMovementBasicModifier.K2_GetSpeedRateValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   AccumulateSeconds                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6BulletMovementBasicModifier::K2_GetSpeedRateValue(float AccumulateSeconds) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BulletMovementBasicModifier", "K2_GetSpeedRateValue");

	Params::X6BulletMovementBasicModifier_K2_GetSpeedRateValue Parms{};

	Parms.AccumulateSeconds = AccumulateSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BulletMovementBasicModifier.K2_TickLineMove
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BulletMovementBasicModifier::K2_TickLineMove(float DeltaSeconds) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BulletMovementBasicModifier", "K2_TickLineMove");

	Params::X6BulletMovementBasicModifier_K2_TickLineMove Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BulletCloseToFloorMovementModifier.K2_TickCloseToFloorMove
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BulletCloseToFloorMovementModifier::K2_TickCloseToFloorMove(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BulletCloseToFloorMovementModifier", "K2_TickCloseToFloorMove");

	Params::X6BulletCloseToFloorMovementModifier_K2_TickCloseToFloorMove Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BulletShapeTraceModifier.CanShapeTrace
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BulletShapeTraceModifier::CanShapeTrace()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BulletShapeTraceModifier", "CanShapeTrace");

	Params::X6BulletShapeTraceModifier_CanShapeTrace Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BulletShapeTraceModifier.K2_AddExtraIgnoreActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           IgnoreActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BulletShapeTraceModifier::K2_AddExtraIgnoreActor(class AActor* IgnoreActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BulletShapeTraceModifier", "K2_AddExtraIgnoreActor");

	Params::X6BulletShapeTraceModifier_K2_AddExtraIgnoreActor Parms{};

	Parms.IgnoreActor = IgnoreActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BulletShapeTraceModifier.K2_SetDebugInfo
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// EDrawDebugTrace                         InDebugDraw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLinearColor&              InDebugTraceColor                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLinearColor&              InDebugTraceHitColor                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BulletShapeTraceModifier::K2_SetDebugInfo(EDrawDebugTrace InDebugDraw, const struct FLinearColor& InDebugTraceColor, const struct FLinearColor& InDebugTraceHitColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BulletShapeTraceModifier", "K2_SetDebugInfo");

	Params::X6BulletShapeTraceModifier_K2_SetDebugInfo Parms{};

	Parms.InDebugDraw = InDebugDraw;
	Parms.InDebugTraceColor = std::move(InDebugTraceColor);
	Parms.InDebugTraceHitColor = std::move(InDebugTraceHitColor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BulletShapeTraceModifier.GetEndLocation
// (Native, Event, Protected, HasDefaults, BlueprintEvent, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UX6BulletShapeTraceModifier::GetEndLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BulletShapeTraceModifier", "GetEndLocation");

	Params::X6BulletShapeTraceModifier_GetEndLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BulletShapeTraceModifier.GetIgnoreActors
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// TArray<class AActor*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> UX6BulletShapeTraceModifier::GetIgnoreActors() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BulletShapeTraceModifier", "GetIgnoreActors");

	Params::X6BulletShapeTraceModifier_GetIgnoreActors Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BulletShapeTraceModifier.GetStartLocation
// (Native, Event, Protected, HasDefaults, BlueprintEvent, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UX6BulletShapeTraceModifier::GetStartLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BulletShapeTraceModifier", "GetStartLocation");

	Params::X6BulletShapeTraceModifier_GetStartLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BulletShapeTraceModifier.K2_ProcessHitResults
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent, Const)
// Parameters:
// const struct FVector&                   StartLocation                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   EndLocation                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FHitResult>&        HitResults                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UX6BulletShapeTraceModifier::K2_ProcessHitResults(const struct FVector& StartLocation, const struct FVector& EndLocation, const TArray<struct FHitResult>& HitResults) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BulletShapeTraceModifier", "K2_ProcessHitResults");

	Params::X6BulletShapeTraceModifier_K2_ProcessHitResults Parms{};

	Parms.StartLocation = std::move(StartLocation);
	Parms.EndLocation = std::move(EndLocation);
	Parms.HitResults = std::move(HitResults);

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.X6BulletShapeTraceModifier.K2_SwapTraceCorrection
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FVector&                   SwapLocation                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BulletShapeTraceModifier::K2_SwapTraceCorrection(const struct FVector& SwapLocation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BulletShapeTraceModifier", "K2_SwapTraceCorrection");

	Params::X6BulletShapeTraceModifier_K2_SwapTraceCorrection Parms{};

	Parms.SwapLocation = std::move(SwapLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BulletShapeTraceModifier.K2_TraceByObjects
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FVector&                   StartLocation                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   EndLocation                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<EObjectTypeQuery>&         ObjectTypes                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// EDrawDebugTrace                         DrawDebugType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class AActor*>&            IgnoreActors                                           (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// const struct FX6BulletShapeTraceContext&InTraceContext                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TArray<struct FHitResult>*              HitResults                                             (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BulletShapeTraceModifier::K2_TraceByObjects(const struct FVector& StartLocation, const struct FVector& EndLocation, const TArray<EObjectTypeQuery>& ObjectTypes, EDrawDebugTrace DrawDebugType, const TArray<class AActor*>& IgnoreActors, const struct FX6BulletShapeTraceContext& InTraceContext, TArray<struct FHitResult>* HitResults) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BulletShapeTraceModifier", "K2_TraceByObjects");

	Params::X6BulletShapeTraceModifier_K2_TraceByObjects Parms{};

	Parms.StartLocation = std::move(StartLocation);
	Parms.EndLocation = std::move(EndLocation);
	Parms.ObjectTypes = std::move(ObjectTypes);
	Parms.DrawDebugType = DrawDebugType;
	Parms.IgnoreActors = std::move(IgnoreActors);
	Parms.InTraceContext = std::move(InTraceContext);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (HitResults != nullptr)
		*HitResults = std::move(Parms.HitResults);

	return Parms.ReturnValue;
}


// Function X6Game.X6BulletShapeTraceModifier.SwapTraceCorrection
// (Native, Event, Protected, HasOutParams, HasDefaults, BlueprintEvent, Const)
// Parameters:
// const struct FVector&                   SwapLocation                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BulletShapeTraceModifier::SwapTraceCorrection(const struct FVector& SwapLocation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BulletShapeTraceModifier", "SwapTraceCorrection");

	Params::X6BulletShapeTraceModifier_SwapTraceCorrection Parms{};

	Parms.SwapLocation = std::move(SwapLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BulletCollisionModifier.K2_IsCollisionDestroy
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                           HitActor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                HitResult                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    bTriggerSkillReceiver                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UAbilitySystemComponent*    AbilitySystemComponent                                 (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BulletCollisionModifier::K2_IsCollisionDestroy(class AActor* HitActor, const struct FHitResult& HitResult, bool bTriggerSkillReceiver, const class UAbilitySystemComponent* AbilitySystemComponent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BulletCollisionModifier", "K2_IsCollisionDestroy");

	Params::X6BulletCollisionModifier_K2_IsCollisionDestroy Parms{};

	Parms.HitActor = HitActor;
	Parms.HitResult = std::move(HitResult);
	Parms.bTriggerSkillReceiver = bTriggerSkillReceiver;
	Parms.AbilitySystemComponent = AbilitySystemComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BulletCollisionModifier.K2_ShouldDestroyByActor
// (Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// class AActor*                           HitActor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                HitResult                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BulletCollisionModifier::K2_ShouldDestroyByActor(class AActor* HitActor, const struct FHitResult& HitResult) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BulletCollisionModifier", "K2_ShouldDestroyByActor");

	Params::X6BulletCollisionModifier_K2_ShouldDestroyByActor Parms{};

	Parms.HitActor = HitActor;
	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function X6Game.X6RadialSlider.SetAngularOffset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6RadialSlider::SetAngularOffset(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RadialSlider", "SetAngularOffset");

	Params::X6RadialSlider_SetAngularOffset Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6RadialSlider.SetCustomDefaultValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6RadialSlider::SetCustomDefaultValue(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RadialSlider", "SetCustomDefaultValue");

	Params::X6RadialSlider_SetCustomDefaultValue Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6RadialSlider.SetLocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6RadialSlider::SetLocked(bool InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RadialSlider", "SetLocked");

	Params::X6RadialSlider_SetLocked Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6RadialSlider.SetSliderBarColor
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FLinearColor&              InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6RadialSlider::SetSliderBarColor(const struct FLinearColor& InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RadialSlider", "SetSliderBarColor");

	Params::X6RadialSlider_SetSliderBarColor Parms{};

	Parms.InValue = std::move(InValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6RadialSlider.SetSliderHandleColor
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FLinearColor&              InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6RadialSlider::SetSliderHandleColor(const struct FLinearColor& InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RadialSlider", "SetSliderHandleColor");

	Params::X6RadialSlider_SetSliderHandleColor Parms{};

	Parms.InValue = std::move(InValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6RadialSlider.SetSliderHandleEndAngle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6RadialSlider::SetSliderHandleEndAngle(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RadialSlider", "SetSliderHandleEndAngle");

	Params::X6RadialSlider_SetSliderHandleEndAngle Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6RadialSlider.SetSliderHandleStartAngle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6RadialSlider::SetSliderHandleStartAngle(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RadialSlider", "SetSliderHandleStartAngle");

	Params::X6RadialSlider_SetSliderHandleStartAngle Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6RadialSlider.SetSliderProgressColor
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FLinearColor&              InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6RadialSlider::SetSliderProgressColor(const struct FLinearColor& InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RadialSlider", "SetSliderProgressColor");

	Params::X6RadialSlider_SetSliderProgressColor Parms{};

	Parms.InValue = std::move(InValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6RadialSlider.SetSliderRadius
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6RadialSlider::SetSliderRadius(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RadialSlider", "SetSliderRadius");

	Params::X6RadialSlider_SetSliderRadius Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6RadialSlider.SetSliderRange
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRuntimeFloatCurve&        InSliderRange                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UX6RadialSlider::SetSliderRange(const struct FRuntimeFloatCurve& InSliderRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RadialSlider", "SetSliderRange");

	Params::X6RadialSlider_SetSliderRange Parms{};

	Parms.InSliderRange = std::move(InSliderRange);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6RadialSlider.SetStepSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6RadialSlider::SetStepSize(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RadialSlider", "SetStepSize");

	Params::X6RadialSlider_SetStepSize Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6RadialSlider.SetValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6RadialSlider::SetValue(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RadialSlider", "SetValue");

	Params::X6RadialSlider_SetValue Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6RadialSlider.SetValueTags
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<float>&                    InValueTags                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UX6RadialSlider::SetValueTags(const TArray<float>& InValueTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RadialSlider", "SetValueTags");

	Params::X6RadialSlider_SetValueTags Parms{};

	Parms.InValueTags = std::move(InValueTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6RadialSlider.GetCustomDefaultValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6RadialSlider::GetCustomDefaultValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RadialSlider", "GetCustomDefaultValue");

	Params::X6RadialSlider_GetCustomDefaultValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6RadialSlider.GetNormalizedSliderHandlePosition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6RadialSlider::GetNormalizedSliderHandlePosition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RadialSlider", "GetNormalizedSliderHandlePosition");

	Params::X6RadialSlider_GetNormalizedSliderHandlePosition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6RadialSlider.GetValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6RadialSlider::GetValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RadialSlider", "GetValue");

	Params::X6RadialSlider_GetValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BulletEffectWindZoneModifier.K2_SetCacheCasterActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InCasterActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BulletEffectWindZoneModifier::K2_SetCacheCasterActor(class AActor* InCasterActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BulletEffectWindZoneModifier", "K2_SetCacheCasterActor");

	Params::X6BulletEffectWindZoneModifier_K2_SetCacheCasterActor Parms{};

	Parms.InCasterActor = InCasterActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BulletEffectWindZoneModifier.K2_StopWaterParticle
// (Final, Native, Public, BlueprintCallable)

void UX6BulletEffectWindZoneModifier::K2_StopWaterParticle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BulletEffectWindZoneModifier", "K2_StopWaterParticle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BulletFilterTargetingPresetModifier.K2_ExecuteTargetingRequest
// (Final, Native, Public, BlueprintCallable)

void UX6BulletFilterTargetingPresetModifier::K2_ExecuteTargetingRequest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BulletFilterTargetingPresetModifier", "K2_ExecuteTargetingRequest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BulletFilterTargetingPresetModifier.K2_ProcessHitResults
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const TArray<struct FHitResult>&        HitResults                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UX6BulletFilterTargetingPresetModifier::K2_ProcessHitResults(const TArray<struct FHitResult>& HitResults)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BulletFilterTargetingPresetModifier", "K2_ProcessHitResults");

	Params::X6BulletFilterTargetingPresetModifier_K2_ProcessHitResults Parms{};

	Parms.HitResults = std::move(HitResults);

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.X6SimpleTargetingSortTask.BP_GetScoreForTarget
// (Event, Protected, HasOutParams, BlueprintEvent, Const)
// Parameters:
// const struct FTargetingRequestHandle&   TargetingHandle                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FTargetingDefaultResultData&TargetData                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6SimpleTargetingSortTask::BP_GetScoreForTarget(const struct FTargetingRequestHandle& TargetingHandle, const struct FTargetingDefaultResultData& TargetData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6SimpleTargetingSortTask", "BP_GetScoreForTarget");

	Params::X6SimpleTargetingSortTask_BP_GetScoreForTarget Parms{};

	Parms.TargetingHandle = std::move(TargetingHandle);
	Parms.TargetData = std::move(TargetData);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function X6Game.X6RMInAirComponent.Blueprint_PostUpdateRegularMovementBehavior
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6RMInAirComponent::Blueprint_PostUpdateRegularMovementBehavior(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RMInAirComponent", "Blueprint_PostUpdateRegularMovementBehavior");

	Params::X6RMInAirComponent_Blueprint_PostUpdateRegularMovementBehavior Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.X6RMInAirComponent.Blueprint_PreUpdateRegularMovementBehavior
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6RMInAirComponent::Blueprint_PreUpdateRegularMovementBehavior(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RMInAirComponent", "Blueprint_PreUpdateRegularMovementBehavior");

	Params::X6RMInAirComponent_Blueprint_PreUpdateRegularMovementBehavior Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.X6RMInAirComponent.DeinitRegularMovementBehaviorProxy
// (Native, Event, Public, BlueprintEvent)

void UX6RMInAirComponent::DeinitRegularMovementBehaviorProxy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RMInAirComponent", "DeinitRegularMovementBehaviorProxy");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6RMInAirComponent.GetCurRMBaseLogicProcessor
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class URMBaseLogicProcessor*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URMBaseLogicProcessor* UX6RMInAirComponent::GetCurRMBaseLogicProcessor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RMInAirComponent", "GetCurRMBaseLogicProcessor");

	Params::X6RMInAirComponent_GetCurRMBaseLogicProcessor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6RMInAirComponent.InitRegularMovementBehaviorProxy
// (Native, Event, Public, BlueprintEvent)

void UX6RMInAirComponent::InitRegularMovementBehaviorProxy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RMInAirComponent", "InitRegularMovementBehaviorProxy");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6RMInAirComponent.InitRMBaseLogicProcessor
// (Native, Public, BlueprintCallable)
// Parameters:
// class URMBaseLogicProcessor*            RMBaseLogicProcessor                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6RMInAirComponent::InitRMBaseLogicProcessor(class URMBaseLogicProcessor* RMBaseLogicProcessor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RMInAirComponent", "InitRMBaseLogicProcessor");

	Params::X6RMInAirComponent_InitRMBaseLogicProcessor Parms{};

	Parms.RMBaseLogicProcessor = RMBaseLogicProcessor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6RMInAirComponent.IsValidReplicatedMovingDirection
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6RMInAirComponent::IsValidReplicatedMovingDirection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RMInAirComponent", "IsValidReplicatedMovingDirection");

	Params::X6RMInAirComponent_IsValidReplicatedMovingDirection Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6RMInAirComponent.MulticastRPC_ChangeJumpStage
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// ERegularFloatingJumpStage               NewStage                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceUpdate                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6RMInAirComponent::MulticastRPC_ChangeJumpStage(ERegularFloatingJumpStage NewStage, bool bForceUpdate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RMInAirComponent", "MulticastRPC_ChangeJumpStage");

	Params::X6RMInAirComponent_MulticastRPC_ChangeJumpStage Parms{};

	Parms.NewStage = NewStage;
	Parms.bForceUpdate = bForceUpdate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6RMInAirComponent.MulticastRPC_ForceUpdateReplicatedMovementData
// (Native, Event, Public, BlueprintEvent)

void UX6RMInAirComponent::MulticastRPC_ForceUpdateReplicatedMovementData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RMInAirComponent", "MulticastRPC_ForceUpdateReplicatedMovementData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6RMInAirComponent.OnRep_FloatingJumpStage
// (Native, Event, Public, BlueprintEvent)

void UX6RMInAirComponent::OnRep_FloatingJumpStage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RMInAirComponent", "OnRep_FloatingJumpStage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6RMInAirComponent.OnRep_MovementData_InputMovingDirection
// (Native, Event, Public, BlueprintEvent)

void UX6RMInAirComponent::OnRep_MovementData_InputMovingDirection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RMInAirComponent", "OnRep_MovementData_InputMovingDirection");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6RMInAirComponent.OnRep_MovementData_ReplicatedJumpMode
// (Native, Event, Public, BlueprintEvent)

void UX6RMInAirComponent::OnRep_MovementData_ReplicatedJumpMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RMInAirComponent", "OnRep_MovementData_ReplicatedJumpMode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6RMInAirComponent.OnRep_MovementData_TurnAroundAngle
// (Native, Event, Public, BlueprintEvent)

void UX6RMInAirComponent::OnRep_MovementData_TurnAroundAngle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RMInAirComponent", "OnRep_MovementData_TurnAroundAngle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6RMInAirComponent.ReceivePostPhysicsTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6RMInAirComponent::ReceivePostPhysicsTick(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RMInAirComponent", "ReceivePostPhysicsTick");

	Params::X6RMInAirComponent_ReceivePostPhysicsTick Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.X6RMInAirComponent.ResetInputActionProcessor
// (Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class URMInputActionProcessor_InAir>inInputActionProcessorClass                            (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6RMInAirComponent::ResetInputActionProcessor(TSubclassOf<class URMInputActionProcessor_InAir> inInputActionProcessorClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RMInAirComponent", "ResetInputActionProcessor");

	Params::X6RMInAirComponent_ResetInputActionProcessor Parms{};

	Parms.inInputActionProcessorClass = inInputActionProcessorClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6RMInAirComponent.SetPostPhysicsTickFunctionEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6RMInAirComponent::SetPostPhysicsTickFunctionEnable(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RMInAirComponent", "SetPostPhysicsTickFunctionEnable");

	Params::X6RMInAirComponent_SetPostPhysicsTickFunctionEnable Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6RMInAirComponent.UpdateDynamicMovementSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bForceUpdate                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6RMInAirComponent::UpdateDynamicMovementSettings(bool bForceUpdate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RMInAirComponent", "UpdateDynamicMovementSettings");

	Params::X6RMInAirComponent_UpdateDynamicMovementSettings Parms{};

	Parms.bForceUpdate = bForceUpdate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6RMInAirComponent.UpdateReplicatedMovementData
// (Final, Native, Private)

void UX6RMInAirComponent::UpdateReplicatedMovementData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RMInAirComponent", "UpdateReplicatedMovementData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BulletHitDamageModifier.IsHitDestroyExtraTrace
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BulletHitDamageModifier::IsHitDestroyExtraTrace() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BulletHitDamageModifier", "IsHitDestroyExtraTrace");

	Params::X6BulletHitDamageModifier_IsHitDestroyExtraTrace Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BulletWindComponent.SetCacheCasterActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InCasterActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BulletWindComponent::SetCacheCasterActor(class AActor* InCasterActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BulletWindComponent", "SetCacheCasterActor");

	Params::X6BulletWindComponent_SetCacheCasterActor Parms{};

	Parms.InCasterActor = InCasterActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BulletWindComponent.StopWaterParticle
// (Final, Native, Public, BlueprintCallable)

void UX6BulletWindComponent::StopWaterParticle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BulletWindComponent", "StopWaterParticle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BuoyancyEffectComponent.ActiveUpdateActorLocation
// (Final, Native, Public)
// Parameters:
// bool                                    bActive                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BuoyancyEffectComponent::ActiveUpdateActorLocation(bool bActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BuoyancyEffectComponent", "ActiveUpdateActorLocation");

	Params::X6BuoyancyEffectComponent_ActiveUpdateActorLocation Parms{};

	Parms.bActive = bActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BuoyancyEffectComponent.BPDoEnterWaterEffect
// (Event, Public, BlueprintEvent)

void UX6BuoyancyEffectComponent::BPDoEnterWaterEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BuoyancyEffectComponent", "BPDoEnterWaterEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function X6Game.X6BuoyancyEffectComponent.DoProgramEnterWaterEffect
// (Final, Native, Public)

void UX6BuoyancyEffectComponent::DoProgramEnterWaterEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BuoyancyEffectComponent", "DoProgramEnterWaterEffect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BuoyancyEffectComponent.GetActorBuoyancyState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EActorBuoyancyState                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EActorBuoyancyState UX6BuoyancyEffectComponent::GetActorBuoyancyState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BuoyancyEffectComponent", "GetActorBuoyancyState");

	Params::X6BuoyancyEffectComponent_GetActorBuoyancyState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BuoyancyEffectComponent.GetActorCurrentDensity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6BuoyancyEffectComponent::GetActorCurrentDensity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BuoyancyEffectComponent", "GetActorCurrentDensity");

	Params::X6BuoyancyEffectComponent_GetActorCurrentDensity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BuoyancyEffectComponent.IsActorFloatingOnWaterSurface
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6BuoyancyEffectComponent::IsActorFloatingOnWaterSurface()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BuoyancyEffectComponent", "IsActorFloatingOnWaterSurface");

	Params::X6BuoyancyEffectComponent_IsActorFloatingOnWaterSurface Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6BuoyancyEffectComponent.OnActorBeginEnterWater
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// float                                   WaterDensity                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   WaterSurfaceHeight                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   CurrentVelocity                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BuoyancyEffectComponent::OnActorBeginEnterWater(float WaterDensity, float WaterSurfaceHeight, const struct FVector& CurrentVelocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BuoyancyEffectComponent", "OnActorBeginEnterWater");

	Params::X6BuoyancyEffectComponent_OnActorBeginEnterWater Parms{};

	Parms.WaterDensity = WaterDensity;
	Parms.WaterSurfaceHeight = WaterSurfaceHeight;
	Parms.CurrentVelocity = std::move(CurrentVelocity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BuoyancyEffectComponent.OnActorLeftWater
// (Final, Native, Public, BlueprintCallable)

void UX6BuoyancyEffectComponent::OnActorLeftWater()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BuoyancyEffectComponent", "OnActorLeftWater");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BuoyancyEffectComponent.OnUpdateActorLocationFinished
// (Final, Native, Public, BlueprintCallable)

void UX6BuoyancyEffectComponent::OnUpdateActorLocationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BuoyancyEffectComponent", "OnUpdateActorLocationFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BuoyancyEffectComponent.OnWaterDensityUdpated
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   CurrentDensity                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BuoyancyEffectComponent::OnWaterDensityUdpated(float CurrentDensity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BuoyancyEffectComponent", "OnWaterDensityUdpated");

	Params::X6BuoyancyEffectComponent_OnWaterDensityUdpated Parms{};

	Parms.CurrentDensity = CurrentDensity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BuoyancyEffectComponent.OnWaterSurfaceHightUdpated
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   currentHgithInWorldCoordinate                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BuoyancyEffectComponent::OnWaterSurfaceHightUdpated(float currentHgithInWorldCoordinate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BuoyancyEffectComponent", "OnWaterSurfaceHightUdpated");

	Params::X6BuoyancyEffectComponent_OnWaterSurfaceHightUdpated Parms{};

	Parms.currentHgithInWorldCoordinate = currentHgithInWorldCoordinate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BuoyancyEffectComponent.OnWaterUpdateIceState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnterOrExitIce                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BuoyancyEffectComponent::OnWaterUpdateIceState(bool bEnterOrExitIce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BuoyancyEffectComponent", "OnWaterUpdateIceState");

	Params::X6BuoyancyEffectComponent_OnWaterUpdateIceState Parms{};

	Parms.bEnterOrExitIce = bEnterOrExitIce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BuoyancyEffectComponent.SetActorCanSimulateBuoyancy
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    CanSimulate                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BuoyancyEffectComponent::SetActorCanSimulateBuoyancy(bool CanSimulate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BuoyancyEffectComponent", "SetActorCanSimulateBuoyancy");

	Params::X6BuoyancyEffectComponent_SetActorCanSimulateBuoyancy Parms{};

	Parms.CanSimulate = CanSimulate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6BuoyancyEffectComponent.SetupWaterParameter
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AActor*                           WaterActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESimulateWaterFlowType                  WaterFlowType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USplineComponent*                 SimulateFlowSpline                                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FSimulateWaterFlowKeyPoint>*TrackKeyPoints                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UX6BuoyancyEffectComponent::SetupWaterParameter(class AActor* WaterActor, ESimulateWaterFlowType WaterFlowType, class USplineComponent* SimulateFlowSpline, TArray<struct FSimulateWaterFlowKeyPoint>* TrackKeyPoints)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BuoyancyEffectComponent", "SetupWaterParameter");

	Params::X6BuoyancyEffectComponent_SetupWaterParameter Parms{};

	Parms.WaterActor = WaterActor;
	Parms.WaterFlowType = WaterFlowType;
	Parms.SimulateFlowSpline = SimulateFlowSpline;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (TrackKeyPoints != nullptr)
		*TrackKeyPoints = std::move(Parms.TrackKeyPoints);
}


// Function X6Game.X6BuoyancyEffectComponent.UpdateActorDensity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewDensity                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6BuoyancyEffectComponent::UpdateActorDensity(float NewDensity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6BuoyancyEffectComponent", "UpdateActorDensity");

	Params::X6BuoyancyEffectComponent_UpdateActorDensity Parms{};

	Parms.NewDensity = NewDensity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6SequencerBlueprintLibrary.AddBindingWithNamesAndActors
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class ALevelSequenceActor*              InLSActor                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<class FString, class AActor*>*     InActorsAndNames                                       (Parm, OutParm, NativeAccessSpecifierPublic)

void UX6SequencerBlueprintLibrary::AddBindingWithNamesAndActors(class ALevelSequenceActor* InLSActor, TMap<class FString, class AActor*>* InActorsAndNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6SequencerBlueprintLibrary", "AddBindingWithNamesAndActors");

	Params::X6SequencerBlueprintLibrary_AddBindingWithNamesAndActors Parms{};

	Parms.InLSActor = InLSActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (InActorsAndNames != nullptr)
		*InActorsAndNames = std::move(Parms.InActorsAndNames);
}


// Function X6Game.X6SequencerBlueprintLibrary.CinematicActorLookAtActor
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ELookAtEventType                        InEventType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InPlayerActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InTargetActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLookAtRequestParams&      Params_0                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UX6SequencerBlueprintLibrary::CinematicActorLookAtActor(ELookAtEventType InEventType, class AActor* InPlayerActor, class AActor* InTargetActor, const struct FLookAtRequestParams& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6SequencerBlueprintLibrary", "CinematicActorLookAtActor");

	Params::X6SequencerBlueprintLibrary_CinematicActorLookAtActor Parms{};

	Parms.InEventType = InEventType;
	Parms.InPlayerActor = InPlayerActor;
	Parms.InTargetActor = InTargetActor;
	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6SequencerBlueprintLibrary.CinematicActorLookAtLocation
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// ELookAtEventType                        InEventType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InPlayerActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   InTargetLocation                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLookAtRequestParams&      Params_0                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UX6SequencerBlueprintLibrary::CinematicActorLookAtLocation(ELookAtEventType InEventType, class AActor* InPlayerActor, const struct FVector& InTargetLocation, const struct FLookAtRequestParams& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6SequencerBlueprintLibrary", "CinematicActorLookAtLocation");

	Params::X6SequencerBlueprintLibrary_CinematicActorLookAtLocation Parms{};

	Parms.InEventType = InEventType;
	Parms.InPlayerActor = InPlayerActor;
	Parms.InTargetLocation = std::move(InTargetLocation);
	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6SequencerBlueprintLibrary.GetAllSections
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UMovieSceneSequence*        MovieSceneSequence                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UMovieSceneSection*>*      OutSections                                            (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UX6SequencerBlueprintLibrary::GetAllSections(const class UMovieSceneSequence* MovieSceneSequence, TArray<class UMovieSceneSection*>* OutSections)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6SequencerBlueprintLibrary", "GetAllSections");

	Params::X6SequencerBlueprintLibrary_GetAllSections Parms{};

	Parms.MovieSceneSequence = MovieSceneSequence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSections != nullptr)
		*OutSections = std::move(Parms.OutSections);
}


// Function X6Game.X6SequencerBlueprintLibrary.GetAllTracks
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UMovieSceneSequence*        MovieSceneSequence                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UMovieSceneTrack*>*        OutTracks                                              (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UX6SequencerBlueprintLibrary::GetAllTracks(const class UMovieSceneSequence* MovieSceneSequence, TArray<class UMovieSceneTrack*>* OutTracks)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6SequencerBlueprintLibrary", "GetAllTracks");

	Params::X6SequencerBlueprintLibrary_GetAllTracks Parms{};

	Parms.MovieSceneSequence = MovieSceneSequence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTracks != nullptr)
		*OutTracks = std::move(Parms.OutTracks);
}


// Function X6Game.X6SequencerBlueprintLibrary.GetCastNamesInLevelSequenceByTag
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class ALevelSequenceActor*        InLSActor                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InTag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>*                  OutNames                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UX6SequencerBlueprintLibrary::GetCastNamesInLevelSequenceByTag(const class ALevelSequenceActor* InLSActor, class FName InTag, TArray<class FString>* OutNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6SequencerBlueprintLibrary", "GetCastNamesInLevelSequenceByTag");

	Params::X6SequencerBlueprintLibrary_GetCastNamesInLevelSequenceByTag Parms{};

	Parms.InLSActor = InLSActor;
	Parms.InTag = InTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutNames != nullptr)
		*OutNames = std::move(Parms.OutNames);
}


// Function X6Game.X6SequencerBlueprintLibrary.GetMasterTrackContents
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class ULevelSequence*             LevelSequence                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UMovieSceneTrack>     TrackClass                                             (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FX6TrackContent>          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FX6TrackContent> UX6SequencerBlueprintLibrary::GetMasterTrackContents(const class ULevelSequence* LevelSequence, TSubclassOf<class UMovieSceneTrack> TrackClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6SequencerBlueprintLibrary", "GetMasterTrackContents");

	Params::X6SequencerBlueprintLibrary_GetMasterTrackContents Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.TrackClass = TrackClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6SequencerBlueprintLibrary.HasTrack
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class ALevelSequenceActor*        LevelSequenceActor                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UMovieSceneTrack>     TrackClass                                             (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6SequencerBlueprintLibrary::HasTrack(const class ALevelSequenceActor* LevelSequenceActor, class AActor* Actor, TSubclassOf<class UMovieSceneTrack> TrackClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6SequencerBlueprintLibrary", "HasTrack");

	Params::X6SequencerBlueprintLibrary_HasTrack Parms{};

	Parms.LevelSequenceActor = LevelSequenceActor;
	Parms.Actor = Actor;
	Parms.TrackClass = TrackClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6SequencerBlueprintLibrary.PreLoadLevelSequence
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UX6SequencerBlueprintLibrary::PreLoadLevelSequence(class ULevelSequence* LevelSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6SequencerBlueprintLibrary", "PreLoadLevelSequence");

	Params::X6SequencerBlueprintLibrary_PreLoadLevelSequence Parms{};

	Parms.LevelSequence = LevelSequence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6SequencerBlueprintLibrary.RemoveCinematicActorLookAt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ELookAtEventType                        InEventType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InPlayerActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           LookAtTargetActor                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6SequencerBlueprintLibrary::RemoveCinematicActorLookAt(ELookAtEventType InEventType, class AActor* InPlayerActor, class AActor* LookAtTargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6SequencerBlueprintLibrary", "RemoveCinematicActorLookAt");

	Params::X6SequencerBlueprintLibrary_RemoveCinematicActorLookAt Parms{};

	Parms.InEventType = InEventType;
	Parms.InPlayerActor = InPlayerActor;
	Parms.LookAtTargetActor = LookAtTargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6SequencerBlueprintLibrary.SetPreAnimatedPreviewCameraRotation
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FRotator&                  InRotation                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UX6SequencerBlueprintLibrary::SetPreAnimatedPreviewCameraRotation(const struct FRotator& InRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6SequencerBlueprintLibrary", "SetPreAnimatedPreviewCameraRotation");

	Params::X6SequencerBlueprintLibrary_SetPreAnimatedPreviewCameraRotation Parms{};

	Parms.InRotation = std::move(InRotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6SequencerBlueprintLibrary.SetSectionIsActiveByNetPolicy
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UMovieSceneSequence*              MovieSceneSequence                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovieSceneNetPolicy                    MovieSceneNetPolicy                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6SequencerBlueprintLibrary::SetSectionIsActiveByNetPolicy(class UMovieSceneSequence* MovieSceneSequence, EMovieSceneNetPolicy MovieSceneNetPolicy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6SequencerBlueprintLibrary", "SetSectionIsActiveByNetPolicy");

	Params::X6SequencerBlueprintLibrary_SetSectionIsActiveByNetPolicy Parms{};

	Parms.MovieSceneSequence = MovieSceneSequence;
	Parms.MovieSceneNetPolicy = MovieSceneNetPolicy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CameraBlueprintLibrary.AddActorCustomDissolveSocket
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InSocketName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSpecifyDissolveCondition                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FDissolveCondition&        InDissolveCondition                                    (Parm, AdvancedDisplay, NativeAccessSpecifierPublic)

void UX6CameraBlueprintLibrary::AddActorCustomDissolveSocket(class AActor* InActor, class FName InSocketName, bool bSpecifyDissolveCondition, const struct FDissolveCondition& InDissolveCondition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "AddActorCustomDissolveSocket");

	Params::X6CameraBlueprintLibrary_AddActorCustomDissolveSocket Parms{};

	Parms.InActor = InActor;
	Parms.InSocketName = InSocketName;
	Parms.bSpecifyDissolveCondition = bSpecifyDissolveCondition;
	Parms.InDissolveCondition = std::move(InDissolveCondition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CameraBlueprintLibrary.ApplyCameraModifierByKey
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ConfigKey                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UX6CameraBlueprintLibrary::ApplyCameraModifierByKey(const class UObject* WorldContextObject, const class FString& ConfigKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "ApplyCameraModifierByKey");

	Params::X6CameraBlueprintLibrary_ApplyCameraModifierByKey Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ConfigKey = std::move(ConfigKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CameraBlueprintLibrary.BlendBackToFollow
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FViewTargetTransitionParams&CameraBlendParams                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UX6CameraBlueprintLibrary::BlendBackToFollow(const class UObject* WorldContextObject, const struct FViewTargetTransitionParams& CameraBlendParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "BlendBackToFollow");

	Params::X6CameraBlueprintLibrary_BlendBackToFollow Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.CameraBlendParams = std::move(CameraBlendParams);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CameraBlueprintLibrary.BlendBackToViewTarget
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FViewTargetTransitionParams&TransitionParams                                       (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UX6CameraBlueprintLibrary::BlendBackToViewTarget(const class UObject* WorldContextObject, const struct FViewTargetTransitionParams& TransitionParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "BlendBackToViewTarget");

	Params::X6CameraBlueprintLibrary_BlendBackToViewTarget Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.TransitionParams = std::move(TransitionParams);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CameraBlueprintLibrary.CameraComponentFromActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class AActor*                     InActor                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCameraComponent*                 ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCameraComponent* UX6CameraBlueprintLibrary::CameraComponentFromActor(const class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "CameraComponentFromActor");

	Params::X6CameraBlueprintLibrary_CameraComponentFromActor Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CameraBlueprintLibrary.CastVOscillatorToOffsetZero
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FVOscillator&              InVOscillator                                          (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FVOscillator                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FVOscillator UX6CameraBlueprintLibrary::CastVOscillatorToOffsetZero(const struct FVOscillator& InVOscillator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "CastVOscillatorToOffsetZero");

	Params::X6CameraBlueprintLibrary_CastVOscillatorToOffsetZero Parms{};

	Parms.InVOscillator = std::move(InVOscillator);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CameraBlueprintLibrary.ChangeCameraState
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LerpDataSpeed                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   SocketOffset                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   TargetOffset                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Armlength                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  Rotation                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UX6CameraBlueprintLibrary::ChangeCameraState(const class UObject* WorldContextObject, float LerpDataSpeed, const struct FVector& SocketOffset, const struct FVector& TargetOffset, float Armlength, const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "ChangeCameraState");

	Params::X6CameraBlueprintLibrary_ChangeCameraState Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LerpDataSpeed = LerpDataSpeed;
	Parms.SocketOffset = std::move(SocketOffset);
	Parms.TargetOffset = std::move(TargetOffset);
	Parms.Armlength = Armlength;
	Parms.Rotation = std::move(Rotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CameraBlueprintLibrary.CheckActorIsInScreen
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6CameraBlueprintLibrary::CheckActorIsInScreen(class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "CheckActorIsInScreen");

	Params::X6CameraBlueprintLibrary_CheckActorIsInScreen Parms{};

	Parms.TargetActor = TargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CameraBlueprintLibrary.CheckAndMoveCurrentCameraToLocation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          CurrentWorld                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SettingPitch                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SettingYaw                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SettingArmLength                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AngleTolerance                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ArmLengthTolerance                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InterpSpeed                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6CameraBlueprintLibrary::CheckAndMoveCurrentCameraToLocation(class UObject* CurrentWorld, float SettingPitch, float SettingYaw, float SettingArmLength, float AngleTolerance, float ArmLengthTolerance, float InterpSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "CheckAndMoveCurrentCameraToLocation");

	Params::X6CameraBlueprintLibrary_CheckAndMoveCurrentCameraToLocation Parms{};

	Parms.CurrentWorld = CurrentWorld;
	Parms.SettingPitch = SettingPitch;
	Parms.SettingYaw = SettingYaw;
	Parms.SettingArmLength = SettingArmLength;
	Parms.AngleTolerance = AngleTolerance;
	Parms.ArmLengthTolerance = ArmLengthTolerance;
	Parms.InterpSpeed = InterpSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CameraBlueprintLibrary.CheckBoundingBoxAndCenterIsInScreen
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   BoundingBoxCenter                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   BoundingBoxExtend                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6CameraBlueprintLibrary::CheckBoundingBoxAndCenterIsInScreen(class UObject* WorldContextObject, const struct FVector& BoundingBoxCenter, const struct FVector& BoundingBoxExtend)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "CheckBoundingBoxAndCenterIsInScreen");

	Params::X6CameraBlueprintLibrary_CheckBoundingBoxAndCenterIsInScreen Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.BoundingBoxCenter = std::move(BoundingBoxCenter);
	Parms.BoundingBoxExtend = std::move(BoundingBoxExtend);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CameraBlueprintLibrary.CheckBoundingBoxIsInScreen
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   BoundingBoxCenter                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   BoundingBoxExtend                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6CameraBlueprintLibrary::CheckBoundingBoxIsInScreen(class UObject* WorldContextObject, const struct FVector& BoundingBoxCenter, const struct FVector& BoundingBoxExtend)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "CheckBoundingBoxIsInScreen");

	Params::X6CameraBlueprintLibrary_CheckBoundingBoxIsInScreen Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.BoundingBoxCenter = std::move(BoundingBoxCenter);
	Parms.BoundingBoxExtend = std::move(BoundingBoxExtend);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CameraBlueprintLibrary.CheckCameraPossessedByLevelSequence
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6CameraBlueprintLibrary::CheckCameraPossessedByLevelSequence(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "CheckCameraPossessedByLevelSequence");

	Params::X6CameraBlueprintLibrary_CheckCameraPossessedByLevelSequence Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CameraBlueprintLibrary.DoesActorImplementCameraMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6CameraBlueprintLibrary::DoesActorImplementCameraMode(class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "DoesActorImplementCameraMode");

	Params::X6CameraBlueprintLibrary_DoesActorImplementCameraMode Parms{};

	Parms.TargetActor = TargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CameraBlueprintLibrary.FindMostOpenSpaceRotation
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTransform&                RelativeTrans                                          (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator*                        OutDeltaRot                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6CameraBlueprintLibrary::FindMostOpenSpaceRotation(const class UObject* WorldContextObject, const struct FTransform& RelativeTrans, struct FRotator* OutDeltaRot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "FindMostOpenSpaceRotation");

	Params::X6CameraBlueprintLibrary_FindMostOpenSpaceRotation Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.RelativeTrans = std::move(RelativeTrans);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDeltaRot != nullptr)
		*OutDeltaRot = std::move(Parms.OutDeltaRot);

	return Parms.ReturnValue;
}


// Function X6Game.X6CameraBlueprintLibrary.FindOrAddModifierByClass
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TSubclassOf<class UCameraModifier>ModifierClass                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCameraModifier*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCameraModifier* UX6CameraBlueprintLibrary::FindOrAddModifierByClass(const class UObject* WorldContextObject, const TSubclassOf<class UCameraModifier> ModifierClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "FindOrAddModifierByClass");

	Params::X6CameraBlueprintLibrary_FindOrAddModifierByClass Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ModifierClass = ModifierClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CameraBlueprintLibrary.ForceUpdateCamera
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          TargetObject                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CameraBlueprintLibrary::ForceUpdateCamera(class UObject* TargetObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "ForceUpdateCamera");

	Params::X6CameraBlueprintLibrary_ForceUpdateCamera Parms{};

	Parms.TargetObject = TargetObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CameraBlueprintLibrary.GetActorScreenLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*                Controller                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UX6CameraBlueprintLibrary::GetActorScreenLocation(class AActor* TargetActor, class APlayerController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "GetActorScreenLocation");

	Params::X6CameraBlueprintLibrary_GetActorScreenLocation Parms{};

	Parms.TargetActor = TargetActor;
	Parms.Controller = Controller;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CameraBlueprintLibrary.GetAdvancedCameraComponent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAdvancedCamera*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAdvancedCamera* UX6CameraBlueprintLibrary::GetAdvancedCameraComponent(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "GetAdvancedCameraComponent");

	Params::X6CameraBlueprintLibrary_GetAdvancedCameraComponent Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CameraBlueprintLibrary.GetGameScreenSize
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UX6CameraBlueprintLibrary::GetGameScreenSize(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "GetGameScreenSize");

	Params::X6CameraBlueprintLibrary_GetGameScreenSize Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CameraBlueprintLibrary.GetRotateTimeWithAngleSpeed
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// float                                   AngleSpeed                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  StartRotation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// const struct FRotator&                  EndRotation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6CameraBlueprintLibrary::GetRotateTimeWithAngleSpeed(float AngleSpeed, const struct FRotator& StartRotation, const struct FRotator& EndRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "GetRotateTimeWithAngleSpeed");

	Params::X6CameraBlueprintLibrary_GetRotateTimeWithAngleSpeed Parms{};

	Parms.AngleSpeed = AngleSpeed;
	Parms.StartRotation = std::move(StartRotation);
	Parms.EndRotation = std::move(EndRotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CameraBlueprintLibrary.GetX6PlayerCameraManager
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AX6PlayerCameraManager*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AX6PlayerCameraManager* UX6CameraBlueprintLibrary::GetX6PlayerCameraManager(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "GetX6PlayerCameraManager");

	Params::X6CameraBlueprintLibrary_GetX6PlayerCameraManager Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CameraBlueprintLibrary.IsActorLevelSequenceCameraCut
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class AActor*                     InActor                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6CameraBlueprintLibrary::IsActorLevelSequenceCameraCut(const class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "IsActorLevelSequenceCameraCut");

	Params::X6CameraBlueprintLibrary_IsActorLevelSequenceCameraCut Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CameraBlueprintLibrary.PopAndSwitchToLastCameraState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOverrideTransitionParams                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FViewTargetTransitionParams&TransitionParams                                       (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UX6CameraBlueprintLibrary::PopAndSwitchToLastCameraState(class UObject* WorldContextObject, bool bOverrideTransitionParams, const struct FViewTargetTransitionParams& TransitionParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "PopAndSwitchToLastCameraState");

	Params::X6CameraBlueprintLibrary_PopAndSwitchToLastCameraState Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.bOverrideTransitionParams = bOverrideTransitionParams;
	Parms.TransitionParams = std::move(TransitionParams);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CameraBlueprintLibrary.PushAndSwitchToCameraState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECameraState                            NewCameraState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           NewTarget                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOverrideTransitionParams                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FViewTargetTransitionParams&TransitionParams                                       (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UX6CameraBlueprintLibrary::PushAndSwitchToCameraState(class UObject* WorldContextObject, ECameraState NewCameraState, class AActor* NewTarget, bool bOverrideTransitionParams, const struct FViewTargetTransitionParams& TransitionParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "PushAndSwitchToCameraState");

	Params::X6CameraBlueprintLibrary_PushAndSwitchToCameraState Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NewCameraState = NewCameraState;
	Parms.NewTarget = NewTarget;
	Parms.bOverrideTransitionParams = bOverrideTransitionParams;
	Parms.TransitionParams = std::move(TransitionParams);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CameraBlueprintLibrary.PushCustomRotationRangeConfigForActor
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  OriginRotation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   MinYaw                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxYaw                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MinPitch                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxPitch                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOverrideTransitionParams                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FViewTargetTransitionParams&TransitionParams                                       (Parm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UX6CameraBlueprintLibrary::PushCustomRotationRangeConfigForActor(class AActor* InActor, const struct FRotator& OriginRotation, float MinYaw, float MaxYaw, float MinPitch, float MaxPitch, bool bOverrideTransitionParams, const struct FViewTargetTransitionParams& TransitionParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "PushCustomRotationRangeConfigForActor");

	Params::X6CameraBlueprintLibrary_PushCustomRotationRangeConfigForActor Parms{};

	Parms.InActor = InActor;
	Parms.OriginRotation = std::move(OriginRotation);
	Parms.MinYaw = MinYaw;
	Parms.MaxYaw = MaxYaw;
	Parms.MinPitch = MinPitch;
	Parms.MaxPitch = MaxPitch;
	Parms.bOverrideTransitionParams = bOverrideTransitionParams;
	Parms.TransitionParams = std::move(TransitionParams);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CameraBlueprintLibrary.RecalculateCameraTransformIgnoreLag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           ViewTarget                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CameraBlueprintLibrary::RecalculateCameraTransformIgnoreLag(class AActor* ViewTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "RecalculateCameraTransformIgnoreLag");

	Params::X6CameraBlueprintLibrary_RecalculateCameraTransformIgnoreLag Parms{};

	Parms.ViewTarget = ViewTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CameraBlueprintLibrary.RemoveActorCustomDissolveSocket
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InSocketName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CameraBlueprintLibrary::RemoveActorCustomDissolveSocket(class AActor* InActor, class FName InSocketName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "RemoveActorCustomDissolveSocket");

	Params::X6CameraBlueprintLibrary_RemoveActorCustomDissolveSocket Parms{};

	Parms.InActor = InActor;
	Parms.InSocketName = InSocketName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CameraBlueprintLibrary.RemoveCameraConfigForActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   IndexToRemove                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CameraBlueprintLibrary::RemoveCameraConfigForActor(class AActor* InActor, int32 IndexToRemove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "RemoveCameraConfigForActor");

	Params::X6CameraBlueprintLibrary_RemoveCameraConfigForActor Parms{};

	Parms.InActor = InActor;
	Parms.IndexToRemove = IndexToRemove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CameraBlueprintLibrary.RemoveCameraModifierEffectByHandle
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CameraBlueprintLibrary::RemoveCameraModifierEffectByHandle(const class UObject* WorldContextObject, int32 Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "RemoveCameraModifierEffectByHandle");

	Params::X6CameraBlueprintLibrary_RemoveCameraModifierEffectByHandle Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CameraBlueprintLibrary.RemoveCameraState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ECameraState                      CameraStateToRemove                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TargetToRemove                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bBlendToTop                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOverrideTransitionParams                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FViewTargetTransitionParams&TransitionParams                                       (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UX6CameraBlueprintLibrary::RemoveCameraState(class UObject* WorldContextObject, const ECameraState CameraStateToRemove, class AActor* TargetToRemove, bool bBlendToTop, bool bOverrideTransitionParams, const struct FViewTargetTransitionParams& TransitionParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "RemoveCameraState");

	Params::X6CameraBlueprintLibrary_RemoveCameraState Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.CameraStateToRemove = CameraStateToRemove;
	Parms.TargetToRemove = TargetToRemove;
	Parms.bBlendToTop = bBlendToTop;
	Parms.bOverrideTransitionParams = bOverrideTransitionParams;
	Parms.TransitionParams = std::move(TransitionParams);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CameraBlueprintLibrary.ResetAdvancedCameraRotation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CameraBlueprintLibrary::ResetAdvancedCameraRotation(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "ResetAdvancedCameraRotation");

	Params::X6CameraBlueprintLibrary_ResetAdvancedCameraRotation Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CameraBlueprintLibrary.ResetArmLengthAndRotation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          CurrentWorld                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CameraBlueprintLibrary::ResetArmLengthAndRotation(class UObject* CurrentWorld)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "ResetArmLengthAndRotation");

	Params::X6CameraBlueprintLibrary_ResetArmLengthAndRotation Parms{};

	Parms.CurrentWorld = CurrentWorld;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CameraBlueprintLibrary.ResetFollowCamera
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CameraBlueprintLibrary::ResetFollowCamera(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "ResetFollowCamera");

	Params::X6CameraBlueprintLibrary_ResetFollowCamera Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CameraBlueprintLibrary.ResetToDefaultRelativeRotation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           ViewTarget                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bApplyImmediate                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CameraBlueprintLibrary::ResetToDefaultRelativeRotation(class AActor* ViewTarget, bool bApplyImmediate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "ResetToDefaultRelativeRotation");

	Params::X6CameraBlueprintLibrary_ResetToDefaultRelativeRotation Parms{};

	Parms.ViewTarget = ViewTarget;
	Parms.bApplyImmediate = bApplyImmediate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CameraBlueprintLibrary.RotatorClamp
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FRotator&                  Rotator                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator UX6CameraBlueprintLibrary::RotatorClamp(const struct FRotator& Rotator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "RotatorClamp");

	Params::X6CameraBlueprintLibrary_RotatorClamp Parms{};

	Parms.Rotator = std::move(Rotator);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CameraBlueprintLibrary.SetActorCameraDesireRotation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const class AActor*                     InActor                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  NewDesireRotation                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// const bool                              Teleport                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CameraBlueprintLibrary::SetActorCameraDesireRotation(const class AActor* InActor, const struct FRotator& NewDesireRotation, const bool Teleport)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "SetActorCameraDesireRotation");

	Params::X6CameraBlueprintLibrary_SetActorCameraDesireRotation Parms{};

	Parms.InActor = InActor;
	Parms.NewDesireRotation = std::move(NewDesireRotation);
	Parms.Teleport = Teleport;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CameraBlueprintLibrary.SetActorCameraRotationLookAtTrackActor
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const class AActor*                     InActor                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AActor*                     ActorToTrack                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   RelativeOffset                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bApplyImmediately                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CameraBlueprintLibrary::SetActorCameraRotationLookAtTrackActor(const class AActor* InActor, const class AActor* ActorToTrack, const struct FVector& RelativeOffset, const bool bApplyImmediately)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "SetActorCameraRotationLookAtTrackActor");

	Params::X6CameraBlueprintLibrary_SetActorCameraRotationLookAtTrackActor Parms{};

	Parms.InActor = InActor;
	Parms.ActorToTrack = ActorToTrack;
	Parms.RelativeOffset = std::move(RelativeOffset);
	Parms.bApplyImmediately = bApplyImmediately;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CameraBlueprintLibrary.SetActorDissolveByMesh
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bDissolveByMesh                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CameraBlueprintLibrary::SetActorDissolveByMesh(class AActor* InActor, const bool bDissolveByMesh, int32 Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "SetActorDissolveByMesh");

	Params::X6CameraBlueprintLibrary_SetActorDissolveByMesh Parms{};

	Parms.InActor = InActor;
	Parms.bDissolveByMesh = bDissolveByMesh;
	Parms.Reason = Reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CameraBlueprintLibrary.SetActorDissolveEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bEnable                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bClearCurrentEffect                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CameraBlueprintLibrary::SetActorDissolveEnable(class AActor* InActor, const bool bEnable, const bool bClearCurrentEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "SetActorDissolveEnable");

	Params::X6CameraBlueprintLibrary_SetActorDissolveEnable Parms{};

	Parms.InActor = InActor;
	Parms.bEnable = bEnable;
	Parms.bClearCurrentEffect = bClearCurrentEffect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CameraBlueprintLibrary.SetActorDissolveEnableByReason
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bEnable                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bClearCurrentEffect                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CameraBlueprintLibrary::SetActorDissolveEnableByReason(class AActor* InActor, const bool bEnable, int32 Reason, const bool bClearCurrentEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "SetActorDissolveEnableByReason");

	Params::X6CameraBlueprintLibrary_SetActorDissolveEnableByReason Parms{};

	Parms.InActor = InActor;
	Parms.bEnable = bEnable;
	Parms.Reason = Reason;
	Parms.bClearCurrentEffect = bClearCurrentEffect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CameraBlueprintLibrary.SetCameraDrawDebug
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDebugEnable                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DrawDebugTime                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CameraBlueprintLibrary::SetCameraDrawDebug(class UObject* WorldContextObject, bool bDebugEnable, float DrawDebugTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "SetCameraDrawDebug");

	Params::X6CameraBlueprintLibrary_SetCameraDrawDebug Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.bDebugEnable = bDebugEnable;
	Parms.DrawDebugTime = DrawDebugTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CameraBlueprintLibrary.SetCamerarInputEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInputEnable                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CameraBlueprintLibrary::SetCamerarInputEnable(const class UObject* WorldContextObject, bool bInputEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "SetCamerarInputEnable");

	Params::X6CameraBlueprintLibrary_SetCamerarInputEnable Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.bInputEnable = bInputEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CameraBlueprintLibrary.SetCameraViewPointWithBlend
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FMinimalViewInfo&          ViewInfo                                               (Parm, NativeAccessSpecifierPublic)
// const struct FViewTargetTransitionParams&TransitionParams                                       (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UX6CameraBlueprintLibrary::SetCameraViewPointWithBlend(const class UObject* WorldContextObject, const struct FMinimalViewInfo& ViewInfo, const struct FViewTargetTransitionParams& TransitionParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "SetCameraViewPointWithBlend");

	Params::X6CameraBlueprintLibrary_SetCameraViewPointWithBlend Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ViewInfo = std::move(ViewInfo);
	Parms.TransitionParams = std::move(TransitionParams);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CameraBlueprintLibrary.SetCharacterFollowCameraRotation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  NewDesireRotation                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    Teleport                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CameraBlueprintLibrary::SetCharacterFollowCameraRotation(class AActor* Actor, const struct FRotator& NewDesireRotation, bool Teleport)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "SetCharacterFollowCameraRotation");

	Params::X6CameraBlueprintLibrary_SetCharacterFollowCameraRotation Parms{};

	Parms.Actor = Actor;
	Parms.NewDesireRotation = std::move(NewDesireRotation);
	Parms.Teleport = Teleport;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CameraBlueprintLibrary.SetDesireRotation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  NewDesireRotation                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    Teleport                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CameraBlueprintLibrary::SetDesireRotation(const class UObject* WorldContextObject, const struct FRotator& NewDesireRotation, bool Teleport)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "SetDesireRotation");

	Params::X6CameraBlueprintLibrary_SetDesireRotation Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NewDesireRotation = std::move(NewDesireRotation);
	Parms.Teleport = Teleport;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CameraBlueprintLibrary.SetDissolveEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Dissolve                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CameraBlueprintLibrary::SetDissolveEnable(const class UObject* WorldContextObject, bool Dissolve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "SetDissolveEnable");

	Params::X6CameraBlueprintLibrary_SetDissolveEnable Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Dissolve = Dissolve;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CameraBlueprintLibrary.SetGlobalDissolveEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Dissolve                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CameraBlueprintLibrary::SetGlobalDissolveEnable(const class UObject* WorldContextObject, bool Dissolve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "SetGlobalDissolveEnable");

	Params::X6CameraBlueprintLibrary_SetGlobalDissolveEnable Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Dissolve = Dissolve;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CameraBlueprintLibrary.SetPassiveDesiredRotation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  NewDesireRotation                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   AngularSpeed                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EViewTargetBlendFunction                BlendFunction                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendExp                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CameraBlueprintLibrary::SetPassiveDesiredRotation(const class UObject* WorldContextObject, const struct FRotator& NewDesireRotation, float AngularSpeed, EViewTargetBlendFunction BlendFunction, float BlendExp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "SetPassiveDesiredRotation");

	Params::X6CameraBlueprintLibrary_SetPassiveDesiredRotation Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NewDesireRotation = std::move(NewDesireRotation);
	Parms.AngularSpeed = AngularSpeed;
	Parms.BlendFunction = BlendFunction;
	Parms.BlendExp = BlendExp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CameraBlueprintLibrary.SetViewTargetAngularSpeed
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           NewViewTarget                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AngularSpeed                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendExp                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EViewTargetBlendFunction                BlendFunction                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CameraBlueprintLibrary::SetViewTargetAngularSpeed(class AActor* NewViewTarget, float AngularSpeed, float BlendExp, EViewTargetBlendFunction BlendFunction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "SetViewTargetAngularSpeed");

	Params::X6CameraBlueprintLibrary_SetViewTargetAngularSpeed Parms{};

	Parms.NewViewTarget = NewViewTarget;
	Parms.AngularSpeed = AngularSpeed;
	Parms.BlendExp = BlendExp;
	Parms.BlendFunction = BlendFunction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CameraBlueprintLibrary.SetViewTargetInSequence
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           CameraActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EViewTargetBlendFunction                BlendFunc                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendExp                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLockOutgoing                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CameraBlueprintLibrary::SetViewTargetInSequence(class UObject* WorldContextObject, class AActor* CameraActor, float BlendTime, EViewTargetBlendFunction BlendFunc, float BlendExp, bool bLockOutgoing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "SetViewTargetInSequence");

	Params::X6CameraBlueprintLibrary_SetViewTargetInSequence Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.CameraActor = CameraActor;
	Parms.BlendTime = BlendTime;
	Parms.BlendFunc = BlendFunc;
	Parms.BlendExp = BlendExp;
	Parms.bLockOutgoing = bLockOutgoing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CameraBlueprintLibrary.SetViewTargetLineSpeed
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           NewViewTarget                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LineSpeed                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendExp                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EViewTargetBlendFunction                BlendFunction                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CameraBlueprintLibrary::SetViewTargetLineSpeed(class AActor* NewViewTarget, float LineSpeed, float BlendExp, EViewTargetBlendFunction BlendFunction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "SetViewTargetLineSpeed");

	Params::X6CameraBlueprintLibrary_SetViewTargetLineSpeed Parms{};

	Parms.NewViewTarget = NewViewTarget;
	Parms.LineSpeed = LineSpeed;
	Parms.BlendExp = BlendExp;
	Parms.BlendFunction = BlendFunction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CameraBlueprintLibrary.SetViewTargetTeleport
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           NewTarget                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CameraBlueprintLibrary::SetViewTargetTeleport(class AActor* NewTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "SetViewTargetTeleport");

	Params::X6CameraBlueprintLibrary_SetViewTargetTeleport Parms{};

	Parms.NewTarget = NewTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CameraBlueprintLibrary.SetViewTargetWithBlend
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           NewViewTarget                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EViewTargetBlendFunction                BlendFunc                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendExp                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLockOutgoing                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                      InBlendCurve                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CameraBlueprintLibrary::SetViewTargetWithBlend(class AActor* NewViewTarget, float BlendTime, EViewTargetBlendFunction BlendFunc, float BlendExp, bool bLockOutgoing, class UCurveFloat* InBlendCurve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "SetViewTargetWithBlend");

	Params::X6CameraBlueprintLibrary_SetViewTargetWithBlend Parms{};

	Parms.NewViewTarget = NewViewTarget;
	Parms.BlendTime = BlendTime;
	Parms.BlendFunc = BlendFunc;
	Parms.BlendExp = BlendExp;
	Parms.bLockOutgoing = bLockOutgoing;
	Parms.InBlendCurve = InBlendCurve;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CameraBlueprintLibrary.SetViewTargetWithParabolaPath
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FViewTargetCurveTransitionParams&TransitionParams                                       (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   FrontViewAngleScope                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MinHeight                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxHeight                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SimFrequency                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    HeightTakePrecedence                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CameraBlueprintLibrary::SetViewTargetWithParabolaPath(class AActor* Target, const struct FViewTargetCurveTransitionParams& TransitionParams, float FrontViewAngleScope, float MinHeight, float MaxHeight, float SimFrequency, bool HeightTakePrecedence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "SetViewTargetWithParabolaPath");

	Params::X6CameraBlueprintLibrary_SetViewTargetWithParabolaPath Parms{};

	Parms.Target = Target;
	Parms.TransitionParams = std::move(TransitionParams);
	Parms.FrontViewAngleScope = FrontViewAngleScope;
	Parms.MinHeight = MinHeight;
	Parms.MaxHeight = MaxHeight;
	Parms.SimFrequency = SimFrequency;
	Parms.HeightTakePrecedence = HeightTakePrecedence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CameraBlueprintLibrary.StartCustomizeCameraShake
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendInTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendOutTime                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FROscillator&              ROscillator                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FVOscillator&              VOscillator                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FFOscillator&              Oscillator                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UX6CameraBlueprintLibrary::StartCustomizeCameraShake(class UObject* WorldContextObject, float Duration, float BlendInTime, float BlendOutTime, const struct FROscillator& ROscillator, const struct FVOscillator& VOscillator, const struct FFOscillator& Oscillator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "StartCustomizeCameraShake");

	Params::X6CameraBlueprintLibrary_StartCustomizeCameraShake Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Duration = Duration;
	Parms.BlendInTime = BlendInTime;
	Parms.BlendOutTime = BlendOutTime;
	Parms.ROscillator = std::move(ROscillator);
	Parms.VOscillator = std::move(VOscillator);
	Parms.Oscillator = std::move(Oscillator);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CameraBlueprintLibrary.SwitchToCameraState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECameraState                            NewCameraState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           NewTarget                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CameraBlueprintLibrary::SwitchToCameraState(class UObject* WorldContextObject, ECameraState NewCameraState, class AActor* NewTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "SwitchToCameraState");

	Params::X6CameraBlueprintLibrary_SwitchToCameraState Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NewCameraState = NewCameraState;
	Parms.NewTarget = NewTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CameraBlueprintLibrary.WorldLocation2Screen
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   WorldLocaion                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*                Controller                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UX6CameraBlueprintLibrary::WorldLocation2Screen(const struct FVector& WorldLocaion, class APlayerController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6CameraBlueprintLibrary", "WorldLocation2Screen");

	Params::X6CameraBlueprintLibrary_WorldLocation2Screen Parms{};

	Parms.WorldLocaion = std::move(WorldLocaion);
	Parms.Controller = Controller;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CameraSpringArmComponent.AddCollisionIgnoreActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CameraSpringArmComponent::AddCollisionIgnoreActor(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CameraSpringArmComponent", "AddCollisionIgnoreActor");

	Params::X6CameraSpringArmComponent_AddCollisionIgnoreActor Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CameraSpringArmComponent.ClearCollisionIgnoreActors
// (Final, Native, Public, BlueprintCallable)

void UX6CameraSpringArmComponent::ClearCollisionIgnoreActors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CameraSpringArmComponent", "ClearCollisionIgnoreActors");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CameraSpringArmComponent.RemoveCollisionIgnoreActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CameraSpringArmComponent::RemoveCollisionIgnoreActor(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CameraSpringArmComponent", "RemoveCollisionIgnoreActor");

	Params::X6CameraSpringArmComponent_RemoveCollisionIgnoreActor Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CameraVolume.GetShapeBounds
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FBoxSphereBounds                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FBoxSphereBounds AX6CameraVolume::GetShapeBounds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CameraVolume", "GetShapeBounds");

	Params::X6CameraVolume_GetShapeBounds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6SpawnOnViewSubsystem.AddCacheEntity
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// int64                                   EntityID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   SpawnerID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   GroupID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector*                         SpawnLocation                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// double                                  SpawnDistSqr                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6SpawnOnViewSubsystem::AddCacheEntity(int64 EntityID, int64 SpawnerID, int64 GroupID, struct FVector* SpawnLocation, double SpawnDistSqr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6SpawnOnViewSubsystem", "AddCacheEntity");

	Params::X6SpawnOnViewSubsystem_AddCacheEntity Parms{};

	Parms.EntityID = EntityID;
	Parms.SpawnerID = SpawnerID;
	Parms.GroupID = GroupID;
	Parms.SpawnDistSqr = SpawnDistSqr;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (SpawnLocation != nullptr)
		*SpawnLocation = std::move(Parms.SpawnLocation);
}


// Function X6Game.X6SpawnOnViewSubsystem.AddSpawner
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   SpawnerID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   EntityID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Cat                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6SpawnOnViewSubsystem::AddSpawner(class AActor* Actor, int64 SpawnerID, int64 EntityID, class FName Cat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6SpawnOnViewSubsystem", "AddSpawner");

	Params::X6SpawnOnViewSubsystem_AddSpawner Parms{};

	Parms.Actor = Actor;
	Parms.SpawnerID = SpawnerID;
	Parms.EntityID = EntityID;
	Parms.Cat = Cat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6SpawnOnViewSubsystem.CheckEntitySpawnOnView
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<int64>*                          NeedSpawnEntities                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UX6SpawnOnViewSubsystem::CheckEntitySpawnOnView(TArray<int64>* NeedSpawnEntities)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6SpawnOnViewSubsystem", "CheckEntitySpawnOnView");

	Params::X6SpawnOnViewSubsystem_CheckEntitySpawnOnView Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (NeedSpawnEntities != nullptr)
		*NeedSpawnEntities = std::move(Parms.NeedSpawnEntities);
}


// Function X6Game.X6SpawnOnViewSubsystem.ClearManagedEntityAndSpawners
// (Final, Native, Public, BlueprintCallable)

void UX6SpawnOnViewSubsystem::ClearManagedEntityAndSpawners()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6SpawnOnViewSubsystem", "ClearManagedEntityAndSpawners");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6SpawnOnViewSubsystem.ForceRemoveCahceEntity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   EntityID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6SpawnOnViewSubsystem::ForceRemoveCahceEntity(int64 EntityID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6SpawnOnViewSubsystem", "ForceRemoveCahceEntity");

	Params::X6SpawnOnViewSubsystem_ForceRemoveCahceEntity Parms{};

	Parms.EntityID = EntityID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6SpawnOnViewSubsystem.GetSpawnSystemStatistics
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64*                                  SpawnerNum                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64*                                  SkippedNum                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6SpawnOnViewSubsystem::GetSpawnSystemStatistics(int64* SpawnerNum, int64* SkippedNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6SpawnOnViewSubsystem", "GetSpawnSystemStatistics");

	Params::X6SpawnOnViewSubsystem_GetSpawnSystemStatistics Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (SpawnerNum != nullptr)
		*SpawnerNum = Parms.SpawnerNum;

	if (SkippedNum != nullptr)
		*SkippedNum = Parms.SkippedNum;
}


// Function X6Game.X6SpawnOnViewSubsystem.RemoveSpawner
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Cat                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6SpawnOnViewSubsystem::RemoveSpawner(class AActor* Actor, class FName Cat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6SpawnOnViewSubsystem", "RemoveSpawner");

	Params::X6SpawnOnViewSubsystem_RemoveSpawner Parms{};

	Parms.Actor = Actor;
	Parms.Cat = Cat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6SpawnOnViewSubsystem.ResetSpawnerGroup
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   GroupID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int64>*                          SpawnerIDS                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UX6SpawnOnViewSubsystem::ResetSpawnerGroup(int64 GroupID, TArray<int64>* SpawnerIDS)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6SpawnOnViewSubsystem", "ResetSpawnerGroup");

	Params::X6SpawnOnViewSubsystem_ResetSpawnerGroup Parms{};

	Parms.GroupID = GroupID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (SpawnerIDS != nullptr)
		*SpawnerIDS = std::move(Parms.SpawnerIDS);
}


// Function X6Game.X6SpawnOnViewSubsystem.SetSystemParams
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   OnScreenLimitHiddenFlag                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NearSpawnerDist                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6SpawnOnViewSubsystem::SetSystemParams(int32 OnScreenLimitHiddenFlag, float NearSpawnerDist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6SpawnOnViewSubsystem", "SetSystemParams");

	Params::X6SpawnOnViewSubsystem_SetSystemParams Parms{};

	Parms.OnScreenLimitHiddenFlag = OnScreenLimitHiddenFlag;
	Parms.NearSpawnerDist = NearSpawnerDist;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CarrierCharacterBase.GetMoveGoalReachTestInternal
// (Native, Event, Protected, HasOutParams, HasDefaults, BlueprintEvent, Const)
// Parameters:
// const class AActor*                     MovingActor                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   MoveOffset                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector*                         GoalOffset                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  GoalRadius                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  GoalHalfHeight                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6CarrierCharacterBase::GetMoveGoalReachTestInternal(const class AActor* MovingActor, const struct FVector& MoveOffset, struct FVector* GoalOffset, float* GoalRadius, float* GoalHalfHeight) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CarrierCharacterBase", "GetMoveGoalReachTestInternal");

	Params::X6CarrierCharacterBase_GetMoveGoalReachTestInternal Parms{};

	Parms.MovingActor = MovingActor;
	Parms.MoveOffset = std::move(MoveOffset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (GoalOffset != nullptr)
		*GoalOffset = std::move(Parms.GoalOffset);

	if (GoalRadius != nullptr)
		*GoalRadius = Parms.GoalRadius;

	if (GoalHalfHeight != nullptr)
		*GoalHalfHeight = Parms.GoalHalfHeight;
}


// Function X6Game.X6RootMotionModifier_SkewWarpWithMirror.AddRootMotionModifierSkewWarpWithMirror
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UMotionWarpingComponent*          InMotionWarpingComp                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UAnimSequenceBase*          InAnimation                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InStartTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InEndTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InWarpTargetName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWarpPointAnimProvider                  InWarpPointAnimProvider                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTransform&                InWarpPointAnimTransform                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InWarpPointAnimBoneName                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInWarpTranslation                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIgnoreZAxis                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInWarpRotation                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMotionWarpRotationType                 InRotationType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMotionWarpRotationMethod               InRotationMethod                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InWarpRotationTimeMultiplier                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InWarpMaxRotationRate                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UX6RootMotionModifier_SkewWarpWithMirror*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UX6RootMotionModifier_SkewWarpWithMirror* UX6RootMotionModifier_SkewWarpWithMirror::AddRootMotionModifierSkewWarpWithMirror(class UMotionWarpingComponent* InMotionWarpingComp, const class UAnimSequenceBase* InAnimation, float InStartTime, float InEndTime, class FName InWarpTargetName, EWarpPointAnimProvider InWarpPointAnimProvider, const struct FTransform& InWarpPointAnimTransform, class FName InWarpPointAnimBoneName, bool bInWarpTranslation, bool bInIgnoreZAxis, bool bInWarpRotation, EMotionWarpRotationType InRotationType, EMotionWarpRotationMethod InRotationMethod, float InWarpRotationTimeMultiplier, float InWarpMaxRotationRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6RootMotionModifier_SkewWarpWithMirror", "AddRootMotionModifierSkewWarpWithMirror");

	Params::X6RootMotionModifier_SkewWarpWithMirror_AddRootMotionModifierSkewWarpWithMirror Parms{};

	Parms.InMotionWarpingComp = InMotionWarpingComp;
	Parms.InAnimation = InAnimation;
	Parms.InStartTime = InStartTime;
	Parms.InEndTime = InEndTime;
	Parms.InWarpTargetName = InWarpTargetName;
	Parms.InWarpPointAnimProvider = InWarpPointAnimProvider;
	Parms.InWarpPointAnimTransform = std::move(InWarpPointAnimTransform);
	Parms.InWarpPointAnimBoneName = InWarpPointAnimBoneName;
	Parms.bInWarpTranslation = bInWarpTranslation;
	Parms.bInIgnoreZAxis = bInIgnoreZAxis;
	Parms.bInWarpRotation = bInWarpRotation;
	Parms.InRotationType = InRotationType;
	Parms.InRotationMethod = InRotationMethod;
	Parms.InWarpRotationTimeMultiplier = InWarpRotationTimeMultiplier;
	Parms.InWarpMaxRotationRate = InWarpMaxRotationRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6UtcPlayerInputComponent.HandleTouchEvent
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// EX6InputTouchEvent                      X6InputTouchEvent                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETouchIndex                             FingerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6UtcPlayerInputComponent::HandleTouchEvent(EX6InputTouchEvent X6InputTouchEvent, ETouchIndex FingerIndex, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6UtcPlayerInputComponent", "HandleTouchEvent");

	Params::X6UtcPlayerInputComponent_HandleTouchEvent Parms{};

	Parms.X6InputTouchEvent = X6InputTouchEvent;
	Parms.FingerIndex = FingerIndex;
	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.X6CharacterVisualEffectComponent.AddCustomDissolveSocket
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FName&                      InSocketName                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bSpecifyDissolveCondition                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FDissolveCondition&        InDissolveCondition                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UX6CharacterVisualEffectComponent::AddCustomDissolveSocket(const class FName& InSocketName, const bool bSpecifyDissolveCondition, const struct FDissolveCondition& InDissolveCondition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterVisualEffectComponent", "AddCustomDissolveSocket");

	Params::X6CharacterVisualEffectComponent_AddCustomDissolveSocket Parms{};

	Parms.InSocketName = InSocketName;
	Parms.bSpecifyDissolveCondition = bSpecifyDissolveCondition;
	Parms.InDissolveCondition = std::move(InDissolveCondition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterVisualEffectComponent.AppendCustomDissolveSocket
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TMap<class FName, struct FDissolveCondition>&InDissolveSocketMap                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UX6CharacterVisualEffectComponent::AppendCustomDissolveSocket(const TMap<class FName, struct FDissolveCondition>& InDissolveSocketMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterVisualEffectComponent", "AppendCustomDissolveSocket");

	Params::X6CharacterVisualEffectComponent_AppendCustomDissolveSocket Parms{};

	Parms.InDissolveSocketMap = std::move(InDissolveSocketMap);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterVisualEffectComponent.ClearCustomDissolveSocket
// (Final, Native, Public, BlueprintCallable)

void UX6CharacterVisualEffectComponent::ClearCustomDissolveSocket()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterVisualEffectComponent", "ClearCustomDissolveSocket");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterVisualEffectComponent.RemoveCustomDissolveSocket
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FName&                      InSocketName                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CharacterVisualEffectComponent::RemoveCustomDissolveSocket(const class FName& InSocketName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterVisualEffectComponent", "RemoveCustomDissolveSocket");

	Params::X6CharacterVisualEffectComponent_RemoveCustomDissolveSocket Parms{};

	Parms.InSocketName = InSocketName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterVisualEffectComponent.SetDissolveByMesh
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bInDissolveByMesh                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             Reason                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CharacterVisualEffectComponent::SetDissolveByMesh(const bool bInDissolveByMesh, const int32 Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterVisualEffectComponent", "SetDissolveByMesh");

	Params::X6CharacterVisualEffectComponent_SetDissolveByMesh Parms{};

	Parms.bInDissolveByMesh = bInDissolveByMesh;
	Parms.Reason = Reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterVisualEffectComponent.SetDissolveEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bClearCurrentEffect                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CharacterVisualEffectComponent::SetDissolveEnable(bool bEnable, const bool bClearCurrentEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterVisualEffectComponent", "SetDissolveEnable");

	Params::X6CharacterVisualEffectComponent_SetDissolveEnable Parms{};

	Parms.bEnable = bEnable;
	Parms.bClearCurrentEffect = bClearCurrentEffect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterVisualEffectComponent.SetDissolveEnableByReason
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bClearCurrentEffect                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CharacterVisualEffectComponent::SetDissolveEnableByReason(bool bEnable, int32 Reason, const bool bClearCurrentEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterVisualEffectComponent", "SetDissolveEnableByReason");

	Params::X6CharacterVisualEffectComponent_SetDissolveEnableByReason Parms{};

	Parms.bEnable = bEnable;
	Parms.Reason = Reason;
	Parms.bClearCurrentEffect = bClearCurrentEffect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterVisualEffectComponent.UpdateDissolveEffect
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const float&                            InDissolveValue                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CharacterVisualEffectComponent::UpdateDissolveEffect(const float& InDissolveValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterVisualEffectComponent", "UpdateDissolveEffect");

	Params::X6CharacterVisualEffectComponent_UpdateDissolveEffect Parms{};

	Parms.InDissolveValue = InDissolveValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterVisualEffectComponent.UpdateDissolveEffectInTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InDissolveValue                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DissolveTime                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CharacterVisualEffectComponent::UpdateDissolveEffectInTime(float InDissolveValue, float DissolveTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterVisualEffectComponent", "UpdateDissolveEffectInTime");

	Params::X6CharacterVisualEffectComponent_UpdateDissolveEffectInTime Parms{};

	Parms.InDissolveValue = InDissolveValue;
	Parms.DissolveTime = DissolveTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterVisualEffectComponent.GetDissolveByMeshReasons
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TSet<int32>                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TSet<int32> UX6CharacterVisualEffectComponent::GetDissolveByMeshReasons() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterVisualEffectComponent", "GetDissolveByMeshReasons");

	Params::X6CharacterVisualEffectComponent_GetDissolveByMeshReasons Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterVisualEffectComponent.GetDissolveDisableReasons
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TSet<int32>                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TSet<int32> UX6CharacterVisualEffectComponent::GetDissolveDisableReasons() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterVisualEffectComponent", "GetDissolveDisableReasons");

	Params::X6CharacterVisualEffectComponent_GetDissolveDisableReasons Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterEffectComponent.AddDisplayDebugValue
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const class FString&                    ValueName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ValueString                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CharacterEffectComponent::AddDisplayDebugValue(const class FString& ValueName, const class FString& ValueString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterEffectComponent", "AddDisplayDebugValue");

	Params::X6CharacterEffectComponent_AddDisplayDebugValue Parms{};

	Parms.ValueName = std::move(ValueName);
	Parms.ValueString = std::move(ValueString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterEffectComponent.CreateOwnerDecalComponent
// (Final, Native, Public, BlueprintCallable)

void UX6CharacterEffectComponent::CreateOwnerDecalComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterEffectComponent", "CreateOwnerDecalComponent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterEffectComponent.DestroyOwnerDecalComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bDestroyImmediately                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CharacterEffectComponent::DestroyOwnerDecalComponent(bool bDestroyImmediately)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterEffectComponent", "DestroyOwnerDecalComponent");

	Params::X6CharacterEffectComponent_DestroyOwnerDecalComponent Parms{};

	Parms.bDestroyImmediately = bDestroyImmediately;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterEffectComponent.GetFootstepEffectConfigInWater
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FName&                      RowName                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPhysicalSurface                        InSurfaceType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UNiagaraSystem>*   OutNiagaraSystemRef                                    (Parm, OutParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFootprintConfig*                OutFootprintConfig                                     (Parm, OutParm, NativeAccessSpecifierPublic)
// bool*                                   OutConstantEffect                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CharacterEffectComponent::GetFootstepEffectConfigInWater(const class FName& RowName, EPhysicalSurface InSurfaceType, TSoftObjectPtr<class UNiagaraSystem>* OutNiagaraSystemRef, struct FFootprintConfig* OutFootprintConfig, bool* OutConstantEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterEffectComponent", "GetFootstepEffectConfigInWater");

	Params::X6CharacterEffectComponent_GetFootstepEffectConfigInWater Parms{};

	Parms.RowName = RowName;
	Parms.InSurfaceType = InSurfaceType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutNiagaraSystemRef != nullptr)
		*OutNiagaraSystemRef = Parms.OutNiagaraSystemRef;

	if (OutFootprintConfig != nullptr)
		*OutFootprintConfig = std::move(Parms.OutFootprintConfig);

	if (OutConstantEffect != nullptr)
		*OutConstantEffect = Parms.OutConstantEffect;
}


// Function X6Game.X6CharacterEffectComponent.GetFootstepEffectConfigOnGround
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FName&                      RowName                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPhysicalSurface                        InSurfaceType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UNiagaraSystem>*   OutNiagaraSystemRef                                    (Parm, OutParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFootprintConfig*                OutFootprintConfig                                     (Parm, OutParm, NativeAccessSpecifierPublic)

void UX6CharacterEffectComponent::GetFootstepEffectConfigOnGround(const class FName& RowName, EPhysicalSurface InSurfaceType, TSoftObjectPtr<class UNiagaraSystem>* OutNiagaraSystemRef, struct FFootprintConfig* OutFootprintConfig)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterEffectComponent", "GetFootstepEffectConfigOnGround");

	Params::X6CharacterEffectComponent_GetFootstepEffectConfigOnGround Parms{};

	Parms.RowName = RowName;
	Parms.InSurfaceType = InSurfaceType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutNiagaraSystemRef != nullptr)
		*OutNiagaraSystemRef = Parms.OutNiagaraSystemRef;

	if (OutFootprintConfig != nullptr)
		*OutFootprintConfig = std::move(Parms.OutFootprintConfig);
}


// Function X6Game.X6CharacterEffectComponent.GetOwnerFloorSurfaceType
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   InLocation                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUseAccurateTraceLocation                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult*                      OutHitResult                                           (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// EPhysicalSurface*                       OutSurfaceType                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6CharacterEffectComponent::GetOwnerFloorSurfaceType(const struct FVector& InLocation, bool bUseAccurateTraceLocation, struct FHitResult* OutHitResult, EPhysicalSurface* OutSurfaceType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterEffectComponent", "GetOwnerFloorSurfaceType");

	Params::X6CharacterEffectComponent_GetOwnerFloorSurfaceType Parms{};

	Parms.InLocation = std::move(InLocation);
	Parms.bUseAccurateTraceLocation = bUseAccurateTraceLocation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutHitResult != nullptr)
		*OutHitResult = std::move(Parms.OutHitResult);

	if (OutSurfaceType != nullptr)
		*OutSurfaceType = Parms.OutSurfaceType;

	return Parms.ReturnValue;
}


// Function X6Game.X6CharacterEffectComponent.OnEnterShrubArea
// (Final, Native, Public)
// Parameters:
// const int32                             InShrubType                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CharacterEffectComponent::OnEnterShrubArea(const int32 InShrubType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterEffectComponent", "OnEnterShrubArea");

	Params::X6CharacterEffectComponent_OnEnterShrubArea Parms{};

	Parms.InShrubType = InShrubType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterEffectComponent.OnExitShrubArea
// (Final, Native, Public)

void UX6CharacterEffectComponent::OnExitShrubArea()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterEffectComponent", "OnExitShrubArea");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterEffectComponent.PlayFootstepEffect
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*           MeshComponent                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SocketName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   LocationOffset                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  RotationOffset                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// const struct FVector&                   Scale                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAttached                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             RowName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CharacterEffectComponent::PlayFootstepEffect(class USkeletalMeshComponent* MeshComponent, class FName SocketName, const struct FVector& LocationOffset, const struct FRotator& RotationOffset, const struct FVector& Scale, bool bAttached, class FName RowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterEffectComponent", "PlayFootstepEffect");

	Params::X6CharacterEffectComponent_PlayFootstepEffect Parms{};

	Parms.MeshComponent = MeshComponent;
	Parms.SocketName = SocketName;
	Parms.LocationOffset = std::move(LocationOffset);
	Parms.RotationOffset = std::move(RotationOffset);
	Parms.Scale = std::move(Scale);
	Parms.bAttached = bAttached;
	Parms.RowName = RowName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterEffectComponent.ReceiveOwnerBecomeViewTarget
// (Event, Protected, BlueprintEvent)

void UX6CharacterEffectComponent::ReceiveOwnerBecomeViewTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterEffectComponent", "ReceiveOwnerBecomeViewTarget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function X6Game.X6CharacterEffectComponent.ReceiveOwnerEndViewTarget
// (Event, Protected, BlueprintEvent)

void UX6CharacterEffectComponent::ReceiveOwnerEndViewTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterEffectComponent", "ReceiveOwnerEndViewTarget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function X6Game.X6CharacterEffectComponent.SetConfigDeepWaterDepth
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InDepth                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CharacterEffectComponent::SetConfigDeepWaterDepth(float InDepth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterEffectComponent", "SetConfigDeepWaterDepth");

	Params::X6CharacterEffectComponent_SetConfigDeepWaterDepth Parms{};

	Parms.InDepth = InDepth;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterEffectComponent.SetCurrentEnvironmentType
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const EFootstepEffectEnvironmentType    InEnvironmentType                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CharacterEffectComponent::SetCurrentEnvironmentType(const EFootstepEffectEnvironmentType InEnvironmentType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterEffectComponent", "SetCurrentEnvironmentType");

	Params::X6CharacterEffectComponent_SetCurrentEnvironmentType Parms{};

	Parms.InEnvironmentType = InEnvironmentType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterEffectComponent.SetCurrentShoeType
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const EFootstepEffectShoeType           InShoeType                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CharacterEffectComponent::SetCurrentShoeType(const EFootstepEffectShoeType InShoeType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterEffectComponent", "SetCurrentShoeType");

	Params::X6CharacterEffectComponent_SetCurrentShoeType Parms{};

	Parms.InShoeType = InShoeType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterEffectComponent.SetCurrentSurfaceType
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EPhysicalSurface                        InSurfaceType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CharacterEffectComponent::SetCurrentSurfaceType(EPhysicalSurface InSurfaceType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterEffectComponent", "SetCurrentSurfaceType");

	Params::X6CharacterEffectComponent_SetCurrentSurfaceType Parms{};

	Parms.InSurfaceType = InSurfaceType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterEffectComponent.SetEnableFootstepDebug
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bEnable                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CharacterEffectComponent::SetEnableFootstepDebug(const bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterEffectComponent", "SetEnableFootstepDebug");

	Params::X6CharacterEffectComponent_SetEnableFootstepDebug Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterEffectComponent.UpdateFootstepNiagaraSystemParamOverrideMap
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TMap<class FName, float>&         InParamMap                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UX6CharacterEffectComponent::UpdateFootstepNiagaraSystemParamOverrideMap(const TMap<class FName, float>& InParamMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterEffectComponent", "UpdateFootstepNiagaraSystemParamOverrideMap");

	Params::X6CharacterEffectComponent_UpdateFootstepNiagaraSystemParamOverrideMap Parms{};

	Parms.InParamMap = std::move(InParamMap);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CharacterEffectComponent.GetFootstepNiagaraSystemParamOverrideMap
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TMap<class FName, float>          ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TMap<class FName, float> UX6CharacterEffectComponent::GetFootstepNiagaraSystemParamOverrideMap() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CharacterEffectComponent", "GetFootstepNiagaraSystemParamOverrideMap");

	Params::X6CharacterEffectComponent_GetFootstepNiagaraSystemParamOverrideMap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6StrafeMovementComponent.K2_UpdateMovingState
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bNewMoveFlag                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6StrafeMovementComponent::K2_UpdateMovingState(bool bNewMoveFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6StrafeMovementComponent", "K2_UpdateMovingState");

	Params::X6StrafeMovementComponent_K2_UpdateMovingState Parms{};

	Parms.bNewMoveFlag = bNewMoveFlag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.X6StrafeMovementComponent.CalcTurnAroundAngle
// (Final, Native, Public, HasDefaults, Const)
// Parameters:
// const struct FVector&                   InputDirection                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   ForwardVector                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6StrafeMovementComponent::CalcTurnAroundAngle(const struct FVector& InputDirection, const struct FVector& ForwardVector) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6StrafeMovementComponent", "CalcTurnAroundAngle");

	Params::X6StrafeMovementComponent_CalcTurnAroundAngle Parms{};

	Parms.InputDirection = std::move(InputDirection);
	Parms.ForwardVector = std::move(ForwardVector);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CheatManager.X6ChangeSize
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// float                                   F                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CheatManager::X6ChangeSize(float F)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CheatManager", "X6ChangeSize");

	Params::X6CheatManager_X6ChangeSize Parms{};

	Parms.F = F;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CheatManager.X6Fly
// (Final, Exec, Native, Public, BlueprintCallable)

void UX6CheatManager::X6Fly()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CheatManager", "X6Fly");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CheatManager.X6ForceMove
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ForceIgnoreNikki                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CheatManager::X6ForceMove(bool ForceIgnoreNikki)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CheatManager", "X6ForceMove");

	Params::X6CheatManager_X6ForceMove Parms{};

	Parms.ForceIgnoreNikki = ForceIgnoreNikki;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CheatManager.X6Ghost
// (Final, Exec, Native, Public, BlueprintCallable)

void UX6CheatManager::X6Ghost()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CheatManager", "X6Ghost");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CheatManager.X6Walk
// (Final, Exec, Native, Public, BlueprintCallable)

void UX6CheatManager::X6Walk()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CheatManager", "X6Walk");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AbilityTask_ApplyRootMotionAccelOrForward.ApplyRootMotionAccelOrForward
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TaskInstanceName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InterpSpeed_0                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Strength_0                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration_0                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsAdditive_0                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                      StrengthOverTime_0                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERootMotionFinishVelocityMode           VelocityOnFinishMode                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   SetVelocityOnFinish                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ClampVelocityOnFinish                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnableGravity_0                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UX6AbilityTask_ApplyRootMotionAccelOrForward*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UX6AbilityTask_ApplyRootMotionAccelOrForward* UX6AbilityTask_ApplyRootMotionAccelOrForward::ApplyRootMotionAccelOrForward(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, float InterpSpeed_0, float Strength_0, float Duration_0, bool bIsAdditive_0, class UCurveFloat* StrengthOverTime_0, ERootMotionFinishVelocityMode VelocityOnFinishMode, const struct FVector& SetVelocityOnFinish, float ClampVelocityOnFinish, bool bEnableGravity_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AbilityTask_ApplyRootMotionAccelOrForward", "ApplyRootMotionAccelOrForward");

	Params::X6AbilityTask_ApplyRootMotionAccelOrForward_ApplyRootMotionAccelOrForward Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.TaskInstanceName = TaskInstanceName;
	Parms.InterpSpeed_0 = InterpSpeed_0;
	Parms.Strength_0 = Strength_0;
	Parms.Duration_0 = Duration_0;
	Parms.bIsAdditive_0 = bIsAdditive_0;
	Parms.StrengthOverTime_0 = StrengthOverTime_0;
	Parms.VelocityOnFinishMode = VelocityOnFinishMode;
	Parms.SetVelocityOnFinish = std::move(SetVelocityOnFinish);
	Parms.ClampVelocityOnFinish = ClampVelocityOnFinish;
	Parms.bEnableGravity_0 = bEnableGravity_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CircularListView.AddItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Item                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CircularListView::AddItem(class UObject* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CircularListView", "AddItem");

	Params::X6CircularListView_AddItem Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CircularListView.BP_CancelScrollIntoView
// (Final, Native, Private, BlueprintCallable)

void UX6CircularListView::BP_CancelScrollIntoView()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CircularListView", "BP_CancelScrollIntoView");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CircularListView.BP_ClearSelection
// (Final, Native, Private, BlueprintCallable)

void UX6CircularListView::BP_ClearSelection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CircularListView", "BP_ClearSelection");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CircularListView.BP_ScrollItemIntoView
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// class UObject*                          Item                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CircularListView::BP_ScrollItemIntoView(class UObject* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CircularListView", "BP_ScrollItemIntoView");

	Params::X6CircularListView_BP_ScrollItemIntoView Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CircularListView.BP_SetItemSelection
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// class UObject*                          Item                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSelected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CircularListView::BP_SetItemSelection(class UObject* Item, bool bSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CircularListView", "BP_SetItemSelection");

	Params::X6CircularListView_BP_SetItemSelection Parms{};

	Parms.Item = Item;
	Parms.bSelected = bSelected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CircularListView.BP_SetListItems
// (Final, Native, Private, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class UObject*>&           InListItems                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UX6CircularListView::BP_SetListItems(const TArray<class UObject*>& InListItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CircularListView", "BP_SetListItems");

	Params::X6CircularListView_BP_SetListItems Parms{};

	Parms.InListItems = std::move(InListItems);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CircularListView.BP_SetSelectedItem
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// class UObject*                          Item                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CircularListView::BP_SetSelectedItem(class UObject* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CircularListView", "BP_SetSelectedItem");

	Params::X6CircularListView_BP_SetSelectedItem Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CircularListView.ClearListItems
// (Final, Native, Public, BlueprintCallable)

void UX6CircularListView::ClearListItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CircularListView", "ClearListItems");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CircularListView.RegenerateAllEntries
// (Final, Native, Public, BlueprintCallable)

void UX6CircularListView::RegenerateAllEntries()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CircularListView", "RegenerateAllEntries");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CircularListView.RemoveItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Item                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CircularListView::RemoveItem(class UObject* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CircularListView", "RemoveItem");

	Params::X6CircularListView_RemoveItem Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CircularListView.RequestRefresh
// (Final, Native, Public, BlueprintCallable)

void UX6CircularListView::RequestRefresh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CircularListView", "RequestRefresh");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CircularListView.ScrollIndexIntoView
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CircularListView::ScrollIndexIntoView(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CircularListView", "ScrollIndexIntoView");

	Params::X6CircularListView_ScrollIndexIntoView Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CircularListView.ScrollToBottom
// (Final, Native, Public, BlueprintCallable)

void UX6CircularListView::ScrollToBottom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CircularListView", "ScrollToBottom");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CircularListView.ScrollToTop
// (Final, Native, Public, BlueprintCallable)

void UX6CircularListView::ScrollToTop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CircularListView", "ScrollToTop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CircularListView.SetScrollbarVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESlateVisibility                        InVisibility                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CircularListView::SetScrollbarVisibility(ESlateVisibility InVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CircularListView", "SetScrollbarVisibility");

	Params::X6CircularListView_SetScrollbarVisibility Parms{};

	Parms.InVisibility = InVisibility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CircularListView.SetScrollOffset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const float                             InScrollOffset                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CircularListView::SetScrollOffset(const float InScrollOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CircularListView", "SetScrollOffset");

	Params::X6CircularListView_SetScrollOffset Parms{};

	Parms.InScrollOffset = InScrollOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CircularListView.SetSelectedIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CircularListView::SetSelectedIndex(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CircularListView", "SetSelectedIndex");

	Params::X6CircularListView_SetSelectedIndex Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CircularListView.SetWheelScrollMultiplier
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewWheelScrollMultiplier                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CircularListView::SetWheelScrollMultiplier(float NewWheelScrollMultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CircularListView", "SetWheelScrollMultiplier");

	Params::X6CircularListView_SetWheelScrollMultiplier Parms{};

	Parms.NewWheelScrollMultiplier = NewWheelScrollMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CircularListView.BP_GetSelectedItem
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UX6CircularListView::BP_GetSelectedItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CircularListView", "BP_GetSelectedItem");

	Params::X6CircularListView_BP_GetSelectedItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CircularListView.BP_IsItemVisible
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          Item                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6CircularListView::BP_IsItemVisible(class UObject* Item) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CircularListView", "BP_IsItemVisible");

	Params::X6CircularListView_BP_IsItemVisible Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CircularListView.GetDisplayedEntryWidgets
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<class UUserWidget*>        ReturnValue                                            (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

const TArray<class UUserWidget*> UX6CircularListView::GetDisplayedEntryWidgets() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CircularListView", "GetDisplayedEntryWidgets");

	Params::X6CircularListView_GetDisplayedEntryWidgets Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CircularListView.GetIndexForItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          Item                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UX6CircularListView::GetIndexForItem(class UObject* Item) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CircularListView", "GetIndexForItem");

	Params::X6CircularListView_GetIndexForItem Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CircularListView.GetItemAt
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UX6CircularListView::GetItemAt(int32 Index_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CircularListView", "GetItemAt");

	Params::X6CircularListView_GetItemAt Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CircularListView.GetListItems
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<class UObject*>            ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class UObject*> UX6CircularListView::GetListItems() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CircularListView", "GetListItems");

	Params::X6CircularListView_GetListItems Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CircularListView.GetNumItems
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UX6CircularListView::GetNumItems() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CircularListView", "GetNumItems");

	Params::X6CircularListView_GetNumItems Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CombatBossSlotMgrComponent.GetSlotRelativeTransformByIndex
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             SlotIndex                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTransform UX6CombatBossSlotMgrComponent::GetSlotRelativeTransformByIndex(const int32 SlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CombatBossSlotMgrComponent", "GetSlotRelativeTransformByIndex");

	Params::X6CombatBossSlotMgrComponent_GetSlotRelativeTransformByIndex Parms{};

	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CombatBossSlotMgrComponent.GetSlotRelativeTransformByTagName
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FName&                      TagName                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FTransform>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FTransform> UX6CombatBossSlotMgrComponent::GetSlotRelativeTransformByTagName(const class FName& TagName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CombatBossSlotMgrComponent", "GetSlotRelativeTransformByTagName");

	Params::X6CombatBossSlotMgrComponent_GetSlotRelativeTransformByTagName Parms{};

	Parms.TagName = TagName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CombatBossSlotMgrComponent.GetSlots
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FAttachSlotDefinition>    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FAttachSlotDefinition> UX6CombatBossSlotMgrComponent::GetSlots() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CombatBossSlotMgrComponent", "GetSlots");

	Params::X6CombatBossSlotMgrComponent_GetSlots Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CombatBossSlotMgrComponent.GetSlotTransformByIndex
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             SlotIndex                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTransform UX6CombatBossSlotMgrComponent::GetSlotTransformByIndex(const int32 SlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CombatBossSlotMgrComponent", "GetSlotTransformByIndex");

	Params::X6CombatBossSlotMgrComponent_GetSlotTransformByIndex Parms{};

	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CombatBossSlotMgrComponent.GetSlotTransformByTagName
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FName&                      TagName                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FTransform>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FTransform> UX6CombatBossSlotMgrComponent::GetSlotTransformByTagName(const class FName& TagName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CombatBossSlotMgrComponent", "GetSlotTransformByTagName");

	Params::X6CombatBossSlotMgrComponent_GetSlotTransformByTagName Parms{};

	Parms.TagName = TagName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CombatCameraSynchronizer.ClearRotationTargetCandidates
// (Final, Native, Public, BlueprintCallable)

void UX6CombatCameraSynchronizer::ClearRotationTargetCandidates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CombatCameraSynchronizer", "ClearRotationTargetCandidates");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CombatCameraSynchronizer.SetRotationTargetCandidates
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const TArray<class AActor*>&            CandidatesArray                                        (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UX6CombatCameraSynchronizer::SetRotationTargetCandidates(const TArray<class AActor*>& CandidatesArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CombatCameraSynchronizer", "SetRotationTargetCandidates");

	Params::X6CombatCameraSynchronizer_SetRotationTargetCandidates Parms{};

	Parms.CandidatesArray = std::move(CandidatesArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CombatComponent.SetAbilityDataAsset
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const class UX6AbilitySet*              InAbilitySet                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CombatComponent::SetAbilityDataAsset(const class UX6AbilitySet* InAbilitySet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CombatComponent", "SetAbilityDataAsset");

	Params::X6CombatComponent_SetAbilityDataAsset Parms{};

	Parms.InAbilitySet = InAbilitySet;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CombatMovementComponent.CleanData
// (Final, Native, Public, BlueprintCallable)

void UX6CombatMovementComponent::CleanData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CombatMovementComponent", "CleanData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CombatMovementComponent.K2_UpdateMovingState
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bNewMoveFlag                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CombatMovementComponent::K2_UpdateMovingState(bool bNewMoveFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CombatMovementComponent", "K2_UpdateMovingState");

	Params::X6CombatMovementComponent_K2_UpdateMovingState Parms{};

	Parms.bNewMoveFlag = bNewMoveFlag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.X6CombatMovementComponent.UpdateMovingData
// (Final, Native, Protected, HasOutParams, HasDefaults)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNewMoveFlag                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   NewMoveDir                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UX6CombatMovementComponent::UpdateMovingData(float DeltaTime, bool bNewMoveFlag, const struct FVector& NewMoveDir)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CombatMovementComponent", "UpdateMovingData");

	Params::X6CombatMovementComponent_UpdateMovingData Parms{};

	Parms.DeltaTime = DeltaTime;
	Parms.bNewMoveFlag = bNewMoveFlag;
	Parms.NewMoveDir = std::move(NewMoveDir);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CombatPerformanceProcessorComponent.K2_GetABPConfigs
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UDataAsset*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDataAsset* UX6CombatPerformanceProcessorComponent::K2_GetABPConfigs() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CombatPerformanceProcessorComponent", "K2_GetABPConfigs");

	Params::X6CombatPerformanceProcessorComponent_K2_GetABPConfigs Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function X6Game.X6AbilityTask_PlayMontageAndWait.CreatePlayMontageAndWaitProxy
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TaskInstanceName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*                     MontageToPlay_0                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Rate_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             StartSection_0                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bStopWhenAbilityEnds_0                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AnimRootMotionTranslationScale_0                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartTimeSeconds_0                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMirror_0                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayWithShadow_0                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UX6AbilityTask_PlayMontageAndWait*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UX6AbilityTask_PlayMontageAndWait* UX6AbilityTask_PlayMontageAndWait::CreatePlayMontageAndWaitProxy(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, class UAnimMontage* MontageToPlay_0, float Rate_0, class FName StartSection_0, bool bStopWhenAbilityEnds_0, float AnimRootMotionTranslationScale_0, float StartTimeSeconds_0, bool bMirror_0, bool bPlayWithShadow_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AbilityTask_PlayMontageAndWait", "CreatePlayMontageAndWaitProxy");

	Params::X6AbilityTask_PlayMontageAndWait_CreatePlayMontageAndWaitProxy Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.TaskInstanceName = TaskInstanceName;
	Parms.MontageToPlay_0 = MontageToPlay_0;
	Parms.Rate_0 = Rate_0;
	Parms.StartSection_0 = StartSection_0;
	Parms.bStopWhenAbilityEnds_0 = bStopWhenAbilityEnds_0;
	Parms.AnimRootMotionTranslationScale_0 = AnimRootMotionTranslationScale_0;
	Parms.StartTimeSeconds_0 = StartTimeSeconds_0;
	Parms.bMirror_0 = bMirror_0;
	Parms.bPlayWithShadow_0 = bPlayWithShadow_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AbilityTask_PlayMontageAndWait.OnMontageBlendingOut
// (Final, Native, Public)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInterrupted                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AbilityTask_PlayMontageAndWait::OnMontageBlendingOut(class UAnimMontage* Montage, bool bInterrupted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AbilityTask_PlayMontageAndWait", "OnMontageBlendingOut");

	Params::X6AbilityTask_PlayMontageAndWait_OnMontageBlendingOut Parms{};

	Parms.Montage = Montage;
	Parms.bInterrupted = bInterrupted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AbilityTask_PlayMontageAndWait.OnMontageEnded
// (Final, Native, Public)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInterrupted                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AbilityTask_PlayMontageAndWait::OnMontageEnded(class UAnimMontage* Montage, bool bInterrupted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AbilityTask_PlayMontageAndWait", "OnMontageEnded");

	Params::X6AbilityTask_PlayMontageAndWait_OnMontageEnded Parms{};

	Parms.Montage = Montage;
	Parms.bInterrupted = bInterrupted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AbilityTask_PlayMontageAndWait.OnMontageInterrupted
// (Final, Native, Public)

void UX6AbilityTask_PlayMontageAndWait::OnMontageInterrupted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AbilityTask_PlayMontageAndWait", "OnMontageInterrupted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AbilityTask_PlayMontageAndWait.OnNotifyBeginReceived
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FName                             NotifyName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FBranchingPointNotifyPayload&BranchingPointNotifyPayload                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UX6AbilityTask_PlayMontageAndWait::OnNotifyBeginReceived(class FName NotifyName, const struct FBranchingPointNotifyPayload& BranchingPointNotifyPayload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AbilityTask_PlayMontageAndWait", "OnNotifyBeginReceived");

	Params::X6AbilityTask_PlayMontageAndWait_OnNotifyBeginReceived Parms{};

	Parms.NotifyName = NotifyName;
	Parms.BranchingPointNotifyPayload = std::move(BranchingPointNotifyPayload);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AbilityTask_PlayMontageAndWait.OnNotifyEndReceived
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FName                             NotifyName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FBranchingPointNotifyPayload&BranchingPointNotifyPayload                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UX6AbilityTask_PlayMontageAndWait::OnNotifyEndReceived(class FName NotifyName, const struct FBranchingPointNotifyPayload& BranchingPointNotifyPayload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AbilityTask_PlayMontageAndWait", "OnNotifyEndReceived");

	Params::X6AbilityTask_PlayMontageAndWait_OnNotifyEndReceived Parms{};

	Parms.NotifyName = NotifyName;
	Parms.BranchingPointNotifyPayload = std::move(BranchingPointNotifyPayload);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6WaterSimulationComponent.GetPointToLeave
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FSimulateWaterFlowKeyPoint       ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FSimulateWaterFlowKeyPoint UX6WaterSimulationComponent::GetPointToLeave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6WaterSimulationComponent", "GetPointToLeave");

	Params::X6WaterSimulationComponent_GetPointToLeave Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6WaterSimulationComponent.GetTargetPointToToward
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FSimulateWaterFlowKeyPoint       ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FSimulateWaterFlowKeyPoint UX6WaterSimulationComponent::GetTargetPointToToward()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6WaterSimulationComponent", "GetTargetPointToToward");

	Params::X6WaterSimulationComponent_GetTargetPointToToward Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6WaterSimulationComponent.GetWaterCurrentDensity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6WaterSimulationComponent::GetWaterCurrentDensity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6WaterSimulationComponent", "GetWaterCurrentDensity");

	Params::X6WaterSimulationComponent_GetWaterCurrentDensity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6WaterSimulationComponent.GetWaterSurfaceHeightInWorldCoordinate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6WaterSimulationComponent::GetWaterSurfaceHeightInWorldCoordinate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6WaterSimulationComponent", "GetWaterSurfaceHeightInWorldCoordinate");

	Params::X6WaterSimulationComponent_GetWaterSurfaceHeightInWorldCoordinate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6WaterSimulationComponent.UpdateWaterDensity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewDensity                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6WaterSimulationComponent::UpdateWaterDensity(float NewDensity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6WaterSimulationComponent", "UpdateWaterDensity");

	Params::X6WaterSimulationComponent_UpdateWaterDensity Parms{};

	Parms.NewDensity = NewDensity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6WaterSimulationComponent.UpdateWaterIceState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ToIceOrExit                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6WaterSimulationComponent::UpdateWaterIceState(bool ToIceOrExit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6WaterSimulationComponent", "UpdateWaterIceState");

	Params::X6WaterSimulationComponent_UpdateWaterIceState Parms{};

	Parms.ToIceOrExit = ToIceOrExit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6WaterSimulationComponent.UpdateWaterSurfaceHeight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   HeightOfffsetToUpdate                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6WaterSimulationComponent::UpdateWaterSurfaceHeight(float HeightOfffsetToUpdate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6WaterSimulationComponent", "UpdateWaterSurfaceHeight");

	Params::X6WaterSimulationComponent_UpdateWaterSurfaceHeight Parms{};

	Parms.HeightOfffsetToUpdate = HeightOfffsetToUpdate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6WaterSimulationComponent.UpdateWaterSurfaceHeightInTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   TimeDuration                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TotalHeightToUpdate                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6WaterSimulationComponent::UpdateWaterSurfaceHeightInTime(float TimeDuration, float TotalHeightToUpdate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6WaterSimulationComponent", "UpdateWaterSurfaceHeightInTime");

	Params::X6WaterSimulationComponent_UpdateWaterSurfaceHeightInTime Parms{};

	Parms.TimeDuration = TimeDuration;
	Parms.TotalHeightToUpdate = TotalHeightToUpdate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6WaterSimulationComponent.UpdateWaterSurfaceHeightWithSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   UpdateHeightSpeed                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TotalHeightToUpdate                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6WaterSimulationComponent::UpdateWaterSurfaceHeightWithSpeed(float UpdateHeightSpeed, float TotalHeightToUpdate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6WaterSimulationComponent", "UpdateWaterSurfaceHeightWithSpeed");

	Params::X6WaterSimulationComponent_UpdateWaterSurfaceHeightWithSpeed Parms{};

	Parms.UpdateHeightSpeed = UpdateHeightSpeed;
	Parms.TotalHeightToUpdate = TotalHeightToUpdate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CombatTargetingFilterSubsystem.AddAreaListenerTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InTargetActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CombatTargetingFilterSubsystem::AddAreaListenerTarget(class AActor* InTargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CombatTargetingFilterSubsystem", "AddAreaListenerTarget");

	Params::X6CombatTargetingFilterSubsystem_AddAreaListenerTarget Parms{};

	Parms.InTargetActor = InTargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CombatTargetingFilterSubsystem.K2_ExecuteNormalTargetingPreset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class UTargetingPreset*           InFilterTargetingPreset                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTargetingPreset*           InOnlyOutlineTargetingPreset                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CombatTargetingFilterSubsystem::K2_ExecuteNormalTargetingPreset(const class UTargetingPreset* InFilterTargetingPreset, const class UTargetingPreset* InOnlyOutlineTargetingPreset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CombatTargetingFilterSubsystem", "K2_ExecuteNormalTargetingPreset");

	Params::X6CombatTargetingFilterSubsystem_K2_ExecuteNormalTargetingPreset Parms{};

	Parms.InFilterTargetingPreset = InFilterTargetingPreset;
	Parms.InOnlyOutlineTargetingPreset = InOnlyOutlineTargetingPreset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CombatTargetingFilterSubsystem.K2_GetTargetingResults
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UTargetingPreset*           InTargetingPreset                                      (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FHitResult>*              OutTargets                                             (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UX6CombatTargetingFilterSubsystem::K2_GetTargetingResults(const class UTargetingPreset* InTargetingPreset, TArray<struct FHitResult>* OutTargets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CombatTargetingFilterSubsystem", "K2_GetTargetingResults");

	Params::X6CombatTargetingFilterSubsystem_K2_GetTargetingResults Parms{};

	Parms.InTargetingPreset = InTargetingPreset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTargets != nullptr)
		*OutTargets = std::move(Parms.OutTargets);
}


// Function X6Game.X6CombatTargetingFilterSubsystem.K2_ResetCrashTargetingPreset
// (Final, Native, Public, BlueprintCallable)

void UX6CombatTargetingFilterSubsystem::K2_ResetCrashTargetingPreset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CombatTargetingFilterSubsystem", "K2_ResetCrashTargetingPreset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CombatTargetingFilterSubsystem.K2_ResetPerfumeTargetingPreset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bReinforce                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CombatTargetingFilterSubsystem::K2_ResetPerfumeTargetingPreset(const bool bReinforce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CombatTargetingFilterSubsystem", "K2_ResetPerfumeTargetingPreset");

	Params::X6CombatTargetingFilterSubsystem_K2_ResetPerfumeTargetingPreset Parms{};

	Parms.bReinforce = bReinforce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CombatTargetingFilterSubsystem.K2_SetRunningCrashTargetingPreset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTargetingPreset*                 InTargetingPreset                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CombatTargetingFilterSubsystem::K2_SetRunningCrashTargetingPreset(class UTargetingPreset* InTargetingPreset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CombatTargetingFilterSubsystem", "K2_SetRunningCrashTargetingPreset");

	Params::X6CombatTargetingFilterSubsystem_K2_SetRunningCrashTargetingPreset Parms{};

	Parms.InTargetingPreset = InTargetingPreset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CombatTargetingFilterSubsystem.K2_SetRunningPerfumeTargetingPreset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTargetingPreset*                 InTargetingPreset                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTargetingPreset*                 InChargeUpPreTargetingPreset                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTargetingPreset*                 InChargeUpFinishTargetingPreset                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CombatTargetingFilterSubsystem::K2_SetRunningPerfumeTargetingPreset(class UTargetingPreset* InTargetingPreset, class UTargetingPreset* InChargeUpPreTargetingPreset, class UTargetingPreset* InChargeUpFinishTargetingPreset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CombatTargetingFilterSubsystem", "K2_SetRunningPerfumeTargetingPreset");

	Params::X6CombatTargetingFilterSubsystem_K2_SetRunningPerfumeTargetingPreset Parms{};

	Parms.InTargetingPreset = InTargetingPreset;
	Parms.InChargeUpPreTargetingPreset = InChargeUpPreTargetingPreset;
	Parms.InChargeUpFinishTargetingPreset = InChargeUpFinishTargetingPreset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CombatTargetingFilterSubsystem.OnControlMovementModeChange
// (Final, Native, Public)
// Parameters:
// class ACharacter*                       Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovementMode                           PrevMovementMode                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   PreviousCustomMode                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CombatTargetingFilterSubsystem::OnControlMovementModeChange(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CombatTargetingFilterSubsystem", "OnControlMovementModeChange");

	Params::X6CombatTargetingFilterSubsystem_OnControlMovementModeChange Parms{};

	Parms.Character = Character;
	Parms.PrevMovementMode = PrevMovementMode;
	Parms.PreviousCustomMode = PreviousCustomMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CombatTargetingFilterSubsystem.RemoveAreaListenerTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InTargetActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CombatTargetingFilterSubsystem::RemoveAreaListenerTarget(class AActor* InTargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CombatTargetingFilterSubsystem", "RemoveAreaListenerTarget");

	Params::X6CombatTargetingFilterSubsystem_RemoveAreaListenerTarget Parms{};

	Parms.InTargetActor = InTargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CombatTargetingFilterSubsystem.SetActiveOutlineCameraBlend
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bActive                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InFlag                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bClearFlag                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6CombatTargetingFilterSubsystem::SetActiveOutlineCameraBlend(bool bActive, int32 InFlag, bool bClearFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CombatTargetingFilterSubsystem", "SetActiveOutlineCameraBlend");

	Params::X6CombatTargetingFilterSubsystem_SetActiveOutlineCameraBlend Parms{};

	Parms.bActive = bActive;
	Parms.InFlag = InFlag;
	Parms.bClearFlag = bClearFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CombatTargetingFilterSubsystem.SetActiveTargetingFilter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bActive                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6CombatTargetingFilterSubsystem::SetActiveTargetingFilter(bool bActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CombatTargetingFilterSubsystem", "SetActiveTargetingFilter");

	Params::X6CombatTargetingFilterSubsystem_SetActiveTargetingFilter Parms{};

	Parms.bActive = bActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6CombatTargetingFilterSubsystem.IsAreaExistTarget
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FBox&                      BoxArea                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6CombatTargetingFilterSubsystem::IsAreaExistTarget(const struct FBox& BoxArea) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CombatTargetingFilterSubsystem", "IsAreaExistTarget");

	Params::X6CombatTargetingFilterSubsystem_IsAreaExistTarget Parms{};

	Parms.BoxArea = std::move(BoxArea);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6CustomLevelSequenceActor.ReceiveLevelSequenceActorBeginAttach
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           AttachActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6CustomLevelSequenceActor::ReceiveLevelSequenceActorBeginAttach(class AActor* AttachActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CustomLevelSequenceActor", "ReceiveLevelSequenceActorBeginAttach");

	Params::X6CustomLevelSequenceActor_ReceiveLevelSequenceActorBeginAttach Parms{};

	Parms.AttachActor = AttachActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.X6CustomLevelSequenceActor.ReceiveLevelSequenceActorEndAttach
// (Event, Public, BlueprintEvent)

void AX6CustomLevelSequenceActor::ReceiveLevelSequenceActorEndAttach()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6CustomLevelSequenceActor", "ReceiveLevelSequenceActorEndAttach");

	UObject::ProcessEvent(Func, nullptr);
}


// Function X6Game.X6AbilitySystemBlueprintLibrary.ActorDoesContainerMatchTagQuery
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const class AActor*                     Actor                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagQuery&         TagQuery                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AbilitySystemBlueprintLibrary::ActorDoesContainerMatchTagQuery(const class AActor* Actor, const struct FGameplayTagQuery& TagQuery)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AbilitySystemBlueprintLibrary", "ActorDoesContainerMatchTagQuery");

	Params::X6AbilitySystemBlueprintLibrary_ActorDoesContainerMatchTagQuery Parms{};

	Parms.Actor = Actor;
	Parms.TagQuery = std::move(TagQuery);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AbilitySystemBlueprintLibrary.ActorHasAllGameplayTags
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const class AActor*                     Actor                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     TagContainer                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AbilitySystemBlueprintLibrary::ActorHasAllGameplayTags(const class AActor* Actor, const struct FGameplayTagContainer& TagContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AbilitySystemBlueprintLibrary", "ActorHasAllGameplayTags");

	Params::X6AbilitySystemBlueprintLibrary_ActorHasAllGameplayTags Parms{};

	Parms.Actor = Actor;
	Parms.TagContainer = std::move(TagContainer);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AbilitySystemBlueprintLibrary.ActorHasAnyGameplayTags
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const class AActor*                     Actor                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     TagContainer                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AbilitySystemBlueprintLibrary::ActorHasAnyGameplayTags(const class AActor* Actor, const struct FGameplayTagContainer& TagContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AbilitySystemBlueprintLibrary", "ActorHasAnyGameplayTags");

	Params::X6AbilitySystemBlueprintLibrary_ActorHasAnyGameplayTags Parms{};

	Parms.Actor = Actor;
	Parms.TagContainer = std::move(TagContainer);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AbilitySystemBlueprintLibrary.ActorHasGameplayTag
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class AActor*                     Actor                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              TagToCheck                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AbilitySystemBlueprintLibrary::ActorHasGameplayTag(const class AActor* Actor, const struct FGameplayTag& TagToCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AbilitySystemBlueprintLibrary", "ActorHasGameplayTag");

	Params::X6AbilitySystemBlueprintLibrary_ActorHasGameplayTag Parms{};

	Parms.Actor = Actor;
	Parms.TagToCheck = std::move(TagToCheck);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AbilitySystemBlueprintLibrary.ActorIsBoss
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class AActor*                     Actor                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AbilitySystemBlueprintLibrary::ActorIsBoss(const class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AbilitySystemBlueprintLibrary", "ActorIsBoss");

	Params::X6AbilitySystemBlueprintLibrary_ActorIsBoss Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AbilitySystemBlueprintLibrary.ActorIsEliteMonster
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class AActor*                     Actor                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AbilitySystemBlueprintLibrary::ActorIsEliteMonster(const class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AbilitySystemBlueprintLibrary", "ActorIsEliteMonster");

	Params::X6AbilitySystemBlueprintLibrary_ActorIsEliteMonster Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AbilitySystemBlueprintLibrary.ActorIsMonster
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class AActor*                     Actor                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AbilitySystemBlueprintLibrary::ActorIsMonster(const class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AbilitySystemBlueprintLibrary", "ActorIsMonster");

	Params::X6AbilitySystemBlueprintLibrary_ActorIsMonster Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AbilitySystemBlueprintLibrary.ActorIsNormalMonster
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class AActor*                     Actor                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AbilitySystemBlueprintLibrary::ActorIsNormalMonster(const class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AbilitySystemBlueprintLibrary", "ActorIsNormalMonster");

	Params::X6AbilitySystemBlueprintLibrary_ActorIsNormalMonster Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AbilitySystemBlueprintLibrary.AddLooseGameplayTag
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              GameplayTag                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AbilitySystemBlueprintLibrary::AddLooseGameplayTag(class AActor* Actor, const struct FGameplayTag& GameplayTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AbilitySystemBlueprintLibrary", "AddLooseGameplayTag");

	Params::X6AbilitySystemBlueprintLibrary_AddLooseGameplayTag Parms{};

	Parms.Actor = Actor;
	Parms.GameplayTag = std::move(GameplayTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AbilitySystemBlueprintLibrary.AddLooseGameplayTagName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName&                      GameplayTagName                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AbilitySystemBlueprintLibrary::AddLooseGameplayTagName(class AActor* Actor, const class FName& GameplayTagName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AbilitySystemBlueprintLibrary", "AddLooseGameplayTagName");

	Params::X6AbilitySystemBlueprintLibrary_AddLooseGameplayTagName Parms{};

	Parms.Actor = Actor;
	Parms.GameplayTagName = GameplayTagName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AbilitySystemBlueprintLibrary.ApplyConstantForceRootMotion
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class AActor*                     Actor                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Force                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                      StrengthOverTime                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERootMotionAccumulateMode               AccumulateMode                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInLocalSpace                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERootMotionFinishVelocityMode           FinishMode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ClampVelocity                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   SetVelocity                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnableGravity                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDisablePartialEndTick                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUseSensitiveLiftoffCheck                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UX6AbilitySystemBlueprintLibrary::ApplyConstantForceRootMotion(const class AActor* Actor, const struct FVector& Force, class UCurveFloat* StrengthOverTime, float Duration, ERootMotionAccumulateMode AccumulateMode, bool bInLocalSpace, ERootMotionFinishVelocityMode FinishMode, float ClampVelocity, const struct FVector& SetVelocity, bool bEnableGravity, bool bDisablePartialEndTick, bool bUseSensitiveLiftoffCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AbilitySystemBlueprintLibrary", "ApplyConstantForceRootMotion");

	Params::X6AbilitySystemBlueprintLibrary_ApplyConstantForceRootMotion Parms{};

	Parms.Actor = Actor;
	Parms.Force = std::move(Force);
	Parms.StrengthOverTime = StrengthOverTime;
	Parms.Duration = Duration;
	Parms.AccumulateMode = AccumulateMode;
	Parms.bInLocalSpace = bInLocalSpace;
	Parms.FinishMode = FinishMode;
	Parms.ClampVelocity = ClampVelocity;
	Parms.SetVelocity = std::move(SetVelocity);
	Parms.bEnableGravity = bEnableGravity;
	Parms.bDisablePartialEndTick = bDisablePartialEndTick;
	Parms.bUseSensitiveLiftoffCheck = bUseSensitiveLiftoffCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AbilitySystemBlueprintLibrary.CheckActorCanBeSeen
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class AActor*>&            IgnoreTraceActors                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AbilitySystemBlueprintLibrary::CheckActorCanBeSeen(class AActor* Actor, const TArray<class AActor*>& IgnoreTraceActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AbilitySystemBlueprintLibrary", "CheckActorCanBeSeen");

	Params::X6AbilitySystemBlueprintLibrary_CheckActorCanBeSeen Parms{};

	Parms.Actor = Actor;
	Parms.IgnoreTraceActors = std::move(IgnoreTraceActors);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AbilitySystemBlueprintLibrary.CurrentMontageJumpToSection
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*           InSkeletalMeshComponent                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SectionName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AbilitySystemBlueprintLibrary::CurrentMontageJumpToSection(class USkeletalMeshComponent* InSkeletalMeshComponent, class FName SectionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AbilitySystemBlueprintLibrary", "CurrentMontageJumpToSection");

	Params::X6AbilitySystemBlueprintLibrary_CurrentMontageJumpToSection Parms{};

	Parms.InSkeletalMeshComponent = InSkeletalMeshComponent;
	Parms.SectionName = SectionName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AbilitySystemBlueprintLibrary.DrawTargetingSelectionTaskAOE
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const class AActor*                     Actor                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTargetingPreset*           TargetingPreset                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FColor&                    Color                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FColor&                    InnerRingColor                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AbilitySystemBlueprintLibrary::DrawTargetingSelectionTaskAOE(const class AActor* Actor, const class UTargetingPreset* TargetingPreset, const struct FColor& Color, const struct FColor& InnerRingColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AbilitySystemBlueprintLibrary", "DrawTargetingSelectionTaskAOE");

	Params::X6AbilitySystemBlueprintLibrary_DrawTargetingSelectionTaskAOE Parms{};

	Parms.Actor = Actor;
	Parms.TargetingPreset = TargetingPreset;
	Parms.Color = std::move(Color);
	Parms.InnerRingColor = std::move(InnerRingColor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AbilitySystemBlueprintLibrary.GetRandomPointsFromSquare
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   SquareCenter                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   YawAngle                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   XLength                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   YLength                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   XNum                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   YNum                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FVector>            ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

const TArray<struct FVector> UX6AbilitySystemBlueprintLibrary::GetRandomPointsFromSquare(const struct FVector& SquareCenter, float YawAngle, float XLength, float YLength, int32 XNum, int32 YNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AbilitySystemBlueprintLibrary", "GetRandomPointsFromSquare");

	Params::X6AbilitySystemBlueprintLibrary_GetRandomPointsFromSquare Parms{};

	Parms.SquareCenter = std::move(SquareCenter);
	Parms.YawAngle = YawAngle;
	Parms.XLength = XLength;
	Parms.YLength = YLength;
	Parms.XNum = XNum;
	Parms.YNum = YNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AbilitySystemBlueprintLibrary.GetX6AbilitySystemComponent
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class AActor*                     Actor                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UX6AbilitySystemComponent*        ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UX6AbilitySystemComponent* UX6AbilitySystemBlueprintLibrary::GetX6AbilitySystemComponent(const class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AbilitySystemBlueprintLibrary", "GetX6AbilitySystemComponent");

	Params::X6AbilitySystemBlueprintLibrary_GetX6AbilitySystemComponent Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AbilitySystemBlueprintLibrary.MakeTargetingSourceContextWithParam
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FTargetingSourceContext          ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FTargetingSourceContext UX6AbilitySystemBlueprintLibrary::MakeTargetingSourceContextWithParam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AbilitySystemBlueprintLibrary", "MakeTargetingSourceContextWithParam");

	Params::X6AbilitySystemBlueprintLibrary_MakeTargetingSourceContextWithParam Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AbilitySystemBlueprintLibrary.RemoveLooseGameplayTag
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              GameplayTag                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AbilitySystemBlueprintLibrary::RemoveLooseGameplayTag(class AActor* Actor, const struct FGameplayTag& GameplayTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AbilitySystemBlueprintLibrary", "RemoveLooseGameplayTag");

	Params::X6AbilitySystemBlueprintLibrary_RemoveLooseGameplayTag Parms{};

	Parms.Actor = Actor;
	Parms.GameplayTag = std::move(GameplayTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AbilitySystemBlueprintLibrary.RemoveLooseGameplayTagName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName&                      GameplayTagName                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AbilitySystemBlueprintLibrary::RemoveLooseGameplayTagName(class AActor* Actor, const class FName& GameplayTagName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AbilitySystemBlueprintLibrary", "RemoveLooseGameplayTagName");

	Params::X6AbilitySystemBlueprintLibrary_RemoveLooseGameplayTagName Parms{};

	Parms.Actor = Actor;
	Parms.GameplayTagName = GameplayTagName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AbilitySystemBlueprintLibrary.RemoveRootMotionBySourceID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class AActor*                     Actor                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SourceId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AbilitySystemBlueprintLibrary::RemoveRootMotionBySourceID(const class AActor* Actor, int32 SourceId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AbilitySystemBlueprintLibrary", "RemoveRootMotionBySourceID");

	Params::X6AbilitySystemBlueprintLibrary_RemoveRootMotionBySourceID Parms{};

	Parms.Actor = Actor;
	Parms.SourceId = SourceId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AbilitySystemBlueprintLibrary.SendGameplayEventToActorWithRet
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              EventTag                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayEventData&        Payload                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AbilitySystemBlueprintLibrary::SendGameplayEventToActorWithRet(class AActor* Actor, const struct FGameplayTag& EventTag, const struct FGameplayEventData& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AbilitySystemBlueprintLibrary", "SendGameplayEventToActorWithRet");

	Params::X6AbilitySystemBlueprintLibrary_SendGameplayEventToActorWithRet Parms{};

	Parms.Actor = Actor;
	Parms.EventTag = std::move(EventTag);
	Parms.Payload = std::move(Payload);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AbilitySystemBlueprintLibrary.StopAnimMontage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*           InSkeletalMeshComponent                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UAnimMontage*               Montage                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OverrideBlendOutTime                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AbilitySystemBlueprintLibrary::StopAnimMontage(class USkeletalMeshComponent* InSkeletalMeshComponent, const class UAnimMontage* Montage, float OverrideBlendOutTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AbilitySystemBlueprintLibrary", "StopAnimMontage");

	Params::X6AbilitySystemBlueprintLibrary_StopAnimMontage Parms{};

	Parms.InSkeletalMeshComponent = InSkeletalMeshComponent;
	Parms.Montage = Montage;
	Parms.OverrideBlendOutTime = OverrideBlendOutTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AbilitySystemBlueprintLibrary.UpdateConstantForceBySourceID
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const class AActor*                     Actor                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SourceId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   NewForce                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AbilitySystemBlueprintLibrary::UpdateConstantForceBySourceID(const class AActor* Actor, int32 SourceId, const struct FVector& NewForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AbilitySystemBlueprintLibrary", "UpdateConstantForceBySourceID");

	Params::X6AbilitySystemBlueprintLibrary_UpdateConstantForceBySourceID Parms{};

	Parms.Actor = Actor;
	Parms.SourceId = SourceId;
	Parms.NewForce = std::move(NewForce);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6DaMiaoMainAnimInstance.PrepareInitializationData
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6DaMiaoMainAnimInstance::PrepareInitializationData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6DaMiaoMainAnimInstance", "PrepareInitializationData");

	Params::X6DaMiaoMainAnimInstance_PrepareInitializationData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6DaMiaoMainAnimInstance.GetCurFootIKFeatureTargetData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFootIKFeatureTargetDataV2       ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FFootIKFeatureTargetDataV2 UX6DaMiaoMainAnimInstance::GetCurFootIKFeatureTargetData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6DaMiaoMainAnimInstance", "GetCurFootIKFeatureTargetData");

	Params::X6DaMiaoMainAnimInstance_GetCurFootIKFeatureTargetData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6DispatchInputComponent.BindInputByPlayerController
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                InPlayerController                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6DispatchInputComponent::BindInputByPlayerController(class APlayerController* InPlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6DispatchInputComponent", "BindInputByPlayerController");

	Params::X6DispatchInputComponent_BindInputByPlayerController Parms{};

	Parms.InPlayerController = InPlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6DispatchInputComponent.UnBindInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6DispatchInputComponent::UnBindInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6DispatchInputComponent", "UnBindInput");

	Params::X6DispatchInputComponent_UnBindInput Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6DynamicObstacleComponent.ActivateObstacle
// (Final, Native, Public, BlueprintCallable)

void UX6DynamicObstacleComponent::ActivateObstacle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6DynamicObstacleComponent", "ActivateObstacle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6DynamicObstacleComponent.DeactivateObstacle
// (Final, Native, Public, BlueprintCallable)

void UX6DynamicObstacleComponent::DeactivateObstacle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6DynamicObstacleComponent", "DeactivateObstacle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6DynamicObstacleComponent.RebuildObstacle
// (Final, Native, Public, BlueprintCallable)

void UX6DynamicObstacleComponent::RebuildObstacle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6DynamicObstacleComponent", "RebuildObstacle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6EditableText.SetTextWithCursorStay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FText&                      InText                                                 (Parm, NativeAccessSpecifierPublic)

void UX6EditableText::SetTextWithCursorStay(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6EditableText", "SetTextWithCursorStay");

	Params::X6EditableText_SetTextWithCursorStay Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6EditableText.IsComposing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6EditableText::IsComposing() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6EditableText", "IsComposing");

	Params::X6EditableText_IsComposing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6EditableTextBox.IsComposing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6EditableTextBox::IsComposing() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6EditableTextBox", "IsComposing");

	Params::X6EditableTextBox_IsComposing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.MotionModifier_AdjustmentBlendWarp.GetAdjustmentBlendIKBoneTransformAndAlpha
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// const class USkeletalMeshComponent*     OwnerComp                                              (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             BoneName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform*                      OutTransform                                           (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  OutAlpha                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMotionModifier_AdjustmentBlendWarp::GetAdjustmentBlendIKBoneTransformAndAlpha(const class USkeletalMeshComponent* OwnerComp, class FName BoneName, struct FTransform* OutTransform, float* OutAlpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MotionModifier_AdjustmentBlendWarp", "GetAdjustmentBlendIKBoneTransformAndAlpha");

	Params::MotionModifier_AdjustmentBlendWarp_GetAdjustmentBlendIKBoneTransformAndAlpha Parms{};

	Parms.OwnerComp = OwnerComp;
	Parms.BoneName = BoneName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTransform != nullptr)
		*OutTransform = std::move(Parms.OutTransform);

	if (OutAlpha != nullptr)
		*OutAlpha = Parms.OutAlpha;
}


// Function X6Game.X6EffectWindZone.GetInfluenceActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AX6EffectWindZone::GetInfluenceActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6EffectWindZone", "GetInfluenceActor");

	Params::X6EffectWindZone_GetInfluenceActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6EffectWindZone.SetInfluenceActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6EffectWindZone::SetInfluenceActor(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6EffectWindZone", "SetInfluenceActor");

	Params::X6EffectWindZone_SetInfluenceActor Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6EffectWindZone.SetWindDirection
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   InWindDirection                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6EffectWindZone::SetWindDirection(const struct FVector& InWindDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6EffectWindZone", "SetWindDirection");

	Params::X6EffectWindZone_SetWindDirection Parms{};

	Parms.InWindDirection = std::move(InWindDirection);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6FileBlueprintLibrary.AESDecrypt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InMessageNeedDecrypt                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UX6FileBlueprintLibrary::AESDecrypt(const class FString& InMessageNeedDecrypt, const class FString& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6FileBlueprintLibrary", "AESDecrypt");

	Params::X6FileBlueprintLibrary_AESDecrypt Parms{};

	Parms.InMessageNeedDecrypt = std::move(InMessageNeedDecrypt);
	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6FileBlueprintLibrary.AESEncrypt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InMessageNeedEncrypt                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UX6FileBlueprintLibrary::AESEncrypt(const class FString& InMessageNeedEncrypt, const class FString& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6FileBlueprintLibrary", "AESEncrypt");

	Params::X6FileBlueprintLibrary_AESEncrypt Parms{};

	Parms.InMessageNeedEncrypt = std::move(InMessageNeedEncrypt);
	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6FileBlueprintLibrary.CompressImageWithEncryption
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    SourceImgPath                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    DestPath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    EncryionKey                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Quality                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6FileBlueprintLibrary::CompressImageWithEncryption(const class FString& SourceImgPath, const class FString& DestPath, const class FString& EncryionKey, int32 Quality)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6FileBlueprintLibrary", "CompressImageWithEncryption");

	Params::X6FileBlueprintLibrary_CompressImageWithEncryption Parms{};

	Parms.SourceImgPath = std::move(SourceImgPath);
	Parms.DestPath = std::move(DestPath);
	Parms.EncryionKey = std::move(EncryionKey);
	Parms.Quality = Quality;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6FileBlueprintLibrary.DeleteInternalFile
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    DeleteFilePath                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6FileBlueprintLibrary::DeleteInternalFile(const class FString& DeleteFilePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6FileBlueprintLibrary", "DeleteInternalFile");

	Params::X6FileBlueprintLibrary_DeleteInternalFile Parms{};

	Parms.DeleteFilePath = std::move(DeleteFilePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6FileBlueprintLibrary.DeleteInternalFileAsync
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    DeleteFilePaths                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool Ret, const class FString& Path)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6FileBlueprintLibrary::DeleteInternalFileAsync(const class FString& DeleteFilePaths, TDelegate<void(bool Ret, const class FString& Path)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6FileBlueprintLibrary", "DeleteInternalFileAsync");

	Params::X6FileBlueprintLibrary_DeleteInternalFileAsync Parms{};

	Parms.DeleteFilePaths = std::move(DeleteFilePaths);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6FileBlueprintLibrary.ForceDestroyAsyncCreatedTexture2D
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTexture2D*                       InTexture                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6FileBlueprintLibrary::ForceDestroyAsyncCreatedTexture2D(class UTexture2D* InTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6FileBlueprintLibrary", "ForceDestroyAsyncCreatedTexture2D");

	Params::X6FileBlueprintLibrary_ForceDestroyAsyncCreatedTexture2D Parms{};

	Parms.InTexture = InTexture;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6FileBlueprintLibrary.GetCroppedTexture
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UTexture2D*                       Tex                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 StartPos                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Width                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Height                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UX6FileBlueprintLibrary::GetCroppedTexture(class UTexture2D* Tex, const struct FVector2D& StartPos, int32 Width, int32 Height)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6FileBlueprintLibrary", "GetCroppedTexture");

	Params::X6FileBlueprintLibrary_GetCroppedTexture Parms{};

	Parms.Tex = Tex;
	Parms.StartPos = std::move(StartPos);
	Parms.Width = Width;
	Parms.Height = Height;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6FileBlueprintLibrary.GetCustomDataFromPhotos
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class FString>&            InPhotoPathList                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const class FString&                    EncryptionKey                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UX6FileBlueprintLibrary::GetCustomDataFromPhotos(const TArray<class FString>& InPhotoPathList, const class FString& EncryptionKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6FileBlueprintLibrary", "GetCustomDataFromPhotos");

	Params::X6FileBlueprintLibrary_GetCustomDataFromPhotos Parms{};

	Parms.InPhotoPathList = std::move(InPhotoPathList);
	Parms.EncryptionKey = std::move(EncryptionKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6FileBlueprintLibrary.GetFileModificationTime
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InPath                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UX6FileBlueprintLibrary::GetFileModificationTime(const class FString& InPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6FileBlueprintLibrary", "GetFileModificationTime");

	Params::X6FileBlueprintLibrary_GetFileModificationTime Parms{};

	Parms.InPath = std::move(InPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6FileBlueprintLibrary.GetFileNames
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    InDirPath                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>*                  OutFileNames                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6FileBlueprintLibrary::GetFileNames(const class FString& InDirPath, TArray<class FString>* OutFileNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6FileBlueprintLibrary", "GetFileNames");

	Params::X6FileBlueprintLibrary_GetFileNames Parms{};

	Parms.InDirPath = std::move(InDirPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutFileNames != nullptr)
		*OutFileNames = std::move(Parms.OutFileNames);

	return Parms.ReturnValue;
}


// Function X6Game.X6FileBlueprintLibrary.GetFileSizeInKBOfPath
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InPath                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

double UX6FileBlueprintLibrary::GetFileSizeInKBOfPath(const class FString& InPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6FileBlueprintLibrary", "GetFileSizeInKBOfPath");

	Params::X6FileBlueprintLibrary_GetFileSizeInKBOfPath Parms{};

	Parms.InPath = std::move(InPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6FileBlueprintLibrary.GetGamePath
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EGameSavedDirType                       DirType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UX6FileBlueprintLibrary::GetGamePath(EGameSavedDirType DirType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6FileBlueprintLibrary", "GetGamePath");

	Params::X6FileBlueprintLibrary_GetGamePath Parms{};

	Parms.DirType = DirType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6FileBlueprintLibrary.GetStorageSizeInMBOfPath
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InPath                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

double UX6FileBlueprintLibrary::GetStorageSizeInMBOfPath(const class FString& InPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6FileBlueprintLibrary", "GetStorageSizeInMBOfPath");

	Params::X6FileBlueprintLibrary_GetStorageSizeInMBOfPath Parms{};

	Parms.InPath = std::move(InPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6FileBlueprintLibrary.ReadAsResizedTexture
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    TexPath                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Ratio                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSingleUse                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UX6FileBlueprintLibrary::ReadAsResizedTexture(const class FString& TexPath, const float Ratio, bool bSingleUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6FileBlueprintLibrary", "ReadAsResizedTexture");

	Params::X6FileBlueprintLibrary_ReadAsResizedTexture Parms{};

	Parms.TexPath = std::move(TexPath);
	Parms.Ratio = Ratio;
	Parms.bSingleUse = bSingleUse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6FileBlueprintLibrary.ReadAsResizedTextureAsync
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    TexPath                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Ratio                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& Path, class UTexture2D* Tex)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSingleUse                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6FileBlueprintLibrary::ReadAsResizedTextureAsync(const class FString& TexPath, const float Ratio, TDelegate<void(const class FString& Path, class UTexture2D* Tex)> Callback, bool bSingleUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6FileBlueprintLibrary", "ReadAsResizedTextureAsync");

	Params::X6FileBlueprintLibrary_ReadAsResizedTextureAsync Parms{};

	Parms.TexPath = std::move(TexPath);
	Parms.Ratio = Ratio;
	Parms.Callback = Callback;
	Parms.bSingleUse = bSingleUse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6FileBlueprintLibrary.ReadAsResizedTextureWithEncryptionCheck
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    TexPath                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Ratio                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    EncryptionKey                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSingleUse                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UX6FileBlueprintLibrary::ReadAsResizedTextureWithEncryptionCheck(const class FString& TexPath, const float Ratio, const class FString& EncryptionKey, bool bSingleUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6FileBlueprintLibrary", "ReadAsResizedTextureWithEncryptionCheck");

	Params::X6FileBlueprintLibrary_ReadAsResizedTextureWithEncryptionCheck Parms{};

	Parms.TexPath = std::move(TexPath);
	Parms.Ratio = Ratio;
	Parms.EncryptionKey = std::move(EncryptionKey);
	Parms.bSingleUse = bSingleUse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6FileBlueprintLibrary.ReadAsResizedTextureWithEncryptionCheckAsync
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    TexPath                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Ratio                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    EncryptionKey                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& Path, class UTexture2D* Tex)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSingleUse                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6FileBlueprintLibrary::ReadAsResizedTextureWithEncryptionCheckAsync(const class FString& TexPath, const float Ratio, const class FString& EncryptionKey, TDelegate<void(const class FString& Path, class UTexture2D* Tex)> Callback, bool bSingleUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6FileBlueprintLibrary", "ReadAsResizedTextureWithEncryptionCheckAsync");

	Params::X6FileBlueprintLibrary_ReadAsResizedTextureWithEncryptionCheckAsync Parms{};

	Parms.TexPath = std::move(TexPath);
	Parms.Ratio = Ratio;
	Parms.EncryptionKey = std::move(EncryptionKey);
	Parms.Callback = Callback;
	Parms.bSingleUse = bSingleUse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6FileBlueprintLibrary.ReadAsTexture
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    TexPath                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UX6FileBlueprintLibrary::ReadAsTexture(const class FString& TexPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6FileBlueprintLibrary", "ReadAsTexture");

	Params::X6FileBlueprintLibrary_ReadAsTexture Parms{};

	Parms.TexPath = std::move(TexPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6FileBlueprintLibrary.ReadAsTextureAsync
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    TexPath                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& Path, class UTexture2D* Tex)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6FileBlueprintLibrary::ReadAsTextureAsync(const class FString& TexPath, TDelegate<void(const class FString& Path, class UTexture2D* Tex)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6FileBlueprintLibrary", "ReadAsTextureAsync");

	Params::X6FileBlueprintLibrary_ReadAsTextureAsync Parms{};

	Parms.TexPath = std::move(TexPath);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6FileBlueprintLibrary.ReadAsTextureWithEncryptionCheckAsync
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    TexPath                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    EncryptionKey                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& Path, class UTexture2D* Tex)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSingleUse                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6FileBlueprintLibrary::ReadAsTextureWithEncryptionCheckAsync(const class FString& TexPath, const class FString& EncryptionKey, TDelegate<void(const class FString& Path, class UTexture2D* Tex)> Callback, bool bSingleUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6FileBlueprintLibrary", "ReadAsTextureWithEncryptionCheckAsync");

	Params::X6FileBlueprintLibrary_ReadAsTextureWithEncryptionCheckAsync Parms{};

	Parms.TexPath = std::move(TexPath);
	Parms.EncryptionKey = std::move(EncryptionKey);
	Parms.Callback = Callback;
	Parms.bSingleUse = bSingleUse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6FileBlueprintLibrary.ReadFile
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    FilePath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>*                          Result                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6FileBlueprintLibrary::ReadFile(const class FString& FilePath, TArray<uint8>* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6FileBlueprintLibrary", "ReadFile");

	Params::X6FileBlueprintLibrary_ReadFile Parms{};

	Parms.FilePath = std::move(FilePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = std::move(Parms.Result);

	return Parms.ReturnValue;
}


// Function X6Game.X6FileBlueprintLibrary.ReadPhotosAsResizedTextureAsync
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class FString>&            PhotoPaths                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const float                             Ratio                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const TArray<class FString>& Paths, const TArray<class UTexture2D*>& Tex)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSingleUse                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6FileBlueprintLibrary::ReadPhotosAsResizedTextureAsync(const TArray<class FString>& PhotoPaths, const float Ratio, TDelegate<void(const TArray<class FString>& Paths, const TArray<class UTexture2D*>& Tex)> Callback, bool bSingleUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6FileBlueprintLibrary", "ReadPhotosAsResizedTextureAsync");

	Params::X6FileBlueprintLibrary_ReadPhotosAsResizedTextureAsync Parms{};

	Parms.PhotoPaths = std::move(PhotoPaths);
	Parms.Ratio = Ratio;
	Parms.Callback = Callback;
	Parms.bSingleUse = bSingleUse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6FileBlueprintLibrary.ReadPhotosAsResizedTextureWithEncryptionCheckAsync
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class FString>&            PhotoPaths                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const float                             Ratio                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    EncryptionKey                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const TArray<class FString>& Paths, const TArray<class UTexture2D*>& Tex)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSingleUse                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6FileBlueprintLibrary::ReadPhotosAsResizedTextureWithEncryptionCheckAsync(const TArray<class FString>& PhotoPaths, const float Ratio, const class FString& EncryptionKey, TDelegate<void(const TArray<class FString>& Paths, const TArray<class UTexture2D*>& Tex)> Callback, bool bSingleUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6FileBlueprintLibrary", "ReadPhotosAsResizedTextureWithEncryptionCheckAsync");

	Params::X6FileBlueprintLibrary_ReadPhotosAsResizedTextureWithEncryptionCheckAsync Parms{};

	Parms.PhotoPaths = std::move(PhotoPaths);
	Parms.Ratio = Ratio;
	Parms.EncryptionKey = std::move(EncryptionKey);
	Parms.Callback = Callback;
	Parms.bSingleUse = bSingleUse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6FileBlueprintLibrary.ReadPhotosAsTextureAsync
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class FString>&            PhotoPaths                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const TArray<class FString>& Paths, const TArray<class UTexture2D*>& Tex)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6FileBlueprintLibrary::ReadPhotosAsTextureAsync(const TArray<class FString>& PhotoPaths, TDelegate<void(const TArray<class FString>& Paths, const TArray<class UTexture2D*>& Tex)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6FileBlueprintLibrary", "ReadPhotosAsTextureAsync");

	Params::X6FileBlueprintLibrary_ReadPhotosAsTextureAsync Parms{};

	Parms.PhotoPaths = std::move(PhotoPaths);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6FileBlueprintLibrary.ReadPhotosAsTextureWithEncryptionCheckAsync
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class FString>&            PhotoPaths                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const class FString&                    EncryptionKey                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const TArray<class FString>& Paths, const TArray<class UTexture2D*>& Tex)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6FileBlueprintLibrary::ReadPhotosAsTextureWithEncryptionCheckAsync(const TArray<class FString>& PhotoPaths, const class FString& EncryptionKey, TDelegate<void(const TArray<class FString>& Paths, const TArray<class UTexture2D*>& Tex)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6FileBlueprintLibrary", "ReadPhotosAsTextureWithEncryptionCheckAsync");

	Params::X6FileBlueprintLibrary_ReadPhotosAsTextureWithEncryptionCheckAsync Parms{};

	Parms.PhotoPaths = std::move(PhotoPaths);
	Parms.EncryptionKey = std::move(EncryptionKey);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6FileBlueprintLibrary.ResizeAndSaveTextureWithEncryption
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTexture2D*                       Texture                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InPath                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Ratio                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    EncryionKey                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Quality                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    CustomData                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6FileBlueprintLibrary::ResizeAndSaveTextureWithEncryption(class UTexture2D* Texture, const class FString& InPath, const float Ratio, const class FString& EncryionKey, int32 Quality, const class FString& CustomData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6FileBlueprintLibrary", "ResizeAndSaveTextureWithEncryption");

	Params::X6FileBlueprintLibrary_ResizeAndSaveTextureWithEncryption Parms{};

	Parms.Texture = Texture;
	Parms.InPath = std::move(InPath);
	Parms.Ratio = Ratio;
	Parms.EncryionKey = std::move(EncryionKey);
	Parms.Quality = Quality;
	Parms.CustomData = std::move(CustomData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6FileBlueprintLibrary.SaveImageToAlbum
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    FromPath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    TargetDir                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    NewFileName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool Result)>            Delegate                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6FileBlueprintLibrary::SaveImageToAlbum(class UObject* Context, const class FString& FromPath, const class FString& TargetDir, const class FString& NewFileName, TDelegate<void(bool Result)> Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6FileBlueprintLibrary", "SaveImageToAlbum");

	Params::X6FileBlueprintLibrary_SaveImageToAlbum Parms{};

	Parms.Context = Context;
	Parms.FromPath = std::move(FromPath);
	Parms.TargetDir = std::move(TargetDir);
	Parms.NewFileName = std::move(NewFileName);
	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6FileBlueprintLibrary.SaveRenderTexture
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    SavePath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTextureRenderTarget2D*           Tex                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Quality                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6FileBlueprintLibrary::SaveRenderTexture(const class FString& SavePath, class UTextureRenderTarget2D* Tex, int32 Quality)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6FileBlueprintLibrary", "SaveRenderTexture");

	Params::X6FileBlueprintLibrary_SaveRenderTexture Parms{};

	Parms.SavePath = std::move(SavePath);
	Parms.Tex = Tex;
	Parms.Quality = Quality;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6FileBlueprintLibrary.SaveRenderTextureWithEncryption
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    SavePath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTextureRenderTarget2D*           Tex                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    EncryionKey                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Quality                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    CustomData                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6FileBlueprintLibrary::SaveRenderTextureWithEncryption(const class FString& SavePath, class UTextureRenderTarget2D* Tex, const class FString& EncryionKey, int32 Quality, const class FString& CustomData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6FileBlueprintLibrary", "SaveRenderTextureWithEncryption");

	Params::X6FileBlueprintLibrary_SaveRenderTextureWithEncryption Parms{};

	Parms.SavePath = std::move(SavePath);
	Parms.Tex = Tex;
	Parms.EncryionKey = std::move(EncryionKey);
	Parms.Quality = Quality;
	Parms.CustomData = std::move(CustomData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6FileBlueprintLibrary.SaveTexture
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    SavePath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       Tex                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Quality                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6FileBlueprintLibrary::SaveTexture(const class FString& SavePath, class UTexture2D* Tex, int32 Quality)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6FileBlueprintLibrary", "SaveTexture");

	Params::X6FileBlueprintLibrary_SaveTexture Parms{};

	Parms.SavePath = std::move(SavePath);
	Parms.Tex = Tex;
	Parms.Quality = Quality;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6FileBlueprintLibrary.SaveTextureAsync
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    SavePath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       Tex                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Quality                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool Ret, const class FString& Path)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6FileBlueprintLibrary::SaveTextureAsync(const class FString& SavePath, class UTexture2D* Tex, int32 Quality, TDelegate<void(bool Ret, const class FString& Path)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6FileBlueprintLibrary", "SaveTextureAsync");

	Params::X6FileBlueprintLibrary_SaveTextureAsync Parms{};

	Parms.SavePath = std::move(SavePath);
	Parms.Tex = Tex;
	Parms.Quality = Quality;
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6FileBlueprintLibrary.SaveTextureWithEncryptionAsync
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    SavePath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       Tex                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    EncryionKey                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Quality                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    CustomData                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool Ret, const class FString& Path)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6FileBlueprintLibrary::SaveTextureWithEncryptionAsync(const class FString& SavePath, class UTexture2D* Tex, const class FString& EncryionKey, int32 Quality, const class FString& CustomData, TDelegate<void(bool Ret, const class FString& Path)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6FileBlueprintLibrary", "SaveTextureWithEncryptionAsync");

	Params::X6FileBlueprintLibrary_SaveTextureWithEncryptionAsync Parms{};

	Parms.SavePath = std::move(SavePath);
	Parms.Tex = Tex;
	Parms.EncryionKey = std::move(EncryionKey);
	Parms.Quality = Quality;
	Parms.CustomData = std::move(CustomData);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6FileBlueprintLibrary.SetFileHidden_WindowsOnly
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InPath                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InHidden                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6FileBlueprintLibrary::SetFileHidden_WindowsOnly(const class FString& InPath, bool InHidden)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6FileBlueprintLibrary", "SetFileHidden_WindowsOnly");

	Params::X6FileBlueprintLibrary_SetFileHidden_WindowsOnly Parms{};

	Parms.InPath = std::move(InPath);
	Parms.InHidden = InHidden;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6FlyItemLogicComponent.GetSpeedRateValue
// (Final, Native, Protected)
// Parameters:
// float                                   RateValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6FlyItemLogicComponent::GetSpeedRateValue(float RateValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6FlyItemLogicComponent", "GetSpeedRateValue");

	Params::X6FlyItemLogicComponent_GetSpeedRateValue Parms{};

	Parms.RateValue = RateValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6FlyItemLogicComponent.InitData
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UCurveFloat*                      InSpeedCurve                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBaseSpeed                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   inDuration                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InSpeedUpTime                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FX6FlyItemTraceContext&    InCollisionTraceContext                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FX6FlyItemTraceContext&    InHitTraceContext                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   InRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InFloorAngle                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InWallAngle                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InToLevelOffset                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  InTargetComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InTargetActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InFollowRefreshInterval                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  InFollowTargetRotator                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// const struct FRotator&                  InFollowCanRotator                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UX6FlyItemLogicComponent::InitData(class UCurveFloat* InSpeedCurve, float InBaseSpeed, float inDuration, float InSpeedUpTime, const struct FX6FlyItemTraceContext& InCollisionTraceContext, const struct FX6FlyItemTraceContext& InHitTraceContext, float InRadius, float InFloorAngle, float InWallAngle, float InToLevelOffset, class USceneComponent* InTargetComponent, class AActor* InTargetActor, float InFollowRefreshInterval, const struct FRotator& InFollowTargetRotator, const struct FRotator& InFollowCanRotator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6FlyItemLogicComponent", "InitData");

	Params::X6FlyItemLogicComponent_InitData Parms{};

	Parms.InSpeedCurve = InSpeedCurve;
	Parms.InBaseSpeed = InBaseSpeed;
	Parms.inDuration = inDuration;
	Parms.InSpeedUpTime = InSpeedUpTime;
	Parms.InCollisionTraceContext = std::move(InCollisionTraceContext);
	Parms.InHitTraceContext = std::move(InHitTraceContext);
	Parms.InRadius = InRadius;
	Parms.InFloorAngle = InFloorAngle;
	Parms.InWallAngle = InWallAngle;
	Parms.InToLevelOffset = InToLevelOffset;
	Parms.InTargetComponent = InTargetComponent;
	Parms.InTargetActor = InTargetActor;
	Parms.InFollowRefreshInterval = InFollowRefreshInterval;
	Parms.InFollowTargetRotator = std::move(InFollowTargetRotator);
	Parms.InFollowCanRotator = std::move(InFollowCanRotator);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6FlyItemLogicComponent.K2_DoPendingDestroy
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bHitDamage                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           HitActor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6FlyItemLogicComponent::K2_DoPendingDestroy(bool bHitDamage, class AActor* HitActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6FlyItemLogicComponent", "K2_DoPendingDestroy");

	Params::X6FlyItemLogicComponent_K2_DoPendingDestroy Parms{};

	Parms.bHitDamage = bHitDamage;
	Parms.HitActor = HitActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6FlyItemLogicComponent.SetCacheDamiaoActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6FlyItemLogicComponent::SetCacheDamiaoActor(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6FlyItemLogicComponent", "SetCacheDamiaoActor");

	Params::X6FlyItemLogicComponent_SetCacheDamiaoActor Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6FlyItemLogicComponent.TickCollision
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   StartLocation                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   EndLocation                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6FlyItemLogicComponent::TickCollision(const struct FVector& StartLocation, const struct FVector& EndLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6FlyItemLogicComponent", "TickCollision");

	Params::X6FlyItemLogicComponent_TickCollision Parms{};

	Parms.StartLocation = std::move(StartLocation);
	Parms.EndLocation = std::move(EndLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6FlyItemLogicComponent.K2_ShouldDestroyByActor
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class AActor*                           HitActor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6FlyItemLogicComponent::K2_ShouldDestroyByActor(class AActor* HitActor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6FlyItemLogicComponent", "K2_ShouldDestroyByActor");

	Params::X6FlyItemLogicComponent_K2_ShouldDestroyByActor Parms{};

	Parms.HitActor = HitActor;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function X6Game.X6FlyItemLogicComponent.K2_TickHit
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent, Const)
// Parameters:
// const struct FVector&                   StartLocation                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FHitResult>&        HitResults                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UX6FlyItemLogicComponent::K2_TickHit(const struct FVector& StartLocation, const TArray<struct FHitResult>& HitResults) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6FlyItemLogicComponent", "K2_TickHit");

	Params::X6FlyItemLogicComponent_K2_TickHit Parms{};

	Parms.StartLocation = std::move(StartLocation);
	Parms.HitResults = std::move(HitResults);

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.X6AnimNotifyState_TimedNiagaraEffect.GetSpawnedEffect
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class UMeshComponent*                   MeshComp                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFXSystemComponent*               ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFXSystemComponent* UX6AnimNotifyState_TimedNiagaraEffect::GetSpawnedEffect(class UMeshComponent* MeshComp) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AnimNotifyState_TimedNiagaraEffect", "GetSpawnedEffect");

	Params::X6AnimNotifyState_TimedNiagaraEffect_GetSpawnedEffect Parms{};

	Parms.MeshComp = MeshComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6FollowSplineMovementComponent.GetSplineBoundBox
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FBoxSphereBounds                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FBoxSphereBounds UX6FollowSplineMovementComponent::GetSplineBoundBox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6FollowSplineMovementComponent", "GetSplineBoundBox");

	Params::X6FollowSplineMovementComponent_GetSplineBoundBox Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6FollowSplineMovementComponent.OnPopObjectPool
// (Native, Public, BlueprintCallable)

void UX6FollowSplineMovementComponent::OnPopObjectPool()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6FollowSplineMovementComponent", "OnPopObjectPool");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6FollowSplineMovementComponent.OnPushObjectPool
// (Native, Public, BlueprintCallable)

void UX6FollowSplineMovementComponent::OnPushObjectPool()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6FollowSplineMovementComponent", "OnPushObjectPool");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6FollowSplineMovementComponent.RequestKeepOffLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   InWorldLocation                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6FollowSplineMovementComponent::RequestKeepOffLocation(const struct FVector& InWorldLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6FollowSplineMovementComponent", "RequestKeepOffLocation");

	Params::X6FollowSplineMovementComponent_RequestKeepOffLocation Parms{};

	Parms.InWorldLocation = std::move(InWorldLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6FollowSplineMovementComponent.RequestStartMove
// (Final, Native, Public, BlueprintCallable)

void UX6FollowSplineMovementComponent::RequestStartMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6FollowSplineMovementComponent", "RequestStartMove");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6FollowSplineMovementComponent.RequestStopMove
// (Final, Native, Public, BlueprintCallable)

void UX6FollowSplineMovementComponent::RequestStopMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6FollowSplineMovementComponent", "RequestStopMove");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6FollowSplineMovementComponent.SetAllowRootMotionTickPose
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewAllowRootMotionTickPose                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6FollowSplineMovementComponent::SetAllowRootMotionTickPose(bool bNewAllowRootMotionTickPose)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6FollowSplineMovementComponent", "SetAllowRootMotionTickPose");

	Params::X6FollowSplineMovementComponent_SetAllowRootMotionTickPose Parms{};

	Parms.bNewAllowRootMotionTickPose = bNewAllowRootMotionTickPose;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6FollowSplineMovementComponent.SetFastMovingTurnSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InFastMovingTurnSpeed                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6FollowSplineMovementComponent::SetFastMovingTurnSpeed(float InFastMovingTurnSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6FollowSplineMovementComponent", "SetFastMovingTurnSpeed");

	Params::X6FollowSplineMovementComponent_SetFastMovingTurnSpeed Parms{};

	Parms.InFastMovingTurnSpeed = InFastMovingTurnSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6FollowSplineMovementComponent.SetMoveConfig
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InMovingTurnSpeed                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InFastMovingTurnSpeed                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InAvoidOffsetDistance                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InAvoidTraceCapsuleHalfHeightScale                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InAvoidCheckSweepAngle                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InAvoidReturnCenterThreshold                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6FollowSplineMovementComponent::SetMoveConfig(float InMovingTurnSpeed, float InFastMovingTurnSpeed, float InAvoidOffsetDistance, float InAvoidTraceCapsuleHalfHeightScale, float InAvoidCheckSweepAngle, float InAvoidReturnCenterThreshold)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6FollowSplineMovementComponent", "SetMoveConfig");

	Params::X6FollowSplineMovementComponent_SetMoveConfig Parms{};

	Parms.InMovingTurnSpeed = InMovingTurnSpeed;
	Parms.InFastMovingTurnSpeed = InFastMovingTurnSpeed;
	Parms.InAvoidOffsetDistance = InAvoidOffsetDistance;
	Parms.InAvoidTraceCapsuleHalfHeightScale = InAvoidTraceCapsuleHalfHeightScale;
	Parms.InAvoidCheckSweepAngle = InAvoidCheckSweepAngle;
	Parms.InAvoidReturnCenterThreshold = InAvoidReturnCenterThreshold;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6FollowSplineMovementComponent.SetMoveSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InMoveSpeed                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6FollowSplineMovementComponent::SetMoveSpeed(float InMoveSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6FollowSplineMovementComponent", "SetMoveSpeed");

	Params::X6FollowSplineMovementComponent_SetMoveSpeed Parms{};

	Parms.InMoveSpeed = InMoveSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6FollowSplineMovementComponent.SetMoveVerticalSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InMoveVerticalSpeed                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6FollowSplineMovementComponent::SetMoveVerticalSpeed(float InMoveVerticalSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6FollowSplineMovementComponent", "SetMoveVerticalSpeed");

	Params::X6FollowSplineMovementComponent_SetMoveVerticalSpeed Parms{};

	Parms.InMoveVerticalSpeed = InMoveVerticalSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6FollowSplineMovementComponent.SetPathNodeInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const TMap<int32, struct FSplinePathNodeInfo>&PathNodeInfo                                           (Parm, NativeAccessSpecifierPublic)

void UX6FollowSplineMovementComponent::SetPathNodeInfo(const TMap<int32, struct FSplinePathNodeInfo>& PathNodeInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6FollowSplineMovementComponent", "SetPathNodeInfo");

	Params::X6FollowSplineMovementComponent_SetPathNodeInfo Parms{};

	Parms.PathNodeInfo = std::move(PathNodeInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6FollowSplineMovementComponent.SetShouldReturnWhenEnd
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewReturn                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6FollowSplineMovementComponent::SetShouldReturnWhenEnd(bool bNewReturn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6FollowSplineMovementComponent", "SetShouldReturnWhenEnd");

	Params::X6FollowSplineMovementComponent_SetShouldReturnWhenEnd Parms{};

	Parms.bNewReturn = bNewReturn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6FollowSplineMovementComponent.SetTargetSplinePath
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class USplineComponent*           InTargetSplinePathComponent                            (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6FollowSplineMovementComponent::SetTargetSplinePath(const class USplineComponent* InTargetSplinePathComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6FollowSplineMovementComponent", "SetTargetSplinePath");

	Params::X6FollowSplineMovementComponent_SetTargetSplinePath Parms{};

	Parms.InTargetSplinePathComponent = InTargetSplinePathComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6FollowSplineMovementComponent.SetTriggerFastTurnYawDistance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InTriggerFastTurnYawDistance                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6FollowSplineMovementComponent::SetTriggerFastTurnYawDistance(float InTriggerFastTurnYawDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6FollowSplineMovementComponent", "SetTriggerFastTurnYawDistance");

	Params::X6FollowSplineMovementComponent_SetTriggerFastTurnYawDistance Parms{};

	Parms.InTriggerFastTurnYawDistance = InTriggerFastTurnYawDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6FollowSplineMovementComponent.StopKeepOffLocation
// (Final, Native, Public, BlueprintCallable)

void UX6FollowSplineMovementComponent::StopKeepOffLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6FollowSplineMovementComponent", "StopKeepOffLocation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6FollowSplineMovementComponent.TriggerReactToNikki
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   TurnToNikkiYaw                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReactTimeLength                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    inbReactWithoutTurn                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6FollowSplineMovementComponent::TriggerReactToNikki(float TurnToNikkiYaw, float ReactTimeLength, bool inbReactWithoutTurn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6FollowSplineMovementComponent", "TriggerReactToNikki");

	Params::X6FollowSplineMovementComponent_TriggerReactToNikki Parms{};

	Parms.TurnToNikkiYaw = TurnToNikkiYaw;
	Parms.ReactTimeLength = ReactTimeLength;
	Parms.inbReactWithoutTurn = inbReactWithoutTurn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6FollowSplineMovementComponent.TriggerTurnInReact
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   TurnToNikkiYaw                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6FollowSplineMovementComponent::TriggerTurnInReact(float TurnToNikkiYaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6FollowSplineMovementComponent", "TriggerTurnInReact");

	Params::X6FollowSplineMovementComponent_TriggerTurnInReact Parms{};

	Parms.TurnToNikkiYaw = TurnToNikkiYaw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6GameInstance.GetActorsByTag
// (Final, Native, Public)
// Parameters:
// const class FString&                    Tag                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> UX6GameInstance::GetActorsByTag(const class FString& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameInstance", "GetActorsByTag");

	Params::X6GameInstance_GetActorsByTag Parms{};

	Parms.Tag = std::move(Tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameInstance.GetAirPathfindManager
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ADonNavigationManagerUnbound*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ADonNavigationManagerUnbound* UX6GameInstance::GetAirPathfindManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameInstance", "GetAirPathfindManager");

	Params::X6GameInstance_GetAirPathfindManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameInstance.GetInputProcessorHelper
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UX6InputProcessorHelper*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UX6InputProcessorHelper* UX6GameInstance::GetInputProcessorHelper()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameInstance", "GetInputProcessorHelper");

	Params::X6GameInstance_GetInputProcessorHelper Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameInstance.GetPaperDissolveManager
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APaperDissolveManager*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APaperDissolveManager* UX6GameInstance::GetPaperDissolveManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameInstance", "GetPaperDissolveManager");

	Params::X6GameInstance_GetPaperDissolveManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameInstance.GetUIMultiFoliageInteractionManager
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UX6GameInstance::GetUIMultiFoliageInteractionManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameInstance", "GetUIMultiFoliageInteractionManager");

	Params::X6GameInstance_GetUIMultiFoliageInteractionManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameInstance.GetUIPFManager
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const EUIPFManagerType&                 UIPFManagerType                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AUIPFManager*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AUIPFManager* UX6GameInstance::GetUIPFManager(const EUIPFManagerType& UIPFManagerType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameInstance", "GetUIPFManager");

	Params::X6GameInstance_GetUIPFManager Parms{};

	Parms.UIPFManagerType = UIPFManagerType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameInstance.GetUIWSManager
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UX6GameInstance::GetUIWSManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameInstance", "GetUIWSManager");

	Params::X6GameInstance_GetUIWSManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameInstance.OnSetSpawnerCachedata
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6GameInstance::OnSetSpawnerCachedata(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameInstance", "OnSetSpawnerCachedata");

	Params::X6GameInstance_OnSetSpawnerCachedata Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.X6Pawn.AttributeChange
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    AttributeName                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6Pawn::AttributeChange(const class FString& AttributeName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Pawn", "AttributeChange");

	Params::X6Pawn_AttributeChange Parms{};

	Parms.AttributeName = std::move(AttributeName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6Pawn.PostServerInit
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bServer                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6Pawn::PostServerInit(bool bServer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Pawn", "PostServerInit");

	Params::X6Pawn_PostServerInit Parms{};

	Parms.bServer = bServer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.X6Pawn.ServerInit
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bServer                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6Pawn::ServerInit(bool bServer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Pawn", "ServerInit");

	Params::X6Pawn_ServerInit Parms{};

	Parms.bServer = bServer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.X6Pawn.X6_AddTag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const TArray<class FName>&              NewX6Tags                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void AX6Pawn::X6_AddTag(const TArray<class FName>& NewX6Tags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Pawn", "X6_AddTag");

	Params::X6Pawn_X6_AddTag Parms{};

	Parms.NewX6Tags = std::move(NewX6Tags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6Pawn.X6_DeleteTag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    strTag                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6Pawn::X6_DeleteTag(const class FString& strTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Pawn", "X6_DeleteTag");

	Params::X6Pawn_X6_DeleteTag Parms{};

	Parms.strTag = std::move(strTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6Pawn.X6_GetActorHiddenFlags
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSet<int32>*                            OutFlags                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6Pawn::X6_GetActorHiddenFlags(TSet<int32>* OutFlags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Pawn", "X6_GetActorHiddenFlags");

	Params::X6Pawn_X6_GetActorHiddenFlags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutFlags != nullptr)
		*OutFlags = std::move(Parms.OutFlags);

	return Parms.ReturnValue;
}


// Function X6Game.X6Pawn.X6_GetTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> AX6Pawn::X6_GetTag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Pawn", "X6_GetTag");

	Params::X6Pawn_X6_GetTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6Pawn.X6_HasTag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    strTag                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6Pawn::X6_HasTag(const class FString& strTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Pawn", "X6_HasTag");

	Params::X6Pawn_X6_HasTag Parms{};

	Parms.strTag = std::move(strTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6Pawn.X6_RequireActorFade
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bFadeIn                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   FadeOutHiddenFlag                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInView                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6Pawn::X6_RequireActorFade(bool bFadeIn, int32 FadeOutHiddenFlag, bool bInView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Pawn", "X6_RequireActorFade");

	Params::X6Pawn_X6_RequireActorFade Parms{};

	Parms.bFadeIn = bFadeIn;
	Parms.FadeOutHiddenFlag = FadeOutHiddenFlag;
	Parms.bInView = bInView;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6Pawn.X6_SetActorHiddenInGame
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewHidden                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bClearFlag                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6Pawn::X6_SetActorHiddenInGame(bool bNewHidden, int32 Flag, bool bClearFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6Pawn", "X6_SetActorHiddenInGame");

	Params::X6Pawn_X6_SetActorHiddenInGame Parms{};

	Parms.bNewHidden = bNewHidden;
	Parms.Flag = Flag;
	Parms.bClearFlag = bClearFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6PlayerMantleComponent.CapsuleHasLargeEnoughAreaCheck
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UCapsuleComponent*                CapsuleComponent                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   TargetLocation                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   HeightOffset                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RadiusOffset                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  TargetRotation                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6PlayerMantleComponent::CapsuleHasLargeEnoughAreaCheck(class UCapsuleComponent* CapsuleComponent, const struct FVector& TargetLocation, float HeightOffset, float RadiusOffset, const struct FRotator& TargetRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerMantleComponent", "CapsuleHasLargeEnoughAreaCheck");

	Params::X6PlayerMantleComponent_CapsuleHasLargeEnoughAreaCheck Parms{};

	Parms.CapsuleComponent = CapsuleComponent;
	Parms.TargetLocation = std::move(TargetLocation);
	Parms.HeightOffset = HeightOffset;
	Parms.RadiusOffset = RadiusOffset;
	Parms.TargetRotation = std::move(TargetRotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6PlayerMantleComponent.CapsuleHasRoomCheck
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UCapsuleComponent*                CapsuleComponent                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   TargetLocation                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   HeightOffset                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RadiusOffset                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6PlayerMantleComponent::CapsuleHasRoomCheck(class UCapsuleComponent* CapsuleComponent, const struct FVector& TargetLocation, float HeightOffset, float RadiusOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerMantleComponent", "CapsuleHasRoomCheck");

	Params::X6PlayerMantleComponent_CapsuleHasRoomCheck Parms{};

	Parms.CapsuleComponent = CapsuleComponent;
	Parms.TargetLocation = std::move(TargetLocation);
	Parms.HeightOffset = HeightOffset;
	Parms.RadiusOffset = RadiusOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6PlayerMantleComponent.ForceEndCheck
// (Final, Native, Public, BlueprintCallable)

void UX6PlayerMantleComponent::ForceEndCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerMantleComponent", "ForceEndCheck");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6PlayerMantleComponent.GetCapsuleBaseLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// float                                   ZOffset                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UX6PlayerMantleComponent::GetCapsuleBaseLocation(float ZOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerMantleComponent", "GetCapsuleBaseLocation");

	Params::X6PlayerMantleComponent_GetCapsuleBaseLocation Parms{};

	Parms.ZOffset = ZOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6PlayerMantleComponent.GetCapsuleTopLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// float                                   ZOffset                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UX6PlayerMantleComponent::GetCapsuleTopLocation(float ZOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerMantleComponent", "GetCapsuleTopLocation");

	Params::X6PlayerMantleComponent_GetCapsuleTopLocation Parms{};

	Parms.ZOffset = ZOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6PlayerMantleComponent.GetCurrentReachDistance
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// EMovementMode                           CurMovementMode                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   CurInputDirection                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UX6PlayerMantleComponent::GetCurrentReachDistance(EMovementMode CurMovementMode, const struct FVector& CurInputDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerMantleComponent", "GetCurrentReachDistance");

	Params::X6PlayerMantleComponent_GetCurrentReachDistance Parms{};

	Parms.CurMovementMode = CurMovementMode;
	Parms.CurInputDirection = std::move(CurInputDirection);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6PlayerMantleComponent.GetMantleTypeByHeightAndMovementMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   MantleHeight                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovementMode                           MovementMode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMantleTypeNative                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EMantleTypeNative UX6PlayerMantleComponent::GetMantleTypeByHeightAndMovementMode(float MantleHeight, EMovementMode MovementMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerMantleComponent", "GetMantleTypeByHeightAndMovementMode");

	Params::X6PlayerMantleComponent_GetMantleTypeByHeightAndMovementMode Parms{};

	Parms.MantleHeight = MantleHeight;
	Parms.MovementMode = MovementMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6PlayerMantleComponent.GetOwnerCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ACharacter*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ACharacter* UX6PlayerMantleComponent::GetOwnerCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerMantleComponent", "GetOwnerCharacter");

	Params::X6PlayerMantleComponent_GetOwnerCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6PlayerMantleComponent.Internal_MantleMainCheckInFalling
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   CapsuleBaseLocation                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   CurrentPlayerInputVector                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   CurActorLocation                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MinLedgeHeight                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxLedgeHeight                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ZOffset                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bJustCheck                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6PlayerMantleComponent::Internal_MantleMainCheckInFalling(const struct FVector& CapsuleBaseLocation, const struct FVector& CurrentPlayerInputVector, const struct FVector& CurActorLocation, float MinLedgeHeight, float MaxLedgeHeight, float ZOffset, bool bJustCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerMantleComponent", "Internal_MantleMainCheckInFalling");

	Params::X6PlayerMantleComponent_Internal_MantleMainCheckInFalling Parms{};

	Parms.CapsuleBaseLocation = std::move(CapsuleBaseLocation);
	Parms.CurrentPlayerInputVector = std::move(CurrentPlayerInputVector);
	Parms.CurActorLocation = std::move(CurActorLocation);
	Parms.MinLedgeHeight = MinLedgeHeight;
	Parms.MaxLedgeHeight = MaxLedgeHeight;
	Parms.ZOffset = ZOffset;
	Parms.bJustCheck = bJustCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6PlayerMantleComponent.IsValidMantleTraceChannel
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UPrimitiveComponent*              PrimitiveComponent                                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECollisionChannel                       TraceChannel                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6PlayerMantleComponent::IsValidMantleTraceChannel(class UPrimitiveComponent* PrimitiveComponent, ECollisionChannel TraceChannel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerMantleComponent", "IsValidMantleTraceChannel");

	Params::X6PlayerMantleComponent_IsValidMantleTraceChannel Parms{};

	Parms.PrimitiveComponent = PrimitiveComponent;
	Parms.TraceChannel = TraceChannel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6PlayerMantleComponent.Lua_AddMantlingState
// (Event, Public, BlueprintEvent)

void UX6PlayerMantleComponent::Lua_AddMantlingState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerMantleComponent", "Lua_AddMantlingState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function X6Game.X6PlayerMantleComponent.Lua_CurMantleInfoExist
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6PlayerMantleComponent::Lua_CurMantleInfoExist()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerMantleComponent", "Lua_CurMantleInfoExist");

	Params::X6PlayerMantleComponent_Lua_CurMantleInfoExist Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function X6Game.X6PlayerMantleComponent.Lua_GetCurMantleInfo_KeyOperationIsRequired
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6PlayerMantleComponent::Lua_GetCurMantleInfo_KeyOperationIsRequired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerMantleComponent", "Lua_GetCurMantleInfo_KeyOperationIsRequired");

	Params::X6PlayerMantleComponent_Lua_GetCurMantleInfo_KeyOperationIsRequired Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function X6Game.X6PlayerMantleComponent.Lua_GetCurMantleInfo_MontageAdjustHeightTime
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6PlayerMantleComponent::Lua_GetCurMantleInfo_MontageAdjustHeightTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerMantleComponent", "Lua_GetCurMantleInfo_MontageAdjustHeightTime");

	Params::X6PlayerMantleComponent_Lua_GetCurMantleInfo_MontageAdjustHeightTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function X6Game.X6PlayerMantleComponent.Lua_GetCurrentMantleInfoByName
// (Event, Public, BlueprintEvent)
// Parameters:
// const class FString&                    Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovementMode                           MovementMode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6PlayerMantleComponent::Lua_GetCurrentMantleInfoByName(const class FString& Name_0, EMovementMode MovementMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerMantleComponent", "Lua_GetCurrentMantleInfoByName");

	Params::X6PlayerMantleComponent_Lua_GetCurrentMantleInfoByName Parms{};

	Parms.Name_0 = std::move(Name_0);
	Parms.MovementMode = MovementMode;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function X6Game.X6PlayerMantleComponent.Lua_IsCurWorldTypeInDoor
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6PlayerMantleComponent::Lua_IsCurWorldTypeInDoor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerMantleComponent", "Lua_IsCurWorldTypeInDoor");

	Params::X6PlayerMantleComponent_Lua_IsCurWorldTypeInDoor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function X6Game.X6PlayerMantleComponent.Lua_MantleJumpStart
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   MantleHeight                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6PlayerMantleComponent::Lua_MantleJumpStart(float MantleHeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerMantleComponent", "Lua_MantleJumpStart");

	Params::X6PlayerMantleComponent_Lua_MantleJumpStart Parms{};

	Parms.MantleHeight = MantleHeight;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function X6Game.X6PlayerMantleComponent.Lua_MantlePreCheck_InAir
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6PlayerMantleComponent::Lua_MantlePreCheck_InAir()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerMantleComponent", "Lua_MantlePreCheck_InAir");

	Params::X6PlayerMantleComponent_Lua_MantlePreCheck_InAir Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function X6Game.X6PlayerMantleComponent.Lua_MantleQuicklyStart
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   MantleHeight                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6PlayerMantleComponent::Lua_MantleQuicklyStart(float MantleHeight, float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerMantleComponent", "Lua_MantleQuicklyStart");

	Params::X6PlayerMantleComponent_Lua_MantleQuicklyStart Parms{};

	Parms.MantleHeight = MantleHeight;
	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function X6Game.X6PlayerMantleComponent.Lua_OnCurrentMantleTypeChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6PlayerMantleComponent::Lua_OnCurrentMantleTypeChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerMantleComponent", "Lua_OnCurrentMantleTypeChanged");

	Params::X6PlayerMantleComponent_Lua_OnCurrentMantleTypeChanged Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function X6Game.X6PlayerMantleComponent.Lua_OwnerMantleConfigExist
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6PlayerMantleComponent::Lua_OwnerMantleConfigExist()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerMantleComponent", "Lua_OwnerMantleConfigExist");

	Params::X6PlayerMantleComponent_Lua_OwnerMantleConfigExist Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function X6Game.X6PlayerMantleComponent.Lua_PostStart
// (Event, Public, BlueprintEvent)

void UX6PlayerMantleComponent::Lua_PostStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerMantleComponent", "Lua_PostStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function X6Game.X6PlayerMantleComponent.Lua_PostStartMotionWarping
// (Event, Public, BlueprintEvent)

void UX6PlayerMantleComponent::Lua_PostStartMotionWarping()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerMantleComponent", "Lua_PostStartMotionWarping");

	UObject::ProcessEvent(Func, nullptr);
}


// Function X6Game.X6PlayerMantleComponent.Lua_RemoveMantlingState
// (Event, Public, BlueprintEvent)

void UX6PlayerMantleComponent::Lua_RemoveMantlingState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerMantleComponent", "Lua_RemoveMantlingState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function X6Game.X6PlayerMantleComponent.Lua_TryGetCurInputDirection
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UX6PlayerMantleComponent::Lua_TryGetCurInputDirection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerMantleComponent", "Lua_TryGetCurInputDirection");

	Params::X6PlayerMantleComponent_Lua_TryGetCurInputDirection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function X6Game.X6PlayerMantleComponent.MantleAllCheck
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReceivedInput                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6PlayerMantleComponent::MantleAllCheck(bool ReceivedInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerMantleComponent", "MantleAllCheck");

	Params::X6PlayerMantleComponent_MantleAllCheck Parms{};

	Parms.ReceivedInput = ReceivedInput;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6PlayerMantleComponent.MantleJumpStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   MantleHeight                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6PlayerMantleComponent::MantleJumpStart(float MantleHeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerMantleComponent", "MantleJumpStart");

	Params::X6PlayerMantleComponent_MantleJumpStart Parms{};

	Parms.MantleHeight = MantleHeight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6PlayerMantleComponent.MantleMainCheck
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ZOffset                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6PlayerMantleComponent::MantleMainCheck(float ZOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerMantleComponent", "MantleMainCheck");

	Params::X6PlayerMantleComponent_MantleMainCheck Parms{};

	Parms.ZOffset = ZOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6PlayerMantleComponent.MantleMainCheckInFalling
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ZOffset                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6PlayerMantleComponent::MantleMainCheckInFalling(float ZOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerMantleComponent", "MantleMainCheckInFalling");

	Params::X6PlayerMantleComponent_MantleMainCheckInFalling Parms{};

	Parms.ZOffset = ZOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6PlayerMantleComponent.MantlePostCheck
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReceivedInput                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6PlayerMantleComponent::MantlePostCheck(bool ReceivedInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerMantleComponent", "MantlePostCheck");

	Params::X6PlayerMantleComponent_MantlePostCheck Parms{};

	Parms.ReceivedInput = ReceivedInput;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6PlayerMantleComponent.MantlePreCheck
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6PlayerMantleComponent::MantlePreCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerMantleComponent", "MantlePreCheck");

	Params::X6PlayerMantleComponent_MantlePreCheck Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6PlayerMantleComponent.MantleQuicklyStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   MantleHeight                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6PlayerMantleComponent::MantleQuicklyStart(float MantleHeight, float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerMantleComponent", "MantleQuicklyStart");

	Params::X6PlayerMantleComponent_MantleQuicklyStart Parms{};

	Parms.MantleHeight = MantleHeight;
	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6PlayerMantleComponent.MantleUpdate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6PlayerMantleComponent::MantleUpdate(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerMantleComponent", "MantleUpdate");

	Params::X6PlayerMantleComponent_MantleUpdate Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6PlayerMantleComponent.MantleUpdateMotionWarping
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6PlayerMantleComponent::MantleUpdateMotionWarping(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerMantleComponent", "MantleUpdateMotionWarping");

	Params::X6PlayerMantleComponent_MantleUpdateMotionWarping Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6PlayerMantleComponent.PostStart
// (Final, Native, Public, BlueprintCallable)

void UX6PlayerMantleComponent::PostStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerMantleComponent", "PostStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6PlayerMantleComponent.PostStartMotionWarping
// (Final, Native, Public, BlueprintCallable)

void UX6PlayerMantleComponent::PostStartMotionWarping()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerMantleComponent", "PostStartMotionWarping");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6PlayerMantleComponent.ProcessTransitionMantle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6PlayerMantleComponent::ProcessTransitionMantle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerMantleComponent", "ProcessTransitionMantle");

	Params::X6PlayerMantleComponent_ProcessTransitionMantle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6PlayerMantleComponent.UpdateDynamicMovementBaseTobeAttached
// (Final, Native, Public, BlueprintCallable)

void UX6PlayerMantleComponent::UpdateDynamicMovementBaseTobeAttached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerMantleComponent", "UpdateDynamicMovementBaseTobeAttached");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6PlayerMantleComponent.UpdateMovingToAnimStartTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6PlayerMantleComponent::UpdateMovingToAnimStartTarget(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PlayerMantleComponent", "UpdateMovingToAnimStartTarget");

	Params::X6PlayerMantleComponent_UpdateMovingToAnimStartTarget Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6PathFollowingComponent.AddReachSegmentDelegate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   SegmentIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void(int32 SegmentIndex)>&ReachSegmentDelegate                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6PathFollowingComponent::AddReachSegmentDelegate(int32 SegmentIndex, const TDelegate<void(int32 SegmentIndex)>& ReachSegmentDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PathFollowingComponent", "AddReachSegmentDelegate");

	Params::X6PathFollowingComponent_AddReachSegmentDelegate Parms{};

	Parms.SegmentIndex = SegmentIndex;
	Parms.ReachSegmentDelegate = ReachSegmentDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6PathFollowingComponent.FinishCustomLinkMove
// (Final, Native, Public, BlueprintCallable)

void UX6PathFollowingComponent::FinishCustomLinkMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PathFollowingComponent", "FinishCustomLinkMove");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6PathFollowingComponent.GetCurrentTargetPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UX6PathFollowingComponent::GetCurrentTargetPosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PathFollowingComponent", "GetCurrentTargetPosition");

	Params::X6PathFollowingComponent_GetCurrentTargetPosition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6PathFollowingComponent.GetSmoothPathEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6PathFollowingComponent::GetSmoothPathEnable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PathFollowingComponent", "GetSmoothPathEnable");

	Params::X6PathFollowingComponent_GetSmoothPathEnable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6PathFollowingComponent.K2_SetBlockDetectionState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6PathFollowingComponent::K2_SetBlockDetectionState(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PathFollowingComponent", "K2_SetBlockDetectionState");

	Params::X6PathFollowingComponent_K2_SetBlockDetectionState Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6PathFollowingComponent.RemoveCustomNavLinkMove
// (Final, Native, Public, BlueprintCallable)

void UX6PathFollowingComponent::RemoveCustomNavLinkMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PathFollowingComponent", "RemoveCustomNavLinkMove");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6PathFollowingComponent.RemoveReachSegmentDelegate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   SegmentIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void(int32 SegmentIndex)>&ReachSegmentDelegate                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6PathFollowingComponent::RemoveReachSegmentDelegate(int32 SegmentIndex, const TDelegate<void(int32 SegmentIndex)>& ReachSegmentDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PathFollowingComponent", "RemoveReachSegmentDelegate");

	Params::X6PathFollowingComponent_RemoveReachSegmentDelegate Parms{};

	Parms.SegmentIndex = SegmentIndex;
	Parms.ReachSegmentDelegate = ReachSegmentDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6PathFollowingComponent.SetCustomNavLinkMove
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          LinkMove                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6PathFollowingComponent::SetCustomNavLinkMove(class UObject* LinkMove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PathFollowingComponent", "SetCustomNavLinkMove");

	Params::X6PathFollowingComponent_SetCustomNavLinkMove Parms{};

	Parms.LinkMove = LinkMove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6PathFollowingComponent.SetSmoothInterval
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Interval                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6PathFollowingComponent::SetSmoothInterval(float Interval)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PathFollowingComponent", "SetSmoothInterval");

	Params::X6PathFollowingComponent_SetSmoothInterval Parms{};

	Parms.Interval = Interval;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6PathFollowingComponent.SetSmoothPathDirectMoveParams
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FDirectMoveParams&         NewSmoothPathDirectMoveParams                          (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UX6PathFollowingComponent::SetSmoothPathDirectMoveParams(const struct FDirectMoveParams& NewSmoothPathDirectMoveParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PathFollowingComponent", "SetSmoothPathDirectMoveParams");

	Params::X6PathFollowingComponent_SetSmoothPathDirectMoveParams Parms{};

	Parms.NewSmoothPathDirectMoveParams = std::move(NewSmoothPathDirectMoveParams);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6PathFollowingComponent.SetSmoothPathEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6PathFollowingComponent::SetSmoothPathEnable(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PathFollowingComponent", "SetSmoothPathEnable");

	Params::X6PathFollowingComponent_SetSmoothPathEnable Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6PathFollowingComponent.SetSmoothPathParams
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FSmoothPathParams&         NewSmoothPathParams                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UX6PathFollowingComponent::SetSmoothPathParams(const struct FSmoothPathParams& NewSmoothPathParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PathFollowingComponent", "SetSmoothPathParams");

	Params::X6PathFollowingComponent_SetSmoothPathParams Parms{};

	Parms.NewSmoothPathParams = std::move(NewSmoothPathParams);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6PathFollowingComponent.SetTargetMoveSegment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   TargetIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6PathFollowingComponent::SetTargetMoveSegment(int32 TargetIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PathFollowingComponent", "SetTargetMoveSegment");

	Params::X6PathFollowingComponent_SetTargetMoveSegment Parms{};

	Parms.TargetIndex = TargetIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6PathFollowingComponent.GetFinalRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator UX6PathFollowingComponent::GetFinalRotation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6PathFollowingComponent", "GetFinalRotation");

	Params::X6PathFollowingComponent_GetFinalRotation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameUserSettings.ApplyResolutionQualityRate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ResolutionQualityRate                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6GameUserSettings::ApplyResolutionQualityRate(float ResolutionQualityRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "ApplyResolutionQualityRate");

	Params::X6GameUserSettings_ApplyResolutionQualityRate Parms{};

	Parms.ResolutionQualityRate = ResolutionQualityRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6GameUserSettings.GetAkMaxNumVoicesLimit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UX6GameUserSettings::GetAkMaxNumVoicesLimit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "GetAkMaxNumVoicesLimit");

	Params::X6GameUserSettings_GetAkMaxNumVoicesLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameUserSettings.GetAnimCurveMDIParamDistance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6GameUserSettings::GetAnimCurveMDIParamDistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "GetAnimCurveMDIParamDistance");

	Params::X6GameUserSettings_GetAnimCurveMDIParamDistance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameUserSettings.GetBenchmarkResultFromDeviceList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6GameUserSettings::GetBenchmarkResultFromDeviceList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "GetBenchmarkResultFromDeviceList");

	Params::X6GameUserSettings_GetBenchmarkResultFromDeviceList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameUserSettings.GetCustomUpScaleRate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6GameUserSettings::GetCustomUpScaleRate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "GetCustomUpScaleRate");

	Params::X6GameUserSettings_GetCustomUpScaleRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameUserSettings.GetEnableAbilityPreload
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6GameUserSettings::GetEnableAbilityPreload()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "GetEnableAbilityPreload");

	Params::X6GameUserSettings_GetEnableAbilityPreload Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameUserSettings.GetEnableAllPreloadFeature
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6GameUserSettings::GetEnableAllPreloadFeature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "GetEnableAllPreloadFeature");

	Params::X6GameUserSettings_GetEnableAllPreloadFeature Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameUserSettings.GetEnableClothesPreload
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6GameUserSettings::GetEnableClothesPreload()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "GetEnableClothesPreload");

	Params::X6GameUserSettings_GetEnableClothesPreload Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameUserSettings.GetEnableCombatPreload
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6GameUserSettings::GetEnableCombatPreload()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "GetEnableCombatPreload");

	Params::X6GameUserSettings_GetEnableCombatPreload Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameUserSettings.GetEnableDressupFeature
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6GameUserSettings::GetEnableDressupFeature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "GetEnableDressupFeature");

	Params::X6GameUserSettings_GetEnableDressupFeature Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameUserSettings.GetEnableGraphPreload
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6GameUserSettings::GetEnableGraphPreload()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "GetEnableGraphPreload");

	Params::X6GameUserSettings_GetEnableGraphPreload Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameUserSettings.GetEnableNPCSimpleLocomotion
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6GameUserSettings::GetEnableNPCSimpleLocomotion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "GetEnableNPCSimpleLocomotion");

	Params::X6GameUserSettings_GetEnableNPCSimpleLocomotion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameUserSettings.GetEnableObjectPoolPreCreate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6GameUserSettings::GetEnableObjectPoolPreCreate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "GetEnableObjectPoolPreCreate");

	Params::X6GameUserSettings_GetEnableObjectPoolPreCreate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameUserSettings.GetEnableRewardPreload
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6GameUserSettings::GetEnableRewardPreload()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "GetEnableRewardPreload");

	Params::X6GameUserSettings_GetEnableRewardPreload Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameUserSettings.GetEnableSkipUpdateAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6GameUserSettings::GetEnableSkipUpdateAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "GetEnableSkipUpdateAnimation");

	Params::X6GameUserSettings_GetEnableSkipUpdateAnimation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameUserSettings.GetEnableSoundPreload
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6GameUserSettings::GetEnableSoundPreload()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "GetEnableSoundPreload");

	Params::X6GameUserSettings_GetEnableSoundPreload Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameUserSettings.GetLightedPlayerMaxCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UX6GameUserSettings::GetLightedPlayerMaxCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "GetLightedPlayerMaxCount");

	Params::X6GameUserSettings_GetLightedPlayerMaxCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameUserSettings.GetMaxRefreshRate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UX6GameUserSettings::GetMaxRefreshRate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "GetMaxRefreshRate");

	Params::X6GameUserSettings_GetMaxRefreshRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameUserSettings.GetObjectPoolMemoryThreshold
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6GameUserSettings::GetObjectPoolMemoryThreshold()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "GetObjectPoolMemoryThreshold");

	Params::X6GameUserSettings_GetObjectPoolMemoryThreshold Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameUserSettings.GetPreLoadPoolMemoryThresholdScalar
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6GameUserSettings::GetPreLoadPoolMemoryThresholdScalar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "GetPreLoadPoolMemoryThresholdScalar");

	Params::X6GameUserSettings_GetPreLoadPoolMemoryThresholdScalar Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameUserSettings.GetResolutionQualityForScreenSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Width                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Height                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUseFullScreen                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6GameUserSettings::GetResolutionQualityForScreenSize(float Width, float Height, bool bUseFullScreen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "GetResolutionQualityForScreenSize");

	Params::X6GameUserSettings_GetResolutionQualityForScreenSize Parms{};

	Parms.Width = Width;
	Parms.Height = Height;
	Parms.bUseFullScreen = bUseFullScreen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameUserSettings.GetResolutionQualityRate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EGUSAntiAliasingMethod                  AntiAliasingMethod_0                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6GameUserSettings::GetResolutionQualityRate(EGUSAntiAliasingMethod AntiAliasingMethod_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "GetResolutionQualityRate");

	Params::X6GameUserSettings_GetResolutionQualityRate Parms{};

	Parms.AntiAliasingMethod_0 = AntiAliasingMethod_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameUserSettings.GetSpawnDistance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UX6GameUserSettings::GetSpawnDistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "GetSpawnDistance");

	Params::X6GameUserSettings_GetSpawnDistance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameUserSettings.GetT2NPCSpawnRate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6GameUserSettings::GetT2NPCSpawnRate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "GetT2NPCSpawnRate");

	Params::X6GameUserSettings_GetT2NPCSpawnRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameUserSettings.GetTotalPhysicalGB
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6GameUserSettings::GetTotalPhysicalGB()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "GetTotalPhysicalGB");

	Params::X6GameUserSettings_GetTotalPhysicalGB Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameUserSettings.GetUIResolution
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FIntPoint                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FIntPoint UX6GameUserSettings::GetUIResolution()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "GetUIResolution");

	Params::X6GameUserSettings_GetUIResolution Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameUserSettings.GetX6DisplayGamma
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6GameUserSettings::GetX6DisplayGamma()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "GetX6DisplayGamma");

	Params::X6GameUserSettings_GetX6DisplayGamma Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameUserSettings.GetX6RecommendQuality
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FRecommendQualityLevels          ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FRecommendQualityLevels UX6GameUserSettings::GetX6RecommendQuality()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "GetX6RecommendQuality");

	Params::X6GameUserSettings_GetX6RecommendQuality Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameUserSettings.SetAmbientOcclusionEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6GameUserSettings::SetAmbientOcclusionEnabled(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "SetAmbientOcclusionEnabled");

	Params::X6GameUserSettings_SetAmbientOcclusionEnabled Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6GameUserSettings.SetAntiAliasingMethod
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EGUSAntiAliasingMethod                  Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6GameUserSettings::SetAntiAliasingMethod(EGUSAntiAliasingMethod Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "SetAntiAliasingMethod");

	Params::X6GameUserSettings_SetAntiAliasingMethod Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6GameUserSettings.SetBloomEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6GameUserSettings::SetBloomEnabled(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "SetBloomEnabled");

	Params::X6GameUserSettings_SetBloomEnabled Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6GameUserSettings.SetCustomUpScaleRate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6GameUserSettings::SetCustomUpScaleRate(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "SetCustomUpScaleRate");

	Params::X6GameUserSettings_SetCustomUpScaleRate Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6GameUserSettings.SetDefaultFrameRateFromIni
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   DeviceLevel                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6GameUserSettings::SetDefaultFrameRateFromIni(int32 DeviceLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "SetDefaultFrameRateFromIni");

	Params::X6GameUserSettings_SetDefaultFrameRateFromIni Parms{};

	Parms.DeviceLevel = DeviceLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6GameUserSettings.SetGlobalIlluminationMethod
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EGlobalIlluminationMethod               Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6GameUserSettings::SetGlobalIlluminationMethod(EGlobalIlluminationMethod Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "SetGlobalIlluminationMethod");

	Params::X6GameUserSettings_SetGlobalIlluminationMethod Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6GameUserSettings.SetGlobalIlluminationMethodCVar
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EGlobalIlluminationMethod               Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6GameUserSettings::SetGlobalIlluminationMethodCVar(EGlobalIlluminationMethod Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "SetGlobalIlluminationMethodCVar");

	Params::X6GameUserSettings_SetGlobalIlluminationMethodCVar Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6GameUserSettings.SetLastCPUBenchmarkResult
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Val                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6GameUserSettings::SetLastCPUBenchmarkResult(float Val)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "SetLastCPUBenchmarkResult");

	Params::X6GameUserSettings_SetLastCPUBenchmarkResult Parms{};

	Parms.Val = Val;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6GameUserSettings.SetLastGPUBenchmarkResult
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Val                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6GameUserSettings::SetLastGPUBenchmarkResult(float Val)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "SetLastGPUBenchmarkResult");

	Params::X6GameUserSettings_SetLastGPUBenchmarkResult Parms{};

	Parms.Val = Val;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6GameUserSettings.SetMobileContentScaleFactor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6GameUserSettings::SetMobileContentScaleFactor(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "SetMobileContentScaleFactor");

	Params::X6GameUserSettings_SetMobileContentScaleFactor Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6GameUserSettings.SetMotionBlurEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6GameUserSettings::SetMotionBlurEnabled(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "SetMotionBlurEnabled");

	Params::X6GameUserSettings_SetMotionBlurEnabled Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6GameUserSettings.SetRayTracingAmbientOcclusionEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6GameUserSettings::SetRayTracingAmbientOcclusionEnable(bool IsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "SetRayTracingAmbientOcclusionEnable");

	Params::X6GameUserSettings_SetRayTracingAmbientOcclusionEnable Parms{};

	Parms.IsEnable = IsEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6GameUserSettings.SetRayTracingEnableInGame
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6GameUserSettings::SetRayTracingEnableInGame(bool IsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "SetRayTracingEnableInGame");

	Params::X6GameUserSettings_SetRayTracingEnableInGame Parms{};

	Parms.IsEnable = IsEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6GameUserSettings.SetRayTracingReflectionEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6GameUserSettings::SetRayTracingReflectionEnable(bool IsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "SetRayTracingReflectionEnable");

	Params::X6GameUserSettings_SetRayTracingReflectionEnable Parms{};

	Parms.IsEnable = IsEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6GameUserSettings.SetSceneDetailMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESceneDetailMode                        Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6GameUserSettings::SetSceneDetailMode(ESceneDetailMode Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "SetSceneDetailMode");

	Params::X6GameUserSettings_SetSceneDetailMode Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6GameUserSettings.SetSceneDetailModeCVar
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESceneDetailMode                        Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6GameUserSettings::SetSceneDetailModeCVar(ESceneDetailMode Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "SetSceneDetailModeCVar");

	Params::X6GameUserSettings_SetSceneDetailModeCVar Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6GameUserSettings.SetSecondaryUpscaleCVar
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6GameUserSettings::SetSecondaryUpscaleCVar(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "SetSecondaryUpscaleCVar");

	Params::X6GameUserSettings_SetSecondaryUpscaleCVar Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6GameUserSettings.SetUIResolution
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FIntPoint&                 Resolution                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6GameUserSettings::SetUIResolution(const struct FIntPoint& Resolution)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "SetUIResolution");

	Params::X6GameUserSettings_SetUIResolution Parms{};

	Parms.Resolution = std::move(Resolution);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6GameUserSettings.SetUpScaleMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EUpScaleMode                            InMode                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6GameUserSettings::SetUpScaleMode(EUpScaleMode InMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "SetUpScaleMode");

	Params::X6GameUserSettings_SetUpScaleMode Parms{};

	Parms.InMode = InMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6GameUserSettings.SetX6DisplayGamma
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewGamma                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6GameUserSettings::SetX6DisplayGamma(float NewGamma)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "SetX6DisplayGamma");

	Params::X6GameUserSettings_SetX6DisplayGamma Parms{};

	Parms.NewGamma = NewGamma;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6GameUserSettings.SetX6RecommendQuality
// (Final, Native, Public, BlueprintCallable)

void UX6GameUserSettings::SetX6RecommendQuality()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "SetX6RecommendQuality");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6GameUserSettings.SetX6SaveDataVersion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InVersion                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6GameUserSettings::SetX6SaveDataVersion(int32 InVersion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "SetX6SaveDataVersion");

	Params::X6GameUserSettings_SetX6SaveDataVersion Parms{};

	Parms.InVersion = InVersion;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6GameUserSettings.GetAntiAliasingMethod
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EGUSAntiAliasingMethod                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGUSAntiAliasingMethod UX6GameUserSettings::GetAntiAliasingMethod() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "GetAntiAliasingMethod");

	Params::X6GameUserSettings_GetAntiAliasingMethod Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameUserSettings.GetDesiredScreenResolution
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FIntPoint                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FIntPoint UX6GameUserSettings::GetDesiredScreenResolution() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "GetDesiredScreenResolution");

	Params::X6GameUserSettings_GetDesiredScreenResolution Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameUserSettings.GetGlobalIlluminationMethod
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EGlobalIlluminationMethod               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGlobalIlluminationMethod UX6GameUserSettings::GetGlobalIlluminationMethod() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "GetGlobalIlluminationMethod");

	Params::X6GameUserSettings_GetGlobalIlluminationMethod Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameUserSettings.GetMobileContentScaleFactorValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6GameUserSettings::GetMobileContentScaleFactorValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "GetMobileContentScaleFactorValue");

	Params::X6GameUserSettings_GetMobileContentScaleFactorValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameUserSettings.GetSceneDetailMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESceneDetailMode                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESceneDetailMode UX6GameUserSettings::GetSceneDetailMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "GetSceneDetailMode");

	Params::X6GameUserSettings_GetSceneDetailMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameUserSettings.GetUpScaleMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EUpScaleMode                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EUpScaleMode UX6GameUserSettings::GetUpScaleMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "GetUpScaleMode");

	Params::X6GameUserSettings_GetUpScaleMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameUserSettings.GetX6SaveDataVersion
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UX6GameUserSettings::GetX6SaveDataVersion() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "GetX6SaveDataVersion");

	Params::X6GameUserSettings_GetX6SaveDataVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameUserSettings.IsAmbientOcclusionEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6GameUserSettings::IsAmbientOcclusionEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "IsAmbientOcclusionEnabled");

	Params::X6GameUserSettings_IsAmbientOcclusionEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameUserSettings.IsBloomEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6GameUserSettings::IsBloomEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "IsBloomEnabled");

	Params::X6GameUserSettings_IsBloomEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameUserSettings.IsMotionBlurEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6GameUserSettings::IsMotionBlurEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "IsMotionBlurEnabled");

	Params::X6GameUserSettings_IsMotionBlurEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameUserSettings.IsRayTracingAmbientOcclusionEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6GameUserSettings::IsRayTracingAmbientOcclusionEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "IsRayTracingAmbientOcclusionEnabled");

	Params::X6GameUserSettings_IsRayTracingAmbientOcclusionEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameUserSettings.IsRayTracingEnableInGame
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6GameUserSettings::IsRayTracingEnableInGame() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "IsRayTracingEnableInGame");

	Params::X6GameUserSettings_IsRayTracingEnableInGame Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameUserSettings.IsRayTracingReflectionsEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6GameUserSettings::IsRayTracingReflectionsEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameUserSettings", "IsRayTracingReflectionsEnabled");

	Params::X6GameUserSettings_IsRayTracingReflectionsEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GeneralAnimationDataComponent.AddSituationType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECharacterSituationType                 NewSituationType                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6GeneralAnimationDataComponent::AddSituationType(ECharacterSituationType NewSituationType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GeneralAnimationDataComponent", "AddSituationType");

	Params::X6GeneralAnimationDataComponent_AddSituationType Parms{};

	Parms.NewSituationType = NewSituationType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6GeneralAnimationDataComponent.InitializeLocomotionDataContainer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class ULocomotionDataContainerBase>LocomotionDataContainerClass                           (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULocomotionDataContainerBase*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULocomotionDataContainerBase* UX6GeneralAnimationDataComponent::InitializeLocomotionDataContainer(TSubclassOf<class ULocomotionDataContainerBase> LocomotionDataContainerClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GeneralAnimationDataComponent", "InitializeLocomotionDataContainer");

	Params::X6GeneralAnimationDataComponent_InitializeLocomotionDataContainer Parms{};

	Parms.LocomotionDataContainerClass = LocomotionDataContainerClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GeneralAnimationDataComponent.OnLocomotionTurnInPlaceFinished
// (Final, Native, Private)

void UX6GeneralAnimationDataComponent::OnLocomotionTurnInPlaceFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GeneralAnimationDataComponent", "OnLocomotionTurnInPlaceFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6GeneralAnimationDataComponent.RemoveSituationType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECharacterSituationType                 NewSituationType                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6GeneralAnimationDataComponent::RemoveSituationType(ECharacterSituationType NewSituationType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GeneralAnimationDataComponent", "RemoveSituationType");

	Params::X6GeneralAnimationDataComponent_RemoveSituationType Parms{};

	Parms.NewSituationType = NewSituationType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6GeneralAnimationDataComponent.SetCurrentWaterDepth
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewWaterDepth                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6GeneralAnimationDataComponent::SetCurrentWaterDepth(float NewWaterDepth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GeneralAnimationDataComponent", "SetCurrentWaterDepth");

	Params::X6GeneralAnimationDataComponent_SetCurrentWaterDepth Parms{};

	Parms.NewWaterDepth = NewWaterDepth;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6GeneralAnimationDataComponent.SetDamiaoInFollowFloat
// (Final, Native, Public)
// Parameters:
// bool                                    FollowFloat                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6GeneralAnimationDataComponent::SetDamiaoInFollowFloat(bool FollowFloat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GeneralAnimationDataComponent", "SetDamiaoInFollowFloat");

	Params::X6GeneralAnimationDataComponent_SetDamiaoInFollowFloat Parms{};

	Parms.FollowFloat = FollowFloat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6GeneralAnimationDataComponent.SetDamiaoTargetLocation
// (Final, Native, Public, HasDefaults)
// Parameters:
// const struct FVector&                   TargetLoc                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6GeneralAnimationDataComponent::SetDamiaoTargetLocation(const struct FVector& TargetLoc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GeneralAnimationDataComponent", "SetDamiaoTargetLocation");

	Params::X6GeneralAnimationDataComponent_SetDamiaoTargetLocation Parms{};

	Parms.TargetLoc = std::move(TargetLoc);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6GeneralAnimationDataComponent.SetEnableSlopeCalculate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewEnable                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6GeneralAnimationDataComponent::SetEnableSlopeCalculate(bool bNewEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GeneralAnimationDataComponent", "SetEnableSlopeCalculate");

	Params::X6GeneralAnimationDataComponent_SetEnableSlopeCalculate Parms{};

	Parms.bNewEnable = bNewEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6GeneralAnimationDataComponent.SetLocomotionRequestObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6GeneralAnimationDataComponent::SetLocomotionRequestObject(class UObject* InObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GeneralAnimationDataComponent", "SetLocomotionRequestObject");

	Params::X6GeneralAnimationDataComponent_SetLocomotionRequestObject Parms{};

	Parms.InObject = InObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6GeneralAnimationDataComponent.TurnInPlaceByAngle
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const float                             TurnAngle                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void()>&                OnComplete                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void()>&                OnInterrupt                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6GeneralAnimationDataComponent::TurnInPlaceByAngle(const float TurnAngle, const TDelegate<void()>& OnComplete, const TDelegate<void()>& OnInterrupt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GeneralAnimationDataComponent", "TurnInPlaceByAngle");

	Params::X6GeneralAnimationDataComponent_TurnInPlaceByAngle Parms{};

	Parms.TurnAngle = TurnAngle;
	Parms.OnComplete = OnComplete;
	Parms.OnInterrupt = OnInterrupt;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GeneralAnimationDataComponent.GetCurrentWaterDepth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6GeneralAnimationDataComponent::GetCurrentWaterDepth() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GeneralAnimationDataComponent", "GetCurrentWaterDepth");

	Params::X6GeneralAnimationDataComponent_GetCurrentWaterDepth Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GeneralAnimationDataComponent.GetForwardSlopeAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6GeneralAnimationDataComponent::GetForwardSlopeAngle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GeneralAnimationDataComponent", "GetForwardSlopeAngle");

	Params::X6GeneralAnimationDataComponent_GetForwardSlopeAngle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GeneralAnimationDataComponent.GetLocomotionCanEverTurnInPlace
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6GeneralAnimationDataComponent::GetLocomotionCanEverTurnInPlace() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GeneralAnimationDataComponent", "GetLocomotionCanEverTurnInPlace");

	Params::X6GeneralAnimationDataComponent_GetLocomotionCanEverTurnInPlace Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GeneralAnimationDataComponent.GetRegularMovementBaseVelocity
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UX6GeneralAnimationDataComponent::GetRegularMovementBaseVelocity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GeneralAnimationDataComponent", "GetRegularMovementBaseVelocity");

	Params::X6GeneralAnimationDataComponent_GetRegularMovementBaseVelocity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GeneralAnimationDataComponent.GetRightSlopeAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6GeneralAnimationDataComponent::GetRightSlopeAngle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GeneralAnimationDataComponent", "GetRightSlopeAngle");

	Params::X6GeneralAnimationDataComponent_GetRightSlopeAngle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GeneralAnimationDataComponent.HasSituationType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharacterSituationType                 NewSituationType                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6GeneralAnimationDataComponent::HasSituationType(ECharacterSituationType NewSituationType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GeneralAnimationDataComponent", "HasSituationType");

	Params::X6GeneralAnimationDataComponent_HasSituationType Parms{};

	Parms.NewSituationType = NewSituationType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GroundFlyMovementComponent.GetGroundFlyHeight
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6GroundFlyMovementComponent::GetGroundFlyHeight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GroundFlyMovementComponent", "GetGroundFlyHeight");

	Params::X6GroundFlyMovementComponent_GetGroundFlyHeight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GroundFlyMovementComponent.GetMovementArriveMode
// (Native, Public, BlueprintCallable)
// Parameters:
// EGroundFlyMovementMode                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGroundFlyMovementMode UX6GroundFlyMovementComponent::GetMovementArriveMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GroundFlyMovementComponent", "GetMovementArriveMode");

	Params::X6GroundFlyMovementComponent_GetMovementArriveMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GroundFlyMovementComponent.GetMovementMode
// (Native, Public, BlueprintCallable)
// Parameters:
// EGroundFlyMovementMode                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGroundFlyMovementMode UX6GroundFlyMovementComponent::GetMovementMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GroundFlyMovementComponent", "GetMovementMode");

	Params::X6GroundFlyMovementComponent_GetMovementMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GroundFlyMovementComponent.GetTargetModeGroundFlyHeight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EGroundFlyMovementMode                  TargetMode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6GroundFlyMovementComponent::GetTargetModeGroundFlyHeight(EGroundFlyMovementMode TargetMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GroundFlyMovementComponent", "GetTargetModeGroundFlyHeight");

	Params::X6GroundFlyMovementComponent_GetTargetModeGroundFlyHeight Parms{};

	Parms.TargetMode = TargetMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GroundFlyMovementComponent.InstantChangeHeight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6GroundFlyMovementComponent::InstantChangeHeight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GroundFlyMovementComponent", "InstantChangeHeight");

	Params::X6GroundFlyMovementComponent_InstantChangeHeight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GroundFlyMovementComponent.MapGroundFlyMode2MoveMode
// (Native, Public, BlueprintCallable)
// Parameters:
// EGroundFlyMovementMode                  TargetMode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovementMode                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EMovementMode UX6GroundFlyMovementComponent::MapGroundFlyMode2MoveMode(EGroundFlyMovementMode TargetMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GroundFlyMovementComponent", "MapGroundFlyMode2MoveMode");

	Params::X6GroundFlyMovementComponent_MapGroundFlyMode2MoveMode Parms{};

	Parms.TargetMode = TargetMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GroundFlyMovementComponent.SetGroundFlyDefaultMovementMode
// (Native, Public, BlueprintCallable)
// Parameters:
// EGroundFlyMovementMode                  TargetMoveMode                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGroundFlyMovementMode                  TargetArriveMode                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6GroundFlyMovementComponent::SetGroundFlyDefaultMovementMode(EGroundFlyMovementMode TargetMoveMode, EGroundFlyMovementMode TargetArriveMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GroundFlyMovementComponent", "SetGroundFlyDefaultMovementMode");

	Params::X6GroundFlyMovementComponent_SetGroundFlyDefaultMovementMode Parms{};

	Parms.TargetMoveMode = TargetMoveMode;
	Parms.TargetArriveMode = TargetArriveMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6GroundFlyMovementComponent.SetGroundFlyMovementMode
// (Native, Public, BlueprintCallable)
// Parameters:
// const struct FGroundFlyMovementSettings&Settings                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UX6GroundFlyMovementComponent::SetGroundFlyMovementMode(const struct FGroundFlyMovementSettings& Settings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GroundFlyMovementComponent", "SetGroundFlyMovementMode");

	Params::X6GroundFlyMovementComponent_SetGroundFlyMovementMode Parms{};

	Parms.Settings = std::move(Settings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6HardWareBenchmarkBlueprintFunctions.GetCPUBenchMark
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InBrandInfo                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6HardWareBenchmarkBlueprintFunctions::GetCPUBenchMark(const class FString& InBrandInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6HardWareBenchmarkBlueprintFunctions", "GetCPUBenchMark");

	Params::X6HardWareBenchmarkBlueprintFunctions_GetCPUBenchMark Parms{};

	Parms.InBrandInfo = std::move(InBrandInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6HardWareBenchmarkBlueprintFunctions.GetCPUBrand
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UX6HardWareBenchmarkBlueprintFunctions::GetCPUBrand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6HardWareBenchmarkBlueprintFunctions", "GetCPUBrand");

	Params::X6HardWareBenchmarkBlueprintFunctions_GetCPUBrand Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6HardWareBenchmarkBlueprintFunctions.GetCPUInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UX6HardWareBenchmarkBlueprintFunctions::GetCPUInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6HardWareBenchmarkBlueprintFunctions", "GetCPUInfo");

	Params::X6HardWareBenchmarkBlueprintFunctions_GetCPUInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6HardWareBenchmarkBlueprintFunctions.GetCPUVendor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UX6HardWareBenchmarkBlueprintFunctions::GetCPUVendor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6HardWareBenchmarkBlueprintFunctions", "GetCPUVendor");

	Params::X6HardWareBenchmarkBlueprintFunctions_GetCPUVendor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6HardWareBenchmarkBlueprintFunctions.GetGPUBenchMark
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InBrandInfo                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6HardWareBenchmarkBlueprintFunctions::GetGPUBenchMark(const class FString& InBrandInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6HardWareBenchmarkBlueprintFunctions", "GetGPUBenchMark");

	Params::X6HardWareBenchmarkBlueprintFunctions_GetGPUBenchMark Parms{};

	Parms.InBrandInfo = std::move(InBrandInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6HardWareBenchmarkBlueprintFunctions.GetGPUBrand
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UX6HardWareBenchmarkBlueprintFunctions::GetGPUBrand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6HardWareBenchmarkBlueprintFunctions", "GetGPUBrand");

	Params::X6HardWareBenchmarkBlueprintFunctions_GetGPUBrand Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6HardWareBenchmarkBlueprintFunctions.IsCPUReachedSuggestedVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InBrandInfo                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6HardWareBenchmarkBlueprintFunctions::IsCPUReachedSuggestedVersion(const class FString& InBrandInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6HardWareBenchmarkBlueprintFunctions", "IsCPUReachedSuggestedVersion");

	Params::X6HardWareBenchmarkBlueprintFunctions_IsCPUReachedSuggestedVersion Parms{};

	Parms.InBrandInfo = std::move(InBrandInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6HardWareBenchmarkBlueprintFunctions.IsCPUReachedTargetVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InBrandInfo                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    TargetInfo                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6HardWareBenchmarkBlueprintFunctions::IsCPUReachedTargetVersion(const class FString& InBrandInfo, const class FString& TargetInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6HardWareBenchmarkBlueprintFunctions", "IsCPUReachedTargetVersion");

	Params::X6HardWareBenchmarkBlueprintFunctions_IsCPUReachedTargetVersion Parms{};

	Parms.InBrandInfo = std::move(InBrandInfo);
	Parms.TargetInfo = std::move(TargetInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6HardWareBenchmarkBlueprintFunctions.IsGPUReachedSuggestedVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InBrandInfo                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6HardWareBenchmarkBlueprintFunctions::IsGPUReachedSuggestedVersion(const class FString& InBrandInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6HardWareBenchmarkBlueprintFunctions", "IsGPUReachedSuggestedVersion");

	Params::X6HardWareBenchmarkBlueprintFunctions_IsGPUReachedSuggestedVersion Parms{};

	Parms.InBrandInfo = std::move(InBrandInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6HardWareBenchmarkBlueprintFunctions.IsGPUReachedTargetVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InBrandInfo                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    TargetInfo                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6HardWareBenchmarkBlueprintFunctions::IsGPUReachedTargetVersion(const class FString& InBrandInfo, const class FString& TargetInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6HardWareBenchmarkBlueprintFunctions", "IsGPUReachedTargetVersion");

	Params::X6HardWareBenchmarkBlueprintFunctions_IsGPUReachedTargetVersion Parms{};

	Parms.InBrandInfo = std::move(InBrandInfo);
	Parms.TargetInfo = std::move(TargetInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6HeadInfoComponent.GetAllTextMaterialInstanceDynamic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UMaterialInstanceDynamic*> ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UMaterialInstanceDynamic*> UX6HeadInfoComponent::GetAllTextMaterialInstanceDynamic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HeadInfoComponent", "GetAllTextMaterialInstanceDynamic");

	Params::X6HeadInfoComponent_GetAllTextMaterialInstanceDynamic Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6HeadInfoComponent.GetIconMaterialInstanceDynamic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInstanceDynamic* UX6HeadInfoComponent::GetIconMaterialInstanceDynamic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HeadInfoComponent", "GetIconMaterialInstanceDynamic");

	Params::X6HeadInfoComponent_GetIconMaterialInstanceDynamic Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6HeadInfoComponent.GetIconSize
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UX6HeadInfoComponent::GetIconSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HeadInfoComponent", "GetIconSize");

	Params::X6HeadInfoComponent_GetIconSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6HeadInfoComponent.GetInteractiveIconMaterialInstanceDynamic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInstanceDynamic* UX6HeadInfoComponent::GetInteractiveIconMaterialInstanceDynamic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HeadInfoComponent", "GetInteractiveIconMaterialInstanceDynamic");

	Params::X6HeadInfoComponent_GetInteractiveIconMaterialInstanceDynamic Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6HeadInfoComponent.GetInteractiveIconSize
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UX6HeadInfoComponent::GetInteractiveIconSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HeadInfoComponent", "GetInteractiveIconSize");

	Params::X6HeadInfoComponent_GetInteractiveIconSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6HeadInfoComponent.GetTextMaterialInstanceDynamic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PageIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInstanceDynamic* UX6HeadInfoComponent::GetTextMaterialInstanceDynamic(int32 PageIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HeadInfoComponent", "GetTextMaterialInstanceDynamic");

	Params::X6HeadInfoComponent_GetTextMaterialInstanceDynamic Parms{};

	Parms.PageIndex = PageIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6HeadInfoComponent.SetFont
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFont*                            InFont                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6HeadInfoComponent::SetFont(class UFont* InFont)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HeadInfoComponent", "SetFont");

	Params::X6HeadInfoComponent_SetFont Parms{};

	Parms.InFont = InFont;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6HeadInfoComponent.SetIconMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInterface*               InIconMaterial                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6HeadInfoComponent::SetIconMaterial(class UMaterialInterface* InIconMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HeadInfoComponent", "SetIconMaterial");

	Params::X6HeadInfoComponent_SetIconMaterial Parms{};

	Parms.InIconMaterial = InIconMaterial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6HeadInfoComponent.SetIconSize
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector2D&                 InIconSize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6HeadInfoComponent::SetIconSize(const struct FVector2D& InIconSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HeadInfoComponent", "SetIconSize");

	Params::X6HeadInfoComponent_SetIconSize Parms{};

	Parms.InIconSize = std::move(InIconSize);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6HeadInfoComponent.SetIconVisible
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Visible                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6HeadInfoComponent::SetIconVisible(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HeadInfoComponent", "SetIconVisible");

	Params::X6HeadInfoComponent_SetIconVisible Parms{};

	Parms.Visible = Visible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6HeadInfoComponent.SetInteractiveIconMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInterface*               InInteractiveIconMaterial                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6HeadInfoComponent::SetInteractiveIconMaterial(class UMaterialInterface* InInteractiveIconMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HeadInfoComponent", "SetInteractiveIconMaterial");

	Params::X6HeadInfoComponent_SetInteractiveIconMaterial Parms{};

	Parms.InInteractiveIconMaterial = InInteractiveIconMaterial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6HeadInfoComponent.SetInteractiveIconSize
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector2D&                 InInteractiveIconSize                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6HeadInfoComponent::SetInteractiveIconSize(const struct FVector2D& InInteractiveIconSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HeadInfoComponent", "SetInteractiveIconSize");

	Params::X6HeadInfoComponent_SetInteractiveIconSize Parms{};

	Parms.InInteractiveIconSize = std::move(InInteractiveIconSize);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6HeadInfoComponent.SetInteractiveIconVisible
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Visible                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6HeadInfoComponent::SetInteractiveIconVisible(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HeadInfoComponent", "SetInteractiveIconVisible");

	Params::X6HeadInfoComponent_SetInteractiveIconVisible Parms{};

	Parms.Visible = Visible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6HeadInfoComponent.SetText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FText&                      InText                                                 (Parm, NativeAccessSpecifierPublic)

void UX6HeadInfoComponent::SetText(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HeadInfoComponent", "SetText");

	Params::X6HeadInfoComponent_SetText Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6HeadInfoComponent.SetTextMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInterface*               InTextMaterial                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6HeadInfoComponent::SetTextMaterial(class UMaterialInterface* InTextMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HeadInfoComponent", "SetTextMaterial");

	Params::X6HeadInfoComponent_SetTextMaterial Parms{};

	Parms.InTextMaterial = InTextMaterial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6HeadInfoComponent.SetTextScale
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector2D&                 InTextScale                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6HeadInfoComponent::SetTextScale(const struct FVector2D& InTextScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HeadInfoComponent", "SetTextScale");

	Params::X6HeadInfoComponent_SetTextScale Parms{};

	Parms.InTextScale = std::move(InTextScale);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6HeadInfoComponent.SetTimerDelegate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCurveFloat*                      CurveFloat                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(float Time, float Value, bool bFinished)>Delegate                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6HeadInfoComponent::SetTimerDelegate(class UCurveFloat* CurveFloat, TDelegate<void(float Time, float Value, bool bFinished)> Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HeadInfoComponent", "SetTimerDelegate");

	Params::X6HeadInfoComponent_SetTimerDelegate Parms{};

	Parms.CurveFloat = CurveFloat;
	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6HeadInfoComponent.GetTextSize
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UX6HeadInfoComponent::GetTextSize() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HeadInfoComponent", "GetTextSize");

	Params::X6HeadInfoComponent_GetTextSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6HISMManagerSubSystem.AddStaticMeshesToHISM
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UStaticMesh*                      StaticMesh                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FTransform>&        Transforms                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const TArray<class UMaterialInterface*>&CustomMaterials                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TSubclassOf<class UHierarchicalInstancedStaticMeshComponent>InstanceClass                                          (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FGuid>                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FGuid> UX6HISMManagerSubSystem::AddStaticMeshesToHISM(class UStaticMesh* StaticMesh, const TArray<struct FTransform>& Transforms, const TArray<class UMaterialInterface*>& CustomMaterials, TSubclassOf<class UHierarchicalInstancedStaticMeshComponent> InstanceClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HISMManagerSubSystem", "AddStaticMeshesToHISM");

	Params::X6HISMManagerSubSystem_AddStaticMeshesToHISM Parms{};

	Parms.StaticMesh = StaticMesh;
	Parms.Transforms = std::move(Transforms);
	Parms.CustomMaterials = std::move(CustomMaterials);
	Parms.InstanceClass = InstanceClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6HISMManagerSubSystem.AddStaticMeshtoHISM
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UStaticMesh*                      StaticMesh                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTransform&                Transform                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UHierarchicalInstancedStaticMeshComponent>InstanceClass                                          (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGuid                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGuid UX6HISMManagerSubSystem::AddStaticMeshtoHISM(class UStaticMesh* StaticMesh, const struct FTransform& Transform, TSubclassOf<class UHierarchicalInstancedStaticMeshComponent> InstanceClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HISMManagerSubSystem", "AddStaticMeshtoHISM");

	Params::X6HISMManagerSubSystem_AddStaticMeshtoHISM Parms{};

	Parms.StaticMesh = StaticMesh;
	Parms.Transform = std::move(Transform);
	Parms.InstanceClass = InstanceClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6HISMManagerSubSystem.AddStaticMeshToHISMV2
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UStaticMesh*                      StaticMesh                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTransform&                Transform                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class UMaterialInterface*>&CustomMaterials                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TSubclassOf<class UHierarchicalInstancedStaticMeshComponent>InstanceClass                                          (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGuid                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGuid UX6HISMManagerSubSystem::AddStaticMeshToHISMV2(class UStaticMesh* StaticMesh, const struct FTransform& Transform, const TArray<class UMaterialInterface*>& CustomMaterials, TSubclassOf<class UHierarchicalInstancedStaticMeshComponent> InstanceClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HISMManagerSubSystem", "AddStaticMeshToHISMV2");

	Params::X6HISMManagerSubSystem_AddStaticMeshToHISMV2 Parms{};

	Parms.StaticMesh = StaticMesh;
	Parms.Transform = std::move(Transform);
	Parms.CustomMaterials = std::move(CustomMaterials);
	Parms.InstanceClass = InstanceClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6HISMManagerSubSystem.DestroyHISMByGuids
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<struct FGuid>&             InstanceGuids                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UX6HISMManagerSubSystem::DestroyHISMByGuids(const TArray<struct FGuid>& InstanceGuids)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HISMManagerSubSystem", "DestroyHISMByGuids");

	Params::X6HISMManagerSubSystem_DestroyHISMByGuids Parms{};

	Parms.InstanceGuids = std::move(InstanceGuids);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6HISMManagerSubSystem.GetHISMComponentByGuid
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FGuid&                     Guid                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHierarchicalInstancedStaticMeshComponent*ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHierarchicalInstancedStaticMeshComponent* UX6HISMManagerSubSystem::GetHISMComponentByGuid(const struct FGuid& Guid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HISMManagerSubSystem", "GetHISMComponentByGuid");

	Params::X6HISMManagerSubSystem_GetHISMComponentByGuid Parms{};

	Parms.Guid = std::move(Guid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6HISMManagerSubSystem.GetHISMKeyByGuid
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FGuid&                     Guid                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UX6HISMManagerSubSystem::GetHISMKeyByGuid(const struct FGuid& Guid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HISMManagerSubSystem", "GetHISMKeyByGuid");

	Params::X6HISMManagerSubSystem_GetHISMKeyByGuid Parms{};

	Parms.Guid = std::move(Guid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6HISMManagerSubSystem.GetMaxDistanceLimit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6HISMManagerSubSystem::GetMaxDistanceLimit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HISMManagerSubSystem", "GetMaxDistanceLimit");

	Params::X6HISMManagerSubSystem_GetMaxDistanceLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6HISMManagerSubSystem.RemoveInstanceByGuid
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UStaticMesh*                      StaticMesh                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGuid&                     InstanceGuid                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6HISMManagerSubSystem::RemoveInstanceByGuid(class UStaticMesh* StaticMesh, const struct FGuid& InstanceGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HISMManagerSubSystem", "RemoveInstanceByGuid");

	Params::X6HISMManagerSubSystem_RemoveInstanceByGuid Parms{};

	Parms.StaticMesh = StaticMesh;
	Parms.InstanceGuid = std::move(InstanceGuid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6HISMManagerSubSystem.RemoveInstancesByGuid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const TArray<struct FGuid>&             InstanceGuids                                          (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UX6HISMManagerSubSystem::RemoveInstancesByGuid(const TArray<struct FGuid>& InstanceGuids)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HISMManagerSubSystem", "RemoveInstancesByGuid");

	Params::X6HISMManagerSubSystem_RemoveInstancesByGuid Parms{};

	Parms.InstanceGuids = std::move(InstanceGuids);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6HISMManagerSubSystem.RemoveStaticMeshFromHISM
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    HISMKey                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6HISMManagerSubSystem::RemoveStaticMeshFromHISM(const class FString& HISMKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HISMManagerSubSystem", "RemoveStaticMeshFromHISM");

	Params::X6HISMManagerSubSystem_RemoveStaticMeshFromHISM Parms{};

	Parms.HISMKey = std::move(HISMKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6HISMManagerSubSystem.ReplaceInstanceMaterial
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FGuid&                     Guid                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class UMaterialInterface*>&NewMaterials                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGuid                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGuid UX6HISMManagerSubSystem::ReplaceInstanceMaterial(const struct FGuid& Guid, const TArray<class UMaterialInterface*>& NewMaterials)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HISMManagerSubSystem", "ReplaceInstanceMaterial");

	Params::X6HISMManagerSubSystem_ReplaceInstanceMaterial Parms{};

	Parms.Guid = std::move(Guid);
	Parms.NewMaterials = std::move(NewMaterials);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6HISMManagerSubSystem.SetHISMCollisionEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    HISMKey                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECollisionEnabled                       NewType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6HISMManagerSubSystem::SetHISMCollisionEnabled(const class FString& HISMKey, ECollisionEnabled NewType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HISMManagerSubSystem", "SetHISMCollisionEnabled");

	Params::X6HISMManagerSubSystem_SetHISMCollisionEnabled Parms{};

	Parms.HISMKey = std::move(HISMKey);
	Parms.NewType = NewType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6HISMManagerSubSystem.SetInstanceCustomDataValue
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FGuid&                     InstanceId                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CustomDataIndex                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CustomDataValue                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMarkRenderStateDirty                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6HISMManagerSubSystem::SetInstanceCustomDataValue(const struct FGuid& InstanceId, int32 CustomDataIndex, float CustomDataValue, bool bMarkRenderStateDirty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HISMManagerSubSystem", "SetInstanceCustomDataValue");

	Params::X6HISMManagerSubSystem_SetInstanceCustomDataValue Parms{};

	Parms.InstanceId = std::move(InstanceId);
	Parms.CustomDataIndex = CustomDataIndex;
	Parms.CustomDataValue = CustomDataValue;
	Parms.bMarkRenderStateDirty = bMarkRenderStateDirty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6HISMManagerSubSystem.SetMaxDistanceLimit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   limitValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6HISMManagerSubSystem::SetMaxDistanceLimit(float limitValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HISMManagerSubSystem", "SetMaxDistanceLimit");

	Params::X6HISMManagerSubSystem_SetMaxDistanceLimit Parms{};

	Parms.limitValue = limitValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6HISMManagerSubSystem.UpdateInstanceTransform
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FGuid&                     InstanceGuid                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTransform&                NewTransform                                           (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMarkRenderStateDirty                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bTeleport                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGuid                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGuid UX6HISMManagerSubSystem::UpdateInstanceTransform(const struct FGuid& InstanceGuid, const struct FTransform& NewTransform, bool bMarkRenderStateDirty, bool bTeleport)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HISMManagerSubSystem", "UpdateInstanceTransform");

	Params::X6HISMManagerSubSystem_UpdateInstanceTransform Parms{};

	Parms.InstanceGuid = std::move(InstanceGuid);
	Parms.NewTransform = std::move(NewTransform);
	Parms.bMarkRenderStateDirty = bMarkRenderStateDirty;
	Parms.bTeleport = bTeleport;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6HyperLinkTextBlockDecorator.OnLinkClick
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const TMap<class FString, class FString>&Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UX6HyperLinkTextBlockDecorator::OnLinkClick(const TMap<class FString, class FString>& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HyperLinkTextBlockDecorator", "OnLinkClick");

	Params::X6HyperLinkTextBlockDecorator_OnLinkClick Parms{};

	Parms.Data = std::move(Data);

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.X6InputProcessorHelper.BindAnalogInputEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const struct FAnalogInputEvent& AnalogInputEvent)>InOnAnalogInput                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6InputProcessorHelper::BindAnalogInputEvent(TDelegate<void(const struct FAnalogInputEvent& AnalogInputEvent)> InOnAnalogInput, int32 InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6InputProcessorHelper", "BindAnalogInputEvent");

	Params::X6InputProcessorHelper_BindAnalogInputEvent Parms{};

	Parms.InOnAnalogInput = InOnAnalogInput;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6InputProcessorHelper.BindGestureEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const struct FPointerEvent& MouseEvent)>InOnGesture                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6InputProcessorHelper::BindGestureEvent(TDelegate<void(const struct FPointerEvent& MouseEvent)> InOnGesture, int32 InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6InputProcessorHelper", "BindGestureEvent");

	Params::X6InputProcessorHelper_BindGestureEvent Parms{};

	Parms.InOnGesture = InOnGesture;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6InputProcessorHelper.BindInputDeviceEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(EX6InputDeviceKeyType InputDeviceKeyType)>InOnInputDevice                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6InputProcessorHelper::BindInputDeviceEvent(TDelegate<void(EX6InputDeviceKeyType InputDeviceKeyType)> InOnInputDevice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6InputProcessorHelper", "BindInputDeviceEvent");

	Params::X6InputProcessorHelper_BindInputDeviceEvent Parms{};

	Parms.InOnInputDevice = InOnInputDevice;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6InputProcessorHelper.BindKeyDownEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const struct FKeyEvent& KeyEvent)>InOnKeyDown                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6InputProcessorHelper::BindKeyDownEvent(TDelegate<void(const struct FKeyEvent& KeyEvent)> InOnKeyDown, int32 InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6InputProcessorHelper", "BindKeyDownEvent");

	Params::X6InputProcessorHelper_BindKeyDownEvent Parms{};

	Parms.InOnKeyDown = InOnKeyDown;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6InputProcessorHelper.BindKeyUpEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const struct FKeyEvent& KeyEvent)>InOnKeyUp                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6InputProcessorHelper::BindKeyUpEvent(TDelegate<void(const struct FKeyEvent& KeyEvent)> InOnKeyUp, int32 InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6InputProcessorHelper", "BindKeyUpEvent");

	Params::X6InputProcessorHelper_BindKeyUpEvent Parms{};

	Parms.InOnKeyUp = InOnKeyUp;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6InputProcessorHelper.BindMotionDetectedEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const struct FMotionEvent& MotionEvent)>InOnMotionDetected                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6InputProcessorHelper::BindMotionDetectedEvent(TDelegate<void(const struct FMotionEvent& MotionEvent)> InOnMotionDetected, int32 InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6InputProcessorHelper", "BindMotionDetectedEvent");

	Params::X6InputProcessorHelper_BindMotionDetectedEvent Parms{};

	Parms.InOnMotionDetected = InOnMotionDetected;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6InputProcessorHelper.BindMouseButtonDoubleClickEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const struct FPointerEvent& MouseEvent)>InOnMouseButtonDoubleClick                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6InputProcessorHelper::BindMouseButtonDoubleClickEvent(TDelegate<void(const struct FPointerEvent& MouseEvent)> InOnMouseButtonDoubleClick, int32 InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6InputProcessorHelper", "BindMouseButtonDoubleClickEvent");

	Params::X6InputProcessorHelper_BindMouseButtonDoubleClickEvent Parms{};

	Parms.InOnMouseButtonDoubleClick = InOnMouseButtonDoubleClick;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6InputProcessorHelper.BindMouseButtonDownEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const struct FPointerEvent& MouseEvent)>InOnMouseButtonDown                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6InputProcessorHelper::BindMouseButtonDownEvent(TDelegate<void(const struct FPointerEvent& MouseEvent)> InOnMouseButtonDown, int32 InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6InputProcessorHelper", "BindMouseButtonDownEvent");

	Params::X6InputProcessorHelper_BindMouseButtonDownEvent Parms{};

	Parms.InOnMouseButtonDown = InOnMouseButtonDown;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6InputProcessorHelper.BindMouseButtonUpEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const struct FPointerEvent& MouseEvent)>InOnMouseButtonUp                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6InputProcessorHelper::BindMouseButtonUpEvent(TDelegate<void(const struct FPointerEvent& MouseEvent)> InOnMouseButtonUp, int32 InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6InputProcessorHelper", "BindMouseButtonUpEvent");

	Params::X6InputProcessorHelper_BindMouseButtonUpEvent Parms{};

	Parms.InOnMouseButtonUp = InOnMouseButtonUp;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6InputProcessorHelper.BindMouseMoveEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const struct FPointerEvent& MouseEvent)>InOnMouseMove                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6InputProcessorHelper::BindMouseMoveEvent(TDelegate<void(const struct FPointerEvent& MouseEvent)> InOnMouseMove, int32 InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6InputProcessorHelper", "BindMouseMoveEvent");

	Params::X6InputProcessorHelper_BindMouseMoveEvent Parms{};

	Parms.InOnMouseMove = InOnMouseMove;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6InputProcessorHelper.BindMouseWheelEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const struct FPointerEvent& MouseEvent)>InOnMouseWheel                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6InputProcessorHelper::BindMouseWheelEvent(TDelegate<void(const struct FPointerEvent& MouseEvent)> InOnMouseWheel, int32 InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6InputProcessorHelper", "BindMouseWheelEvent");

	Params::X6InputProcessorHelper_BindMouseWheelEvent Parms{};

	Parms.InOnMouseWheel = InOnMouseWheel;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6InputProcessorHelper.GetCurInputDeviceKeyType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EX6InputDeviceKeyType                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EX6InputDeviceKeyType UX6InputProcessorHelper::GetCurInputDeviceKeyType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6InputProcessorHelper", "GetCurInputDeviceKeyType");

	Params::X6InputProcessorHelper_GetCurInputDeviceKeyType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6InputProcessorHelper.GetMouseResponseDisabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6InputProcessorHelper::GetMouseResponseDisabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6InputProcessorHelper", "GetMouseResponseDisabled");

	Params::X6InputProcessorHelper_GetMouseResponseDisabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6InputProcessorHelper.SetInputDeviceIgnoreValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InInputDeviceIgnoreValue                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6InputProcessorHelper::SetInputDeviceIgnoreValue(float InInputDeviceIgnoreValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6InputProcessorHelper", "SetInputDeviceIgnoreValue");

	Params::X6InputProcessorHelper_SetInputDeviceIgnoreValue Parms{};

	Parms.InInputDeviceIgnoreValue = InInputDeviceIgnoreValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6InputProcessorHelper.SetMouseResponseDisabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bDisable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6InputProcessorHelper::SetMouseResponseDisabled(bool bDisable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6InputProcessorHelper", "SetMouseResponseDisabled");

	Params::X6InputProcessorHelper_SetMouseResponseDisabled Parms{};

	Parms.bDisable = bDisable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6InputProcessorHelper.UnbindAnalogInputEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const struct FAnalogInputEvent& AnalogInputEvent)>InOnAnalogInput                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6InputProcessorHelper::UnbindAnalogInputEvent(TDelegate<void(const struct FAnalogInputEvent& AnalogInputEvent)> InOnAnalogInput, int32 InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6InputProcessorHelper", "UnbindAnalogInputEvent");

	Params::X6InputProcessorHelper_UnbindAnalogInputEvent Parms{};

	Parms.InOnAnalogInput = InOnAnalogInput;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6InputProcessorHelper.UnbindGestureEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const struct FPointerEvent& MouseEvent)>InOnGesture                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6InputProcessorHelper::UnbindGestureEvent(TDelegate<void(const struct FPointerEvent& MouseEvent)> InOnGesture, int32 InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6InputProcessorHelper", "UnbindGestureEvent");

	Params::X6InputProcessorHelper_UnbindGestureEvent Parms{};

	Parms.InOnGesture = InOnGesture;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6InputProcessorHelper.UnbindInputDeviceEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(EX6InputDeviceKeyType InputDeviceKeyType)>InOnInputDevice                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6InputProcessorHelper::UnbindInputDeviceEvent(TDelegate<void(EX6InputDeviceKeyType InputDeviceKeyType)> InOnInputDevice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6InputProcessorHelper", "UnbindInputDeviceEvent");

	Params::X6InputProcessorHelper_UnbindInputDeviceEvent Parms{};

	Parms.InOnInputDevice = InOnInputDevice;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6InputProcessorHelper.UnbindKeyDownEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const struct FKeyEvent& KeyEvent)>InOnKeyDown                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6InputProcessorHelper::UnbindKeyDownEvent(TDelegate<void(const struct FKeyEvent& KeyEvent)> InOnKeyDown, int32 InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6InputProcessorHelper", "UnbindKeyDownEvent");

	Params::X6InputProcessorHelper_UnbindKeyDownEvent Parms{};

	Parms.InOnKeyDown = InOnKeyDown;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6InputProcessorHelper.UnbindKeyUpEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const struct FKeyEvent& KeyEvent)>InOnKeyUp                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6InputProcessorHelper::UnbindKeyUpEvent(TDelegate<void(const struct FKeyEvent& KeyEvent)> InOnKeyUp, int32 InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6InputProcessorHelper", "UnbindKeyUpEvent");

	Params::X6InputProcessorHelper_UnbindKeyUpEvent Parms{};

	Parms.InOnKeyUp = InOnKeyUp;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6InputProcessorHelper.UnbindMotionDetectedEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const struct FMotionEvent& MotionEvent)>InOnMotionDetected                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6InputProcessorHelper::UnbindMotionDetectedEvent(TDelegate<void(const struct FMotionEvent& MotionEvent)> InOnMotionDetected, int32 InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6InputProcessorHelper", "UnbindMotionDetectedEvent");

	Params::X6InputProcessorHelper_UnbindMotionDetectedEvent Parms{};

	Parms.InOnMotionDetected = InOnMotionDetected;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6InputProcessorHelper.UnbindMouseButtonDoubleClickEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const struct FPointerEvent& MouseEvent)>InOnMouseButtonDoubleClick                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6InputProcessorHelper::UnbindMouseButtonDoubleClickEvent(TDelegate<void(const struct FPointerEvent& MouseEvent)> InOnMouseButtonDoubleClick, int32 InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6InputProcessorHelper", "UnbindMouseButtonDoubleClickEvent");

	Params::X6InputProcessorHelper_UnbindMouseButtonDoubleClickEvent Parms{};

	Parms.InOnMouseButtonDoubleClick = InOnMouseButtonDoubleClick;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6InputProcessorHelper.UnbindMouseButtonDownEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const struct FPointerEvent& MouseEvent)>InOnMouseButtonDown                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6InputProcessorHelper::UnbindMouseButtonDownEvent(TDelegate<void(const struct FPointerEvent& MouseEvent)> InOnMouseButtonDown, int32 InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6InputProcessorHelper", "UnbindMouseButtonDownEvent");

	Params::X6InputProcessorHelper_UnbindMouseButtonDownEvent Parms{};

	Parms.InOnMouseButtonDown = InOnMouseButtonDown;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6InputProcessorHelper.UnbindMouseButtonUpEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const struct FPointerEvent& MouseEvent)>InOnMouseButtonUp                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6InputProcessorHelper::UnbindMouseButtonUpEvent(TDelegate<void(const struct FPointerEvent& MouseEvent)> InOnMouseButtonUp, int32 InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6InputProcessorHelper", "UnbindMouseButtonUpEvent");

	Params::X6InputProcessorHelper_UnbindMouseButtonUpEvent Parms{};

	Parms.InOnMouseButtonUp = InOnMouseButtonUp;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6InputProcessorHelper.UnbindMouseMoveEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const struct FPointerEvent& MouseEvent)>InOnMouseMove                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6InputProcessorHelper::UnbindMouseMoveEvent(TDelegate<void(const struct FPointerEvent& MouseEvent)> InOnMouseMove, int32 InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6InputProcessorHelper", "UnbindMouseMoveEvent");

	Params::X6InputProcessorHelper_UnbindMouseMoveEvent Parms{};

	Parms.InOnMouseMove = InOnMouseMove;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6InputProcessorHelper.UnbindMouseWheelEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const struct FPointerEvent& MouseEvent)>InOnMouseWheel                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6InputProcessorHelper::UnbindMouseWheelEvent(TDelegate<void(const struct FPointerEvent& MouseEvent)> InOnMouseWheel, int32 InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6InputProcessorHelper", "UnbindMouseWheelEvent");

	Params::X6InputProcessorHelper_UnbindMouseWheelEvent Parms{};

	Parms.InOnMouseWheel = InOnMouseWheel;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6InputTouchDelegateBinding.HandleInputTouch_0
// (Final, Native, Public, HasDefaults)
// Parameters:
// ETouchIndex                             FingerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6InputTouchDelegateBinding::HandleInputTouch_0(ETouchIndex FingerIndex, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6InputTouchDelegateBinding", "HandleInputTouch_0");

	Params::X6InputTouchDelegateBinding_HandleInputTouch_0 Parms{};

	Parms.FingerIndex = FingerIndex;
	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6InputTouchDelegateBinding.HandleInputTouch_1
// (Final, Native, Public, HasDefaults)
// Parameters:
// ETouchIndex                             FingerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6InputTouchDelegateBinding::HandleInputTouch_1(ETouchIndex FingerIndex, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6InputTouchDelegateBinding", "HandleInputTouch_1");

	Params::X6InputTouchDelegateBinding_HandleInputTouch_1 Parms{};

	Parms.FingerIndex = FingerIndex;
	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6InputTouchDelegateBinding.HandleInputTouch_2
// (Final, Native, Public, HasDefaults)
// Parameters:
// ETouchIndex                             FingerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6InputTouchDelegateBinding::HandleInputTouch_2(ETouchIndex FingerIndex, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6InputTouchDelegateBinding", "HandleInputTouch_2");

	Params::X6InputTouchDelegateBinding_HandleInputTouch_2 Parms{};

	Parms.FingerIndex = FingerIndex;
	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6InputTouchDelegateBinding.HandleInputTouch_3
// (Final, Native, Public, HasDefaults)
// Parameters:
// ETouchIndex                             FingerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6InputTouchDelegateBinding::HandleInputTouch_3(ETouchIndex FingerIndex, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6InputTouchDelegateBinding", "HandleInputTouch_3");

	Params::X6InputTouchDelegateBinding_HandleInputTouch_3 Parms{};

	Parms.FingerIndex = FingerIndex;
	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6InteractiveActorComponent.BakeArrowsToSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UObject>              ObjectClass                                            (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6InteractiveActorComponent::BakeArrowsToSlot(TSubclassOf<class UObject> ObjectClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6InteractiveActorComponent", "BakeArrowsToSlot");

	Params::X6InteractiveActorComponent_BakeArrowsToSlot Parms{};

	Parms.ObjectClass = ObjectClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6InteractiveActorComponent.GetChatBubbleSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FChatBubbleSlotDefinition        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FChatBubbleSlotDefinition UX6InteractiveActorComponent::GetChatBubbleSlot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6InteractiveActorComponent", "GetChatBubbleSlot");

	Params::X6InteractiveActorComponent_GetChatBubbleSlot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6InteractiveActorComponent.GetNearestSlotIndex
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FVector&                   TargetLocation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UX6InteractiveActorComponent::GetNearestSlotIndex(const struct FVector& TargetLocation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6InteractiveActorComponent", "GetNearestSlotIndex");

	Params::X6InteractiveActorComponent_GetNearestSlotIndex Parms{};

	Parms.TargetLocation = std::move(TargetLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6InteractiveActorComponent.GetSlotTransform
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             SlotIndex                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTransform UX6InteractiveActorComponent::GetSlotTransform(const int32 SlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6InteractiveActorComponent", "GetSlotTransform");

	Params::X6InteractiveActorComponent_GetSlotTransform Parms{};

	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6LevelSequencePreLoadObjectInterface.StartLoad
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const class FString&                    LevelSequenceName                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FLoadProperty>&     LoadProperties                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void IX6LevelSequencePreLoadObjectInterface::StartLoad(const class FString& LevelSequenceName, const TArray<struct FLoadProperty>& LoadProperties)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6LevelSequencePreLoadObjectInterface", "StartLoad");

	Params::X6LevelSequencePreLoadObjectInterface_StartLoad Parms{};

	Parms.LevelSequenceName = std::move(LevelSequenceName);
	Parms.LoadProperties = std::move(LoadProperties);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6LevelSequencePreLoadSectionInterface.StartLoad
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// const class FString&                    LevelSequenceName                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IX6LevelSequencePreLoadSectionInterface::StartLoad(const class FString& LevelSequenceName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6LevelSequencePreLoadSectionInterface", "StartLoad");

	Params::X6LevelSequencePreLoadSectionInterface_StartLoad Parms{};

	Parms.LevelSequenceName = std::move(LevelSequenceName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6UserObjectListEntry.OnListItemObjectSetViaIndex
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IX6UserObjectListEntry::OnListItemObjectSetViaIndex(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6UserObjectListEntry", "OnListItemObjectSetViaIndex");

	Params::X6UserObjectListEntry_OnListItemObjectSetViaIndex Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.X6UserObjectListEntry.OnListItemValueChangedViaIndex
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IX6UserObjectListEntry::OnListItemValueChangedViaIndex(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6UserObjectListEntry", "OnListItemValueChangedViaIndex");

	Params::X6UserObjectListEntry_OnListItemValueChangedViaIndex Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.X6ListView.AddAnItem
// (Final, Native, Protected, BlueprintCallable)

void UX6ListView::AddAnItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ListView", "AddAnItem");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ListView.BP_NavigateToItemIndex
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6ListView::BP_NavigateToItemIndex(int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ListView", "BP_NavigateToItemIndex");

	Params::X6ListView_BP_NavigateToItemIndex Parms{};

	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ListView.BP_OnListItemValueChanged
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6ListView::BP_OnListItemValueChanged(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ListView", "BP_OnListItemValueChanged");

	Params::X6ListView_BP_OnListItemValueChanged Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ListView.BP_ScrollItemIndexIntoView
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6ListView::BP_ScrollItemIndexIntoView(int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ListView", "BP_ScrollItemIndexIntoView");

	Params::X6ListView_BP_ScrollItemIndexIntoView Parms{};

	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ListView.BP_SetItemSelectionByIndex
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSelected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6ListView::BP_SetItemSelectionByIndex(int32 Index_0, bool bSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ListView", "BP_SetItemSelectionByIndex");

	Params::X6ListView_BP_SetItemSelectionByIndex Parms{};

	Parms.Index_0 = Index_0;
	Parms.bSelected = bSelected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ListView.BP_SetListItemCount
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6ListView::BP_SetListItemCount(int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ListView", "BP_SetListItemCount");

	Params::X6ListView_BP_SetListItemCount Parms{};

	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ListView.BP_SetSelectedItemByIndex
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6ListView::BP_SetSelectedItemByIndex(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ListView", "BP_SetSelectedItemByIndex");

	Params::X6ListView_BP_SetSelectedItemByIndex Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ListView.RemoveItemByIndex
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6ListView::RemoveItemByIndex(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ListView", "RemoveItemByIndex");

	Params::X6ListView_RemoveItemByIndex Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ListView.SetOverriddenItemLength
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// double                                  Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6ListView::SetOverriddenItemLength(int32 Index_0, double Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ListView", "SetOverriddenItemLength");

	Params::X6ListView_SetOverriddenItemLength Parms{};

	Parms.Index_0 = Index_0;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ListView.SetOverriddenItemLengthByArray
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<float>*                          ItemsLength                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    bClearOldData                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6ListView::SetOverriddenItemLengthByArray(TArray<float>* ItemsLength, bool bClearOldData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ListView", "SetOverriddenItemLengthByArray");

	Params::X6ListView_SetOverriddenItemLengthByArray Parms{};

	Parms.bClearOldData = bClearOldData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ItemsLength != nullptr)
		*ItemsLength = std::move(Parms.ItemsLength);
}


// Function X6Game.X6ListView.SetOverriddenTotalLength
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// double                                  TotalLength                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6ListView::SetOverriddenTotalLength(double TotalLength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ListView", "SetOverriddenTotalLength");

	Params::X6ListView_SetOverriddenTotalLength Parms{};

	Parms.TotalLength = TotalLength;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ListView.SetScrollBarAlwaysVisible
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bAlwaysShowScrollbar                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6ListView::SetScrollBarAlwaysVisible(bool bAlwaysShowScrollbar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ListView", "SetScrollBarAlwaysVisible");

	Params::X6ListView_SetScrollBarAlwaysVisible Parms{};

	Parms.bAlwaysShowScrollbar = bAlwaysShowScrollbar;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ListView.SetScrollBarTrackAlwaysVisible
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bAlwaysShowScrollbarTrack                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6ListView::SetScrollBarTrackAlwaysVisible(bool bAlwaysShowScrollbarTrack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ListView", "SetScrollBarTrackAlwaysVisible");

	Params::X6ListView_SetScrollBarTrackAlwaysVisible Parms{};

	Parms.bAlwaysShowScrollbarTrack = bAlwaysShowScrollbarTrack;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ListView.SetScrollSizeNotBaseOnNumLines
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bNotBaseOnNumLines                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6ListView::SetScrollSizeNotBaseOnNumLines(bool bNotBaseOnNumLines)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ListView", "SetScrollSizeNotBaseOnNumLines");

	Params::X6ListView_SetScrollSizeNotBaseOnNumLines Parms{};

	Parms.bNotBaseOnNumLines = bNotBaseOnNumLines;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ListView.BP_GetSelectedIndex
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UX6ListView::BP_GetSelectedIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ListView", "BP_GetSelectedIndex");

	Params::X6ListView_BP_GetSelectedIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6ListView.BP_GetSelectedItemsViaIndex
// (Final, Native, Protected, HasOutParams, BlueprintCallable, Const)
// Parameters:
// TArray<int32>*                          Items                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6ListView::BP_GetSelectedItemsViaIndex(TArray<int32>* Items) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ListView", "BP_GetSelectedItemsViaIndex");

	Params::X6ListView_BP_GetSelectedItemsViaIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Items != nullptr)
		*Items = std::move(Parms.Items);

	return Parms.ReturnValue;
}


// Function X6Game.X6ListView.BP_IsItemVisibleByIndex
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6ListView::BP_IsItemVisibleByIndex(int32 Index_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ListView", "BP_IsItemVisibleByIndex");

	Params::X6ListView_BP_IsItemVisibleByIndex Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6ListView.GetScrollDistance
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6ListView::GetScrollDistance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ListView", "GetScrollDistance");

	Params::X6ListView_GetScrollDistance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6ListView.GetScrollDistanceRemaining
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6ListView::GetScrollDistanceRemaining() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ListView", "GetScrollDistanceRemaining");

	Params::X6ListView_GetScrollDistanceRemaining Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6LocalizationSettings.GetX6LocalizationSettings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UX6LocalizationSettings*    ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UX6LocalizationSettings* UX6LocalizationSettings::GetX6LocalizationSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6LocalizationSettings", "GetX6LocalizationSettings");

	Params::X6LocalizationSettings_GetX6LocalizationSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6MapHudBase.NT_CalculateTime
// (Final, Native, Protected, BlueprintCallable)

void UX6MapHudBase::NT_CalculateTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6MapHudBase", "NT_CalculateTime");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6MapHudBase.NT_OnPostMoveContentPosition
// (Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// const struct FVector2D&                 Pos                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6MapHudBase::NT_OnPostMoveContentPosition(const struct FVector2D& Pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6MapHudBase", "NT_OnPostMoveContentPosition");

	Params::X6MapHudBase_NT_OnPostMoveContentPosition Parms{};

	Parms.Pos = std::move(Pos);

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.X6MapHudBase.NT_PostProcessMapMoveInternalNormal
// (Final, Native, Protected, BlueprintCallable)

void UX6MapHudBase::NT_PostProcessMapMoveInternalNormal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6MapHudBase", "NT_PostProcessMapMoveInternalNormal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6MapHudBase.NT_SetMoveContentPosition
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector2D&                 Pos                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6MapHudBase::NT_SetMoveContentPosition(const struct FVector2D& Pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6MapHudBase", "NT_SetMoveContentPosition");

	Params::X6MapHudBase_NT_SetMoveContentPosition Parms{};

	Parms.Pos = std::move(Pos);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6MapHudBase.NT_UpdateMapRootConstraintInfo
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGeometry&                 Geometry                                               (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UX6MapHudBase::NT_UpdateMapRootConstraintInfo(const struct FGeometry& Geometry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6MapHudBase", "NT_UpdateMapRootConstraintInfo");

	Params::X6MapHudBase_NT_UpdateMapRootConstraintInfo Parms{};

	Parms.Geometry = std::move(Geometry);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6MapHudBase.NT_ConstraintMoveRootPos
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FVector2D&                 originPos                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UX6MapHudBase::NT_ConstraintMoveRootPos(const struct FVector2D& originPos) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6MapHudBase", "NT_ConstraintMoveRootPos");

	Params::X6MapHudBase_NT_ConstraintMoveRootPos Parms{};

	Parms.originPos = std::move(originPos);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6MapHudBase.NT_ConvertMapPosToWindowPos
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FVector2D&                 mapPos                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UX6MapHudBase::NT_ConvertMapPosToWindowPos(const struct FVector2D& mapPos) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6MapHudBase", "NT_ConvertMapPosToWindowPos");

	Params::X6MapHudBase_NT_ConvertMapPosToWindowPos Parms{};

	Parms.mapPos = std::move(mapPos);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6MapHudBase.NT_ConvertWindowPosToMapPos
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FVector2D&                 windowPos                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UX6MapHudBase::NT_ConvertWindowPosToMapPos(const struct FVector2D& windowPos) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6MapHudBase", "NT_ConvertWindowPosToMapPos");

	Params::X6MapHudBase_NT_ConvertWindowPosToMapPos Parms{};

	Parms.windowPos = std::move(windowPos);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6ModularFeaturesContainerComp.GetPlayerShadowDecalProcessor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPlayerShadowDecalProcessor*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayerShadowDecalProcessor* UX6ModularFeaturesContainerComp::GetPlayerShadowDecalProcessor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ModularFeaturesContainerComp", "GetPlayerShadowDecalProcessor");

	Params::X6ModularFeaturesContainerComp_GetPlayerShadowDecalProcessor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6ModularFeaturesContainerComp.K2_GetCurTargetShadowGroundDistance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6ModularFeaturesContainerComp::K2_GetCurTargetShadowGroundDistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ModularFeaturesContainerComp", "K2_GetCurTargetShadowGroundDistance");

	Params::X6ModularFeaturesContainerComp_K2_GetCurTargetShadowGroundDistance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6ModularFeaturesContainerComp.K2_InitConfigInformation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// float                                   MaxTraceDownHeight                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxJumpHeight                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   ShadowDecalSize                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SphereTraceRadius                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                      Curve_ShadowDecalDistanceMappedToScale2D               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6ModularFeaturesContainerComp::K2_InitConfigInformation(float MaxTraceDownHeight, float MaxJumpHeight, const struct FVector& ShadowDecalSize, float SphereTraceRadius, class UCurveFloat* Curve_ShadowDecalDistanceMappedToScale2D)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ModularFeaturesContainerComp", "K2_InitConfigInformation");

	Params::X6ModularFeaturesContainerComp_K2_InitConfigInformation Parms{};

	Parms.MaxTraceDownHeight = MaxTraceDownHeight;
	Parms.MaxJumpHeight = MaxJumpHeight;
	Parms.ShadowDecalSize = std::move(ShadowDecalSize);
	Parms.SphereTraceRadius = SphereTraceRadius;
	Parms.Curve_ShadowDecalDistanceMappedToScale2D = Curve_ShadowDecalDistanceMappedToScale2D;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ModularFeaturesContainerComp.K2_InitShadowDynamicMIParam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             OpacityParamName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             BlurWeightParamName                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ScaleParamName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6ModularFeaturesContainerComp::K2_InitShadowDynamicMIParam(class FName OpacityParamName, class FName BlurWeightParamName, class FName ScaleParamName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ModularFeaturesContainerComp", "K2_InitShadowDynamicMIParam");

	Params::X6ModularFeaturesContainerComp_K2_InitShadowDynamicMIParam Parms{};

	Parms.OpacityParamName = OpacityParamName;
	Parms.BlurWeightParamName = BlurWeightParamName;
	Parms.ScaleParamName = ScaleParamName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ModularFeaturesContainerComp.K2_UpdateDecalMaterialInstanceParam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ACharacter*                       OwnerCharacter                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         ShadowDynamicMI                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6ModularFeaturesContainerComp::K2_UpdateDecalMaterialInstanceParam(float DeltaSeconds, class ACharacter* OwnerCharacter, class UMaterialInstanceDynamic* ShadowDynamicMI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ModularFeaturesContainerComp", "K2_UpdateDecalMaterialInstanceParam");

	Params::X6ModularFeaturesContainerComp_K2_UpdateDecalMaterialInstanceParam Parms{};

	Parms.DeltaSeconds = DeltaSeconds;
	Parms.OwnerCharacter = OwnerCharacter;
	Parms.ShadowDynamicMI = ShadowDynamicMI;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ModularFeaturesContainerComp.K2_UpdateDrawPlayerShadowDecal
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ACharacter*                       OwnerCharacter                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMeshComponent*           SkeletalMeshComponent                                  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDecalComponent*                  DecalComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  ShadowOnWaterPlaneMeshComp                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6ModularFeaturesContainerComp::K2_UpdateDrawPlayerShadowDecal(float DeltaSeconds, class ACharacter* OwnerCharacter, class USkeletalMeshComponent* SkeletalMeshComponent, class UDecalComponent* DecalComponent, class USceneComponent* ShadowOnWaterPlaneMeshComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ModularFeaturesContainerComp", "K2_UpdateDrawPlayerShadowDecal");

	Params::X6ModularFeaturesContainerComp_K2_UpdateDrawPlayerShadowDecal Parms{};

	Parms.DeltaSeconds = DeltaSeconds;
	Parms.OwnerCharacter = OwnerCharacter;
	Parms.SkeletalMeshComponent = SkeletalMeshComponent;
	Parms.DecalComponent = DecalComponent;
	Parms.ShadowOnWaterPlaneMeshComp = ShadowOnWaterPlaneMeshComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6ModularFeaturesContainerComp.K2_UpdateDrawPlayerShadowDecal_Mobile
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ACharacter*                       OwnerCharacter                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMeshComponent*           SkeletalMeshComponent                                  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  CubeMeshComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  ShadowOnWaterPlaneMeshComp                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6ModularFeaturesContainerComp::K2_UpdateDrawPlayerShadowDecal_Mobile(float DeltaSeconds, class ACharacter* OwnerCharacter, class USkeletalMeshComponent* SkeletalMeshComponent, class USceneComponent* CubeMeshComponent, class USceneComponent* ShadowOnWaterPlaneMeshComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ModularFeaturesContainerComp", "K2_UpdateDrawPlayerShadowDecal_Mobile");

	Params::X6ModularFeaturesContainerComp_K2_UpdateDrawPlayerShadowDecal_Mobile Parms{};

	Parms.DeltaSeconds = DeltaSeconds;
	Parms.OwnerCharacter = OwnerCharacter;
	Parms.SkeletalMeshComponent = SkeletalMeshComponent;
	Parms.CubeMeshComponent = CubeMeshComponent;
	Parms.ShadowOnWaterPlaneMeshComp = ShadowOnWaterPlaneMeshComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6MonsterAnimInstance.OnAnimAssetSetEvent
// (Event, Public, BlueprintEvent)

void UX6MonsterAnimInstance::OnAnimAssetSetEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6MonsterAnimInstance", "OnAnimAssetSetEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function X6Game.X6MonsterAnimInstance.PostOwnerBeginPlay
// (Final, Native, Private)
// Parameters:
// class AActor*                           OwnerActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6MonsterAnimInstance::PostOwnerBeginPlay(class AActor* OwnerActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6MonsterAnimInstance", "PostOwnerBeginPlay");

	Params::X6MonsterAnimInstance_PostOwnerBeginPlay Parms{};

	Parms.OwnerActor = OwnerActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6MultiLineEditableText.SetTextWithCursorStay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FText&                      InText                                                 (Parm, NativeAccessSpecifierPublic)

void UX6MultiLineEditableText::SetTextWithCursorStay(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6MultiLineEditableText", "SetTextWithCursorStay");

	Params::X6MultiLineEditableText_SetTextWithCursorStay Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6MultiLineEditableText.IsComposing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6MultiLineEditableText::IsComposing() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6MultiLineEditableText", "IsComposing");

	Params::X6MultiLineEditableText_IsComposing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6NavigationRegionComponent.UpdateRegionBounds
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   Center                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Extent                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NavigationRegionComponent::UpdateRegionBounds(const struct FVector& Center, const struct FVector& Extent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NavigationRegionComponent", "UpdateRegionBounds");

	Params::X6NavigationRegionComponent_UpdateRegionBounds Parms{};

	Parms.Center = std::move(Center);
	Parms.Extent = std::move(Extent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6NavigationRegionComponent.UpdateRegionFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InRegionFlag                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NavigationRegionComponent::UpdateRegionFlag(int32 InRegionFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NavigationRegionComponent", "UpdateRegionFlag");

	Params::X6NavigationRegionComponent_UpdateRegionFlag Parms{};

	Parms.InRegionFlag = InRegionFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6NavigationRegionComponent.UpdateRegionPassableState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bPassable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NavigationRegionComponent::UpdateRegionPassableState(bool bPassable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NavigationRegionComponent", "UpdateRegionPassableState");

	Params::X6NavigationRegionComponent_UpdateRegionPassableState Parms{};

	Parms.bPassable = bPassable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6NavigationPathPoints.AddPathPoint
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// const struct FVector&                   Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NavigationPathPoints::AddPathPoint(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NavigationPathPoints", "AddPathPoint");

	Params::X6NavigationPathPoints_AddPathPoint Parms{};

	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6NavigationPathPoints.InsertPathPoint
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// const struct FVector&                   Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NavigationPathPoints::InsertPathPoint(const struct FVector& Location, int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NavigationPathPoints", "InsertPathPoint");

	Params::X6NavigationPathPoints_InsertPathPoint Parms{};

	Parms.Location = std::move(Location);
	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6NavigationPathPoints.RemoveAgentPassedPoints
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class AAIController*              Controller                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NavigationPathPoints::RemoveAgentPassedPoints(const class AAIController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NavigationPathPoints", "RemoveAgentPassedPoints");

	Params::X6NavigationPathPoints_RemoveAgentPassedPoints Parms{};

	Parms.Controller = Controller;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6NavigationPathPoints.RemovePassedPoints
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   CurrentLocation                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NavigationPathPoints::RemovePassedPoints(const struct FVector& CurrentLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NavigationPathPoints", "RemovePassedPoints");

	Params::X6NavigationPathPoints_RemovePassedPoints Parms{};

	Parms.CurrentLocation = std::move(CurrentLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6NavigationPathPoints.RemovePathPoint
// (Final, Native, Public)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NavigationPathPoints::RemovePathPoint(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NavigationPathPoints", "RemovePathPoint");

	Params::X6NavigationPathPoints_RemovePathPoint Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6NavigationPathPoints.ResetPathPointsHeight
// (Final, Native, Public)
// Parameters:
// float                                   NewHeight                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NavigationPathPoints::ResetPathPointsHeight(float NewHeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NavigationPathPoints", "ResetPathPointsHeight");

	Params::X6NavigationPathPoints_ResetPathPointsHeight Parms{};

	Parms.NewHeight = NewHeight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6NavigationPathPoints.DrawDebugPath
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLinearColor&              NormalPathColor                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLinearColor&              RoadPathColor                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLinearColor&              RoadTransactionColor                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLinearColor&              RoadNodeColor                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLinearColor&              StartSegmentColor                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLinearColor&              EndSegmentColor                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NavigationPathPoints::DrawDebugPath(float Duration, const struct FLinearColor& NormalPathColor, const struct FLinearColor& RoadPathColor, const struct FLinearColor& RoadTransactionColor, const struct FLinearColor& RoadNodeColor, const struct FLinearColor& StartSegmentColor, const struct FLinearColor& EndSegmentColor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NavigationPathPoints", "DrawDebugPath");

	Params::X6NavigationPathPoints_DrawDebugPath Parms{};

	Parms.Duration = Duration;
	Parms.NormalPathColor = std::move(NormalPathColor);
	Parms.RoadPathColor = std::move(RoadPathColor);
	Parms.RoadTransactionColor = std::move(RoadTransactionColor);
	Parms.RoadNodeColor = std::move(RoadNodeColor);
	Parms.StartSegmentColor = std::move(StartSegmentColor);
	Parms.EndSegmentColor = std::move(EndSegmentColor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6NavigationPathPoints.IsGeneratedRoadPoint
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   PointIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6NavigationPathPoints::IsGeneratedRoadPoint(int32 PointIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NavigationPathPoints", "IsGeneratedRoadPoint");

	Params::X6NavigationPathPoints_IsGeneratedRoadPoint Parms{};

	Parms.PointIndex = PointIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6NavigationPathPoints.IsNavLink
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   PointIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6NavigationPathPoints::IsNavLink(int32 PointIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NavigationPathPoints", "IsNavLink");

	Params::X6NavigationPathPoints_IsNavLink Parms{};

	Parms.PointIndex = PointIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6NavigationPathPoints.IsRoadPoint
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   PointIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6NavigationPathPoints::IsRoadPoint(int32 PointIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NavigationPathPoints", "IsRoadPoint");

	Params::X6NavigationPathPoints_IsRoadPoint Parms{};

	Parms.PointIndex = PointIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6NavigationPathPoints.IsValidPath
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6NavigationPathPoints::IsValidPath() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NavigationPathPoints", "IsValidPath");

	Params::X6NavigationPathPoints_IsValidPath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6NikkiCPPTickHelperComponent.CalculateCurFloorAngleV2
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bForceUpdate                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6NikkiCPPTickHelperComponent::CalculateCurFloorAngleV2(bool bForceUpdate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NikkiCPPTickHelperComponent", "CalculateCurFloorAngleV2");

	Params::X6NikkiCPPTickHelperComponent_CalculateCurFloorAngleV2 Parms{};

	Parms.bForceUpdate = bForceUpdate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6NikkiCPPTickHelperComponent.GeneratedFeetIKFeatureTargetV2
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFootIKFeatureTargetDataV2*      OutFootIKFeatureTarget                                 (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void UX6NikkiCPPTickHelperComponent::GeneratedFeetIKFeatureTargetV2(struct FFootIKFeatureTargetDataV2* OutFootIKFeatureTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NikkiCPPTickHelperComponent", "GeneratedFeetIKFeatureTargetV2");

	Params::X6NikkiCPPTickHelperComponent_GeneratedFeetIKFeatureTargetV2 Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutFootIKFeatureTarget != nullptr)
		*OutFootIKFeatureTarget = std::move(Parms.OutFootIKFeatureTarget);
}


// Function X6Game.X6NikkiCPPTickHelperComponent.IsLandedGroundWithDeltaInAir
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FHitResult                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

struct FHitResult UX6NikkiCPPTickHelperComponent::IsLandedGroundWithDeltaInAir()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NikkiCPPTickHelperComponent", "IsLandedGroundWithDeltaInAir");

	Params::X6NikkiCPPTickHelperComponent_IsLandedGroundWithDeltaInAir Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6NikkiCPPTickHelperComponent.ResetIKOffsets
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                         FootOffsetLLocation                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector*                         FootOffsetRLocation                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator*                        FootOffsetLRotation                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FRotator*                        FootOffsetRRotation                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UX6NikkiCPPTickHelperComponent::ResetIKOffsets(struct FVector* FootOffsetLLocation, struct FVector* FootOffsetRLocation, struct FRotator* FootOffsetLRotation, struct FRotator* FootOffsetRRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NikkiCPPTickHelperComponent", "ResetIKOffsets");

	Params::X6NikkiCPPTickHelperComponent_ResetIKOffsets Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (FootOffsetLLocation != nullptr)
		*FootOffsetLLocation = std::move(Parms.FootOffsetLLocation);

	if (FootOffsetRLocation != nullptr)
		*FootOffsetRLocation = std::move(Parms.FootOffsetRLocation);

	if (FootOffsetLRotation != nullptr)
		*FootOffsetLRotation = std::move(Parms.FootOffsetLRotation);

	if (FootOffsetRRotation != nullptr)
		*FootOffsetRRotation = std::move(Parms.FootOffsetRRotation);
}


// Function X6Game.X6NikkiCPPTickHelperComponent.ResetPelvisIKOffsets
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// float*                                  PelvisAlpha                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector*                         PelvisOffset                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NikkiCPPTickHelperComponent::ResetPelvisIKOffsets(float* PelvisAlpha, struct FVector* PelvisOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NikkiCPPTickHelperComponent", "ResetPelvisIKOffsets");

	Params::X6NikkiCPPTickHelperComponent_ResetPelvisIKOffsets Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PelvisAlpha != nullptr)
		*PelvisAlpha = Parms.PelvisAlpha;

	if (PelvisOffset != nullptr)
		*PelvisOffset = std::move(Parms.PelvisOffset);
}


// Function X6Game.X6NikkiMainAnimInstance.GetCurFootIKFeatureTargetData
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FFootIKFeatureTargetDataV2       ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FFootIKFeatureTargetDataV2 UX6NikkiMainAnimInstance::GetCurFootIKFeatureTargetData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NikkiMainAnimInstance", "GetCurFootIKFeatureTargetData");

	Params::X6NikkiMainAnimInstance_GetCurFootIKFeatureTargetData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6NikkiMainAnimInstance.PrepareInitializationData
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6NikkiMainAnimInstance::PrepareInitializationData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NikkiMainAnimInstance", "PrepareInitializationData");

	Params::X6NikkiMainAnimInstance_PrepareInitializationData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6NpcDataProcessor.InitFaceMaterialCurvesCheckParam
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class FName>&              FaceMaterialCurvesArray                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const float                             EnabledAngle                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             NPCMainMeshTag                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NpcDataProcessor::InitFaceMaterialCurvesCheckParam(const TArray<class FName>& FaceMaterialCurvesArray, const float EnabledAngle, class FName NPCMainMeshTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NpcDataProcessor", "InitFaceMaterialCurvesCheckParam");

	Params::X6NpcDataProcessor_InitFaceMaterialCurvesCheckParam Parms{};

	Parms.FaceMaterialCurvesArray = std::move(FaceMaterialCurvesArray);
	Parms.EnabledAngle = EnabledAngle;
	Parms.NPCMainMeshTag = NPCMainMeshTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6NpcDataProcessor.RegisterActorShouldCheckMaterialCurve
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           ActorShouldCheckMaterialCurve                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6NpcDataProcessor::RegisterActorShouldCheckMaterialCurve(class AActor* ActorShouldCheckMaterialCurve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NpcDataProcessor", "RegisterActorShouldCheckMaterialCurve");

	Params::X6NpcDataProcessor_RegisterActorShouldCheckMaterialCurve Parms{};

	Parms.ActorShouldCheckMaterialCurve = ActorShouldCheckMaterialCurve;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6NpcDataProcessor.RegisterT2StaticNpcActors
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int64&                            SpawnerID                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           GroupActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FT2NpcRadiusHalfHeightStruct>&T2NpcActors                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6NpcDataProcessor::RegisterT2StaticNpcActors(const int64& SpawnerID, class AActor* GroupActor, const TArray<struct FT2NpcRadiusHalfHeightStruct>& T2NpcActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NpcDataProcessor", "RegisterT2StaticNpcActors");

	Params::X6NpcDataProcessor_RegisterT2StaticNpcActors Parms{};

	Parms.SpawnerID = SpawnerID;
	Parms.GroupActor = GroupActor;
	Parms.T2NpcActors = std::move(T2NpcActors);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6NpcDataProcessor.SetNpcMainMeshTag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             NPCMainMeshTag                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NpcDataProcessor::SetNpcMainMeshTag(class FName NPCMainMeshTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NpcDataProcessor", "SetNpcMainMeshTag");

	Params::X6NpcDataProcessor_SetNpcMainMeshTag Parms{};

	Parms.NPCMainMeshTag = NPCMainMeshTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6NpcDataProcessor.UnregisterActorShouldCheckMaterialCurve
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           ActorShouldCheckMaterialCurve                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6NpcDataProcessor::UnregisterActorShouldCheckMaterialCurve(class AActor* ActorShouldCheckMaterialCurve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NpcDataProcessor", "UnregisterActorShouldCheckMaterialCurve");

	Params::X6NpcDataProcessor_UnregisterActorShouldCheckMaterialCurve Parms{};

	Parms.ActorShouldCheckMaterialCurve = ActorShouldCheckMaterialCurve;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6NpcDataProcessor.UnregisterT2StaticNpcActors
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int64&                            SpawnerID                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6NpcDataProcessor::UnregisterT2StaticNpcActors(const int64& SpawnerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NpcDataProcessor", "UnregisterT2StaticNpcActors");

	Params::X6NpcDataProcessor_UnregisterT2StaticNpcActors Parms{};

	Parms.SpawnerID = SpawnerID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6ObjectOctree.AddOctreeElement
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FX6OctreeElement&          inNewOctreeElement                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6ObjectOctree::AddOctreeElement(const struct FX6OctreeElement& inNewOctreeElement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ObjectOctree", "AddOctreeElement");

	Params::X6ObjectOctree_AddOctreeElement Parms{};

	Parms.inNewOctreeElement = std::move(inNewOctreeElement);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6ObjectOctree.AddOctreeElementByActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6ObjectOctree::AddOctreeElementByActor(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ObjectOctree", "AddOctreeElementByActor");

	Params::X6ObjectOctree_AddOctreeElementByActor Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6ObjectOctree.GetActorsWithinBounds
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FBoxSphereBounds&          BoundsQuery                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// TArray<class AActor*>*                  OutResult                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AX6ObjectOctree::GetActorsWithinBounds(const struct FBoxSphereBounds& BoundsQuery, TArray<class AActor*>* OutResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ObjectOctree", "GetActorsWithinBounds");

	Params::X6ObjectOctree_GetActorsWithinBounds Parms{};

	Parms.BoundsQuery = std::move(BoundsQuery);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutResult != nullptr)
		*OutResult = std::move(Parms.OutResult);
}


// Function X6Game.X6ObjectOctree.GetElementsWithinBounds
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FBoxSphereBounds&          BoundsQuery                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// TArray<struct FX6OctreeElement>*        OutResult                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AX6ObjectOctree::GetElementsWithinBounds(const struct FBoxSphereBounds& BoundsQuery, TArray<struct FX6OctreeElement>* OutResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ObjectOctree", "GetElementsWithinBounds");

	Params::X6ObjectOctree_GetElementsWithinBounds Parms{};

	Parms.BoundsQuery = std::move(BoundsQuery);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutResult != nullptr)
		*OutResult = std::move(Parms.OutResult);
}


// Function X6Game.X6ObjectOctree.GetOctreeBoundsByActor
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBoxSphereBounds*                OutBounds                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6ObjectOctree::GetOctreeBoundsByActor(class AActor* Actor, struct FBoxSphereBounds* OutBounds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ObjectOctree", "GetOctreeBoundsByActor");

	Params::X6ObjectOctree_GetOctreeBoundsByActor Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutBounds != nullptr)
		*OutBounds = std::move(Parms.OutBounds);

	return Parms.ReturnValue;
}


// Function X6Game.X6ObjectOctree.GetOctreeIdByActor
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutNodeIndex                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutElemenetIndex                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6ObjectOctree::GetOctreeIdByActor(class AActor* Actor, int32* OutNodeIndex, int32* OutElemenetIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ObjectOctree", "GetOctreeIdByActor");

	Params::X6ObjectOctree_GetOctreeIdByActor Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutNodeIndex != nullptr)
		*OutNodeIndex = Parms.OutNodeIndex;

	if (OutElemenetIndex != nullptr)
		*OutElemenetIndex = Parms.OutElemenetIndex;

	return Parms.ReturnValue;
}


// Function X6Game.X6ObjectOctree.InitOctree
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   Origin                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AActor>               Class_0                                                (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6ObjectOctree::InitOctree(const struct FVector& Origin, float Radius, TSubclassOf<class AActor> Class_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ObjectOctree", "InitOctree");

	Params::X6ObjectOctree_InitOctree Parms{};

	Parms.Origin = std::move(Origin);
	Parms.Radius = Radius;
	Parms.Class_0 = Class_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6ObjectOctree.IsReady
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6ObjectOctree::IsReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ObjectOctree", "IsReady");

	Params::X6ObjectOctree_IsReady Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6ObjectOctree.ObserveMovableObjects
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const TArray<class AActor*>&            MoveableActos                                          (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6ObjectOctree::ObserveMovableObjects(const TArray<class AActor*>& MoveableActos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ObjectOctree", "ObserveMovableObjects");

	Params::X6ObjectOctree_ObserveMovableObjects Parms{};

	Parms.MoveableActos = std::move(MoveableActos);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6ObjectOctree.PostActorEndPlay
// (Final, Native, Public)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EEndPlayReason                    EndPlayReason                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6ObjectOctree::PostActorEndPlay(class AActor* Actor, const EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ObjectOctree", "PostActorEndPlay");

	Params::X6ObjectOctree_PostActorEndPlay Parms{};

	Parms.Actor = Actor;
	Parms.EndPlayReason = EndPlayReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ObjectOctree.RemoveObservedMovableObjects
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const TArray<class AActor*>&            MoveableActos                                          (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AX6ObjectOctree::RemoveObservedMovableObjects(const TArray<class AActor*>& MoveableActos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ObjectOctree", "RemoveObservedMovableObjects");

	Params::X6ObjectOctree_RemoveObservedMovableObjects Parms{};

	Parms.MoveableActos = std::move(MoveableActos);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6ObjectOctree.RemoveOctreeElement
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FX6OctreeElement&          inNewOctreeElement                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AX6ObjectOctree::RemoveOctreeElement(const struct FX6OctreeElement& inNewOctreeElement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ObjectOctree", "RemoveOctreeElement");

	Params::X6ObjectOctree_RemoveOctreeElement Parms{};

	Parms.inNewOctreeElement = std::move(inNewOctreeElement);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ObjectOctree.RemoveOctreeElementByActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6ObjectOctree::RemoveOctreeElementByActor(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ObjectOctree", "RemoveOctreeElementByActor");

	Params::X6ObjectOctree_RemoveOctreeElementByActor Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ObjectOctree.SetEnableDebugDraw
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AX6ObjectOctree::SetEnableDebugDraw(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ObjectOctree", "SetEnableDebugDraw");

	Params::X6ObjectOctree_SetEnableDebugDraw Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ObjectPoolSubSystem.CleanUpPools
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bTryCleanMoreObjects                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6ObjectPoolSubSystem::CleanUpPools(bool bTryCleanMoreObjects)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ObjectPoolSubSystem", "CleanUpPools");

	Params::X6ObjectPoolSubSystem_CleanUpPools Parms{};

	Parms.bTryCleanMoreObjects = bTryCleanMoreObjects;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ObjectPoolSubSystem.CreatePoolByClass
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                           InClass                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6ObjectPoolSubSystem::CreatePoolByClass(class UClass* InClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ObjectPoolSubSystem", "CreatePoolByClass");

	Params::X6ObjectPoolSubSystem_CreatePoolByClass Parms{};

	Parms.InClass = InClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ObjectPoolSubSystem.DestroyPoolByClass
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                           InClass                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6ObjectPoolSubSystem::DestroyPoolByClass(class UClass* InClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ObjectPoolSubSystem", "DestroyPoolByClass");

	Params::X6ObjectPoolSubSystem_DestroyPoolByClass Parms{};

	Parms.InClass = InClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ObjectPoolSubSystem.GetFreeByPoolTag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UX6ObjectPoolSubSystem::GetFreeByPoolTag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ObjectPoolSubSystem", "GetFreeByPoolTag");

	Params::X6ObjectPoolSubSystem_GetFreeByPoolTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6ObjectPoolSubSystem.GetObjectByClass
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                           InClass                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Outer_0                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ObjectName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UX6ObjectPoolSubSystem::GetObjectByClass(class UClass* InClass, class UObject* Outer_0, const class FString& ObjectName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ObjectPoolSubSystem", "GetObjectByClass");

	Params::X6ObjectPoolSubSystem_GetObjectByClass Parms{};

	Parms.InClass = InClass;
	Parms.Outer_0 = Outer_0;
	Parms.ObjectName = std::move(ObjectName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6ObjectPoolSubSystem.GetObjectByClassEvenIfNoPool
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                           InClass                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Outer_0                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ObjectName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UX6ObjectPoolSubSystem::GetObjectByClassEvenIfNoPool(class UClass* InClass, class UObject* Outer_0, const class FString& ObjectName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ObjectPoolSubSystem", "GetObjectByClassEvenIfNoPool");

	Params::X6ObjectPoolSubSystem_GetObjectByClassEvenIfNoPool Parms{};

	Parms.InClass = InClass;
	Parms.Outer_0 = Outer_0;
	Parms.ObjectName = std::move(ObjectName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6ObjectPoolSubSystem.HasPoolOfClass
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                           InClass                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6ObjectPoolSubSystem::HasPoolOfClass(class UClass* InClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ObjectPoolSubSystem", "HasPoolOfClass");

	Params::X6ObjectPoolSubSystem_HasPoolOfClass Parms{};

	Parms.InClass = InClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6ObjectPoolSubSystem.IsPooledObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6ObjectPoolSubSystem::IsPooledObject(class UObject* InObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ObjectPoolSubSystem", "IsPooledObject");

	Params::X6ObjectPoolSubSystem_IsPooledObject Parms{};

	Parms.InObject = InObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6ObjectPoolSubSystem.IsVaildForUse
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6ObjectPoolSubSystem::IsVaildForUse(class UObject* InObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ObjectPoolSubSystem", "IsVaildForUse");

	Params::X6ObjectPoolSubSystem_IsVaildForUse Parms{};

	Parms.InObject = InObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6ObjectPoolSubSystem.PreCreateObjects
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                           InClass                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PreCreateNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6ObjectPoolSubSystem::PreCreateObjects(class UClass* InClass, int32 PreCreateNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ObjectPoolSubSystem", "PreCreateObjects");

	Params::X6ObjectPoolSubSystem_PreCreateObjects Parms{};

	Parms.InClass = InClass;
	Parms.PreCreateNum = PreCreateNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ObjectPoolSubSystem.RecycleObject
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          InObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class FString>&            ModifiedProperties                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6ObjectPoolSubSystem::RecycleObject(class UObject* InObject, const TArray<class FString>& ModifiedProperties)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ObjectPoolSubSystem", "RecycleObject");

	Params::X6ObjectPoolSubSystem_RecycleObject Parms{};

	Parms.InObject = InObject;
	Parms.ModifiedProperties = std::move(ModifiedProperties);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6ObjectPoolSubSystem.ReportMemoryUsage
// (Final, Native, Public, BlueprintCallable)

void UX6ObjectPoolSubSystem::ReportMemoryUsage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ObjectPoolSubSystem", "ReportMemoryUsage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6PackageSettings.GetX6PackageSettings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UX6PackageSettings*         ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UX6PackageSettings* UX6PackageSettings::GetX6PackageSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6PackageSettings", "GetX6PackageSettings");

	Params::X6PackageSettings_GetX6PackageSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6ReceiveSkillBaseComponent.SetIsAlwaysChargeOutLineEffect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsAlwaysChargeOutLineEffect                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6ReceiveSkillBaseComponent::SetIsAlwaysChargeOutLineEffect(bool IsAlwaysChargeOutLineEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ReceiveSkillBaseComponent", "SetIsAlwaysChargeOutLineEffect");

	Params::X6ReceiveSkillBaseComponent_SetIsAlwaysChargeOutLineEffect Parms{};

	Parms.IsAlwaysChargeOutLineEffect = IsAlwaysChargeOutLineEffect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ReceiveSkillBaseComponent.SetIsBulletAttachment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsBulletAttachment                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6ReceiveSkillBaseComponent::SetIsBulletAttachment(bool IsBulletAttachment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ReceiveSkillBaseComponent", "SetIsBulletAttachment");

	Params::X6ReceiveSkillBaseComponent_SetIsBulletAttachment Parms{};

	Parms.IsBulletAttachment = IsBulletAttachment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ReceiveSkillBaseComponent.SetIsBulletDestroyWhenNotSimulation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsBulletDestroyWhenNotSimulation                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6ReceiveSkillBaseComponent::SetIsBulletDestroyWhenNotSimulation(bool IsBulletDestroyWhenNotSimulation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ReceiveSkillBaseComponent", "SetIsBulletDestroyWhenNotSimulation");

	Params::X6ReceiveSkillBaseComponent_SetIsBulletDestroyWhenNotSimulation Parms{};

	Parms.IsBulletDestroyWhenNotSimulation = IsBulletDestroyWhenNotSimulation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ReceiveSkillBaseComponent.SetIsBulletPenetrateWhenSimulation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsBulletPenetrateWhenSimulation                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6ReceiveSkillBaseComponent::SetIsBulletPenetrateWhenSimulation(bool IsBulletPenetrateWhenSimulation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ReceiveSkillBaseComponent", "SetIsBulletPenetrateWhenSimulation");

	Params::X6ReceiveSkillBaseComponent_SetIsBulletPenetrateWhenSimulation Parms{};

	Parms.IsBulletPenetrateWhenSimulation = IsBulletPenetrateWhenSimulation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ReceiveSkillBaseComponent.SetIsChargeOutLineEffect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsChargeOutLineEffect                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6ReceiveSkillBaseComponent::SetIsChargeOutLineEffect(bool IsChargeOutLineEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ReceiveSkillBaseComponent", "SetIsChargeOutLineEffect");

	Params::X6ReceiveSkillBaseComponent_SetIsChargeOutLineEffect Parms{};

	Parms.IsChargeOutLineEffect = IsChargeOutLineEffect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6RichTextBlockNetImageDecorator.OnResDownloaded
// (Final, Native, Protected)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ResponseCode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Size                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RequestID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    CurrentDownloadFileName                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6RichTextBlockNetImageDecorator::OnResDownloaded(bool bSuccess, int32 ResponseCode, int32 Size, int32 RequestID, const class FString& CurrentDownloadFileName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RichTextBlockNetImageDecorator", "OnResDownloaded");

	Params::X6RichTextBlockNetImageDecorator_OnResDownloaded Parms{};

	Parms.bSuccess = bSuccess;
	Parms.ResponseCode = ResponseCode;
	Parms.Size = Size;
	Parms.RequestID = RequestID;
	Parms.CurrentDownloadFileName = std::move(CurrentDownloadFileName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6RichTextBlockNetImageDecorator.ReleaseLoadedImages
// (Final, Native, Protected)

void UX6RichTextBlockNetImageDecorator::ReleaseLoadedImages()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RichTextBlockNetImageDecorator", "ReleaseLoadedImages");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6RMWalkingComponent.Blueprint_PostUpdateRegularMovementBehavior
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6RMWalkingComponent::Blueprint_PostUpdateRegularMovementBehavior(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RMWalkingComponent", "Blueprint_PostUpdateRegularMovementBehavior");

	Params::X6RMWalkingComponent_Blueprint_PostUpdateRegularMovementBehavior Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.X6RMWalkingComponent.Blueprint_PreUpdateRegularMovementBehavior
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6RMWalkingComponent::Blueprint_PreUpdateRegularMovementBehavior(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RMWalkingComponent", "Blueprint_PreUpdateRegularMovementBehavior");

	Params::X6RMWalkingComponent_Blueprint_PreUpdateRegularMovementBehavior Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.X6RMWalkingComponent.ChangeDesiredGait
// (Native, Public, BlueprintCallable)
// Parameters:
// ERegularLocomotionType                  NewGait                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceChangeOperationInput                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6RMWalkingComponent::ChangeDesiredGait(ERegularLocomotionType NewGait, bool bForceChangeOperationInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RMWalkingComponent", "ChangeDesiredGait");

	Params::X6RMWalkingComponent_ChangeDesiredGait Parms{};

	Parms.NewGait = NewGait;
	Parms.bForceChangeOperationInput = bForceChangeOperationInput;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6RMWalkingComponent.DeinitRegularMovementBehaviorProxy
// (Native, Event, Public, BlueprintEvent)

void UX6RMWalkingComponent::DeinitRegularMovementBehaviorProxy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RMWalkingComponent", "DeinitRegularMovementBehaviorProxy");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6RMWalkingComponent.GetConfigMaxSpeedByCurAllowedGait
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6RMWalkingComponent::GetConfigMaxSpeedByCurAllowedGait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RMWalkingComponent", "GetConfigMaxSpeedByCurAllowedGait");

	Params::X6RMWalkingComponent_GetConfigMaxSpeedByCurAllowedGait Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6RMWalkingComponent.GetConfigMaxSpeedData
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// float*                                  MaxSpeed_Walk                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  MaxSpeed_Run                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  MaxSpeed_Sprint                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6RMWalkingComponent::GetConfigMaxSpeedData(float* MaxSpeed_Walk, float* MaxSpeed_Run, float* MaxSpeed_Sprint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RMWalkingComponent", "GetConfigMaxSpeedData");

	Params::X6RMWalkingComponent_GetConfigMaxSpeedData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (MaxSpeed_Walk != nullptr)
		*MaxSpeed_Walk = Parms.MaxSpeed_Walk;

	if (MaxSpeed_Run != nullptr)
		*MaxSpeed_Run = Parms.MaxSpeed_Run;

	if (MaxSpeed_Sprint != nullptr)
		*MaxSpeed_Sprint = Parms.MaxSpeed_Sprint;
}


// Function X6Game.X6RMWalkingComponent.GetCurConfigMaxSpeed
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6RMWalkingComponent::GetCurConfigMaxSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RMWalkingComponent", "GetCurConfigMaxSpeed");

	Params::X6RMWalkingComponent_GetCurConfigMaxSpeed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6RMWalkingComponent.GetCurLocomotionTypeBySpeed
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   Speed2D                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERegularLocomotionType                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERegularLocomotionType UX6RMWalkingComponent::GetCurLocomotionTypeBySpeed(float Speed2D)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RMWalkingComponent", "GetCurLocomotionTypeBySpeed");

	Params::X6RMWalkingComponent_GetCurLocomotionTypeBySpeed Parms{};

	Parms.Speed2D = Speed2D;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6RMWalkingComponent.GetCurRMBaseLogicProcessor
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class URMBaseLogicProcessor*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URMBaseLogicProcessor* UX6RMWalkingComponent::GetCurRMBaseLogicProcessor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RMWalkingComponent", "GetCurRMBaseLogicProcessor");

	Params::X6RMWalkingComponent_GetCurRMBaseLogicProcessor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6RMWalkingComponent.InitRegularMovementBehaviorProxy
// (Native, Event, Public, BlueprintEvent)

void UX6RMWalkingComponent::InitRegularMovementBehaviorProxy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RMWalkingComponent", "InitRegularMovementBehaviorProxy");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6RMWalkingComponent.InitRMBaseLogicProcessor
// (Native, Public, BlueprintCallable)
// Parameters:
// class URMBaseLogicProcessor*            RMBaseLogicProcessor                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6RMWalkingComponent::InitRMBaseLogicProcessor(class URMBaseLogicProcessor* RMBaseLogicProcessor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RMWalkingComponent", "InitRMBaseLogicProcessor");

	Params::X6RMWalkingComponent_InitRMBaseLogicProcessor Parms{};

	Parms.RMBaseLogicProcessor = RMBaseLogicProcessor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6RMWalkingComponent.IsValidReplicatedMovingDirection
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6RMWalkingComponent::IsValidReplicatedMovingDirection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RMWalkingComponent", "IsValidReplicatedMovingDirection");

	Params::X6RMWalkingComponent_IsValidReplicatedMovingDirection Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6RMWalkingComponent.NotifyBeforeMovementPropertyChanged
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float*                                  MaxWalkSpeed                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  MaxWalkSpeedCrouched                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  MinAnalogWalkSpeed                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  MaxAcceleration                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  BrakingDecelerationWalking                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  GroundFriction                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6RMWalkingComponent::NotifyBeforeMovementPropertyChanged(float* MaxWalkSpeed, float* MaxWalkSpeedCrouched, float* MinAnalogWalkSpeed, float* MaxAcceleration, float* BrakingDecelerationWalking, float* GroundFriction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RMWalkingComponent", "NotifyBeforeMovementPropertyChanged");

	Params::X6RMWalkingComponent_NotifyBeforeMovementPropertyChanged Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MaxWalkSpeed != nullptr)
		*MaxWalkSpeed = Parms.MaxWalkSpeed;

	if (MaxWalkSpeedCrouched != nullptr)
		*MaxWalkSpeedCrouched = Parms.MaxWalkSpeedCrouched;

	if (MinAnalogWalkSpeed != nullptr)
		*MinAnalogWalkSpeed = Parms.MinAnalogWalkSpeed;

	if (MaxAcceleration != nullptr)
		*MaxAcceleration = Parms.MaxAcceleration;

	if (BrakingDecelerationWalking != nullptr)
		*BrakingDecelerationWalking = Parms.BrakingDecelerationWalking;

	if (GroundFriction != nullptr)
		*GroundFriction = Parms.GroundFriction;
}


// Function X6Game.X6RMWalkingComponent.NotifyCurActualGaitChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// ERegularLocomotionType                  NewGait                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERegularLocomotionType                  CurrentGait                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6RMWalkingComponent::NotifyCurActualGaitChanged(ERegularLocomotionType NewGait, ERegularLocomotionType CurrentGait)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RMWalkingComponent", "NotifyCurActualGaitChanged");

	Params::X6RMWalkingComponent_NotifyCurActualGaitChanged Parms{};

	Parms.NewGait = NewGait;
	Parms.CurrentGait = CurrentGait;

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.X6RMWalkingComponent.NotifyCurAllowedGaitChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// ERegularLocomotionType                  NewGait                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERegularLocomotionType                  CurrentGait                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6RMWalkingComponent::NotifyCurAllowedGaitChanged(ERegularLocomotionType NewGait, ERegularLocomotionType CurrentGait)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RMWalkingComponent", "NotifyCurAllowedGaitChanged");

	Params::X6RMWalkingComponent_NotifyCurAllowedGaitChanged Parms{};

	Parms.NewGait = NewGait;
	Parms.CurrentGait = CurrentGait;

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.X6RMWalkingComponent.NotifyCurReplicatedAllowedGaitChanged
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// ERegularLocomotionType                  NewGait                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERegularLocomotionType                  CurrentGait                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6RMWalkingComponent::NotifyCurReplicatedAllowedGaitChanged(ERegularLocomotionType NewGait, ERegularLocomotionType CurrentGait)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RMWalkingComponent", "NotifyCurReplicatedAllowedGaitChanged");

	Params::X6RMWalkingComponent_NotifyCurReplicatedAllowedGaitChanged Parms{};

	Parms.NewGait = NewGait;
	Parms.CurrentGait = CurrentGait;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6RMWalkingComponent.OnMovementBlockedBy
// (Final, Native, Private)
// Parameters:
// const struct FHitResult&                Impact                                                 (Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UX6RMWalkingComponent::OnMovementBlockedBy(const struct FHitResult& Impact)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RMWalkingComponent", "OnMovementBlockedBy");

	Params::X6RMWalkingComponent_OnMovementBlockedBy Parms{};

	Parms.Impact = std::move(Impact);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6RMWalkingComponent.OnRep_MovementData_AllowedGait
// (Native, Event, Public, BlueprintEvent)

void UX6RMWalkingComponent::OnRep_MovementData_AllowedGait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RMWalkingComponent", "OnRep_MovementData_AllowedGait");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6RMWalkingComponent.OnRep_MovementData_InputMovingDirection
// (Native, Event, Public, BlueprintEvent)

void UX6RMWalkingComponent::OnRep_MovementData_InputMovingDirection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RMWalkingComponent", "OnRep_MovementData_InputMovingDirection");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6RMWalkingComponent.OnRep_MovementData_TurnAroundAngle
// (Native, Event, Public, BlueprintEvent)

void UX6RMWalkingComponent::OnRep_MovementData_TurnAroundAngle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RMWalkingComponent", "OnRep_MovementData_TurnAroundAngle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6RMWalkingComponent.ShouldUpdateRegularMovementBehaviorTree
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6RMWalkingComponent::ShouldUpdateRegularMovementBehaviorTree()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RMWalkingComponent", "ShouldUpdateRegularMovementBehaviorTree");

	Params::X6RMWalkingComponent_ShouldUpdateRegularMovementBehaviorTree Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6RMWalkingComponent.SyncAnimStatesWithTick
// (Native, Event, Public, BlueprintEvent)

void UX6RMWalkingComponent::SyncAnimStatesWithTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RMWalkingComponent", "SyncAnimStatesWithTick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6RMWalkingComponent.UpdateCurActualGait
// (Native, Public, BlueprintCallable)

void UX6RMWalkingComponent::UpdateCurActualGait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RMWalkingComponent", "UpdateCurActualGait");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6RMWalkingComponent.UpdateCurAllowedGait
// (Native, Public, BlueprintCallable)

void UX6RMWalkingComponent::UpdateCurAllowedGait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RMWalkingComponent", "UpdateCurAllowedGait");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6RMWalkingComponent.UpdateDynamicMovmentSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bForceUpdate                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6RMWalkingComponent::UpdateDynamicMovmentSettings(bool bForceUpdate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RMWalkingComponent", "UpdateDynamicMovmentSettings");

	Params::X6RMWalkingComponent_UpdateDynamicMovmentSettings Parms{};

	Parms.bForceUpdate = bForceUpdate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6RMWalkingComponent.UpdateReplicatedMovementData
// (Final, Native, Private)

void UX6RMWalkingComponent::UpdateReplicatedMovementData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6RMWalkingComponent", "UpdateReplicatedMovementData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ScrollBox.HandleScollBoxScrolling
// (Final, Native, Private)

void UX6ScrollBox::HandleScollBoxScrolling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ScrollBox", "HandleScollBoxScrolling");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6SoftRefWidget.ClearContentWidget
// (Final, Native, Public, BlueprintCallable)

void UX6SoftRefWidget::ClearContentWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6SoftRefWidget", "ClearContentWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6SoftRefWidget.GetContentWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UX6SoftRefWidget::GetContentWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6SoftRefWidget", "GetContentWidget");

	Params::X6SoftRefWidget_GetContentWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6SoftRefWidget.LoadContentWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bSyncLoad                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNeedRecreate                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6SoftRefWidget::LoadContentWidget(bool bSyncLoad, bool bNeedRecreate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6SoftRefWidget", "LoadContentWidget");

	Params::X6SoftRefWidget_LoadContentWidget Parms{};

	Parms.bSyncLoad = bSyncLoad;
	Parms.bNeedRecreate = bNeedRecreate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6SoftRefWidget.OnLoaded
// (Final, Native, Private, HasOutParams)
// Parameters:
// int32                                   AsyncId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class UObject*>&           InLoadedObjects                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UX6SoftRefWidget::OnLoaded(int32 AsyncId, const TArray<class UObject*>& InLoadedObjects)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6SoftRefWidget", "OnLoaded");

	Params::X6SoftRefWidget_OnLoaded Parms{};

	Parms.AsyncId = AsyncId;
	Parms.InLoadedObjects = std::move(InLoadedObjects);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6SteamFunctionLibrary.UpdateAchievements
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TMap<class FString, int32>&       InAchievements                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FString&                    ChannelString                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6SteamFunctionLibrary::UpdateAchievements(const TMap<class FString, int32>& InAchievements, const class FString& ChannelString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6SteamFunctionLibrary", "UpdateAchievements");

	Params::X6SteamFunctionLibrary_UpdateAchievements Parms{};

	Parms.InAchievements = std::move(InAchievements);
	Parms.ChannelString = std::move(ChannelString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6SuitDisplayComponent.CallPreivewFunction
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InFunctionName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InParams                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6SuitDisplayComponent::CallPreivewFunction(class AActor* InActor, class FName InFunctionName, int32 InParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6SuitDisplayComponent", "CallPreivewFunction");

	Params::X6SuitDisplayComponent_CallPreivewFunction Parms{};

	Parms.InActor = InActor;
	Parms.InFunctionName = InFunctionName;
	Parms.InParams = InParams;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6SuitDisplayComponent.SetPreviewProperty
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InPropertyName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPropertyValue                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6SuitDisplayComponent::SetPreviewProperty(class AActor* InActor, class FName InPropertyName, int32 InPropertyValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6SuitDisplayComponent", "SetPreviewProperty");

	Params::X6SuitDisplayComponent_SetPreviewProperty Parms{};

	Parms.InActor = InActor;
	Parms.InPropertyName = InPropertyName;
	Parms.InPropertyValue = InPropertyValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6SuitDisplayComponent.AsyncCallBPFunction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             FunctionName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class USkeletalMesh*>&     MeshArr                                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UX6SuitDisplayComponent::AsyncCallBPFunction(class FName FunctionName, const TArray<class USkeletalMesh*>& MeshArr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6SuitDisplayComponent", "AsyncCallBPFunction");

	Params::X6SuitDisplayComponent_AsyncCallBPFunction Parms{};

	Parms.FunctionName = FunctionName;
	Parms.MeshArr = std::move(MeshArr);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6SuitDisplayComponent.AsyncNewObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UObject>              InObjectClass                                          (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UX6SuitDisplayComponent::AsyncNewObject(TSubclassOf<class UObject> InObjectClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6SuitDisplayComponent", "AsyncNewObject");

	Params::X6SuitDisplayComponent_AsyncNewObject Parms{};

	Parms.InObjectClass = InObjectClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6SuitDisplayComponent.NotifyCppClothID2ClothPath
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TMap<int64, class FString>&       ClothPair                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UX6SuitDisplayComponent::NotifyCppClothID2ClothPath(const TMap<int64, class FString>& ClothPair)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6SuitDisplayComponent", "NotifyCppClothID2ClothPath");

	Params::X6SuitDisplayComponent_NotifyCppClothID2ClothPath Parms{};

	Parms.ClothPair = std::move(ClothPair);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6SuitDisplayComponent.OnAsyncCallFinished
// (Event, Public, BlueprintEvent)
// Parameters:
// class UObject*                          AsyncResult                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6SuitDisplayComponent::OnAsyncCallFinished(class UObject* AsyncResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6SuitDisplayComponent", "OnAsyncCallFinished");

	Params::X6SuitDisplayComponent_OnAsyncCallFinished Parms{};

	Parms.AsyncResult = AsyncResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.X6SuitDisplayComponent.RenameComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UActorComponent*                  InComponent                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InNewName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6SuitDisplayComponent::RenameComponent(class UActorComponent* InComponent, const class FString& InNewName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6SuitDisplayComponent", "RenameComponent");

	Params::X6SuitDisplayComponent_RenameComponent Parms{};

	Parms.InComponent = InComponent;
	Parms.InNewName = std::move(InNewName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6TargetingSelectionTask_AOE.BP_GetTargetingResultDataByIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FTargetingRequestHandle&   TargetingHandle                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const int32                             Index_0                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTargetingDefaultResultData*     ResultData                                             (Parm, OutParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UX6TargetingSelectionTask_AOE::BP_GetTargetingResultDataByIndex(const struct FTargetingRequestHandle& TargetingHandle, const int32 Index_0, struct FTargetingDefaultResultData* ResultData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6TargetingSelectionTask_AOE", "BP_GetTargetingResultDataByIndex");

	Params::X6TargetingSelectionTask_AOE_BP_GetTargetingResultDataByIndex Parms{};

	Parms.TargetingHandle = std::move(TargetingHandle);
	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResultData != nullptr)
		*ResultData = std::move(Parms.ResultData);
}


// Function X6Game.X6TargetingSelectionTask_AOE.GetOffsetRotationInEditor
// (Native, Event, Protected, HasDefaults, BlueprintEvent, Const)
// Parameters:
// const class AActor*                     Actor                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQuat                            ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FQuat UX6TargetingSelectionTask_AOE::GetOffsetRotationInEditor(const class AActor* Actor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6TargetingSelectionTask_AOE", "GetOffsetRotationInEditor");

	Params::X6TargetingSelectionTask_AOE_GetOffsetRotationInEditor Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6TargetingSelectionTask_AOE.GetSourceLocation
// (Native, Event, Protected, HasOutParams, HasDefaults, BlueprintEvent, Const)
// Parameters:
// const struct FTargetingRequestHandle&   TargetingHandle                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UX6TargetingSelectionTask_AOE::GetSourceLocation(const struct FTargetingRequestHandle& TargetingHandle) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6TargetingSelectionTask_AOE", "GetSourceLocation");

	Params::X6TargetingSelectionTask_AOE_GetSourceLocation Parms{};

	Parms.TargetingHandle = std::move(TargetingHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6TargetingSelectionTask_AOE.GetSourceOffset
// (Native, Event, Protected, HasOutParams, HasDefaults, BlueprintEvent, Const)
// Parameters:
// const struct FTargetingRequestHandle&   TargetingHandle                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UX6TargetingSelectionTask_AOE::GetSourceOffset(const struct FTargetingRequestHandle& TargetingHandle) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6TargetingSelectionTask_AOE", "GetSourceOffset");

	Params::X6TargetingSelectionTask_AOE_GetSourceOffset Parms{};

	Parms.TargetingHandle = std::move(TargetingHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6TargetingSelectionTask_AOE.GetSourceRotation
// (Native, Event, Protected, HasOutParams, HasDefaults, BlueprintEvent, Const)
// Parameters:
// const struct FTargetingRequestHandle&   TargetingHandle                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FQuat                            ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FQuat UX6TargetingSelectionTask_AOE::GetSourceRotation(const struct FTargetingRequestHandle& TargetingHandle) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6TargetingSelectionTask_AOE", "GetSourceRotation");

	Params::X6TargetingSelectionTask_AOE_GetSourceRotation Parms{};

	Parms.TargetingHandle = std::move(TargetingHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6TRCBlueprintLibrary.ChangeActivityAvailability
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class FString>&            AvailableIDs                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const TArray<class FString>&            UnavailableIDs                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6TRCBlueprintLibrary::ChangeActivityAvailability(const TArray<class FString>& AvailableIDs, const TArray<class FString>& UnavailableIDs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6TRCBlueprintLibrary", "ChangeActivityAvailability");

	Params::X6TRCBlueprintLibrary_ChangeActivityAvailability Parms{};

	Parms.AvailableIDs = std::move(AvailableIDs);
	Parms.UnavailableIDs = std::move(UnavailableIDs);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6TRCBlueprintLibrary.CheckPSPremium
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6TRCBlueprintLibrary::CheckPSPremium()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6TRCBlueprintLibrary", "CheckPSPremium");

	Params::X6TRCBlueprintLibrary_CheckPSPremium Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6TRCBlueprintLibrary.CheckPSPremiumAsync
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(bool Result)>            Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6TRCBlueprintLibrary::CheckPSPremiumAsync(TDelegate<void(bool Result)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6TRCBlueprintLibrary", "CheckPSPremiumAsync");

	Params::X6TRCBlueprintLibrary_CheckPSPremiumAsync Parms{};

	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6TRCBlueprintLibrary.EndActivity
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    activityID                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6TRCBlueprintLibrary::EndActivity(const class FString& activityID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6TRCBlueprintLibrary", "EndActivity");

	Params::X6TRCBlueprintLibrary_EndActivity Parms{};

	Parms.activityID = std::move(activityID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6TRCBlueprintLibrary.ExportToAlbum
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    FromPath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Filename                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6TRCBlueprintLibrary::ExportToAlbum(const class FString& FromPath, const class FString& Filename)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6TRCBlueprintLibrary", "ExportToAlbum");

	Params::X6TRCBlueprintLibrary_ExportToAlbum Parms{};

	Parms.FromPath = std::move(FromPath);
	Parms.Filename = std::move(Filename);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6TRCBlueprintLibrary.IsPremiumFeatureNotifying
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6TRCBlueprintLibrary::IsPremiumFeatureNotifying()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6TRCBlueprintLibrary", "IsPremiumFeatureNotifying");

	Params::X6TRCBlueprintLibrary_IsPremiumFeatureNotifying Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6TRCBlueprintLibrary.LaunchURLForPredeterminedContent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6TRCBlueprintLibrary::LaunchURLForPredeterminedContent(const class FString& URL)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6TRCBlueprintLibrary", "LaunchURLForPredeterminedContent");

	Params::X6TRCBlueprintLibrary_LaunchURLForPredeterminedContent Parms{};

	Parms.URL = std::move(URL);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6TRCBlueprintLibrary.RequestTRCWebApi
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    ApiGroup                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ApiPath                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    httpMethod                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    JsonContent                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 ResponceCode, const class FString& Content, float NextRequestTime)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6TRCBlueprintLibrary::RequestTRCWebApi(const class FString& ApiGroup, const class FString& ApiPath, const class FString& httpMethod, const class FString& JsonContent, TDelegate<void(int32 ResponceCode, const class FString& Content, float NextRequestTime)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6TRCBlueprintLibrary", "RequestTRCWebApi");

	Params::X6TRCBlueprintLibrary_RequestTRCWebApi Parms{};

	Parms.ApiGroup = std::move(ApiGroup);
	Parms.ApiPath = std::move(ApiPath);
	Parms.httpMethod = std::move(httpMethod);
	Parms.JsonContent = std::move(JsonContent);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6TRCBlueprintLibrary.ResetActivity
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    activityID                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6TRCBlueprintLibrary::ResetActivity(const class FString& activityID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6TRCBlueprintLibrary", "ResetActivity");

	Params::X6TRCBlueprintLibrary_ResetActivity Parms{};

	Parms.activityID = std::move(activityID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6TRCBlueprintLibrary.ShowCommerceDialog
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EX6CommerceType                         CommerceType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6TRCBlueprintLibrary::ShowCommerceDialog(EX6CommerceType CommerceType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6TRCBlueprintLibrary", "ShowCommerceDialog");

	Params::X6TRCBlueprintLibrary_ShowCommerceDialog Parms{};

	Parms.CommerceType = CommerceType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6TRCBlueprintLibrary.ShowSystemMsgDialog
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EX6SystemMsgType                        MsgType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6TRCBlueprintLibrary::ShowSystemMsgDialog(EX6SystemMsgType MsgType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6TRCBlueprintLibrary", "ShowSystemMsgDialog");

	Params::X6TRCBlueprintLibrary_ShowSystemMsgDialog Parms{};

	Parms.MsgType = MsgType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6TRCBlueprintLibrary.StartActivity
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    activityID                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6TRCBlueprintLibrary::StartActivity(const class FString& activityID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6TRCBlueprintLibrary", "StartActivity");

	Params::X6TRCBlueprintLibrary_StartActivity Parms{};

	Parms.activityID = std::move(activityID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6TRCBlueprintLibrary.StartPSNotifyPremiumFeature
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   TimeInterval                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6TRCBlueprintLibrary::StartPSNotifyPremiumFeature(float TimeInterval)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6TRCBlueprintLibrary", "StartPSNotifyPremiumFeature");

	Params::X6TRCBlueprintLibrary_StartPSNotifyPremiumFeature Parms{};

	Parms.TimeInterval = TimeInterval;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6TRCBlueprintLibrary.StopPSNotifyPremiumFeature
// (Final, Native, Static, Public, BlueprintCallable)

void UX6TRCBlueprintLibrary::StopPSNotifyPremiumFeature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6TRCBlueprintLibrary", "StopPSNotifyPremiumFeature");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6TRCBlueprintLibrary.UpdateAchievements
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TMap<int32, int32>&               Achievements                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UX6TRCBlueprintLibrary::UpdateAchievements(const TMap<int32, int32>& Achievements)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6TRCBlueprintLibrary", "UpdateAchievements");

	Params::X6TRCBlueprintLibrary_UpdateAchievements Parms{};

	Parms.Achievements = std::move(Achievements);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6TRCBlueprintLibrary.X6GetDiskFreeSpace
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InPath                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6TRCBlueprintLibrary::X6GetDiskFreeSpace(const class FString& InPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6TRCBlueprintLibrary", "X6GetDiskFreeSpace");

	Params::X6TRCBlueprintLibrary_X6GetDiskFreeSpace Parms{};

	Parms.InPath = std::move(InPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6WaterBuoyancyManagerComponent.GenerateSplineTrackForWater
// (Final, Native, Private)

void UX6WaterBuoyancyManagerComponent::GenerateSplineTrackForWater()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6WaterBuoyancyManagerComponent", "GenerateSplineTrackForWater");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6WaterBuoyancyManagerComponent.GetPointToLeave
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FSimulateWaterFlowKeyPoint       ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FSimulateWaterFlowKeyPoint UX6WaterBuoyancyManagerComponent::GetPointToLeave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6WaterBuoyancyManagerComponent", "GetPointToLeave");

	Params::X6WaterBuoyancyManagerComponent_GetPointToLeave Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6WaterBuoyancyManagerComponent.GetTargetPointToToward
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FSimulateWaterFlowKeyPoint       ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FSimulateWaterFlowKeyPoint UX6WaterBuoyancyManagerComponent::GetTargetPointToToward()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6WaterBuoyancyManagerComponent", "GetTargetPointToToward");

	Params::X6WaterBuoyancyManagerComponent_GetTargetPointToToward Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6WaterBuoyancyManagerComponent.GetWaterCurrentDensity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6WaterBuoyancyManagerComponent::GetWaterCurrentDensity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6WaterBuoyancyManagerComponent", "GetWaterCurrentDensity");

	Params::X6WaterBuoyancyManagerComponent_GetWaterCurrentDensity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6WaterBuoyancyManagerComponent.GetWaterSurfaceHeightInWorldCoordinate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6WaterBuoyancyManagerComponent::GetWaterSurfaceHeightInWorldCoordinate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6WaterBuoyancyManagerComponent", "GetWaterSurfaceHeightInWorldCoordinate");

	Params::X6WaterBuoyancyManagerComponent_GetWaterSurfaceHeightInWorldCoordinate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6WaterBuoyancyManagerComponent.InitializeBuoyancyData
// (Final, Native, Public)

void UX6WaterBuoyancyManagerComponent::InitializeBuoyancyData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6WaterBuoyancyManagerComponent", "InitializeBuoyancyData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6WaterBuoyancyManagerComponent.OnTriggerWaterOverlapCheck
// (Final, Native, Private)

void UX6WaterBuoyancyManagerComponent::OnTriggerWaterOverlapCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6WaterBuoyancyManagerComponent", "OnTriggerWaterOverlapCheck");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6WaterBuoyancyManagerComponent.OnUpdateWaterSurfaceHeight
// (Final, Native, Private)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6WaterBuoyancyManagerComponent::OnUpdateWaterSurfaceHeight(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6WaterBuoyancyManagerComponent", "OnUpdateWaterSurfaceHeight");

	Params::X6WaterBuoyancyManagerComponent_OnUpdateWaterSurfaceHeight Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6WaterBuoyancyManagerComponent.OnWaterActorBeginOverlaped
// (Final, Native, Private)
// Parameters:
// class AActor*                           OverlappedActor                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6WaterBuoyancyManagerComponent::OnWaterActorBeginOverlaped(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6WaterBuoyancyManagerComponent", "OnWaterActorBeginOverlaped");

	Params::X6WaterBuoyancyManagerComponent_OnWaterActorBeginOverlaped Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6WaterBuoyancyManagerComponent.OnWaterActorEndOverlaped
// (Final, Native, Private)
// Parameters:
// class AActor*                           OverlappedActor                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6WaterBuoyancyManagerComponent::OnWaterActorEndOverlaped(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6WaterBuoyancyManagerComponent", "OnWaterActorEndOverlaped");

	Params::X6WaterBuoyancyManagerComponent_OnWaterActorEndOverlaped Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6WaterBuoyancyManagerComponent.UpdateWaterDensity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewDensity                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6WaterBuoyancyManagerComponent::UpdateWaterDensity(float NewDensity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6WaterBuoyancyManagerComponent", "UpdateWaterDensity");

	Params::X6WaterBuoyancyManagerComponent_UpdateWaterDensity Parms{};

	Parms.NewDensity = NewDensity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6WaterBuoyancyManagerComponent.UpdateWaterIceState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ToIceOrExit                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6WaterBuoyancyManagerComponent::UpdateWaterIceState(bool ToIceOrExit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6WaterBuoyancyManagerComponent", "UpdateWaterIceState");

	Params::X6WaterBuoyancyManagerComponent_UpdateWaterIceState Parms{};

	Parms.ToIceOrExit = ToIceOrExit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6WaterBuoyancyManagerComponent.UpdateWaterSurfaceHeight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   HeightOfffsetToUpdate                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6WaterBuoyancyManagerComponent::UpdateWaterSurfaceHeight(float HeightOfffsetToUpdate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6WaterBuoyancyManagerComponent", "UpdateWaterSurfaceHeight");

	Params::X6WaterBuoyancyManagerComponent_UpdateWaterSurfaceHeight Parms{};

	Parms.HeightOfffsetToUpdate = HeightOfffsetToUpdate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6WaterBuoyancyManagerComponent.UpdateWaterSurfaceHeightInTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   TimeDuration                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TotalHeightToUpdate                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6WaterBuoyancyManagerComponent::UpdateWaterSurfaceHeightInTime(float TimeDuration, float TotalHeightToUpdate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6WaterBuoyancyManagerComponent", "UpdateWaterSurfaceHeightInTime");

	Params::X6WaterBuoyancyManagerComponent_UpdateWaterSurfaceHeightInTime Parms{};

	Parms.TimeDuration = TimeDuration;
	Parms.TotalHeightToUpdate = TotalHeightToUpdate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6WaterBuoyancyManagerComponent.UpdateWaterSurfaceHeightWithSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   UpdateHeightSpeed                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TotalHeightToUpdate                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6WaterBuoyancyManagerComponent::UpdateWaterSurfaceHeightWithSpeed(float UpdateHeightSpeed, float TotalHeightToUpdate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6WaterBuoyancyManagerComponent", "UpdateWaterSurfaceHeightWithSpeed");

	Params::X6WaterBuoyancyManagerComponent_UpdateWaterSurfaceHeightWithSpeed Parms{};

	Parms.UpdateHeightSpeed = UpdateHeightSpeed;
	Parms.TotalHeightToUpdate = TotalHeightToUpdate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6WorldCarriageMovementComponent.InitMoveCtrlValue
// (Final, Native, Public, BlueprintCallable)

void UX6WorldCarriageMovementComponent::InitMoveCtrlValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6WorldCarriageMovementComponent", "InitMoveCtrlValue");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6WorldCarriageMovementComponent.RequestStartMove
// (Final, Native, Public, BlueprintCallable)

void UX6WorldCarriageMovementComponent::RequestStartMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6WorldCarriageMovementComponent", "RequestStartMove");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6WorldCarriageMovementComponent.RequestStopMove
// (Final, Native, Public, BlueprintCallable)

void UX6WorldCarriageMovementComponent::RequestStopMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6WorldCarriageMovementComponent", "RequestStopMove");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6WorldCarriageMovementComponent.SetMoveSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InMoveSpeed                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6WorldCarriageMovementComponent::SetMoveSpeed(float InMoveSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6WorldCarriageMovementComponent", "SetMoveSpeed");

	Params::X6WorldCarriageMovementComponent_SetMoveSpeed Parms{};

	Parms.InMoveSpeed = InMoveSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6WorldCarriageMovementComponent.SetTargetSplinePath
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class USplineComponent*           InTargetSplinePathComponent                            (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6WorldCarriageMovementComponent::SetTargetSplinePath(const class USplineComponent* InTargetSplinePathComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6WorldCarriageMovementComponent", "SetTargetSplinePath");

	Params::X6WorldCarriageMovementComponent_SetTargetSplinePath Parms{};

	Parms.InTargetSplinePathComponent = InTargetSplinePathComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AbilityTask_ApplyRootMotionJumpForce.X6ApplyRootMotionJumpForce
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TaskInstanceName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  Rotation_0                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Distance_0                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Height_0                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration_0                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MinimumLandedTriggerTime_0                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFinishOnLanded_0                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERootMotionFinishVelocityMode           VelocityOnFinishMode                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   SetVelocityOnFinish                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ClampVelocityOnFinish                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveVector*                     PathOffsetCurve_0                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                      TimeMappingCurve_0                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UX6AbilityTask_ApplyRootMotionJumpForce*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UX6AbilityTask_ApplyRootMotionJumpForce* UX6AbilityTask_ApplyRootMotionJumpForce::X6ApplyRootMotionJumpForce(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, const struct FRotator& Rotation_0, float Distance_0, float Height_0, float Duration_0, float MinimumLandedTriggerTime_0, bool bFinishOnLanded_0, ERootMotionFinishVelocityMode VelocityOnFinishMode, const struct FVector& SetVelocityOnFinish, float ClampVelocityOnFinish, class UCurveVector* PathOffsetCurve_0, class UCurveFloat* TimeMappingCurve_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AbilityTask_ApplyRootMotionJumpForce", "X6ApplyRootMotionJumpForce");

	Params::X6AbilityTask_ApplyRootMotionJumpForce_X6ApplyRootMotionJumpForce Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.TaskInstanceName = TaskInstanceName;
	Parms.Rotation_0 = std::move(Rotation_0);
	Parms.Distance_0 = Distance_0;
	Parms.Height_0 = Height_0;
	Parms.Duration_0 = Duration_0;
	Parms.MinimumLandedTriggerTime_0 = MinimumLandedTriggerTime_0;
	Parms.bFinishOnLanded_0 = bFinishOnLanded_0;
	Parms.VelocityOnFinishMode = VelocityOnFinishMode;
	Parms.SetVelocityOnFinish = std::move(SetVelocityOnFinish);
	Parms.ClampVelocityOnFinish = ClampVelocityOnFinish;
	Parms.PathOffsetCurve_0 = PathOffsetCurve_0;
	Parms.TimeMappingCurve_0 = TimeMappingCurve_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AbilityTask_ApplyRootMotionJumpForce.Finish
// (Final, Native, Public, BlueprintCallable)

void UX6AbilityTask_ApplyRootMotionJumpForce::Finish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AbilityTask_ApplyRootMotionJumpForce", "Finish");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AbilityTask_ApplyRootMotionJumpForce.OnLandedCallback
// (Final, Native, Public, HasOutParams)
// Parameters:
// const struct FHitResult&                Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UX6AbilityTask_ApplyRootMotionJumpForce::OnLandedCallback(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AbilityTask_ApplyRootMotionJumpForce", "OnLandedCallback");

	Params::X6AbilityTask_ApplyRootMotionJumpForce_OnLandedCallback Parms{};

	Parms.Hit = std::move(Hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6GameplayAbility.ChangeActivationGroup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EX6AbilityActivationGroup               NewGroup                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6GameplayAbility::ChangeActivationGroup(EX6AbilityActivationGroup NewGroup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameplayAbility", "ChangeActivationGroup");

	Params::X6GameplayAbility_ChangeActivationGroup Parms{};

	Parms.NewGroup = NewGroup;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameplayAbility.ClearRootMotionParam
// (Final, Native, Protected, BlueprintCallable)

void UX6GameplayAbility::ClearRootMotionParam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameplayAbility", "ClearRootMotionParam");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6GameplayAbility.K2_OnAbilityAdded
// (Event, Protected, BlueprintEvent)

void UX6GameplayAbility::K2_OnAbilityAdded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameplayAbility", "K2_OnAbilityAdded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function X6Game.X6GameplayAbility.K2_OnAbilityRemoved
// (Event, Protected, BlueprintEvent)

void UX6GameplayAbility::K2_OnAbilityRemoved()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameplayAbility", "K2_OnAbilityRemoved");

	UObject::ProcessEvent(Func, nullptr);
}


// Function X6Game.X6GameplayAbility.K2_OnPawnAvatarSet
// (Event, Protected, BlueprintEvent)

void UX6GameplayAbility::K2_OnPawnAvatarSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameplayAbility", "K2_OnPawnAvatarSet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function X6Game.X6GameplayAbility.K2_OnPreActivateAbility
// (Event, Protected, BlueprintEvent)

void UX6GameplayAbility::K2_OnPreActivateAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameplayAbility", "K2_OnPreActivateAbility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function X6Game.X6GameplayAbility.MontageDisableRootMotion
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bDisable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6GameplayAbility::MontageDisableRootMotion(bool bDisable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameplayAbility", "MontageDisableRootMotion");

	Params::X6GameplayAbility_MontageDisableRootMotion Parms{};

	Parms.bDisable = bDisable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6GameplayAbility.SendGameplayEventWithRet
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              EventTag                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayEventData&        Payload                                                (Parm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UX6GameplayAbility::SendGameplayEventWithRet(const struct FGameplayTag& EventTag, const struct FGameplayEventData& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameplayAbility", "SendGameplayEventWithRet");

	Params::X6GameplayAbility_SendGameplayEventWithRet Parms{};

	Parms.EventTag = std::move(EventTag);
	Parms.Payload = std::move(Payload);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameplayAbility.CanChangeActivationGroup
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// EX6AbilityActivationGroup               NewGroup                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6GameplayAbility::CanChangeActivationGroup(EX6AbilityActivationGroup NewGroup) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameplayAbility", "CanChangeActivationGroup");

	Params::X6GameplayAbility_CanChangeActivationGroup Parms{};

	Parms.NewGroup = NewGroup;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameplayAbility.GetX6AbilitySystemComponentFromActorInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UX6AbilitySystemComponent*        ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UX6AbilitySystemComponent* UX6GameplayAbility::GetX6AbilitySystemComponentFromActorInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameplayAbility", "GetX6AbilitySystemComponentFromActorInfo");

	Params::X6GameplayAbility_GetX6AbilitySystemComponentFromActorInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameplayAbility.HasAnyTag
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTagContainer&     ContainerToCheck                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6GameplayAbility::HasAnyTag(const struct FGameplayTagContainer& ContainerToCheck) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameplayAbility", "HasAnyTag");

	Params::X6GameplayAbility_HasAnyTag Parms{};

	Parms.ContainerToCheck = std::move(ContainerToCheck);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameplayAbility.HasTag
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              TagToCheck                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6GameplayAbility::HasTag(const struct FGameplayTag& TagToCheck) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameplayAbility", "HasTag");

	Params::X6GameplayAbility_HasTag Parms{};

	Parms.TagToCheck = std::move(TagToCheck);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameplayAbility.K2_CanActivateAbilityEx
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// const struct FGameplayAbilityActorInfo& ActorInfo                                              (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// const struct FGameplayAbilitySpecHandle&Handle                                                 (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6GameplayAbility::K2_CanActivateAbilityEx(const struct FGameplayAbilityActorInfo& ActorInfo, const struct FGameplayAbilitySpecHandle& Handle) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameplayAbility", "K2_CanActivateAbilityEx");

	Params::X6GameplayAbility_K2_CanActivateAbilityEx Parms{};

	Parms.ActorInfo = std::move(ActorInfo);
	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameplayAbility.K2_OnCheckCooldown
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// class AActor*                           OwnerActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6GameplayAbility::K2_OnCheckCooldown(class AActor* OwnerActor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameplayAbility", "K2_OnCheckCooldown");

	Params::X6GameplayAbility_K2_OnCheckCooldown Parms{};

	Parms.OwnerActor = OwnerActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameplayAbility.K2_OnCheckCost
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// class AActor*                           OwnerActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6GameplayAbility::K2_OnCheckCost(class AActor* OwnerActor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameplayAbility", "K2_OnCheckCost");

	Params::X6GameplayAbility_K2_OnCheckCost Parms{};

	Parms.OwnerActor = OwnerActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6GameplayAbility.ScriptOnAbilityFailedToActivate
// (Event, Protected, HasOutParams, BlueprintEvent, Const)
// Parameters:
// const struct FGameplayTagContainer&     FailedReason                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UX6GameplayAbility::ScriptOnAbilityFailedToActivate(const struct FGameplayTagContainer& FailedReason) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GameplayAbility", "ScriptOnAbilityFailedToActivate");

	Params::X6GameplayAbility_ScriptOnAbilityFailedToActivate Parms{};

	Parms.FailedReason = std::move(FailedReason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.X6AbilitySystemComponent.AbilityInputTagPressed
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              InputTag                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AbilitySystemComponent::AbilityInputTagPressed(const struct FGameplayTag& InputTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AbilitySystemComponent", "AbilityInputTagPressed");

	Params::X6AbilitySystemComponent_AbilityInputTagPressed Parms{};

	Parms.InputTag = std::move(InputTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AbilitySystemComponent.AbilityInputTagReleased
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              InputTag                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AbilitySystemComponent::AbilityInputTagReleased(const struct FGameplayTag& InputTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AbilitySystemComponent", "AbilityInputTagReleased");

	Params::X6AbilitySystemComponent_AbilityInputTagReleased Parms{};

	Parms.InputTag = std::move(InputTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AbilitySystemComponent.AddGenericTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AbilitySystemComponent::AddGenericTarget(class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AbilitySystemComponent", "AddGenericTarget");

	Params::X6AbilitySystemComponent_AddGenericTarget Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AbilitySystemComponent.AddGenericTargetHitResult
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FHitResult&                HitResult                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UX6AbilitySystemComponent::AddGenericTargetHitResult(const struct FHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AbilitySystemComponent", "AddGenericTargetHitResult");

	Params::X6AbilitySystemComponent_AddGenericTargetHitResult Parms{};

	Parms.HitResult = std::move(HitResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AbilitySystemComponent.CancelAllAbilitiesExceptPassive
// (Final, Native, Public, BlueprintCallable)

void UX6AbilitySystemComponent::CancelAllAbilitiesExceptPassive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AbilitySystemComponent", "CancelAllAbilitiesExceptPassive");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AbilitySystemComponent.ClearGenericTargets
// (Final, Native, Public, BlueprintCallable)

void UX6AbilitySystemComponent::ClearGenericTargets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AbilitySystemComponent", "ClearGenericTargets");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AbilitySystemComponent.ClearNextComboInputList
// (Final, Native, Public, BlueprintCallable)

void UX6AbilitySystemComponent::ClearNextComboInputList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AbilitySystemComponent", "ClearNextComboInputList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AbilitySystemComponent.ClearTimeOutComboInputData
// (Final, Native, Public, BlueprintCallable)

void UX6AbilitySystemComponent::ClearTimeOutComboInputData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AbilitySystemComponent", "ClearTimeOutComboInputData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AbilitySystemComponent.ClientNotifyAbilityFailed
// (Net, Native, Event, Protected, NetClient)
// Parameters:
// const class UGameplayAbility*           Ability                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     FailureReason                                          (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void UX6AbilitySystemComponent::ClientNotifyAbilityFailed(const class UGameplayAbility* Ability, const struct FGameplayTagContainer& FailureReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AbilitySystemComponent", "ClientNotifyAbilityFailed");

	Params::X6AbilitySystemComponent_ClientNotifyAbilityFailed Parms{};

	Parms.Ability = Ability;
	Parms.FailureReason = std::move(FailureReason);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AbilitySystemComponent.CurrentMontageDisableRootMotion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bDisable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AbilitySystemComponent::CurrentMontageDisableRootMotion(bool bDisable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AbilitySystemComponent", "CurrentMontageDisableRootMotion");

	Params::X6AbilitySystemComponent_CurrentMontageDisableRootMotion Parms{};

	Parms.bDisable = bDisable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AbilitySystemComponent.EnableComboInputCache
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const bool                              bEnable                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class UComboInputData*>&   InComboInputDataList                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UX6AbilitySystemComponent::EnableComboInputCache(const bool bEnable, const TArray<class UComboInputData*>& InComboInputDataList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AbilitySystemComponent", "EnableComboInputCache");

	Params::X6AbilitySystemComponent_EnableComboInputCache Parms{};

	Parms.bEnable = bEnable;
	Parms.InComboInputDataList = std::move(InComboInputDataList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AbilitySystemComponent.GetGenericTargetActorByIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             Index_0                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UX6AbilitySystemComponent::GetGenericTargetActorByIndex(const int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AbilitySystemComponent", "GetGenericTargetActorByIndex");

	Params::X6AbilitySystemComponent_GetGenericTargetActorByIndex Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AbilitySystemComponent.GetGenericTargetComponentByIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             Index_0                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USceneComponent* UX6AbilitySystemComponent::GetGenericTargetComponentByIndex(const int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AbilitySystemComponent", "GetGenericTargetComponentByIndex");

	Params::X6AbilitySystemComponent_GetGenericTargetComponentByIndex Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AbilitySystemComponent.K2_CancelAbilitesByTag
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              Tag                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AbilitySystemComponent::K2_CancelAbilitesByTag(const struct FGameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AbilitySystemComponent", "K2_CancelAbilitesByTag");

	Params::X6AbilitySystemComponent_K2_CancelAbilitesByTag Parms{};

	Parms.Tag = std::move(Tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AbilitySystemComponent.K2_ClearAbilitiesFromClass
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UX6GameplayAbility>   InAbilityClass                                         (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bClearOnlyOnce                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AbilitySystemComponent::K2_ClearAbilitiesFromClass(TSubclassOf<class UX6GameplayAbility> InAbilityClass, bool bClearOnlyOnce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AbilitySystemComponent", "K2_ClearAbilitiesFromClass");

	Params::X6AbilitySystemComponent_K2_ClearAbilitiesFromClass Parms{};

	Parms.InAbilityClass = InAbilityClass;
	Parms.bClearOnlyOnce = bClearOnlyOnce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AbilitySystemComponent.K2_GetAnimatingAbility
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UGameplayAbility*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGameplayAbility* UX6AbilitySystemComponent::K2_GetAnimatingAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AbilitySystemComponent", "K2_GetAnimatingAbility");

	Params::X6AbilitySystemComponent_K2_GetAnimatingAbility Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AbilitySystemComponent.K2_GiveAbilityWithInputTag
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSubclassOf<class UX6GameplayAbility>   InAbilityClass                                         (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              InputTag                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayAbilitySpecHandle       ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayAbilitySpecHandle UX6AbilitySystemComponent::K2_GiveAbilityWithInputTag(TSubclassOf<class UX6GameplayAbility> InAbilityClass, const struct FGameplayTag& InputTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AbilitySystemComponent", "K2_GiveAbilityWithInputTag");

	Params::X6AbilitySystemComponent_K2_GiveAbilityWithInputTag Parms{};

	Parms.InAbilityClass = InAbilityClass;
	Parms.InputTag = std::move(InputTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AbilitySystemComponent.K2_ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UX6AbilitySystemComponent::K2_ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AbilitySystemComponent", "K2_ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function X6Game.X6AbilitySystemComponent.K2_ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// const EEndPlayReason                    EndPlayReason                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AbilitySystemComponent::K2_ReceiveEndPlay(const EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AbilitySystemComponent", "K2_ReceiveEndPlay");

	Params::X6AbilitySystemComponent_K2_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.X6AbilitySystemComponent.K2_SetSkillEndBlock
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   GroupID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShouldBlock                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AbilitySystemComponent::K2_SetSkillEndBlock(int32 GroupID, bool bShouldBlock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AbilitySystemComponent", "K2_SetSkillEndBlock");

	Params::X6AbilitySystemComponent_K2_SetSkillEndBlock Parms{};

	Parms.GroupID = GroupID;
	Parms.bShouldBlock = bShouldBlock;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AbilitySystemComponent.K2_SpawnBullet
// (Event, Public, BlueprintEvent)
// Parameters:
// class UPrimaryDataAsset*                TriggerData                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsModifyHitDirection                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AbilitySystemComponent::K2_SpawnBullet(class UPrimaryDataAsset* TriggerData, bool IsModifyHitDirection, class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AbilitySystemComponent", "K2_SpawnBullet");

	Params::X6AbilitySystemComponent_K2_SpawnBullet Parms{};

	Parms.TriggerData = TriggerData;
	Parms.IsModifyHitDirection = IsModifyHitDirection;
	Parms.TargetActor = TargetActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6Game.X6AbilitySystemComponent.OnPlayedMontageEnded
// (Final, Native, Private)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInterrupted                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AbilitySystemComponent::OnPlayedMontageEnded(class UAnimMontage* Montage, bool bInterrupted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AbilitySystemComponent", "OnPlayedMontageEnded");

	Params::X6AbilitySystemComponent_OnPlayedMontageEnded Parms{};

	Parms.Montage = Montage;
	Parms.bInterrupted = bInterrupted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AbilitySystemComponent.RemoveGenericTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class AActor*                     Target                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AbilitySystemComponent::RemoveGenericTarget(const class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AbilitySystemComponent", "RemoveGenericTarget");

	Params::X6AbilitySystemComponent_RemoveGenericTarget Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AbilitySystemComponent.SetTagRelationshipMapping
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UX6AbilityTagRelationshipMapping* NewMapping                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AbilitySystemComponent::SetTagRelationshipMapping(class UX6AbilityTagRelationshipMapping* NewMapping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AbilitySystemComponent", "SetTagRelationshipMapping");

	Params::X6AbilitySystemComponent_SetTagRelationshipMapping Parms{};

	Parms.NewMapping = NewMapping;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AbilitySystemComponent.SkillInputCancel
// (Final, Native, Public, BlueprintCallable)

void UX6AbilitySystemComponent::SkillInputCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AbilitySystemComponent", "SkillInputCancel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AbilitySystemComponent.SkillInputPressed
// (Final, Native, Public, BlueprintCallable)

void UX6AbilitySystemComponent::SkillInputPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AbilitySystemComponent", "SkillInputPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AbilitySystemComponent.SkillInputReleased
// (Final, Native, Public, BlueprintCallable)

void UX6AbilitySystemComponent::SkillInputReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AbilitySystemComponent", "SkillInputReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AbilitySystemComponent.UpdateNextComboInputList
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class UComboInputData*>&   InComboInputDataList                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   ActivationDuration                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AbilitySystemComponent::UpdateNextComboInputList(const TArray<class UComboInputData*>& InComboInputDataList, float ActivationDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AbilitySystemComponent", "UpdateNextComboInputList");

	Params::X6AbilitySystemComponent_UpdateNextComboInputList Parms{};

	Parms.InComboInputDataList = std::move(InComboInputDataList);
	Parms.ActivationDuration = ActivationDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6AbilitySystemComponent.X6HasActivatableAbilityClass
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UGameplayAbility>     InAbilityToActivate                                    (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AbilitySystemComponent::X6HasActivatableAbilityClass(TSubclassOf<class UGameplayAbility> InAbilityToActivate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AbilitySystemComponent", "X6HasActivatableAbilityClass");

	Params::X6AbilitySystemComponent_X6HasActivatableAbilityClass Parms{};

	Parms.InAbilityToActivate = InAbilityToActivate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AbilitySystemComponent.X6HasActivatableTriggeredAbility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              Tag                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AbilitySystemComponent::X6HasActivatableTriggeredAbility(const struct FGameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AbilitySystemComponent", "X6HasActivatableTriggeredAbility");

	Params::X6AbilitySystemComponent_X6HasActivatableTriggeredAbility Parms{};

	Parms.Tag = std::move(Tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AbilitySystemComponent.GetGenericTargetActors
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AActor*>*                  OutTargetActors                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UX6AbilitySystemComponent::GetGenericTargetActors(TArray<class AActor*>* OutTargetActors) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AbilitySystemComponent", "GetGenericTargetActors");

	Params::X6AbilitySystemComponent_GetGenericTargetActors Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTargetActors != nullptr)
		*OutTargetActors = std::move(Parms.OutTargetActors);
}


// Function X6Game.X6AbilitySystemComponent.GetGenericTargetComponents
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class USceneComponent*>*         OutTargetComponents                                    (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UX6AbilitySystemComponent::GetGenericTargetComponents(TArray<class USceneComponent*>* OutTargetComponents) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AbilitySystemComponent", "GetGenericTargetComponents");

	Params::X6AbilitySystemComponent_GetGenericTargetComponents Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTargetComponents != nullptr)
		*OutTargetComponents = std::move(Parms.OutTargetComponents);
}


// Function X6Game.X6AbilitySystemComponent.K2_GetActiveAbilityByTag
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              Tag                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGameplayAbility*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGameplayAbility* UX6AbilitySystemComponent::K2_GetActiveAbilityByTag(const struct FGameplayTag& Tag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AbilitySystemComponent", "K2_GetActiveAbilityByTag");

	Params::X6AbilitySystemComponent_K2_GetActiveAbilityByTag Parms{};

	Parms.Tag = std::move(Tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AbilitySystemComponent.K2_GetSkillEndFlag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   GroupID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AbilitySystemComponent::K2_GetSkillEndFlag(int32 GroupID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AbilitySystemComponent", "K2_GetSkillEndFlag");

	Params::X6AbilitySystemComponent_K2_GetSkillEndFlag Parms{};

	Parms.GroupID = GroupID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6AnimNotify_PlayNiagaraEffect.GetSpawnedEffect
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class UFXSystemComponent*               ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFXSystemComponent* UX6AnimNotify_PlayNiagaraEffect::GetSpawnedEffect() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AnimNotify_PlayNiagaraEffect", "GetSpawnedEffect");

	Params::X6AnimNotify_PlayNiagaraEffect_GetSpawnedEffect Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.CombatCollisionInterface.GetCombatFilterPriority
// (Native, Public, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ICombatCollisionInterface::GetCombatFilterPriority() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CombatCollisionInterface", "GetCombatFilterPriority");

	Params::CombatCollisionInterface_GetCombatFilterPriority Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.CombatCollisionInterface.IsCombatBulletFilter
// (Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ICombatCollisionInterface::IsCombatBulletFilter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CombatCollisionInterface", "IsCombatBulletFilter");

	Params::CombatCollisionInterface_IsCombatBulletFilter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.CombatCollisionInterface.IsCombatHitCollision
// (Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ICombatCollisionInterface::IsCombatHitCollision() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CombatCollisionInterface", "IsCombatHitCollision");

	Params::CombatCollisionInterface_IsCombatHitCollision Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6ArcListView.AddItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Item                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6ArcListView::AddItem(class UObject* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ArcListView", "AddItem");

	Params::X6ArcListView_AddItem Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ArcListView.BP_CancelScrollIntoView
// (Final, Native, Protected, BlueprintCallable)

void UX6ArcListView::BP_CancelScrollIntoView()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ArcListView", "BP_CancelScrollIntoView");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ArcListView.BP_ClearSelection
// (Final, Native, Protected, BlueprintCallable)

void UX6ArcListView::BP_ClearSelection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ArcListView", "BP_ClearSelection");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ArcListView.BP_NavigateToItem
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UObject*                          Item                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6ArcListView::BP_NavigateToItem(class UObject* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ArcListView", "BP_NavigateToItem");

	Params::X6ArcListView_BP_NavigateToItem Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ArcListView.BP_NavigateToWidget
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UUserWidget*                      EntryWidget                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6ArcListView::BP_NavigateToWidget(class UUserWidget* EntryWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ArcListView", "BP_NavigateToWidget");

	Params::X6ArcListView_BP_NavigateToWidget Parms{};

	Parms.EntryWidget = EntryWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ArcListView.BP_ScrollItemIntoView
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UObject*                          Item                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6ArcListView::BP_ScrollItemIntoView(class UObject* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ArcListView", "BP_ScrollItemIntoView");

	Params::X6ArcListView_BP_ScrollItemIntoView Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ArcListView.BP_SetItemSelection
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UObject*                          Item                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSelected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6ArcListView::BP_SetItemSelection(class UObject* Item, bool bSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ArcListView", "BP_SetItemSelection");

	Params::X6ArcListView_BP_SetItemSelection Parms{};

	Parms.Item = Item;
	Parms.bSelected = bSelected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ArcListView.BP_SetListItems
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class UObject*>&           InListItems                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UX6ArcListView::BP_SetListItems(const TArray<class UObject*>& InListItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ArcListView", "BP_SetListItems");

	Params::X6ArcListView_BP_SetListItems Parms{};

	Parms.InListItems = std::move(InListItems);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ArcListView.BP_SetSelectedItem
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UObject*                          Item                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6ArcListView::BP_SetSelectedItem(class UObject* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ArcListView", "BP_SetSelectedItem");

	Params::X6ArcListView_BP_SetSelectedItem Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ArcListView.ClearListItems
// (Final, Native, Public, BlueprintCallable)

void UX6ArcListView::ClearListItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ArcListView", "ClearListItems");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ArcListView.NavigateToIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6ArcListView::NavigateToIndex(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ArcListView", "NavigateToIndex");

	Params::X6ArcListView_NavigateToIndex Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ArcListView.OnListItemEndPlayed
// (Final, Native, Protected)
// Parameters:
// class AActor*                           Item                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndPlayReason                          EndPlayReason                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6ArcListView::OnListItemEndPlayed(class AActor* Item, EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ArcListView", "OnListItemEndPlayed");

	Params::X6ArcListView_OnListItemEndPlayed Parms{};

	Parms.Item = Item;
	Parms.EndPlayReason = EndPlayReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ArcListView.OnListItemOuterEndPlayed
// (Final, Native, Protected)
// Parameters:
// class AActor*                           ItemOuter                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndPlayReason                          EndPlayReason                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6ArcListView::OnListItemOuterEndPlayed(class AActor* ItemOuter, EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ArcListView", "OnListItemOuterEndPlayed");

	Params::X6ArcListView_OnListItemOuterEndPlayed Parms{};

	Parms.ItemOuter = ItemOuter;
	Parms.EndPlayReason = EndPlayReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ArcListView.RemoveItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Item                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6ArcListView::RemoveItem(class UObject* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ArcListView", "RemoveItem");

	Params::X6ArcListView_RemoveItem Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ArcListView.ScrollIndexIntoView
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6ArcListView::ScrollIndexIntoView(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ArcListView", "ScrollIndexIntoView");

	Params::X6ArcListView_ScrollIndexIntoView Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ArcListView.SetSelectedIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6ArcListView::SetSelectedIndex(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ArcListView", "SetSelectedIndex");

	Params::X6ArcListView_SetSelectedIndex Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6ArcListView.BP_CanScrollWithLoop
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6ArcListView::BP_CanScrollWithLoop() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ArcListView", "BP_CanScrollWithLoop");

	Params::X6ArcListView_BP_CanScrollWithLoop Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6ArcListView.BP_GetNumItemsSelected
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UX6ArcListView::BP_GetNumItemsSelected() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ArcListView", "BP_GetNumItemsSelected");

	Params::X6ArcListView_BP_GetNumItemsSelected Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6ArcListView.BP_GetSelectedItem
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UX6ArcListView::BP_GetSelectedItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ArcListView", "BP_GetSelectedItem");

	Params::X6ArcListView_BP_GetSelectedItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6ArcListView.BP_GetSelectedItems
// (Final, Native, Protected, HasOutParams, BlueprintCallable, Const)
// Parameters:
// TArray<class UObject*>*                 Items                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6ArcListView::BP_GetSelectedItems(TArray<class UObject*>* Items) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ArcListView", "BP_GetSelectedItems");

	Params::X6ArcListView_BP_GetSelectedItems Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Items != nullptr)
		*Items = std::move(Parms.Items);

	return Parms.ReturnValue;
}


// Function X6Game.X6ArcListView.BP_IsItemVisible
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          Item                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6ArcListView::BP_IsItemVisible(class UObject* Item) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ArcListView", "BP_IsItemVisible");

	Params::X6ArcListView_BP_IsItemVisible Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6ArcListView.GetIndexForItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UObject*                    Item                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UX6ArcListView::GetIndexForItem(const class UObject* Item) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ArcListView", "GetIndexForItem");

	Params::X6ArcListView_GetIndexForItem Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6ArcListView.GetItemAt
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UX6ArcListView::GetItemAt(int32 Index_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ArcListView", "GetItemAt");

	Params::X6ArcListView_GetItemAt Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6ArcListView.GetListItems
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<class UObject*>            ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class UObject*> UX6ArcListView::GetListItems() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ArcListView", "GetListItems");

	Params::X6ArcListView_GetListItems Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6ArcListView.GetNumItems
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UX6ArcListView::GetNumItems() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ArcListView", "GetNumItems");

	Params::X6ArcListView_GetNumItems Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6ArcListView.IsRefreshPending
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6ArcListView::IsRefreshPending() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6ArcListView", "IsRefreshPending");

	Params::X6ArcListView_IsRefreshPending Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6HitThroughImage.GetDynamicMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInstanceDynamic* UX6HitThroughImage::GetDynamicMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HitThroughImage", "GetDynamicMaterial");

	Params::X6HitThroughImage_GetDynamicMaterial Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6HitThroughImage.SetBrush
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FSlateBrush&               InBrush                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UX6HitThroughImage::SetBrush(const struct FSlateBrush& InBrush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HitThroughImage", "SetBrush");

	Params::X6HitThroughImage_SetBrush Parms{};

	Parms.InBrush = std::move(InBrush);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6HitThroughImage.SetBrushFromAsset
// (Native, Public, BlueprintCallable)
// Parameters:
// class USlateBrushAsset*                 Asset                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6HitThroughImage::SetBrushFromAsset(class USlateBrushAsset* Asset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HitThroughImage", "SetBrushFromAsset");

	Params::X6HitThroughImage_SetBrushFromAsset Parms{};

	Parms.Asset = Asset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6HitThroughImage.SetBrushFromAtlasInterface
// (Native, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class ISlateTextureAtlasInterface>AtlasRegion                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMatchSize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6HitThroughImage::SetBrushFromAtlasInterface(TScriptInterface<class ISlateTextureAtlasInterface> AtlasRegion, bool bMatchSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HitThroughImage", "SetBrushFromAtlasInterface");

	Params::X6HitThroughImage_SetBrushFromAtlasInterface Parms{};

	Parms.AtlasRegion = AtlasRegion;
	Parms.bMatchSize = bMatchSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6HitThroughImage.SetBrushFromMaterial
// (Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInterface*               Material                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6HitThroughImage::SetBrushFromMaterial(class UMaterialInterface* Material)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HitThroughImage", "SetBrushFromMaterial");

	Params::X6HitThroughImage_SetBrushFromMaterial Parms{};

	Parms.Material = Material;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6HitThroughImage.SetBrushFromSoftMaterial
// (Native, Public, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class UMaterialInterface>SoftMaterial                                           (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6HitThroughImage::SetBrushFromSoftMaterial(TSoftObjectPtr<class UMaterialInterface> SoftMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HitThroughImage", "SetBrushFromSoftMaterial");

	Params::X6HitThroughImage_SetBrushFromSoftMaterial Parms{};

	Parms.SoftMaterial = SoftMaterial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6HitThroughImage.SetBrushFromSoftTexture
// (Native, Public, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class UTexture2D>        SoftTexture                                            (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMatchSize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6HitThroughImage::SetBrushFromSoftTexture(TSoftObjectPtr<class UTexture2D> SoftTexture, bool bMatchSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HitThroughImage", "SetBrushFromSoftTexture");

	Params::X6HitThroughImage_SetBrushFromSoftTexture Parms{};

	Parms.SoftTexture = SoftTexture;
	Parms.bMatchSize = bMatchSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6HitThroughImage.SetBrushFromTexture
// (Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2D*                       Texture                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMatchSize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6HitThroughImage::SetBrushFromTexture(class UTexture2D* Texture, bool bMatchSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HitThroughImage", "SetBrushFromTexture");

	Params::X6HitThroughImage_SetBrushFromTexture Parms{};

	Parms.Texture = Texture;
	Parms.bMatchSize = bMatchSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6HitThroughImage.SetBrushFromTextureDynamic
// (Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2DDynamic*                Texture                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMatchSize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6HitThroughImage::SetBrushFromTextureDynamic(class UTexture2DDynamic* Texture, bool bMatchSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HitThroughImage", "SetBrushFromTextureDynamic");

	Params::X6HitThroughImage_SetBrushFromTextureDynamic Parms{};

	Parms.Texture = Texture;
	Parms.bMatchSize = bMatchSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6HitThroughImage.SetBrushResourceObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          ResourceObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6HitThroughImage::SetBrushResourceObject(class UObject* ResourceObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HitThroughImage", "SetBrushResourceObject");

	Params::X6HitThroughImage_SetBrushResourceObject Parms{};

	Parms.ResourceObject = ResourceObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6HitThroughImage.SetBrushTintColor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FSlateColor&               TintColor                                              (Parm, NativeAccessSpecifierPublic)

void UX6HitThroughImage::SetBrushTintColor(const struct FSlateColor& TintColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HitThroughImage", "SetBrushTintColor");

	Params::X6HitThroughImage_SetBrushTintColor Parms{};

	Parms.TintColor = std::move(TintColor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6HitThroughImage.SetColorAndOpacity
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FLinearColor&              InColorAndOpacity                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6HitThroughImage::SetColorAndOpacity(const struct FLinearColor& InColorAndOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HitThroughImage", "SetColorAndOpacity");

	Params::X6HitThroughImage_SetColorAndOpacity Parms{};

	Parms.InColorAndOpacity = std::move(InColorAndOpacity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6HitThroughImage.SetDesiredSizeOverride
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector2D&                 DesiredSize                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6HitThroughImage::SetDesiredSizeOverride(const struct FVector2D& DesiredSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HitThroughImage", "SetDesiredSizeOverride");

	Params::X6HitThroughImage_SetDesiredSizeOverride Parms{};

	Parms.DesiredSize = std::move(DesiredSize);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6HitThroughImage.SetOpacity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InOpacity                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6HitThroughImage::SetOpacity(float InOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6HitThroughImage", "SetOpacity");

	Params::X6HitThroughImage_SetOpacity Parms{};

	Parms.InOpacity = InOpacity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6SoloLevelSubsystem.BindSoloLevelPausedEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(bool bPaused)>           PausedDelegate                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6SoloLevelSubsystem::BindSoloLevelPausedEvent(TDelegate<void(bool bPaused)> PausedDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6SoloLevelSubsystem", "BindSoloLevelPausedEvent");

	Params::X6SoloLevelSubsystem_BindSoloLevelPausedEvent Parms{};

	Parms.PausedDelegate = PausedDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6SoloLevelSubsystem.IsInSoloLevelPausedMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6SoloLevelSubsystem::IsInSoloLevelPausedMode(class UObject* InWorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6SoloLevelSubsystem", "IsInSoloLevelPausedMode");

	Params::X6SoloLevelSubsystem_IsInSoloLevelPausedMode Parms{};

	Parms.InWorldContextObject = InWorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6Game.X6SoloLevelSubsystem.SetDefaultSoloLevelPaused
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPaused                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6SoloLevelSubsystem::SetDefaultSoloLevelPaused(class UObject* InWorldContextObject, bool bPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6SoloLevelSubsystem", "SetDefaultSoloLevelPaused");

	Params::X6SoloLevelSubsystem_SetDefaultSoloLevelPaused Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.bPaused = bPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6SoloLevelSubsystem.SetSoloLevelPauseEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6SoloLevelSubsystem::SetSoloLevelPauseEnabled(class UObject* InWorldContextObject, bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6SoloLevelSubsystem", "SetSoloLevelPauseEnabled");

	Params::X6SoloLevelSubsystem_SetSoloLevelPauseEnabled Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6Game.X6SoloLevelSubsystem.UnbindSoloLevelPausedEvent
// (Final, Native, Public, BlueprintCallable)

void UX6SoloLevelSubsystem::UnbindSoloLevelPausedEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6SoloLevelSubsystem", "UnbindSoloLevelPausedEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

