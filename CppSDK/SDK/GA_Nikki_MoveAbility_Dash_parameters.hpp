#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Nikki_MoveAbility_Dash

#include "Basic.hpp"

#include "X6Game_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GA_Nikki_MoveAbility_Dash.GA_Nikki_MoveAbility_Dash_C.ClampXYSpeed
// 0x0028 (0x0028 - 0x0000)
struct GA_Nikki_MoveAbility_Dash_C_ClampXYSpeed final
{
public:
	double                                        Max;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMovementComponent*                     MovementComp;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_ClampSize2D_ReturnValue;           // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Nikki_MoveAbility_Dash_C_ClampXYSpeed) == 0x000008, "Wrong alignment on GA_Nikki_MoveAbility_Dash_C_ClampXYSpeed");
static_assert(sizeof(GA_Nikki_MoveAbility_Dash_C_ClampXYSpeed) == 0x000028, "Wrong size on GA_Nikki_MoveAbility_Dash_C_ClampXYSpeed");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ClampXYSpeed, Max) == 0x000000, "Member 'GA_Nikki_MoveAbility_Dash_C_ClampXYSpeed::Max' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ClampXYSpeed, MovementComp) == 0x000008, "Member 'GA_Nikki_MoveAbility_Dash_C_ClampXYSpeed::MovementComp' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ClampXYSpeed, CallFunc_Vector_ClampSize2D_ReturnValue) == 0x000010, "Member 'GA_Nikki_MoveAbility_Dash_C_ClampXYSpeed::CallFunc_Vector_ClampSize2D_ReturnValue' has a wrong offset!");

// Function GA_Nikki_MoveAbility_Dash.GA_Nikki_MoveAbility_Dash_C.EnableRun
// 0x0020 (0x0020 - 0x0000)
struct GA_Nikki_MoveAbility_Dash_C_EnableRun final
{
public:
	bool                                          Enable_Run_Operation;                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class URMConfigContextInterface*              CallFunc_GetConfigContext_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URMConfigContext_OnGround*              K2Node_DynamicCast_AsRMConfig_Context_on_Ground;   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Nikki_MoveAbility_Dash_C_EnableRun) == 0x000008, "Wrong alignment on GA_Nikki_MoveAbility_Dash_C_EnableRun");
static_assert(sizeof(GA_Nikki_MoveAbility_Dash_C_EnableRun) == 0x000020, "Wrong size on GA_Nikki_MoveAbility_Dash_C_EnableRun");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_EnableRun, Enable_Run_Operation) == 0x000000, "Member 'GA_Nikki_MoveAbility_Dash_C_EnableRun::Enable_Run_Operation' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_EnableRun, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'GA_Nikki_MoveAbility_Dash_C_EnableRun::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_EnableRun, CallFunc_GetConfigContext_ReturnValue) == 0x000008, "Member 'GA_Nikki_MoveAbility_Dash_C_EnableRun::CallFunc_GetConfigContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_EnableRun, K2Node_DynamicCast_AsRMConfig_Context_on_Ground) == 0x000010, "Member 'GA_Nikki_MoveAbility_Dash_C_EnableRun::K2Node_DynamicCast_AsRMConfig_Context_on_Ground' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_EnableRun, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'GA_Nikki_MoveAbility_Dash_C_EnableRun::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_EnableRun, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'GA_Nikki_MoveAbility_Dash_C_EnableRun::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function GA_Nikki_MoveAbility_Dash.GA_Nikki_MoveAbility_Dash_C.ExecuteUbergraph_GA_Nikki_MoveAbility_Dash
// 0x02F8 (0x02F8 - 0x0000)
struct GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERegularLocomotionType                        CallFunc_GetRunOrWalk_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_10;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_9;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_8;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_7;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x0058(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_6;                   // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x0070(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0088(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_5;                   // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_6;            // 0x00A0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_7;            // 0x00B8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_8;            // 0x00D0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_9;            // 0x00E8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_10;           // 0x0100(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_11;           // 0x0118(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_12;           // 0x0130(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UX6AbilityTask_WaitAccelChange*         CallFunc_X6WaitAccelChange_ReturnValue;            // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerAnimStatesComponent_C*        CallFunc_GetComponentByClass_ReturnValue;          // 0x0160(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_13;           // 0x0168(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ERegularFloatingJumpStage                     K2Node_CustomEvent_NewStage;                       // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERegularFloatingJumpStage                     K2Node_CustomEvent_OldStage;                       // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x017B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17D[0x3];                                      // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue_1; // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(ERegularFloatingJumpStage NewStage, ERegularFloatingJumpStage OldStage)> K2Node_CreateDelegate_OutputDelegate_14; // 0x018C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_11;                  // 0x019C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ERegularFloatingJumpStage NewStage, ERegularFloatingJumpStage OldStage)> K2Node_CreateDelegate_OutputDelegate_15; // 0x01A4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bPressOrRelease;                // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B5[0x3];                                      // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_InputTag;                       // 0x01B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterMovementComponent*            CallFunc_GetComponentByClass_ReturnValue_1;        // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerRegularMovementCompV3_C*      CallFunc_GetComponentByClass_ReturnValue_2;        // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetCurrentAcceleration_ReturnValue;       // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NoInput__ReturnValue;                     // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NoInput__ReturnValue_1;                   // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_222[0x6];                                      // 0x0222(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UX6AbilityTask_PlayMontageAndWait*      CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue; // 0x0228(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0238(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_Constant_ReturnValue;           // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_282[0x6];                                      // 0x0282(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetSopAnim_Montage;                       // 0x0288(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UX6AbilityTask_PlayMontageAndWait*      CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue_1; // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSoftObjectPath                        CallFunc_GetSoftObjectPath_ReturnValue;            // 0x0298(0x0020)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FSoftObjectPath>                K2Node_MakeArray_Array;                            // 0x02B8(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActorPlayingGivenAnimation_ReturnValue; // 0x02C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CA[0x6];                                      // 0x02CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetComponentByClass_ReturnValue_3;        // 0x02D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D9[0x7];                                      // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x02E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UX6AbilitySystemComponent*              CallFunc_GetX6AbilitySystemComponentFromActorInfo_ReturnValue; // 0x02E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ERegularLocomotionType                        CallFunc_GetRunOrWalk_ReturnValue_1;               // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERegularLocomotionType                        CallFunc_GetRunOrWalk_ReturnValue_2;               // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash) == 0x000008, "Wrong alignment on GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash");
static_assert(sizeof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash) == 0x0002F8, "Wrong size on GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, EntryPoint) == 0x000000, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, CallFunc_GetRunOrWalk_ReturnValue) == 0x000004, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::CallFunc_GetRunOrWalk_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, K2Node_CustomEvent_NotifyName_10) == 0x000008, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::K2Node_CustomEvent_NotifyName_10' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, K2Node_CustomEvent_NotifyName_9) == 0x000020, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::K2Node_CustomEvent_NotifyName_9' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, K2Node_CustomEvent_NotifyName_8) == 0x000038, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::K2Node_CustomEvent_NotifyName_8' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, K2Node_CreateDelegate_OutputDelegate_2) == 0x000040, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, K2Node_CustomEvent_NotifyName_7) == 0x000050, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::K2Node_CustomEvent_NotifyName_7' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, K2Node_CreateDelegate_OutputDelegate_3) == 0x000058, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, K2Node_CustomEvent_NotifyName_6) == 0x000068, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::K2Node_CustomEvent_NotifyName_6' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, K2Node_CreateDelegate_OutputDelegate_4) == 0x000070, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, Temp_name_Variable) == 0x000080, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, K2Node_CreateDelegate_OutputDelegate_5) == 0x000088, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, K2Node_CustomEvent_NotifyName_5) == 0x000098, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::K2Node_CustomEvent_NotifyName_5' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, K2Node_CreateDelegate_OutputDelegate_6) == 0x0000A0, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, K2Node_CustomEvent_NotifyName_4) == 0x0000B0, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, K2Node_CreateDelegate_OutputDelegate_7) == 0x0000B8, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, K2Node_CustomEvent_NotifyName_3) == 0x0000C8, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, K2Node_CreateDelegate_OutputDelegate_8) == 0x0000D0, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, K2Node_CustomEvent_NotifyName_2) == 0x0000E0, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, K2Node_CreateDelegate_OutputDelegate_9) == 0x0000E8, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, K2Node_CustomEvent_NotifyName_1) == 0x0000F8, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, K2Node_CreateDelegate_OutputDelegate_10) == 0x000100, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, K2Node_CustomEvent_NotifyName) == 0x000110, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, K2Node_CreateDelegate_OutputDelegate_11) == 0x000118, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, Temp_name_Variable_1) == 0x000128, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, K2Node_CreateDelegate_OutputDelegate_12) == 0x000130, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, K2Node_SwitchName_CmpSuccess) == 0x000140, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, CallFunc_X6WaitAccelChange_ReturnValue) == 0x000148, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::CallFunc_X6WaitAccelChange_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, CallFunc_IsValid_ReturnValue) == 0x000150, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000158, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, CallFunc_GetComponentByClass_ReturnValue) == 0x000160, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, K2Node_CreateDelegate_OutputDelegate_13) == 0x000168, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, K2Node_CustomEvent_NewStage) == 0x000178, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::K2Node_CustomEvent_NewStage' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, K2Node_CustomEvent_OldStage) == 0x000179, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::K2Node_CustomEvent_OldStage' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00017A, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00017B, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, CallFunc_BooleanOR_ReturnValue) == 0x00017C, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, CallFunc_GetOwningActorFromActorInfo_ReturnValue_1) == 0x000180, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::CallFunc_GetOwningActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, CallFunc_K2_CommitAbility_ReturnValue) == 0x000188, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, K2Node_CreateDelegate_OutputDelegate_14) == 0x00018C, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, K2Node_CustomEvent_NotifyName_11) == 0x00019C, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::K2Node_CustomEvent_NotifyName_11' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, K2Node_CreateDelegate_OutputDelegate_15) == 0x0001A4, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, K2Node_CustomEvent_bPressOrRelease) == 0x0001B4, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::K2Node_CustomEvent_bPressOrRelease' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, K2Node_CustomEvent_InputTag) == 0x0001B8, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::K2Node_CustomEvent_InputTag' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, CallFunc_MatchesTag_ReturnValue) == 0x0001C0, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, CallFunc_GetComponentByClass_ReturnValue_1) == 0x0001C8, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, CallFunc_GetComponentByClass_ReturnValue_2) == 0x0001D0, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::CallFunc_GetComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0001D8, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, CallFunc_GetCurrentAcceleration_ReturnValue) == 0x0001F0, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::CallFunc_GetCurrentAcceleration_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000208, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, CallFunc_NoInput__ReturnValue) == 0x000220, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::CallFunc_NoInput__ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, CallFunc_NoInput__ReturnValue_1) == 0x000221, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::CallFunc_NoInput__ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue) == 0x000228, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, CallFunc_IsValid_ReturnValue_1) == 0x000230, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000238, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, CallFunc_RInterpTo_Constant_ReturnValue) == 0x000240, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::CallFunc_RInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, CallFunc_BreakRotator_Roll) == 0x000258, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, CallFunc_BreakRotator_Pitch) == 0x00025C, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, CallFunc_BreakRotator_Yaw) == 0x000260, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, CallFunc_MakeRotator_ReturnValue) == 0x000268, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, K2Node_Event_bWasCancelled) == 0x000280, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000281, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, CallFunc_GetSopAnim_Montage) == 0x000288, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::CallFunc_GetSopAnim_Montage' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue_1) == 0x000290, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, CallFunc_GetSoftObjectPath_ReturnValue) == 0x000298, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::CallFunc_GetSoftObjectPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, K2Node_MakeArray_Array) == 0x0002B8, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, CallFunc_IsValid_ReturnValue_2) == 0x0002C8, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, CallFunc_IsActorPlayingGivenAnimation_ReturnValue) == 0x0002C9, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::CallFunc_IsActorPlayingGivenAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, CallFunc_GetComponentByClass_ReturnValue_3) == 0x0002D0, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::CallFunc_GetComponentByClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, CallFunc_IsValid_ReturnValue_3) == 0x0002D8, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, CallFunc_GetAnimInstance_ReturnValue) == 0x0002E0, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, CallFunc_GetX6AbilitySystemComponentFromActorInfo_ReturnValue) == 0x0002E8, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::CallFunc_GetX6AbilitySystemComponentFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, CallFunc_GetRunOrWalk_ReturnValue_1) == 0x0002F0, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::CallFunc_GetRunOrWalk_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash, CallFunc_GetRunOrWalk_ReturnValue_2) == 0x0002F1, "Member 'GA_Nikki_MoveAbility_Dash_C_ExecuteUbergraph_GA_Nikki_MoveAbility_Dash::CallFunc_GetRunOrWalk_ReturnValue_2' has a wrong offset!");

// Function GA_Nikki_MoveAbility_Dash.GA_Nikki_MoveAbility_Dash_C.GetRunOrWalk
// 0x0006 (0x0006 - 0x0000)
struct GA_Nikki_MoveAbility_Dash_C_GetRunOrWalk final
{
public:
	ERegularLocomotionType                        ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERegularLocomotionType                        Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERegularLocomotionType                        Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EnableRun_Enable_Run_Operation;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERegularLocomotionType                        K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Nikki_MoveAbility_Dash_C_GetRunOrWalk) == 0x000001, "Wrong alignment on GA_Nikki_MoveAbility_Dash_C_GetRunOrWalk");
static_assert(sizeof(GA_Nikki_MoveAbility_Dash_C_GetRunOrWalk) == 0x000006, "Wrong size on GA_Nikki_MoveAbility_Dash_C_GetRunOrWalk");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_GetRunOrWalk, ReturnValue) == 0x000000, "Member 'GA_Nikki_MoveAbility_Dash_C_GetRunOrWalk::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_GetRunOrWalk, Temp_bool_Variable) == 0x000001, "Member 'GA_Nikki_MoveAbility_Dash_C_GetRunOrWalk::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_GetRunOrWalk, Temp_byte_Variable) == 0x000002, "Member 'GA_Nikki_MoveAbility_Dash_C_GetRunOrWalk::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_GetRunOrWalk, Temp_byte_Variable_1) == 0x000003, "Member 'GA_Nikki_MoveAbility_Dash_C_GetRunOrWalk::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_GetRunOrWalk, CallFunc_EnableRun_Enable_Run_Operation) == 0x000004, "Member 'GA_Nikki_MoveAbility_Dash_C_GetRunOrWalk::CallFunc_EnableRun_Enable_Run_Operation' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_GetRunOrWalk, K2Node_Select_Default) == 0x000005, "Member 'GA_Nikki_MoveAbility_Dash_C_GetRunOrWalk::K2Node_Select_Default' has a wrong offset!");

// Function GA_Nikki_MoveAbility_Dash.GA_Nikki_MoveAbility_Dash_C.GetSopAnim
// 0x0020 (0x0020 - 0x0000)
struct GA_Nikki_MoveAbility_Dash_C_GetSopAnim final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerCombatMovementComponent_C*    CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Nikki_MoveAbility_Dash_C_GetSopAnim) == 0x000008, "Wrong alignment on GA_Nikki_MoveAbility_Dash_C_GetSopAnim");
static_assert(sizeof(GA_Nikki_MoveAbility_Dash_C_GetSopAnim) == 0x000020, "Wrong size on GA_Nikki_MoveAbility_Dash_C_GetSopAnim");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_GetSopAnim, Montage) == 0x000000, "Member 'GA_Nikki_MoveAbility_Dash_C_GetSopAnim::Montage' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_GetSopAnim, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000008, "Member 'GA_Nikki_MoveAbility_Dash_C_GetSopAnim::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_GetSopAnim, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'GA_Nikki_MoveAbility_Dash_C_GetSopAnim::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_GetSopAnim, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'GA_Nikki_MoveAbility_Dash_C_GetSopAnim::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GA_Nikki_MoveAbility_Dash.GA_Nikki_MoveAbility_Dash_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_Nikki_MoveAbility_Dash_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Nikki_MoveAbility_Dash_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_Nikki_MoveAbility_Dash_C_K2_OnEndAbility");
static_assert(sizeof(GA_Nikki_MoveAbility_Dash_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_Nikki_MoveAbility_Dash_C_K2_OnEndAbility");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_Nikki_MoveAbility_Dash_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_Nikki_MoveAbility_Dash.GA_Nikki_MoveAbility_Dash_C.NoInput?
// 0x0030 (0x0030 - 0x0000)
struct GA_Nikki_MoveAbility_Dash_C_NoInput_ final
{
public:
	class UCharacterMovementComponent*            MovementComp;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCurrentAcceleration_ReturnValue;       // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Vector_IsZero_ReturnValue;                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Nikki_MoveAbility_Dash_C_NoInput_) == 0x000008, "Wrong alignment on GA_Nikki_MoveAbility_Dash_C_NoInput_");
static_assert(sizeof(GA_Nikki_MoveAbility_Dash_C_NoInput_) == 0x000030, "Wrong size on GA_Nikki_MoveAbility_Dash_C_NoInput_");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_NoInput_, MovementComp) == 0x000000, "Member 'GA_Nikki_MoveAbility_Dash_C_NoInput_::MovementComp' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_NoInput_, ReturnValue) == 0x000008, "Member 'GA_Nikki_MoveAbility_Dash_C_NoInput_::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_NoInput_, CallFunc_GetCurrentAcceleration_ReturnValue) == 0x000010, "Member 'GA_Nikki_MoveAbility_Dash_C_NoInput_::CallFunc_GetCurrentAcceleration_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_NoInput_, CallFunc_Vector_IsZero_ReturnValue) == 0x000028, "Member 'GA_Nikki_MoveAbility_Dash_C_NoInput_::CallFunc_Vector_IsZero_ReturnValue' has a wrong offset!");

// Function GA_Nikki_MoveAbility_Dash.GA_Nikki_MoveAbility_Dash_C.OnBlendOut_0CAA8CB14C6ED774886F5A8BA49592E0
// 0x0008 (0x0008 - 0x0000)
struct GA_Nikki_MoveAbility_Dash_C_OnBlendOut_0CAA8CB14C6ED774886F5A8BA49592E0 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Nikki_MoveAbility_Dash_C_OnBlendOut_0CAA8CB14C6ED774886F5A8BA49592E0) == 0x000004, "Wrong alignment on GA_Nikki_MoveAbility_Dash_C_OnBlendOut_0CAA8CB14C6ED774886F5A8BA49592E0");
static_assert(sizeof(GA_Nikki_MoveAbility_Dash_C_OnBlendOut_0CAA8CB14C6ED774886F5A8BA49592E0) == 0x000008, "Wrong size on GA_Nikki_MoveAbility_Dash_C_OnBlendOut_0CAA8CB14C6ED774886F5A8BA49592E0");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_OnBlendOut_0CAA8CB14C6ED774886F5A8BA49592E0, NotifyName) == 0x000000, "Member 'GA_Nikki_MoveAbility_Dash_C_OnBlendOut_0CAA8CB14C6ED774886F5A8BA49592E0::NotifyName' has a wrong offset!");

// Function GA_Nikki_MoveAbility_Dash.GA_Nikki_MoveAbility_Dash_C.OnBlendOut_D30DE7AB48AEA8E333DF909738541332
// 0x0008 (0x0008 - 0x0000)
struct GA_Nikki_MoveAbility_Dash_C_OnBlendOut_D30DE7AB48AEA8E333DF909738541332 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Nikki_MoveAbility_Dash_C_OnBlendOut_D30DE7AB48AEA8E333DF909738541332) == 0x000004, "Wrong alignment on GA_Nikki_MoveAbility_Dash_C_OnBlendOut_D30DE7AB48AEA8E333DF909738541332");
static_assert(sizeof(GA_Nikki_MoveAbility_Dash_C_OnBlendOut_D30DE7AB48AEA8E333DF909738541332) == 0x000008, "Wrong size on GA_Nikki_MoveAbility_Dash_C_OnBlendOut_D30DE7AB48AEA8E333DF909738541332");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_OnBlendOut_D30DE7AB48AEA8E333DF909738541332, NotifyName) == 0x000000, "Member 'GA_Nikki_MoveAbility_Dash_C_OnBlendOut_D30DE7AB48AEA8E333DF909738541332::NotifyName' has a wrong offset!");

// Function GA_Nikki_MoveAbility_Dash.GA_Nikki_MoveAbility_Dash_C.OnCancelled_0CAA8CB14C6ED774886F5A8BA49592E0
// 0x0008 (0x0008 - 0x0000)
struct GA_Nikki_MoveAbility_Dash_C_OnCancelled_0CAA8CB14C6ED774886F5A8BA49592E0 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Nikki_MoveAbility_Dash_C_OnCancelled_0CAA8CB14C6ED774886F5A8BA49592E0) == 0x000004, "Wrong alignment on GA_Nikki_MoveAbility_Dash_C_OnCancelled_0CAA8CB14C6ED774886F5A8BA49592E0");
static_assert(sizeof(GA_Nikki_MoveAbility_Dash_C_OnCancelled_0CAA8CB14C6ED774886F5A8BA49592E0) == 0x000008, "Wrong size on GA_Nikki_MoveAbility_Dash_C_OnCancelled_0CAA8CB14C6ED774886F5A8BA49592E0");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_OnCancelled_0CAA8CB14C6ED774886F5A8BA49592E0, NotifyName) == 0x000000, "Member 'GA_Nikki_MoveAbility_Dash_C_OnCancelled_0CAA8CB14C6ED774886F5A8BA49592E0::NotifyName' has a wrong offset!");

// Function GA_Nikki_MoveAbility_Dash.GA_Nikki_MoveAbility_Dash_C.OnCancelled_D30DE7AB48AEA8E333DF909738541332
// 0x0008 (0x0008 - 0x0000)
struct GA_Nikki_MoveAbility_Dash_C_OnCancelled_D30DE7AB48AEA8E333DF909738541332 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Nikki_MoveAbility_Dash_C_OnCancelled_D30DE7AB48AEA8E333DF909738541332) == 0x000004, "Wrong alignment on GA_Nikki_MoveAbility_Dash_C_OnCancelled_D30DE7AB48AEA8E333DF909738541332");
static_assert(sizeof(GA_Nikki_MoveAbility_Dash_C_OnCancelled_D30DE7AB48AEA8E333DF909738541332) == 0x000008, "Wrong size on GA_Nikki_MoveAbility_Dash_C_OnCancelled_D30DE7AB48AEA8E333DF909738541332");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_OnCancelled_D30DE7AB48AEA8E333DF909738541332, NotifyName) == 0x000000, "Member 'GA_Nikki_MoveAbility_Dash_C_OnCancelled_D30DE7AB48AEA8E333DF909738541332::NotifyName' has a wrong offset!");

// Function GA_Nikki_MoveAbility_Dash.GA_Nikki_MoveAbility_Dash_C.OnCompleted_0CAA8CB14C6ED774886F5A8BA49592E0
// 0x0008 (0x0008 - 0x0000)
struct GA_Nikki_MoveAbility_Dash_C_OnCompleted_0CAA8CB14C6ED774886F5A8BA49592E0 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Nikki_MoveAbility_Dash_C_OnCompleted_0CAA8CB14C6ED774886F5A8BA49592E0) == 0x000004, "Wrong alignment on GA_Nikki_MoveAbility_Dash_C_OnCompleted_0CAA8CB14C6ED774886F5A8BA49592E0");
static_assert(sizeof(GA_Nikki_MoveAbility_Dash_C_OnCompleted_0CAA8CB14C6ED774886F5A8BA49592E0) == 0x000008, "Wrong size on GA_Nikki_MoveAbility_Dash_C_OnCompleted_0CAA8CB14C6ED774886F5A8BA49592E0");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_OnCompleted_0CAA8CB14C6ED774886F5A8BA49592E0, NotifyName) == 0x000000, "Member 'GA_Nikki_MoveAbility_Dash_C_OnCompleted_0CAA8CB14C6ED774886F5A8BA49592E0::NotifyName' has a wrong offset!");

// Function GA_Nikki_MoveAbility_Dash.GA_Nikki_MoveAbility_Dash_C.OnCompleted_D30DE7AB48AEA8E333DF909738541332
// 0x0008 (0x0008 - 0x0000)
struct GA_Nikki_MoveAbility_Dash_C_OnCompleted_D30DE7AB48AEA8E333DF909738541332 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Nikki_MoveAbility_Dash_C_OnCompleted_D30DE7AB48AEA8E333DF909738541332) == 0x000004, "Wrong alignment on GA_Nikki_MoveAbility_Dash_C_OnCompleted_D30DE7AB48AEA8E333DF909738541332");
static_assert(sizeof(GA_Nikki_MoveAbility_Dash_C_OnCompleted_D30DE7AB48AEA8E333DF909738541332) == 0x000008, "Wrong size on GA_Nikki_MoveAbility_Dash_C_OnCompleted_D30DE7AB48AEA8E333DF909738541332");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_OnCompleted_D30DE7AB48AEA8E333DF909738541332, NotifyName) == 0x000000, "Member 'GA_Nikki_MoveAbility_Dash_C_OnCompleted_D30DE7AB48AEA8E333DF909738541332::NotifyName' has a wrong offset!");

// Function GA_Nikki_MoveAbility_Dash.GA_Nikki_MoveAbility_Dash_C.OnInputRecv
// 0x000C (0x000C - 0x0000)
struct GA_Nikki_MoveAbility_Dash_C_OnInputRecv final
{
public:
	bool                                          bPressOrRelease;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           InputTag;                                          // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Nikki_MoveAbility_Dash_C_OnInputRecv) == 0x000004, "Wrong alignment on GA_Nikki_MoveAbility_Dash_C_OnInputRecv");
static_assert(sizeof(GA_Nikki_MoveAbility_Dash_C_OnInputRecv) == 0x00000C, "Wrong size on GA_Nikki_MoveAbility_Dash_C_OnInputRecv");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_OnInputRecv, bPressOrRelease) == 0x000000, "Member 'GA_Nikki_MoveAbility_Dash_C_OnInputRecv::bPressOrRelease' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_OnInputRecv, InputTag) == 0x000004, "Member 'GA_Nikki_MoveAbility_Dash_C_OnInputRecv::InputTag' has a wrong offset!");

// Function GA_Nikki_MoveAbility_Dash.GA_Nikki_MoveAbility_Dash_C.OnInterrupted_0CAA8CB14C6ED774886F5A8BA49592E0
// 0x0008 (0x0008 - 0x0000)
struct GA_Nikki_MoveAbility_Dash_C_OnInterrupted_0CAA8CB14C6ED774886F5A8BA49592E0 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Nikki_MoveAbility_Dash_C_OnInterrupted_0CAA8CB14C6ED774886F5A8BA49592E0) == 0x000004, "Wrong alignment on GA_Nikki_MoveAbility_Dash_C_OnInterrupted_0CAA8CB14C6ED774886F5A8BA49592E0");
static_assert(sizeof(GA_Nikki_MoveAbility_Dash_C_OnInterrupted_0CAA8CB14C6ED774886F5A8BA49592E0) == 0x000008, "Wrong size on GA_Nikki_MoveAbility_Dash_C_OnInterrupted_0CAA8CB14C6ED774886F5A8BA49592E0");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_OnInterrupted_0CAA8CB14C6ED774886F5A8BA49592E0, NotifyName) == 0x000000, "Member 'GA_Nikki_MoveAbility_Dash_C_OnInterrupted_0CAA8CB14C6ED774886F5A8BA49592E0::NotifyName' has a wrong offset!");

// Function GA_Nikki_MoveAbility_Dash.GA_Nikki_MoveAbility_Dash_C.OnInterrupted_D30DE7AB48AEA8E333DF909738541332
// 0x0008 (0x0008 - 0x0000)
struct GA_Nikki_MoveAbility_Dash_C_OnInterrupted_D30DE7AB48AEA8E333DF909738541332 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Nikki_MoveAbility_Dash_C_OnInterrupted_D30DE7AB48AEA8E333DF909738541332) == 0x000004, "Wrong alignment on GA_Nikki_MoveAbility_Dash_C_OnInterrupted_D30DE7AB48AEA8E333DF909738541332");
static_assert(sizeof(GA_Nikki_MoveAbility_Dash_C_OnInterrupted_D30DE7AB48AEA8E333DF909738541332) == 0x000008, "Wrong size on GA_Nikki_MoveAbility_Dash_C_OnInterrupted_D30DE7AB48AEA8E333DF909738541332");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_OnInterrupted_D30DE7AB48AEA8E333DF909738541332, NotifyName) == 0x000000, "Member 'GA_Nikki_MoveAbility_Dash_C_OnInterrupted_D30DE7AB48AEA8E333DF909738541332::NotifyName' has a wrong offset!");

// Function GA_Nikki_MoveAbility_Dash.GA_Nikki_MoveAbility_Dash_C.OnNotifyBegin_0CAA8CB14C6ED774886F5A8BA49592E0
// 0x0008 (0x0008 - 0x0000)
struct GA_Nikki_MoveAbility_Dash_C_OnNotifyBegin_0CAA8CB14C6ED774886F5A8BA49592E0 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Nikki_MoveAbility_Dash_C_OnNotifyBegin_0CAA8CB14C6ED774886F5A8BA49592E0) == 0x000004, "Wrong alignment on GA_Nikki_MoveAbility_Dash_C_OnNotifyBegin_0CAA8CB14C6ED774886F5A8BA49592E0");
static_assert(sizeof(GA_Nikki_MoveAbility_Dash_C_OnNotifyBegin_0CAA8CB14C6ED774886F5A8BA49592E0) == 0x000008, "Wrong size on GA_Nikki_MoveAbility_Dash_C_OnNotifyBegin_0CAA8CB14C6ED774886F5A8BA49592E0");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_OnNotifyBegin_0CAA8CB14C6ED774886F5A8BA49592E0, NotifyName) == 0x000000, "Member 'GA_Nikki_MoveAbility_Dash_C_OnNotifyBegin_0CAA8CB14C6ED774886F5A8BA49592E0::NotifyName' has a wrong offset!");

// Function GA_Nikki_MoveAbility_Dash.GA_Nikki_MoveAbility_Dash_C.OnNotifyBegin_D30DE7AB48AEA8E333DF909738541332
// 0x0008 (0x0008 - 0x0000)
struct GA_Nikki_MoveAbility_Dash_C_OnNotifyBegin_D30DE7AB48AEA8E333DF909738541332 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Nikki_MoveAbility_Dash_C_OnNotifyBegin_D30DE7AB48AEA8E333DF909738541332) == 0x000004, "Wrong alignment on GA_Nikki_MoveAbility_Dash_C_OnNotifyBegin_D30DE7AB48AEA8E333DF909738541332");
static_assert(sizeof(GA_Nikki_MoveAbility_Dash_C_OnNotifyBegin_D30DE7AB48AEA8E333DF909738541332) == 0x000008, "Wrong size on GA_Nikki_MoveAbility_Dash_C_OnNotifyBegin_D30DE7AB48AEA8E333DF909738541332");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_OnNotifyBegin_D30DE7AB48AEA8E333DF909738541332, NotifyName) == 0x000000, "Member 'GA_Nikki_MoveAbility_Dash_C_OnNotifyBegin_D30DE7AB48AEA8E333DF909738541332::NotifyName' has a wrong offset!");

// Function GA_Nikki_MoveAbility_Dash.GA_Nikki_MoveAbility_Dash_C.OnNotifyEnd_0CAA8CB14C6ED774886F5A8BA49592E0
// 0x0008 (0x0008 - 0x0000)
struct GA_Nikki_MoveAbility_Dash_C_OnNotifyEnd_0CAA8CB14C6ED774886F5A8BA49592E0 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Nikki_MoveAbility_Dash_C_OnNotifyEnd_0CAA8CB14C6ED774886F5A8BA49592E0) == 0x000004, "Wrong alignment on GA_Nikki_MoveAbility_Dash_C_OnNotifyEnd_0CAA8CB14C6ED774886F5A8BA49592E0");
static_assert(sizeof(GA_Nikki_MoveAbility_Dash_C_OnNotifyEnd_0CAA8CB14C6ED774886F5A8BA49592E0) == 0x000008, "Wrong size on GA_Nikki_MoveAbility_Dash_C_OnNotifyEnd_0CAA8CB14C6ED774886F5A8BA49592E0");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_OnNotifyEnd_0CAA8CB14C6ED774886F5A8BA49592E0, NotifyName) == 0x000000, "Member 'GA_Nikki_MoveAbility_Dash_C_OnNotifyEnd_0CAA8CB14C6ED774886F5A8BA49592E0::NotifyName' has a wrong offset!");

// Function GA_Nikki_MoveAbility_Dash.GA_Nikki_MoveAbility_Dash_C.OnNotifyEnd_D30DE7AB48AEA8E333DF909738541332
// 0x0008 (0x0008 - 0x0000)
struct GA_Nikki_MoveAbility_Dash_C_OnNotifyEnd_D30DE7AB48AEA8E333DF909738541332 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Nikki_MoveAbility_Dash_C_OnNotifyEnd_D30DE7AB48AEA8E333DF909738541332) == 0x000004, "Wrong alignment on GA_Nikki_MoveAbility_Dash_C_OnNotifyEnd_D30DE7AB48AEA8E333DF909738541332");
static_assert(sizeof(GA_Nikki_MoveAbility_Dash_C_OnNotifyEnd_D30DE7AB48AEA8E333DF909738541332) == 0x000008, "Wrong size on GA_Nikki_MoveAbility_Dash_C_OnNotifyEnd_D30DE7AB48AEA8E333DF909738541332");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_OnNotifyEnd_D30DE7AB48AEA8E333DF909738541332, NotifyName) == 0x000000, "Member 'GA_Nikki_MoveAbility_Dash_C_OnNotifyEnd_D30DE7AB48AEA8E333DF909738541332::NotifyName' has a wrong offset!");

// Function GA_Nikki_MoveAbility_Dash.GA_Nikki_MoveAbility_Dash_C.StageChange
// 0x0002 (0x0002 - 0x0000)
struct GA_Nikki_MoveAbility_Dash_C_StageChange final
{
public:
	ERegularFloatingJumpStage                     NewStage;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERegularFloatingJumpStage                     OldStage;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Nikki_MoveAbility_Dash_C_StageChange) == 0x000001, "Wrong alignment on GA_Nikki_MoveAbility_Dash_C_StageChange");
static_assert(sizeof(GA_Nikki_MoveAbility_Dash_C_StageChange) == 0x000002, "Wrong size on GA_Nikki_MoveAbility_Dash_C_StageChange");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_StageChange, NewStage) == 0x000000, "Member 'GA_Nikki_MoveAbility_Dash_C_StageChange::NewStage' has a wrong offset!");
static_assert(offsetof(GA_Nikki_MoveAbility_Dash_C_StageChange, OldStage) == 0x000001, "Member 'GA_Nikki_MoveAbility_Dash_C_StageChange::OldStage' has a wrong offset!");

}

