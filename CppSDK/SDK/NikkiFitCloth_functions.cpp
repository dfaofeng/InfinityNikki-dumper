#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NikkiFitCloth

#include "Basic.hpp"

#include "NikkiFitCloth_classes.hpp"
#include "NikkiFitCloth_parameters.hpp"


namespace SDK
{

// Function NikkiFitCloth.MatchTwoClothEvent.CheckPrebuildClothData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USkeletalMesh*                    ClothSkelMesh                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMesh*                    BodySkelMesh                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMatchTwoClothEvent::CheckPrebuildClothData(class USkeletalMesh* ClothSkelMesh, class USkeletalMesh* BodySkelMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MatchTwoClothEvent", "CheckPrebuildClothData");

	Params::MatchTwoClothEvent_CheckPrebuildClothData Parms{};

	Parms.ClothSkelMesh = ClothSkelMesh;
	Parms.BodySkelMesh = BodySkelMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NikkiFitCloth.MatchTwoClothEvent.CheckSkeletalMeshBone
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class USkeletalMesh*              SkeletalMesh                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMatchTwoClothEvent::CheckSkeletalMeshBone(const class USkeletalMesh* SkeletalMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MatchTwoClothEvent", "CheckSkeletalMeshBone");

	Params::MatchTwoClothEvent_CheckSkeletalMeshBone Parms{};

	Parms.SkeletalMesh = SkeletalMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NikkiFitCloth.MatchTwoClothEvent.ClearPairCache
// (Final, Native, Static, Public, BlueprintCallable)

void UMatchTwoClothEvent::ClearPairCache()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MatchTwoClothEvent", "ClearPairCache");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NikkiFitCloth.MatchTwoClothEvent.ClearPrebuildClothData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USkeletalMesh*                    ClothSkelMesh                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMatchTwoClothEvent::ClearPrebuildClothData(class USkeletalMesh* ClothSkelMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MatchTwoClothEvent", "ClearPrebuildClothData");

	Params::MatchTwoClothEvent_ClearPrebuildClothData Parms{};

	Parms.ClothSkelMesh = ClothSkelMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NikkiFitCloth.MatchTwoClothEvent.ExtractCPUSkinVertexPositionsToFitChache
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class USkeletalMesh*                    SkeletalMesh                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<int32>&                    DisabledLODIndices                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const TArray<class FName>&              InBoneNames                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const TArray<struct FTransform>&        InBoneTransforms                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UMatchTwoClothEvent::ExtractCPUSkinVertexPositionsToFitChache(class USkeletalMesh* SkeletalMesh, const TArray<int32>& DisabledLODIndices, const TArray<class FName>& InBoneNames, const TArray<struct FTransform>& InBoneTransforms)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MatchTwoClothEvent", "ExtractCPUSkinVertexPositionsToFitChache");

	Params::MatchTwoClothEvent_ExtractCPUSkinVertexPositionsToFitChache Parms{};

	Parms.SkeletalMesh = SkeletalMesh;
	Parms.DisabledLODIndices = std::move(DisabledLODIndices);
	Parms.InBoneNames = std::move(InBoneNames);
	Parms.InBoneTransforms = std::move(InBoneTransforms);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NikkiFitCloth.MatchTwoClothEvent.FindBestMatchBetweenClothOfBody
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class USkeletalMesh*                    InnerSkeletalMesh                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMesh*                    OuterSkeletalMesh                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFitClothCacheAsset*              BodyCacheAsset                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FMatchClothParameter&      MatchParam                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UMatchTwoClothEvent::FindBestMatchBetweenClothOfBody(class USkeletalMesh* InnerSkeletalMesh, class USkeletalMesh* OuterSkeletalMesh, class UFitClothCacheAsset* BodyCacheAsset, const struct FMatchClothParameter& MatchParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MatchTwoClothEvent", "FindBestMatchBetweenClothOfBody");

	Params::MatchTwoClothEvent_FindBestMatchBetweenClothOfBody Parms{};

	Parms.InnerSkeletalMesh = InnerSkeletalMesh;
	Parms.OuterSkeletalMesh = OuterSkeletalMesh;
	Parms.BodyCacheAsset = BodyCacheAsset;
	Parms.MatchParam = std::move(MatchParam);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NikkiFitCloth.MatchTwoClothEvent.FindValidPairData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USkeletalMesh*                    InnerSkelMesh                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMesh*                    OuterSkelMesh                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMatchTwoClothEvent::FindValidPairData(class USkeletalMesh* InnerSkelMesh, class USkeletalMesh* OuterSkelMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MatchTwoClothEvent", "FindValidPairData");

	Params::MatchTwoClothEvent_FindValidPairData Parms{};

	Parms.InnerSkelMesh = InnerSkelMesh;
	Parms.OuterSkelMesh = OuterSkelMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NikkiFitCloth.MatchTwoClothEvent.GeneratePrebuildBodyData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class USkeletalMesh*                    BodySkelMesh                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FMatchClothEditorParameter&MatchParam                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UMatchTwoClothEvent::GeneratePrebuildBodyData(class USkeletalMesh* BodySkelMesh, const struct FMatchClothEditorParameter& MatchParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MatchTwoClothEvent", "GeneratePrebuildBodyData");

	Params::MatchTwoClothEvent_GeneratePrebuildBodyData Parms{};

	Parms.BodySkelMesh = BodySkelMesh;
	Parms.MatchParam = std::move(MatchParam);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NikkiFitCloth.MatchTwoClothEvent.GeneratePrebuildClothData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class USkeletalMesh*                    ClothSkelMesh                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMesh*                    BodySkelMesh                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMesh*                    RenderBodySkelMesh                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FMatchClothEditorParameter&MatchParam                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UMatchTwoClothEvent::GeneratePrebuildClothData(class USkeletalMesh* ClothSkelMesh, class USkeletalMesh* BodySkelMesh, class USkeletalMesh* RenderBodySkelMesh, const struct FMatchClothEditorParameter& MatchParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MatchTwoClothEvent", "GeneratePrebuildClothData");

	Params::MatchTwoClothEvent_GeneratePrebuildClothData Parms{};

	Parms.ClothSkelMesh = ClothSkelMesh;
	Parms.BodySkelMesh = BodySkelMesh;
	Parms.RenderBodySkelMesh = RenderBodySkelMesh;
	Parms.MatchParam = std::move(MatchParam);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NikkiFitCloth.MatchTwoClothEvent.GeneratePrebuildClothSkirtData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class USkeletalMesh*                    ClothSkelMesh                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMesh*                    BodySkelMesh                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMesh*                    RenderBodySkelMesh                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FMatchClothEditorParameter&MatchParam                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UMatchTwoClothEvent::GeneratePrebuildClothSkirtData(class USkeletalMesh* ClothSkelMesh, class USkeletalMesh* BodySkelMesh, class USkeletalMesh* RenderBodySkelMesh, const struct FMatchClothEditorParameter& MatchParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MatchTwoClothEvent", "GeneratePrebuildClothSkirtData");

	Params::MatchTwoClothEvent_GeneratePrebuildClothSkirtData Parms{};

	Parms.ClothSkelMesh = ClothSkelMesh;
	Parms.BodySkelMesh = BodySkelMesh;
	Parms.RenderBodySkelMesh = RenderBodySkelMesh;
	Parms.MatchParam = std::move(MatchParam);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NikkiFitCloth.MatchTwoClothEvent.GeneratePrebuildSkinClothData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class USkeletalMesh*                    ClothSkelMesh                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMesh*                    BodySkelMesh                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMesh*                    RenderBodySkelMesh                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FMatchClothEditorParameter&MatchParam                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const TArray<class FName>&              InBoneNames                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const TArray<struct FTransform>&        InBoneTransforms                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bMultiplyBoneTransform                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMatchTwoClothEvent::GeneratePrebuildSkinClothData(class USkeletalMesh* ClothSkelMesh, class USkeletalMesh* BodySkelMesh, class USkeletalMesh* RenderBodySkelMesh, const struct FMatchClothEditorParameter& MatchParam, const TArray<class FName>& InBoneNames, const TArray<struct FTransform>& InBoneTransforms, bool bMultiplyBoneTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MatchTwoClothEvent", "GeneratePrebuildSkinClothData");

	Params::MatchTwoClothEvent_GeneratePrebuildSkinClothData Parms{};

	Parms.ClothSkelMesh = ClothSkelMesh;
	Parms.BodySkelMesh = BodySkelMesh;
	Parms.RenderBodySkelMesh = RenderBodySkelMesh;
	Parms.MatchParam = std::move(MatchParam);
	Parms.InBoneNames = std::move(InBoneNames);
	Parms.InBoneTransforms = std::move(InBoneTransforms);
	Parms.bMultiplyBoneTransform = bMultiplyBoneTransform;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NikkiFitCloth.MatchTwoClothEvent.GetMaxPairCacheNum
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMatchTwoClothEvent::GetMaxPairCacheNum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MatchTwoClothEvent", "GetMaxPairCacheNum");

	Params::MatchTwoClothEvent_GetMaxPairCacheNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NikkiFitCloth.MatchTwoClothEvent.GetPairCacheNum
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMatchTwoClothEvent::GetPairCacheNum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MatchTwoClothEvent", "GetPairCacheNum");

	Params::MatchTwoClothEvent_GetPairCacheNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NikkiFitCloth.MatchTwoClothEvent.ReleasePairCacheDataExceptInput
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class FString>&            InMeshNames                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const TArray<class FString>&            OutMeshNames                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UMatchTwoClothEvent::ReleasePairCacheDataExceptInput(const TArray<class FString>& InMeshNames, const TArray<class FString>& OutMeshNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MatchTwoClothEvent", "ReleasePairCacheDataExceptInput");

	Params::MatchTwoClothEvent_ReleasePairCacheDataExceptInput Parms{};

	Parms.InMeshNames = std::move(InMeshNames);
	Parms.OutMeshNames = std::move(OutMeshNames);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NikkiFitCloth.MatchTwoClothEvent.ReleaseReferenceArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const TArray<class USkeletalMesh*>&     InSkelMeshArray                                        (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UMatchTwoClothEvent::ReleaseReferenceArray(const TArray<class USkeletalMesh*>& InSkelMeshArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MatchTwoClothEvent", "ReleaseReferenceArray");

	Params::MatchTwoClothEvent_ReleaseReferenceArray Parms{};

	Parms.InSkelMeshArray = std::move(InSkelMeshArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NikkiFitCloth.MatchTwoClothEvent.ReleaseReferenceData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USkeletalMesh*                    InSkelMesh                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMatchTwoClothEvent::ReleaseReferenceData(class USkeletalMesh* InSkelMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MatchTwoClothEvent", "ReleaseReferenceData");

	Params::MatchTwoClothEvent_ReleaseReferenceData Parms{};

	Parms.InSkelMesh = InSkelMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NikkiFitCloth.MatchTwoClothEvent.SetMaxPairCacheNum
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InMaxPairCacheNum                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMatchTwoClothEvent::SetMaxPairCacheNum(int32 InMaxPairCacheNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MatchTwoClothEvent", "SetMaxPairCacheNum");

	Params::MatchTwoClothEvent_SetMaxPairCacheNum Parms{};

	Parms.InMaxPairCacheNum = InMaxPairCacheNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NikkiFitCloth.ClothVisibilityAndOffsetBlueprintLiabrary.AddAssetUserData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFitClothCacheAsset*              FitCacheAsset                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UAssetUserData>       InUserDataClass                                        (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEditorOnly                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAssetUserData*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAssetUserData* UClothVisibilityAndOffsetBlueprintLiabrary::AddAssetUserData(class UFitClothCacheAsset* FitCacheAsset, TSubclassOf<class UAssetUserData> InUserDataClass, bool bEditorOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ClothVisibilityAndOffsetBlueprintLiabrary", "AddAssetUserData");

	Params::ClothVisibilityAndOffsetBlueprintLiabrary_AddAssetUserData Parms{};

	Parms.FitCacheAsset = FitCacheAsset;
	Parms.InUserDataClass = InUserDataClass;
	Parms.bEditorOnly = bEditorOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NikkiFitCloth.ClothVisibilityAndOffsetBlueprintLiabrary.AddClothVisibilityAndOffsetProperty
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*           InnerComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMeshComponent*           OuterComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UClothVisibilityAndOffsetBlueprintLiabrary::AddClothVisibilityAndOffsetProperty(class USkeletalMeshComponent* InnerComponent, class USkeletalMeshComponent* OuterComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ClothVisibilityAndOffsetBlueprintLiabrary", "AddClothVisibilityAndOffsetProperty");

	Params::ClothVisibilityAndOffsetBlueprintLiabrary_AddClothVisibilityAndOffsetProperty Parms{};

	Parms.InnerComponent = InnerComponent;
	Parms.OuterComponent = OuterComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NikkiFitCloth.ClothVisibilityAndOffsetBlueprintLiabrary.ApplyClothVisibilityAndOffsetProperty
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*           InnerComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMeshComponent*           OuterComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UClothVisibilityAndOffsetBlueprintLiabrary::ApplyClothVisibilityAndOffsetProperty(class USkeletalMeshComponent* InnerComponent, class USkeletalMeshComponent* OuterComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ClothVisibilityAndOffsetBlueprintLiabrary", "ApplyClothVisibilityAndOffsetProperty");

	Params::ClothVisibilityAndOffsetBlueprintLiabrary_ApplyClothVisibilityAndOffsetProperty Parms{};

	Parms.InnerComponent = InnerComponent;
	Parms.OuterComponent = OuterComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NikkiFitCloth.ClothVisibilityAndOffsetBlueprintLiabrary.ApplyClothVisibilityByColor
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*           InnerComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<int32>&                    VertexColors                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UClothVisibilityAndOffsetBlueprintLiabrary::ApplyClothVisibilityByColor(class USkeletalMeshComponent* InnerComponent, const TArray<int32>& VertexColors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ClothVisibilityAndOffsetBlueprintLiabrary", "ApplyClothVisibilityByColor");

	Params::ClothVisibilityAndOffsetBlueprintLiabrary_ApplyClothVisibilityByColor Parms{};

	Parms.InnerComponent = InnerComponent;
	Parms.VertexColors = std::move(VertexColors);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NikkiFitCloth.ClothVisibilityAndOffsetBlueprintLiabrary.ClearClothPairCache
// (Final, Native, Static, Public, BlueprintCallable)

void UClothVisibilityAndOffsetBlueprintLiabrary::ClearClothPairCache()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ClothVisibilityAndOffsetBlueprintLiabrary", "ClearClothPairCache");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NikkiFitCloth.ClothVisibilityAndOffsetBlueprintLiabrary.ClearClothRuntimeCache
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USkeletalMesh*                    ClothSkeletalMesh                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UClothVisibilityAndOffsetBlueprintLiabrary::ClearClothRuntimeCache(class USkeletalMesh* ClothSkeletalMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ClothVisibilityAndOffsetBlueprintLiabrary", "ClearClothRuntimeCache");

	Params::ClothVisibilityAndOffsetBlueprintLiabrary_ClearClothRuntimeCache Parms{};

	Parms.ClothSkeletalMesh = ClothSkeletalMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NikkiFitCloth.ClothVisibilityAndOffsetBlueprintLiabrary.ClearClothVisibilityAndOffsetProperty
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*           InnerComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UClothVisibilityAndOffsetBlueprintLiabrary::ClearClothVisibilityAndOffsetProperty(class USkeletalMeshComponent* InnerComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ClothVisibilityAndOffsetBlueprintLiabrary", "ClearClothVisibilityAndOffsetProperty");

	Params::ClothVisibilityAndOffsetBlueprintLiabrary_ClearClothVisibilityAndOffsetProperty Parms{};

	Parms.InnerComponent = InnerComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NikkiFitCloth.ClothVisibilityAndOffsetBlueprintLiabrary.CollectVisibilityData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class USkeletalMesh*              SkeletalMesh                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UClothVisibilityAndOffsetBlueprintLiabrary::CollectVisibilityData(const class USkeletalMesh* SkeletalMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ClothVisibilityAndOffsetBlueprintLiabrary", "CollectVisibilityData");

	Params::ClothVisibilityAndOffsetBlueprintLiabrary_CollectVisibilityData Parms{};

	Parms.SkeletalMesh = SkeletalMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NikkiFitCloth.ClothVisibilityAndOffsetBlueprintLiabrary.GetAssetUserDataOfClass
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFitClothCacheAsset*              FitCacheAsset                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UAssetUserData>       InUserDataClass                                        (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAssetUserData*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAssetUserData* UClothVisibilityAndOffsetBlueprintLiabrary::GetAssetUserDataOfClass(class UFitClothCacheAsset* FitCacheAsset, TSubclassOf<class UAssetUserData> InUserDataClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ClothVisibilityAndOffsetBlueprintLiabrary", "GetAssetUserDataOfClass");

	Params::ClothVisibilityAndOffsetBlueprintLiabrary_GetAssetUserDataOfClass Parms{};

	Parms.FitCacheAsset = FitCacheAsset;
	Parms.InUserDataClass = InUserDataClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NikkiFitCloth.ClothVisibilityAndOffsetBlueprintLiabrary.GetNameFromBoneNamePair
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName*                            OutClothBoneName                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName*                            OutBodyBoneName                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FClothBodyBoneNamePair&    BoneNamePair                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UClothVisibilityAndOffsetBlueprintLiabrary::GetNameFromBoneNamePair(class FName* OutClothBoneName, class FName* OutBodyBoneName, const struct FClothBodyBoneNamePair& BoneNamePair)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ClothVisibilityAndOffsetBlueprintLiabrary", "GetNameFromBoneNamePair");

	Params::ClothVisibilityAndOffsetBlueprintLiabrary_GetNameFromBoneNamePair Parms{};

	Parms.BoneNamePair = std::move(BoneNamePair);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutClothBoneName != nullptr)
		*OutClothBoneName = Parms.OutClothBoneName;

	if (OutBodyBoneName != nullptr)
		*OutBodyBoneName = Parms.OutBodyBoneName;
}


// Function NikkiFitCloth.ClothVisibilityAndOffsetBlueprintLiabrary.GetNikkiPhysicsBoneWeights
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FName>*                    OutColliderBones                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class FName>*                    OutAnimBones                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// class USkeletalMesh*                    InnerSkeletalMesh                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AnimMaskRatioThrshold                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ColliderMaskRatioThrshold                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UClothVisibilityAndOffsetBlueprintLiabrary::GetNikkiPhysicsBoneWeights(TArray<class FName>* OutColliderBones, TArray<class FName>* OutAnimBones, class USkeletalMesh* InnerSkeletalMesh, float AnimMaskRatioThrshold, float ColliderMaskRatioThrshold)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ClothVisibilityAndOffsetBlueprintLiabrary", "GetNikkiPhysicsBoneWeights");

	Params::ClothVisibilityAndOffsetBlueprintLiabrary_GetNikkiPhysicsBoneWeights Parms{};

	Parms.InnerSkeletalMesh = InnerSkeletalMesh;
	Parms.AnimMaskRatioThrshold = AnimMaskRatioThrshold;
	Parms.ColliderMaskRatioThrshold = ColliderMaskRatioThrshold;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutColliderBones != nullptr)
		*OutColliderBones = std::move(Parms.OutColliderBones);

	if (OutAnimBones != nullptr)
		*OutAnimBones = std::move(Parms.OutAnimBones);

	return Parms.ReturnValue;
}


// Function NikkiFitCloth.ClothVisibilityAndOffsetBlueprintLiabrary.GetSkeletalMeshVisibilityProperty
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<int32>*                          ColorNumVertices                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<int32>*                          ColorNumHidedVertices                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<int32>*                          ColorValues                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// const class USkeletalMesh*              ClothSkeletalMesh                                      (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             LODIndex                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UClothVisibilityAndOffsetBlueprintLiabrary::GetSkeletalMeshVisibilityProperty(TArray<int32>* ColorNumVertices, TArray<int32>* ColorNumHidedVertices, TArray<int32>* ColorValues, const class USkeletalMesh* ClothSkeletalMesh, const int32 LODIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ClothVisibilityAndOffsetBlueprintLiabrary", "GetSkeletalMeshVisibilityProperty");

	Params::ClothVisibilityAndOffsetBlueprintLiabrary_GetSkeletalMeshVisibilityProperty Parms{};

	Parms.ClothSkeletalMesh = ClothSkeletalMesh;
	Parms.LODIndex = LODIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ColorNumVertices != nullptr)
		*ColorNumVertices = std::move(Parms.ColorNumVertices);

	if (ColorNumHidedVertices != nullptr)
		*ColorNumHidedVertices = std::move(Parms.ColorNumHidedVertices);

	if (ColorValues != nullptr)
		*ColorValues = std::move(Parms.ColorValues);
}


// Function NikkiFitCloth.ClothVisibilityAndOffsetBlueprintLiabrary.PrintAllVisibilityData
// (Final, Native, Static, Public, BlueprintCallable)

void UClothVisibilityAndOffsetBlueprintLiabrary::PrintAllVisibilityData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ClothVisibilityAndOffsetBlueprintLiabrary", "PrintAllVisibilityData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NikkiFitCloth.ClothVisibilityAndOffsetBlueprintLiabrary.PrintVisibilityData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class USkeletalMesh*              SkeletalMesh                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UClothVisibilityAndOffsetBlueprintLiabrary::PrintVisibilityData(const class USkeletalMesh* SkeletalMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ClothVisibilityAndOffsetBlueprintLiabrary", "PrintVisibilityData");

	Params::ClothVisibilityAndOffsetBlueprintLiabrary_PrintVisibilityData Parms{};

	Parms.SkeletalMesh = SkeletalMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NikkiFitCloth.ClothVisibilityAndOffsetBlueprintLiabrary.PrintWholeBodyVisibilityData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class USkeletalMesh*>&     WholeSkeletalMeshes                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UClothVisibilityAndOffsetBlueprintLiabrary::PrintWholeBodyVisibilityData(const TArray<class USkeletalMesh*>& WholeSkeletalMeshes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ClothVisibilityAndOffsetBlueprintLiabrary", "PrintWholeBodyVisibilityData");

	Params::ClothVisibilityAndOffsetBlueprintLiabrary_PrintWholeBodyVisibilityData Parms{};

	Parms.WholeSkeletalMeshes = std::move(WholeSkeletalMeshes);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NikkiFitCloth.ClothVisibilityAndOffsetBlueprintLiabrary.RemoveUserDataOfClass
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFitClothCacheAsset*              FitCacheAsset                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UAssetUserData>       InUserDataClass                                        (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UClothVisibilityAndOffsetBlueprintLiabrary::RemoveUserDataOfClass(class UFitClothCacheAsset* FitCacheAsset, TSubclassOf<class UAssetUserData> InUserDataClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ClothVisibilityAndOffsetBlueprintLiabrary", "RemoveUserDataOfClass");

	Params::ClothVisibilityAndOffsetBlueprintLiabrary_RemoveUserDataOfClass Parms{};

	Parms.FitCacheAsset = FitCacheAsset;
	Parms.InUserDataClass = InUserDataClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NikkiFitCloth.ClothVisibilityAndOffsetBlueprintLiabrary.ResetAllVisibilityData
// (Final, Native, Static, Public, BlueprintCallable)

void UClothVisibilityAndOffsetBlueprintLiabrary::ResetAllVisibilityData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ClothVisibilityAndOffsetBlueprintLiabrary", "ResetAllVisibilityData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NikkiFitCloth.ClothVisibilityAndOffsetBlueprintLiabrary.SaveCurrentClothVisibilityAndOffsetProperty
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*           InnerComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    SaveFilePath                                           (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             LODIndex                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bKeepDisable                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UClothVisibilityAndOffsetBlueprintLiabrary::SaveCurrentClothVisibilityAndOffsetProperty(class USkeletalMeshComponent* InnerComponent, const class FString& SaveFilePath, const int32 LODIndex, bool bKeepDisable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ClothVisibilityAndOffsetBlueprintLiabrary", "SaveCurrentClothVisibilityAndOffsetProperty");

	Params::ClothVisibilityAndOffsetBlueprintLiabrary_SaveCurrentClothVisibilityAndOffsetProperty Parms{};

	Parms.InnerComponent = InnerComponent;
	Parms.SaveFilePath = std::move(SaveFilePath);
	Parms.LODIndex = LODIndex;
	Parms.bKeepDisable = bKeepDisable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NikkiFitCloth.ClothVisibilityAndOffsetBlueprintLiabrary.SetChaosClothFixedVertices
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FString>*                  OutAssetNames                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FLODVertexIndices>*       OutLODFixedIndices                                     (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// class USkeletalMeshComponent*           InnerComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FixedRatioThrshold                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UClothVisibilityAndOffsetBlueprintLiabrary::SetChaosClothFixedVertices(TArray<class FString>* OutAssetNames, TArray<struct FLODVertexIndices>* OutLODFixedIndices, class USkeletalMeshComponent* InnerComponent, float FixedRatioThrshold)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ClothVisibilityAndOffsetBlueprintLiabrary", "SetChaosClothFixedVertices");

	Params::ClothVisibilityAndOffsetBlueprintLiabrary_SetChaosClothFixedVertices Parms{};

	Parms.InnerComponent = InnerComponent;
	Parms.FixedRatioThrshold = FixedRatioThrshold;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAssetNames != nullptr)
		*OutAssetNames = std::move(Parms.OutAssetNames);

	if (OutLODFixedIndices != nullptr)
		*OutLODFixedIndices = std::move(Parms.OutLODFixedIndices);
}


// Function NikkiFitCloth.ClothVisibilityAndOffsetBlueprintLiabrary.SetNameToBoneNamePair
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FClothBodyBoneNamePair*          BoneNamePair                                           (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// const class FName&                      InClothBoneName                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName&                      InBodyBoneName                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class USkeletalMesh*              InSkeletalMesh                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UClothVisibilityAndOffsetBlueprintLiabrary::SetNameToBoneNamePair(struct FClothBodyBoneNamePair* BoneNamePair, const class FName& InClothBoneName, const class FName& InBodyBoneName, const class USkeletalMesh* InSkeletalMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ClothVisibilityAndOffsetBlueprintLiabrary", "SetNameToBoneNamePair");

	Params::ClothVisibilityAndOffsetBlueprintLiabrary_SetNameToBoneNamePair Parms{};

	Parms.InClothBoneName = InClothBoneName;
	Parms.InBodyBoneName = InBodyBoneName;
	Parms.InSkeletalMesh = InSkeletalMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (BoneNamePair != nullptr)
		*BoneNamePair = std::move(Parms.BoneNamePair);

	return Parms.ReturnValue;
}

}

