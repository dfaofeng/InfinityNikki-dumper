#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DyEnvSys

#include "Basic.hpp"

#include "DynamicEnvironmentSystem_structs.hpp"
#include "S_UrbanLight_structs.hpp"
#include "Engine_structs.hpp"
#include "MovieScene_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_TimeStamp_structs.hpp"


namespace SDK::Params
{

// Function BP_DyEnvSys.BP_DyEnvSys_C.World Debug Ash Change
// 0x0008 (0x0008 - 0x0000)
struct BP_DyEnvSys_C_World_Debug_Ash_Change final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DyEnvSys_C_World_Debug_Ash_Change) == 0x000008, "Wrong alignment on BP_DyEnvSys_C_World_Debug_Ash_Change");
static_assert(sizeof(BP_DyEnvSys_C_World_Debug_Ash_Change) == 0x000008, "Wrong size on BP_DyEnvSys_C_World_Debug_Ash_Change");
static_assert(offsetof(BP_DyEnvSys_C_World_Debug_Ash_Change, Value) == 0x000000, "Member 'BP_DyEnvSys_C_World_Debug_Ash_Change::Value' has a wrong offset!");

// Function BP_DyEnvSys.BP_DyEnvSys_C.UpdateVolumeSwap
// 0x0004 (0x0004 - 0x0000)
struct BP_DyEnvSys_C_UpdateVolumeSwap final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DyEnvSys_C_UpdateVolumeSwap) == 0x000001, "Wrong alignment on BP_DyEnvSys_C_UpdateVolumeSwap");
static_assert(sizeof(BP_DyEnvSys_C_UpdateVolumeSwap) == 0x000004, "Wrong size on BP_DyEnvSys_C_UpdateVolumeSwap");
static_assert(offsetof(BP_DyEnvSys_C_UpdateVolumeSwap, Temp_bool_Variable) == 0x000000, "Member 'BP_DyEnvSys_C_UpdateVolumeSwap::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_UpdateVolumeSwap, Temp_bool_Variable_1) == 0x000001, "Member 'BP_DyEnvSys_C_UpdateVolumeSwap::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_UpdateVolumeSwap, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000002, "Member 'BP_DyEnvSys_C_UpdateVolumeSwap::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_UpdateVolumeSwap, K2Node_Select_Default) == 0x000003, "Member 'BP_DyEnvSys_C_UpdateVolumeSwap::K2Node_Select_Default' has a wrong offset!");

// Function BP_DyEnvSys.BP_DyEnvSys_C.UpdateTimeStamp
// 0x0098 (0x0098 - 0x0000)
struct BP_DyEnvSys_C_UpdateTimeStamp final
{
public:
	struct FTimeStamp                             TimeStamp1;                                        // 0x0000(0x002C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_TimeStamp                           TimeStamp;                                         // 0x0030(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DyEnvSys_C_UpdateTimeStamp) == 0x000008, "Wrong alignment on BP_DyEnvSys_C_UpdateTimeStamp");
static_assert(sizeof(BP_DyEnvSys_C_UpdateTimeStamp) == 0x000098, "Wrong size on BP_DyEnvSys_C_UpdateTimeStamp");
static_assert(offsetof(BP_DyEnvSys_C_UpdateTimeStamp, TimeStamp1) == 0x000000, "Member 'BP_DyEnvSys_C_UpdateTimeStamp::TimeStamp1' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_UpdateTimeStamp, TimeStamp) == 0x000030, "Member 'BP_DyEnvSys_C_UpdateTimeStamp::TimeStamp' has a wrong offset!");

// Function BP_DyEnvSys.BP_DyEnvSys_C.UpdateStreetLight
// 0x0068 (0x0068 - 0x0000)
struct BP_DyEnvSys_C_UpdateStreetLight final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ADE_SpotLight_Master_C*>         CallFunc_GetAllActorsOfClass_OutActors;            // 0x0018(0x0010)(ReferenceParm)
	class ADE_SpotLight_Master_C*                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ADE_PointLight_Master_C*>        CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0040(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADE_PointLight_Master_C*                CallFunc_Array_Get_Item_1;                         // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DyEnvSys_C_UpdateStreetLight) == 0x000008, "Wrong alignment on BP_DyEnvSys_C_UpdateStreetLight");
static_assert(sizeof(BP_DyEnvSys_C_UpdateStreetLight) == 0x000068, "Wrong size on BP_DyEnvSys_C_UpdateStreetLight");
static_assert(offsetof(BP_DyEnvSys_C_UpdateStreetLight, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_DyEnvSys_C_UpdateStreetLight::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_UpdateStreetLight, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_DyEnvSys_C_UpdateStreetLight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_UpdateStreetLight, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_DyEnvSys_C_UpdateStreetLight::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_UpdateStreetLight, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'BP_DyEnvSys_C_UpdateStreetLight::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_UpdateStreetLight, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'BP_DyEnvSys_C_UpdateStreetLight::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_UpdateStreetLight, CallFunc_GetAllActorsOfClass_OutActors) == 0x000018, "Member 'BP_DyEnvSys_C_UpdateStreetLight::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_UpdateStreetLight, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_DyEnvSys_C_UpdateStreetLight::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_UpdateStreetLight, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_DyEnvSys_C_UpdateStreetLight::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_UpdateStreetLight, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_DyEnvSys_C_UpdateStreetLight::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_UpdateStreetLight, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'BP_DyEnvSys_C_UpdateStreetLight::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_UpdateStreetLight, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000040, "Member 'BP_DyEnvSys_C_UpdateStreetLight::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_UpdateStreetLight, CallFunc_Array_Length_ReturnValue_1) == 0x000050, "Member 'BP_DyEnvSys_C_UpdateStreetLight::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_UpdateStreetLight, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'BP_DyEnvSys_C_UpdateStreetLight::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_UpdateStreetLight, CallFunc_Less_IntInt_ReturnValue_1) == 0x000060, "Member 'BP_DyEnvSys_C_UpdateStreetLight::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_DyEnvSys.BP_DyEnvSys_C.Update Final Param
// 0x14C0 (0x14C0 - 0x0000)
struct BP_DyEnvSys_C_Update_Final_Param final
{
public:
	struct FEnvironmentLerpConfig                 CallFunc_GetEnvFinal_Environment_Setting;          // 0x0000(0x0120)(NoDestructor)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEditor_Mode_inEditor;                   // 0x014B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default;                             // 0x0150(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCharacterLerpConfig                   CallFunc_GetRoleFinal_Character_Setting;           // 0x0178(0x012C)(NoDestructor)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x02A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldUpdateExponentialHeightFog_ReturnValue; // 0x02A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A7[0x1];                                      // 0x02A7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldUpdateSunAndSkyLight_ReturnValue;   // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldUpdateEnvironment_ReturnValue;      // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BA[0x6];                                      // 0x02BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEnvironmentLerpConfig                 CallFunc_GetEnvFinal_Environment_Setting_1;        // 0x02C0(0x0120)(NoDestructor)
	class UDirectionalLightComponent*             K2Node_DynamicCast_AsDirectional_Light_Component;  // 0x03E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E9[0x3];                                      // 0x03E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScalarParameterValue_ReturnValue;      // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDirectionalLightComponent*             K2Node_DynamicCast_AsDirectional_Light_Component_1; // 0x03F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x03F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FA[0x6];                                      // 0x03FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTODLerpConfig                         CallFunc_GetTODFinal_TODSetting;                   // 0x0400(0x0840)()
	struct FTODLerpConfig                         CallFunc_GetTODFinal_TODSetting_1;                 // 0x0C40(0x0840)()
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x1480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x1488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_A_ImplicitCast;               // 0x1490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_InRange_FloatFloat_Value_ImplicitCast;    // 0x1498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast; // 0x14A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1; // 0x14A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2; // 0x14A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14AC[0x4];                                     // 0x14AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x14B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3; // 0x14B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DyEnvSys_C_Update_Final_Param) == 0x000008, "Wrong alignment on BP_DyEnvSys_C_Update_Final_Param");
static_assert(sizeof(BP_DyEnvSys_C_Update_Final_Param) == 0x0014C0, "Wrong size on BP_DyEnvSys_C_Update_Final_Param");
static_assert(offsetof(BP_DyEnvSys_C_Update_Final_Param, CallFunc_GetEnvFinal_Environment_Setting) == 0x000000, "Member 'BP_DyEnvSys_C_Update_Final_Param::CallFunc_GetEnvFinal_Environment_Setting' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Update_Final_Param, CallFunc_GetPlayerPawn_ReturnValue) == 0x000120, "Member 'BP_DyEnvSys_C_Update_Final_Param::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Update_Final_Param, CallFunc_IsValid_ReturnValue) == 0x000128, "Member 'BP_DyEnvSys_C_Update_Final_Param::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Update_Final_Param, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000130, "Member 'BP_DyEnvSys_C_Update_Final_Param::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Update_Final_Param, CallFunc_Not_PreBool_ReturnValue) == 0x000148, "Member 'BP_DyEnvSys_C_Update_Final_Param::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Update_Final_Param, CallFunc_BooleanOR_ReturnValue) == 0x000149, "Member 'BP_DyEnvSys_C_Update_Final_Param::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Update_Final_Param, Temp_bool_Variable) == 0x00014A, "Member 'BP_DyEnvSys_C_Update_Final_Param::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Update_Final_Param, CallFunc_IsEditor_Mode_inEditor) == 0x00014B, "Member 'BP_DyEnvSys_C_Update_Final_Param::CallFunc_IsEditor_Mode_inEditor' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Update_Final_Param, K2Node_Select_Default) == 0x000150, "Member 'BP_DyEnvSys_C_Update_Final_Param::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Update_Final_Param, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000168, "Member 'BP_DyEnvSys_C_Update_Final_Param::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Update_Final_Param, CallFunc_GetRoleFinal_Character_Setting) == 0x000178, "Member 'BP_DyEnvSys_C_Update_Final_Param::CallFunc_GetRoleFinal_Character_Setting' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Update_Final_Param, CallFunc_InRange_FloatFloat_ReturnValue) == 0x0002A4, "Member 'BP_DyEnvSys_C_Update_Final_Param::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Update_Final_Param, CallFunc_Not_PreBool_ReturnValue_1) == 0x0002A5, "Member 'BP_DyEnvSys_C_Update_Final_Param::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Update_Final_Param, CallFunc_ShouldUpdateExponentialHeightFog_ReturnValue) == 0x0002A6, "Member 'BP_DyEnvSys_C_Update_Final_Param::CallFunc_ShouldUpdateExponentialHeightFog_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Update_Final_Param, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x0002A8, "Member 'BP_DyEnvSys_C_Update_Final_Param::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Update_Final_Param, CallFunc_SelectFloat_ReturnValue) == 0x0002B0, "Member 'BP_DyEnvSys_C_Update_Final_Param::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Update_Final_Param, CallFunc_ShouldUpdateSunAndSkyLight_ReturnValue) == 0x0002B8, "Member 'BP_DyEnvSys_C_Update_Final_Param::CallFunc_ShouldUpdateSunAndSkyLight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Update_Final_Param, CallFunc_ShouldUpdateEnvironment_ReturnValue) == 0x0002B9, "Member 'BP_DyEnvSys_C_Update_Final_Param::CallFunc_ShouldUpdateEnvironment_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Update_Final_Param, CallFunc_GetEnvFinal_Environment_Setting_1) == 0x0002C0, "Member 'BP_DyEnvSys_C_Update_Final_Param::CallFunc_GetEnvFinal_Environment_Setting_1' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Update_Final_Param, K2Node_DynamicCast_AsDirectional_Light_Component) == 0x0003E0, "Member 'BP_DyEnvSys_C_Update_Final_Param::K2Node_DynamicCast_AsDirectional_Light_Component' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Update_Final_Param, K2Node_DynamicCast_bSuccess) == 0x0003E8, "Member 'BP_DyEnvSys_C_Update_Final_Param::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Update_Final_Param, CallFunc_GetScalarParameterValue_ReturnValue) == 0x0003EC, "Member 'BP_DyEnvSys_C_Update_Final_Param::CallFunc_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Update_Final_Param, K2Node_DynamicCast_AsDirectional_Light_Component_1) == 0x0003F0, "Member 'BP_DyEnvSys_C_Update_Final_Param::K2Node_DynamicCast_AsDirectional_Light_Component_1' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Update_Final_Param, K2Node_DynamicCast_bSuccess_1) == 0x0003F8, "Member 'BP_DyEnvSys_C_Update_Final_Param::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Update_Final_Param, CallFunc_IsValid_ReturnValue_1) == 0x0003F9, "Member 'BP_DyEnvSys_C_Update_Final_Param::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Update_Final_Param, CallFunc_GetTODFinal_TODSetting) == 0x000400, "Member 'BP_DyEnvSys_C_Update_Final_Param::CallFunc_GetTODFinal_TODSetting' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Update_Final_Param, CallFunc_GetTODFinal_TODSetting_1) == 0x000C40, "Member 'BP_DyEnvSys_C_Update_Final_Param::CallFunc_GetTODFinal_TODSetting_1' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Update_Final_Param, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x001480, "Member 'BP_DyEnvSys_C_Update_Final_Param::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Update_Final_Param, CallFunc_FClamp_ReturnValue) == 0x001488, "Member 'BP_DyEnvSys_C_Update_Final_Param::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Update_Final_Param, CallFunc_SelectFloat_A_ImplicitCast) == 0x001490, "Member 'BP_DyEnvSys_C_Update_Final_Param::CallFunc_SelectFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Update_Final_Param, CallFunc_InRange_FloatFloat_Value_ImplicitCast) == 0x001498, "Member 'BP_DyEnvSys_C_Update_Final_Param::CallFunc_InRange_FloatFloat_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Update_Final_Param, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast) == 0x0014A0, "Member 'BP_DyEnvSys_C_Update_Final_Param::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Update_Final_Param, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1) == 0x0014A4, "Member 'BP_DyEnvSys_C_Update_Final_Param::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Update_Final_Param, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2) == 0x0014A8, "Member 'BP_DyEnvSys_C_Update_Final_Param::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Update_Final_Param, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x0014B0, "Member 'BP_DyEnvSys_C_Update_Final_Param::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Update_Final_Param, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3) == 0x0014B8, "Member 'BP_DyEnvSys_C_Update_Final_Param::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3' has a wrong offset!");

// Function BP_DyEnvSys.BP_DyEnvSys_C.ToggleStreetLamps
// 0x0001 (0x0001 - 0x0000)
struct BP_DyEnvSys_C_ToggleStreetLamps final
{
public:
	bool                                          On;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DyEnvSys_C_ToggleStreetLamps) == 0x000001, "Wrong alignment on BP_DyEnvSys_C_ToggleStreetLamps");
static_assert(sizeof(BP_DyEnvSys_C_ToggleStreetLamps) == 0x000001, "Wrong size on BP_DyEnvSys_C_ToggleStreetLamps");
static_assert(offsetof(BP_DyEnvSys_C_ToggleStreetLamps, On) == 0x000000, "Member 'BP_DyEnvSys_C_ToggleStreetLamps::On' has a wrong offset!");

// Function BP_DyEnvSys.BP_DyEnvSys_C.TOD_UpdateSunRotationByAbility
// 0x0010 (0x0010 - 0x0000)
struct BP_DyEnvSys_C_TOD_UpdateSunRotationByAbility final
{
public:
	double                                        PitchValue;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        YawValue;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DyEnvSys_C_TOD_UpdateSunRotationByAbility) == 0x000008, "Wrong alignment on BP_DyEnvSys_C_TOD_UpdateSunRotationByAbility");
static_assert(sizeof(BP_DyEnvSys_C_TOD_UpdateSunRotationByAbility) == 0x000010, "Wrong size on BP_DyEnvSys_C_TOD_UpdateSunRotationByAbility");
static_assert(offsetof(BP_DyEnvSys_C_TOD_UpdateSunRotationByAbility, PitchValue) == 0x000000, "Member 'BP_DyEnvSys_C_TOD_UpdateSunRotationByAbility::PitchValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_TOD_UpdateSunRotationByAbility, YawValue) == 0x000008, "Member 'BP_DyEnvSys_C_TOD_UpdateSunRotationByAbility::YawValue' has a wrong offset!");

// Function BP_DyEnvSys.BP_DyEnvSys_C.Time Update LS
// 0x0048 (0x0048 - 0x0000)
struct BP_DyEnvSys_C_Time_Update_LS final
{
public:
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue;      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMovieSceneSequencePlaybackParams      K2Node_MakeStruct_MovieSceneSequencePlaybackParams; // 0x0010(0x0038)()
};
static_assert(alignof(BP_DyEnvSys_C_Time_Update_LS) == 0x000008, "Wrong alignment on BP_DyEnvSys_C_Time_Update_LS");
static_assert(sizeof(BP_DyEnvSys_C_Time_Update_LS) == 0x000048, "Wrong size on BP_DyEnvSys_C_Time_Update_LS");
static_assert(offsetof(BP_DyEnvSys_C_Time_Update_LS, CallFunc_GetSequencePlayer_ReturnValue) == 0x000000, "Member 'BP_DyEnvSys_C_Time_Update_LS::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Time_Update_LS, CallFunc_GetScalarParameterValue_ReturnValue) == 0x000008, "Member 'BP_DyEnvSys_C_Time_Update_LS::CallFunc_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Time_Update_LS, K2Node_MakeStruct_MovieSceneSequencePlaybackParams) == 0x000010, "Member 'BP_DyEnvSys_C_Time_Update_LS::K2Node_MakeStruct_MovieSceneSequencePlaybackParams' has a wrong offset!");

// Function BP_DyEnvSys.BP_DyEnvSys_C.Time Update From Host
// 0x0070 (0x0070 - 0x0000)
struct BP_DyEnvSys_C_Time_Update_From_Host final
{
public:
	double                                        ToHost;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue;      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Constant_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_B_ImplicitCast;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast;    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Constant_Current_ImplicitCast;  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NearlyEqual_FloatFloat_B_ImplicitCast;    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_B_ImplicitCast;         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DyEnvSys_C_Time_Update_From_Host) == 0x000008, "Wrong alignment on BP_DyEnvSys_C_Time_Update_From_Host");
static_assert(sizeof(BP_DyEnvSys_C_Time_Update_From_Host) == 0x000070, "Wrong size on BP_DyEnvSys_C_Time_Update_From_Host");
static_assert(offsetof(BP_DyEnvSys_C_Time_Update_From_Host, ToHost) == 0x000000, "Member 'BP_DyEnvSys_C_Time_Update_From_Host::ToHost' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Time_Update_From_Host, CallFunc_GetScalarParameterValue_ReturnValue) == 0x000008, "Member 'BP_DyEnvSys_C_Time_Update_From_Host::CallFunc_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Time_Update_From_Host, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_DyEnvSys_C_Time_Update_From_Host::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Time_Update_From_Host, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_DyEnvSys_C_Time_Update_From_Host::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Time_Update_From_Host, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000019, "Member 'BP_DyEnvSys_C_Time_Update_From_Host::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Time_Update_From_Host, CallFunc_SelectFloat_ReturnValue) == 0x000020, "Member 'BP_DyEnvSys_C_Time_Update_From_Host::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Time_Update_From_Host, CallFunc_FInterpTo_Constant_ReturnValue) == 0x000028, "Member 'BP_DyEnvSys_C_Time_Update_From_Host::CallFunc_FInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Time_Update_From_Host, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_DyEnvSys_C_Time_Update_From_Host::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Time_Update_From_Host, CallFunc_SelectFloat_B_ImplicitCast) == 0x000038, "Member 'BP_DyEnvSys_C_Time_Update_From_Host::CallFunc_SelectFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Time_Update_From_Host, CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast) == 0x000040, "Member 'BP_DyEnvSys_C_Time_Update_From_Host::CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Time_Update_From_Host, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000048, "Member 'BP_DyEnvSys_C_Time_Update_From_Host::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Time_Update_From_Host, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000050, "Member 'BP_DyEnvSys_C_Time_Update_From_Host::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Time_Update_From_Host, CallFunc_FInterpTo_Constant_Current_ImplicitCast) == 0x000058, "Member 'BP_DyEnvSys_C_Time_Update_From_Host::CallFunc_FInterpTo_Constant_Current_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Time_Update_From_Host, CallFunc_NearlyEqual_FloatFloat_B_ImplicitCast) == 0x000060, "Member 'BP_DyEnvSys_C_Time_Update_From_Host::CallFunc_NearlyEqual_FloatFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Time_Update_From_Host, CallFunc_Less_DoubleDouble_B_ImplicitCast) == 0x000068, "Member 'BP_DyEnvSys_C_Time_Update_From_Host::CallFunc_Less_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_DyEnvSys.BP_DyEnvSys_C.Time Update
// 0x08B0 (0x08B0 - 0x0000)
struct BP_DyEnvSys_C_Time_Update final
{
public:
	struct FTODLerpConfig                         CallFunc_GetTODFinal_TODSetting;                   // 0x0000(0x0840)()
	bool                                          Temp_bool_Variable;                                // 0x0840(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_841[0x3];                                      // 0x0841(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0844(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0848(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x084C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0850(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0858(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_859[0x7];                                      // 0x0859(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Time_Update_From_Host_ToHost;             // 0x0860(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue;      // 0x0868(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86C[0x4];                                      // 0x086C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0870(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0878(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0880(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Value_ImplicitCast;                // 0x0888(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0890(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast; // 0x0898(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89C[0x4];                                      // 0x089C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Option_0_ImplicitCast;               // 0x08A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1; // 0x08A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BeginUpdateTime_NowTime_ImplicitCast;     // 0x08AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DyEnvSys_C_Time_Update) == 0x000008, "Wrong alignment on BP_DyEnvSys_C_Time_Update");
static_assert(sizeof(BP_DyEnvSys_C_Time_Update) == 0x0008B0, "Wrong size on BP_DyEnvSys_C_Time_Update");
static_assert(offsetof(BP_DyEnvSys_C_Time_Update, CallFunc_GetTODFinal_TODSetting) == 0x000000, "Member 'BP_DyEnvSys_C_Time_Update::CallFunc_GetTODFinal_TODSetting' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Time_Update, Temp_bool_Variable) == 0x000840, "Member 'BP_DyEnvSys_C_Time_Update::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Time_Update, CallFunc_BreakRotator_Roll) == 0x000844, "Member 'BP_DyEnvSys_C_Time_Update::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Time_Update, CallFunc_BreakRotator_Pitch) == 0x000848, "Member 'BP_DyEnvSys_C_Time_Update::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Time_Update, CallFunc_BreakRotator_Yaw) == 0x00084C, "Member 'BP_DyEnvSys_C_Time_Update::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Time_Update, CallFunc_FClamp_ReturnValue) == 0x000850, "Member 'BP_DyEnvSys_C_Time_Update::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Time_Update, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000858, "Member 'BP_DyEnvSys_C_Time_Update::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Time_Update, CallFunc_Time_Update_From_Host_ToHost) == 0x000860, "Member 'BP_DyEnvSys_C_Time_Update::CallFunc_Time_Update_From_Host_ToHost' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Time_Update, CallFunc_GetScalarParameterValue_ReturnValue) == 0x000868, "Member 'BP_DyEnvSys_C_Time_Update::CallFunc_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Time_Update, K2Node_Select_Default) == 0x000870, "Member 'BP_DyEnvSys_C_Time_Update::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Time_Update, CallFunc_SelectFloat_ReturnValue) == 0x000878, "Member 'BP_DyEnvSys_C_Time_Update::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Time_Update, CallFunc_Lerp_ReturnValue) == 0x000880, "Member 'BP_DyEnvSys_C_Time_Update::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Time_Update, CallFunc_FClamp_Value_ImplicitCast) == 0x000888, "Member 'BP_DyEnvSys_C_Time_Update::CallFunc_FClamp_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Time_Update, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000890, "Member 'BP_DyEnvSys_C_Time_Update::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Time_Update, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast) == 0x000898, "Member 'BP_DyEnvSys_C_Time_Update::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Time_Update, K2Node_Select_Option_0_ImplicitCast) == 0x0008A0, "Member 'BP_DyEnvSys_C_Time_Update::K2Node_Select_Option_0_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Time_Update, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1) == 0x0008A8, "Member 'BP_DyEnvSys_C_Time_Update::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Time_Update, CallFunc_BeginUpdateTime_NowTime_ImplicitCast) == 0x0008AC, "Member 'BP_DyEnvSys_C_Time_Update::CallFunc_BeginUpdateTime_NowTime_ImplicitCast' has a wrong offset!");

// Function BP_DyEnvSys.BP_DyEnvSys_C.StylizedLut
// 0x0008 (0x0008 - 0x0000)
struct BP_DyEnvSys_C_StylizedLut final
{
public:
	double                                        LutIntensity;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DyEnvSys_C_StylizedLut) == 0x000008, "Wrong alignment on BP_DyEnvSys_C_StylizedLut");
static_assert(sizeof(BP_DyEnvSys_C_StylizedLut) == 0x000008, "Wrong size on BP_DyEnvSys_C_StylizedLut");
static_assert(offsetof(BP_DyEnvSys_C_StylizedLut, LutIntensity) == 0x000000, "Member 'BP_DyEnvSys_C_StylizedLut::LutIntensity' has a wrong offset!");

// Function BP_DyEnvSys.BP_DyEnvSys_C.SetUseServerTime
// 0x0001 (0x0001 - 0x0000)
struct BP_DyEnvSys_C_SetUseServerTime final
{
public:
	bool                                          CanUse;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DyEnvSys_C_SetUseServerTime) == 0x000001, "Wrong alignment on BP_DyEnvSys_C_SetUseServerTime");
static_assert(sizeof(BP_DyEnvSys_C_SetUseServerTime) == 0x000001, "Wrong size on BP_DyEnvSys_C_SetUseServerTime");
static_assert(offsetof(BP_DyEnvSys_C_SetUseServerTime, CanUse) == 0x000000, "Member 'BP_DyEnvSys_C_SetUseServerTime::CanUse' has a wrong offset!");

// Function BP_DyEnvSys.BP_DyEnvSys_C.SetRegionLamps
// 0x0010 (0x0010 - 0x0000)
struct BP_DyEnvSys_C_SetRegionLamps final
{
public:
	double                                        Percent;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RegionId;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DyEnvSys_C_SetRegionLamps) == 0x000008, "Wrong alignment on BP_DyEnvSys_C_SetRegionLamps");
static_assert(sizeof(BP_DyEnvSys_C_SetRegionLamps) == 0x000010, "Wrong size on BP_DyEnvSys_C_SetRegionLamps");
static_assert(offsetof(BP_DyEnvSys_C_SetRegionLamps, Percent) == 0x000000, "Member 'BP_DyEnvSys_C_SetRegionLamps::Percent' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_SetRegionLamps, RegionId) == 0x000008, "Member 'BP_DyEnvSys_C_SetRegionLamps::RegionId' has a wrong offset!");

// Function BP_DyEnvSys.BP_DyEnvSys_C.SetMoonCurve
// 0x0090 (0x0090 - 0x0000)
struct BP_DyEnvSys_C_SetMoonCurve final
{
public:
	struct FFloatCurve                            Curve;                                             // 0x0000(0x0090)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_DyEnvSys_C_SetMoonCurve) == 0x000008, "Wrong alignment on BP_DyEnvSys_C_SetMoonCurve");
static_assert(sizeof(BP_DyEnvSys_C_SetMoonCurve) == 0x000090, "Wrong size on BP_DyEnvSys_C_SetMoonCurve");
static_assert(offsetof(BP_DyEnvSys_C_SetMoonCurve, Curve) == 0x000000, "Member 'BP_DyEnvSys_C_SetMoonCurve::Curve' has a wrong offset!");

// Function BP_DyEnvSys.BP_DyEnvSys_C.SetDenseFogColor
// 0x0010 (0x0010 - 0x0000)
struct BP_DyEnvSys_C_SetDenseFogColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DyEnvSys_C_SetDenseFogColor) == 0x000004, "Wrong alignment on BP_DyEnvSys_C_SetDenseFogColor");
static_assert(sizeof(BP_DyEnvSys_C_SetDenseFogColor) == 0x000010, "Wrong size on BP_DyEnvSys_C_SetDenseFogColor");
static_assert(offsetof(BP_DyEnvSys_C_SetDenseFogColor, Color) == 0x000000, "Member 'BP_DyEnvSys_C_SetDenseFogColor::Color' has a wrong offset!");

// Function BP_DyEnvSys.BP_DyEnvSys_C.SetDenseFog
// 0x0010 (0x0010 - 0x0000)
struct BP_DyEnvSys_C_SetDenseFog final
{
public:
	double                                        Intensity;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TransitionTime_0;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DyEnvSys_C_SetDenseFog) == 0x000008, "Wrong alignment on BP_DyEnvSys_C_SetDenseFog");
static_assert(sizeof(BP_DyEnvSys_C_SetDenseFog) == 0x000010, "Wrong size on BP_DyEnvSys_C_SetDenseFog");
static_assert(offsetof(BP_DyEnvSys_C_SetDenseFog, Intensity) == 0x000000, "Member 'BP_DyEnvSys_C_SetDenseFog::Intensity' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_SetDenseFog, TransitionTime_0) == 0x000008, "Member 'BP_DyEnvSys_C_SetDenseFog::TransitionTime_0' has a wrong offset!");

// Function BP_DyEnvSys.BP_DyEnvSys_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_DyEnvSys_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DyEnvSys_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_DyEnvSys_C_ReceiveTick");
static_assert(sizeof(BP_DyEnvSys_C_ReceiveTick) == 0x000004, "Wrong size on BP_DyEnvSys_C_ReceiveTick");
static_assert(offsetof(BP_DyEnvSys_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_DyEnvSys_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_DyEnvSys.BP_DyEnvSys_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_DyEnvSys_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DyEnvSys_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_DyEnvSys_C_ReceiveEndPlay");
static_assert(sizeof(BP_DyEnvSys_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_DyEnvSys_C_ReceiveEndPlay");
static_assert(offsetof(BP_DyEnvSys_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_DyEnvSys_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_DyEnvSys.BP_DyEnvSys_C.PrecisionShadow
// 0x0001 (0x0001 - 0x0000)
struct BP_DyEnvSys_C_PrecisionShadow final
{
public:
	bool                                          isEnter;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DyEnvSys_C_PrecisionShadow) == 0x000001, "Wrong alignment on BP_DyEnvSys_C_PrecisionShadow");
static_assert(sizeof(BP_DyEnvSys_C_PrecisionShadow) == 0x000001, "Wrong size on BP_DyEnvSys_C_PrecisionShadow");
static_assert(offsetof(BP_DyEnvSys_C_PrecisionShadow, isEnter) == 0x000000, "Member 'BP_DyEnvSys_C_PrecisionShadow::isEnter' has a wrong offset!");

// Function BP_DyEnvSys.BP_DyEnvSys_C.OnActorBeginOverlapWithVolume
// 0x0008 (0x0008 - 0x0000)
struct BP_DyEnvSys_C_OnActorBeginOverlapWithVolume final
{
public:
	class ADynamicWeatherVolume*                  SrcVolume;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DyEnvSys_C_OnActorBeginOverlapWithVolume) == 0x000008, "Wrong alignment on BP_DyEnvSys_C_OnActorBeginOverlapWithVolume");
static_assert(sizeof(BP_DyEnvSys_C_OnActorBeginOverlapWithVolume) == 0x000008, "Wrong size on BP_DyEnvSys_C_OnActorBeginOverlapWithVolume");
static_assert(offsetof(BP_DyEnvSys_C_OnActorBeginOverlapWithVolume, SrcVolume) == 0x000000, "Member 'BP_DyEnvSys_C_OnActorBeginOverlapWithVolume::SrcVolume' has a wrong offset!");

// Function BP_DyEnvSys.BP_DyEnvSys_C.Manual Operation TOD
// 0x0008 (0x0008 - 0x0000)
struct BP_DyEnvSys_C_Manual_Operation_TOD final
{
public:
	double                                        Time;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DyEnvSys_C_Manual_Operation_TOD) == 0x000008, "Wrong alignment on BP_DyEnvSys_C_Manual_Operation_TOD");
static_assert(sizeof(BP_DyEnvSys_C_Manual_Operation_TOD) == 0x000008, "Wrong size on BP_DyEnvSys_C_Manual_Operation_TOD");
static_assert(offsetof(BP_DyEnvSys_C_Manual_Operation_TOD, Time) == 0x000000, "Member 'BP_DyEnvSys_C_Manual_Operation_TOD::Time' has a wrong offset!");

// Function BP_DyEnvSys.BP_DyEnvSys_C.Low Platform SkyAtmosphere
// 0x0040 (0x0040 - 0x0000)
struct BP_DyEnvSys_C_Low_Platform_SkyAtmosphere final
{
public:
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_3;               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetConsoleVariableIntValue_ReturnValue;   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_32ByteByte_ReturnValue;        // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetConsoleVariableFloatValue_ReturnValue; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_3;                     // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetConsoleVariableIntValue_ReturnValue_1; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetConsoleVariableFromFloat_InValue_ImplicitCast; // 0x0028(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_1;    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DyEnvSys_C_Low_Platform_SkyAtmosphere) == 0x000008, "Wrong alignment on BP_DyEnvSys_C_Low_Platform_SkyAtmosphere");
static_assert(sizeof(BP_DyEnvSys_C_Low_Platform_SkyAtmosphere) == 0x000040, "Wrong size on BP_DyEnvSys_C_Low_Platform_SkyAtmosphere");
static_assert(offsetof(BP_DyEnvSys_C_Low_Platform_SkyAtmosphere, Temp_bool_IsClosed_Variable) == 0x000000, "Member 'BP_DyEnvSys_C_Low_Platform_SkyAtmosphere::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Low_Platform_SkyAtmosphere, Temp_bool_Has_Been_Initd_Variable) == 0x000001, "Member 'BP_DyEnvSys_C_Low_Platform_SkyAtmosphere::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Low_Platform_SkyAtmosphere, Temp_bool_Has_Been_Initd_Variable_1) == 0x000002, "Member 'BP_DyEnvSys_C_Low_Platform_SkyAtmosphere::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Low_Platform_SkyAtmosphere, Temp_bool_IsClosed_Variable_1) == 0x000003, "Member 'BP_DyEnvSys_C_Low_Platform_SkyAtmosphere::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Low_Platform_SkyAtmosphere, Temp_bool_Has_Been_Initd_Variable_2) == 0x000004, "Member 'BP_DyEnvSys_C_Low_Platform_SkyAtmosphere::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Low_Platform_SkyAtmosphere, Temp_bool_IsClosed_Variable_2) == 0x000005, "Member 'BP_DyEnvSys_C_Low_Platform_SkyAtmosphere::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Low_Platform_SkyAtmosphere, Temp_bool_Has_Been_Initd_Variable_3) == 0x000006, "Member 'BP_DyEnvSys_C_Low_Platform_SkyAtmosphere::Temp_bool_Has_Been_Initd_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Low_Platform_SkyAtmosphere, CallFunc_GetConsoleVariableIntValue_ReturnValue) == 0x000008, "Member 'BP_DyEnvSys_C_Low_Platform_SkyAtmosphere::CallFunc_GetConsoleVariableIntValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Low_Platform_SkyAtmosphere, CallFunc_EqualEqual_32ByteByte_ReturnValue) == 0x00000C, "Member 'BP_DyEnvSys_C_Low_Platform_SkyAtmosphere::CallFunc_EqualEqual_32ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Low_Platform_SkyAtmosphere, CallFunc_GetConsoleVariableFloatValue_ReturnValue) == 0x000010, "Member 'BP_DyEnvSys_C_Low_Platform_SkyAtmosphere::CallFunc_GetConsoleVariableFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Low_Platform_SkyAtmosphere, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000014, "Member 'BP_DyEnvSys_C_Low_Platform_SkyAtmosphere::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Low_Platform_SkyAtmosphere, Temp_bool_IsClosed_Variable_3) == 0x000015, "Member 'BP_DyEnvSys_C_Low_Platform_SkyAtmosphere::Temp_bool_IsClosed_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Low_Platform_SkyAtmosphere, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000016, "Member 'BP_DyEnvSys_C_Low_Platform_SkyAtmosphere::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Low_Platform_SkyAtmosphere, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000017, "Member 'BP_DyEnvSys_C_Low_Platform_SkyAtmosphere::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Low_Platform_SkyAtmosphere, CallFunc_GetConsoleVariableIntValue_ReturnValue_1) == 0x000018, "Member 'BP_DyEnvSys_C_Low_Platform_SkyAtmosphere::CallFunc_GetConsoleVariableIntValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Low_Platform_SkyAtmosphere, CallFunc_BooleanOR_ReturnValue) == 0x00001C, "Member 'BP_DyEnvSys_C_Low_Platform_SkyAtmosphere::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Low_Platform_SkyAtmosphere, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00001D, "Member 'BP_DyEnvSys_C_Low_Platform_SkyAtmosphere::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Low_Platform_SkyAtmosphere, CallFunc_BooleanOR_ReturnValue_1) == 0x00001E, "Member 'BP_DyEnvSys_C_Low_Platform_SkyAtmosphere::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Low_Platform_SkyAtmosphere, CallFunc_BooleanOR_ReturnValue_2) == 0x00001F, "Member 'BP_DyEnvSys_C_Low_Platform_SkyAtmosphere::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Low_Platform_SkyAtmosphere, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast) == 0x000020, "Member 'BP_DyEnvSys_C_Low_Platform_SkyAtmosphere::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Low_Platform_SkyAtmosphere, CallFunc_SetConsoleVariableFromFloat_InValue_ImplicitCast) == 0x000028, "Member 'BP_DyEnvSys_C_Low_Platform_SkyAtmosphere::CallFunc_SetConsoleVariableFromFloat_InValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Low_Platform_SkyAtmosphere, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000030, "Member 'BP_DyEnvSys_C_Low_Platform_SkyAtmosphere::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Low_Platform_SkyAtmosphere, CallFunc_Greater_DoubleDouble_A_ImplicitCast_1) == 0x000038, "Member 'BP_DyEnvSys_C_Low_Platform_SkyAtmosphere::CallFunc_Greater_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

// Function BP_DyEnvSys.BP_DyEnvSys_C.LoadCurrentLightInfo
// 0x00D8 (0x00D8 - 0x0000)
struct BP_DyEnvSys_C_LoadCurrentLightInfo final
{
public:
	struct FS_UrbanLight                          CallFunc_GetDataTableRowByColumnKey_OutRow;        // 0x0000(0x0058)(ConstParm, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowByColumnKey_ReturnValue;   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_UrbanLight                          CallFunc_GetDataTableRowByColumnKey_OutRow_1;      // 0x0060(0x0058)(ConstParm, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowByColumnKey_ReturnValue_1; // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DyEnvSys_C_LoadCurrentLightInfo) == 0x000008, "Wrong alignment on BP_DyEnvSys_C_LoadCurrentLightInfo");
static_assert(sizeof(BP_DyEnvSys_C_LoadCurrentLightInfo) == 0x0000D8, "Wrong size on BP_DyEnvSys_C_LoadCurrentLightInfo");
static_assert(offsetof(BP_DyEnvSys_C_LoadCurrentLightInfo, CallFunc_GetDataTableRowByColumnKey_OutRow) == 0x000000, "Member 'BP_DyEnvSys_C_LoadCurrentLightInfo::CallFunc_GetDataTableRowByColumnKey_OutRow' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_LoadCurrentLightInfo, CallFunc_GetDataTableRowByColumnKey_ReturnValue) == 0x000058, "Member 'BP_DyEnvSys_C_LoadCurrentLightInfo::CallFunc_GetDataTableRowByColumnKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_LoadCurrentLightInfo, CallFunc_GetDataTableRowByColumnKey_OutRow_1) == 0x000060, "Member 'BP_DyEnvSys_C_LoadCurrentLightInfo::CallFunc_GetDataTableRowByColumnKey_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_LoadCurrentLightInfo, CallFunc_GetDataTableRowByColumnKey_ReturnValue_1) == 0x0000B8, "Member 'BP_DyEnvSys_C_LoadCurrentLightInfo::CallFunc_GetDataTableRowByColumnKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_LoadCurrentLightInfo, CallFunc_GetCurrentLevelName_ReturnValue) == 0x0000C0, "Member 'BP_DyEnvSys_C_LoadCurrentLightInfo::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_LoadCurrentLightInfo, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0000D0, "Member 'BP_DyEnvSys_C_LoadCurrentLightInfo::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function BP_DyEnvSys.BP_DyEnvSys_C.Initi Tod Sys
// 0x0018 (0x0018 - 0x0000)
struct BP_DyEnvSys_C_Initi_Tod_Sys final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DyEnvWeathers_C*                    K2Node_DynamicCast_AsBP_Dy_Env_Weathers;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DyEnvSys_C_Initi_Tod_Sys) == 0x000008, "Wrong alignment on BP_DyEnvSys_C_Initi_Tod_Sys");
static_assert(sizeof(BP_DyEnvSys_C_Initi_Tod_Sys) == 0x000018, "Wrong size on BP_DyEnvSys_C_Initi_Tod_Sys");
static_assert(offsetof(BP_DyEnvSys_C_Initi_Tod_Sys, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_DyEnvSys_C_Initi_Tod_Sys::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Initi_Tod_Sys, K2Node_DynamicCast_AsBP_Dy_Env_Weathers) == 0x000008, "Member 'BP_DyEnvSys_C_Initi_Tod_Sys::K2Node_DynamicCast_AsBP_Dy_Env_Weathers' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Initi_Tod_Sys, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_DyEnvSys_C_Initi_Tod_Sys::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_DyEnvSys.BP_DyEnvSys_C.GetWeatherFinal
// 0x1118 (0x1118 - 0x0000)
struct BP_DyEnvSys_C_GetWeatherFinal final
{
public:
	struct FWeatherBaseLerpConfig                 Weather_Setting;                                   // 0x0000(0x0310)(Parm, OutParm)
	struct FFinalWeatherSettings                  CallFunc_GetFinalWeatherSettings_ReturnValue;      // 0x0310(0x0E08)(ConstParm)
};
static_assert(alignof(BP_DyEnvSys_C_GetWeatherFinal) == 0x000008, "Wrong alignment on BP_DyEnvSys_C_GetWeatherFinal");
static_assert(sizeof(BP_DyEnvSys_C_GetWeatherFinal) == 0x001118, "Wrong size on BP_DyEnvSys_C_GetWeatherFinal");
static_assert(offsetof(BP_DyEnvSys_C_GetWeatherFinal, Weather_Setting) == 0x000000, "Member 'BP_DyEnvSys_C_GetWeatherFinal::Weather_Setting' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_GetWeatherFinal, CallFunc_GetFinalWeatherSettings_ReturnValue) == 0x000310, "Member 'BP_DyEnvSys_C_GetWeatherFinal::CallFunc_GetFinalWeatherSettings_ReturnValue' has a wrong offset!");

// Function BP_DyEnvSys.BP_DyEnvSys_C.GetTODFinal
// 0x1648 (0x1648 - 0x0000)
struct BP_DyEnvSys_C_GetTODFinal final
{
public:
	struct FTODLerpConfig                         TODSetting;                                        // 0x0000(0x0840)(Parm, OutParm)
	struct FFinalWeatherSettings                  CallFunc_GetFinalWeatherSettings_ReturnValue;      // 0x0840(0x0E08)(ConstParm)
};
static_assert(alignof(BP_DyEnvSys_C_GetTODFinal) == 0x000008, "Wrong alignment on BP_DyEnvSys_C_GetTODFinal");
static_assert(sizeof(BP_DyEnvSys_C_GetTODFinal) == 0x001648, "Wrong size on BP_DyEnvSys_C_GetTODFinal");
static_assert(offsetof(BP_DyEnvSys_C_GetTODFinal, TODSetting) == 0x000000, "Member 'BP_DyEnvSys_C_GetTODFinal::TODSetting' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_GetTODFinal, CallFunc_GetFinalWeatherSettings_ReturnValue) == 0x000840, "Member 'BP_DyEnvSys_C_GetTODFinal::CallFunc_GetFinalWeatherSettings_ReturnValue' has a wrong offset!");

// Function BP_DyEnvSys.BP_DyEnvSys_C.GetRoleFinal
// 0x0F38 (0x0F38 - 0x0000)
struct BP_DyEnvSys_C_GetRoleFinal final
{
public:
	struct FCharacterLerpConfig                   Character_Setting;                                 // 0x0000(0x012C)(Parm, OutParm, NoDestructor)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFinalWeatherSettings                  CallFunc_GetFinalWeatherSettings_ReturnValue;      // 0x0130(0x0E08)(ConstParm)
};
static_assert(alignof(BP_DyEnvSys_C_GetRoleFinal) == 0x000008, "Wrong alignment on BP_DyEnvSys_C_GetRoleFinal");
static_assert(sizeof(BP_DyEnvSys_C_GetRoleFinal) == 0x000F38, "Wrong size on BP_DyEnvSys_C_GetRoleFinal");
static_assert(offsetof(BP_DyEnvSys_C_GetRoleFinal, Character_Setting) == 0x000000, "Member 'BP_DyEnvSys_C_GetRoleFinal::Character_Setting' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_GetRoleFinal, CallFunc_GetFinalWeatherSettings_ReturnValue) == 0x000130, "Member 'BP_DyEnvSys_C_GetRoleFinal::CallFunc_GetFinalWeatherSettings_ReturnValue' has a wrong offset!");

// Function BP_DyEnvSys.BP_DyEnvSys_C.GetEnvFinal
// 0x0F28 (0x0F28 - 0x0000)
struct BP_DyEnvSys_C_GetEnvFinal final
{
public:
	struct FEnvironmentLerpConfig                 Environment_Setting;                               // 0x0000(0x0120)(Parm, OutParm, NoDestructor)
	struct FFinalWeatherSettings                  CallFunc_GetFinalWeatherSettings_ReturnValue;      // 0x0120(0x0E08)(ConstParm)
};
static_assert(alignof(BP_DyEnvSys_C_GetEnvFinal) == 0x000008, "Wrong alignment on BP_DyEnvSys_C_GetEnvFinal");
static_assert(sizeof(BP_DyEnvSys_C_GetEnvFinal) == 0x000F28, "Wrong size on BP_DyEnvSys_C_GetEnvFinal");
static_assert(offsetof(BP_DyEnvSys_C_GetEnvFinal, Environment_Setting) == 0x000000, "Member 'BP_DyEnvSys_C_GetEnvFinal::Environment_Setting' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_GetEnvFinal, CallFunc_GetFinalWeatherSettings_ReturnValue) == 0x000120, "Member 'BP_DyEnvSys_C_GetEnvFinal::CallFunc_GetFinalWeatherSettings_ReturnValue' has a wrong offset!");

// Function BP_DyEnvSys.BP_DyEnvSys_C.ExecuteUbergraph_BP_DyEnvSys
// 0x02C0 (0x02C0 - 0x0000)
struct BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEditor_Mode_inEditor;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimeStamp                             K2Node_Event_TimeStamp1;                           // 0x0008(0x002C)(NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_TimeStamp                           K2Node_Event_TimeStamp;                            // 0x0038(0x0068)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_CanUse;                         // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_percent;                              // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_regionId;                             // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_on;                                   // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_RegionName;                           // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_UnloadWeatherName;                    // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_LoadWeatherName;                      // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ADynamicWeatherVolume*                  K2Node_Event_SrcVolume;                            // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Intensity;                      // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_TransitionTime;                 // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Time_1;                               // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Time;                                 // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_CustomEvent_color;                          // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_PitchValue;                     // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_YawValue;                       // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                 K2Node_Event_WeatherPreset;                        // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_OnlySyncContent;                      // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_OnlyWriteParam;                       // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_isEnter;                        // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x016B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDirectionalLightComponent*             K2Node_DynamicCast_AsDirectional_Light_Component;  // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDirectionalLightComponent*             K2Node_DynamicCast_AsDirectional_Light_Component_1; // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue;      // 0x018C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Event_LocalLightColor;                      // 0x01B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDirectionalLightComponent*             K2Node_DynamicCast_AsDirectional_Light_Component_2; // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x3];                                      // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x01D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue;      // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFloatCurve                            K2Node_CustomEvent_curve;                          // 0x01E0(0x0090)()
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DyEnvSky_C*                         K2Node_DynamicCast_AsDES_Sky;                      // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DyEnvSky_C*                         K2Node_DynamicCast_AsDES_Sky_1;                    // 0x0288(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_292[0x6];                                      // 0x0292(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_LutIntensity;                   // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEditor_Mode_inEditor_1;                 // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A3[0x5];                                      // 0x02A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UDirectionalLightComponent*             K2Node_DynamicCast_AsDirectional_Light_Component_3; // 0x02A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B2[0x2];                                      // 0x02B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_SetFieldsInStruct_ColorGradingIntensity_ImplicitCast; // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys) == 0x000008, "Wrong alignment on BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys");
static_assert(sizeof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys) == 0x0002C0, "Wrong size on BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, EntryPoint) == 0x000000, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, CallFunc_IsEditor_Mode_inEditor) == 0x000004, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::CallFunc_IsEditor_Mode_inEditor' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, K2Node_Event_TimeStamp1) == 0x000008, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::K2Node_Event_TimeStamp1' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, K2Node_Event_TimeStamp) == 0x000038, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::K2Node_Event_TimeStamp' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x0000A0, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, K2Node_CustomEvent_CanUse) == 0x0000B0, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::K2Node_CustomEvent_CanUse' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, K2Node_Event_percent) == 0x0000B8, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::K2Node_Event_percent' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, K2Node_Event_regionId) == 0x0000C0, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::K2Node_Event_regionId' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, K2Node_Event_on) == 0x0000C4, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::K2Node_Event_on' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, K2Node_Event_RegionName) == 0x0000C8, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::K2Node_Event_RegionName' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, K2Node_Event_UnloadWeatherName) == 0x0000D8, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::K2Node_Event_UnloadWeatherName' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, K2Node_Event_LoadWeatherName) == 0x0000E8, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::K2Node_Event_LoadWeatherName' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, K2Node_Event_SrcVolume) == 0x0000F8, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::K2Node_Event_SrcVolume' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, K2Node_Event_DeltaSeconds) == 0x000100, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, K2Node_CustomEvent_Intensity) == 0x000108, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::K2Node_CustomEvent_Intensity' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, K2Node_CustomEvent_TransitionTime) == 0x000110, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::K2Node_CustomEvent_TransitionTime' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, K2Node_Event_Time_1) == 0x000118, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::K2Node_Event_Time_1' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, K2Node_Event_Time) == 0x000120, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::K2Node_Event_Time' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, K2Node_CustomEvent_color) == 0x000128, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::K2Node_CustomEvent_color' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, K2Node_CustomEvent_PitchValue) == 0x000138, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::K2Node_CustomEvent_PitchValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, K2Node_CustomEvent_YawValue) == 0x000140, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::K2Node_CustomEvent_YawValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, CallFunc_MakeRotator_ReturnValue) == 0x000148, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, K2Node_Event_WeatherPreset) == 0x000160, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::K2Node_Event_WeatherPreset' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, K2Node_Event_OnlySyncContent) == 0x000168, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::K2Node_Event_OnlySyncContent' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, K2Node_Event_OnlyWriteParam) == 0x000169, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::K2Node_Event_OnlyWriteParam' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, K2Node_CustomEvent_isEnter) == 0x00016A, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::K2Node_CustomEvent_isEnter' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, CallFunc_Not_PreBool_ReturnValue) == 0x00016B, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, K2Node_DynamicCast_AsDirectional_Light_Component) == 0x000170, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::K2Node_DynamicCast_AsDirectional_Light_Component' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, K2Node_DynamicCast_bSuccess) == 0x000178, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, K2Node_DynamicCast_AsDirectional_Light_Component_1) == 0x000180, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::K2Node_DynamicCast_AsDirectional_Light_Component_1' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, K2Node_DynamicCast_bSuccess_1) == 0x000188, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, CallFunc_GetVectorParameterValue_ReturnValue) == 0x00018C, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::CallFunc_GetVectorParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x0001A0, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, K2Node_Event_LocalLightColor) == 0x0001B8, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::K2Node_Event_LocalLightColor' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, K2Node_DynamicCast_AsDirectional_Light_Component_2) == 0x0001C8, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::K2Node_DynamicCast_AsDirectional_Light_Component_2' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, K2Node_DynamicCast_bSuccess_2) == 0x0001D0, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, CallFunc_MakeLiteralName_ReturnValue) == 0x0001D4, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, CallFunc_GetScalarParameterValue_ReturnValue) == 0x0001DC, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::CallFunc_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, K2Node_CustomEvent_curve) == 0x0001E0, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::K2Node_CustomEvent_curve' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, CallFunc_GetFloatValue_ReturnValue) == 0x000270, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, K2Node_DynamicCast_AsDES_Sky) == 0x000278, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::K2Node_DynamicCast_AsDES_Sky' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, K2Node_DynamicCast_bSuccess_3) == 0x000280, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, K2Node_DynamicCast_AsDES_Sky_1) == 0x000288, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::K2Node_DynamicCast_AsDES_Sky_1' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, K2Node_DynamicCast_bSuccess_4) == 0x000290, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, CallFunc_Not_PreBool_ReturnValue_1) == 0x000291, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, K2Node_CustomEvent_LutIntensity) == 0x000298, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::K2Node_CustomEvent_LutIntensity' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0002A0, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, CallFunc_IsEditor_Mode_inEditor_1) == 0x0002A1, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::CallFunc_IsEditor_Mode_inEditor_1' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, CallFunc_IsValid_ReturnValue) == 0x0002A2, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, K2Node_DynamicCast_AsDirectional_Light_Component_3) == 0x0002A8, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::K2Node_DynamicCast_AsDirectional_Light_Component_3' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, K2Node_DynamicCast_bSuccess_5) == 0x0002B0, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, K2Node_Event_EndPlayReason) == 0x0002B1, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x0002B4, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0002B8, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys, K2Node_SetFieldsInStruct_ColorGradingIntensity_ImplicitCast) == 0x0002BC, "Member 'BP_DyEnvSys_C_ExecuteUbergraph_BP_DyEnvSys::K2Node_SetFieldsInStruct_ColorGradingIntensity_ImplicitCast' has a wrong offset!");

// Function BP_DyEnvSys.BP_DyEnvSys_C.Calculat Dy Env Interp
// 0x0048 (0x0048 - 0x0000)
struct BP_DyEnvSys_C_Calculat_Dy_Env_Interp final
{
public:
	double                                        Duration;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Immediate;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Pause;                                             // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeLiteralDouble_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DyEnvSys_C_Calculat_Dy_Env_Interp) == 0x000008, "Wrong alignment on BP_DyEnvSys_C_Calculat_Dy_Env_Interp");
static_assert(sizeof(BP_DyEnvSys_C_Calculat_Dy_Env_Interp) == 0x000048, "Wrong size on BP_DyEnvSys_C_Calculat_Dy_Env_Interp");
static_assert(offsetof(BP_DyEnvSys_C_Calculat_Dy_Env_Interp, Duration) == 0x000000, "Member 'BP_DyEnvSys_C_Calculat_Dy_Env_Interp::Duration' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Calculat_Dy_Env_Interp, Immediate) == 0x000008, "Member 'BP_DyEnvSys_C_Calculat_Dy_Env_Interp::Immediate' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Calculat_Dy_Env_Interp, Pause) == 0x000009, "Member 'BP_DyEnvSys_C_Calculat_Dy_Env_Interp::Pause' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Calculat_Dy_Env_Interp, CallFunc_Not_PreBool_ReturnValue) == 0x00000A, "Member 'BP_DyEnvSys_C_Calculat_Dy_Env_Interp::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Calculat_Dy_Env_Interp, CallFunc_BooleanAND_ReturnValue) == 0x00000B, "Member 'BP_DyEnvSys_C_Calculat_Dy_Env_Interp::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Calculat_Dy_Env_Interp, CallFunc_Less_DoubleDouble_ReturnValue) == 0x00000C, "Member 'BP_DyEnvSys_C_Calculat_Dy_Env_Interp::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Calculat_Dy_Env_Interp, CallFunc_MakeLiteralDouble_ReturnValue) == 0x000010, "Member 'BP_DyEnvSys_C_Calculat_Dy_Env_Interp::CallFunc_MakeLiteralDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Calculat_Dy_Env_Interp, CallFunc_FMax_ReturnValue) == 0x000018, "Member 'BP_DyEnvSys_C_Calculat_Dy_Env_Interp::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Calculat_Dy_Env_Interp, CallFunc_SelectFloat_ReturnValue) == 0x000020, "Member 'BP_DyEnvSys_C_Calculat_Dy_Env_Interp::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Calculat_Dy_Env_Interp, CallFunc_SelectFloat_ReturnValue_1) == 0x000028, "Member 'BP_DyEnvSys_C_Calculat_Dy_Env_Interp::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Calculat_Dy_Env_Interp, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_DyEnvSys_C_Calculat_Dy_Env_Interp::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Calculat_Dy_Env_Interp, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000038, "Member 'BP_DyEnvSys_C_Calculat_Dy_Env_Interp::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Calculat_Dy_Env_Interp, CallFunc_FMin_ReturnValue) == 0x000040, "Member 'BP_DyEnvSys_C_Calculat_Dy_Env_Interp::CallFunc_FMin_ReturnValue' has a wrong offset!");

// Function BP_DyEnvSys.BP_DyEnvSys_C.BPI_WeatherData
// 0x0008 (0x0008 - 0x0000)
struct BP_DyEnvSys_C_BPI_WeatherData final
{
public:
	class UClass*                                 WeatherPreset;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DyEnvSys_C_BPI_WeatherData) == 0x000008, "Wrong alignment on BP_DyEnvSys_C_BPI_WeatherData");
static_assert(sizeof(BP_DyEnvSys_C_BPI_WeatherData) == 0x000008, "Wrong size on BP_DyEnvSys_C_BPI_WeatherData");
static_assert(offsetof(BP_DyEnvSys_C_BPI_WeatherData, WeatherPreset) == 0x000000, "Member 'BP_DyEnvSys_C_BPI_WeatherData::WeatherPreset' has a wrong offset!");

// Function BP_DyEnvSys.BP_DyEnvSys_C.BPI_WeatherChanged
// 0x0030 (0x0030 - 0x0000)
struct BP_DyEnvSys_C_BPI_WeatherChanged final
{
public:
	class FString                                 RegionName;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 UnloadWeatherName;                                 // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 LoadWeatherName;                                   // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DyEnvSys_C_BPI_WeatherChanged) == 0x000008, "Wrong alignment on BP_DyEnvSys_C_BPI_WeatherChanged");
static_assert(sizeof(BP_DyEnvSys_C_BPI_WeatherChanged) == 0x000030, "Wrong size on BP_DyEnvSys_C_BPI_WeatherChanged");
static_assert(offsetof(BP_DyEnvSys_C_BPI_WeatherChanged, RegionName) == 0x000000, "Member 'BP_DyEnvSys_C_BPI_WeatherChanged::RegionName' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_BPI_WeatherChanged, UnloadWeatherName) == 0x000010, "Member 'BP_DyEnvSys_C_BPI_WeatherChanged::UnloadWeatherName' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_BPI_WeatherChanged, LoadWeatherName) == 0x000020, "Member 'BP_DyEnvSys_C_BPI_WeatherChanged::LoadWeatherName' has a wrong offset!");

// Function BP_DyEnvSys.BP_DyEnvSys_C.BPI_TODTime
// 0x0008 (0x0008 - 0x0000)
struct BP_DyEnvSys_C_BPI_TODTime final
{
public:
	double                                        Time;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DyEnvSys_C_BPI_TODTime) == 0x000008, "Wrong alignment on BP_DyEnvSys_C_BPI_TODTime");
static_assert(sizeof(BP_DyEnvSys_C_BPI_TODTime) == 0x000008, "Wrong size on BP_DyEnvSys_C_BPI_TODTime");
static_assert(offsetof(BP_DyEnvSys_C_BPI_TODTime, Time) == 0x000000, "Member 'BP_DyEnvSys_C_BPI_TODTime::Time' has a wrong offset!");

// Function BP_DyEnvSys.BP_DyEnvSys_C.BPI_SaveAsset
// 0x0002 (0x0002 - 0x0000)
struct BP_DyEnvSys_C_BPI_SaveAsset final
{
public:
	bool                                          OnlySyncContent;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OnlyWriteParam;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DyEnvSys_C_BPI_SaveAsset) == 0x000001, "Wrong alignment on BP_DyEnvSys_C_BPI_SaveAsset");
static_assert(sizeof(BP_DyEnvSys_C_BPI_SaveAsset) == 0x000002, "Wrong size on BP_DyEnvSys_C_BPI_SaveAsset");
static_assert(offsetof(BP_DyEnvSys_C_BPI_SaveAsset, OnlySyncContent) == 0x000000, "Member 'BP_DyEnvSys_C_BPI_SaveAsset::OnlySyncContent' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_BPI_SaveAsset, OnlyWriteParam) == 0x000001, "Member 'BP_DyEnvSys_C_BPI_SaveAsset::OnlyWriteParam' has a wrong offset!");

// Function BP_DyEnvSys.BP_DyEnvSys_C.BPI_EditorUpdateRole
// 0x0010 (0x0010 - 0x0000)
struct BP_DyEnvSys_C_BPI_EditorUpdateRole final
{
public:
	struct FLinearColor                           LocalLightColor;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DyEnvSys_C_BPI_EditorUpdateRole) == 0x000004, "Wrong alignment on BP_DyEnvSys_C_BPI_EditorUpdateRole");
static_assert(sizeof(BP_DyEnvSys_C_BPI_EditorUpdateRole) == 0x000010, "Wrong size on BP_DyEnvSys_C_BPI_EditorUpdateRole");
static_assert(offsetof(BP_DyEnvSys_C_BPI_EditorUpdateRole, LocalLightColor) == 0x000000, "Member 'BP_DyEnvSys_C_BPI_EditorUpdateRole::LocalLightColor' has a wrong offset!");

// Function BP_DyEnvSys.BP_DyEnvSys_C.BP_RemovePreRequisitePlayerPawn
// 0x0008 (0x0008 - 0x0000)
struct BP_DyEnvSys_C_BP_RemovePreRequisitePlayerPawn final
{
public:
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DyEnvSys_C_BP_RemovePreRequisitePlayerPawn) == 0x000008, "Wrong alignment on BP_DyEnvSys_C_BP_RemovePreRequisitePlayerPawn");
static_assert(sizeof(BP_DyEnvSys_C_BP_RemovePreRequisitePlayerPawn) == 0x000008, "Wrong size on BP_DyEnvSys_C_BP_RemovePreRequisitePlayerPawn");
static_assert(offsetof(BP_DyEnvSys_C_BP_RemovePreRequisitePlayerPawn, CallFunc_GetPlayerPawn_ReturnValue) == 0x000000, "Member 'BP_DyEnvSys_C_BP_RemovePreRequisitePlayerPawn::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");

// Function BP_DyEnvSys.BP_DyEnvSys_C.BP_AddPreRequisitePlayerPawn
// 0x0008 (0x0008 - 0x0000)
struct BP_DyEnvSys_C_BP_AddPreRequisitePlayerPawn final
{
public:
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DyEnvSys_C_BP_AddPreRequisitePlayerPawn) == 0x000008, "Wrong alignment on BP_DyEnvSys_C_BP_AddPreRequisitePlayerPawn");
static_assert(sizeof(BP_DyEnvSys_C_BP_AddPreRequisitePlayerPawn) == 0x000008, "Wrong size on BP_DyEnvSys_C_BP_AddPreRequisitePlayerPawn");
static_assert(offsetof(BP_DyEnvSys_C_BP_AddPreRequisitePlayerPawn, CallFunc_GetPlayerPawn_ReturnValue) == 0x000000, "Member 'BP_DyEnvSys_C_BP_AddPreRequisitePlayerPawn::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");

// Function BP_DyEnvSys.BP_DyEnvSys_C.Blend SkyTexture2D
// 0x0E18 (0x0E18 - 0x0000)
struct BP_DyEnvSys_C_Blend_SkyTexture2D final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFinalWeatherSettings                  CallFunc_GetFinalWeatherSettings_ReturnValue;      // 0x0008(0x0E08)(ConstParm)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0E10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0E11(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0E12(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DyEnvSys_C_Blend_SkyTexture2D) == 0x000008, "Wrong alignment on BP_DyEnvSys_C_Blend_SkyTexture2D");
static_assert(sizeof(BP_DyEnvSys_C_Blend_SkyTexture2D) == 0x000E18, "Wrong size on BP_DyEnvSys_C_Blend_SkyTexture2D");
static_assert(offsetof(BP_DyEnvSys_C_Blend_SkyTexture2D, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_DyEnvSys_C_Blend_SkyTexture2D::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Blend_SkyTexture2D, CallFunc_GetFinalWeatherSettings_ReturnValue) == 0x000008, "Member 'BP_DyEnvSys_C_Blend_SkyTexture2D::CallFunc_GetFinalWeatherSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Blend_SkyTexture2D, CallFunc_IsValid_ReturnValue_1) == 0x000E10, "Member 'BP_DyEnvSys_C_Blend_SkyTexture2D::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Blend_SkyTexture2D, CallFunc_IsValid_ReturnValue_2) == 0x000E11, "Member 'BP_DyEnvSys_C_Blend_SkyTexture2D::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Blend_SkyTexture2D, CallFunc_IsValid_ReturnValue_3) == 0x000E12, "Member 'BP_DyEnvSys_C_Blend_SkyTexture2D::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function BP_DyEnvSys.BP_DyEnvSys_C.Blend SkyLight Cubemap
// 0x0E18 (0x0E18 - 0x0000)
struct BP_DyEnvSys_C_Blend_SkyLight_Cubemap final
{
public:
	struct FFinalWeatherSettings                  CallFunc_GetFinalWeatherSettings_ReturnValue;      // 0x0000(0x0E08)(ConstParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0E08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0E09(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0E0A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0E0B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0E0C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0E0D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E0E[0x2];                                      // 0x0E0E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast;   // 0x0E10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DyEnvSys_C_Blend_SkyLight_Cubemap) == 0x000008, "Wrong alignment on BP_DyEnvSys_C_Blend_SkyLight_Cubemap");
static_assert(sizeof(BP_DyEnvSys_C_Blend_SkyLight_Cubemap) == 0x000E18, "Wrong size on BP_DyEnvSys_C_Blend_SkyLight_Cubemap");
static_assert(offsetof(BP_DyEnvSys_C_Blend_SkyLight_Cubemap, CallFunc_GetFinalWeatherSettings_ReturnValue) == 0x000000, "Member 'BP_DyEnvSys_C_Blend_SkyLight_Cubemap::CallFunc_GetFinalWeatherSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Blend_SkyLight_Cubemap, CallFunc_IsValid_ReturnValue) == 0x000E08, "Member 'BP_DyEnvSys_C_Blend_SkyLight_Cubemap::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Blend_SkyLight_Cubemap, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000E09, "Member 'BP_DyEnvSys_C_Blend_SkyLight_Cubemap::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Blend_SkyLight_Cubemap, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000E0A, "Member 'BP_DyEnvSys_C_Blend_SkyLight_Cubemap::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Blend_SkyLight_Cubemap, CallFunc_BooleanOR_ReturnValue) == 0x000E0B, "Member 'BP_DyEnvSys_C_Blend_SkyLight_Cubemap::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Blend_SkyLight_Cubemap, CallFunc_IsValid_ReturnValue_1) == 0x000E0C, "Member 'BP_DyEnvSys_C_Blend_SkyLight_Cubemap::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Blend_SkyLight_Cubemap, CallFunc_BooleanAND_ReturnValue) == 0x000E0D, "Member 'BP_DyEnvSys_C_Blend_SkyLight_Cubemap::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DyEnvSys_C_Blend_SkyLight_Cubemap, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast) == 0x000E10, "Member 'BP_DyEnvSys_C_Blend_SkyLight_Cubemap::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_DyEnvSys.BP_DyEnvSys_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct BP_DyEnvSys_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_DyEnvSys_C_GetModuleName) == 0x000008, "Wrong alignment on BP_DyEnvSys_C_GetModuleName");
static_assert(sizeof(BP_DyEnvSys_C_GetModuleName) == 0x000010, "Wrong size on BP_DyEnvSys_C_GetModuleName");
static_assert(offsetof(BP_DyEnvSys_C_GetModuleName, ReturnValue) == 0x000000, "Member 'BP_DyEnvSys_C_GetModuleName::ReturnValue' has a wrong offset!");

// Function BP_DyEnvSys.BP_DyEnvSys_C.Get Module Name
// 0x0010 (0x0010 - 0x0000)
struct BP_DyEnvSys_C_Get_Module_Name final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_DyEnvSys_C_Get_Module_Name) == 0x000008, "Wrong alignment on BP_DyEnvSys_C_Get_Module_Name");
static_assert(sizeof(BP_DyEnvSys_C_Get_Module_Name) == 0x000010, "Wrong size on BP_DyEnvSys_C_Get_Module_Name");
static_assert(offsetof(BP_DyEnvSys_C_Get_Module_Name, ReturnValue) == 0x000000, "Member 'BP_DyEnvSys_C_Get_Module_Name::ReturnValue' has a wrong offset!");

}

