#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NikkiPlayer_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "X6EnhancedInput_structs.hpp"
#include "X6Game_structs.hpp"


namespace SDK::Params
{

// Function NikkiPlayer_BP.NikkiPlayer_BP_C.CheckInput
// 0x0004 (0x0004 - 0x0000)
struct NikkiPlayer_BP_C_CheckInput final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_1;      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NikkiPlayer_BP_C_CheckInput) == 0x000001, "Wrong alignment on NikkiPlayer_BP_C_CheckInput");
static_assert(sizeof(NikkiPlayer_BP_C_CheckInput) == 0x000004, "Wrong size on NikkiPlayer_BP_C_CheckInput");
static_assert(offsetof(NikkiPlayer_BP_C_CheckInput, ReturnValue) == 0x000000, "Member 'NikkiPlayer_BP_C_CheckInput::ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_CheckInput, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000001, "Member 'NikkiPlayer_BP_C_CheckInput::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_CheckInput, CallFunc_NotEqual_DoubleDouble_ReturnValue_1) == 0x000002, "Member 'NikkiPlayer_BP_C_CheckInput::CallFunc_NotEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_CheckInput, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'NikkiPlayer_BP_C_CheckInput::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function NikkiPlayer_BP.NikkiPlayer_BP_C.ExecuteUbergraph_NikkiPlayer_BP
// 0x02F8 (0x02F8 - 0x0000)
struct NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FX6InputActionValue                    K2Node_X6EnhancedInputActionEvent_ActionValue;     // 0x0008(0x0020)(NoDestructor)
	float                                         K2Node_X6EnhancedInputActionEvent_ElapsedTime;     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_X6EnhancedInputActionEvent_TriggeredTime;   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FX6InputActionTriggerKeyData>   K2Node_X6EnhancedInputActionEvent_TriggerKeyDatas; // 0x0030(0x0010)(ConstParm, ReferenceParm)
	double                                        Temp_real_Variable;                                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_InputActionValueToAxis1D_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_0;                              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1_0;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FX6InputActionValue                    K2Node_X6EnhancedInputActionEvent_ActionValue_2;   // 0x0078(0x0020)(NoDestructor)
	float                                         K2Node_X6EnhancedInputActionEvent_ElapsedTime_2;   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_X6EnhancedInputActionEvent_TriggeredTime_2; // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FX6InputActionTriggerKeyData>   K2Node_X6EnhancedInputActionEvent_TriggerKeyDatas_2; // 0x00A0(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_InputActionValueToAxis1D_ReturnValue_1; // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FX6InputActionValue                    K2Node_X6EnhancedInputActionEvent_ActionValue_3;   // 0x00C8(0x0020)(NoDestructor)
	float                                         K2Node_X6EnhancedInputActionEvent_ElapsedTime_3;   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_X6EnhancedInputActionEvent_TriggeredTime_3; // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FX6InputActionTriggerKeyData>   K2Node_X6EnhancedInputActionEvent_TriggerKeyDatas_3; // 0x00F0(0x0010)(ConstParm, ReferenceParm)
	struct FX6InputActionValue                    K2Node_X6EnhancedInputActionEvent_ActionValue_1;   // 0x0100(0x0020)(NoDestructor)
	float                                         K2Node_X6EnhancedInputActionEvent_ElapsedTime_1;   // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_X6EnhancedInputActionEvent_TriggeredTime_1; // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FX6InputActionTriggerKeyData>   K2Node_X6EnhancedInputActionEvent_TriggerKeyDatas_1; // 0x0128(0x0010)(ConstParm, ReferenceParm)
	double                                        CallFunc_Conv_InputActionValueToAxis1D_ReturnValue_2; // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1_1;                            // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_InputActionValueToAxis1D_ReturnValue_3; // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_175[0x3];                                      // 0x0175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_4;                              // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUTCComponent_C*>                CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0188(0x0010)(ReferenceParm, ContainsInstancedReference)
	double                                        Temp_real_Variable_4_0;                            // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUTCComponent_C*                        CallFunc_Array_Get_Item;                           // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUTCComponent_C*                        CallFunc_Array_Get_Item_1;                         // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Finger_Location_Exists_Result;         // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Finger_Location_Exists_Result_1;       // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B2[0x6];                                      // 0x01B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUTCComponent_C*                        CallFunc_Array_Get_Item_2;                         // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUTCComponent_C*>                CallFunc_Filter_By_Active_Active_Components;       // 0x01C8(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EA[0x6];                                      // 0x01EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_4_1;                            // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EX6InputTouchEvent                            K2Node_CustomEvent_EventType;                      // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FD[0x3];                                      // 0x01FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUTCComponent_C*>                CallFunc_Filter_By_Bounds_In_Bounds;               // 0x0230(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UUTCComponent_C*>                CallFunc_Filter_By_Bounds_W_out_Bounds;            // 0x0240(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UUTCComponent_C*>                CallFunc_Filter_By_Bounds_Both;                    // 0x0250(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUTCComponent_C*>                CallFunc_Sort_By_Priority_W__Higher_Priority;      // 0x0278(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UUTCComponent_C*                        CallFunc_Array_Get_Item_3;                         // 0x0288(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Finger_Slots_Available_ReturnValue;    // 0x0294(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0295(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Finger_Location_Exists_Result_2;       // 0x0296(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0297(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_299[0x3];                                      // 0x0299(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AX6PlayerCameraManager*                 K2Node_DynamicCast_AsX6Player_Camera_Manager;      // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_5;                              // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_5_0;                            // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUTCComponent_C*                        CallFunc_Array_Get_Item_4;                         // 0x02D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Finger_Location_Exists_Result_3;       // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_5_1;                            // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_RecordedDefaultWalkSpeed_ImplicitCast; // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP) == 0x000008, "Wrong alignment on NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP");
static_assert(sizeof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP) == 0x0002F8, "Wrong size on NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, EntryPoint) == 0x000000, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, K2Node_X6EnhancedInputActionEvent_ActionValue) == 0x000008, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::K2Node_X6EnhancedInputActionEvent_ActionValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, K2Node_X6EnhancedInputActionEvent_ElapsedTime) == 0x000028, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::K2Node_X6EnhancedInputActionEvent_ElapsedTime' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, K2Node_X6EnhancedInputActionEvent_TriggeredTime) == 0x00002C, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::K2Node_X6EnhancedInputActionEvent_TriggeredTime' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, K2Node_X6EnhancedInputActionEvent_TriggerKeyDatas) == 0x000030, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::K2Node_X6EnhancedInputActionEvent_TriggerKeyDatas' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, Temp_real_Variable) == 0x000040, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, CallFunc_Conv_InputActionValueToAxis1D_ReturnValue) == 0x000048, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::CallFunc_Conv_InputActionValueToAxis1D_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, Temp_real_Variable_0) == 0x000050, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::Temp_real_Variable_0' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, Temp_real_Variable_1) == 0x000058, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, Temp_real_Variable_2) == 0x000060, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, Temp_real_Variable_1_0) == 0x000068, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::Temp_real_Variable_1_0' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, K2Node_X6EnhancedInputActionEvent_ActionValue_2) == 0x000078, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::K2Node_X6EnhancedInputActionEvent_ActionValue_2' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, K2Node_X6EnhancedInputActionEvent_ElapsedTime_2) == 0x000098, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::K2Node_X6EnhancedInputActionEvent_ElapsedTime_2' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, K2Node_X6EnhancedInputActionEvent_TriggeredTime_2) == 0x00009C, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::K2Node_X6EnhancedInputActionEvent_TriggeredTime_2' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, K2Node_X6EnhancedInputActionEvent_TriggerKeyDatas_2) == 0x0000A0, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::K2Node_X6EnhancedInputActionEvent_TriggerKeyDatas_2' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, Temp_int_Loop_Counter_Variable_1) == 0x0000B0, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, CallFunc_Conv_InputActionValueToAxis1D_ReturnValue_1) == 0x0000B8, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::CallFunc_Conv_InputActionValueToAxis1D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000C0, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, K2Node_X6EnhancedInputActionEvent_ActionValue_3) == 0x0000C8, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::K2Node_X6EnhancedInputActionEvent_ActionValue_3' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, K2Node_X6EnhancedInputActionEvent_ElapsedTime_3) == 0x0000E8, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::K2Node_X6EnhancedInputActionEvent_ElapsedTime_3' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, K2Node_X6EnhancedInputActionEvent_TriggeredTime_3) == 0x0000EC, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::K2Node_X6EnhancedInputActionEvent_TriggeredTime_3' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, K2Node_X6EnhancedInputActionEvent_TriggerKeyDatas_3) == 0x0000F0, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::K2Node_X6EnhancedInputActionEvent_TriggerKeyDatas_3' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, K2Node_X6EnhancedInputActionEvent_ActionValue_1) == 0x000100, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::K2Node_X6EnhancedInputActionEvent_ActionValue_1' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, K2Node_X6EnhancedInputActionEvent_ElapsedTime_1) == 0x000120, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::K2Node_X6EnhancedInputActionEvent_ElapsedTime_1' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, K2Node_X6EnhancedInputActionEvent_TriggeredTime_1) == 0x000124, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::K2Node_X6EnhancedInputActionEvent_TriggeredTime_1' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, K2Node_X6EnhancedInputActionEvent_TriggerKeyDatas_1) == 0x000128, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::K2Node_X6EnhancedInputActionEvent_TriggerKeyDatas_1' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, CallFunc_Conv_InputActionValueToAxis1D_ReturnValue_2) == 0x000138, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::CallFunc_Conv_InputActionValueToAxis1D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, Temp_real_Variable_1) == 0x000140, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, Temp_real_Variable_1_1) == 0x000148, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::Temp_real_Variable_1_1' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, CallFunc_Conv_InputActionValueToAxis1D_ReturnValue_3) == 0x000150, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::CallFunc_Conv_InputActionValueToAxis1D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, Temp_int_Array_Index_Variable) == 0x000158, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, Temp_int_Array_Index_Variable_1) == 0x00015C, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, Temp_real_Variable_3) == 0x000160, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, Temp_int_Loop_Counter_Variable_2) == 0x000168, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, CallFunc_Add_IntInt_ReturnValue_2) == 0x00016C, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, Temp_int_Array_Index_Variable_2) == 0x000170, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, CallFunc_MakeLiteralByte_ReturnValue) == 0x000174, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, CallFunc_GetPlayerController_ReturnValue) == 0x000178, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, Temp_real_Variable_4) == 0x000180, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000188, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, Temp_real_Variable_4_0) == 0x000198, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::Temp_real_Variable_4_0' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, CallFunc_Array_Get_Item) == 0x0001A0, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, CallFunc_Array_Get_Item_1) == 0x0001A8, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, CallFunc_Is_Finger_Location_Exists_Result) == 0x0001B0, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::CallFunc_Is_Finger_Location_Exists_Result' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, CallFunc_Is_Finger_Location_Exists_Result_1) == 0x0001B1, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::CallFunc_Is_Finger_Location_Exists_Result_1' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, CallFunc_Array_Get_Item_2) == 0x0001B8, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, CallFunc_Array_Length_ReturnValue) == 0x0001C0, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, CallFunc_Filter_By_Active_Active_Components) == 0x0001C8, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::CallFunc_Filter_By_Active_Active_Components' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, CallFunc_Less_IntInt_ReturnValue) == 0x0001D8, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, CallFunc_Array_Length_ReturnValue_1) == 0x0001DC, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, CallFunc_Array_Length_ReturnValue_2) == 0x0001E0, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, CallFunc_Array_Length_ReturnValue_3) == 0x0001E4, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001E8, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, CallFunc_Greater_IntInt_ReturnValue) == 0x0001E9, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, Temp_real_Variable_4_1) == 0x0001F0, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::Temp_real_Variable_4_1' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, Temp_int_Loop_Counter_Variable_3) == 0x0001F8, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, K2Node_CustomEvent_EventType) == 0x0001FC, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::K2Node_CustomEvent_EventType' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, K2Node_CustomEvent_Location) == 0x000200, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, CallFunc_BreakVector_X) == 0x000218, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, CallFunc_BreakVector_Y) == 0x000220, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, CallFunc_BreakVector_Z) == 0x000228, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, CallFunc_Filter_By_Bounds_In_Bounds) == 0x000230, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::CallFunc_Filter_By_Bounds_In_Bounds' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, CallFunc_Filter_By_Bounds_W_out_Bounds) == 0x000240, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::CallFunc_Filter_By_Bounds_W_out_Bounds' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, CallFunc_Filter_By_Bounds_Both) == 0x000250, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::CallFunc_Filter_By_Bounds_Both' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, CallFunc_MakeVector_ReturnValue) == 0x000260, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, CallFunc_Sort_By_Priority_W__Higher_Priority) == 0x000278, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::CallFunc_Sort_By_Priority_W__Higher_Priority' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, CallFunc_Array_Get_Item_3) == 0x000288, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, CallFunc_Array_Length_ReturnValue_4) == 0x000290, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, CallFunc_Is_Finger_Slots_Available_ReturnValue) == 0x000294, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::CallFunc_Is_Finger_Slots_Available_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, CallFunc_Less_IntInt_ReturnValue_2) == 0x000295, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, CallFunc_Is_Finger_Location_Exists_Result_2) == 0x000296, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::CallFunc_Is_Finger_Location_Exists_Result_2' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, K2Node_SwitchEnum_CmpSuccess) == 0x000297, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, CallFunc_Less_IntInt_ReturnValue_3) == 0x000298, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, CallFunc_Add_IntInt_ReturnValue_3) == 0x00029C, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, K2Node_Event_DeltaSeconds) == 0x0002A0, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, CallFunc_GetPlayerController_ReturnValue_1) == 0x0002A8, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, K2Node_DynamicCast_AsX6Player_Camera_Manager) == 0x0002B0, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::K2Node_DynamicCast_AsX6Player_Camera_Manager' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, K2Node_DynamicCast_bSuccess) == 0x0002B8, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, Temp_real_Variable_5) == 0x0002C0, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, Temp_int_Array_Index_Variable_3) == 0x0002C8, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, Temp_real_Variable_5_0) == 0x0002D0, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::Temp_real_Variable_5_0' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, CallFunc_Array_Get_Item_4) == 0x0002D8, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, CallFunc_Is_Finger_Location_Exists_Result_3) == 0x0002E0, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::CallFunc_Is_Finger_Location_Exists_Result_3' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, Temp_real_Variable_5_1) == 0x0002E8, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::Temp_real_Variable_5_1' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP, K2Node_VariableSet_RecordedDefaultWalkSpeed_ImplicitCast) == 0x0002F0, "Member 'NikkiPlayer_BP_C_ExecuteUbergraph_NikkiPlayer_BP::K2Node_VariableSet_RecordedDefaultWalkSpeed_ImplicitCast' has a wrong offset!");

// Function NikkiPlayer_BP.NikkiPlayer_BP_C.GetAIObjectClass
// 0x0010 (0x0010 - 0x0000)
struct NikkiPlayer_BP_C_GetAIObjectClass final
{
public:
	class FString                                 LuaClassPath;                                      // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(NikkiPlayer_BP_C_GetAIObjectClass) == 0x000008, "Wrong alignment on NikkiPlayer_BP_C_GetAIObjectClass");
static_assert(sizeof(NikkiPlayer_BP_C_GetAIObjectClass) == 0x000010, "Wrong size on NikkiPlayer_BP_C_GetAIObjectClass");
static_assert(offsetof(NikkiPlayer_BP_C_GetAIObjectClass, LuaClassPath) == 0x000000, "Member 'NikkiPlayer_BP_C_GetAIObjectClass::LuaClassPath' has a wrong offset!");

// Function NikkiPlayer_BP.NikkiPlayer_BP_C.GetInputNormalVector
// 0x00B0 (0x00B0 - 0x0000)
struct NikkiPlayer_BP_C_GetInputNormalVector final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetPlayerInputRightVector_ReturnValue;    // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPlayerInputForwardVector_ReturnValue;  // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NikkiPlayer_BP_C_GetInputNormalVector) == 0x000008, "Wrong alignment on NikkiPlayer_BP_C_GetInputNormalVector");
static_assert(sizeof(NikkiPlayer_BP_C_GetInputNormalVector) == 0x0000B0, "Wrong size on NikkiPlayer_BP_C_GetInputNormalVector");
static_assert(offsetof(NikkiPlayer_BP_C_GetInputNormalVector, ReturnValue) == 0x000000, "Member 'NikkiPlayer_BP_C_GetInputNormalVector::ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_GetInputNormalVector, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'NikkiPlayer_BP_C_GetInputNormalVector::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_GetInputNormalVector, CallFunc_GetPlayerInputRightVector_ReturnValue) == 0x000020, "Member 'NikkiPlayer_BP_C_GetInputNormalVector::CallFunc_GetPlayerInputRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_GetInputNormalVector, CallFunc_GetPlayerInputForwardVector_ReturnValue) == 0x000038, "Member 'NikkiPlayer_BP_C_GetInputNormalVector::CallFunc_GetPlayerInputForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_GetInputNormalVector, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000050, "Member 'NikkiPlayer_BP_C_GetInputNormalVector::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_GetInputNormalVector, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000068, "Member 'NikkiPlayer_BP_C_GetInputNormalVector::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_GetInputNormalVector, CallFunc_Add_VectorVector_ReturnValue) == 0x000080, "Member 'NikkiPlayer_BP_C_GetInputNormalVector::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_GetInputNormalVector, CallFunc_Normal_ReturnValue) == 0x000098, "Member 'NikkiPlayer_BP_C_GetInputNormalVector::CallFunc_Normal_ReturnValue' has a wrong offset!");

// Function NikkiPlayer_BP.NikkiPlayer_BP_C.InpActEvt_Movement_Move_X_Axis_Action_K2Node_X6EnhancedInputActionEvent_2
// 0x0038 (0x0038 - 0x0000)
struct NikkiPlayer_BP_C_InpActEvt_Movement_Move_X_Axis_Action_K2Node_X6EnhancedInputActionEvent_2 final
{
public:
	struct FX6InputActionValue                    ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FX6InputActionTriggerKeyData>   TriggerKeyDatas;                                   // 0x0028(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(NikkiPlayer_BP_C_InpActEvt_Movement_Move_X_Axis_Action_K2Node_X6EnhancedInputActionEvent_2) == 0x000008, "Wrong alignment on NikkiPlayer_BP_C_InpActEvt_Movement_Move_X_Axis_Action_K2Node_X6EnhancedInputActionEvent_2");
static_assert(sizeof(NikkiPlayer_BP_C_InpActEvt_Movement_Move_X_Axis_Action_K2Node_X6EnhancedInputActionEvent_2) == 0x000038, "Wrong size on NikkiPlayer_BP_C_InpActEvt_Movement_Move_X_Axis_Action_K2Node_X6EnhancedInputActionEvent_2");
static_assert(offsetof(NikkiPlayer_BP_C_InpActEvt_Movement_Move_X_Axis_Action_K2Node_X6EnhancedInputActionEvent_2, ActionValue) == 0x000000, "Member 'NikkiPlayer_BP_C_InpActEvt_Movement_Move_X_Axis_Action_K2Node_X6EnhancedInputActionEvent_2::ActionValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_InpActEvt_Movement_Move_X_Axis_Action_K2Node_X6EnhancedInputActionEvent_2, ElapsedTime) == 0x000020, "Member 'NikkiPlayer_BP_C_InpActEvt_Movement_Move_X_Axis_Action_K2Node_X6EnhancedInputActionEvent_2::ElapsedTime' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_InpActEvt_Movement_Move_X_Axis_Action_K2Node_X6EnhancedInputActionEvent_2, TriggeredTime) == 0x000024, "Member 'NikkiPlayer_BP_C_InpActEvt_Movement_Move_X_Axis_Action_K2Node_X6EnhancedInputActionEvent_2::TriggeredTime' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_InpActEvt_Movement_Move_X_Axis_Action_K2Node_X6EnhancedInputActionEvent_2, TriggerKeyDatas) == 0x000028, "Member 'NikkiPlayer_BP_C_InpActEvt_Movement_Move_X_Axis_Action_K2Node_X6EnhancedInputActionEvent_2::TriggerKeyDatas' has a wrong offset!");

// Function NikkiPlayer_BP.NikkiPlayer_BP_C.InpActEvt_Movement_Move_X_Axis_Action_K2Node_X6EnhancedInputActionEvent_3
// 0x0038 (0x0038 - 0x0000)
struct NikkiPlayer_BP_C_InpActEvt_Movement_Move_X_Axis_Action_K2Node_X6EnhancedInputActionEvent_3 final
{
public:
	struct FX6InputActionValue                    ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FX6InputActionTriggerKeyData>   TriggerKeyDatas;                                   // 0x0028(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(NikkiPlayer_BP_C_InpActEvt_Movement_Move_X_Axis_Action_K2Node_X6EnhancedInputActionEvent_3) == 0x000008, "Wrong alignment on NikkiPlayer_BP_C_InpActEvt_Movement_Move_X_Axis_Action_K2Node_X6EnhancedInputActionEvent_3");
static_assert(sizeof(NikkiPlayer_BP_C_InpActEvt_Movement_Move_X_Axis_Action_K2Node_X6EnhancedInputActionEvent_3) == 0x000038, "Wrong size on NikkiPlayer_BP_C_InpActEvt_Movement_Move_X_Axis_Action_K2Node_X6EnhancedInputActionEvent_3");
static_assert(offsetof(NikkiPlayer_BP_C_InpActEvt_Movement_Move_X_Axis_Action_K2Node_X6EnhancedInputActionEvent_3, ActionValue) == 0x000000, "Member 'NikkiPlayer_BP_C_InpActEvt_Movement_Move_X_Axis_Action_K2Node_X6EnhancedInputActionEvent_3::ActionValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_InpActEvt_Movement_Move_X_Axis_Action_K2Node_X6EnhancedInputActionEvent_3, ElapsedTime) == 0x000020, "Member 'NikkiPlayer_BP_C_InpActEvt_Movement_Move_X_Axis_Action_K2Node_X6EnhancedInputActionEvent_3::ElapsedTime' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_InpActEvt_Movement_Move_X_Axis_Action_K2Node_X6EnhancedInputActionEvent_3, TriggeredTime) == 0x000024, "Member 'NikkiPlayer_BP_C_InpActEvt_Movement_Move_X_Axis_Action_K2Node_X6EnhancedInputActionEvent_3::TriggeredTime' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_InpActEvt_Movement_Move_X_Axis_Action_K2Node_X6EnhancedInputActionEvent_3, TriggerKeyDatas) == 0x000028, "Member 'NikkiPlayer_BP_C_InpActEvt_Movement_Move_X_Axis_Action_K2Node_X6EnhancedInputActionEvent_3::TriggerKeyDatas' has a wrong offset!");

// Function NikkiPlayer_BP.NikkiPlayer_BP_C.InpActEvt_Movement_Move_Y_Axis_Action_K2Node_X6EnhancedInputActionEvent_0
// 0x0038 (0x0038 - 0x0000)
struct NikkiPlayer_BP_C_InpActEvt_Movement_Move_Y_Axis_Action_K2Node_X6EnhancedInputActionEvent_0 final
{
public:
	struct FX6InputActionValue                    ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FX6InputActionTriggerKeyData>   TriggerKeyDatas;                                   // 0x0028(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(NikkiPlayer_BP_C_InpActEvt_Movement_Move_Y_Axis_Action_K2Node_X6EnhancedInputActionEvent_0) == 0x000008, "Wrong alignment on NikkiPlayer_BP_C_InpActEvt_Movement_Move_Y_Axis_Action_K2Node_X6EnhancedInputActionEvent_0");
static_assert(sizeof(NikkiPlayer_BP_C_InpActEvt_Movement_Move_Y_Axis_Action_K2Node_X6EnhancedInputActionEvent_0) == 0x000038, "Wrong size on NikkiPlayer_BP_C_InpActEvt_Movement_Move_Y_Axis_Action_K2Node_X6EnhancedInputActionEvent_0");
static_assert(offsetof(NikkiPlayer_BP_C_InpActEvt_Movement_Move_Y_Axis_Action_K2Node_X6EnhancedInputActionEvent_0, ActionValue) == 0x000000, "Member 'NikkiPlayer_BP_C_InpActEvt_Movement_Move_Y_Axis_Action_K2Node_X6EnhancedInputActionEvent_0::ActionValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_InpActEvt_Movement_Move_Y_Axis_Action_K2Node_X6EnhancedInputActionEvent_0, ElapsedTime) == 0x000020, "Member 'NikkiPlayer_BP_C_InpActEvt_Movement_Move_Y_Axis_Action_K2Node_X6EnhancedInputActionEvent_0::ElapsedTime' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_InpActEvt_Movement_Move_Y_Axis_Action_K2Node_X6EnhancedInputActionEvent_0, TriggeredTime) == 0x000024, "Member 'NikkiPlayer_BP_C_InpActEvt_Movement_Move_Y_Axis_Action_K2Node_X6EnhancedInputActionEvent_0::TriggeredTime' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_InpActEvt_Movement_Move_Y_Axis_Action_K2Node_X6EnhancedInputActionEvent_0, TriggerKeyDatas) == 0x000028, "Member 'NikkiPlayer_BP_C_InpActEvt_Movement_Move_Y_Axis_Action_K2Node_X6EnhancedInputActionEvent_0::TriggerKeyDatas' has a wrong offset!");

// Function NikkiPlayer_BP.NikkiPlayer_BP_C.InpActEvt_Movement_Move_Y_Axis_Action_K2Node_X6EnhancedInputActionEvent_1
// 0x0038 (0x0038 - 0x0000)
struct NikkiPlayer_BP_C_InpActEvt_Movement_Move_Y_Axis_Action_K2Node_X6EnhancedInputActionEvent_1 final
{
public:
	struct FX6InputActionValue                    ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FX6InputActionTriggerKeyData>   TriggerKeyDatas;                                   // 0x0028(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(NikkiPlayer_BP_C_InpActEvt_Movement_Move_Y_Axis_Action_K2Node_X6EnhancedInputActionEvent_1) == 0x000008, "Wrong alignment on NikkiPlayer_BP_C_InpActEvt_Movement_Move_Y_Axis_Action_K2Node_X6EnhancedInputActionEvent_1");
static_assert(sizeof(NikkiPlayer_BP_C_InpActEvt_Movement_Move_Y_Axis_Action_K2Node_X6EnhancedInputActionEvent_1) == 0x000038, "Wrong size on NikkiPlayer_BP_C_InpActEvt_Movement_Move_Y_Axis_Action_K2Node_X6EnhancedInputActionEvent_1");
static_assert(offsetof(NikkiPlayer_BP_C_InpActEvt_Movement_Move_Y_Axis_Action_K2Node_X6EnhancedInputActionEvent_1, ActionValue) == 0x000000, "Member 'NikkiPlayer_BP_C_InpActEvt_Movement_Move_Y_Axis_Action_K2Node_X6EnhancedInputActionEvent_1::ActionValue' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_InpActEvt_Movement_Move_Y_Axis_Action_K2Node_X6EnhancedInputActionEvent_1, ElapsedTime) == 0x000020, "Member 'NikkiPlayer_BP_C_InpActEvt_Movement_Move_Y_Axis_Action_K2Node_X6EnhancedInputActionEvent_1::ElapsedTime' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_InpActEvt_Movement_Move_Y_Axis_Action_K2Node_X6EnhancedInputActionEvent_1, TriggeredTime) == 0x000024, "Member 'NikkiPlayer_BP_C_InpActEvt_Movement_Move_Y_Axis_Action_K2Node_X6EnhancedInputActionEvent_1::TriggeredTime' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_InpActEvt_Movement_Move_Y_Axis_Action_K2Node_X6EnhancedInputActionEvent_1, TriggerKeyDatas) == 0x000028, "Member 'NikkiPlayer_BP_C_InpActEvt_Movement_Move_Y_Axis_Action_K2Node_X6EnhancedInputActionEvent_1::TriggerKeyDatas' has a wrong offset!");

// Function NikkiPlayer_BP.NikkiPlayer_BP_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct NikkiPlayer_BP_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NikkiPlayer_BP_C_ReceiveTick) == 0x000004, "Wrong alignment on NikkiPlayer_BP_C_ReceiveTick");
static_assert(sizeof(NikkiPlayer_BP_C_ReceiveTick) == 0x000004, "Wrong size on NikkiPlayer_BP_C_ReceiveTick");
static_assert(offsetof(NikkiPlayer_BP_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'NikkiPlayer_BP_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function NikkiPlayer_BP.NikkiPlayer_BP_C.SetJobStickState
// 0x0001 (0x0001 - 0x0000)
struct NikkiPlayer_BP_C_SetJobStickState final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NikkiPlayer_BP_C_SetJobStickState) == 0x000001, "Wrong alignment on NikkiPlayer_BP_C_SetJobStickState");
static_assert(sizeof(NikkiPlayer_BP_C_SetJobStickState) == 0x000001, "Wrong size on NikkiPlayer_BP_C_SetJobStickState");
static_assert(offsetof(NikkiPlayer_BP_C_SetJobStickState, Enable) == 0x000000, "Member 'NikkiPlayer_BP_C_SetJobStickState::Enable' has a wrong offset!");

// Function NikkiPlayer_BP.NikkiPlayer_BP_C.UITouchEvent
// 0x0020 (0x0020 - 0x0000)
struct NikkiPlayer_BP_C_UITouchEvent final
{
public:
	EX6InputTouchEvent                            EventType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NikkiPlayer_BP_C_UITouchEvent) == 0x000008, "Wrong alignment on NikkiPlayer_BP_C_UITouchEvent");
static_assert(sizeof(NikkiPlayer_BP_C_UITouchEvent) == 0x000020, "Wrong size on NikkiPlayer_BP_C_UITouchEvent");
static_assert(offsetof(NikkiPlayer_BP_C_UITouchEvent, EventType) == 0x000000, "Member 'NikkiPlayer_BP_C_UITouchEvent::EventType' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_UITouchEvent, Location) == 0x000008, "Member 'NikkiPlayer_BP_C_UITouchEvent::Location' has a wrong offset!");

// Function NikkiPlayer_BP.NikkiPlayer_BP_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct NikkiPlayer_BP_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(NikkiPlayer_BP_C_GetModuleName) == 0x000008, "Wrong alignment on NikkiPlayer_BP_C_GetModuleName");
static_assert(sizeof(NikkiPlayer_BP_C_GetModuleName) == 0x000010, "Wrong size on NikkiPlayer_BP_C_GetModuleName");
static_assert(offsetof(NikkiPlayer_BP_C_GetModuleName, ReturnValue) == 0x000000, "Member 'NikkiPlayer_BP_C_GetModuleName::ReturnValue' has a wrong offset!");

// Function NikkiPlayer_BP.NikkiPlayer_BP_C.GetMoveGoalOffsetInternal
// 0x0020 (0x0020 - 0x0000)
struct NikkiPlayer_BP_C_GetMoveGoalOffsetInternal final
{
public:
	const class AActor*                           MovingActor;                                       // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NikkiPlayer_BP_C_GetMoveGoalOffsetInternal) == 0x000008, "Wrong alignment on NikkiPlayer_BP_C_GetMoveGoalOffsetInternal");
static_assert(sizeof(NikkiPlayer_BP_C_GetMoveGoalOffsetInternal) == 0x000020, "Wrong size on NikkiPlayer_BP_C_GetMoveGoalOffsetInternal");
static_assert(offsetof(NikkiPlayer_BP_C_GetMoveGoalOffsetInternal, MovingActor) == 0x000000, "Member 'NikkiPlayer_BP_C_GetMoveGoalOffsetInternal::MovingActor' has a wrong offset!");
static_assert(offsetof(NikkiPlayer_BP_C_GetMoveGoalOffsetInternal, ReturnValue) == 0x000008, "Member 'NikkiPlayer_BP_C_GetMoveGoalOffsetInternal::ReturnValue' has a wrong offset!");

}

