#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PaperGamesSEM

#include "Basic.hpp"

#include "PaperGamesSEM_classes.hpp"
#include "PaperGamesSEM_parameters.hpp"


namespace SDK
{

// Function PaperGamesSEM.PaperGamesSEMDataHostBase.GetActorType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 APaperGamesSEMDataHostBase::GetActorType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperGamesSEMDataHostBase", "GetActorType");

	Params::PaperGamesSEMDataHostBase_GetActorType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperGamesSEM.PaperGamesSEMDataHostBase.GetDefaultStruct
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserDefinedStruct*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserDefinedStruct* APaperGamesSEMDataHostBase::GetDefaultStruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperGamesSEMDataHostBase", "GetDefaultStruct");

	Params::PaperGamesSEMDataHostBase_GetDefaultStruct Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperGamesSEM.PaperGamesSEMDataHostBase.GetObjectID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 APaperGamesSEMDataHostBase::GetObjectID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperGamesSEMDataHostBase", "GetObjectID");

	Params::PaperGamesSEMDataHostBase_GetObjectID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperGamesSEM.PaperGamesSEMDataHostBase.GetSourceId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 APaperGamesSEMDataHostBase::GetSourceId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperGamesSEMDataHostBase", "GetSourceId");

	Params::PaperGamesSEMDataHostBase_GetSourceId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperGamesSEM.PaperGamesSEMDataHostBase.GetTriggerData
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector APaperGamesSEMDataHostBase::GetTriggerData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperGamesSEMDataHostBase", "GetTriggerData");

	Params::PaperGamesSEMDataHostBase_GetTriggerData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperGamesSEM.PaperGamesSEMDataHostBase.OnDefaultStructPropertyChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// const class FString&                    PropertyName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APaperGamesSEMDataHostBase::OnDefaultStructPropertyChanged(const class FString& PropertyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperGamesSEMDataHostBase", "OnDefaultStructPropertyChanged");

	Params::PaperGamesSEMDataHostBase_OnDefaultStructPropertyChanged Parms{};

	Parms.PropertyName = std::move(PropertyName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PaperGamesSEM.PaperGamesSEMDataHostBase.OnFinishSpawn
// (Event, Public, BlueprintEvent)

void APaperGamesSEMDataHostBase::OnFinishSpawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperGamesSEMDataHostBase", "OnFinishSpawn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PaperGamesSEM.PaperGamesSEMDataHostBase.OnUpdateDefaultStruct
// (Event, Public, BlueprintCallable, BlueprintEvent)

void APaperGamesSEMDataHostBase::OnUpdateDefaultStruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperGamesSEMDataHostBase", "OnUpdateDefaultStruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PaperGamesSEM.PaperGamesSEMDataHostBase.PostUpdateSplineComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    PointsListStr                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESplinePointType                        PointType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APaperGamesSEMDataHostBase::PostUpdateSplineComponent(const class FString& PointsListStr, ESplinePointType PointType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperGamesSEMDataHostBase", "PostUpdateSplineComponent");

	Params::PaperGamesSEMDataHostBase_PostUpdateSplineComponent Parms{};

	Parms.PointsListStr = std::move(PointsListStr);
	Parms.PointType = PointType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperGamesSEM.PaperGamesSEMDataHostBase.ResnapActorToGround
// (Final, Native, Public, BlueprintCallable)

void APaperGamesSEMDataHostBase::ResnapActorToGround()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperGamesSEMDataHostBase", "ResnapActorToGround");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PaperGamesSEM.PaperGamesSEMDataHostBase.SetSourceId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   SourceId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APaperGamesSEMDataHostBase::SetSourceId(int32 SourceId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperGamesSEMDataHostBase", "SetSourceId");

	Params::PaperGamesSEMDataHostBase_SetSourceId Parms{};

	Parms.SourceId = SourceId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperGamesSEM.PaperGamesSEMDataHostBase.SetTriggerData
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   InTriggerData                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APaperGamesSEMDataHostBase::SetTriggerData(const struct FVector& InTriggerData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperGamesSEMDataHostBase", "SetTriggerData");

	Params::PaperGamesSEMDataHostBase_SetTriggerData Parms{};

	Parms.InTriggerData = std::move(InTriggerData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperGamesSEM.PaperGamesSEMSplineRoad.GetSplineWidth
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

double APaperGamesSEMSplineRoad::GetSplineWidth()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperGamesSEMSplineRoad", "GetSplineWidth");

	Params::PaperGamesSEMSplineRoad_GetSplineWidth Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperGamesSEM.PaperGamesSEMSplineRoad.OnSplineFinishedInitialize
// (Event, Public, BlueprintEvent)

void APaperGamesSEMSplineRoad::OnSplineFinishedInitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperGamesSEMSplineRoad", "OnSplineFinishedInitialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PaperGamesSEM.PaperGamesSEMSplineRoad.SetSplineColor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    ColorParamName                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APaperGamesSEMSplineRoad::SetSplineColor(const class FString& ColorParamName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperGamesSEMSplineRoad", "SetSplineColor");

	Params::PaperGamesSEMSplineRoad_SetSplineColor Parms{};

	Parms.ColorParamName = std::move(ColorParamName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperGamesSEM.PaperGamesSEMSplineRoad.SetSplineWidth
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InWidth                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APaperGamesSEMSplineRoad::SetSplineWidth(float InWidth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperGamesSEMSplineRoad", "SetSplineWidth");

	Params::PaperGamesSEMSplineRoad_SetSplineWidth Parms{};

	Parms.InWidth = InWidth;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperGamesSEM.PaperGamesSEMSplineRoad.SetTemplete
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    TempName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APaperGamesSEMSplineRoad::SetTemplete(const class FString& TempName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperGamesSEMSplineRoad", "SetTemplete");

	Params::PaperGamesSEMSplineRoad_SetTemplete Parms{};

	Parms.TempName = std::move(TempName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperGamesSEM.PaperGamesSEMSplineRoad.UpdateInstanceSplineMeshComponents
// (Final, Native, Public, BlueprintCallable)

void APaperGamesSEMSplineRoad::UpdateInstanceSplineMeshComponents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperGamesSEMSplineRoad", "UpdateInstanceSplineMeshComponents");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PaperGamesSEM.PaperGamesSEMSplineRoad.UpdateSplineComponent
// (Event, Public, BlueprintEvent)

void APaperGamesSEMSplineRoad::UpdateSplineComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperGamesSEMSplineRoad", "UpdateSplineComponent");

	UObject::ProcessEvent(Func, nullptr);
}

}

