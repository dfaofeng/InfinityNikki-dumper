#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PSDKChannelBili

#include "Basic.hpp"

#include "PSDKBasic_structs.hpp"


namespace SDK
{

// ScriptStruct PSDKChannelBili.PSdkBiliAccountBasicModel
// 0x0038 (0x0038 - 0x0000)
struct FPSdkBiliAccountBasicModel
{
public:
	int32                                         Code;                                              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Info;                                              // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 request_id;                                        // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ResponseString;                                    // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FPSdkBiliAccountBasicModel) == 0x000008, "Wrong alignment on FPSdkBiliAccountBasicModel");
static_assert(sizeof(FPSdkBiliAccountBasicModel) == 0x000038, "Wrong size on FPSdkBiliAccountBasicModel");
static_assert(offsetof(FPSdkBiliAccountBasicModel, Code) == 0x000000, "Member 'FPSdkBiliAccountBasicModel::Code' has a wrong offset!");
static_assert(offsetof(FPSdkBiliAccountBasicModel, Info) == 0x000008, "Member 'FPSdkBiliAccountBasicModel::Info' has a wrong offset!");
static_assert(offsetof(FPSdkBiliAccountBasicModel, request_id) == 0x000018, "Member 'FPSdkBiliAccountBasicModel::request_id' has a wrong offset!");
static_assert(offsetof(FPSdkBiliAccountBasicModel, ResponseString) == 0x000028, "Member 'FPSdkBiliAccountBasicModel::ResponseString' has a wrong offset!");

// ScriptStruct PSDKChannelBili.PSdkBiliDetailInfo
// 0x0060 (0x0060 - 0x0000)
struct FPSdkBiliDetailInfo final
{
public:
	class FString                                 Account_Id;                                        // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Online_Id;                                         // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Region;                                            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Third_User_Name;                                   // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Third_User_Picture;                                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Email;                                             // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FPSdkBiliDetailInfo) == 0x000008, "Wrong alignment on FPSdkBiliDetailInfo");
static_assert(sizeof(FPSdkBiliDetailInfo) == 0x000060, "Wrong size on FPSdkBiliDetailInfo");
static_assert(offsetof(FPSdkBiliDetailInfo, Account_Id) == 0x000000, "Member 'FPSdkBiliDetailInfo::Account_Id' has a wrong offset!");
static_assert(offsetof(FPSdkBiliDetailInfo, Online_Id) == 0x000010, "Member 'FPSdkBiliDetailInfo::Online_Id' has a wrong offset!");
static_assert(offsetof(FPSdkBiliDetailInfo, Region) == 0x000020, "Member 'FPSdkBiliDetailInfo::Region' has a wrong offset!");
static_assert(offsetof(FPSdkBiliDetailInfo, Third_User_Name) == 0x000030, "Member 'FPSdkBiliDetailInfo::Third_User_Name' has a wrong offset!");
static_assert(offsetof(FPSdkBiliDetailInfo, Third_User_Picture) == 0x000040, "Member 'FPSdkBiliDetailInfo::Third_User_Picture' has a wrong offset!");
static_assert(offsetof(FPSdkBiliDetailInfo, Email) == 0x000050, "Member 'FPSdkBiliDetailInfo::Email' has a wrong offset!");

// ScriptStruct PSDKChannelBili.PSdkBiliAccountYouthMsg
// 0x0068 (0x0068 - 0x0000)
struct FPSdkBiliAccountYouthMsg final
{
public:
	int32                                         LimitType;                                         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AuthStatus;                                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RealId;                                            // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 realname;                                          // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Limit;                                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LoginBan;                                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LoginBanBeg;                                       // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LoginBanEnd;                                       // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OnlineToday;                                       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Age;                                               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Is_Guest;                                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         HasRealInfo;                                       // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Is_Holiday;                                        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FPSdkBiliAccountYouthMsg) == 0x000008, "Wrong alignment on FPSdkBiliAccountYouthMsg");
static_assert(sizeof(FPSdkBiliAccountYouthMsg) == 0x000068, "Wrong size on FPSdkBiliAccountYouthMsg");
static_assert(offsetof(FPSdkBiliAccountYouthMsg, LimitType) == 0x000000, "Member 'FPSdkBiliAccountYouthMsg::LimitType' has a wrong offset!");
static_assert(offsetof(FPSdkBiliAccountYouthMsg, AuthStatus) == 0x000004, "Member 'FPSdkBiliAccountYouthMsg::AuthStatus' has a wrong offset!");
static_assert(offsetof(FPSdkBiliAccountYouthMsg, RealId) == 0x000008, "Member 'FPSdkBiliAccountYouthMsg::RealId' has a wrong offset!");
static_assert(offsetof(FPSdkBiliAccountYouthMsg, realname) == 0x000018, "Member 'FPSdkBiliAccountYouthMsg::realname' has a wrong offset!");
static_assert(offsetof(FPSdkBiliAccountYouthMsg, Limit) == 0x000028, "Member 'FPSdkBiliAccountYouthMsg::Limit' has a wrong offset!");
static_assert(offsetof(FPSdkBiliAccountYouthMsg, LoginBan) == 0x00002C, "Member 'FPSdkBiliAccountYouthMsg::LoginBan' has a wrong offset!");
static_assert(offsetof(FPSdkBiliAccountYouthMsg, LoginBanBeg) == 0x000030, "Member 'FPSdkBiliAccountYouthMsg::LoginBanBeg' has a wrong offset!");
static_assert(offsetof(FPSdkBiliAccountYouthMsg, LoginBanEnd) == 0x000040, "Member 'FPSdkBiliAccountYouthMsg::LoginBanEnd' has a wrong offset!");
static_assert(offsetof(FPSdkBiliAccountYouthMsg, OnlineToday) == 0x000050, "Member 'FPSdkBiliAccountYouthMsg::OnlineToday' has a wrong offset!");
static_assert(offsetof(FPSdkBiliAccountYouthMsg, Age) == 0x000054, "Member 'FPSdkBiliAccountYouthMsg::Age' has a wrong offset!");
static_assert(offsetof(FPSdkBiliAccountYouthMsg, Is_Guest) == 0x000058, "Member 'FPSdkBiliAccountYouthMsg::Is_Guest' has a wrong offset!");
static_assert(offsetof(FPSdkBiliAccountYouthMsg, HasRealInfo) == 0x00005C, "Member 'FPSdkBiliAccountYouthMsg::HasRealInfo' has a wrong offset!");
static_assert(offsetof(FPSdkBiliAccountYouthMsg, Is_Holiday) == 0x000060, "Member 'FPSdkBiliAccountYouthMsg::Is_Holiday' has a wrong offset!");

// ScriptStruct PSDKChannelBili.PSdkBiliAccountInfoModel
// 0x0150 (0x0150 - 0x0000)
struct FPSdkBiliAccountInfoModel final
{
public:
	bool                                          Is_Bind;                                           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Real_Switch;                                       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Youth_Switch;                                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Guest_Need_Bind;                                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Third_Nid;                                         // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Third_Token;                                       // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Account;                                           // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Nid;                                               // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Token;                                             // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Refresh_Token;                                     // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         IsNew;                                             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         IsGuest;                                           // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AccountType;                                       // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RoleId;                                            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Extra;                                             // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPSdkBiliAccountYouthMsg               Youth_Msg;                                         // 0x0088(0x0068)(NativeAccessSpecifierPublic)
	struct FPSdkBiliDetailInfo                    Detail;                                            // 0x00F0(0x0060)(NativeAccessSpecifierPublic)
};
static_assert(alignof(FPSdkBiliAccountInfoModel) == 0x000008, "Wrong alignment on FPSdkBiliAccountInfoModel");
static_assert(sizeof(FPSdkBiliAccountInfoModel) == 0x000150, "Wrong size on FPSdkBiliAccountInfoModel");
static_assert(offsetof(FPSdkBiliAccountInfoModel, Is_Bind) == 0x000000, "Member 'FPSdkBiliAccountInfoModel::Is_Bind' has a wrong offset!");
static_assert(offsetof(FPSdkBiliAccountInfoModel, Real_Switch) == 0x000001, "Member 'FPSdkBiliAccountInfoModel::Real_Switch' has a wrong offset!");
static_assert(offsetof(FPSdkBiliAccountInfoModel, Youth_Switch) == 0x000002, "Member 'FPSdkBiliAccountInfoModel::Youth_Switch' has a wrong offset!");
static_assert(offsetof(FPSdkBiliAccountInfoModel, Guest_Need_Bind) == 0x000003, "Member 'FPSdkBiliAccountInfoModel::Guest_Need_Bind' has a wrong offset!");
static_assert(offsetof(FPSdkBiliAccountInfoModel, Third_Nid) == 0x000008, "Member 'FPSdkBiliAccountInfoModel::Third_Nid' has a wrong offset!");
static_assert(offsetof(FPSdkBiliAccountInfoModel, Third_Token) == 0x000018, "Member 'FPSdkBiliAccountInfoModel::Third_Token' has a wrong offset!");
static_assert(offsetof(FPSdkBiliAccountInfoModel, Account) == 0x000028, "Member 'FPSdkBiliAccountInfoModel::Account' has a wrong offset!");
static_assert(offsetof(FPSdkBiliAccountInfoModel, Nid) == 0x000038, "Member 'FPSdkBiliAccountInfoModel::Nid' has a wrong offset!");
static_assert(offsetof(FPSdkBiliAccountInfoModel, Token) == 0x000048, "Member 'FPSdkBiliAccountInfoModel::Token' has a wrong offset!");
static_assert(offsetof(FPSdkBiliAccountInfoModel, Refresh_Token) == 0x000058, "Member 'FPSdkBiliAccountInfoModel::Refresh_Token' has a wrong offset!");
static_assert(offsetof(FPSdkBiliAccountInfoModel, IsNew) == 0x000068, "Member 'FPSdkBiliAccountInfoModel::IsNew' has a wrong offset!");
static_assert(offsetof(FPSdkBiliAccountInfoModel, IsGuest) == 0x00006C, "Member 'FPSdkBiliAccountInfoModel::IsGuest' has a wrong offset!");
static_assert(offsetof(FPSdkBiliAccountInfoModel, AccountType) == 0x000070, "Member 'FPSdkBiliAccountInfoModel::AccountType' has a wrong offset!");
static_assert(offsetof(FPSdkBiliAccountInfoModel, RoleId) == 0x000074, "Member 'FPSdkBiliAccountInfoModel::RoleId' has a wrong offset!");
static_assert(offsetof(FPSdkBiliAccountInfoModel, Extra) == 0x000078, "Member 'FPSdkBiliAccountInfoModel::Extra' has a wrong offset!");
static_assert(offsetof(FPSdkBiliAccountInfoModel, Youth_Msg) == 0x000088, "Member 'FPSdkBiliAccountInfoModel::Youth_Msg' has a wrong offset!");
static_assert(offsetof(FPSdkBiliAccountInfoModel, Detail) == 0x0000F0, "Member 'FPSdkBiliAccountInfoModel::Detail' has a wrong offset!");

// ScriptStruct PSDKChannelBili.PSdkBiliLoginInfoModel
// 0x0150 (0x0188 - 0x0038)
struct FPSdkBiliLoginInfoModel final : public FPSdkBiliAccountBasicModel
{
public:
	struct FPSdkBiliAccountInfoModel              Data;                                              // 0x0038(0x0150)(NativeAccessSpecifierPublic)
};
static_assert(alignof(FPSdkBiliLoginInfoModel) == 0x000008, "Wrong alignment on FPSdkBiliLoginInfoModel");
static_assert(sizeof(FPSdkBiliLoginInfoModel) == 0x000188, "Wrong size on FPSdkBiliLoginInfoModel");
static_assert(offsetof(FPSdkBiliLoginInfoModel, Data) == 0x000038, "Member 'FPSdkBiliLoginInfoModel::Data' has a wrong offset!");

// ScriptStruct PSDKChannelBili.PSdkPayBiliOrderInfoModel
// 0x0170 (0x0170 - 0x0000)
struct FPSdkPayBiliOrderInfoModel final
{
public:
	class FString                                 accnt_id;                                          // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Amount;                                            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 channelOrderID;                                    // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 charge_type;                                       // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 game_money;                                        // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Image;                                             // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 money;                                             // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 currency;                                          // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Nid;                                               // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 notify_url;                                        // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Num;                                               // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 orderSign;                                         // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 order_extra;                                       // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 order_id;                                          // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 order_ip;                                          // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Platform;                                          // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 product_id;                                        // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 product_name;                                      // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 tradeNum;                                          // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 zoneId;                                            // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 product_desc;                                      // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UserName;                                          // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 role_name;                                         // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FPSdkPayBiliOrderInfoModel) == 0x000008, "Wrong alignment on FPSdkPayBiliOrderInfoModel");
static_assert(sizeof(FPSdkPayBiliOrderInfoModel) == 0x000170, "Wrong size on FPSdkPayBiliOrderInfoModel");
static_assert(offsetof(FPSdkPayBiliOrderInfoModel, accnt_id) == 0x000000, "Member 'FPSdkPayBiliOrderInfoModel::accnt_id' has a wrong offset!");
static_assert(offsetof(FPSdkPayBiliOrderInfoModel, Amount) == 0x000010, "Member 'FPSdkPayBiliOrderInfoModel::Amount' has a wrong offset!");
static_assert(offsetof(FPSdkPayBiliOrderInfoModel, channelOrderID) == 0x000020, "Member 'FPSdkPayBiliOrderInfoModel::channelOrderID' has a wrong offset!");
static_assert(offsetof(FPSdkPayBiliOrderInfoModel, charge_type) == 0x000030, "Member 'FPSdkPayBiliOrderInfoModel::charge_type' has a wrong offset!");
static_assert(offsetof(FPSdkPayBiliOrderInfoModel, game_money) == 0x000040, "Member 'FPSdkPayBiliOrderInfoModel::game_money' has a wrong offset!");
static_assert(offsetof(FPSdkPayBiliOrderInfoModel, Image) == 0x000050, "Member 'FPSdkPayBiliOrderInfoModel::Image' has a wrong offset!");
static_assert(offsetof(FPSdkPayBiliOrderInfoModel, money) == 0x000060, "Member 'FPSdkPayBiliOrderInfoModel::money' has a wrong offset!");
static_assert(offsetof(FPSdkPayBiliOrderInfoModel, currency) == 0x000070, "Member 'FPSdkPayBiliOrderInfoModel::currency' has a wrong offset!");
static_assert(offsetof(FPSdkPayBiliOrderInfoModel, Nid) == 0x000080, "Member 'FPSdkPayBiliOrderInfoModel::Nid' has a wrong offset!");
static_assert(offsetof(FPSdkPayBiliOrderInfoModel, notify_url) == 0x000090, "Member 'FPSdkPayBiliOrderInfoModel::notify_url' has a wrong offset!");
static_assert(offsetof(FPSdkPayBiliOrderInfoModel, Num) == 0x0000A0, "Member 'FPSdkPayBiliOrderInfoModel::Num' has a wrong offset!");
static_assert(offsetof(FPSdkPayBiliOrderInfoModel, orderSign) == 0x0000B0, "Member 'FPSdkPayBiliOrderInfoModel::orderSign' has a wrong offset!");
static_assert(offsetof(FPSdkPayBiliOrderInfoModel, order_extra) == 0x0000C0, "Member 'FPSdkPayBiliOrderInfoModel::order_extra' has a wrong offset!");
static_assert(offsetof(FPSdkPayBiliOrderInfoModel, order_id) == 0x0000D0, "Member 'FPSdkPayBiliOrderInfoModel::order_id' has a wrong offset!");
static_assert(offsetof(FPSdkPayBiliOrderInfoModel, order_ip) == 0x0000E0, "Member 'FPSdkPayBiliOrderInfoModel::order_ip' has a wrong offset!");
static_assert(offsetof(FPSdkPayBiliOrderInfoModel, Platform) == 0x0000F0, "Member 'FPSdkPayBiliOrderInfoModel::Platform' has a wrong offset!");
static_assert(offsetof(FPSdkPayBiliOrderInfoModel, product_id) == 0x000100, "Member 'FPSdkPayBiliOrderInfoModel::product_id' has a wrong offset!");
static_assert(offsetof(FPSdkPayBiliOrderInfoModel, product_name) == 0x000110, "Member 'FPSdkPayBiliOrderInfoModel::product_name' has a wrong offset!");
static_assert(offsetof(FPSdkPayBiliOrderInfoModel, tradeNum) == 0x000120, "Member 'FPSdkPayBiliOrderInfoModel::tradeNum' has a wrong offset!");
static_assert(offsetof(FPSdkPayBiliOrderInfoModel, zoneId) == 0x000130, "Member 'FPSdkPayBiliOrderInfoModel::zoneId' has a wrong offset!");
static_assert(offsetof(FPSdkPayBiliOrderInfoModel, product_desc) == 0x000140, "Member 'FPSdkPayBiliOrderInfoModel::product_desc' has a wrong offset!");
static_assert(offsetof(FPSdkPayBiliOrderInfoModel, UserName) == 0x000150, "Member 'FPSdkPayBiliOrderInfoModel::UserName' has a wrong offset!");
static_assert(offsetof(FPSdkPayBiliOrderInfoModel, role_name) == 0x000160, "Member 'FPSdkPayBiliOrderInfoModel::role_name' has a wrong offset!");

// ScriptStruct PSDKChannelBili.PSdkPayBiliYouthChargeModel
// 0x001C (0x001C - 0x0000)
struct FPSdkPayBiliYouthChargeModel final
{
public:
	int32                                         Age;                                               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AuthStatus;                                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         day_money;                                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         zolimitneId;                                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         month_money;                                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         month_remain_money;                                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         once_money_limit;                                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FPSdkPayBiliYouthChargeModel) == 0x000004, "Wrong alignment on FPSdkPayBiliYouthChargeModel");
static_assert(sizeof(FPSdkPayBiliYouthChargeModel) == 0x00001C, "Wrong size on FPSdkPayBiliYouthChargeModel");
static_assert(offsetof(FPSdkPayBiliYouthChargeModel, Age) == 0x000000, "Member 'FPSdkPayBiliYouthChargeModel::Age' has a wrong offset!");
static_assert(offsetof(FPSdkPayBiliYouthChargeModel, AuthStatus) == 0x000004, "Member 'FPSdkPayBiliYouthChargeModel::AuthStatus' has a wrong offset!");
static_assert(offsetof(FPSdkPayBiliYouthChargeModel, day_money) == 0x000008, "Member 'FPSdkPayBiliYouthChargeModel::day_money' has a wrong offset!");
static_assert(offsetof(FPSdkPayBiliYouthChargeModel, zolimitneId) == 0x00000C, "Member 'FPSdkPayBiliYouthChargeModel::zolimitneId' has a wrong offset!");
static_assert(offsetof(FPSdkPayBiliYouthChargeModel, month_money) == 0x000010, "Member 'FPSdkPayBiliYouthChargeModel::month_money' has a wrong offset!");
static_assert(offsetof(FPSdkPayBiliYouthChargeModel, month_remain_money) == 0x000014, "Member 'FPSdkPayBiliYouthChargeModel::month_remain_money' has a wrong offset!");
static_assert(offsetof(FPSdkPayBiliYouthChargeModel, once_money_limit) == 0x000018, "Member 'FPSdkPayBiliYouthChargeModel::once_money_limit' has a wrong offset!");

// ScriptStruct PSDKChannelBili.PSdkPayBiliDataModel
// 0x0190 (0x0190 - 0x0000)
struct FPSdkPayBiliDataModel final
{
public:
	struct FPSdkPayBiliOrderInfoModel             Order_Info;                                        // 0x0000(0x0170)(NativeAccessSpecifierPublic)
	struct FPSdkPayBiliYouthChargeModel           Youth_Charge;                                      // 0x0170(0x001C)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FPSdkPayBiliDataModel) == 0x000008, "Wrong alignment on FPSdkPayBiliDataModel");
static_assert(sizeof(FPSdkPayBiliDataModel) == 0x000190, "Wrong size on FPSdkPayBiliDataModel");
static_assert(offsetof(FPSdkPayBiliDataModel, Order_Info) == 0x000000, "Member 'FPSdkPayBiliDataModel::Order_Info' has a wrong offset!");
static_assert(offsetof(FPSdkPayBiliDataModel, Youth_Charge) == 0x000170, "Member 'FPSdkPayBiliDataModel::Youth_Charge' has a wrong offset!");

// ScriptStruct PSDKChannelBili.PSdkPayBiliApiModel
// 0x0190 (0x01C8 - 0x0038)
struct FPSdkPayBiliApiModel final : public FPSBffBasicModel
{
public:
	struct FPSdkPayBiliDataModel                  Data;                                              // 0x0038(0x0190)(NativeAccessSpecifierPublic)
};
static_assert(alignof(FPSdkPayBiliApiModel) == 0x000008, "Wrong alignment on FPSdkPayBiliApiModel");
static_assert(sizeof(FPSdkPayBiliApiModel) == 0x0001C8, "Wrong size on FPSdkPayBiliApiModel");
static_assert(offsetof(FPSdkPayBiliApiModel, Data) == 0x000038, "Member 'FPSdkPayBiliApiModel::Data' has a wrong offset!");

// ScriptStruct PSDKChannelBili.PSdkThirdPartyBiliPayModel
// 0x00C0 (0x00C0 - 0x0000)
struct FPSdkThirdPartyBiliPayModel final
{
public:
	class FString                                 zoneId;                                            // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 tradeNum;                                          // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 game_money;                                        // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 product_name;                                      // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 money;                                             // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 product_desc;                                      // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UserName;                                          // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 role_name;                                         // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 extension_info;                                    // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 notify_url;                                        // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 store_area;                                        // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 orderSign;                                         // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FPSdkThirdPartyBiliPayModel) == 0x000008, "Wrong alignment on FPSdkThirdPartyBiliPayModel");
static_assert(sizeof(FPSdkThirdPartyBiliPayModel) == 0x0000C0, "Wrong size on FPSdkThirdPartyBiliPayModel");
static_assert(offsetof(FPSdkThirdPartyBiliPayModel, zoneId) == 0x000000, "Member 'FPSdkThirdPartyBiliPayModel::zoneId' has a wrong offset!");
static_assert(offsetof(FPSdkThirdPartyBiliPayModel, tradeNum) == 0x000010, "Member 'FPSdkThirdPartyBiliPayModel::tradeNum' has a wrong offset!");
static_assert(offsetof(FPSdkThirdPartyBiliPayModel, game_money) == 0x000020, "Member 'FPSdkThirdPartyBiliPayModel::game_money' has a wrong offset!");
static_assert(offsetof(FPSdkThirdPartyBiliPayModel, product_name) == 0x000030, "Member 'FPSdkThirdPartyBiliPayModel::product_name' has a wrong offset!");
static_assert(offsetof(FPSdkThirdPartyBiliPayModel, money) == 0x000040, "Member 'FPSdkThirdPartyBiliPayModel::money' has a wrong offset!");
static_assert(offsetof(FPSdkThirdPartyBiliPayModel, product_desc) == 0x000050, "Member 'FPSdkThirdPartyBiliPayModel::product_desc' has a wrong offset!");
static_assert(offsetof(FPSdkThirdPartyBiliPayModel, UserName) == 0x000060, "Member 'FPSdkThirdPartyBiliPayModel::UserName' has a wrong offset!");
static_assert(offsetof(FPSdkThirdPartyBiliPayModel, role_name) == 0x000070, "Member 'FPSdkThirdPartyBiliPayModel::role_name' has a wrong offset!");
static_assert(offsetof(FPSdkThirdPartyBiliPayModel, extension_info) == 0x000080, "Member 'FPSdkThirdPartyBiliPayModel::extension_info' has a wrong offset!");
static_assert(offsetof(FPSdkThirdPartyBiliPayModel, notify_url) == 0x000090, "Member 'FPSdkThirdPartyBiliPayModel::notify_url' has a wrong offset!");
static_assert(offsetof(FPSdkThirdPartyBiliPayModel, store_area) == 0x0000A0, "Member 'FPSdkThirdPartyBiliPayModel::store_area' has a wrong offset!");
static_assert(offsetof(FPSdkThirdPartyBiliPayModel, orderSign) == 0x0000B0, "Member 'FPSdkThirdPartyBiliPayModel::orderSign' has a wrong offset!");

}

