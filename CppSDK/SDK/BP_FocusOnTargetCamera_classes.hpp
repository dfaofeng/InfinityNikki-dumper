#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FocusOnTargetCamera

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "FFocusOnCameraParams_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FocusOnTargetCamera.BP_FocusOnTargetCamera_C
// 0x0120 (0x04C8 - 0x03A8)
class ABP_FocusOnTargetCamera_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_FocusOnTargetComponent_C*           BP_FocusOnTargetComponent;                         // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_FocusOnTargetAdvancedCamera_C*      BP_FocusOnTargetAdvancedCamera;                    // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 BP_FocusOnActor;                                   // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FFFocusOnCameraParams                  BP_FocusOnCameraParams;                            // 0x03D0(0x00B8)(Edit, BlueprintVisible, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FViewTargetTransitionParams            BP_DefaultTransitionParams;                        // 0x0488(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor)
	double                                        BP_DefalutSpringArmAngle;                          // 0x04A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BP_DefaultSpringArmLength;                         // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BP_DefaultMaxAngularSpeed;                         // 0x04B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_DebugDraw;                                      // 0x04C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ReceiveBeginPlay();
	void ExecuteUbergraph_BP_FocusOnTargetCamera(int32 EntryPoint);
	void BP_EndFocus(bool bImmediately, bool bBlendToTop);

	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FocusOnTargetCamera_C">();
	}
	static class ABP_FocusOnTargetCamera_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_FocusOnTargetCamera_C>();
	}
};
static_assert(alignof(ABP_FocusOnTargetCamera_C) == 0x000008, "Wrong alignment on ABP_FocusOnTargetCamera_C");
static_assert(sizeof(ABP_FocusOnTargetCamera_C) == 0x0004C8, "Wrong size on ABP_FocusOnTargetCamera_C");
static_assert(offsetof(ABP_FocusOnTargetCamera_C, UberGraphFrame) == 0x0003A8, "Member 'ABP_FocusOnTargetCamera_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_FocusOnTargetCamera_C, BP_FocusOnTargetComponent) == 0x0003B0, "Member 'ABP_FocusOnTargetCamera_C::BP_FocusOnTargetComponent' has a wrong offset!");
static_assert(offsetof(ABP_FocusOnTargetCamera_C, BP_FocusOnTargetAdvancedCamera) == 0x0003B8, "Member 'ABP_FocusOnTargetCamera_C::BP_FocusOnTargetAdvancedCamera' has a wrong offset!");
static_assert(offsetof(ABP_FocusOnTargetCamera_C, DefaultSceneRoot) == 0x0003C0, "Member 'ABP_FocusOnTargetCamera_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_FocusOnTargetCamera_C, BP_FocusOnActor) == 0x0003C8, "Member 'ABP_FocusOnTargetCamera_C::BP_FocusOnActor' has a wrong offset!");
static_assert(offsetof(ABP_FocusOnTargetCamera_C, BP_FocusOnCameraParams) == 0x0003D0, "Member 'ABP_FocusOnTargetCamera_C::BP_FocusOnCameraParams' has a wrong offset!");
static_assert(offsetof(ABP_FocusOnTargetCamera_C, BP_DefaultTransitionParams) == 0x000488, "Member 'ABP_FocusOnTargetCamera_C::BP_DefaultTransitionParams' has a wrong offset!");
static_assert(offsetof(ABP_FocusOnTargetCamera_C, BP_DefalutSpringArmAngle) == 0x0004A8, "Member 'ABP_FocusOnTargetCamera_C::BP_DefalutSpringArmAngle' has a wrong offset!");
static_assert(offsetof(ABP_FocusOnTargetCamera_C, BP_DefaultSpringArmLength) == 0x0004B0, "Member 'ABP_FocusOnTargetCamera_C::BP_DefaultSpringArmLength' has a wrong offset!");
static_assert(offsetof(ABP_FocusOnTargetCamera_C, BP_DefaultMaxAngularSpeed) == 0x0004B8, "Member 'ABP_FocusOnTargetCamera_C::BP_DefaultMaxAngularSpeed' has a wrong offset!");
static_assert(offsetof(ABP_FocusOnTargetCamera_C, BP_DebugDraw) == 0x0004C0, "Member 'ABP_FocusOnTargetCamera_C::BP_DebugDraw' has a wrong offset!");

}

