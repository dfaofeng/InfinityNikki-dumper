#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GeneralLocoRequestHandler

#include "Basic.hpp"

#include "BP_GeneralLocoRequestHandler_classes.hpp"
#include "BP_GeneralLocoRequestHandler_parameters.hpp"


namespace SDK
{

// Function BP_GeneralLocoRequestHandler.BP_GeneralLocoRequestHandler_C.BP_RequestTurnInPlaceByAngle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Angle                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bRet                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GeneralLocoRequestHandler_C::BP_RequestTurnInPlaceByAngle(double Angle, bool* bRet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GeneralLocoRequestHandler_C", "BP_RequestTurnInPlaceByAngle");

	Params::BP_GeneralLocoRequestHandler_C_BP_RequestTurnInPlaceByAngle Parms{};

	Parms.Angle = Angle;

	UObject::ProcessEvent(Func, &Parms);

	if (bRet != nullptr)
		*bRet = Parms.bRet;
}


// Function BP_GeneralLocoRequestHandler.BP_GeneralLocoRequestHandler_C.ExecuteUbergraph_BP_GeneralLocoRequestHandler
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GeneralLocoRequestHandler_C::ExecuteUbergraph_BP_GeneralLocoRequestHandler(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GeneralLocoRequestHandler_C", "ExecuteUbergraph_BP_GeneralLocoRequestHandler");

	Params::BP_GeneralLocoRequestHandler_C_ExecuteUbergraph_BP_GeneralLocoRequestHandler Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GeneralLocoRequestHandler.BP_GeneralLocoRequestHandler_C.RequestEnableInterruptAnimation
// (Event, Public, BlueprintEvent)

void UBP_GeneralLocoRequestHandler_C::RequestEnableInterruptAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GeneralLocoRequestHandler_C", "RequestEnableInterruptAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GeneralLocoRequestHandler.BP_GeneralLocoRequestHandler_C.RequestTurnInPlaceByAngle
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InAngleToTurn                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const TDelegate<void()>&                OnComplete                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// const TDelegate<void()>&                OnInterrupt                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_GeneralLocoRequestHandler_C::RequestTurnInPlaceByAngle(float InAngleToTurn, const TDelegate<void()>& OnComplete, const TDelegate<void()>& OnInterrupt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GeneralLocoRequestHandler_C", "RequestTurnInPlaceByAngle");

	Params::BP_GeneralLocoRequestHandler_C_RequestTurnInPlaceByAngle Parms{};

	Parms.InAngleToTurn = InAngleToTurn;
	Parms.OnComplete = OnComplete;
	Parms.OnInterrupt = OnInterrupt;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_GeneralLocoRequestHandler.BP_GeneralLocoRequestHandler_C.SetCanInterruptPendingStopState
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const bool                              bCanInterrupt                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GeneralLocoRequestHandler_C::SetCanInterruptPendingStopState(const bool bCanInterrupt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GeneralLocoRequestHandler_C", "SetCanInterruptPendingStopState");

	Params::BP_GeneralLocoRequestHandler_C_SetCanInterruptPendingStopState Parms{};

	Parms.bCanInterrupt = bCanInterrupt;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GeneralLocoRequestHandler.BP_GeneralLocoRequestHandler_C.CanEverTurnInPlace
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_GeneralLocoRequestHandler_C::CanEverTurnInPlace() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GeneralLocoRequestHandler_C", "CanEverTurnInPlace");

	Params::BP_GeneralLocoRequestHandler_C_CanEverTurnInPlace Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_GeneralLocoRequestHandler.BP_GeneralLocoRequestHandler_C.GetModuleName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UBP_GeneralLocoRequestHandler_C::GetModuleName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GeneralLocoRequestHandler_C", "GetModuleName");

	Params::BP_GeneralLocoRequestHandler_C_GetModuleName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

