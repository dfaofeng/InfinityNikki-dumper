#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Bldg_Bridge

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "BS_FluxBuoyancyPontoon_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Bldg_Bridge.BP_Bldg_Bridge_C
// 0x00A8 (0x0450 - 0x03A8)
class ABP_Bldg_Bridge_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          Box;                                               // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_BuoyancyNoWaterComponent_C*         BP_BuoyancyNoWaterComponent;                       // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPhysicsConstraintComponent*            PhysicsConstraint;                                 // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x03D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        PushForceFactor;                                   // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             InitTransform;                                     // 0x03E0(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FBS_FluxBuoyancyPontoon>        InitPontoons;                                      // 0x0440(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void BndEvt__BP_Buoyancy_Boat_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__BP_Buoyancy_Boat_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void ExecuteUbergraph_BP_Bldg_Bridge(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Bldg_Bridge_C">();
	}
	static class ABP_Bldg_Bridge_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Bldg_Bridge_C>();
	}
};
static_assert(alignof(ABP_Bldg_Bridge_C) == 0x000010, "Wrong alignment on ABP_Bldg_Bridge_C");
static_assert(sizeof(ABP_Bldg_Bridge_C) == 0x000450, "Wrong size on ABP_Bldg_Bridge_C");
static_assert(offsetof(ABP_Bldg_Bridge_C, UberGraphFrame) == 0x0003A8, "Member 'ABP_Bldg_Bridge_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Bldg_Bridge_C, Box) == 0x0003B0, "Member 'ABP_Bldg_Bridge_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_Bldg_Bridge_C, BP_BuoyancyNoWaterComponent) == 0x0003B8, "Member 'ABP_Bldg_Bridge_C::BP_BuoyancyNoWaterComponent' has a wrong offset!");
static_assert(offsetof(ABP_Bldg_Bridge_C, PhysicsConstraint) == 0x0003C0, "Member 'ABP_Bldg_Bridge_C::PhysicsConstraint' has a wrong offset!");
static_assert(offsetof(ABP_Bldg_Bridge_C, StaticMesh) == 0x0003C8, "Member 'ABP_Bldg_Bridge_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_Bldg_Bridge_C, DefaultSceneRoot) == 0x0003D0, "Member 'ABP_Bldg_Bridge_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Bldg_Bridge_C, PushForceFactor) == 0x0003D8, "Member 'ABP_Bldg_Bridge_C::PushForceFactor' has a wrong offset!");
static_assert(offsetof(ABP_Bldg_Bridge_C, InitTransform) == 0x0003E0, "Member 'ABP_Bldg_Bridge_C::InitTransform' has a wrong offset!");
static_assert(offsetof(ABP_Bldg_Bridge_C, InitPontoons) == 0x000440, "Member 'ABP_Bldg_Bridge_C::InitPontoons' has a wrong offset!");

}

