#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharacterGeneratorAssets

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "CharacterGeneratorAssets_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function CharacterGeneratorAssets.CharacterGenAsset.SaveCharacterGenAsset
// 0x0028 (0x0028 - 0x0000)
struct CharacterGenAsset_SaveCharacterGenAsset final
{
public:
	class FString                                 InPackagePathOuter;                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   InAssetName;                                       // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCheckDirty;                                       // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterGenAsset*                     ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterGenAsset_SaveCharacterGenAsset) == 0x000008, "Wrong alignment on CharacterGenAsset_SaveCharacterGenAsset");
static_assert(sizeof(CharacterGenAsset_SaveCharacterGenAsset) == 0x000028, "Wrong size on CharacterGenAsset_SaveCharacterGenAsset");
static_assert(offsetof(CharacterGenAsset_SaveCharacterGenAsset, InPackagePathOuter) == 0x000000, "Member 'CharacterGenAsset_SaveCharacterGenAsset::InPackagePathOuter' has a wrong offset!");
static_assert(offsetof(CharacterGenAsset_SaveCharacterGenAsset, InAssetName) == 0x000010, "Member 'CharacterGenAsset_SaveCharacterGenAsset::InAssetName' has a wrong offset!");
static_assert(offsetof(CharacterGenAsset_SaveCharacterGenAsset, bCheckDirty) == 0x000018, "Member 'CharacterGenAsset_SaveCharacterGenAsset::bCheckDirty' has a wrong offset!");
static_assert(offsetof(CharacterGenAsset_SaveCharacterGenAsset, ReturnValue) == 0x000020, "Member 'CharacterGenAsset_SaveCharacterGenAsset::ReturnValue' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.AddNewRowIntoDataTable
// 0x0020 (0x0020 - 0x0000)
struct CharacterPgBPFunctionLibrary_AddNewRowIntoDataTable final
{
public:
	class UDataTable*                             InDataTable;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   InRowName;                                         // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTableRowBase                          InRow;                                             // 0x0010(0x0008)(Parm, NativeAccessSpecifierPublic)
	bool                                          InReplaceExisted;                                  // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          InCheckoutAndSave;                                 // 0x0019(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x001A(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CharacterPgBPFunctionLibrary_AddNewRowIntoDataTable) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_AddNewRowIntoDataTable");
static_assert(sizeof(CharacterPgBPFunctionLibrary_AddNewRowIntoDataTable) == 0x000020, "Wrong size on CharacterPgBPFunctionLibrary_AddNewRowIntoDataTable");
static_assert(offsetof(CharacterPgBPFunctionLibrary_AddNewRowIntoDataTable, InDataTable) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_AddNewRowIntoDataTable::InDataTable' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_AddNewRowIntoDataTable, InRowName) == 0x000008, "Member 'CharacterPgBPFunctionLibrary_AddNewRowIntoDataTable::InRowName' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_AddNewRowIntoDataTable, InRow) == 0x000010, "Member 'CharacterPgBPFunctionLibrary_AddNewRowIntoDataTable::InRow' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_AddNewRowIntoDataTable, InReplaceExisted) == 0x000018, "Member 'CharacterPgBPFunctionLibrary_AddNewRowIntoDataTable::InReplaceExisted' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_AddNewRowIntoDataTable, InCheckoutAndSave) == 0x000019, "Member 'CharacterPgBPFunctionLibrary_AddNewRowIntoDataTable::InCheckoutAndSave' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_AddNewRowIntoDataTable, ReturnValue) == 0x00001A, "Member 'CharacterPgBPFunctionLibrary_AddNewRowIntoDataTable::ReturnValue' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.BeginDrawCanvasToRenderTarget2DArray
// 0x0038 (0x0038 - 0x0000)
struct CharacterPgBPFunctionLibrary_BeginDrawCanvasToRenderTarget2DArray final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextureRenderTarget2DArray*            TextureRenderTarget;                               // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvas*                                Canvas;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              Size;                                              // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDrawToRenderTarget2DArrayContext      Context;                                           // 0x0028(0x0010)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterPgBPFunctionLibrary_BeginDrawCanvasToRenderTarget2DArray) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_BeginDrawCanvasToRenderTarget2DArray");
static_assert(sizeof(CharacterPgBPFunctionLibrary_BeginDrawCanvasToRenderTarget2DArray) == 0x000038, "Wrong size on CharacterPgBPFunctionLibrary_BeginDrawCanvasToRenderTarget2DArray");
static_assert(offsetof(CharacterPgBPFunctionLibrary_BeginDrawCanvasToRenderTarget2DArray, WorldContextObject) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_BeginDrawCanvasToRenderTarget2DArray::WorldContextObject' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_BeginDrawCanvasToRenderTarget2DArray, TextureRenderTarget) == 0x000008, "Member 'CharacterPgBPFunctionLibrary_BeginDrawCanvasToRenderTarget2DArray::TextureRenderTarget' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_BeginDrawCanvasToRenderTarget2DArray, Canvas) == 0x000010, "Member 'CharacterPgBPFunctionLibrary_BeginDrawCanvasToRenderTarget2DArray::Canvas' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_BeginDrawCanvasToRenderTarget2DArray, Size) == 0x000018, "Member 'CharacterPgBPFunctionLibrary_BeginDrawCanvasToRenderTarget2DArray::Size' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_BeginDrawCanvasToRenderTarget2DArray, Context) == 0x000028, "Member 'CharacterPgBPFunctionLibrary_BeginDrawCanvasToRenderTarget2DArray::Context' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.CharacterPgGenAssetToReset
// 0x0028 (0x0028 - 0x0000)
struct CharacterPgBPFunctionLibrary_CharacterPgGenAssetToReset final
{
public:
	class UCharacterPGComponent*                  InPgComponent;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                 InMeshComponent;                                   // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                 InMergedComponent;                                 // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UMaterialInterface*               SkipOverrideMaterial;                              // 0x0018(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMergeMesh;                                        // 0x0020(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CharacterPgBPFunctionLibrary_CharacterPgGenAssetToReset) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_CharacterPgGenAssetToReset");
static_assert(sizeof(CharacterPgBPFunctionLibrary_CharacterPgGenAssetToReset) == 0x000028, "Wrong size on CharacterPgBPFunctionLibrary_CharacterPgGenAssetToReset");
static_assert(offsetof(CharacterPgBPFunctionLibrary_CharacterPgGenAssetToReset, InPgComponent) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_CharacterPgGenAssetToReset::InPgComponent' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_CharacterPgGenAssetToReset, InMeshComponent) == 0x000008, "Member 'CharacterPgBPFunctionLibrary_CharacterPgGenAssetToReset::InMeshComponent' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_CharacterPgGenAssetToReset, InMergedComponent) == 0x000010, "Member 'CharacterPgBPFunctionLibrary_CharacterPgGenAssetToReset::InMergedComponent' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_CharacterPgGenAssetToReset, SkipOverrideMaterial) == 0x000018, "Member 'CharacterPgBPFunctionLibrary_CharacterPgGenAssetToReset::SkipOverrideMaterial' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_CharacterPgGenAssetToReset, bMergeMesh) == 0x000020, "Member 'CharacterPgBPFunctionLibrary_CharacterPgGenAssetToReset::bMergeMesh' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.CopyAssetUserDataBetweenSkeletalMesh
// 0x0010 (0x0010 - 0x0000)
struct CharacterPgBPFunctionLibrary_CopyAssetUserDataBetweenSkeletalMesh final
{
public:
	class USkeletalMesh*                          SrcSkeletalMesh;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                          DstSkeletalMesh;                                   // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterPgBPFunctionLibrary_CopyAssetUserDataBetweenSkeletalMesh) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_CopyAssetUserDataBetweenSkeletalMesh");
static_assert(sizeof(CharacterPgBPFunctionLibrary_CopyAssetUserDataBetweenSkeletalMesh) == 0x000010, "Wrong size on CharacterPgBPFunctionLibrary_CopyAssetUserDataBetweenSkeletalMesh");
static_assert(offsetof(CharacterPgBPFunctionLibrary_CopyAssetUserDataBetweenSkeletalMesh, SrcSkeletalMesh) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_CopyAssetUserDataBetweenSkeletalMesh::SrcSkeletalMesh' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_CopyAssetUserDataBetweenSkeletalMesh, DstSkeletalMesh) == 0x000008, "Member 'CharacterPgBPFunctionLibrary_CopyAssetUserDataBetweenSkeletalMesh::DstSkeletalMesh' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.CopyStringToClipboard
// 0x0010 (0x0010 - 0x0000)
struct CharacterPgBPFunctionLibrary_CopyStringToClipboard final
{
public:
	class FString                                 InString;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterPgBPFunctionLibrary_CopyStringToClipboard) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_CopyStringToClipboard");
static_assert(sizeof(CharacterPgBPFunctionLibrary_CopyStringToClipboard) == 0x000010, "Wrong size on CharacterPgBPFunctionLibrary_CopyStringToClipboard");
static_assert(offsetof(CharacterPgBPFunctionLibrary_CopyStringToClipboard, InString) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_CopyStringToClipboard::InString' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.CreateMPT
// 0x0028 (0x0028 - 0x0000)
struct CharacterPgBPFunctionLibrary_CreateMPT final
{
public:
	class FString                                 InPackagePath;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   InAssetName;                                       // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldSave;                                       // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialParameterTexture2D*            ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterPgBPFunctionLibrary_CreateMPT) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_CreateMPT");
static_assert(sizeof(CharacterPgBPFunctionLibrary_CreateMPT) == 0x000028, "Wrong size on CharacterPgBPFunctionLibrary_CreateMPT");
static_assert(offsetof(CharacterPgBPFunctionLibrary_CreateMPT, InPackagePath) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_CreateMPT::InPackagePath' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_CreateMPT, InAssetName) == 0x000010, "Member 'CharacterPgBPFunctionLibrary_CreateMPT::InAssetName' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_CreateMPT, bShouldSave) == 0x000018, "Member 'CharacterPgBPFunctionLibrary_CreateMPT::bShouldSave' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_CreateMPT, ReturnValue) == 0x000020, "Member 'CharacterPgBPFunctionLibrary_CreateMPT::ReturnValue' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.CreateTexture2D
// 0x0038 (0x0038 - 0x0000)
struct CharacterPgBPFunctionLibrary_CreateTexture2D final
{
public:
	int32                                         SrcWidth;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SrcHeight;                                         // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FColor>                         SrcData;                                           // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class UObject*                                Outer_0;                                           // 0x0018(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Name_0;                                            // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterPgBPFunctionLibrary_CreateTexture2D) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_CreateTexture2D");
static_assert(sizeof(CharacterPgBPFunctionLibrary_CreateTexture2D) == 0x000038, "Wrong size on CharacterPgBPFunctionLibrary_CreateTexture2D");
static_assert(offsetof(CharacterPgBPFunctionLibrary_CreateTexture2D, SrcWidth) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_CreateTexture2D::SrcWidth' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_CreateTexture2D, SrcHeight) == 0x000004, "Member 'CharacterPgBPFunctionLibrary_CreateTexture2D::SrcHeight' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_CreateTexture2D, SrcData) == 0x000008, "Member 'CharacterPgBPFunctionLibrary_CreateTexture2D::SrcData' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_CreateTexture2D, Outer_0) == 0x000018, "Member 'CharacterPgBPFunctionLibrary_CreateTexture2D::Outer_0' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_CreateTexture2D, Name_0) == 0x000020, "Member 'CharacterPgBPFunctionLibrary_CreateTexture2D::Name_0' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_CreateTexture2D, ReturnValue) == 0x000030, "Member 'CharacterPgBPFunctionLibrary_CreateTexture2D::ReturnValue' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.DestroyActorComponent
// 0x0008 (0x0008 - 0x0000)
struct CharacterPgBPFunctionLibrary_DestroyActorComponent final
{
public:
	class UActorComponent*                        Component;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterPgBPFunctionLibrary_DestroyActorComponent) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_DestroyActorComponent");
static_assert(sizeof(CharacterPgBPFunctionLibrary_DestroyActorComponent) == 0x000008, "Wrong size on CharacterPgBPFunctionLibrary_DestroyActorComponent");
static_assert(offsetof(CharacterPgBPFunctionLibrary_DestroyActorComponent, Component) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_DestroyActorComponent::Component' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.DuplicateAsset
// 0x0030 (0x0030 - 0x0000)
struct CharacterPgBPFunctionLibrary_DuplicateAsset final
{
public:
	class UObject*                                SourceObject;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PackagePath;                                       // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   AssetName;                                         // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldSave;                                       // 0x0020(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                ReturnValue;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterPgBPFunctionLibrary_DuplicateAsset) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_DuplicateAsset");
static_assert(sizeof(CharacterPgBPFunctionLibrary_DuplicateAsset) == 0x000030, "Wrong size on CharacterPgBPFunctionLibrary_DuplicateAsset");
static_assert(offsetof(CharacterPgBPFunctionLibrary_DuplicateAsset, SourceObject) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_DuplicateAsset::SourceObject' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_DuplicateAsset, PackagePath) == 0x000008, "Member 'CharacterPgBPFunctionLibrary_DuplicateAsset::PackagePath' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_DuplicateAsset, AssetName) == 0x000018, "Member 'CharacterPgBPFunctionLibrary_DuplicateAsset::AssetName' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_DuplicateAsset, bShouldSave) == 0x000020, "Member 'CharacterPgBPFunctionLibrary_DuplicateAsset::bShouldSave' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_DuplicateAsset, ReturnValue) == 0x000028, "Member 'CharacterPgBPFunctionLibrary_DuplicateAsset::ReturnValue' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.EndDrawCanvasToRenderTarget2DArray
// 0x0018 (0x0018 - 0x0000)
struct CharacterPgBPFunctionLibrary_EndDrawCanvasToRenderTarget2DArray final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDrawToRenderTarget2DArrayContext      Context;                                           // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterPgBPFunctionLibrary_EndDrawCanvasToRenderTarget2DArray) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_EndDrawCanvasToRenderTarget2DArray");
static_assert(sizeof(CharacterPgBPFunctionLibrary_EndDrawCanvasToRenderTarget2DArray) == 0x000018, "Wrong size on CharacterPgBPFunctionLibrary_EndDrawCanvasToRenderTarget2DArray");
static_assert(offsetof(CharacterPgBPFunctionLibrary_EndDrawCanvasToRenderTarget2DArray, WorldContextObject) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_EndDrawCanvasToRenderTarget2DArray::WorldContextObject' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_EndDrawCanvasToRenderTarget2DArray, Context) == 0x000008, "Member 'CharacterPgBPFunctionLibrary_EndDrawCanvasToRenderTarget2DArray::Context' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.GetAssetUserData
// 0x0018 (0x0018 - 0x0000)
struct CharacterPgBPFunctionLibrary_GetAssetUserData final
{
public:
	class UObject*                                InObject;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UAssetUserData>             InUserDataClass;                                   // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAssetUserData*                         ReturnValue;                                       // 0x0010(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterPgBPFunctionLibrary_GetAssetUserData) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_GetAssetUserData");
static_assert(sizeof(CharacterPgBPFunctionLibrary_GetAssetUserData) == 0x000018, "Wrong size on CharacterPgBPFunctionLibrary_GetAssetUserData");
static_assert(offsetof(CharacterPgBPFunctionLibrary_GetAssetUserData, InObject) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_GetAssetUserData::InObject' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_GetAssetUserData, InUserDataClass) == 0x000008, "Member 'CharacterPgBPFunctionLibrary_GetAssetUserData::InUserDataClass' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_GetAssetUserData, ReturnValue) == 0x000010, "Member 'CharacterPgBPFunctionLibrary_GetAssetUserData::ReturnValue' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.GetAssetUserDataInMaterial
// 0x0018 (0x0018 - 0x0000)
struct CharacterPgBPFunctionLibrary_GetAssetUserDataInMaterial final
{
public:
	class UMaterialInterface*                     InMaterialInterface;                               // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UAssetUserData>             InUserDataClass;                                   // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAssetUserData*                         ReturnValue;                                       // 0x0010(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterPgBPFunctionLibrary_GetAssetUserDataInMaterial) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_GetAssetUserDataInMaterial");
static_assert(sizeof(CharacterPgBPFunctionLibrary_GetAssetUserDataInMaterial) == 0x000018, "Wrong size on CharacterPgBPFunctionLibrary_GetAssetUserDataInMaterial");
static_assert(offsetof(CharacterPgBPFunctionLibrary_GetAssetUserDataInMaterial, InMaterialInterface) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_GetAssetUserDataInMaterial::InMaterialInterface' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_GetAssetUserDataInMaterial, InUserDataClass) == 0x000008, "Member 'CharacterPgBPFunctionLibrary_GetAssetUserDataInMaterial::InUserDataClass' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_GetAssetUserDataInMaterial, ReturnValue) == 0x000010, "Member 'CharacterPgBPFunctionLibrary_GetAssetUserDataInMaterial::ReturnValue' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.GetCharacterBoneLocation
// 0x0028 (0x0028 - 0x0000)
struct CharacterPgBPFunctionLibrary_GetCharacterBoneLocation final
{
public:
	class USkeletalMeshComponent*                 InMeshComponent;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   InBoneName;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterPgBPFunctionLibrary_GetCharacterBoneLocation) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_GetCharacterBoneLocation");
static_assert(sizeof(CharacterPgBPFunctionLibrary_GetCharacterBoneLocation) == 0x000028, "Wrong size on CharacterPgBPFunctionLibrary_GetCharacterBoneLocation");
static_assert(offsetof(CharacterPgBPFunctionLibrary_GetCharacterBoneLocation, InMeshComponent) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_GetCharacterBoneLocation::InMeshComponent' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_GetCharacterBoneLocation, InBoneName) == 0x000008, "Member 'CharacterPgBPFunctionLibrary_GetCharacterBoneLocation::InBoneName' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_GetCharacterBoneLocation, ReturnValue) == 0x000010, "Member 'CharacterPgBPFunctionLibrary_GetCharacterBoneLocation::ReturnValue' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.GetCharacterHeightFromVertex
// 0x0010 (0x0010 - 0x0000)
struct CharacterPgBPFunctionLibrary_GetCharacterHeightFromVertex final
{
public:
	class USkeletalMeshComponent*                 InMeshComponent;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CharacterPgBPFunctionLibrary_GetCharacterHeightFromVertex) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_GetCharacterHeightFromVertex");
static_assert(sizeof(CharacterPgBPFunctionLibrary_GetCharacterHeightFromVertex) == 0x000010, "Wrong size on CharacterPgBPFunctionLibrary_GetCharacterHeightFromVertex");
static_assert(offsetof(CharacterPgBPFunctionLibrary_GetCharacterHeightFromVertex, InMeshComponent) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_GetCharacterHeightFromVertex::InMeshComponent' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_GetCharacterHeightFromVertex, ReturnValue) == 0x000008, "Member 'CharacterPgBPFunctionLibrary_GetCharacterHeightFromVertex::ReturnValue' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.GetCollectionNames
// 0x0010 (0x0010 - 0x0000)
struct CharacterPgBPFunctionLibrary_GetCollectionNames final
{
public:
	TArray<class FName>                           OutCollectionNames;                                // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterPgBPFunctionLibrary_GetCollectionNames) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_GetCollectionNames");
static_assert(sizeof(CharacterPgBPFunctionLibrary_GetCollectionNames) == 0x000010, "Wrong size on CharacterPgBPFunctionLibrary_GetCollectionNames");
static_assert(offsetof(CharacterPgBPFunctionLibrary_GetCollectionNames, OutCollectionNames) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_GetCollectionNames::OutCollectionNames' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.GetCollectionsContainingObject
// 0x0030 (0x0030 - 0x0000)
struct CharacterPgBPFunctionLibrary_GetCollectionsContainingObject final
{
public:
	struct FSoftObjectPath                        InSoftObjectPath;                                  // 0x0000(0x0020)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           OutCollectionNames;                                // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterPgBPFunctionLibrary_GetCollectionsContainingObject) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_GetCollectionsContainingObject");
static_assert(sizeof(CharacterPgBPFunctionLibrary_GetCollectionsContainingObject) == 0x000030, "Wrong size on CharacterPgBPFunctionLibrary_GetCollectionsContainingObject");
static_assert(offsetof(CharacterPgBPFunctionLibrary_GetCollectionsContainingObject, InSoftObjectPath) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_GetCollectionsContainingObject::InSoftObjectPath' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_GetCollectionsContainingObject, OutCollectionNames) == 0x000020, "Member 'CharacterPgBPFunctionLibrary_GetCollectionsContainingObject::OutCollectionNames' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.GetColorTexturePixelData
// 0x0018 (0x0018 - 0x0000)
struct CharacterPgBPFunctionLibrary_GetColorTexturePixelData final
{
public:
	int32                                         PixelX;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PixelY;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             InTexture;                                         // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CharacterPgBPFunctionLibrary_GetColorTexturePixelData) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_GetColorTexturePixelData");
static_assert(sizeof(CharacterPgBPFunctionLibrary_GetColorTexturePixelData) == 0x000018, "Wrong size on CharacterPgBPFunctionLibrary_GetColorTexturePixelData");
static_assert(offsetof(CharacterPgBPFunctionLibrary_GetColorTexturePixelData, PixelX) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_GetColorTexturePixelData::PixelX' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_GetColorTexturePixelData, PixelY) == 0x000004, "Member 'CharacterPgBPFunctionLibrary_GetColorTexturePixelData::PixelY' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_GetColorTexturePixelData, InTexture) == 0x000008, "Member 'CharacterPgBPFunctionLibrary_GetColorTexturePixelData::InTexture' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_GetColorTexturePixelData, ReturnValue) == 0x000010, "Member 'CharacterPgBPFunctionLibrary_GetColorTexturePixelData::ReturnValue' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.GetDebugPrimitiveGPUTime
// 0x0004 (0x0004 - 0x0000)
struct CharacterPgBPFunctionLibrary_GetDebugPrimitiveGPUTime final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterPgBPFunctionLibrary_GetDebugPrimitiveGPUTime) == 0x000004, "Wrong alignment on CharacterPgBPFunctionLibrary_GetDebugPrimitiveGPUTime");
static_assert(sizeof(CharacterPgBPFunctionLibrary_GetDebugPrimitiveGPUTime) == 0x000004, "Wrong size on CharacterPgBPFunctionLibrary_GetDebugPrimitiveGPUTime");
static_assert(offsetof(CharacterPgBPFunctionLibrary_GetDebugPrimitiveGPUTime, ReturnValue) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_GetDebugPrimitiveGPUTime::ReturnValue' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.GetNumberFromString
// 0x0018 (0x0018 - 0x0000)
struct CharacterPgBPFunctionLibrary_GetNumberFromString final
{
public:
	class FString                                 InStr;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CharacterPgBPFunctionLibrary_GetNumberFromString) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_GetNumberFromString");
static_assert(sizeof(CharacterPgBPFunctionLibrary_GetNumberFromString) == 0x000018, "Wrong size on CharacterPgBPFunctionLibrary_GetNumberFromString");
static_assert(offsetof(CharacterPgBPFunctionLibrary_GetNumberFromString, InStr) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_GetNumberFromString::InStr' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_GetNumberFromString, ReturnValue) == 0x000010, "Member 'CharacterPgBPFunctionLibrary_GetNumberFromString::ReturnValue' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.GetObjectThumbnailTexture2D
// 0x0010 (0x0010 - 0x0000)
struct CharacterPgBPFunctionLibrary_GetObjectThumbnailTexture2D final
{
public:
	class UObject*                                InObject;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterPgBPFunctionLibrary_GetObjectThumbnailTexture2D) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_GetObjectThumbnailTexture2D");
static_assert(sizeof(CharacterPgBPFunctionLibrary_GetObjectThumbnailTexture2D) == 0x000010, "Wrong size on CharacterPgBPFunctionLibrary_GetObjectThumbnailTexture2D");
static_assert(offsetof(CharacterPgBPFunctionLibrary_GetObjectThumbnailTexture2D, InObject) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_GetObjectThumbnailTexture2D::InObject' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_GetObjectThumbnailTexture2D, ReturnValue) == 0x000008, "Member 'CharacterPgBPFunctionLibrary_GetObjectThumbnailTexture2D::ReturnValue' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.GetPartIDByName
// 0x0018 (0x0018 - 0x0000)
struct CharacterPgBPFunctionLibrary_GetPartIDByName final
{
public:
	class FString                                 PartName;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CharacterPgBPFunctionLibrary_GetPartIDByName) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_GetPartIDByName");
static_assert(sizeof(CharacterPgBPFunctionLibrary_GetPartIDByName) == 0x000018, "Wrong size on CharacterPgBPFunctionLibrary_GetPartIDByName");
static_assert(offsetof(CharacterPgBPFunctionLibrary_GetPartIDByName, PartName) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_GetPartIDByName::PartName' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_GetPartIDByName, ReturnValue) == 0x000010, "Member 'CharacterPgBPFunctionLibrary_GetPartIDByName::ReturnValue' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.GetSelectedActors
// 0x0010 (0x0010 - 0x0000)
struct CharacterPgBPFunctionLibrary_GetSelectedActors final
{
public:
	TArray<class AActor*>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterPgBPFunctionLibrary_GetSelectedActors) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_GetSelectedActors");
static_assert(sizeof(CharacterPgBPFunctionLibrary_GetSelectedActors) == 0x000010, "Wrong size on CharacterPgBPFunctionLibrary_GetSelectedActors");
static_assert(offsetof(CharacterPgBPFunctionLibrary_GetSelectedActors, ReturnValue) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_GetSelectedActors::ReturnValue' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.GetSkeletonOfAnimSequence
// 0x0010 (0x0010 - 0x0000)
struct CharacterPgBPFunctionLibrary_GetSkeletonOfAnimSequence final
{
public:
	class UAnimSequence*                          AnimSequence;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeleton*                              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterPgBPFunctionLibrary_GetSkeletonOfAnimSequence) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_GetSkeletonOfAnimSequence");
static_assert(sizeof(CharacterPgBPFunctionLibrary_GetSkeletonOfAnimSequence) == 0x000010, "Wrong size on CharacterPgBPFunctionLibrary_GetSkeletonOfAnimSequence");
static_assert(offsetof(CharacterPgBPFunctionLibrary_GetSkeletonOfAnimSequence, AnimSequence) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_GetSkeletonOfAnimSequence::AnimSequence' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_GetSkeletonOfAnimSequence, ReturnValue) == 0x000008, "Member 'CharacterPgBPFunctionLibrary_GetSkeletonOfAnimSequence::ReturnValue' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.GetStaticSwitchParameterValue
// 0x0018 (0x0018 - 0x0000)
struct CharacterPgBPFunctionLibrary_GetStaticSwitchParameterValue final
{
public:
	class UMaterialInstance*                      Instance;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ParameterName;                                     // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMaterialParameterAssociation                 Association;                                       // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CharacterPgBPFunctionLibrary_GetStaticSwitchParameterValue) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_GetStaticSwitchParameterValue");
static_assert(sizeof(CharacterPgBPFunctionLibrary_GetStaticSwitchParameterValue) == 0x000018, "Wrong size on CharacterPgBPFunctionLibrary_GetStaticSwitchParameterValue");
static_assert(offsetof(CharacterPgBPFunctionLibrary_GetStaticSwitchParameterValue, Instance) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_GetStaticSwitchParameterValue::Instance' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_GetStaticSwitchParameterValue, ParameterName) == 0x000008, "Member 'CharacterPgBPFunctionLibrary_GetStaticSwitchParameterValue::ParameterName' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_GetStaticSwitchParameterValue, Association) == 0x000010, "Member 'CharacterPgBPFunctionLibrary_GetStaticSwitchParameterValue::Association' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_GetStaticSwitchParameterValue, ReturnValue) == 0x000011, "Member 'CharacterPgBPFunctionLibrary_GetStaticSwitchParameterValue::ReturnValue' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.GetStatisticsInfo
// 0x0080 (0x0080 - 0x0000)
struct CharacterPgBPFunctionLibrary_GetStatisticsInfo final
{
public:
	class USkeletalMeshComponent*                 InMeshComponent;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           InExcludeTags;                                     // 0x0008(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UTexture*>                       OutTextureMoreInfo;                                // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          IncludeChildren;                                   // 0x0028(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ECharacterCreatorStatisticType, float>   ReturnValue;                                       // 0x0030(0x0050)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterPgBPFunctionLibrary_GetStatisticsInfo) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_GetStatisticsInfo");
static_assert(sizeof(CharacterPgBPFunctionLibrary_GetStatisticsInfo) == 0x000080, "Wrong size on CharacterPgBPFunctionLibrary_GetStatisticsInfo");
static_assert(offsetof(CharacterPgBPFunctionLibrary_GetStatisticsInfo, InMeshComponent) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_GetStatisticsInfo::InMeshComponent' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_GetStatisticsInfo, InExcludeTags) == 0x000008, "Member 'CharacterPgBPFunctionLibrary_GetStatisticsInfo::InExcludeTags' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_GetStatisticsInfo, OutTextureMoreInfo) == 0x000018, "Member 'CharacterPgBPFunctionLibrary_GetStatisticsInfo::OutTextureMoreInfo' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_GetStatisticsInfo, IncludeChildren) == 0x000028, "Member 'CharacterPgBPFunctionLibrary_GetStatisticsInfo::IncludeChildren' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_GetStatisticsInfo, ReturnValue) == 0x000030, "Member 'CharacterPgBPFunctionLibrary_GetStatisticsInfo::ReturnValue' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.GetTexture2DArray
// 0x0018 (0x0018 - 0x0000)
struct CharacterPgBPFunctionLibrary_GetTexture2DArray final
{
public:
	class UTexture2DArray*                        TextureArray;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UTexture2D*>                     ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterPgBPFunctionLibrary_GetTexture2DArray) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_GetTexture2DArray");
static_assert(sizeof(CharacterPgBPFunctionLibrary_GetTexture2DArray) == 0x000018, "Wrong size on CharacterPgBPFunctionLibrary_GetTexture2DArray");
static_assert(offsetof(CharacterPgBPFunctionLibrary_GetTexture2DArray, TextureArray) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_GetTexture2DArray::TextureArray' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_GetTexture2DArray, ReturnValue) == 0x000008, "Member 'CharacterPgBPFunctionLibrary_GetTexture2DArray::ReturnValue' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.GetVertexColorFromID
// 0x0008 (0x0008 - 0x0000)
struct CharacterPgBPFunctionLibrary_GetVertexColorFromID final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterPgBPFunctionLibrary_GetVertexColorFromID) == 0x000004, "Wrong alignment on CharacterPgBPFunctionLibrary_GetVertexColorFromID");
static_assert(sizeof(CharacterPgBPFunctionLibrary_GetVertexColorFromID) == 0x000008, "Wrong size on CharacterPgBPFunctionLibrary_GetVertexColorFromID");
static_assert(offsetof(CharacterPgBPFunctionLibrary_GetVertexColorFromID, ID) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_GetVertexColorFromID::ID' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_GetVertexColorFromID, ReturnValue) == 0x000004, "Member 'CharacterPgBPFunctionLibrary_GetVertexColorFromID::ReturnValue' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.IndexColorBlock
// 0x0010 (0x0010 - 0x0000)
struct CharacterPgBPFunctionLibrary_IndexColorBlock final
{
public:
	class UTexture2D*                             InTexture;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Gradual;                                           // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MinLength;                                         // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterPgBPFunctionLibrary_IndexColorBlock) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_IndexColorBlock");
static_assert(sizeof(CharacterPgBPFunctionLibrary_IndexColorBlock) == 0x000010, "Wrong size on CharacterPgBPFunctionLibrary_IndexColorBlock");
static_assert(offsetof(CharacterPgBPFunctionLibrary_IndexColorBlock, InTexture) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_IndexColorBlock::InTexture' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_IndexColorBlock, Gradual) == 0x000008, "Member 'CharacterPgBPFunctionLibrary_IndexColorBlock::Gradual' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_IndexColorBlock, MinLength) == 0x00000C, "Member 'CharacterPgBPFunctionLibrary_IndexColorBlock::MinLength' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.IsSkeletalMeshModelValid
// 0x0010 (0x0010 - 0x0000)
struct CharacterPgBPFunctionLibrary_IsSkeletalMeshModelValid final
{
public:
	class USkeletalMesh*                          SkeletalMesh;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CharacterPgBPFunctionLibrary_IsSkeletalMeshModelValid) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_IsSkeletalMeshModelValid");
static_assert(sizeof(CharacterPgBPFunctionLibrary_IsSkeletalMeshModelValid) == 0x000010, "Wrong size on CharacterPgBPFunctionLibrary_IsSkeletalMeshModelValid");
static_assert(offsetof(CharacterPgBPFunctionLibrary_IsSkeletalMeshModelValid, SkeletalMesh) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_IsSkeletalMeshModelValid::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_IsSkeletalMeshModelValid, ReturnValue) == 0x000008, "Member 'CharacterPgBPFunctionLibrary_IsSkeletalMeshModelValid::ReturnValue' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.MoveLevelActorsToPersistentLevel
// 0x0008 (0x0008 - 0x0000)
struct CharacterPgBPFunctionLibrary_MoveLevelActorsToPersistentLevel final
{
public:
	class ULevel*                                 Level;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterPgBPFunctionLibrary_MoveLevelActorsToPersistentLevel) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_MoveLevelActorsToPersistentLevel");
static_assert(sizeof(CharacterPgBPFunctionLibrary_MoveLevelActorsToPersistentLevel) == 0x000008, "Wrong size on CharacterPgBPFunctionLibrary_MoveLevelActorsToPersistentLevel");
static_assert(offsetof(CharacterPgBPFunctionLibrary_MoveLevelActorsToPersistentLevel, Level) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_MoveLevelActorsToPersistentLevel::Level' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.OverrideRefPoseFromMeshes
// 0x0018 (0x0018 - 0x0000)
struct CharacterPgBPFunctionLibrary_OverrideRefPoseFromMeshes final
{
public:
	class USkeletalMeshComponent*                 InMeshComponent;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class USkeletalMesh*>                  InSkeletalMeshes;                                  // 0x0008(0x0010)(ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterPgBPFunctionLibrary_OverrideRefPoseFromMeshes) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_OverrideRefPoseFromMeshes");
static_assert(sizeof(CharacterPgBPFunctionLibrary_OverrideRefPoseFromMeshes) == 0x000018, "Wrong size on CharacterPgBPFunctionLibrary_OverrideRefPoseFromMeshes");
static_assert(offsetof(CharacterPgBPFunctionLibrary_OverrideRefPoseFromMeshes, InMeshComponent) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_OverrideRefPoseFromMeshes::InMeshComponent' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_OverrideRefPoseFromMeshes, InSkeletalMeshes) == 0x000008, "Member 'CharacterPgBPFunctionLibrary_OverrideRefPoseFromMeshes::InSkeletalMeshes' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.PromptForCheckoutAndSaveAssets
// 0x0018 (0x0018 - 0x0000)
struct CharacterPgBPFunctionLibrary_PromptForCheckoutAndSaveAssets final
{
public:
	TArray<class UObject*>                        AssetsToSave;                                      // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CharacterPgBPFunctionLibrary_PromptForCheckoutAndSaveAssets) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_PromptForCheckoutAndSaveAssets");
static_assert(sizeof(CharacterPgBPFunctionLibrary_PromptForCheckoutAndSaveAssets) == 0x000018, "Wrong size on CharacterPgBPFunctionLibrary_PromptForCheckoutAndSaveAssets");
static_assert(offsetof(CharacterPgBPFunctionLibrary_PromptForCheckoutAndSaveAssets, AssetsToSave) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_PromptForCheckoutAndSaveAssets::AssetsToSave' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_PromptForCheckoutAndSaveAssets, ReturnValue) == 0x000010, "Member 'CharacterPgBPFunctionLibrary_PromptForCheckoutAndSaveAssets::ReturnValue' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.ResizeRenderTarget2DArray
// 0x0010 (0x0010 - 0x0000)
struct CharacterPgBPFunctionLibrary_ResizeRenderTarget2DArray final
{
public:
	class UTextureRenderTarget2DArray*            RenderTarget;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InSizeX;                                           // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InSizeY;                                           // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterPgBPFunctionLibrary_ResizeRenderTarget2DArray) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_ResizeRenderTarget2DArray");
static_assert(sizeof(CharacterPgBPFunctionLibrary_ResizeRenderTarget2DArray) == 0x000010, "Wrong size on CharacterPgBPFunctionLibrary_ResizeRenderTarget2DArray");
static_assert(offsetof(CharacterPgBPFunctionLibrary_ResizeRenderTarget2DArray, RenderTarget) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_ResizeRenderTarget2DArray::RenderTarget' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_ResizeRenderTarget2DArray, InSizeX) == 0x000008, "Member 'CharacterPgBPFunctionLibrary_ResizeRenderTarget2DArray::InSizeX' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_ResizeRenderTarget2DArray, InSizeY) == 0x00000C, "Member 'CharacterPgBPFunctionLibrary_ResizeRenderTarget2DArray::InSizeY' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.SaveAsset
// 0x0010 (0x0010 - 0x0000)
struct CharacterPgBPFunctionLibrary_SaveAsset final
{
public:
	const class UObject*                          AssetToSave;                                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CharacterPgBPFunctionLibrary_SaveAsset) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_SaveAsset");
static_assert(sizeof(CharacterPgBPFunctionLibrary_SaveAsset) == 0x000010, "Wrong size on CharacterPgBPFunctionLibrary_SaveAsset");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SaveAsset, AssetToSave) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_SaveAsset::AssetToSave' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SaveAsset, ReturnValue) == 0x000008, "Member 'CharacterPgBPFunctionLibrary_SaveAsset::ReturnValue' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.SaveCharacterGenAssetWithDialogue
// 0x0020 (0x0020 - 0x0000)
struct CharacterPgBPFunctionLibrary_SaveCharacterGenAssetWithDialogue final
{
public:
	class UCharacterGenAsset*                     ToSaveAsset;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InDefaultPath;                                     // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCharacterGenAsset*                     ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterPgBPFunctionLibrary_SaveCharacterGenAssetWithDialogue) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_SaveCharacterGenAssetWithDialogue");
static_assert(sizeof(CharacterPgBPFunctionLibrary_SaveCharacterGenAssetWithDialogue) == 0x000020, "Wrong size on CharacterPgBPFunctionLibrary_SaveCharacterGenAssetWithDialogue");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SaveCharacterGenAssetWithDialogue, ToSaveAsset) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_SaveCharacterGenAssetWithDialogue::ToSaveAsset' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SaveCharacterGenAssetWithDialogue, InDefaultPath) == 0x000008, "Member 'CharacterPgBPFunctionLibrary_SaveCharacterGenAssetWithDialogue::InDefaultPath' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SaveCharacterGenAssetWithDialogue, ReturnValue) == 0x000018, "Member 'CharacterPgBPFunctionLibrary_SaveCharacterGenAssetWithDialogue::ReturnValue' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.SaveColorBlockTextureWithDialogue
// 0x0028 (0x0028 - 0x0000)
struct CharacterPgBPFunctionLibrary_SaveColorBlockTextureWithDialogue final
{
public:
	class UTextureRenderTarget2DArray*            RenderTarget;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InDefaultPath;                                     // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterPgBPFunctionLibrary_SaveColorBlockTextureWithDialogue) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_SaveColorBlockTextureWithDialogue");
static_assert(sizeof(CharacterPgBPFunctionLibrary_SaveColorBlockTextureWithDialogue) == 0x000028, "Wrong size on CharacterPgBPFunctionLibrary_SaveColorBlockTextureWithDialogue");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SaveColorBlockTextureWithDialogue, RenderTarget) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_SaveColorBlockTextureWithDialogue::RenderTarget' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SaveColorBlockTextureWithDialogue, InDefaultPath) == 0x000008, "Member 'CharacterPgBPFunctionLibrary_SaveColorBlockTextureWithDialogue::InDefaultPath' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SaveColorBlockTextureWithDialogue, ReturnValue) == 0x000018, "Member 'CharacterPgBPFunctionLibrary_SaveColorBlockTextureWithDialogue::ReturnValue' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.SaveNpcEcologyLevelWithDialogue
// 0x0030 (0x0030 - 0x0000)
struct CharacterPgBPFunctionLibrary_SaveNpcEcologyLevelWithDialogue final
{
public:
	TArray<class AActor*>                         Actors;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                 InDefaultPath;                                     // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterPgBPFunctionLibrary_SaveNpcEcologyLevelWithDialogue) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_SaveNpcEcologyLevelWithDialogue");
static_assert(sizeof(CharacterPgBPFunctionLibrary_SaveNpcEcologyLevelWithDialogue) == 0x000030, "Wrong size on CharacterPgBPFunctionLibrary_SaveNpcEcologyLevelWithDialogue");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SaveNpcEcologyLevelWithDialogue, Actors) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_SaveNpcEcologyLevelWithDialogue::Actors' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SaveNpcEcologyLevelWithDialogue, InDefaultPath) == 0x000010, "Member 'CharacterPgBPFunctionLibrary_SaveNpcEcologyLevelWithDialogue::InDefaultPath' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SaveNpcEcologyLevelWithDialogue, ReturnValue) == 0x000020, "Member 'CharacterPgBPFunctionLibrary_SaveNpcEcologyLevelWithDialogue::ReturnValue' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.SaveSkeletonMorphDetail
// 0x0010 (0x0010 - 0x0000)
struct CharacterPgBPFunctionLibrary_SaveSkeletonMorphDetail final
{
public:
	class USkeletalMeshComponent*                 InMeshComponent;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCharacterGenAsset*                     GenAsset;                                          // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterPgBPFunctionLibrary_SaveSkeletonMorphDetail) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_SaveSkeletonMorphDetail");
static_assert(sizeof(CharacterPgBPFunctionLibrary_SaveSkeletonMorphDetail) == 0x000010, "Wrong size on CharacterPgBPFunctionLibrary_SaveSkeletonMorphDetail");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SaveSkeletonMorphDetail, InMeshComponent) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_SaveSkeletonMorphDetail::InMeshComponent' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SaveSkeletonMorphDetail, GenAsset) == 0x000008, "Member 'CharacterPgBPFunctionLibrary_SaveSkeletonMorphDetail::GenAsset' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.SaveTextureWithDialogue
// 0x0030 (0x0030 - 0x0000)
struct CharacterPgBPFunctionLibrary_SaveTextureWithDialogue final
{
public:
	int32                                         SrcWidth;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SrcHeight;                                         // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FColor>                         SrcData;                                           // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 InDefaultPath;                                     // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             ReturnValue;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterPgBPFunctionLibrary_SaveTextureWithDialogue) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_SaveTextureWithDialogue");
static_assert(sizeof(CharacterPgBPFunctionLibrary_SaveTextureWithDialogue) == 0x000030, "Wrong size on CharacterPgBPFunctionLibrary_SaveTextureWithDialogue");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SaveTextureWithDialogue, SrcWidth) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_SaveTextureWithDialogue::SrcWidth' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SaveTextureWithDialogue, SrcHeight) == 0x000004, "Member 'CharacterPgBPFunctionLibrary_SaveTextureWithDialogue::SrcHeight' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SaveTextureWithDialogue, SrcData) == 0x000008, "Member 'CharacterPgBPFunctionLibrary_SaveTextureWithDialogue::SrcData' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SaveTextureWithDialogue, InDefaultPath) == 0x000018, "Member 'CharacterPgBPFunctionLibrary_SaveTextureWithDialogue::InDefaultPath' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SaveTextureWithDialogue, ReturnValue) == 0x000028, "Member 'CharacterPgBPFunctionLibrary_SaveTextureWithDialogue::ReturnValue' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.SaveTextureWithObjectPath
// 0x0030 (0x0030 - 0x0000)
struct CharacterPgBPFunctionLibrary_SaveTextureWithObjectPath final
{
public:
	int32                                         SrcWidth;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SrcHeight;                                         // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FColor>                         SrcData;                                           // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 InSaveObjectPath;                                  // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             ReturnValue;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterPgBPFunctionLibrary_SaveTextureWithObjectPath) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_SaveTextureWithObjectPath");
static_assert(sizeof(CharacterPgBPFunctionLibrary_SaveTextureWithObjectPath) == 0x000030, "Wrong size on CharacterPgBPFunctionLibrary_SaveTextureWithObjectPath");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SaveTextureWithObjectPath, SrcWidth) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_SaveTextureWithObjectPath::SrcWidth' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SaveTextureWithObjectPath, SrcHeight) == 0x000004, "Member 'CharacterPgBPFunctionLibrary_SaveTextureWithObjectPath::SrcHeight' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SaveTextureWithObjectPath, SrcData) == 0x000008, "Member 'CharacterPgBPFunctionLibrary_SaveTextureWithObjectPath::SrcData' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SaveTextureWithObjectPath, InSaveObjectPath) == 0x000018, "Member 'CharacterPgBPFunctionLibrary_SaveTextureWithObjectPath::InSaveObjectPath' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SaveTextureWithObjectPath, ReturnValue) == 0x000028, "Member 'CharacterPgBPFunctionLibrary_SaveTextureWithObjectPath::ReturnValue' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.SearchAssetsByCollectionName
// 0x0020 (0x0020 - 0x0000)
struct CharacterPgBPFunctionLibrary_SearchAssetsByCollectionName final
{
public:
	class FName                                   CollectionName;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSoftObjectPath>                OutAssetPaths;                                     // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CharacterPgBPFunctionLibrary_SearchAssetsByCollectionName) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_SearchAssetsByCollectionName");
static_assert(sizeof(CharacterPgBPFunctionLibrary_SearchAssetsByCollectionName) == 0x000020, "Wrong size on CharacterPgBPFunctionLibrary_SearchAssetsByCollectionName");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SearchAssetsByCollectionName, CollectionName) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_SearchAssetsByCollectionName::CollectionName' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SearchAssetsByCollectionName, OutAssetPaths) == 0x000008, "Member 'CharacterPgBPFunctionLibrary_SearchAssetsByCollectionName::OutAssetPaths' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SearchAssetsByCollectionName, ReturnValue) == 0x000018, "Member 'CharacterPgBPFunctionLibrary_SearchAssetsByCollectionName::ReturnValue' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.SetCPUSkinningEnabled
// 0x0010 (0x0010 - 0x0000)
struct CharacterPgBPFunctionLibrary_SetCPUSkinningEnabled final
{
public:
	class USkinnedMeshComponent*                  mesh;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnable;                                           // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRecreateRenderStateImmediately;                   // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CharacterPgBPFunctionLibrary_SetCPUSkinningEnabled) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_SetCPUSkinningEnabled");
static_assert(sizeof(CharacterPgBPFunctionLibrary_SetCPUSkinningEnabled) == 0x000010, "Wrong size on CharacterPgBPFunctionLibrary_SetCPUSkinningEnabled");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SetCPUSkinningEnabled, mesh) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_SetCPUSkinningEnabled::mesh' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SetCPUSkinningEnabled, bEnable) == 0x000008, "Member 'CharacterPgBPFunctionLibrary_SetCPUSkinningEnabled::bEnable' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SetCPUSkinningEnabled, bRecreateRenderStateImmediately) == 0x000009, "Member 'CharacterPgBPFunctionLibrary_SetCPUSkinningEnabled::bRecreateRenderStateImmediately' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.SetPartsLODParent
// 0x0018 (0x0018 - 0x0000)
struct CharacterPgBPFunctionLibrary_SetPartsLODParent final
{
public:
	class USkeletalMeshComponent*                 InMeshComponent;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                 InMergeComponent;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinDrawDistance;                                   // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CharacterPgBPFunctionLibrary_SetPartsLODParent) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_SetPartsLODParent");
static_assert(sizeof(CharacterPgBPFunctionLibrary_SetPartsLODParent) == 0x000018, "Wrong size on CharacterPgBPFunctionLibrary_SetPartsLODParent");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SetPartsLODParent, InMeshComponent) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_SetPartsLODParent::InMeshComponent' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SetPartsLODParent, InMergeComponent) == 0x000008, "Member 'CharacterPgBPFunctionLibrary_SetPartsLODParent::InMergeComponent' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SetPartsLODParent, MinDrawDistance) == 0x000010, "Member 'CharacterPgBPFunctionLibrary_SetPartsLODParent::MinDrawDistance' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.SetupMaterialByGenAssetForDetachedMesh
// 0x0018 (0x0018 - 0x0000)
struct CharacterPgBPFunctionLibrary_SetupMaterialByGenAssetForDetachedMesh final
{
public:
	const class UCharacterGenAsset*               GenAsset;                                          // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMeshComponent*                         MeshComponent;                                     // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MeshName;                                          // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterPgBPFunctionLibrary_SetupMaterialByGenAssetForDetachedMesh) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_SetupMaterialByGenAssetForDetachedMesh");
static_assert(sizeof(CharacterPgBPFunctionLibrary_SetupMaterialByGenAssetForDetachedMesh) == 0x000018, "Wrong size on CharacterPgBPFunctionLibrary_SetupMaterialByGenAssetForDetachedMesh");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SetupMaterialByGenAssetForDetachedMesh, GenAsset) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_SetupMaterialByGenAssetForDetachedMesh::GenAsset' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SetupMaterialByGenAssetForDetachedMesh, MeshComponent) == 0x000008, "Member 'CharacterPgBPFunctionLibrary_SetupMaterialByGenAssetForDetachedMesh::MeshComponent' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SetupMaterialByGenAssetForDetachedMesh, MeshName) == 0x000010, "Member 'CharacterPgBPFunctionLibrary_SetupMaterialByGenAssetForDetachedMesh::MeshName' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.SetupMeshByGenAsset
// 0x0018 (0x0018 - 0x0000)
struct CharacterPgBPFunctionLibrary_SetupMeshByGenAsset final
{
public:
	const class UCharacterGenAsset*               GenAsset;                                          // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                 InMeshComponent;                                   // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReinitPose;                                       // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CharacterPgBPFunctionLibrary_SetupMeshByGenAsset) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_SetupMeshByGenAsset");
static_assert(sizeof(CharacterPgBPFunctionLibrary_SetupMeshByGenAsset) == 0x000018, "Wrong size on CharacterPgBPFunctionLibrary_SetupMeshByGenAsset");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SetupMeshByGenAsset, GenAsset) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_SetupMeshByGenAsset::GenAsset' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SetupMeshByGenAsset, InMeshComponent) == 0x000008, "Member 'CharacterPgBPFunctionLibrary_SetupMeshByGenAsset::InMeshComponent' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SetupMeshByGenAsset, bReinitPose) == 0x000010, "Member 'CharacterPgBPFunctionLibrary_SetupMeshByGenAsset::bReinitPose' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.SetupMeshByGenAssetByDetachedMesh
// 0x0018 (0x0018 - 0x0000)
struct CharacterPgBPFunctionLibrary_SetupMeshByGenAssetByDetachedMesh final
{
public:
	const class UCharacterGenAsset*               GenAsset;                                          // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                 InMeshComponent;                                   // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsNeedSave;                                        // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReinitPose;                                       // 0x0011(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CharacterPgBPFunctionLibrary_SetupMeshByGenAssetByDetachedMesh) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_SetupMeshByGenAssetByDetachedMesh");
static_assert(sizeof(CharacterPgBPFunctionLibrary_SetupMeshByGenAssetByDetachedMesh) == 0x000018, "Wrong size on CharacterPgBPFunctionLibrary_SetupMeshByGenAssetByDetachedMesh");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SetupMeshByGenAssetByDetachedMesh, GenAsset) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_SetupMeshByGenAssetByDetachedMesh::GenAsset' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SetupMeshByGenAssetByDetachedMesh, InMeshComponent) == 0x000008, "Member 'CharacterPgBPFunctionLibrary_SetupMeshByGenAssetByDetachedMesh::InMeshComponent' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SetupMeshByGenAssetByDetachedMesh, IsNeedSave) == 0x000010, "Member 'CharacterPgBPFunctionLibrary_SetupMeshByGenAssetByDetachedMesh::IsNeedSave' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SetupMeshByGenAssetByDetachedMesh, bReinitPose) == 0x000011, "Member 'CharacterPgBPFunctionLibrary_SetupMeshByGenAssetByDetachedMesh::bReinitPose' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.SetupMeshByGenAssetForMergedMesh
// 0x0018 (0x0018 - 0x0000)
struct CharacterPgBPFunctionLibrary_SetupMeshByGenAssetForMergedMesh final
{
public:
	const class UCharacterGenAsset*               GenAsset;                                          // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                 InMeshComponent;                                   // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReinitPose;                                       // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CharacterPgBPFunctionLibrary_SetupMeshByGenAssetForMergedMesh) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_SetupMeshByGenAssetForMergedMesh");
static_assert(sizeof(CharacterPgBPFunctionLibrary_SetupMeshByGenAssetForMergedMesh) == 0x000018, "Wrong size on CharacterPgBPFunctionLibrary_SetupMeshByGenAssetForMergedMesh");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SetupMeshByGenAssetForMergedMesh, GenAsset) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_SetupMeshByGenAssetForMergedMesh::GenAsset' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SetupMeshByGenAssetForMergedMesh, InMeshComponent) == 0x000008, "Member 'CharacterPgBPFunctionLibrary_SetupMeshByGenAssetForMergedMesh::InMeshComponent' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SetupMeshByGenAssetForMergedMesh, bReinitPose) == 0x000010, "Member 'CharacterPgBPFunctionLibrary_SetupMeshByGenAssetForMergedMesh::bReinitPose' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.SetViewportClientLocationAndRotation
// 0x0060 (0x0060 - 0x0000)
struct CharacterPgBPFunctionLibrary_SetViewportClientLocationAndRotation final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0060)(Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterPgBPFunctionLibrary_SetViewportClientLocationAndRotation) == 0x000010, "Wrong alignment on CharacterPgBPFunctionLibrary_SetViewportClientLocationAndRotation");
static_assert(sizeof(CharacterPgBPFunctionLibrary_SetViewportClientLocationAndRotation) == 0x000060, "Wrong size on CharacterPgBPFunctionLibrary_SetViewportClientLocationAndRotation");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SetViewportClientLocationAndRotation, Transform) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_SetViewportClientLocationAndRotation::Transform' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.SpawnActorFromAsset
// 0x0080 (0x0080 - 0x0000)
struct CharacterPgBPFunctionLibrary_SpawnActorFromAsset final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0010(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                PrefabAsset;                                       // 0x0070(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterPgBPFunctionLibrary_SpawnActorFromAsset) == 0x000010, "Wrong alignment on CharacterPgBPFunctionLibrary_SpawnActorFromAsset");
static_assert(sizeof(CharacterPgBPFunctionLibrary_SpawnActorFromAsset) == 0x000080, "Wrong size on CharacterPgBPFunctionLibrary_SpawnActorFromAsset");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SpawnActorFromAsset, WorldContextObject) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_SpawnActorFromAsset::WorldContextObject' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SpawnActorFromAsset, Transform) == 0x000010, "Member 'CharacterPgBPFunctionLibrary_SpawnActorFromAsset::Transform' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SpawnActorFromAsset, PrefabAsset) == 0x000070, "Member 'CharacterPgBPFunctionLibrary_SpawnActorFromAsset::PrefabAsset' has a wrong offset!");
static_assert(offsetof(CharacterPgBPFunctionLibrary_SpawnActorFromAsset, ReturnValue) == 0x000078, "Member 'CharacterPgBPFunctionLibrary_SpawnActorFromAsset::ReturnValue' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPgBPFunctionLibrary.UpdateMPT
// 0x0008 (0x0008 - 0x0000)
struct CharacterPgBPFunctionLibrary_UpdateMPT final
{
public:
	class UMaterialInstance*                      MaterialInstance;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterPgBPFunctionLibrary_UpdateMPT) == 0x000008, "Wrong alignment on CharacterPgBPFunctionLibrary_UpdateMPT");
static_assert(sizeof(CharacterPgBPFunctionLibrary_UpdateMPT) == 0x000008, "Wrong size on CharacterPgBPFunctionLibrary_UpdateMPT");
static_assert(offsetof(CharacterPgBPFunctionLibrary_UpdateMPT, MaterialInstance) == 0x000000, "Member 'CharacterPgBPFunctionLibrary_UpdateMPT::MaterialInstance' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPGComponent.AddARow
// 0x01E0 (0x01E0 - 0x0000)
struct CharacterPGComponent_AddARow final
{
public:
	class UDataTable*                             InDataTable;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Name_0;                                            // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNPCRowStruct                          rowBase;                                           // 0x0010(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 CSVString;                                         // 0x01C8(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x01D8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CharacterPGComponent_AddARow) == 0x000008, "Wrong alignment on CharacterPGComponent_AddARow");
static_assert(sizeof(CharacterPGComponent_AddARow) == 0x0001E0, "Wrong size on CharacterPGComponent_AddARow");
static_assert(offsetof(CharacterPGComponent_AddARow, InDataTable) == 0x000000, "Member 'CharacterPGComponent_AddARow::InDataTable' has a wrong offset!");
static_assert(offsetof(CharacterPGComponent_AddARow, Name_0) == 0x000008, "Member 'CharacterPGComponent_AddARow::Name_0' has a wrong offset!");
static_assert(offsetof(CharacterPGComponent_AddARow, rowBase) == 0x000010, "Member 'CharacterPGComponent_AddARow::rowBase' has a wrong offset!");
static_assert(offsetof(CharacterPGComponent_AddARow, CSVString) == 0x0001C8, "Member 'CharacterPGComponent_AddARow::CSVString' has a wrong offset!");
static_assert(offsetof(CharacterPGComponent_AddARow, ReturnValue) == 0x0001D8, "Member 'CharacterPGComponent_AddARow::ReturnValue' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPGComponent.ConvertToString
// 0x01C8 (0x01C8 - 0x0000)
struct CharacterPGComponent_ConvertToString final
{
public:
	struct FNPCRowStruct                          rowBase;                                           // 0x0000(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 OutString;                                         // 0x01B8(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterPGComponent_ConvertToString) == 0x000008, "Wrong alignment on CharacterPGComponent_ConvertToString");
static_assert(sizeof(CharacterPGComponent_ConvertToString) == 0x0001C8, "Wrong size on CharacterPGComponent_ConvertToString");
static_assert(offsetof(CharacterPGComponent_ConvertToString, rowBase) == 0x000000, "Member 'CharacterPGComponent_ConvertToString::rowBase' has a wrong offset!");
static_assert(offsetof(CharacterPGComponent_ConvertToString, OutString) == 0x0001B8, "Member 'CharacterPGComponent_ConvertToString::OutString' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPGComponent.FillDataTableFromCSVFile
// 0x0020 (0x0020 - 0x0000)
struct CharacterPGComponent_FillDataTableFromCSVFile final
{
public:
	class UDataTable*                             DataTable;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 CSVFilePath;                                       // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CharacterPGComponent_FillDataTableFromCSVFile) == 0x000008, "Wrong alignment on CharacterPGComponent_FillDataTableFromCSVFile");
static_assert(sizeof(CharacterPGComponent_FillDataTableFromCSVFile) == 0x000020, "Wrong size on CharacterPGComponent_FillDataTableFromCSVFile");
static_assert(offsetof(CharacterPGComponent_FillDataTableFromCSVFile, DataTable) == 0x000000, "Member 'CharacterPGComponent_FillDataTableFromCSVFile::DataTable' has a wrong offset!");
static_assert(offsetof(CharacterPGComponent_FillDataTableFromCSVFile, CSVFilePath) == 0x000008, "Member 'CharacterPGComponent_FillDataTableFromCSVFile::CSVFilePath' has a wrong offset!");
static_assert(offsetof(CharacterPGComponent_FillDataTableFromCSVFile, ReturnValue) == 0x000018, "Member 'CharacterPGComponent_FillDataTableFromCSVFile::ReturnValue' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPGComponent.FillDataTableFromCSVString_1
// 0x0020 (0x0020 - 0x0000)
struct CharacterPGComponent_FillDataTableFromCSVString_1 final
{
public:
	class UDataTable*                             DataTable;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 CSVString;                                         // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CharacterPGComponent_FillDataTableFromCSVString_1) == 0x000008, "Wrong alignment on CharacterPGComponent_FillDataTableFromCSVString_1");
static_assert(sizeof(CharacterPGComponent_FillDataTableFromCSVString_1) == 0x000020, "Wrong size on CharacterPGComponent_FillDataTableFromCSVString_1");
static_assert(offsetof(CharacterPGComponent_FillDataTableFromCSVString_1, DataTable) == 0x000000, "Member 'CharacterPGComponent_FillDataTableFromCSVString_1::DataTable' has a wrong offset!");
static_assert(offsetof(CharacterPGComponent_FillDataTableFromCSVString_1, CSVString) == 0x000008, "Member 'CharacterPGComponent_FillDataTableFromCSVString_1::CSVString' has a wrong offset!");
static_assert(offsetof(CharacterPGComponent_FillDataTableFromCSVString_1, ReturnValue) == 0x000018, "Member 'CharacterPGComponent_FillDataTableFromCSVString_1::ReturnValue' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPGComponent.FillDataTableFromJSONFile
// 0x0020 (0x0020 - 0x0000)
struct CharacterPGComponent_FillDataTableFromJSONFile final
{
public:
	class UDataTable*                             DataTable;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 JSONFilePath;                                      // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CharacterPGComponent_FillDataTableFromJSONFile) == 0x000008, "Wrong alignment on CharacterPGComponent_FillDataTableFromJSONFile");
static_assert(sizeof(CharacterPGComponent_FillDataTableFromJSONFile) == 0x000020, "Wrong size on CharacterPGComponent_FillDataTableFromJSONFile");
static_assert(offsetof(CharacterPGComponent_FillDataTableFromJSONFile, DataTable) == 0x000000, "Member 'CharacterPGComponent_FillDataTableFromJSONFile::DataTable' has a wrong offset!");
static_assert(offsetof(CharacterPGComponent_FillDataTableFromJSONFile, JSONFilePath) == 0x000008, "Member 'CharacterPGComponent_FillDataTableFromJSONFile::JSONFilePath' has a wrong offset!");
static_assert(offsetof(CharacterPGComponent_FillDataTableFromJSONFile, ReturnValue) == 0x000018, "Member 'CharacterPGComponent_FillDataTableFromJSONFile::ReturnValue' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPGComponent.FillDataTableFromJSONString
// 0x0020 (0x0020 - 0x0000)
struct CharacterPGComponent_FillDataTableFromJSONString final
{
public:
	class UDataTable*                             DataTable;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 JsonString;                                        // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CharacterPGComponent_FillDataTableFromJSONString) == 0x000008, "Wrong alignment on CharacterPGComponent_FillDataTableFromJSONString");
static_assert(sizeof(CharacterPGComponent_FillDataTableFromJSONString) == 0x000020, "Wrong size on CharacterPGComponent_FillDataTableFromJSONString");
static_assert(offsetof(CharacterPGComponent_FillDataTableFromJSONString, DataTable) == 0x000000, "Member 'CharacterPGComponent_FillDataTableFromJSONString::DataTable' has a wrong offset!");
static_assert(offsetof(CharacterPGComponent_FillDataTableFromJSONString, JsonString) == 0x000008, "Member 'CharacterPGComponent_FillDataTableFromJSONString::JsonString' has a wrong offset!");
static_assert(offsetof(CharacterPGComponent_FillDataTableFromJSONString, ReturnValue) == 0x000018, "Member 'CharacterPGComponent_FillDataTableFromJSONString::ReturnValue' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPGComponent.GetDataTableAsCSVFile
// 0x0018 (0x0018 - 0x0000)
struct CharacterPGComponent_GetDataTableAsCSVFile final
{
public:
	class UDataTable*                             DataTable;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 CSVFilePath;                                       // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterPGComponent_GetDataTableAsCSVFile) == 0x000008, "Wrong alignment on CharacterPGComponent_GetDataTableAsCSVFile");
static_assert(sizeof(CharacterPGComponent_GetDataTableAsCSVFile) == 0x000018, "Wrong size on CharacterPGComponent_GetDataTableAsCSVFile");
static_assert(offsetof(CharacterPGComponent_GetDataTableAsCSVFile, DataTable) == 0x000000, "Member 'CharacterPGComponent_GetDataTableAsCSVFile::DataTable' has a wrong offset!");
static_assert(offsetof(CharacterPGComponent_GetDataTableAsCSVFile, CSVFilePath) == 0x000008, "Member 'CharacterPGComponent_GetDataTableAsCSVFile::CSVFilePath' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPGComponent.GetDataTableAsCSVString
// 0x0018 (0x0018 - 0x0000)
struct CharacterPGComponent_GetDataTableAsCSVString final
{
public:
	class UDataTable*                             DataTable;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 CSVString;                                         // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterPGComponent_GetDataTableAsCSVString) == 0x000008, "Wrong alignment on CharacterPGComponent_GetDataTableAsCSVString");
static_assert(sizeof(CharacterPGComponent_GetDataTableAsCSVString) == 0x000018, "Wrong size on CharacterPGComponent_GetDataTableAsCSVString");
static_assert(offsetof(CharacterPGComponent_GetDataTableAsCSVString, DataTable) == 0x000000, "Member 'CharacterPGComponent_GetDataTableAsCSVString::DataTable' has a wrong offset!");
static_assert(offsetof(CharacterPGComponent_GetDataTableAsCSVString, CSVString) == 0x000008, "Member 'CharacterPGComponent_GetDataTableAsCSVString::CSVString' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPGComponent.ModifyRow
// 0x0028 (0x0028 - 0x0000)
struct CharacterPGComponent_ModifyRow final
{
public:
	class UDataTable*                             InDataTable;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Name_0;                                            // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 streaming;                                         // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CharacterPGComponent_ModifyRow) == 0x000008, "Wrong alignment on CharacterPGComponent_ModifyRow");
static_assert(sizeof(CharacterPGComponent_ModifyRow) == 0x000028, "Wrong size on CharacterPGComponent_ModifyRow");
static_assert(offsetof(CharacterPGComponent_ModifyRow, InDataTable) == 0x000000, "Member 'CharacterPGComponent_ModifyRow::InDataTable' has a wrong offset!");
static_assert(offsetof(CharacterPGComponent_ModifyRow, Name_0) == 0x000008, "Member 'CharacterPGComponent_ModifyRow::Name_0' has a wrong offset!");
static_assert(offsetof(CharacterPGComponent_ModifyRow, streaming) == 0x000010, "Member 'CharacterPGComponent_ModifyRow::streaming' has a wrong offset!");
static_assert(offsetof(CharacterPGComponent_ModifyRow, ReturnValue) == 0x000020, "Member 'CharacterPGComponent_ModifyRow::ReturnValue' has a wrong offset!");

// Function CharacterGeneratorAssets.CharacterPGComponent.RemoveRow
// 0x0018 (0x0018 - 0x0000)
struct CharacterPGComponent_RemoveRow final
{
public:
	class UDataTable*                             InDataTable;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Name_0;                                            // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CharacterPGComponent_RemoveRow) == 0x000008, "Wrong alignment on CharacterPGComponent_RemoveRow");
static_assert(sizeof(CharacterPGComponent_RemoveRow) == 0x000018, "Wrong size on CharacterPGComponent_RemoveRow");
static_assert(offsetof(CharacterPGComponent_RemoveRow, InDataTable) == 0x000000, "Member 'CharacterPGComponent_RemoveRow::InDataTable' has a wrong offset!");
static_assert(offsetof(CharacterPGComponent_RemoveRow, Name_0) == 0x000008, "Member 'CharacterPGComponent_RemoveRow::Name_0' has a wrong offset!");
static_assert(offsetof(CharacterPGComponent_RemoveRow, ReturnValue) == 0x000010, "Member 'CharacterPGComponent_RemoveRow::ReturnValue' has a wrong offset!");

}

