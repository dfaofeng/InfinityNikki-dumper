#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: X6Sound

#include "Basic.hpp"

#include "X6Sound_structs.hpp"


namespace SDK::Params
{

// Function X6Sound.X6UMGSoundSubsystem.ReplaceUISoundEvent
// 0x0018 (0x0018 - 0x0000)
struct X6UMGSoundSubsystem_ReplaceUISoundEvent final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                          AudioEvent;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EUISoundEventType                             Type;                                              // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(X6UMGSoundSubsystem_ReplaceUISoundEvent) == 0x000008, "Wrong alignment on X6UMGSoundSubsystem_ReplaceUISoundEvent");
static_assert(sizeof(X6UMGSoundSubsystem_ReplaceUISoundEvent) == 0x000018, "Wrong size on X6UMGSoundSubsystem_ReplaceUISoundEvent");
static_assert(offsetof(X6UMGSoundSubsystem_ReplaceUISoundEvent, Widget) == 0x000000, "Member 'X6UMGSoundSubsystem_ReplaceUISoundEvent::Widget' has a wrong offset!");
static_assert(offsetof(X6UMGSoundSubsystem_ReplaceUISoundEvent, AudioEvent) == 0x000008, "Member 'X6UMGSoundSubsystem_ReplaceUISoundEvent::AudioEvent' has a wrong offset!");
static_assert(offsetof(X6UMGSoundSubsystem_ReplaceUISoundEvent, Type) == 0x000010, "Member 'X6UMGSoundSubsystem_ReplaceUISoundEvent::Type' has a wrong offset!");

// Function X6Sound.X6UMGSoundSubsystem.ResetUISoundEvent
// 0x0010 (0x0010 - 0x0000)
struct X6UMGSoundSubsystem_ResetUISoundEvent final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EUISoundEventType                             Type;                                              // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(X6UMGSoundSubsystem_ResetUISoundEvent) == 0x000008, "Wrong alignment on X6UMGSoundSubsystem_ResetUISoundEvent");
static_assert(sizeof(X6UMGSoundSubsystem_ResetUISoundEvent) == 0x000010, "Wrong size on X6UMGSoundSubsystem_ResetUISoundEvent");
static_assert(offsetof(X6UMGSoundSubsystem_ResetUISoundEvent, Widget) == 0x000000, "Member 'X6UMGSoundSubsystem_ResetUISoundEvent::Widget' has a wrong offset!");
static_assert(offsetof(X6UMGSoundSubsystem_ResetUISoundEvent, Type) == 0x000008, "Member 'X6UMGSoundSubsystem_ResetUISoundEvent::Type' has a wrong offset!");

}

