#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SequencerLineSection

#include "Basic.hpp"

#include "ESubtitleUIType_structs.hpp"
#include "Engine_structs.hpp"
#include "ESubtitleShowEffectType_structs.hpp"
#include "PaperMovieScene_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SequencerLineSection.BP_SequencerLineSection_C
// 0x0018 (0x0148 - 0x0130)
class UBP_SequencerLineSection_C final : public UPaperMovieSceneSequencerSectionBP
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0130(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class FName                                   LineId;                                            // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlayVoice;                                        // 0x0140(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESubtitleShowEffectType                       ShowEffect;                                        // 0x0141(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESubtitleUIType                               UIType;                                            // 0x0142(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void K2_OnSectionUpdate();
	void K2_OnSectionEnd();
	void K2_OnSectionBegin();
	class FText K2_GetSectionTitle();
	class FText K2_GetLineText();
	class FText K2_GetActorName();
	void ExecuteUbergraph_BP_SequencerLineSection(int32 EntryPoint);
	void BP_OnLineSectionEnd(class FName LineId_0);
	void BP_OnLineSectionBegin(class FName LineId_0, double SectionDuration);

	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SequencerLineSection_C">();
	}
	static class UBP_SequencerLineSection_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_SequencerLineSection_C>();
	}
};
static_assert(alignof(UBP_SequencerLineSection_C) == 0x000008, "Wrong alignment on UBP_SequencerLineSection_C");
static_assert(sizeof(UBP_SequencerLineSection_C) == 0x000148, "Wrong size on UBP_SequencerLineSection_C");
static_assert(offsetof(UBP_SequencerLineSection_C, UberGraphFrame) == 0x000130, "Member 'UBP_SequencerLineSection_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_SequencerLineSection_C, LineId) == 0x000138, "Member 'UBP_SequencerLineSection_C::LineId' has a wrong offset!");
static_assert(offsetof(UBP_SequencerLineSection_C, bPlayVoice) == 0x000140, "Member 'UBP_SequencerLineSection_C::bPlayVoice' has a wrong offset!");
static_assert(offsetof(UBP_SequencerLineSection_C, ShowEffect) == 0x000141, "Member 'UBP_SequencerLineSection_C::ShowEffect' has a wrong offset!");
static_assert(offsetof(UBP_SequencerLineSection_C, UIType) == 0x000142, "Member 'UBP_SequencerLineSection_C::UIType' has a wrong offset!");

}

