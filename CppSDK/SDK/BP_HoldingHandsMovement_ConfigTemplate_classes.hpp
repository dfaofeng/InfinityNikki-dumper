#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HoldingHandsMovement_ConfigTemplate

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_classes.hpp"
#include "EInt32PlayerPawnStateTypes_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HoldingHandsMovement_ConfigTemplate.BP_HoldingHandsMovement_ConfigTemplate_C
// 0x03E0 (0x0410 - 0x0030)
class UBP_HoldingHandsMovement_ConfigTemplate_C final : public UPrimaryDataAsset
{
public:
	struct FVector                                BP_FollowerRelativeLocation_Walking_Left;          // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BP_FollowerRelativeLocation_Walking_Right;         // 0x0048(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BP_FollowerRelativeLocation_Falling_Left;          // 0x0060(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BP_FollowerRelativeLocation_Falling_Right;         // 0x0078(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BP_FollowerRelativeLocation_HoldingHandsFloating_Left; // 0x0090(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BP_FollowerRelativeLocation_HoldingHandsFloating_Right; // 0x00A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BP_HandHoldingFollowPositionAngleRange;            // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BP_MaximumDistanceBetweenLeaderAndFollower;        // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BP_MaximumDistanceForTriggeringFallBehindTeleportDetection; // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BP_MaximumDistanceForTriggeringFallBehindMode;     // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BP_BufferTimeAfterExceedingMaximumDistance;        // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BP_GroupConstraintsLerpSpeed;                      // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BP_HoldingHand_MinDistance_ShowConnectionNiagara;  // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UNiagaraSystem>          BP_HoldingHand_ConnectionNiagara;                  // 0x00F8(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	double                                        BP_HoldingHand_ConnectionNiagara_DelayDestoryTime; // 0x0120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UNiagaraSystem>          BP_HoldingHand_ConnectionTwist_Leader_Niagara;     // 0x0128(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TSoftObjectPtr<class UNiagaraSystem>          BP_HoldingHand_ConnectionTwist_Follower_Niagara;   // 0x0150(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TSoftObjectPtr<class UNiagaraSystem>          BP_HoldingHand_ConnectionStartNiagara;             // 0x0178(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TSoftObjectPtr<class UNiagaraSystem>          BP_HoldingHand_DisconnectNiagara;                  // 0x01A0(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TSoftObjectPtr<class UNiagaraSystem>          BP_HoldingHand_FloatingMovingNiagara;              // 0x01C8(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TSoftObjectPtr<class UNiagaraSystem>          BP_HoldingHand_PullingToAnchorPointNiagara;        // 0x01F0(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TSoftObjectPtr<class UNiagaraSystem>          BP_HoldingHand_ConnectionStraightenNiagara;        // 0x0218(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TSoftObjectPtr<class UNiagaraSystem>          BP_HoldingHand_ConnectionEndNiagara;               // 0x0240(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	double                                        BP_MinimumDistanceForActivatingHandHoldingAdditionalAnimationEffect; // 0x0268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BP_MinimumDistanceForEnablingAnimPullToAnchorPoint; // 0x0270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BP_MinimumDistanceForAdjustRotation;               // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BP_MaximumGuaranteeTimeForPreHoldingHands;         // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BP_MinimumDistanceForReturning;                    // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BP_HandHold_Left_Socket;                           // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BP_HandHold_Right_Socket;                          // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BP_MinimumDistanceForFar;                          // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableRangePolishForAnchorPoint;                   // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        XAxisOffsetForAnchorPointRange;                    // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        YAxisOffsetForAnchorPointRange;                    // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UAkAudioEvent>           BP_AKEvent_Drag;                                   // 0x02C0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UAkAudioEvent>           BP_AKEvent_Disconnect;                             // 0x02E8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UAkAudioEvent>           BP_AKEvent_Stiff;                                  // 0x0310(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UAkRtpc>                 BP_AKRTPC_Stiff_Time;                              // 0x0338(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UAkAudioEvent>           BP_AKEvent_Stiff_Release;                          // 0x0360(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UAkAudioEvent>           BP_AKEvent_Twist;                                  // 0x0388(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UNiagaraSystem>          BP_HoldingHand_FallBehindNiagara;                  // 0x03B0(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	double                                        BP_FallenBehindDissolveValue;                      // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BP_FallenBehindDissolveBlendTime;                  // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BP_FallenBehindTriggerFadeOutDistance;             // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BP_FallenBehindFadeOutMaxTime;                     // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_EnableAnchorPullWriteList;                      // 0x03F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F9[0x7];                                      // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EInt32PlayerPawnStateTypes>            BP_WriteListStateForFilterAnchorPull;              // 0x0400(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HoldingHandsMovement_ConfigTemplate_C">();
	}
	static class UBP_HoldingHandsMovement_ConfigTemplate_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_HoldingHandsMovement_ConfigTemplate_C>();
	}
};
static_assert(alignof(UBP_HoldingHandsMovement_ConfigTemplate_C) == 0x000008, "Wrong alignment on UBP_HoldingHandsMovement_ConfigTemplate_C");
static_assert(sizeof(UBP_HoldingHandsMovement_ConfigTemplate_C) == 0x000410, "Wrong size on UBP_HoldingHandsMovement_ConfigTemplate_C");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, BP_FollowerRelativeLocation_Walking_Left) == 0x000030, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::BP_FollowerRelativeLocation_Walking_Left' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, BP_FollowerRelativeLocation_Walking_Right) == 0x000048, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::BP_FollowerRelativeLocation_Walking_Right' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, BP_FollowerRelativeLocation_Falling_Left) == 0x000060, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::BP_FollowerRelativeLocation_Falling_Left' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, BP_FollowerRelativeLocation_Falling_Right) == 0x000078, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::BP_FollowerRelativeLocation_Falling_Right' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, BP_FollowerRelativeLocation_HoldingHandsFloating_Left) == 0x000090, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::BP_FollowerRelativeLocation_HoldingHandsFloating_Left' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, BP_FollowerRelativeLocation_HoldingHandsFloating_Right) == 0x0000A8, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::BP_FollowerRelativeLocation_HoldingHandsFloating_Right' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, BP_HandHoldingFollowPositionAngleRange) == 0x0000C0, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::BP_HandHoldingFollowPositionAngleRange' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, BP_MaximumDistanceBetweenLeaderAndFollower) == 0x0000C8, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::BP_MaximumDistanceBetweenLeaderAndFollower' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, BP_MaximumDistanceForTriggeringFallBehindTeleportDetection) == 0x0000D0, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::BP_MaximumDistanceForTriggeringFallBehindTeleportDetection' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, BP_MaximumDistanceForTriggeringFallBehindMode) == 0x0000D8, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::BP_MaximumDistanceForTriggeringFallBehindMode' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, BP_BufferTimeAfterExceedingMaximumDistance) == 0x0000E0, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::BP_BufferTimeAfterExceedingMaximumDistance' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, BP_GroupConstraintsLerpSpeed) == 0x0000E8, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::BP_GroupConstraintsLerpSpeed' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, BP_HoldingHand_MinDistance_ShowConnectionNiagara) == 0x0000F0, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::BP_HoldingHand_MinDistance_ShowConnectionNiagara' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, BP_HoldingHand_ConnectionNiagara) == 0x0000F8, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::BP_HoldingHand_ConnectionNiagara' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, BP_HoldingHand_ConnectionNiagara_DelayDestoryTime) == 0x000120, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::BP_HoldingHand_ConnectionNiagara_DelayDestoryTime' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, BP_HoldingHand_ConnectionTwist_Leader_Niagara) == 0x000128, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::BP_HoldingHand_ConnectionTwist_Leader_Niagara' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, BP_HoldingHand_ConnectionTwist_Follower_Niagara) == 0x000150, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::BP_HoldingHand_ConnectionTwist_Follower_Niagara' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, BP_HoldingHand_ConnectionStartNiagara) == 0x000178, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::BP_HoldingHand_ConnectionStartNiagara' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, BP_HoldingHand_DisconnectNiagara) == 0x0001A0, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::BP_HoldingHand_DisconnectNiagara' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, BP_HoldingHand_FloatingMovingNiagara) == 0x0001C8, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::BP_HoldingHand_FloatingMovingNiagara' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, BP_HoldingHand_PullingToAnchorPointNiagara) == 0x0001F0, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::BP_HoldingHand_PullingToAnchorPointNiagara' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, BP_HoldingHand_ConnectionStraightenNiagara) == 0x000218, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::BP_HoldingHand_ConnectionStraightenNiagara' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, BP_HoldingHand_ConnectionEndNiagara) == 0x000240, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::BP_HoldingHand_ConnectionEndNiagara' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, BP_MinimumDistanceForActivatingHandHoldingAdditionalAnimationEffect) == 0x000268, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::BP_MinimumDistanceForActivatingHandHoldingAdditionalAnimationEffect' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, BP_MinimumDistanceForEnablingAnimPullToAnchorPoint) == 0x000270, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::BP_MinimumDistanceForEnablingAnimPullToAnchorPoint' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, BP_MinimumDistanceForAdjustRotation) == 0x000278, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::BP_MinimumDistanceForAdjustRotation' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, BP_MaximumGuaranteeTimeForPreHoldingHands) == 0x000280, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::BP_MaximumGuaranteeTimeForPreHoldingHands' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, BP_MinimumDistanceForReturning) == 0x000288, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::BP_MinimumDistanceForReturning' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, BP_HandHold_Left_Socket) == 0x000290, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::BP_HandHold_Left_Socket' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, BP_HandHold_Right_Socket) == 0x000298, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::BP_HandHold_Right_Socket' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, BP_MinimumDistanceForFar) == 0x0002A0, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::BP_MinimumDistanceForFar' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, EnableRangePolishForAnchorPoint) == 0x0002A8, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::EnableRangePolishForAnchorPoint' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, XAxisOffsetForAnchorPointRange) == 0x0002B0, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::XAxisOffsetForAnchorPointRange' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, YAxisOffsetForAnchorPointRange) == 0x0002B8, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::YAxisOffsetForAnchorPointRange' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, BP_AKEvent_Drag) == 0x0002C0, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::BP_AKEvent_Drag' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, BP_AKEvent_Disconnect) == 0x0002E8, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::BP_AKEvent_Disconnect' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, BP_AKEvent_Stiff) == 0x000310, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::BP_AKEvent_Stiff' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, BP_AKRTPC_Stiff_Time) == 0x000338, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::BP_AKRTPC_Stiff_Time' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, BP_AKEvent_Stiff_Release) == 0x000360, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::BP_AKEvent_Stiff_Release' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, BP_AKEvent_Twist) == 0x000388, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::BP_AKEvent_Twist' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, BP_HoldingHand_FallBehindNiagara) == 0x0003B0, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::BP_HoldingHand_FallBehindNiagara' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, BP_FallenBehindDissolveValue) == 0x0003D8, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::BP_FallenBehindDissolveValue' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, BP_FallenBehindDissolveBlendTime) == 0x0003E0, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::BP_FallenBehindDissolveBlendTime' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, BP_FallenBehindTriggerFadeOutDistance) == 0x0003E8, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::BP_FallenBehindTriggerFadeOutDistance' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, BP_FallenBehindFadeOutMaxTime) == 0x0003F0, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::BP_FallenBehindFadeOutMaxTime' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, BP_EnableAnchorPullWriteList) == 0x0003F8, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::BP_EnableAnchorPullWriteList' has a wrong offset!");
static_assert(offsetof(UBP_HoldingHandsMovement_ConfigTemplate_C, BP_WriteListStateForFilterAnchorPull) == 0x000400, "Member 'UBP_HoldingHandsMovement_ConfigTemplate_C::BP_WriteListStateForFilterAnchorPull' has a wrong offset!");

}

