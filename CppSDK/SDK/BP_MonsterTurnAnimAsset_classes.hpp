#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MonsterTurnAnimAsset

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MonsterTurnAnimAsset.BP_MonsterTurnAnimAsset_C
// 0x0040 (0x0070 - 0x0030)
class UBP_MonsterTurnAnimAsset_C final : public UPrimaryDataAsset
{
public:
	bool                                          bUseRotateModifier;                                // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RotateSpeed;                                       // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinWarpingAngle;                                   // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnableMirrorTurnAnim;                             // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           L90;                                               // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           R90;                                               // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           L180;                                              // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           R180;                                              // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MonsterTurnAnimAsset_C">();
	}
	static class UBP_MonsterTurnAnimAsset_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_MonsterTurnAnimAsset_C>();
	}
};
static_assert(alignof(UBP_MonsterTurnAnimAsset_C) == 0x000008, "Wrong alignment on UBP_MonsterTurnAnimAsset_C");
static_assert(sizeof(UBP_MonsterTurnAnimAsset_C) == 0x000070, "Wrong size on UBP_MonsterTurnAnimAsset_C");
static_assert(offsetof(UBP_MonsterTurnAnimAsset_C, bUseRotateModifier) == 0x000030, "Member 'UBP_MonsterTurnAnimAsset_C::bUseRotateModifier' has a wrong offset!");
static_assert(offsetof(UBP_MonsterTurnAnimAsset_C, RotateSpeed) == 0x000038, "Member 'UBP_MonsterTurnAnimAsset_C::RotateSpeed' has a wrong offset!");
static_assert(offsetof(UBP_MonsterTurnAnimAsset_C, MinWarpingAngle) == 0x000040, "Member 'UBP_MonsterTurnAnimAsset_C::MinWarpingAngle' has a wrong offset!");
static_assert(offsetof(UBP_MonsterTurnAnimAsset_C, bEnableMirrorTurnAnim) == 0x000048, "Member 'UBP_MonsterTurnAnimAsset_C::bEnableMirrorTurnAnim' has a wrong offset!");
static_assert(offsetof(UBP_MonsterTurnAnimAsset_C, L90) == 0x000050, "Member 'UBP_MonsterTurnAnimAsset_C::L90' has a wrong offset!");
static_assert(offsetof(UBP_MonsterTurnAnimAsset_C, R90) == 0x000058, "Member 'UBP_MonsterTurnAnimAsset_C::R90' has a wrong offset!");
static_assert(offsetof(UBP_MonsterTurnAnimAsset_C, L180) == 0x000060, "Member 'UBP_MonsterTurnAnimAsset_C::L180' has a wrong offset!");
static_assert(offsetof(UBP_MonsterTurnAnimAsset_C, R180) == 0x000068, "Member 'UBP_MonsterTurnAnimAsset_C::R180' has a wrong offset!");

}

