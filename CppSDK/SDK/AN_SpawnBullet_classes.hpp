#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AN_SpawnBullet

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass AN_SpawnBullet.AN_SpawnBullet_C
// 0x0088 (0x00C0 - 0x0038)
class UAN_SpawnBullet_C final : public UAnimNotify
{
public:
	TArray<class UBP_BulletDataAsset_C*>          BP_BulletDatas;                                    // 0x0038(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)
	bool                                          IsLastBullet;                                      // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   BP_Socket;                                         // 0x004C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0xC];                                       // 0x0054(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             BP_OffsetTransform;                                // 0x0060(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	class FString GetModuleName() const;
	bool Received_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, const struct FAnimNotifyEventReference& EventReference) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AN_SpawnBullet_C">();
	}
	static class UAN_SpawnBullet_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAN_SpawnBullet_C>();
	}
};
static_assert(alignof(UAN_SpawnBullet_C) == 0x000010, "Wrong alignment on UAN_SpawnBullet_C");
static_assert(sizeof(UAN_SpawnBullet_C) == 0x0000C0, "Wrong size on UAN_SpawnBullet_C");
static_assert(offsetof(UAN_SpawnBullet_C, BP_BulletDatas) == 0x000038, "Member 'UAN_SpawnBullet_C::BP_BulletDatas' has a wrong offset!");
static_assert(offsetof(UAN_SpawnBullet_C, IsLastBullet) == 0x000048, "Member 'UAN_SpawnBullet_C::IsLastBullet' has a wrong offset!");
static_assert(offsetof(UAN_SpawnBullet_C, BP_Socket) == 0x00004C, "Member 'UAN_SpawnBullet_C::BP_Socket' has a wrong offset!");
static_assert(offsetof(UAN_SpawnBullet_C, BP_OffsetTransform) == 0x000060, "Member 'UAN_SpawnBullet_C::BP_OffsetTransform' has a wrong offset!");

}

