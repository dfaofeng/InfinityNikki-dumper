#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FunctionLibrary_WeatherSys

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "E_DeLightType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass FunctionLibrary_WeatherSys.FunctionLibrary_WeatherSys_C
// 0x0000 (0x0028 - 0x0028)
class UFunctionLibrary_WeatherSys_C final : public UBlueprintFunctionLibrary
{
public:
	static void StorageTodsysActor(class AActor* OwnerClass, class UObject* __WorldContext, class ABP_DyEnvSys_C** ref_TodSys);
	static void FillVolumeTimeSpanList(class UObject* __WorldContext);
	static void IsEditor_Mode(class UObject* __WorldContext, bool* inEditor);
	static void Set_Members_in_PPSettings(const struct FPostProcessSettings& StructRef, const struct FPostProcessSettings& PostProcessSettings, class UObject* __WorldContext, struct FPostProcessSettings* StructOut);
	static void DoesTodSysExist(class UObject* __WorldContext, bool* Ready);
	static void Stage_Lighting(E_DeLightType LightType, class ULightComponent* LightComp, class UObject* __WorldContext);
	static void Check_Weather_Volume_State(class ADynamicWeatherVolume* DESVolume, class UObject* __WorldContext);
	static bool Is_PC_Platform_Low(class UObject* __WorldContext);
	static void IsGamePlayerInVolume(class AActor* Target, const struct FVector& BoxExtent, class UObject* __WorldContext, bool* InVolume);
	static class UTexture2D* WriteTextureWithOverride(const class FString& TexturePath, class UTextureRenderTarget2D* RenderTarget, ETextureCompressionSettings CompressionSettings, class UObject* __WorldContext);

	void DrawSourceCurve(EBlendMode BlendMode, double Row, const struct FRuntimeCurveLinearColor& RuntimeCurve, class UTextureRenderTarget2D* TextureRenderTarget, class UObject* __WorldContext);
	void CurveStepSize(double U_Size, class UObject* __WorldContext, double* StepSize);
	void Update_Compute_Fog_To_Final(class UObject* __WorldContext);
	void UpdateFillLight(class ULightComponent* LightComp, class UObject* __WorldContext);
	void Update_Street_Lamp(class ULightComponent* LightComp, class UObject* __WorldContext);
	void UpdateDES_LocalLight(class ULightComponent* LitComp, E_DeLightType LightType, class UObject* __WorldContext);
	void DetectDecalLocation(class USceneComponent* Actor, class USceneComponent* Decal, class UStaticMeshComponent* Plane, double TraceRadius, class UObject* __WorldContext, bool* bUseDecal);
	double Remapped1015p(float InputPin, class UObject* __WorldContext);
	void SetupConfigToSkyLight(class ASkyLight* SkyLight, const struct FS_Candela& CandelaParam, class UObject* __WorldContext);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"FunctionLibrary_WeatherSys_C">();
	}
	static class UFunctionLibrary_WeatherSys_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFunctionLibrary_WeatherSys_C>();
	}
};
static_assert(alignof(UFunctionLibrary_WeatherSys_C) == 0x000008, "Wrong alignment on UFunctionLibrary_WeatherSys_C");
static_assert(sizeof(UFunctionLibrary_WeatherSys_C) == 0x000028, "Wrong size on UFunctionLibrary_WeatherSys_C");

}

