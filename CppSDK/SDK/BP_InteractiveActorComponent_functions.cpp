#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InteractiveActorComponent

#include "Basic.hpp"

#include "BP_InteractiveActorComponent_classes.hpp"
#include "BP_InteractiveActorComponent_parameters.hpp"


namespace SDK
{

// Function BP_InteractiveActorComponent.BP_InteractiveActorComponent_C.UpdateCanInteract
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShowInteractUI                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CanInteract_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InteractiveActorComponent_C::UpdateCanInteract(bool ShowInteractUI, bool CanInteract_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveActorComponent_C", "UpdateCanInteract");

	Params::BP_InteractiveActorComponent_C_UpdateCanInteract Parms{};

	Parms.ShowInteractUI = ShowInteractUI;
	Parms.CanInteract_0 = CanInteract_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractiveActorComponent.BP_InteractiveActorComponent_C.GetInteractiveActorType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_InteractiveActorType*                 ActorType                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InteractiveActorComponent_C::GetInteractiveActorType(E_InteractiveActorType* ActorType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveActorComponent_C", "GetInteractiveActorType");

	Params::BP_InteractiveActorComponent_C_GetInteractiveActorType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ActorType != nullptr)
		*ActorType = Parms.ActorType;
}


// Function BP_InteractiveActorComponent.BP_InteractiveActorComponent_C.GetInteractiveActorConfigID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64*                                  ConfigID                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InteractiveActorComponent_C::GetInteractiveActorConfigID(int64* ConfigID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveActorComponent_C", "GetInteractiveActorConfigID");

	Params::BP_InteractiveActorComponent_C_GetInteractiveActorConfigID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ConfigID != nullptr)
		*ConfigID = Parms.ConfigID;
}


// Function BP_InteractiveActorComponent.BP_InteractiveActorComponent_C.GetCanInteract
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Can                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InteractiveActorComponent_C::GetCanInteract(bool* Can)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveActorComponent_C", "GetCanInteract");

	Params::BP_InteractiveActorComponent_C_GetCanInteract Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Can != nullptr)
		*Can = Parms.Can;
}


// Function BP_InteractiveActorComponent.BP_InteractiveActorComponent_C.BP_SetIsBlock
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsBlock                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InteractiveActorComponent_C::BP_SetIsBlock(bool IsBlock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveActorComponent_C", "BP_SetIsBlock");

	Params::BP_InteractiveActorComponent_C_BP_SetIsBlock Parms{};

	Parms.IsBlock = IsBlock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractiveActorComponent.BP_InteractiveActorComponent_C.BP_SetInteractWidgetOffset
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   NewWidgetOffset                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InteractiveActorComponent_C::BP_SetInteractWidgetOffset(const struct FVector& NewWidgetOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveActorComponent_C", "BP_SetInteractWidgetOffset");

	Params::BP_InteractiveActorComponent_C_BP_SetInteractWidgetOffset Parms{};

	Parms.NewWidgetOffset = std::move(NewWidgetOffset);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractiveActorComponent.BP_InteractiveActorComponent_C.BP_NotifyServerSelfPos
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_InteractiveActorComponent_C::BP_NotifyServerSelfPos()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveActorComponent_C", "BP_NotifyServerSelfPos");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractiveActorComponent.BP_InteractiveActorComponent_C.BP_ModifyWhitePointWidgetComponent
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_InteractiveActorComponent_C::BP_ModifyWhitePointWidgetComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveActorComponent_C", "BP_ModifyWhitePointWidgetComponent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractiveActorComponent.BP_InteractiveActorComponent_C.BP_GetIsBlock
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsBlock                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InteractiveActorComponent_C::BP_GetIsBlock(bool* IsBlock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveActorComponent_C", "BP_GetIsBlock");

	Params::BP_InteractiveActorComponent_C_BP_GetIsBlock Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsBlock != nullptr)
		*IsBlock = Parms.IsBlock;
}


// Function BP_InteractiveActorComponent.BP_InteractiveActorComponent_C.BP_DynamicModifyWhitePointVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShow                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InteractiveActorComponent_C::BP_DynamicModifyWhitePointVisibility(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveActorComponent_C", "BP_DynamicModifyWhitePointVisibility");

	Params::BP_InteractiveActorComponent_C_BP_DynamicModifyWhitePointVisibility Parms{};

	Parms.bShow = bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractiveActorComponent.BP_InteractiveActorComponent_C.BP_ConvertIkButtVector
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector&                   ArrowForwardVector                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ActorYaw                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ArrowRelativeYaw                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   IkVector                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         caculateIkVector                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InteractiveActorComponent_C::BP_ConvertIkButtVector(const struct FVector& ArrowForwardVector, double ActorYaw, double ArrowRelativeYaw, const struct FVector& IkVector, struct FVector* caculateIkVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveActorComponent_C", "BP_ConvertIkButtVector");

	Params::BP_InteractiveActorComponent_C_BP_ConvertIkButtVector Parms{};

	Parms.ArrowForwardVector = std::move(ArrowForwardVector);
	Parms.ActorYaw = ActorYaw;
	Parms.ArrowRelativeYaw = ArrowRelativeYaw;
	Parms.IkVector = std::move(IkVector);

	UObject::ProcessEvent(Func, &Parms);

	if (caculateIkVector != nullptr)
		*caculateIkVector = std::move(Parms.caculateIkVector);
}


// Function BP_InteractiveActorComponent.BP_InteractiveActorComponent_C.BP_AddWhitePointWidgetComponent
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_InteractiveActorComponent_C::BP_AddWhitePointWidgetComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveActorComponent_C", "BP_AddWhitePointWidgetComponent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractiveActorComponent.BP_InteractiveActorComponent_C.GetModuleName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UBP_InteractiveActorComponent_C::GetModuleName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveActorComponent_C", "GetModuleName");

	Params::BP_InteractiveActorComponent_C_GetModuleName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

