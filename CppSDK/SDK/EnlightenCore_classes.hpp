#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EnlightenCore

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "EnlightenCore_structs.hpp"
#include "DeveloperSettings_classes.hpp"


namespace SDK
{

// Class EnlightenCore.EnlightenAdaptiveProbeBoxComponent
// 0x0000 (0x0600 - 0x0600)
class UEnlightenAdaptiveProbeBoxComponent final : public UBoxComponent
{
public:
	EEnlightenAdaptiveProbeResolutionWithDefault  Resolution;                                        // 0x05F8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEnlightenQualityWithDefault                  Quality;                                           // 0x05F9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEnlightenUpdateMethodWithDefault             UpdateMethod;                                      // 0x05FA(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5FB[0x5];                                      // 0x05FB(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EnlightenAdaptiveProbeBoxComponent">();
	}
	static class UEnlightenAdaptiveProbeBoxComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEnlightenAdaptiveProbeBoxComponent>();
	}
};
static_assert(alignof(UEnlightenAdaptiveProbeBoxComponent) == 0x000010, "Wrong alignment on UEnlightenAdaptiveProbeBoxComponent");
static_assert(sizeof(UEnlightenAdaptiveProbeBoxComponent) == 0x000600, "Wrong size on UEnlightenAdaptiveProbeBoxComponent");
static_assert(offsetof(UEnlightenAdaptiveProbeBoxComponent, Resolution) == 0x0005F8, "Member 'UEnlightenAdaptiveProbeBoxComponent::Resolution' has a wrong offset!");
static_assert(offsetof(UEnlightenAdaptiveProbeBoxComponent, Quality) == 0x0005F9, "Member 'UEnlightenAdaptiveProbeBoxComponent::Quality' has a wrong offset!");
static_assert(offsetof(UEnlightenAdaptiveProbeBoxComponent, UpdateMethod) == 0x0005FA, "Member 'UEnlightenAdaptiveProbeBoxComponent::UpdateMethod' has a wrong offset!");

// Class EnlightenCore.EnlightenPrecomputeData
// 0x00C0 (0x00E8 - 0x0028)
class UEnlightenPrecomputeData final : public UEnlightenPrecomputeDataBase
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UEnlightenSystem*>               Systems;                                           // 0x0038(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UEnlightenProbeSet*>             VolumeProbeSets;                                   // 0x0048(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UEnlightenProbeSet*>             GeneratedProbeSets;                                // 0x0058(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UEnlightenCubemap*>              Cubemaps;                                          // 0x0068(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FDateTime                              LastPrecomputed;                                   // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        SolutionSignature;                                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEnlightenPrecomputeDataVersion               PrecomputeDataVersion;                             // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LevelUniquePackageName;                            // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ProbeCount;                                        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        MaxAtlasTileCount;                                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        MaxAtlasProbeCount;                                // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        MaxAtlasSolvedProbeCount;                          // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        MaxAtlasInterpolationCount;                        // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector3f                              AtlasProbeCountMaximumLocation;                    // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOutOfCore;                                        // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Partition;                                         // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UEnlightenUVBufferCollection*           UVBufferCollection;                                // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UEnlightenAtlas*                        SystemAtlas;                                       // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_D0[0x8];                                       // 0x00D0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RegisteredLevelName;                               // 0x00D8(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EnlightenPrecomputeData">();
	}
	static class UEnlightenPrecomputeData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEnlightenPrecomputeData>();
	}
};
static_assert(alignof(UEnlightenPrecomputeData) == 0x000008, "Wrong alignment on UEnlightenPrecomputeData");
static_assert(sizeof(UEnlightenPrecomputeData) == 0x0000E8, "Wrong size on UEnlightenPrecomputeData");
static_assert(offsetof(UEnlightenPrecomputeData, Systems) == 0x000038, "Member 'UEnlightenPrecomputeData::Systems' has a wrong offset!");
static_assert(offsetof(UEnlightenPrecomputeData, VolumeProbeSets) == 0x000048, "Member 'UEnlightenPrecomputeData::VolumeProbeSets' has a wrong offset!");
static_assert(offsetof(UEnlightenPrecomputeData, GeneratedProbeSets) == 0x000058, "Member 'UEnlightenPrecomputeData::GeneratedProbeSets' has a wrong offset!");
static_assert(offsetof(UEnlightenPrecomputeData, Cubemaps) == 0x000068, "Member 'UEnlightenPrecomputeData::Cubemaps' has a wrong offset!");
static_assert(offsetof(UEnlightenPrecomputeData, LastPrecomputed) == 0x000078, "Member 'UEnlightenPrecomputeData::LastPrecomputed' has a wrong offset!");
static_assert(offsetof(UEnlightenPrecomputeData, SolutionSignature) == 0x000080, "Member 'UEnlightenPrecomputeData::SolutionSignature' has a wrong offset!");
static_assert(offsetof(UEnlightenPrecomputeData, PrecomputeDataVersion) == 0x000084, "Member 'UEnlightenPrecomputeData::PrecomputeDataVersion' has a wrong offset!");
static_assert(offsetof(UEnlightenPrecomputeData, LevelUniquePackageName) == 0x000088, "Member 'UEnlightenPrecomputeData::LevelUniquePackageName' has a wrong offset!");
static_assert(offsetof(UEnlightenPrecomputeData, ProbeCount) == 0x000098, "Member 'UEnlightenPrecomputeData::ProbeCount' has a wrong offset!");
static_assert(offsetof(UEnlightenPrecomputeData, MaxAtlasTileCount) == 0x00009C, "Member 'UEnlightenPrecomputeData::MaxAtlasTileCount' has a wrong offset!");
static_assert(offsetof(UEnlightenPrecomputeData, MaxAtlasProbeCount) == 0x0000A0, "Member 'UEnlightenPrecomputeData::MaxAtlasProbeCount' has a wrong offset!");
static_assert(offsetof(UEnlightenPrecomputeData, MaxAtlasSolvedProbeCount) == 0x0000A4, "Member 'UEnlightenPrecomputeData::MaxAtlasSolvedProbeCount' has a wrong offset!");
static_assert(offsetof(UEnlightenPrecomputeData, MaxAtlasInterpolationCount) == 0x0000A8, "Member 'UEnlightenPrecomputeData::MaxAtlasInterpolationCount' has a wrong offset!");
static_assert(offsetof(UEnlightenPrecomputeData, AtlasProbeCountMaximumLocation) == 0x0000AC, "Member 'UEnlightenPrecomputeData::AtlasProbeCountMaximumLocation' has a wrong offset!");
static_assert(offsetof(UEnlightenPrecomputeData, bOutOfCore) == 0x0000B8, "Member 'UEnlightenPrecomputeData::bOutOfCore' has a wrong offset!");
static_assert(offsetof(UEnlightenPrecomputeData, Partition) == 0x0000B9, "Member 'UEnlightenPrecomputeData::Partition' has a wrong offset!");
static_assert(offsetof(UEnlightenPrecomputeData, UVBufferCollection) == 0x0000C0, "Member 'UEnlightenPrecomputeData::UVBufferCollection' has a wrong offset!");
static_assert(offsetof(UEnlightenPrecomputeData, SystemAtlas) == 0x0000C8, "Member 'UEnlightenPrecomputeData::SystemAtlas' has a wrong offset!");
static_assert(offsetof(UEnlightenPrecomputeData, RegisteredLevelName) == 0x0000D8, "Member 'UEnlightenPrecomputeData::RegisteredLevelName' has a wrong offset!");

// Class EnlightenCore.EnlightenAdaptiveProbeVolume
// 0x0010 (0x03F0 - 0x03E0)
class AEnlightenAdaptiveProbeVolume final : public AVolume
{
public:
	EEnlightenAdaptiveProbeResolutionWithDefault  Resolution;                                        // 0x03E0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3E1[0x3];                                      // 0x03E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResolutionBias;                                    // 0x03E4(0x0004)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEnlightenQualityWithDefault                  Quality;                                           // 0x03E8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEnlightenUpdateMethodWithDefault             UpdateMethod;                                      // 0x03E9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3EA[0x6];                                      // 0x03EA(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EnlightenAdaptiveProbeVolume">();
	}
	static class AEnlightenAdaptiveProbeVolume* GetDefaultObj()
	{
		return GetDefaultObjImpl<AEnlightenAdaptiveProbeVolume>();
	}
};
static_assert(alignof(AEnlightenAdaptiveProbeVolume) == 0x000008, "Wrong alignment on AEnlightenAdaptiveProbeVolume");
static_assert(sizeof(AEnlightenAdaptiveProbeVolume) == 0x0003F0, "Wrong size on AEnlightenAdaptiveProbeVolume");
static_assert(offsetof(AEnlightenAdaptiveProbeVolume, Resolution) == 0x0003E0, "Member 'AEnlightenAdaptiveProbeVolume::Resolution' has a wrong offset!");
static_assert(offsetof(AEnlightenAdaptiveProbeVolume, ResolutionBias) == 0x0003E4, "Member 'AEnlightenAdaptiveProbeVolume::ResolutionBias' has a wrong offset!");
static_assert(offsetof(AEnlightenAdaptiveProbeVolume, Quality) == 0x0003E8, "Member 'AEnlightenAdaptiveProbeVolume::Quality' has a wrong offset!");
static_assert(offsetof(AEnlightenAdaptiveProbeVolume, UpdateMethod) == 0x0003E9, "Member 'AEnlightenAdaptiveProbeVolume::UpdateMethod' has a wrong offset!");

// Class EnlightenCore.EnlightenRuntimePrecomputeData
// 0x0008 (0x0038 - 0x0030)
class UEnlightenRuntimePrecomputeData final : public UDataAsset
{
public:
	class UEnlightenPrecomputeData*               GeneratePrecomputeData;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EnlightenRuntimePrecomputeData">();
	}
	static class UEnlightenRuntimePrecomputeData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEnlightenRuntimePrecomputeData>();
	}
};
static_assert(alignof(UEnlightenRuntimePrecomputeData) == 0x000008, "Wrong alignment on UEnlightenRuntimePrecomputeData");
static_assert(sizeof(UEnlightenRuntimePrecomputeData) == 0x000038, "Wrong size on UEnlightenRuntimePrecomputeData");
static_assert(offsetof(UEnlightenRuntimePrecomputeData, GeneratePrecomputeData) == 0x000030, "Member 'UEnlightenRuntimePrecomputeData::GeneratePrecomputeData' has a wrong offset!");

// Class EnlightenCore.EnlightenAtlas
// 0x0090 (0x00B8 - 0x0028)
class UEnlightenAtlas final : public UEnlightenAtlasBase
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bCouldClearDuringCook;                             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Width;                                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Height;                                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  AtlasGeneratedGUID;                                // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UEnlightenRuntimeAtlas*                 EnlightenRuntimeAtlas;                             // 0x0058(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEnlightenSerializedData               SerializedData;                                    // 0x0060(0x0040)(NativeAccessSpecifierPublic)
	uint8                                         Pad_A0[0x18];                                      // 0x00A0(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EnlightenAtlas">();
	}
	static class UEnlightenAtlas* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEnlightenAtlas>();
	}
};
static_assert(alignof(UEnlightenAtlas) == 0x000008, "Wrong alignment on UEnlightenAtlas");
static_assert(sizeof(UEnlightenAtlas) == 0x0000B8, "Wrong size on UEnlightenAtlas");
static_assert(offsetof(UEnlightenAtlas, bCouldClearDuringCook) == 0x000038, "Member 'UEnlightenAtlas::bCouldClearDuringCook' has a wrong offset!");
static_assert(offsetof(UEnlightenAtlas, Width) == 0x00003C, "Member 'UEnlightenAtlas::Width' has a wrong offset!");
static_assert(offsetof(UEnlightenAtlas, Height) == 0x000040, "Member 'UEnlightenAtlas::Height' has a wrong offset!");
static_assert(offsetof(UEnlightenAtlas, AtlasGeneratedGUID) == 0x000044, "Member 'UEnlightenAtlas::AtlasGeneratedGUID' has a wrong offset!");
static_assert(offsetof(UEnlightenAtlas, EnlightenRuntimeAtlas) == 0x000058, "Member 'UEnlightenAtlas::EnlightenRuntimeAtlas' has a wrong offset!");
static_assert(offsetof(UEnlightenAtlas, SerializedData) == 0x000060, "Member 'UEnlightenAtlas::SerializedData' has a wrong offset!");

// Class EnlightenCore.EnlightenCubemap
// 0x0060 (0x0088 - 0x0028)
class UEnlightenCubemap final : public UEnlightenCubemapBase
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuid>                          RadiosityDependencies;                             // 0x0038(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_48[0x10];                                      // 0x0048(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  ReflectionCaptureId;                               // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TLazyObjectPtr<class UReflectionCaptureComponent> Component;                                     // 0x0068(0x0018)(ExportObject, InstancedReference, Deprecated, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_80[0x8];                                       // 0x0080(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EnlightenCubemap">();
	}
	static class UEnlightenCubemap* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEnlightenCubemap>();
	}
};
static_assert(alignof(UEnlightenCubemap) == 0x000008, "Wrong alignment on UEnlightenCubemap");
static_assert(sizeof(UEnlightenCubemap) == 0x000088, "Wrong size on UEnlightenCubemap");
static_assert(offsetof(UEnlightenCubemap, RadiosityDependencies) == 0x000038, "Member 'UEnlightenCubemap::RadiosityDependencies' has a wrong offset!");
static_assert(offsetof(UEnlightenCubemap, ReflectionCaptureId) == 0x000058, "Member 'UEnlightenCubemap::ReflectionCaptureId' has a wrong offset!");
static_assert(offsetof(UEnlightenCubemap, Component) == 0x000068, "Member 'UEnlightenCubemap::Component' has a wrong offset!");

// Class EnlightenCore.EnlightenDusterVisualisationComponent
// 0x0010 (0x05D0 - 0x05C0)
class UEnlightenDusterVisualisationComponent final : public UPrimitiveComponent
{
public:
	class UEnlightenSystem*                       System;                                            // 0x05B8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5C0[0x10];                                     // 0x05C0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EnlightenDusterVisualisationComponent">();
	}
	static class UEnlightenDusterVisualisationComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEnlightenDusterVisualisationComponent>();
	}
};
static_assert(alignof(UEnlightenDusterVisualisationComponent) == 0x000010, "Wrong alignment on UEnlightenDusterVisualisationComponent");
static_assert(sizeof(UEnlightenDusterVisualisationComponent) == 0x0005D0, "Wrong size on UEnlightenDusterVisualisationComponent");
static_assert(offsetof(UEnlightenDusterVisualisationComponent, System) == 0x0005B8, "Member 'UEnlightenDusterVisualisationComponent::System' has a wrong offset!");

// Class EnlightenCore.EnlightenInstancedDrawProbeSetComponent
// 0x0050 (0x0B90 - 0x0B40)
class UEnlightenInstancedDrawProbeSetComponent final : public UInstancedStaticMeshComponent
{
public:
	class UStaticMesh*                            SphereMesh;                                        // 0x0B38(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B40[0x50];                                     // 0x0B40(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EnlightenInstancedDrawProbeSetComponent">();
	}
	static class UEnlightenInstancedDrawProbeSetComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEnlightenInstancedDrawProbeSetComponent>();
	}
};
static_assert(alignof(UEnlightenInstancedDrawProbeSetComponent) == 0x000010, "Wrong alignment on UEnlightenInstancedDrawProbeSetComponent");
static_assert(sizeof(UEnlightenInstancedDrawProbeSetComponent) == 0x000B90, "Wrong size on UEnlightenInstancedDrawProbeSetComponent");
static_assert(offsetof(UEnlightenInstancedDrawProbeSetComponent, SphereMesh) == 0x000B38, "Member 'UEnlightenInstancedDrawProbeSetComponent::SphereMesh' has a wrong offset!");

// Class EnlightenCore.EnlightenPrecomputeDataManager
// 0x0088 (0x0430 - 0x03A8)
class AEnlightenPrecomputeDataManager final : public AActor
{
public:
	TArray<struct FEnlightenRuntimePrecomputeDataInfo> StreamedPrecomputeDataInfos;                  // 0x03A8(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                 AssetSaveDir;                                      // 0x03B8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C8[0x68];                                     // 0x03C8(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EnlightenPrecomputeDataManager">();
	}
	static class AEnlightenPrecomputeDataManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AEnlightenPrecomputeDataManager>();
	}
};
static_assert(alignof(AEnlightenPrecomputeDataManager) == 0x000008, "Wrong alignment on AEnlightenPrecomputeDataManager");
static_assert(sizeof(AEnlightenPrecomputeDataManager) == 0x000430, "Wrong size on AEnlightenPrecomputeDataManager");
static_assert(offsetof(AEnlightenPrecomputeDataManager, StreamedPrecomputeDataInfos) == 0x0003A8, "Member 'AEnlightenPrecomputeDataManager::StreamedPrecomputeDataInfos' has a wrong offset!");
static_assert(offsetof(AEnlightenPrecomputeDataManager, AssetSaveDir) == 0x0003B8, "Member 'AEnlightenPrecomputeDataManager::AssetSaveDir' has a wrong offset!");

// Class EnlightenCore.EnlightenProbeSet
// 0x0098 (0x00C0 - 0x0028)
class UEnlightenProbeSet final : public UObject
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuid>                          RadiosityDependencies;                             // 0x0038(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_48[0x60];                                      // 0x0048(0x0060)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  ProbeSetId;                                        // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStreamedProbe;                                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverridedOutOfCore;                               // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         OverridedPartition;                                // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BB[0x5];                                       // 0x00BB(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EnlightenProbeSet">();
	}
	static class UEnlightenProbeSet* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEnlightenProbeSet>();
	}
};
static_assert(alignof(UEnlightenProbeSet) == 0x000008, "Wrong alignment on UEnlightenProbeSet");
static_assert(sizeof(UEnlightenProbeSet) == 0x0000C0, "Wrong size on UEnlightenProbeSet");
static_assert(offsetof(UEnlightenProbeSet, RadiosityDependencies) == 0x000038, "Member 'UEnlightenProbeSet::RadiosityDependencies' has a wrong offset!");
static_assert(offsetof(UEnlightenProbeSet, ProbeSetId) == 0x0000A8, "Member 'UEnlightenProbeSet::ProbeSetId' has a wrong offset!");
static_assert(offsetof(UEnlightenProbeSet, bStreamedProbe) == 0x0000B8, "Member 'UEnlightenProbeSet::bStreamedProbe' has a wrong offset!");
static_assert(offsetof(UEnlightenProbeSet, bOverridedOutOfCore) == 0x0000B9, "Member 'UEnlightenProbeSet::bOverridedOutOfCore' has a wrong offset!");
static_assert(offsetof(UEnlightenProbeSet, OverridedPartition) == 0x0000BA, "Member 'UEnlightenProbeSet::OverridedPartition' has a wrong offset!");

// Class EnlightenCore.EnlightenProbeSetComponent
// 0x0000 (0x0230 - 0x0230)
class UEnlightenProbeSetComponent final : public USceneComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EnlightenProbeSetComponent">();
	}
	static class UEnlightenProbeSetComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEnlightenProbeSetComponent>();
	}
};
static_assert(alignof(UEnlightenProbeSetComponent) == 0x000010, "Wrong alignment on UEnlightenProbeSetComponent");
static_assert(sizeof(UEnlightenProbeSetComponent) == 0x000230, "Wrong size on UEnlightenProbeSetComponent");

// Class EnlightenCore.EnlightenStreamingProbeSetAssetData
// 0x0008 (0x0038 - 0x0030)
class UEnlightenStreamingProbeSetAssetData final : public UDataAsset
{
public:
	class UEnlightenProbeSet*                     GenerateProbeSet;                                  // 0x0030(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EnlightenStreamingProbeSetAssetData">();
	}
	static class UEnlightenStreamingProbeSetAssetData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEnlightenStreamingProbeSetAssetData>();
	}
};
static_assert(alignof(UEnlightenStreamingProbeSetAssetData) == 0x000008, "Wrong alignment on UEnlightenStreamingProbeSetAssetData");
static_assert(sizeof(UEnlightenStreamingProbeSetAssetData) == 0x000038, "Wrong size on UEnlightenStreamingProbeSetAssetData");
static_assert(offsetof(UEnlightenStreamingProbeSetAssetData, GenerateProbeSet) == 0x000030, "Member 'UEnlightenStreamingProbeSetAssetData::GenerateProbeSet' has a wrong offset!");

// Class EnlightenCore.EnlightenProbeSetManager
// 0x00E8 (0x0490 - 0x03A8)
class AEnlightenProbeSetManager final : public AActor
{
public:
	TArray<struct FEnlightenStreamingProbeSetInfo> StreamedProbeSetInfos;                            // 0x03A8(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                 AssetSaveDir;                                      // 0x03B8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     ProbeVisualisationMaterial;                        // 0x03C8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UEnlightenInstancedDrawProbeSetComponent*> DebugEnlightenProbeSets;                 // 0x03D0(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_3E0[0xB0];                                     // 0x03E0(0x00B0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EnlightenProbeSetManager">();
	}
	static class AEnlightenProbeSetManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AEnlightenProbeSetManager>();
	}
};
static_assert(alignof(AEnlightenProbeSetManager) == 0x000008, "Wrong alignment on AEnlightenProbeSetManager");
static_assert(sizeof(AEnlightenProbeSetManager) == 0x000490, "Wrong size on AEnlightenProbeSetManager");
static_assert(offsetof(AEnlightenProbeSetManager, StreamedProbeSetInfos) == 0x0003A8, "Member 'AEnlightenProbeSetManager::StreamedProbeSetInfos' has a wrong offset!");
static_assert(offsetof(AEnlightenProbeSetManager, AssetSaveDir) == 0x0003B8, "Member 'AEnlightenProbeSetManager::AssetSaveDir' has a wrong offset!");
static_assert(offsetof(AEnlightenProbeSetManager, ProbeVisualisationMaterial) == 0x0003C8, "Member 'AEnlightenProbeSetManager::ProbeVisualisationMaterial' has a wrong offset!");
static_assert(offsetof(AEnlightenProbeSetManager, DebugEnlightenProbeSets) == 0x0003D0, "Member 'AEnlightenProbeSetManager::DebugEnlightenProbeSets' has a wrong offset!");

// Class EnlightenCore.EnlightenRuntimeAtlas
// 0x0038 (0x0060 - 0x0028)
class UEnlightenRuntimeAtlas final : public UEnlightenAtlasBase
{
public:
	int32                                         SizeX;                                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SizeY;                                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_30[0x30];                                      // 0x0030(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EnlightenRuntimeAtlas">();
	}
	static class UEnlightenRuntimeAtlas* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEnlightenRuntimeAtlas>();
	}
};
static_assert(alignof(UEnlightenRuntimeAtlas) == 0x000008, "Wrong alignment on UEnlightenRuntimeAtlas");
static_assert(sizeof(UEnlightenRuntimeAtlas) == 0x000060, "Wrong size on UEnlightenRuntimeAtlas");
static_assert(offsetof(UEnlightenRuntimeAtlas, SizeX) == 0x000028, "Member 'UEnlightenRuntimeAtlas::SizeX' has a wrong offset!");
static_assert(offsetof(UEnlightenRuntimeAtlas, SizeY) == 0x00002C, "Member 'UEnlightenRuntimeAtlas::SizeY' has a wrong offset!");

// Class EnlightenCore.EnlightenSettings
// 0x0030 (0x0068 - 0x0038)
class UEnlightenSettings final : public UDeveloperSettings
{
public:
	int32                                         CubemapResolution;                                 // 0x0038(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bAllowEnlighten : 1;                               // 0x003C(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	EEnlightenLightmapDisplayQuality              EnlightenLightmapDisplayQuality;                   // 0x0040(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         EnlightenProbeIrradianceScale;                     // 0x0044(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bSkyLightingFallback;                              // 0x0048(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LevelPixelCountWarningThreshold;                   // 0x004C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LevelProbeCountWarningThreshold;                   // 0x0050(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LevelSystemCountWarningThreshold;                  // 0x0054(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LevelProbeSetCountWarningThreshold;                // 0x0058(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ProbeCountWarningThreshold;                        // 0x005C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LevelDependencyThreshold;                          // 0x0060(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LargeWorldThreshold;                               // 0x0064(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EnlightenSettings">();
	}
	static class UEnlightenSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEnlightenSettings>();
	}
};
static_assert(alignof(UEnlightenSettings) == 0x000008, "Wrong alignment on UEnlightenSettings");
static_assert(sizeof(UEnlightenSettings) == 0x000068, "Wrong size on UEnlightenSettings");
static_assert(offsetof(UEnlightenSettings, CubemapResolution) == 0x000038, "Member 'UEnlightenSettings::CubemapResolution' has a wrong offset!");
static_assert(offsetof(UEnlightenSettings, EnlightenLightmapDisplayQuality) == 0x000040, "Member 'UEnlightenSettings::EnlightenLightmapDisplayQuality' has a wrong offset!");
static_assert(offsetof(UEnlightenSettings, EnlightenProbeIrradianceScale) == 0x000044, "Member 'UEnlightenSettings::EnlightenProbeIrradianceScale' has a wrong offset!");
static_assert(offsetof(UEnlightenSettings, bSkyLightingFallback) == 0x000048, "Member 'UEnlightenSettings::bSkyLightingFallback' has a wrong offset!");
static_assert(offsetof(UEnlightenSettings, LevelPixelCountWarningThreshold) == 0x00004C, "Member 'UEnlightenSettings::LevelPixelCountWarningThreshold' has a wrong offset!");
static_assert(offsetof(UEnlightenSettings, LevelProbeCountWarningThreshold) == 0x000050, "Member 'UEnlightenSettings::LevelProbeCountWarningThreshold' has a wrong offset!");
static_assert(offsetof(UEnlightenSettings, LevelSystemCountWarningThreshold) == 0x000054, "Member 'UEnlightenSettings::LevelSystemCountWarningThreshold' has a wrong offset!");
static_assert(offsetof(UEnlightenSettings, LevelProbeSetCountWarningThreshold) == 0x000058, "Member 'UEnlightenSettings::LevelProbeSetCountWarningThreshold' has a wrong offset!");
static_assert(offsetof(UEnlightenSettings, ProbeCountWarningThreshold) == 0x00005C, "Member 'UEnlightenSettings::ProbeCountWarningThreshold' has a wrong offset!");
static_assert(offsetof(UEnlightenSettings, LevelDependencyThreshold) == 0x000060, "Member 'UEnlightenSettings::LevelDependencyThreshold' has a wrong offset!");
static_assert(offsetof(UEnlightenSettings, LargeWorldThreshold) == 0x000064, "Member 'UEnlightenSettings::LargeWorldThreshold' has a wrong offset!");

// Class EnlightenCore.EnlightenSystem
// 0x0138 (0x0160 - 0x0028)
class UEnlightenSystem final : public UEnlightenSystemBase
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bCouldClearDuringCook;                             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Width;                                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Height;                                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AtlasBaseX;                                        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AtlasBaseY;                                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  SystemGuid;                                        // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuid>                          RadiosityDependencies;                             // 0x0060(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	class UTexture2D*                             ChartsTexture;                                     // 0x0070(0x0008)(ZeroConstructor, Deprecated, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_78[0x60];                                      // 0x0078(0x0060)(Fixing Size After Last Property [ Dumper-7 ])
	class UEnlightenSystemAlbedoBase*             Albedo;                                            // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FEnlightenSerializedData               SerializedData;                                    // 0x00E0(0x0040)(NativeAccessSpecifierPrivate)
	struct FBoxSphereBounds                       Bounds;                                            // 0x0120(0x0038)(ZeroConstructor, IsPlainOldData, NoDestructor, TextExportTransient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_158[0x8];                                      // 0x0158(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EnlightenSystem">();
	}
	static class UEnlightenSystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEnlightenSystem>();
	}
};
static_assert(alignof(UEnlightenSystem) == 0x000008, "Wrong alignment on UEnlightenSystem");
static_assert(sizeof(UEnlightenSystem) == 0x000160, "Wrong size on UEnlightenSystem");
static_assert(offsetof(UEnlightenSystem, bCouldClearDuringCook) == 0x000038, "Member 'UEnlightenSystem::bCouldClearDuringCook' has a wrong offset!");
static_assert(offsetof(UEnlightenSystem, Width) == 0x00003C, "Member 'UEnlightenSystem::Width' has a wrong offset!");
static_assert(offsetof(UEnlightenSystem, Height) == 0x000040, "Member 'UEnlightenSystem::Height' has a wrong offset!");
static_assert(offsetof(UEnlightenSystem, AtlasBaseX) == 0x000044, "Member 'UEnlightenSystem::AtlasBaseX' has a wrong offset!");
static_assert(offsetof(UEnlightenSystem, AtlasBaseY) == 0x000048, "Member 'UEnlightenSystem::AtlasBaseY' has a wrong offset!");
static_assert(offsetof(UEnlightenSystem, SystemGuid) == 0x00004C, "Member 'UEnlightenSystem::SystemGuid' has a wrong offset!");
static_assert(offsetof(UEnlightenSystem, RadiosityDependencies) == 0x000060, "Member 'UEnlightenSystem::RadiosityDependencies' has a wrong offset!");
static_assert(offsetof(UEnlightenSystem, ChartsTexture) == 0x000070, "Member 'UEnlightenSystem::ChartsTexture' has a wrong offset!");
static_assert(offsetof(UEnlightenSystem, Albedo) == 0x0000D8, "Member 'UEnlightenSystem::Albedo' has a wrong offset!");
static_assert(offsetof(UEnlightenSystem, SerializedData) == 0x0000E0, "Member 'UEnlightenSystem::SerializedData' has a wrong offset!");
static_assert(offsetof(UEnlightenSystem, Bounds) == 0x000120, "Member 'UEnlightenSystem::Bounds' has a wrong offset!");

// Class EnlightenCore.EnlightenUVBufferCollection
// 0x0028 (0x0050 - 0x0028)
class UEnlightenUVBufferCollection final : public UEnlightenUVBufferCollectionBase
{
public:
	bool                                          bCouldClearDuringCook;                             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 UVIndexMapping;                                    // 0x0030(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_40[0x10];                                      // 0x0040(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EnlightenUVBufferCollection">();
	}
	static class UEnlightenUVBufferCollection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEnlightenUVBufferCollection>();
	}
};
static_assert(alignof(UEnlightenUVBufferCollection) == 0x000008, "Wrong alignment on UEnlightenUVBufferCollection");
static_assert(sizeof(UEnlightenUVBufferCollection) == 0x000050, "Wrong size on UEnlightenUVBufferCollection");
static_assert(offsetof(UEnlightenUVBufferCollection, bCouldClearDuringCook) == 0x000028, "Member 'UEnlightenUVBufferCollection::bCouldClearDuringCook' has a wrong offset!");
static_assert(offsetof(UEnlightenUVBufferCollection, UVIndexMapping) == 0x000030, "Member 'UEnlightenUVBufferCollection::UVIndexMapping' has a wrong offset!");

// Class EnlightenCore.EnlightenSystemAlbedoBase
// 0x0008 (0x0030 - 0x0028)
class UEnlightenSystemAlbedoBase : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EnlightenSystemAlbedoBase">();
	}
	static class UEnlightenSystemAlbedoBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEnlightenSystemAlbedoBase>();
	}
};
static_assert(alignof(UEnlightenSystemAlbedoBase) == 0x000008, "Wrong alignment on UEnlightenSystemAlbedoBase");
static_assert(sizeof(UEnlightenSystemAlbedoBase) == 0x000030, "Wrong size on UEnlightenSystemAlbedoBase");

// Class EnlightenCore.EnlightenSystemBoundsComponent
// 0x0000 (0x05C0 - 0x05C0)
class UEnlightenSystemBoundsComponent final : public UPrimitiveComponent
{
public:
	class UEnlightenSystem*                       System;                                            // 0x05B8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EnlightenSystemBoundsComponent">();
	}
	static class UEnlightenSystemBoundsComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEnlightenSystemBoundsComponent>();
	}
};
static_assert(alignof(UEnlightenSystemBoundsComponent) == 0x000010, "Wrong alignment on UEnlightenSystemBoundsComponent");
static_assert(sizeof(UEnlightenSystemBoundsComponent) == 0x0005C0, "Wrong size on UEnlightenSystemBoundsComponent");
static_assert(offsetof(UEnlightenSystemBoundsComponent, System) == 0x0005B8, "Member 'UEnlightenSystemBoundsComponent::System' has a wrong offset!");

// Class EnlightenCore.EnlightenSystemContainer
// 0x0048 (0x03F0 - 0x03A8)
class AEnlightenSystemContainer final : public APartitionActor
{
public:
	class FName                                   GridCellName;                                      // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OverredMaxAtlasProbeCount;                         // 0x03B0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OverredMaxAtlasTileCount;                          // 0x03B4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OverredMaxAtlasSolvedProbeCount;                   // 0x03B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OverredMaxAtlasInterpolationCount;                 // 0x03BC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OverrideRuntimeStreamingDistance;                  // 0x03C0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bGeneratedFromStreamedData;                        // 0x03C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C5[0x3];                                      // 0x03C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              OverridedPrecomputeTimestamp;                      // 0x03C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bProcessedWithPaperPartition;                      // 0x03D0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3D1[0x7];                                      // 0x03D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEnlightenPrecomputeData*               PrecomputeData;                                    // 0x03D8(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UEnlightenPrecomputeData*               SerializedPrecomputeData;                          // 0x03E0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UEnlightenSystemContainerComponent*     SystemContainerComponent;                          // 0x03E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static bool ResetEnlightenRuntime(class UObject* WorldContextObject);
	static void SetEnlightenActiveLevel(class UObject* WorldContextObject, const class FString& LevelName);
	static void SetUpdateBudget(class UObject* WorldContextObject, float UpdateBudgetMS);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EnlightenSystemContainer">();
	}
	static class AEnlightenSystemContainer* GetDefaultObj()
	{
		return GetDefaultObjImpl<AEnlightenSystemContainer>();
	}
};
static_assert(alignof(AEnlightenSystemContainer) == 0x000008, "Wrong alignment on AEnlightenSystemContainer");
static_assert(sizeof(AEnlightenSystemContainer) == 0x0003F0, "Wrong size on AEnlightenSystemContainer");
static_assert(offsetof(AEnlightenSystemContainer, GridCellName) == 0x0003A8, "Member 'AEnlightenSystemContainer::GridCellName' has a wrong offset!");
static_assert(offsetof(AEnlightenSystemContainer, OverredMaxAtlasProbeCount) == 0x0003B0, "Member 'AEnlightenSystemContainer::OverredMaxAtlasProbeCount' has a wrong offset!");
static_assert(offsetof(AEnlightenSystemContainer, OverredMaxAtlasTileCount) == 0x0003B4, "Member 'AEnlightenSystemContainer::OverredMaxAtlasTileCount' has a wrong offset!");
static_assert(offsetof(AEnlightenSystemContainer, OverredMaxAtlasSolvedProbeCount) == 0x0003B8, "Member 'AEnlightenSystemContainer::OverredMaxAtlasSolvedProbeCount' has a wrong offset!");
static_assert(offsetof(AEnlightenSystemContainer, OverredMaxAtlasInterpolationCount) == 0x0003BC, "Member 'AEnlightenSystemContainer::OverredMaxAtlasInterpolationCount' has a wrong offset!");
static_assert(offsetof(AEnlightenSystemContainer, OverrideRuntimeStreamingDistance) == 0x0003C0, "Member 'AEnlightenSystemContainer::OverrideRuntimeStreamingDistance' has a wrong offset!");
static_assert(offsetof(AEnlightenSystemContainer, bGeneratedFromStreamedData) == 0x0003C4, "Member 'AEnlightenSystemContainer::bGeneratedFromStreamedData' has a wrong offset!");
static_assert(offsetof(AEnlightenSystemContainer, OverridedPrecomputeTimestamp) == 0x0003C8, "Member 'AEnlightenSystemContainer::OverridedPrecomputeTimestamp' has a wrong offset!");
static_assert(offsetof(AEnlightenSystemContainer, bProcessedWithPaperPartition) == 0x0003D0, "Member 'AEnlightenSystemContainer::bProcessedWithPaperPartition' has a wrong offset!");
static_assert(offsetof(AEnlightenSystemContainer, PrecomputeData) == 0x0003D8, "Member 'AEnlightenSystemContainer::PrecomputeData' has a wrong offset!");
static_assert(offsetof(AEnlightenSystemContainer, SerializedPrecomputeData) == 0x0003E0, "Member 'AEnlightenSystemContainer::SerializedPrecomputeData' has a wrong offset!");
static_assert(offsetof(AEnlightenSystemContainer, SystemContainerComponent) == 0x0003E8, "Member 'AEnlightenSystemContainer::SystemContainerComponent' has a wrong offset!");

// Class EnlightenCore.EnlightenSystemContainerComponent
// 0x0000 (0x0230 - 0x0230)
class UEnlightenSystemContainerComponent final : public USceneComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EnlightenSystemContainerComponent">();
	}
	static class UEnlightenSystemContainerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEnlightenSystemContainerComponent>();
	}
};
static_assert(alignof(UEnlightenSystemContainerComponent) == 0x000010, "Wrong alignment on UEnlightenSystemContainerComponent");
static_assert(sizeof(UEnlightenSystemContainerComponent) == 0x000230, "Wrong size on UEnlightenSystemContainerComponent");

// Class EnlightenCore.EnlightenSystemDusterAlbedo
// 0x0000 (0x0030 - 0x0030)
class UEnlightenSystemDusterAlbedo final : public UEnlightenSystemAlbedoBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EnlightenSystemDusterAlbedo">();
	}
	static class UEnlightenSystemDusterAlbedo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEnlightenSystemDusterAlbedo>();
	}
};
static_assert(alignof(UEnlightenSystemDusterAlbedo) == 0x000008, "Wrong alignment on UEnlightenSystemDusterAlbedo");
static_assert(sizeof(UEnlightenSystemDusterAlbedo) == 0x000030, "Wrong size on UEnlightenSystemDusterAlbedo");

// Class EnlightenCore.EnlightenSystemTextureAlbedo
// 0x0000 (0x0030 - 0x0030)
class UEnlightenSystemTextureAlbedo final : public UEnlightenSystemAlbedoBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EnlightenSystemTextureAlbedo">();
	}
	static class UEnlightenSystemTextureAlbedo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEnlightenSystemTextureAlbedo>();
	}
};
static_assert(alignof(UEnlightenSystemTextureAlbedo) == 0x000008, "Wrong alignment on UEnlightenSystemTextureAlbedo");
static_assert(sizeof(UEnlightenSystemTextureAlbedo) == 0x000030, "Wrong size on UEnlightenSystemTextureAlbedo");

// Class EnlightenCore.EnlightenWorldSubsystem
// 0x0050 (0x0080 - 0x0030)
class UEnlightenWorldSubsystem final : public UWorldSubsystem
{
public:
	uint8                                         Pad_30[0x50];                                      // 0x0030(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EnlightenWorldSubsystem">();
	}
	static class UEnlightenWorldSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEnlightenWorldSubsystem>();
	}
};
static_assert(alignof(UEnlightenWorldSubsystem) == 0x000008, "Wrong alignment on UEnlightenWorldSubsystem");
static_assert(sizeof(UEnlightenWorldSubsystem) == 0x000080, "Wrong size on UEnlightenWorldSubsystem");

}

