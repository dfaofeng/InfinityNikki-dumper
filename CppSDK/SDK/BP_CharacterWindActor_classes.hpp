#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharacterWindActor

#include "Basic.hpp"

#include "Enum_WindDirection_structs.hpp"
#include "Enum_WindIntensity_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CharacterWindActor.BP_CharacterWindActor_C
// 0x0018 (0x03C0 - 0x03A8)
class ABP_CharacterWindActor_C final : public AActor
{
public:
	class UBoxComponent*                          Box;                                               // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	Enum_WindDirection                            WindDirection;                                     // 0x03B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_WindIntensity                            windIntensity;                                     // 0x03BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CharacterWindActor_C">();
	}
	static class ABP_CharacterWindActor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CharacterWindActor_C>();
	}
};
static_assert(alignof(ABP_CharacterWindActor_C) == 0x000008, "Wrong alignment on ABP_CharacterWindActor_C");
static_assert(sizeof(ABP_CharacterWindActor_C) == 0x0003C0, "Wrong size on ABP_CharacterWindActor_C");
static_assert(offsetof(ABP_CharacterWindActor_C, Box) == 0x0003A8, "Member 'ABP_CharacterWindActor_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_CharacterWindActor_C, DefaultSceneRoot) == 0x0003B0, "Member 'ABP_CharacterWindActor_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_CharacterWindActor_C, WindDirection) == 0x0003B8, "Member 'ABP_CharacterWindActor_C::WindDirection' has a wrong offset!");
static_assert(offsetof(ABP_CharacterWindActor_C, windIntensity) == 0x0003BC, "Member 'ABP_CharacterWindActor_C::windIntensity' has a wrong offset!");

}

