#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DaMiaoDlgConfig

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "F_BossCombatDlgStruct_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DaMiaoDlgConfig.BP_DaMiaoDlgConfig_C
// 0x0128 (0x0158 - 0x0030)
class UBP_DaMiaoDlgConfig_C final : public UPrimaryDataAsset
{
public:
	TArray<class FString>                         Vitality_Tip_StageIds;                             // 0x0030(0x0010)(Edit, BlueprintVisible)
	double                                        PuzzleCube_Tip_Check_Duration;                     // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PuzzleCube_Tip_Check_Range;                        // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PuzzleCube_Tip_Check_Residence_Time;               // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        PuzzleCube_Tip_CD;                                 // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PuzzleCube_Tip_Check_Duration1;                    // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Dodge_Tip_Check_Duration;                          // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Dodge_Tip_Check_Time;                              // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Battle_Tip_StageIds;                               // 0x0078(0x0010)(Edit, BlueprintVisible)
	double                                        Battle_Tip_CD;                                     // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Hit_Tip_Check_Duration;                            // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Hit_Tip_Check_Time;                                // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         PuzzleCube_Tip_StageIds;                           // 0x00A0(0x0010)(Edit, BlueprintVisible)
	TArray<class FString>                         Dodge_Tip_StageIds;                                // 0x00B0(0x0010)(Edit, BlueprintVisible)
	TArray<class FString>                         Hit_Tip_StageIds;                                  // 0x00C0(0x0010)(Edit, BlueprintVisible)
	double                                        AvoidanceTipsCheckDuration;                        // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AvoidanceTipsCheckTotalNumber;                     // 0x00D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         AvoidanceTipsStageID;                              // 0x00E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FString>                         EdgeProtectionTipsStageID;                         // 0x00F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        CommonCD;                                          // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<int32, struct FF_BossCombatDlgStruct>    BossCombatTipConfig;                               // 0x0108(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DaMiaoDlgConfig_C">();
	}
	static class UBP_DaMiaoDlgConfig_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_DaMiaoDlgConfig_C>();
	}
};
static_assert(alignof(UBP_DaMiaoDlgConfig_C) == 0x000008, "Wrong alignment on UBP_DaMiaoDlgConfig_C");
static_assert(sizeof(UBP_DaMiaoDlgConfig_C) == 0x000158, "Wrong size on UBP_DaMiaoDlgConfig_C");
static_assert(offsetof(UBP_DaMiaoDlgConfig_C, Vitality_Tip_StageIds) == 0x000030, "Member 'UBP_DaMiaoDlgConfig_C::Vitality_Tip_StageIds' has a wrong offset!");
static_assert(offsetof(UBP_DaMiaoDlgConfig_C, PuzzleCube_Tip_Check_Duration) == 0x000040, "Member 'UBP_DaMiaoDlgConfig_C::PuzzleCube_Tip_Check_Duration' has a wrong offset!");
static_assert(offsetof(UBP_DaMiaoDlgConfig_C, PuzzleCube_Tip_Check_Range) == 0x000048, "Member 'UBP_DaMiaoDlgConfig_C::PuzzleCube_Tip_Check_Range' has a wrong offset!");
static_assert(offsetof(UBP_DaMiaoDlgConfig_C, PuzzleCube_Tip_Check_Residence_Time) == 0x000050, "Member 'UBP_DaMiaoDlgConfig_C::PuzzleCube_Tip_Check_Residence_Time' has a wrong offset!");
static_assert(offsetof(UBP_DaMiaoDlgConfig_C, PuzzleCube_Tip_CD) == 0x000058, "Member 'UBP_DaMiaoDlgConfig_C::PuzzleCube_Tip_CD' has a wrong offset!");
static_assert(offsetof(UBP_DaMiaoDlgConfig_C, PuzzleCube_Tip_Check_Duration1) == 0x000060, "Member 'UBP_DaMiaoDlgConfig_C::PuzzleCube_Tip_Check_Duration1' has a wrong offset!");
static_assert(offsetof(UBP_DaMiaoDlgConfig_C, Dodge_Tip_Check_Duration) == 0x000068, "Member 'UBP_DaMiaoDlgConfig_C::Dodge_Tip_Check_Duration' has a wrong offset!");
static_assert(offsetof(UBP_DaMiaoDlgConfig_C, Dodge_Tip_Check_Time) == 0x000070, "Member 'UBP_DaMiaoDlgConfig_C::Dodge_Tip_Check_Time' has a wrong offset!");
static_assert(offsetof(UBP_DaMiaoDlgConfig_C, Battle_Tip_StageIds) == 0x000078, "Member 'UBP_DaMiaoDlgConfig_C::Battle_Tip_StageIds' has a wrong offset!");
static_assert(offsetof(UBP_DaMiaoDlgConfig_C, Battle_Tip_CD) == 0x000088, "Member 'UBP_DaMiaoDlgConfig_C::Battle_Tip_CD' has a wrong offset!");
static_assert(offsetof(UBP_DaMiaoDlgConfig_C, Hit_Tip_Check_Duration) == 0x000090, "Member 'UBP_DaMiaoDlgConfig_C::Hit_Tip_Check_Duration' has a wrong offset!");
static_assert(offsetof(UBP_DaMiaoDlgConfig_C, Hit_Tip_Check_Time) == 0x000098, "Member 'UBP_DaMiaoDlgConfig_C::Hit_Tip_Check_Time' has a wrong offset!");
static_assert(offsetof(UBP_DaMiaoDlgConfig_C, PuzzleCube_Tip_StageIds) == 0x0000A0, "Member 'UBP_DaMiaoDlgConfig_C::PuzzleCube_Tip_StageIds' has a wrong offset!");
static_assert(offsetof(UBP_DaMiaoDlgConfig_C, Dodge_Tip_StageIds) == 0x0000B0, "Member 'UBP_DaMiaoDlgConfig_C::Dodge_Tip_StageIds' has a wrong offset!");
static_assert(offsetof(UBP_DaMiaoDlgConfig_C, Hit_Tip_StageIds) == 0x0000C0, "Member 'UBP_DaMiaoDlgConfig_C::Hit_Tip_StageIds' has a wrong offset!");
static_assert(offsetof(UBP_DaMiaoDlgConfig_C, AvoidanceTipsCheckDuration) == 0x0000D0, "Member 'UBP_DaMiaoDlgConfig_C::AvoidanceTipsCheckDuration' has a wrong offset!");
static_assert(offsetof(UBP_DaMiaoDlgConfig_C, AvoidanceTipsCheckTotalNumber) == 0x0000D8, "Member 'UBP_DaMiaoDlgConfig_C::AvoidanceTipsCheckTotalNumber' has a wrong offset!");
static_assert(offsetof(UBP_DaMiaoDlgConfig_C, AvoidanceTipsStageID) == 0x0000E0, "Member 'UBP_DaMiaoDlgConfig_C::AvoidanceTipsStageID' has a wrong offset!");
static_assert(offsetof(UBP_DaMiaoDlgConfig_C, EdgeProtectionTipsStageID) == 0x0000F0, "Member 'UBP_DaMiaoDlgConfig_C::EdgeProtectionTipsStageID' has a wrong offset!");
static_assert(offsetof(UBP_DaMiaoDlgConfig_C, CommonCD) == 0x000100, "Member 'UBP_DaMiaoDlgConfig_C::CommonCD' has a wrong offset!");
static_assert(offsetof(UBP_DaMiaoDlgConfig_C, BossCombatTipConfig) == 0x000108, "Member 'UBP_DaMiaoDlgConfig_C::BossCombatTipConfig' has a wrong offset!");

}

