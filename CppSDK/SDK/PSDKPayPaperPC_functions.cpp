#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PSDKPayPaperPC

#include "Basic.hpp"

#include "PSDKPayPaperPC_classes.hpp"
#include "PSDKPayPaperPC_parameters.hpp"


namespace SDK
{

// Function PSDKPayPaperPC.PSdkPayOverseasUI.Handle
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const class FString&                    Params_0                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPSdkPayOverseasUI::Handle(const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PSdkPayOverseasUI", "Handle");

	Params::PSdkPayOverseasUI_Handle Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PSDKPayPaperPC.PSdkPayOverseasUI.OnCloseButton
// (Final, Native, Protected, BlueprintCallable)

void UPSdkPayOverseasUI::OnCloseButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PSdkPayOverseasUI", "OnCloseButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PSDKPayPaperPC.PSdkPayOverseasUI.OnPrintButton
// (Final, Native, Protected, BlueprintCallable)

void UPSdkPayOverseasUI::OnPrintButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PSdkPayOverseasUI", "OnPrintButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PSDKPayPaperPC.PSdkPayOverseasUI.Setup
// (Final, Native, Protected, BlueprintCallable)

void UPSdkPayOverseasUI::Setup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PSdkPayOverseasUI", "Setup");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PSDKPayPaperPC.PSdkPayOverseasUI.WebBrowerLoadCompleted
// (Final, Native, Protected, BlueprintCallable)

void UPSdkPayOverseasUI::WebBrowerLoadCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PSdkPayOverseasUI", "WebBrowerLoadCompleted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PSDKPayPaperPC.PSdkPayOverseasUI.WebBrowerLoadError
// (Final, Native, Protected, BlueprintCallable)

void UPSdkPayOverseasUI::WebBrowerLoadError()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PSdkPayOverseasUI", "WebBrowerLoadError");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PSDKPayPaperPC.PSdkPayOverseasUI.WebBrowerLoadStarted
// (Final, Native, Protected, BlueprintCallable)

void UPSdkPayOverseasUI::WebBrowerLoadStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PSdkPayOverseasUI", "WebBrowerLoadStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PSDKPayPaperPC.PSdkPayOverseasUI.WebBrowserLoadUrlChanged
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const class FText&                      Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UPSdkPayOverseasUI::WebBrowserLoadUrlChanged(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PSdkPayOverseasUI", "WebBrowserLoadUrlChanged");

	Params::PSdkPayOverseasUI_WebBrowserLoadUrlChanged Parms{};

	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PSDKPayPaperPC.PSPaperPayPCChargeTypeItemWidget.OnReleaseButtonClicked
// (Final, Native, Protected, BlueprintCallable)

void UPSPaperPayPCChargeTypeItemWidget::OnReleaseButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PSPaperPayPCChargeTypeItemWidget", "OnReleaseButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PSDKPayPaperPC.PSPaperPayPCModalWidget.OnChangedButtonRelease
// (Final, Native, Protected, BlueprintCallable)

void UPSPaperPayPCModalWidget::OnChangedButtonRelease()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PSPaperPayPCModalWidget", "OnChangedButtonRelease");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PSDKPayPaperPC.PSPaperPayPCModalWidget.OnCloseButtonRelease
// (Final, Native, Protected, BlueprintCallable)

void UPSPaperPayPCModalWidget::OnCloseButtonRelease()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PSPaperPayPCModalWidget", "OnCloseButtonRelease");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PSDKPayPaperPC.PSPaperPayPCModalWidget.OnFinishedButtonRelease
// (Final, Native, Protected, BlueprintCallable)

void UPSPaperPayPCModalWidget::OnFinishedButtonRelease()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PSPaperPayPCModalWidget", "OnFinishedButtonRelease");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PSDKPayPaperPC.PSPaperPayPCModalWidget.OnOkButtonRelease
// (Final, Native, Protected, BlueprintCallable)

void UPSPaperPayPCModalWidget::OnOkButtonRelease()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PSPaperPayPCModalWidget", "OnOkButtonRelease");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PSDKPayPaperPC.PSPaperPayPCModalWidget.OnReOrderButtonRelease
// (Final, Native, Protected, BlueprintCallable)

void UPSPaperPayPCModalWidget::OnReOrderButtonRelease()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PSPaperPayPCModalWidget", "OnReOrderButtonRelease");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PSDKPayPaperPC.PSPaperPayPCModalWidget.OnRetryButtonRelease
// (Final, Native, Protected, BlueprintCallable)

void UPSPaperPayPCModalWidget::OnRetryButtonRelease()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PSPaperPayPCModalWidget", "OnRetryButtonRelease");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PSDKPayPaperPC.PSPaperPayPCView.OnChangedButtonDelegate
// (Final, Native, Protected)
// Parameters:
// const class FString&                    Info                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPSPaperPayPCView::OnChangedButtonDelegate(const class FString& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PSPaperPayPCView", "OnChangedButtonDelegate");

	Params::PSPaperPayPCView_OnChangedButtonDelegate Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PSDKPayPaperPC.PSPaperPayPCView.OnCloseButton
// (Final, Native, Public, BlueprintCallable)

void UPSPaperPayPCView::OnCloseButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PSPaperPayPCView", "OnCloseButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PSDKPayPaperPC.PSPaperPayPCView.OnCloseButtonDelegate
// (Final, Native, Protected)
// Parameters:
// const bool                              CloseModal                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPSPaperPayPCView::OnCloseButtonDelegate(const bool CloseModal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PSPaperPayPCView", "OnCloseButtonDelegate");

	Params::PSPaperPayPCView_OnCloseButtonDelegate Parms{};

	Parms.CloseModal = CloseModal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PSDKPayPaperPC.PSPaperPayPCView.OnFinishedButtonDelegate
// (Final, Native, Protected)
// Parameters:
// const class FString&                    Info                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPSPaperPayPCView::OnFinishedButtonDelegate(const class FString& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PSPaperPayPCView", "OnFinishedButtonDelegate");

	Params::PSPaperPayPCView_OnFinishedButtonDelegate Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PSDKPayPaperPC.PSPaperPayPCView.OnOkButtonDelegate
// (Final, Native, Protected)
// Parameters:
// const class FString&                    Info                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPSPaperPayPCView::OnOkButtonDelegate(const class FString& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PSPaperPayPCView", "OnOkButtonDelegate");

	Params::PSPaperPayPCView_OnOkButtonDelegate Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PSDKPayPaperPC.PSPaperPayPCView.OnPayButtonClicked
// (Final, Native, Protected)
// Parameters:
// const class FString&                    ChargeType                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPSPaperPayPCView::OnPayButtonClicked(const class FString& ChargeType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PSPaperPayPCView", "OnPayButtonClicked");

	Params::PSPaperPayPCView_OnPayButtonClicked Parms{};

	Parms.ChargeType = std::move(ChargeType);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PSDKPayPaperPC.PSPaperPayPCView.OnReOrderButtonDelegate
// (Final, Native, Protected)
// Parameters:
// const class FString&                    Info                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPSPaperPayPCView::OnReOrderButtonDelegate(const class FString& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PSPaperPayPCView", "OnReOrderButtonDelegate");

	Params::PSPaperPayPCView_OnReOrderButtonDelegate Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PSDKPayPaperPC.PSPaperPayPCView.OnRetryButtonDelegate
// (Final, Native, Protected)
// Parameters:
// const class FString&                    Info                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPSPaperPayPCView::OnRetryButtonDelegate(const class FString& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PSPaperPayPCView", "OnRetryButtonDelegate");

	Params::PSPaperPayPCView_OnRetryButtonDelegate Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PSDKPayPaperPC.PSPaperPayPCView.OnRetryQrCodeButtonClicked
// (Final, Native, Public, BlueprintCallable)

void UPSPaperPayPCView::OnRetryQrCodeButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PSPaperPayPCView", "OnRetryQrCodeButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PSDKPayPaperPC.PSPaperPayPCView.SetProductImage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2DDynamic*                DownloadedTexture                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPSPaperPayPCView::SetProductImage(class UTexture2DDynamic* DownloadedTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PSPaperPayPCView", "SetProductImage");

	Params::PSPaperPayPCView_SetProductImage Parms{};

	Parms.DownloadedTexture = DownloadedTexture;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

