#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PaperSkelMeshBaker

#include "Basic.hpp"


namespace SDK
{

// ScriptStruct PaperSkelMeshBaker.PaperMeshBakeChannelPair
// 0x0008 (0x0008 - 0x0000)
struct FPaperMeshBakeChannelPair final
{
public:
	uint8                                         ChannelIndex;                                      // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         OutputIndex;                                       // 0x0001(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         OutputChannel;                                     // 0x0002(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ParamRange;                                        // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FPaperMeshBakeChannelPair) == 0x000004, "Wrong alignment on FPaperMeshBakeChannelPair");
static_assert(sizeof(FPaperMeshBakeChannelPair) == 0x000008, "Wrong size on FPaperMeshBakeChannelPair");
static_assert(offsetof(FPaperMeshBakeChannelPair, ChannelIndex) == 0x000000, "Member 'FPaperMeshBakeChannelPair::ChannelIndex' has a wrong offset!");
static_assert(offsetof(FPaperMeshBakeChannelPair, OutputIndex) == 0x000001, "Member 'FPaperMeshBakeChannelPair::OutputIndex' has a wrong offset!");
static_assert(offsetof(FPaperMeshBakeChannelPair, OutputChannel) == 0x000002, "Member 'FPaperMeshBakeChannelPair::OutputChannel' has a wrong offset!");
static_assert(offsetof(FPaperMeshBakeChannelPair, ParamRange) == 0x000004, "Member 'FPaperMeshBakeChannelPair::ParamRange' has a wrong offset!");

// ScriptStruct PaperSkelMeshBaker.PaperMeshBakeMaterialParameter
// 0x0020 (0x0020 - 0x0000)
struct FPaperMeshBakeMaterialParameter final
{
public:
	class FName                                   ParamName;                                         // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bIsScalar;                                         // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bIsBool;                                           // 0x0009(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPaperMeshBakeChannelPair>      ChannelPair;                                       // 0x0010(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FPaperMeshBakeMaterialParameter) == 0x000008, "Wrong alignment on FPaperMeshBakeMaterialParameter");
static_assert(sizeof(FPaperMeshBakeMaterialParameter) == 0x000020, "Wrong size on FPaperMeshBakeMaterialParameter");
static_assert(offsetof(FPaperMeshBakeMaterialParameter, ParamName) == 0x000000, "Member 'FPaperMeshBakeMaterialParameter::ParamName' has a wrong offset!");
static_assert(offsetof(FPaperMeshBakeMaterialParameter, bIsScalar) == 0x000008, "Member 'FPaperMeshBakeMaterialParameter::bIsScalar' has a wrong offset!");
static_assert(offsetof(FPaperMeshBakeMaterialParameter, bIsBool) == 0x000009, "Member 'FPaperMeshBakeMaterialParameter::bIsBool' has a wrong offset!");
static_assert(offsetof(FPaperMeshBakeMaterialParameter, ChannelPair) == 0x000010, "Member 'FPaperMeshBakeMaterialParameter::ChannelPair' has a wrong offset!");

// ScriptStruct PaperSkelMeshBaker.PaperSkelMeshMergeParams
// 0x0060 (0x0060 - 0x0000)
struct FPaperSkelMeshMergeParams final
{
public:
	TArray<class USkeletalMeshComponent*>         SkeletalMeshComponentsToMerge;                     // 0x0000(0x0010)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class USkeleton*                              Skeleton;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UAnimInstance>              PostProcessAnimBlueprint;                          // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         StripTopLODs;                                      // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 BodyMeshComponent;                                 // 0x0028(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCopyBodyMeshAssetUserData;                        // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableX6BodyRemove;                               // 0x0031(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         HatID;                                             // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         HideBodyPart;                                      // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         HideSockPart;                                      // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverridePose;                                     // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReskinVertices;                                   // 0x0041(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRemoveUselessSkeleton;                            // 0x0042(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           AlwaysExistBones;                                  // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bIsForceMergeLOD0ToLastLOD;                        // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FPaperSkelMeshMergeParams) == 0x000008, "Wrong alignment on FPaperSkelMeshMergeParams");
static_assert(sizeof(FPaperSkelMeshMergeParams) == 0x000060, "Wrong size on FPaperSkelMeshMergeParams");
static_assert(offsetof(FPaperSkelMeshMergeParams, SkeletalMeshComponentsToMerge) == 0x000000, "Member 'FPaperSkelMeshMergeParams::SkeletalMeshComponentsToMerge' has a wrong offset!");
static_assert(offsetof(FPaperSkelMeshMergeParams, Skeleton) == 0x000010, "Member 'FPaperSkelMeshMergeParams::Skeleton' has a wrong offset!");
static_assert(offsetof(FPaperSkelMeshMergeParams, PostProcessAnimBlueprint) == 0x000018, "Member 'FPaperSkelMeshMergeParams::PostProcessAnimBlueprint' has a wrong offset!");
static_assert(offsetof(FPaperSkelMeshMergeParams, StripTopLODs) == 0x000020, "Member 'FPaperSkelMeshMergeParams::StripTopLODs' has a wrong offset!");
static_assert(offsetof(FPaperSkelMeshMergeParams, BodyMeshComponent) == 0x000028, "Member 'FPaperSkelMeshMergeParams::BodyMeshComponent' has a wrong offset!");
static_assert(offsetof(FPaperSkelMeshMergeParams, bCopyBodyMeshAssetUserData) == 0x000030, "Member 'FPaperSkelMeshMergeParams::bCopyBodyMeshAssetUserData' has a wrong offset!");
static_assert(offsetof(FPaperSkelMeshMergeParams, bEnableX6BodyRemove) == 0x000031, "Member 'FPaperSkelMeshMergeParams::bEnableX6BodyRemove' has a wrong offset!");
static_assert(offsetof(FPaperSkelMeshMergeParams, HatID) == 0x000034, "Member 'FPaperSkelMeshMergeParams::HatID' has a wrong offset!");
static_assert(offsetof(FPaperSkelMeshMergeParams, HideBodyPart) == 0x000038, "Member 'FPaperSkelMeshMergeParams::HideBodyPart' has a wrong offset!");
static_assert(offsetof(FPaperSkelMeshMergeParams, HideSockPart) == 0x00003C, "Member 'FPaperSkelMeshMergeParams::HideSockPart' has a wrong offset!");
static_assert(offsetof(FPaperSkelMeshMergeParams, bOverridePose) == 0x000040, "Member 'FPaperSkelMeshMergeParams::bOverridePose' has a wrong offset!");
static_assert(offsetof(FPaperSkelMeshMergeParams, bReskinVertices) == 0x000041, "Member 'FPaperSkelMeshMergeParams::bReskinVertices' has a wrong offset!");
static_assert(offsetof(FPaperSkelMeshMergeParams, bRemoveUselessSkeleton) == 0x000042, "Member 'FPaperSkelMeshMergeParams::bRemoveUselessSkeleton' has a wrong offset!");
static_assert(offsetof(FPaperSkelMeshMergeParams, AlwaysExistBones) == 0x000048, "Member 'FPaperSkelMeshMergeParams::AlwaysExistBones' has a wrong offset!");
static_assert(offsetof(FPaperSkelMeshMergeParams, bIsForceMergeLOD0ToLastLOD) == 0x000058, "Member 'FPaperSkelMeshMergeParams::bIsForceMergeLOD0ToLastLOD' has a wrong offset!");

}

