#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FoliageFootstepOverrideActor

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK::Params
{

// Function BP_FoliageFootstepOverrideActor.BP_FoliageFootstepOverrideActor_C.CompressPosition
// 0x00D8 (0x00D8 - 0x0000)
struct BP_FoliageFootstepOverrideActor_C_CompressPosition final
{
public:
	struct FVector                                InPosition;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CompressdPosition;                                 // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_3;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_4;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_2;                      // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_5;           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FoliageFootstepOverrideActor_C_CompressPosition) == 0x000008, "Wrong alignment on BP_FoliageFootstepOverrideActor_C_CompressPosition");
static_assert(sizeof(BP_FoliageFootstepOverrideActor_C_CompressPosition) == 0x0000D8, "Wrong size on BP_FoliageFootstepOverrideActor_C_CompressPosition");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_CompressPosition, InPosition) == 0x000000, "Member 'BP_FoliageFootstepOverrideActor_C_CompressPosition::InPosition' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_CompressPosition, CompressdPosition) == 0x000018, "Member 'BP_FoliageFootstepOverrideActor_C_CompressPosition::CompressdPosition' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_CompressPosition, CallFunc_BreakVector_X) == 0x000030, "Member 'BP_FoliageFootstepOverrideActor_C_CompressPosition::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_CompressPosition, CallFunc_BreakVector_Y) == 0x000038, "Member 'BP_FoliageFootstepOverrideActor_C_CompressPosition::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_CompressPosition, CallFunc_BreakVector_Z) == 0x000040, "Member 'BP_FoliageFootstepOverrideActor_C_CompressPosition::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_CompressPosition, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000048, "Member 'BP_FoliageFootstepOverrideActor_C_CompressPosition::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_CompressPosition, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_FoliageFootstepOverrideActor_C_CompressPosition::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_CompressPosition, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000058, "Member 'BP_FoliageFootstepOverrideActor_C_CompressPosition::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_CompressPosition, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000060, "Member 'BP_FoliageFootstepOverrideActor_C_CompressPosition::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_CompressPosition, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'BP_FoliageFootstepOverrideActor_C_CompressPosition::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_CompressPosition, CallFunc_Round_ReturnValue) == 0x000070, "Member 'BP_FoliageFootstepOverrideActor_C_CompressPosition::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_CompressPosition, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000078, "Member 'BP_FoliageFootstepOverrideActor_C_CompressPosition::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_CompressPosition, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000080, "Member 'BP_FoliageFootstepOverrideActor_C_CompressPosition::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_CompressPosition, CallFunc_Round_ReturnValue_1) == 0x000088, "Member 'BP_FoliageFootstepOverrideActor_C_CompressPosition::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_CompressPosition, CallFunc_Conv_IntToDouble_ReturnValue_3) == 0x000090, "Member 'BP_FoliageFootstepOverrideActor_C_CompressPosition::CallFunc_Conv_IntToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_CompressPosition, CallFunc_Conv_IntToDouble_ReturnValue_4) == 0x000098, "Member 'BP_FoliageFootstepOverrideActor_C_CompressPosition::CallFunc_Conv_IntToDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_CompressPosition, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0000A0, "Member 'BP_FoliageFootstepOverrideActor_C_CompressPosition::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_CompressPosition, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0000A8, "Member 'BP_FoliageFootstepOverrideActor_C_CompressPosition::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_CompressPosition, CallFunc_Round_ReturnValue_2) == 0x0000B0, "Member 'BP_FoliageFootstepOverrideActor_C_CompressPosition::CallFunc_Round_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_CompressPosition, CallFunc_Conv_IntToDouble_ReturnValue_5) == 0x0000B8, "Member 'BP_FoliageFootstepOverrideActor_C_CompressPosition::CallFunc_Conv_IntToDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_CompressPosition, CallFunc_MakeVector_ReturnValue) == 0x0000C0, "Member 'BP_FoliageFootstepOverrideActor_C_CompressPosition::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_FoliageFootstepOverrideActor.BP_FoliageFootstepOverrideActor_C.ExecuteUbergraph_BP_FoliageFootstepOverrideActor
// 0x0004 (0x0004 - 0x0000)
struct BP_FoliageFootstepOverrideActor_C_ExecuteUbergraph_BP_FoliageFootstepOverrideActor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FoliageFootstepOverrideActor_C_ExecuteUbergraph_BP_FoliageFootstepOverrideActor) == 0x000004, "Wrong alignment on BP_FoliageFootstepOverrideActor_C_ExecuteUbergraph_BP_FoliageFootstepOverrideActor");
static_assert(sizeof(BP_FoliageFootstepOverrideActor_C_ExecuteUbergraph_BP_FoliageFootstepOverrideActor) == 0x000004, "Wrong size on BP_FoliageFootstepOverrideActor_C_ExecuteUbergraph_BP_FoliageFootstepOverrideActor");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_ExecuteUbergraph_BP_FoliageFootstepOverrideActor, EntryPoint) == 0x000000, "Member 'BP_FoliageFootstepOverrideActor_C_ExecuteUbergraph_BP_FoliageFootstepOverrideActor::EntryPoint' has a wrong offset!");

// Function BP_FoliageFootstepOverrideActor.BP_FoliageFootstepOverrideActor_C.ExpandPositionData
// 0x00C8 (0x00C8 - 0x0000)
struct BP_FoliageFootstepOverrideActor_C_ExpandPositionData final
{
public:
	struct FVector                                InPosition;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x0048(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_2;                     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_3;                     // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FoliageFootstepOverrideActor_C_ExpandPositionData) == 0x000008, "Wrong alignment on BP_FoliageFootstepOverrideActor_C_ExpandPositionData");
static_assert(sizeof(BP_FoliageFootstepOverrideActor_C_ExpandPositionData) == 0x0000C8, "Wrong size on BP_FoliageFootstepOverrideActor_C_ExpandPositionData");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_ExpandPositionData, InPosition) == 0x000000, "Member 'BP_FoliageFootstepOverrideActor_C_ExpandPositionData::InPosition' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_ExpandPositionData, CallFunc_BreakVector_X) == 0x000018, "Member 'BP_FoliageFootstepOverrideActor_C_ExpandPositionData::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_ExpandPositionData, CallFunc_BreakVector_Y) == 0x000020, "Member 'BP_FoliageFootstepOverrideActor_C_ExpandPositionData::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_ExpandPositionData, CallFunc_BreakVector_Z) == 0x000028, "Member 'BP_FoliageFootstepOverrideActor_C_ExpandPositionData::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_ExpandPositionData, CallFunc_BreakVector_X_1) == 0x000030, "Member 'BP_FoliageFootstepOverrideActor_C_ExpandPositionData::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_ExpandPositionData, CallFunc_BreakVector_Y_1) == 0x000038, "Member 'BP_FoliageFootstepOverrideActor_C_ExpandPositionData::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_ExpandPositionData, CallFunc_BreakVector_Z_1) == 0x000040, "Member 'BP_FoliageFootstepOverrideActor_C_ExpandPositionData::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_ExpandPositionData, Temp_byte_Variable) == 0x000048, "Member 'BP_FoliageFootstepOverrideActor_C_ExpandPositionData::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_ExpandPositionData, Temp_int_Variable) == 0x00004C, "Member 'BP_FoliageFootstepOverrideActor_C_ExpandPositionData::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_ExpandPositionData, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000050, "Member 'BP_FoliageFootstepOverrideActor_C_ExpandPositionData::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_ExpandPositionData, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_FoliageFootstepOverrideActor_C_ExpandPositionData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_ExpandPositionData, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000060, "Member 'BP_FoliageFootstepOverrideActor_C_ExpandPositionData::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_ExpandPositionData, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000068, "Member 'BP_FoliageFootstepOverrideActor_C_ExpandPositionData::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_ExpandPositionData, CallFunc_FTrunc_ReturnValue) == 0x000070, "Member 'BP_FoliageFootstepOverrideActor_C_ExpandPositionData::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_ExpandPositionData, CallFunc_FTrunc_ReturnValue_1) == 0x000074, "Member 'BP_FoliageFootstepOverrideActor_C_ExpandPositionData::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_ExpandPositionData, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000078, "Member 'BP_FoliageFootstepOverrideActor_C_ExpandPositionData::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_ExpandPositionData, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000080, "Member 'BP_FoliageFootstepOverrideActor_C_ExpandPositionData::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_ExpandPositionData, CallFunc_FTrunc_ReturnValue_2) == 0x000088, "Member 'BP_FoliageFootstepOverrideActor_C_ExpandPositionData::CallFunc_FTrunc_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_ExpandPositionData, CallFunc_FTrunc_ReturnValue_3) == 0x00008C, "Member 'BP_FoliageFootstepOverrideActor_C_ExpandPositionData::CallFunc_FTrunc_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_ExpandPositionData, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000090, "Member 'BP_FoliageFootstepOverrideActor_C_ExpandPositionData::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_ExpandPositionData, Temp_int_Variable_1) == 0x000094, "Member 'BP_FoliageFootstepOverrideActor_C_ExpandPositionData::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_ExpandPositionData, CallFunc_Add_IntInt_ReturnValue_1) == 0x000098, "Member 'BP_FoliageFootstepOverrideActor_C_ExpandPositionData::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_ExpandPositionData, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x0000A0, "Member 'BP_FoliageFootstepOverrideActor_C_ExpandPositionData::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_ExpandPositionData, CallFunc_MakeVector_ReturnValue) == 0x0000A8, "Member 'BP_FoliageFootstepOverrideActor_C_ExpandPositionData::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_ExpandPositionData, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0000C0, "Member 'BP_FoliageFootstepOverrideActor_C_ExpandPositionData::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_FoliageFootstepOverrideActor.BP_FoliageFootstepOverrideActor_C.GenerateData
// 0x0270 (0x0270 - 0x0000)
struct BP_FoliageFootstepOverrideActor_C_GenerateData final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsOfClass_OutActors;            // 0x0020(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UInstancedStaticMeshComponent*>  CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInstancedStaticMeshComponent*          CallFunc_Array_Get_Item_1;                         // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetInstanceCount_ReturnValue;             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBoxSphereBounds                       CallFunc_GetBounds_ReturnValue;                    // 0x0068(0x0038)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakBoxSphereBounds_Origin;              // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakBoxSphereBounds_BoxExtent;           // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakBoxSphereBounds_SphereRadius;        // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DE[0x2];                                       // 0x00DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetInstanceTransform_OutInstanceTransform; // 0x00E0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetInstanceTransform_ReturnValue;         // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0xF];                                      // 0x0191(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01A0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CompressPosition_CompressdPosition;       // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FoliageFootstepOverrideActor_C_GenerateData) == 0x000010, "Wrong alignment on BP_FoliageFootstepOverrideActor_C_GenerateData");
static_assert(sizeof(BP_FoliageFootstepOverrideActor_C_GenerateData) == 0x000270, "Wrong size on BP_FoliageFootstepOverrideActor_C_GenerateData");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GenerateData, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_FoliageFootstepOverrideActor_C_GenerateData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GenerateData, Temp_int_Loop_Counter_Variable_1) == 0x000004, "Member 'BP_FoliageFootstepOverrideActor_C_GenerateData::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GenerateData, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_FoliageFootstepOverrideActor_C_GenerateData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GenerateData, CallFunc_Add_IntInt_ReturnValue_1) == 0x00000C, "Member 'BP_FoliageFootstepOverrideActor_C_GenerateData::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GenerateData, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_FoliageFootstepOverrideActor_C_GenerateData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GenerateData, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'BP_FoliageFootstepOverrideActor_C_GenerateData::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GenerateData, Temp_int_Variable) == 0x000018, "Member 'BP_FoliageFootstepOverrideActor_C_GenerateData::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GenerateData, CallFunc_GetAllActorsOfClass_OutActors) == 0x000020, "Member 'BP_FoliageFootstepOverrideActor_C_GenerateData::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GenerateData, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_FoliageFootstepOverrideActor_C_GenerateData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GenerateData, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_FoliageFootstepOverrideActor_C_GenerateData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GenerateData, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000040, "Member 'BP_FoliageFootstepOverrideActor_C_GenerateData::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GenerateData, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_FoliageFootstepOverrideActor_C_GenerateData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GenerateData, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'BP_FoliageFootstepOverrideActor_C_GenerateData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GenerateData, CallFunc_GetInstanceCount_ReturnValue) == 0x000060, "Member 'BP_FoliageFootstepOverrideActor_C_GenerateData::CallFunc_GetInstanceCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GenerateData, CallFunc_Subtract_IntInt_ReturnValue) == 0x000064, "Member 'BP_FoliageFootstepOverrideActor_C_GenerateData::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GenerateData, CallFunc_GetBounds_ReturnValue) == 0x000068, "Member 'BP_FoliageFootstepOverrideActor_C_GenerateData::CallFunc_GetBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GenerateData, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_FoliageFootstepOverrideActor_C_GenerateData::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GenerateData, CallFunc_BreakBoxSphereBounds_Origin) == 0x0000A8, "Member 'BP_FoliageFootstepOverrideActor_C_GenerateData::CallFunc_BreakBoxSphereBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GenerateData, CallFunc_BreakBoxSphereBounds_BoxExtent) == 0x0000C0, "Member 'BP_FoliageFootstepOverrideActor_C_GenerateData::CallFunc_BreakBoxSphereBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GenerateData, CallFunc_BreakBoxSphereBounds_SphereRadius) == 0x0000D8, "Member 'BP_FoliageFootstepOverrideActor_C_GenerateData::CallFunc_BreakBoxSphereBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GenerateData, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000DC, "Member 'BP_FoliageFootstepOverrideActor_C_GenerateData::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GenerateData, CallFunc_Array_Contains_ReturnValue) == 0x0000DD, "Member 'BP_FoliageFootstepOverrideActor_C_GenerateData::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GenerateData, CallFunc_GetInstanceTransform_OutInstanceTransform) == 0x0000E0, "Member 'BP_FoliageFootstepOverrideActor_C_GenerateData::CallFunc_GetInstanceTransform_OutInstanceTransform' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GenerateData, CallFunc_GetInstanceTransform_ReturnValue) == 0x000140, "Member 'BP_FoliageFootstepOverrideActor_C_GenerateData::CallFunc_GetInstanceTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GenerateData, CallFunc_Array_Length_ReturnValue_1) == 0x000144, "Member 'BP_FoliageFootstepOverrideActor_C_GenerateData::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GenerateData, CallFunc_BreakTransform_Location) == 0x000148, "Member 'BP_FoliageFootstepOverrideActor_C_GenerateData::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GenerateData, CallFunc_BreakTransform_Rotation) == 0x000160, "Member 'BP_FoliageFootstepOverrideActor_C_GenerateData::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GenerateData, CallFunc_BreakTransform_Scale) == 0x000178, "Member 'BP_FoliageFootstepOverrideActor_C_GenerateData::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GenerateData, CallFunc_Less_IntInt_ReturnValue_1) == 0x000190, "Member 'BP_FoliageFootstepOverrideActor_C_GenerateData::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GenerateData, CallFunc_MakeTransform_ReturnValue) == 0x0001A0, "Member 'BP_FoliageFootstepOverrideActor_C_GenerateData::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GenerateData, CallFunc_TransformLocation_ReturnValue) == 0x000200, "Member 'BP_FoliageFootstepOverrideActor_C_GenerateData::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GenerateData, CallFunc_Add_IntInt_ReturnValue_2) == 0x000218, "Member 'BP_FoliageFootstepOverrideActor_C_GenerateData::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GenerateData, CallFunc_BreakVector_X) == 0x000220, "Member 'BP_FoliageFootstepOverrideActor_C_GenerateData::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GenerateData, CallFunc_BreakVector_Y) == 0x000228, "Member 'BP_FoliageFootstepOverrideActor_C_GenerateData::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GenerateData, CallFunc_BreakVector_Z) == 0x000230, "Member 'BP_FoliageFootstepOverrideActor_C_GenerateData::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GenerateData, CallFunc_MakeVector_ReturnValue) == 0x000238, "Member 'BP_FoliageFootstepOverrideActor_C_GenerateData::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GenerateData, CallFunc_CompressPosition_CompressdPosition) == 0x000250, "Member 'BP_FoliageFootstepOverrideActor_C_GenerateData::CallFunc_CompressPosition_CompressdPosition' has a wrong offset!");

// Function BP_FoliageFootstepOverrideActor.BP_FoliageFootstepOverrideActor_C.GetFoliageInstanceInfo
// 0x0350 (0x0350 - 0x0000)
struct BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo final
{
public:
	class UStaticMeshComponent*                   Component;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            StaticMesh;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Radius_0;                                          // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Trinangle;                                         // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Height;                                            // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          K2Node_DynamicCast_AsInstanced_Static_Mesh_Component; // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBoxSphereBounds                       CallFunc_GetBounds_ReturnValue;                    // 0x0050(0x0038)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_88[0x8];                                       // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetInstanceTransform_OutInstanceTransform; // 0x0090(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetInstanceTransform_ReturnValue;         // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakBoxSphereBounds_Origin;              // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakBoxSphereBounds_BoxExtent;           // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakBoxSphereBounds_SphereRadius;        // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0190(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_218[0x8];                                      // 0x0218(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0220(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x02B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C8[0x8];                                      // 0x02C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x02D0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue_1;          // 0x0330(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo) == 0x000010, "Wrong alignment on BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo");
static_assert(sizeof(BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo) == 0x000350, "Wrong size on BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo, Component) == 0x000000, "Member 'BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo::Component' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo, StaticMesh) == 0x000008, "Member 'BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo::StaticMesh' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo, Location) == 0x000010, "Member 'BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo::Location' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo, Radius_0) == 0x000028, "Member 'BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo::Radius_0' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo, Trinangle) == 0x000030, "Member 'BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo::Trinangle' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo, Height) == 0x000038, "Member 'BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo::Height' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo, K2Node_DynamicCast_AsInstanced_Static_Mesh_Component) == 0x000040, "Member 'BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo::K2Node_DynamicCast_AsInstanced_Static_Mesh_Component' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo, CallFunc_GetBounds_ReturnValue) == 0x000050, "Member 'BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo::CallFunc_GetBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo, CallFunc_GetInstanceTransform_OutInstanceTransform) == 0x000090, "Member 'BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo::CallFunc_GetInstanceTransform_OutInstanceTransform' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo, CallFunc_GetInstanceTransform_ReturnValue) == 0x0000F0, "Member 'BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo::CallFunc_GetInstanceTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo, CallFunc_BreakBoxSphereBounds_Origin) == 0x0000F8, "Member 'BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo::CallFunc_BreakBoxSphereBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo, CallFunc_BreakBoxSphereBounds_BoxExtent) == 0x000110, "Member 'BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo::CallFunc_BreakBoxSphereBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo, CallFunc_BreakBoxSphereBounds_SphereRadius) == 0x000128, "Member 'BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo::CallFunc_BreakBoxSphereBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo, CallFunc_BreakTransform_Location) == 0x000130, "Member 'BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo, CallFunc_BreakTransform_Rotation) == 0x000148, "Member 'BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo, CallFunc_BreakTransform_Scale) == 0x000160, "Member 'BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo, CallFunc_BreakVector_X) == 0x000178, "Member 'BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo, CallFunc_BreakVector_Y) == 0x000180, "Member 'BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo, CallFunc_BreakVector_Z) == 0x000188, "Member 'BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo, CallFunc_MakeTransform_ReturnValue) == 0x000190, "Member 'BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0001F0, "Member 'BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo, CallFunc_TransformLocation_ReturnValue) == 0x0001F8, "Member 'BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000210, "Member 'BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000220, "Member 'BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo, CallFunc_BreakTransform_Location_1) == 0x000280, "Member 'BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo, CallFunc_BreakTransform_Rotation_1) == 0x000298, "Member 'BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo, CallFunc_BreakTransform_Scale_1) == 0x0002B0, "Member 'BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo, CallFunc_MakeTransform_ReturnValue_1) == 0x0002D0, "Member 'BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo, CallFunc_TransformLocation_ReturnValue_1) == 0x000330, "Member 'BP_FoliageFootstepOverrideActor_C_GetFoliageInstanceInfo::CallFunc_TransformLocation_ReturnValue_1' has a wrong offset!");

// Function BP_FoliageFootstepOverrideActor.BP_FoliageFootstepOverrideActor_C.GetFoliageLocationGroup
// 0x0050 (0x0050 - 0x0000)
struct BP_FoliageFootstepOverrideActor_C_GetFoliageLocationGroup final
{
public:
	TMap<struct FVector, EPhysicalSurface>        NewParam;                                          // 0x0000(0x0050)(Parm, OutParm)
};
static_assert(alignof(BP_FoliageFootstepOverrideActor_C_GetFoliageLocationGroup) == 0x000008, "Wrong alignment on BP_FoliageFootstepOverrideActor_C_GetFoliageLocationGroup");
static_assert(sizeof(BP_FoliageFootstepOverrideActor_C_GetFoliageLocationGroup) == 0x000050, "Wrong size on BP_FoliageFootstepOverrideActor_C_GetFoliageLocationGroup");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GetFoliageLocationGroup, NewParam) == 0x000000, "Member 'BP_FoliageFootstepOverrideActor_C_GetFoliageLocationGroup::NewParam' has a wrong offset!");

// Function BP_FoliageFootstepOverrideActor.BP_FoliageFootstepOverrideActor_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct BP_FoliageFootstepOverrideActor_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_FoliageFootstepOverrideActor_C_GetModuleName) == 0x000008, "Wrong alignment on BP_FoliageFootstepOverrideActor_C_GetModuleName");
static_assert(sizeof(BP_FoliageFootstepOverrideActor_C_GetModuleName) == 0x000010, "Wrong size on BP_FoliageFootstepOverrideActor_C_GetModuleName");
static_assert(offsetof(BP_FoliageFootstepOverrideActor_C_GetModuleName, ReturnValue) == 0x000000, "Member 'BP_FoliageFootstepOverrideActor_C_GetModuleName::ReturnValue' has a wrong offset!");

}

