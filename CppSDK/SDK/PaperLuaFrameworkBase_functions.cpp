#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PaperLuaFrameworkBase

#include "Basic.hpp"

#include "PaperLuaFrameworkBase_classes.hpp"
#include "PaperLuaFrameworkBase_parameters.hpp"


namespace SDK
{

// Function PaperLuaFrameworkBase.BinMMapMgr.GetInstance
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBinMMapMgr*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBinMMapMgr* UBinMMapMgr::GetInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BinMMapMgr", "GetInstance");

	Params::BinMMapMgr_GetInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.BinMMapMgr.AddBuffer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InBinName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBinMMapMgr::AddBuffer(const class FString& InBinName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BinMMapMgr", "AddBuffer");

	Params::BinMMapMgr_AddBuffer Parms{};

	Parms.InBinName = std::move(InBinName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.BinMMapMgr.Clear
// (Final, Native, Public, BlueprintCallable)

void UBinMMapMgr::Clear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BinMMapMgr", "Clear");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.BinMMapMgr.PostLoad
// (Final, Native, Public, BlueprintCallable)

void UBinMMapMgr::PostLoad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BinMMapMgr", "PostLoad");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.BinMMapMgr.SetMMapTag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InMMapTag                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBinMMapMgr::SetMMapTag(bool InMMapTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BinMMapMgr", "SetMMapTag");

	Params::BinMMapMgr_SetMMapTag Parms{};

	Parms.InMMapTag = InMMapTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.BinMMapMgr.SetRootDir
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InRootDir                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBinMMapMgr::SetRootDir(const class FString& InRootDir)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BinMMapMgr", "SetRootDir");

	Params::BinMMapMgr_SetRootDir Parms{};

	Parms.InRootDir = std::move(InRootDir);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperAssetManager.GetInstance
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPaperAssetManager*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPaperAssetManager* UPaperAssetManager::GetInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PaperAssetManager", "GetInstance");

	Params::PaperAssetManager_GetInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperAssetManager.AsyncLoadPrimaryAssetEx
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class FString>&            InAssetsToLoad                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   InTimeLimit                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPaperAssetManager::AsyncLoadPrimaryAssetEx(const TArray<class FString>& InAssetsToLoad, float InTimeLimit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperAssetManager", "AsyncLoadPrimaryAssetEx");

	Params::PaperAssetManager_AsyncLoadPrimaryAssetEx Parms{};

	Parms.InAssetsToLoad = std::move(InAssetsToLoad);
	Parms.InTimeLimit = InTimeLimit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperAssetManager.CancelAsyncLoadingWithAsyncID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   AsyncId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperAssetManager::CancelAsyncLoadingWithAsyncID(int32 AsyncId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperAssetManager", "CancelAsyncLoadingWithAsyncID");

	Params::PaperAssetManager_CancelAsyncLoadingWithAsyncID Parms{};

	Parms.AsyncId = AsyncId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperAssetManager.GetAsyncLoadingProgessWithAsyncID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   AsyncId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPaperAssetManager::GetAsyncLoadingProgessWithAsyncID(int32 AsyncId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperAssetManager", "GetAsyncLoadingProgessWithAsyncID");

	Params::PaperAssetManager_GetAsyncLoadingProgessWithAsyncID Parms{};

	Parms.AsyncId = AsyncId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperAssetManager.GetCurrentAsyncID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPaperAssetManager::GetCurrentAsyncID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperAssetManager", "GetCurrentAsyncID");

	Params::PaperAssetManager_GetCurrentAsyncID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperAssetManager.NormalizeAssetPathAndResolve
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InAssetPath                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UPaperAssetManager::NormalizeAssetPathAndResolve(const class FString& InAssetPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperAssetManager", "NormalizeAssetPathAndResolve");

	Params::PaperAssetManager_NormalizeAssetPathAndResolve Parms{};

	Parms.InAssetPath = std::move(InAssetPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperAssetManager.SyncLoadPrimaryAssetEx
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class FString>&            InAssetsToLoad                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   InTimeLimit                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPaperAssetManager::SyncLoadPrimaryAssetEx(const TArray<class FString>& InAssetsToLoad, float InTimeLimit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperAssetManager", "SyncLoadPrimaryAssetEx");

	Params::PaperAssetManager_SyncLoadPrimaryAssetEx Parms{};

	Parms.InAssetsToLoad = std::move(InAssetsToLoad);
	Parms.InTimeLimit = InTimeLimit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperConsoleManager.ClearLuaCommand
// (Final, Native, Public, BlueprintCallable)

void UPaperConsoleManager::ClearLuaCommand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperConsoleManager", "ClearLuaCommand");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperConsoleManager.RegisterLuaCommand
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Cmd                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Help                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperConsoleManager::RegisterLuaCommand(const class FString& Cmd, const class FString& Help)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperConsoleManager", "RegisterLuaCommand");

	Params::PaperConsoleManager_RegisterLuaCommand Parms{};

	Parms.Cmd = std::move(Cmd);
	Parms.Help = std::move(Help);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperConsoleManager.UnregisterLuaCommand
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Cmd                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperConsoleManager::UnregisterLuaCommand(const class FString& Cmd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperConsoleManager", "UnregisterLuaCommand");

	Params::PaperConsoleManager_UnregisterLuaCommand Parms{};

	Parms.Cmd = std::move(Cmd);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperInputProcessorHelper.BindAnalogInputEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const struct FAnalogInputEvent& AnalogInputEvent)>InOnAnalogInput                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperInputProcessorHelper::BindAnalogInputEvent(TDelegate<void(const struct FAnalogInputEvent& AnalogInputEvent)> InOnAnalogInput, int32 InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperInputProcessorHelper", "BindAnalogInputEvent");

	Params::PaperInputProcessorHelper_BindAnalogInputEvent Parms{};

	Parms.InOnAnalogInput = InOnAnalogInput;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperInputProcessorHelper.BindGestureEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const struct FPointerEvent& MouseEvent)>InOnGesture                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperInputProcessorHelper::BindGestureEvent(TDelegate<void(const struct FPointerEvent& MouseEvent)> InOnGesture, int32 InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperInputProcessorHelper", "BindGestureEvent");

	Params::PaperInputProcessorHelper_BindGestureEvent Parms{};

	Parms.InOnGesture = InOnGesture;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperInputProcessorHelper.BindInputDeviceEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(EPaperInputDeviceKeyType InputDeviceKeyType)>InOnInputDevice                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperInputProcessorHelper::BindInputDeviceEvent(TDelegate<void(EPaperInputDeviceKeyType InputDeviceKeyType)> InOnInputDevice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperInputProcessorHelper", "BindInputDeviceEvent");

	Params::PaperInputProcessorHelper_BindInputDeviceEvent Parms{};

	Parms.InOnInputDevice = InOnInputDevice;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperInputProcessorHelper.BindKeyDownEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const struct FKeyEvent& KeyEvent)>InOnKeyDown                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperInputProcessorHelper::BindKeyDownEvent(TDelegate<void(const struct FKeyEvent& KeyEvent)> InOnKeyDown, int32 InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperInputProcessorHelper", "BindKeyDownEvent");

	Params::PaperInputProcessorHelper_BindKeyDownEvent Parms{};

	Parms.InOnKeyDown = InOnKeyDown;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperInputProcessorHelper.BindKeyUpEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const struct FKeyEvent& KeyEvent)>InOnKeyUp                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperInputProcessorHelper::BindKeyUpEvent(TDelegate<void(const struct FKeyEvent& KeyEvent)> InOnKeyUp, int32 InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperInputProcessorHelper", "BindKeyUpEvent");

	Params::PaperInputProcessorHelper_BindKeyUpEvent Parms{};

	Parms.InOnKeyUp = InOnKeyUp;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperInputProcessorHelper.BindMotionDetectedEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const struct FMotionEvent& MotionEvent)>InOnMotionDetected                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperInputProcessorHelper::BindMotionDetectedEvent(TDelegate<void(const struct FMotionEvent& MotionEvent)> InOnMotionDetected, int32 InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperInputProcessorHelper", "BindMotionDetectedEvent");

	Params::PaperInputProcessorHelper_BindMotionDetectedEvent Parms{};

	Parms.InOnMotionDetected = InOnMotionDetected;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperInputProcessorHelper.BindMouseButtonDoubleClickEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const struct FPointerEvent& MouseEvent)>InOnMouseButtonDoubleClick                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperInputProcessorHelper::BindMouseButtonDoubleClickEvent(TDelegate<void(const struct FPointerEvent& MouseEvent)> InOnMouseButtonDoubleClick, int32 InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperInputProcessorHelper", "BindMouseButtonDoubleClickEvent");

	Params::PaperInputProcessorHelper_BindMouseButtonDoubleClickEvent Parms{};

	Parms.InOnMouseButtonDoubleClick = InOnMouseButtonDoubleClick;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperInputProcessorHelper.BindMouseButtonDownEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const struct FPointerEvent& MouseEvent)>InOnMouseButtonDown                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperInputProcessorHelper::BindMouseButtonDownEvent(TDelegate<void(const struct FPointerEvent& MouseEvent)> InOnMouseButtonDown, int32 InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperInputProcessorHelper", "BindMouseButtonDownEvent");

	Params::PaperInputProcessorHelper_BindMouseButtonDownEvent Parms{};

	Parms.InOnMouseButtonDown = InOnMouseButtonDown;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperInputProcessorHelper.BindMouseButtonUpEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const struct FPointerEvent& MouseEvent)>InOnMouseButtonUp                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperInputProcessorHelper::BindMouseButtonUpEvent(TDelegate<void(const struct FPointerEvent& MouseEvent)> InOnMouseButtonUp, int32 InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperInputProcessorHelper", "BindMouseButtonUpEvent");

	Params::PaperInputProcessorHelper_BindMouseButtonUpEvent Parms{};

	Parms.InOnMouseButtonUp = InOnMouseButtonUp;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperInputProcessorHelper.BindMouseMoveEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const struct FPointerEvent& MouseEvent)>InOnMouseMove                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperInputProcessorHelper::BindMouseMoveEvent(TDelegate<void(const struct FPointerEvent& MouseEvent)> InOnMouseMove, int32 InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperInputProcessorHelper", "BindMouseMoveEvent");

	Params::PaperInputProcessorHelper_BindMouseMoveEvent Parms{};

	Parms.InOnMouseMove = InOnMouseMove;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperInputProcessorHelper.BindMouseWheelEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const struct FPointerEvent& MouseEvent)>InOnMouseWheel                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperInputProcessorHelper::BindMouseWheelEvent(TDelegate<void(const struct FPointerEvent& MouseEvent)> InOnMouseWheel, int32 InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperInputProcessorHelper", "BindMouseWheelEvent");

	Params::PaperInputProcessorHelper_BindMouseWheelEvent Parms{};

	Parms.InOnMouseWheel = InOnMouseWheel;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperInputProcessorHelper.DeInit
// (Final, Native, Public, BlueprintCallable)

void UPaperInputProcessorHelper::DeInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperInputProcessorHelper", "DeInit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperInputProcessorHelper.GetCurInputDeviceKeyType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPaperInputDeviceKeyType                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPaperInputDeviceKeyType UPaperInputProcessorHelper::GetCurInputDeviceKeyType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperInputProcessorHelper", "GetCurInputDeviceKeyType");

	Params::PaperInputProcessorHelper_GetCurInputDeviceKeyType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperInputProcessorHelper.GetMouseResponseDisabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPaperInputProcessorHelper::GetMouseResponseDisabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperInputProcessorHelper", "GetMouseResponseDisabled");

	Params::PaperInputProcessorHelper_GetMouseResponseDisabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperInputProcessorHelper.Init
// (Final, Native, Public, BlueprintCallable)

void UPaperInputProcessorHelper::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperInputProcessorHelper", "Init");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperInputProcessorHelper.SetInputDeviceIgnoreValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InInputDeviceIgnoreValue                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperInputProcessorHelper::SetInputDeviceIgnoreValue(float InInputDeviceIgnoreValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperInputProcessorHelper", "SetInputDeviceIgnoreValue");

	Params::PaperInputProcessorHelper_SetInputDeviceIgnoreValue Parms{};

	Parms.InInputDeviceIgnoreValue = InInputDeviceIgnoreValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperInputProcessorHelper.SetMouseResponseDisabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bDisable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPaperInputProcessorHelper::SetMouseResponseDisabled(bool bDisable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperInputProcessorHelper", "SetMouseResponseDisabled");

	Params::PaperInputProcessorHelper_SetMouseResponseDisabled Parms{};

	Parms.bDisable = bDisable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperInputProcessorHelper.UnbindAnalogInputEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const struct FAnalogInputEvent& AnalogInputEvent)>InOnAnalogInput                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperInputProcessorHelper::UnbindAnalogInputEvent(TDelegate<void(const struct FAnalogInputEvent& AnalogInputEvent)> InOnAnalogInput, int32 InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperInputProcessorHelper", "UnbindAnalogInputEvent");

	Params::PaperInputProcessorHelper_UnbindAnalogInputEvent Parms{};

	Parms.InOnAnalogInput = InOnAnalogInput;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperInputProcessorHelper.UnbindGestureEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const struct FPointerEvent& MouseEvent)>InOnGesture                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperInputProcessorHelper::UnbindGestureEvent(TDelegate<void(const struct FPointerEvent& MouseEvent)> InOnGesture, int32 InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperInputProcessorHelper", "UnbindGestureEvent");

	Params::PaperInputProcessorHelper_UnbindGestureEvent Parms{};

	Parms.InOnGesture = InOnGesture;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperInputProcessorHelper.UnbindInputDeviceEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(EPaperInputDeviceKeyType InputDeviceKeyType)>InOnInputDevice                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperInputProcessorHelper::UnbindInputDeviceEvent(TDelegate<void(EPaperInputDeviceKeyType InputDeviceKeyType)> InOnInputDevice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperInputProcessorHelper", "UnbindInputDeviceEvent");

	Params::PaperInputProcessorHelper_UnbindInputDeviceEvent Parms{};

	Parms.InOnInputDevice = InOnInputDevice;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperInputProcessorHelper.UnbindKeyDownEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const struct FKeyEvent& KeyEvent)>InOnKeyDown                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperInputProcessorHelper::UnbindKeyDownEvent(TDelegate<void(const struct FKeyEvent& KeyEvent)> InOnKeyDown, int32 InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperInputProcessorHelper", "UnbindKeyDownEvent");

	Params::PaperInputProcessorHelper_UnbindKeyDownEvent Parms{};

	Parms.InOnKeyDown = InOnKeyDown;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperInputProcessorHelper.UnbindKeyUpEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const struct FKeyEvent& KeyEvent)>InOnKeyUp                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperInputProcessorHelper::UnbindKeyUpEvent(TDelegate<void(const struct FKeyEvent& KeyEvent)> InOnKeyUp, int32 InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperInputProcessorHelper", "UnbindKeyUpEvent");

	Params::PaperInputProcessorHelper_UnbindKeyUpEvent Parms{};

	Parms.InOnKeyUp = InOnKeyUp;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperInputProcessorHelper.UnbindMotionDetectedEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const struct FMotionEvent& MotionEvent)>InOnMotionDetected                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperInputProcessorHelper::UnbindMotionDetectedEvent(TDelegate<void(const struct FMotionEvent& MotionEvent)> InOnMotionDetected, int32 InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperInputProcessorHelper", "UnbindMotionDetectedEvent");

	Params::PaperInputProcessorHelper_UnbindMotionDetectedEvent Parms{};

	Parms.InOnMotionDetected = InOnMotionDetected;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperInputProcessorHelper.UnbindMouseButtonDoubleClickEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const struct FPointerEvent& MouseEvent)>InOnMouseButtonDoubleClick                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperInputProcessorHelper::UnbindMouseButtonDoubleClickEvent(TDelegate<void(const struct FPointerEvent& MouseEvent)> InOnMouseButtonDoubleClick, int32 InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperInputProcessorHelper", "UnbindMouseButtonDoubleClickEvent");

	Params::PaperInputProcessorHelper_UnbindMouseButtonDoubleClickEvent Parms{};

	Parms.InOnMouseButtonDoubleClick = InOnMouseButtonDoubleClick;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperInputProcessorHelper.UnbindMouseButtonDownEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const struct FPointerEvent& MouseEvent)>InOnMouseButtonDown                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperInputProcessorHelper::UnbindMouseButtonDownEvent(TDelegate<void(const struct FPointerEvent& MouseEvent)> InOnMouseButtonDown, int32 InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperInputProcessorHelper", "UnbindMouseButtonDownEvent");

	Params::PaperInputProcessorHelper_UnbindMouseButtonDownEvent Parms{};

	Parms.InOnMouseButtonDown = InOnMouseButtonDown;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperInputProcessorHelper.UnbindMouseButtonUpEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const struct FPointerEvent& MouseEvent)>InOnMouseButtonUp                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperInputProcessorHelper::UnbindMouseButtonUpEvent(TDelegate<void(const struct FPointerEvent& MouseEvent)> InOnMouseButtonUp, int32 InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperInputProcessorHelper", "UnbindMouseButtonUpEvent");

	Params::PaperInputProcessorHelper_UnbindMouseButtonUpEvent Parms{};

	Parms.InOnMouseButtonUp = InOnMouseButtonUp;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperInputProcessorHelper.UnbindMouseMoveEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const struct FPointerEvent& MouseEvent)>InOnMouseMove                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperInputProcessorHelper::UnbindMouseMoveEvent(TDelegate<void(const struct FPointerEvent& MouseEvent)> InOnMouseMove, int32 InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperInputProcessorHelper", "UnbindMouseMoveEvent");

	Params::PaperInputProcessorHelper_UnbindMouseMoveEvent Parms{};

	Parms.InOnMouseMove = InOnMouseMove;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperInputProcessorHelper.UnbindMouseWheelEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const struct FPointerEvent& MouseEvent)>InOnMouseWheel                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperInputProcessorHelper::UnbindMouseWheelEvent(TDelegate<void(const struct FPointerEvent& MouseEvent)> InOnMouseWheel, int32 InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperInputProcessorHelper", "UnbindMouseWheelEvent");

	Params::PaperInputProcessorHelper_UnbindMouseWheelEvent Parms{};

	Parms.InOnMouseWheel = InOnMouseWheel;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperLevelMgr.ClearAllPersistentLevels
// (Final, Native, Public, BlueprintCallable)

void UPaperLevelMgr::ClearAllPersistentLevels()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperLevelMgr", "ClearAllPersistentLevels");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperLevelMgr.ClearPersistentLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    LevelPath                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperLevelMgr::ClearPersistentLevel(const class FString& LevelPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperLevelMgr", "ClearPersistentLevel");

	Params::PaperLevelMgr_ClearPersistentLevel Parms{};

	Parms.LevelPath = std::move(LevelPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperLevelMgr.DungeonTeleportPlayer
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   TargetLocation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPaperLevelMgr::DungeonTeleportPlayer(const struct FVector& TargetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperLevelMgr", "DungeonTeleportPlayer");

	Params::PaperLevelMgr_DungeonTeleportPlayer Parms{};

	Parms.TargetLocation = std::move(TargetLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperLevelMgr.GetCurrentWorldPath
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPaperLevelMgr::GetCurrentWorldPath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperLevelMgr", "GetCurrentWorldPath");

	Params::PaperLevelMgr_GetCurrentWorldPath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperLevelMgr.GetLevelStreaming
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    LevelPath                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULevelStreaming*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULevelStreaming* UPaperLevelMgr::GetLevelStreaming(const class FString& LevelPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperLevelMgr", "GetLevelStreaming");

	Params::PaperLevelMgr_GetLevelStreaming Parms{};

	Parms.LevelPath = std::move(LevelPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperLevelMgr.LoadLevelToWorld
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class FString&                    LevelPath                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   LoadLocation                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   PlayerPosition                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    WithoutProgress                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPaperLevelMgr::LoadLevelToWorld(const class FString& LevelPath, const struct FVector& LoadLocation, const struct FVector& PlayerPosition, bool WithoutProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperLevelMgr", "LoadLevelToWorld");

	Params::PaperLevelMgr_LoadLevelToWorld Parms{};

	Parms.LevelPath = std::move(LevelPath);
	Parms.LoadLocation = std::move(LoadLocation);
	Parms.PlayerPosition = std::move(PlayerPosition);
	Parms.WithoutProgress = WithoutProgress;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperLevelMgr.LoadSubLevelToWorld
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class FString&                    SubLevelPath                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   LoadLocation                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPaperLevelMgr::LoadSubLevelToWorld(const class FString& SubLevelPath, const struct FVector& LoadLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperLevelMgr", "LoadSubLevelToWorld");

	Params::PaperLevelMgr_LoadSubLevelToWorld Parms{};

	Parms.SubLevelPath = std::move(SubLevelPath);
	Parms.LoadLocation = std::move(LoadLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperLevelMgr.OpenNewWorld
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class FString&                    WorldPath                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   PlayerPosition                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Option                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPaperLevelMgr::OpenNewWorld(const class FString& WorldPath, const struct FVector& PlayerPosition, const class FString& Option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperLevelMgr", "OpenNewWorld");

	Params::PaperLevelMgr_OpenNewWorld Parms{};

	Parms.WorldPath = std::move(WorldPath);
	Parms.PlayerPosition = std::move(PlayerPosition);
	Parms.Option = std::move(Option);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperLevelMgr.ReturnToWorld
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   LoadLocation                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPaperLevelMgr::ReturnToWorld(const struct FVector& LoadLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperLevelMgr", "ReturnToWorld");

	Params::PaperLevelMgr_ReturnToWorld Parms{};

	Parms.LoadLocation = std::move(LoadLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperLevelMgr.SetPersistentLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    LevelPath                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperLevelMgr::SetPersistentLevel(const class FString& LevelPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperLevelMgr", "SetPersistentLevel");

	Params::PaperLevelMgr_SetPersistentLevel Parms{};

	Parms.LevelPath = std::move(LevelPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperLevelMgr.TeleportPlayer
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   TargetLocation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPaperLevelMgr::TeleportPlayer(const struct FVector& TargetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperLevelMgr", "TeleportPlayer");

	Params::PaperLevelMgr_TeleportPlayer Parms{};

	Parms.TargetLocation = std::move(TargetLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperLuaBlueprintLibrary.DeserializeComponent
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           Owner                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ComponentName                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TMap<class FString, class FString>&Properties                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bIsCustomImportText                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UPaperLuaBlueprintLibrary::DeserializeComponent(class AActor* Owner, const class FString& ComponentName, const TMap<class FString, class FString>& Properties, bool bIsCustomImportText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PaperLuaBlueprintLibrary", "DeserializeComponent");

	Params::PaperLuaBlueprintLibrary_DeserializeComponent Parms{};

	Parms.Owner = Owner;
	Parms.ComponentName = std::move(ComponentName);
	Parms.Properties = std::move(Properties);
	Parms.bIsCustomImportText = bIsCustomImportText;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperLuaBlueprintLibrary.DeserializeLocalProperty
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           Owner                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ComponentName                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TMap<class FString, class FString>&Properties                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bIsCustomImportText                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UPaperLuaBlueprintLibrary::DeserializeLocalProperty(class AActor* Owner, const class FString& ComponentName, const TMap<class FString, class FString>& Properties, bool bIsCustomImportText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PaperLuaBlueprintLibrary", "DeserializeLocalProperty");

	Params::PaperLuaBlueprintLibrary_DeserializeLocalProperty Parms{};

	Parms.Owner = Owner;
	Parms.ComponentName = std::move(ComponentName);
	Parms.Properties = std::move(Properties);
	Parms.bIsCustomImportText = bIsCustomImportText;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperLuaBlueprintLibrary.FinishSpawning
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTransform&                Transform                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsDefaultTransform                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperLuaBlueprintLibrary::FinishSpawning(class AActor* Actor, const struct FTransform& Transform, bool bIsDefaultTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PaperLuaBlueprintLibrary", "FinishSpawning");

	Params::PaperLuaBlueprintLibrary_FinishSpawning Parms{};

	Parms.Actor = Actor;
	Parms.Transform = std::move(Transform);
	Parms.bIsDefaultTransform = bIsDefaultTransform;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperLuaBlueprintLibrary.GetActorNameWithMap
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPaperLuaBlueprintLibrary::GetActorNameWithMap(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PaperLuaBlueprintLibrary", "GetActorNameWithMap");

	Params::PaperLuaBlueprintLibrary_GetActorNameWithMap Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperLuaBlueprintLibrary.GetBoolFromConfig
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Session                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Path                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNeedReload                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPaperLuaBlueprintLibrary::GetBoolFromConfig(const class FString& Session, const class FString& Key, const class FString& Path, bool bNeedReload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PaperLuaBlueprintLibrary", "GetBoolFromConfig");

	Params::PaperLuaBlueprintLibrary_GetBoolFromConfig Parms{};

	Parms.Session = std::move(Session);
	Parms.Key = std::move(Key);
	Parms.Path = std::move(Path);
	Parms.bNeedReload = bNeedReload;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperLuaBlueprintLibrary.GetCurrentPerformanceData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TMap<class FString, float>*             PerfData                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UPaperLuaBlueprintLibrary::GetCurrentPerformanceData(TMap<class FString, float>* PerfData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PaperLuaBlueprintLibrary", "GetCurrentPerformanceData");

	Params::PaperLuaBlueprintLibrary_GetCurrentPerformanceData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PerfData != nullptr)
		*PerfData = std::move(Parms.PerfData);
}


// Function PaperLuaFrameworkBase.PaperLuaBlueprintLibrary.GetCurrentTotalMillisecond
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UPaperLuaBlueprintLibrary::GetCurrentTotalMillisecond()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PaperLuaBlueprintLibrary", "GetCurrentTotalMillisecond");

	Params::PaperLuaBlueprintLibrary_GetCurrentTotalMillisecond Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperLuaBlueprintLibrary.GetDefaultDeviceProfileName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPaperLuaBlueprintLibrary::GetDefaultDeviceProfileName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PaperLuaBlueprintLibrary", "GetDefaultDeviceProfileName");

	Params::PaperLuaBlueprintLibrary_GetDefaultDeviceProfileName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperLuaBlueprintLibrary.GetFrameCostMicroSeconds
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UPaperLuaBlueprintLibrary::GetFrameCostMicroSeconds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PaperLuaBlueprintLibrary", "GetFrameCostMicroSeconds");

	Params::PaperLuaBlueprintLibrary_GetFrameCostMicroSeconds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperLuaBlueprintLibrary.GetFrameCount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UPaperLuaBlueprintLibrary::GetFrameCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PaperLuaBlueprintLibrary", "GetFrameCount");

	Params::PaperLuaBlueprintLibrary_GetFrameCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperLuaBlueprintLibrary.GetIntFromConfig
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Session                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Path                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNeedReload                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPaperLuaBlueprintLibrary::GetIntFromConfig(const class FString& Session, const class FString& Key, const class FString& Path, bool bNeedReload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PaperLuaBlueprintLibrary", "GetIntFromConfig");

	Params::PaperLuaBlueprintLibrary_GetIntFromConfig Parms{};

	Parms.Session = std::move(Session);
	Parms.Key = std::move(Key);
	Parms.Path = std::move(Path);
	Parms.bNeedReload = bNeedReload;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperLuaBlueprintLibrary.GetLevelPackageName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ULevel*                           InLevel                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPaperLuaBlueprintLibrary::GetLevelPackageName(class ULevel* InLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PaperLuaBlueprintLibrary", "GetLevelPackageName");

	Params::PaperLuaBlueprintLibrary_GetLevelPackageName Parms{};

	Parms.InLevel = InLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperLuaBlueprintLibrary.GetMapCleanName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    StrMapName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPaperLuaBlueprintLibrary::GetMapCleanName(const class FString& StrMapName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PaperLuaBlueprintLibrary", "GetMapCleanName");

	Params::PaperLuaBlueprintLibrary_GetMapCleanName Parms{};

	Parms.StrMapName = std::move(StrMapName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperLuaBlueprintLibrary.GetNumTasksPrecompiled
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPaperLuaBlueprintLibrary::GetNumTasksPrecompiled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PaperLuaBlueprintLibrary", "GetNumTasksPrecompiled");

	Params::PaperLuaBlueprintLibrary_GetNumTasksPrecompiled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperLuaBlueprintLibrary.GetStringArrayFromConfig
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Session                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Path                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNeedReload                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UPaperLuaBlueprintLibrary::GetStringArrayFromConfig(const class FString& Session, const class FString& Key, const class FString& Path, bool bNeedReload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PaperLuaBlueprintLibrary", "GetStringArrayFromConfig");

	Params::PaperLuaBlueprintLibrary_GetStringArrayFromConfig Parms{};

	Parms.Session = std::move(Session);
	Parms.Key = std::move(Key);
	Parms.Path = std::move(Path);
	Parms.bNeedReload = bNeedReload;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperLuaBlueprintLibrary.GetStringFromConfig
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Session                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Path                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNeedReload                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPaperLuaBlueprintLibrary::GetStringFromConfig(const class FString& Session, const class FString& Key, const class FString& Path, bool bNeedReload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PaperLuaBlueprintLibrary", "GetStringFromConfig");

	Params::PaperLuaBlueprintLibrary_GetStringFromConfig Parms{};

	Parms.Session = std::move(Session);
	Parms.Key = std::move(Key);
	Parms.Path = std::move(Path);
	Parms.bNeedReload = bNeedReload;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperLuaBlueprintLibrary.GetTotalNumTasks
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPaperLuaBlueprintLibrary::GetTotalNumTasks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PaperLuaBlueprintLibrary", "GetTotalNumTasks");

	Params::PaperLuaBlueprintLibrary_GetTotalNumTasks Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperLuaBlueprintLibrary.HasActorBegunPlay
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPaperLuaBlueprintLibrary::HasActorBegunPlay(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PaperLuaBlueprintLibrary", "HasActorBegunPlay");

	Params::PaperLuaBlueprintLibrary_HasActorBegunPlay Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperLuaBlueprintLibrary.IsLuaCallErrorNotifyEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPaperLuaBlueprintLibrary::IsLuaCallErrorNotifyEnable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PaperLuaBlueprintLibrary", "IsLuaCallErrorNotifyEnable");

	Params::PaperLuaBlueprintLibrary_IsLuaCallErrorNotifyEnable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperLuaBlueprintLibrary.IsPSOPrecompiling
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPaperLuaBlueprintLibrary::IsPSOPrecompiling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PaperLuaBlueprintLibrary", "IsPSOPrecompiling");

	Params::PaperLuaBlueprintLibrary_IsPSOPrecompiling Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperLuaBlueprintLibrary.IsWithEditor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPaperLuaBlueprintLibrary::IsWithEditor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PaperLuaBlueprintLibrary", "IsWithEditor");

	Params::PaperLuaBlueprintLibrary_IsWithEditor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperLuaBlueprintLibrary.ManualShowWindowsVirtualKeyboard
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperLuaBlueprintLibrary::ManualShowWindowsVirtualKeyboard(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PaperLuaBlueprintLibrary", "ManualShowWindowsVirtualKeyboard");

	Params::PaperLuaBlueprintLibrary_ManualShowWindowsVirtualKeyboard Parms{};

	Parms.bShow = bShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperLuaBlueprintLibrary.NormalizeConfigIniPath
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Path                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPaperLuaBlueprintLibrary::NormalizeConfigIniPath(const class FString& Path)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PaperLuaBlueprintLibrary", "NormalizeConfigIniPath");

	Params::PaperLuaBlueprintLibrary_NormalizeConfigIniPath Parms{};

	Parms.Path = std::move(Path);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperLuaBlueprintLibrary.NumPSOPrecompilesRemaining
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPaperLuaBlueprintLibrary::NumPSOPrecompilesRemaining()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PaperLuaBlueprintLibrary", "NumPSOPrecompilesRemaining");

	Params::PaperLuaBlueprintLibrary_NumPSOPrecompilesRemaining Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperLuaBlueprintLibrary.SetActorPreferEnlightenThanLightmass
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInPreferEnlightenThanLightmass                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperLuaBlueprintLibrary::SetActorPreferEnlightenThanLightmass(class AActor* Actor, bool bInPreferEnlightenThanLightmass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PaperLuaBlueprintLibrary", "SetActorPreferEnlightenThanLightmass");

	Params::PaperLuaBlueprintLibrary_SetActorPreferEnlightenThanLightmass Parms{};

	Parms.Actor = Actor;
	Parms.bInPreferEnlightenThanLightmass = bInPreferEnlightenThanLightmass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperLuaBlueprintLibrary.SetBoolToConfig
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Session                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Path                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFlush                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperLuaBlueprintLibrary::SetBoolToConfig(const class FString& Session, const class FString& Key, const class FString& Path, bool Value, bool bFlush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PaperLuaBlueprintLibrary", "SetBoolToConfig");

	Params::PaperLuaBlueprintLibrary_SetBoolToConfig Parms{};

	Parms.Session = std::move(Session);
	Parms.Key = std::move(Key);
	Parms.Path = std::move(Path);
	Parms.Value = Value;
	Parms.bFlush = bFlush;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperLuaBlueprintLibrary.SetIntToConfig
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Session                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Path                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFlush                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperLuaBlueprintLibrary::SetIntToConfig(const class FString& Session, const class FString& Key, const class FString& Path, int32 Value, bool bFlush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PaperLuaBlueprintLibrary", "SetIntToConfig");

	Params::PaperLuaBlueprintLibrary_SetIntToConfig Parms{};

	Parms.Session = std::move(Session);
	Parms.Key = std::move(Key);
	Parms.Path = std::move(Path);
	Parms.Value = Value;
	Parms.bFlush = bFlush;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperLuaBlueprintLibrary.SetLuaCallErrorNotify
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperLuaBlueprintLibrary::SetLuaCallErrorNotify(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PaperLuaBlueprintLibrary", "SetLuaCallErrorNotify");

	Params::PaperLuaBlueprintLibrary_SetLuaCallErrorNotify Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperLuaBlueprintLibrary.SetMobileGameState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bLoading                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InMode                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperLuaBlueprintLibrary::SetMobileGameState(bool bLoading, int32 InMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PaperLuaBlueprintLibrary", "SetMobileGameState");

	Params::PaperLuaBlueprintLibrary_SetMobileGameState Parms{};

	Parms.bLoading = bLoading;
	Parms.InMode = InMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperLuaBlueprintLibrary.SetStringToConfig
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Session                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Path                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Value                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFlush                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperLuaBlueprintLibrary::SetStringToConfig(const class FString& Session, const class FString& Key, const class FString& Path, const class FString& Value, bool bFlush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PaperLuaBlueprintLibrary", "SetStringToConfig");

	Params::PaperLuaBlueprintLibrary_SetStringToConfig Parms{};

	Parms.Session = std::move(Session);
	Parms.Key = std::move(Key);
	Parms.Path = std::move(Path);
	Parms.Value = std::move(Value);
	Parms.bFlush = bFlush;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperLuaBlueprintLibrary.SimulateMouseClick
// (Final, Native, Static, Public, BlueprintCallable)

void UPaperLuaBlueprintLibrary::SimulateMouseClick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PaperLuaBlueprintLibrary", "SimulateMouseClick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperLuaBlueprintLibrary.SpawnActor
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                           SpawnClass                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Postion                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  Rotation                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// const struct FVector&                   Scale                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddToDefaultSoloLevel                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDeferConstruction                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UPaperLuaBlueprintLibrary::SpawnActor(class UObject* WorldContextObject, class UClass* SpawnClass, const struct FVector& Postion, const struct FRotator& Rotation, const struct FVector& Scale, const class FString& Name_0, bool bAddToDefaultSoloLevel, bool bDeferConstruction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PaperLuaBlueprintLibrary", "SpawnActor");

	Params::PaperLuaBlueprintLibrary_SpawnActor Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SpawnClass = SpawnClass;
	Parms.Postion = std::move(Postion);
	Parms.Rotation = std::move(Rotation);
	Parms.Scale = std::move(Scale);
	Parms.Name_0 = std::move(Name_0);
	Parms.bAddToDefaultSoloLevel = bAddToDefaultSoloLevel;
	Parms.bDeferConstruction = bDeferConstruction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperNetSystemBlueprintLibrary.IsMultiPlayerMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPaperNetSystemBlueprintLibrary::IsMultiPlayerMode(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PaperNetSystemBlueprintLibrary", "IsMultiPlayerMode");

	Params::PaperNetSystemBlueprintLibrary_IsMultiPlayerMode Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperNetworkDataCollector.GetInstance
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPaperNetworkDataCollector*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPaperNetworkDataCollector* UPaperNetworkDataCollector::GetInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PaperNetworkDataCollector", "GetInstance");

	Params::PaperNetworkDataCollector_GetInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperNetworkDataCollector.GetCollectedDataMap
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TMap<class FString, struct FNetworkCollectedData>ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<class FString, struct FNetworkCollectedData> UPaperNetworkDataCollector::GetCollectedDataMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperNetworkDataCollector", "GetCollectedDataMap");

	Params::PaperNetworkDataCollector_GetCollectedDataMap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperNetworkDataCollector.Reset
// (Final, Native, Public, BlueprintCallable)

void UPaperNetworkDataCollector::Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperNetworkDataCollector", "Reset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperNetworkDataCollector.SetEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperNetworkDataCollector::SetEnabled(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperNetworkDataCollector", "SetEnabled");

	Params::PaperNetworkDataCollector_SetEnabled Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperNetworkDataCollector.WriteToFile
// (Final, Native, Public, BlueprintCallable)

void UPaperNetworkDataCollector::WriteToFile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperNetworkDataCollector", "WriteToFile");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperNetworkMgr.Connect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    ipAddress                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Port                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperNetworkMgr::Connect(const class FString& ipAddress, int32 Port)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperNetworkMgr", "Connect");

	Params::PaperNetworkMgr_Connect Parms{};

	Parms.ipAddress = std::move(ipAddress);
	Parms.Port = Port;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperNetworkMgr.CreateNetCrypter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPaperNetworkMgr::CreateNetCrypter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperNetworkMgr", "CreateNetCrypter");

	Params::PaperNetworkMgr_CreateNetCrypter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperNetworkMgr.DestroyNetCrypter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPaperNetworkMgr::DestroyNetCrypter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperNetworkMgr", "DestroyNetCrypter");

	Params::PaperNetworkMgr_DestroyNetCrypter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperNetworkMgr.DisConnect
// (Final, Native, Public, BlueprintCallable)

void UPaperNetworkMgr::DisConnect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperNetworkMgr", "DisConnect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperNetworkMgr.GetNetLatency
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

double UPaperNetworkMgr::GetNetLatency()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperNetworkMgr", "GetNetLatency");

	Params::PaperNetworkMgr_GetNetLatency Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperNetworkMgr.HandleCryptAck
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PubKeyLen                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPaperNetworkMgr::HandleCryptAck(int32 PubKeyLen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperNetworkMgr", "HandleCryptAck");

	Params::PaperNetworkMgr_HandleCryptAck Parms{};

	Parms.PubKeyLen = PubKeyLen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperNetworkMgr.HttpGetWithAuthUser
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    szAuth                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    szUserName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool bSuccess, int32 ResponseCode, const class FString& ResponseString)>onHttpRequestCompleted                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperNetworkMgr::HttpGetWithAuthUser(const class FString& URL, const class FString& szAuth, const class FString& szUserName, TDelegate<void(bool bSuccess, int32 ResponseCode, const class FString& ResponseString)> onHttpRequestCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperNetworkMgr", "HttpGetWithAuthUser");

	Params::PaperNetworkMgr_HttpGetWithAuthUser Parms{};

	Parms.URL = std::move(URL);
	Parms.szAuth = std::move(szAuth);
	Parms.szUserName = std::move(szUserName);
	Parms.onHttpRequestCompleted = onHttpRequestCompleted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperNetworkMgr.HttpPostEx
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    szURL                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TMap<class FString, class FString>&mapHeader                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FString&                    szCont                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool bSuccess, int32 ResponseCode, const class FString& ResponseString)>onHttpRequestCompleted                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperNetworkMgr::HttpPostEx(const class FString& szURL, const TMap<class FString, class FString>& mapHeader, const class FString& szCont, TDelegate<void(bool bSuccess, int32 ResponseCode, const class FString& ResponseString)> onHttpRequestCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperNetworkMgr", "HttpPostEx");

	Params::PaperNetworkMgr_HttpPostEx Parms{};

	Parms.szURL = std::move(szURL);
	Parms.mapHeader = std::move(mapHeader);
	Parms.szCont = std::move(szCont);
	Parms.onHttpRequestCompleted = onHttpRequestCompleted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperNetworkMgr.HttpPostFileEx
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    szURL                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TMap<class FString, class FString>&mapHeader                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FString&                    szFilePath                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TMap<class FString, class FString>&mapPara                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(bool bSuccess, int32 ResponseCode, const class FString& ResponseString)>onHttpRequestCompleted                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperNetworkMgr::HttpPostFileEx(const class FString& szURL, const TMap<class FString, class FString>& mapHeader, const class FString& szFilePath, const TMap<class FString, class FString>& mapPara, TDelegate<void(bool bSuccess, int32 ResponseCode, const class FString& ResponseString)> onHttpRequestCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperNetworkMgr", "HttpPostFileEx");

	Params::PaperNetworkMgr_HttpPostFileEx Parms{};

	Parms.szURL = std::move(szURL);
	Parms.mapHeader = std::move(mapHeader);
	Parms.szFilePath = std::move(szFilePath);
	Parms.mapPara = std::move(mapPara);
	Parms.onHttpRequestCompleted = onHttpRequestCompleted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperNetworkMgr.HttpPostFileExNew
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    szURL                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TMap<class FString, class FString>&mapHeader                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FString&                    szFilePath                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TMap<class FString, class FString>&mapPara                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(bool bSuccess, int32 ResponseCode, const class FString& ResponseString)>onHttpRequestCompleted                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperNetworkMgr::HttpPostFileExNew(const class FString& szURL, const TMap<class FString, class FString>& mapHeader, const class FString& szFilePath, const TMap<class FString, class FString>& mapPara, TDelegate<void(bool bSuccess, int32 ResponseCode, const class FString& ResponseString)> onHttpRequestCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperNetworkMgr", "HttpPostFileExNew");

	Params::PaperNetworkMgr_HttpPostFileExNew Parms{};

	Parms.szURL = std::move(szURL);
	Parms.mapHeader = std::move(mapHeader);
	Parms.szFilePath = std::move(szFilePath);
	Parms.mapPara = std::move(mapPara);
	Parms.onHttpRequestCompleted = onHttpRequestCompleted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperNetworkMgr.HttpPostFileWithAuthUser
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    szURL                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    szAuth                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    szUserName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    szFilePath                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool bSuccess, int32 ResponseCode, const class FString& ResponseString)>onHttpRequestCompleted                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperNetworkMgr::HttpPostFileWithAuthUser(const class FString& szURL, const class FString& szAuth, const class FString& szUserName, const class FString& szFilePath, TDelegate<void(bool bSuccess, int32 ResponseCode, const class FString& ResponseString)> onHttpRequestCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperNetworkMgr", "HttpPostFileWithAuthUser");

	Params::PaperNetworkMgr_HttpPostFileWithAuthUser Parms{};

	Parms.szURL = std::move(szURL);
	Parms.szAuth = std::move(szAuth);
	Parms.szUserName = std::move(szUserName);
	Parms.szFilePath = std::move(szFilePath);
	Parms.onHttpRequestCompleted = onHttpRequestCompleted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperNetworkMgr.HttpPostWithAuthUser
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    szURL                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    szAuth                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    szUserName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    szContType                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    szCont                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool bSuccess, int32 ResponseCode, const class FString& ResponseString)>onHttpRequestCompleted                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperNetworkMgr::HttpPostWithAuthUser(const class FString& szURL, const class FString& szAuth, const class FString& szUserName, const class FString& szContType, const class FString& szCont, TDelegate<void(bool bSuccess, int32 ResponseCode, const class FString& ResponseString)> onHttpRequestCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperNetworkMgr", "HttpPostWithAuthUser");

	Params::PaperNetworkMgr_HttpPostWithAuthUser Parms{};

	Parms.szURL = std::move(szURL);
	Parms.szAuth = std::move(szAuth);
	Parms.szUserName = std::move(szUserName);
	Parms.szContType = std::move(szContType);
	Parms.szCont = std::move(szCont);
	Parms.onHttpRequestCompleted = onHttpRequestCompleted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperNetworkMgr.HttpRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool bSuccess, int32 ResponseCode, const class FString& ResponseString)>onHttpRequestCompleted                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperNetworkMgr::HttpRequest(const class FString& URL, TDelegate<void(bool bSuccess, int32 ResponseCode, const class FString& ResponseString)> onHttpRequestCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperNetworkMgr", "HttpRequest");

	Params::PaperNetworkMgr_HttpRequest Parms{};

	Parms.URL = std::move(URL);
	Parms.onHttpRequestCompleted = onHttpRequestCompleted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperNetworkMgr.HttpRequestContent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool bSuccess, int32 ResponseCode)>OnHttpRequestContentCompleted                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>*                          ResponseContent                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UPaperNetworkMgr::HttpRequestContent(const class FString& URL, TDelegate<void(bool bSuccess, int32 ResponseCode)> OnHttpRequestContentCompleted, TArray<uint8>* ResponseContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperNetworkMgr", "HttpRequestContent");

	Params::PaperNetworkMgr_HttpRequestContent Parms{};

	Parms.URL = std::move(URL);
	Parms.OnHttpRequestContentCompleted = OnHttpRequestContentCompleted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResponseContent != nullptr)
		*ResponseContent = std::move(Parms.ResponseContent);
}


// Function PaperLuaFrameworkBase.PaperNetworkMgr.HttpRequestContent2
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool bSuccess, int32 ResponseCode, const TArray<uint8>& ResponseContent)>onHttpRequestCompleted                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperNetworkMgr::HttpRequestContent2(const class FString& URL, TDelegate<void(bool bSuccess, int32 ResponseCode, const TArray<uint8>& ResponseContent)> onHttpRequestCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperNetworkMgr", "HttpRequestContent2");

	Params::PaperNetworkMgr_HttpRequestContent2 Parms{};

	Parms.URL = std::move(URL);
	Parms.onHttpRequestCompleted = onHttpRequestCompleted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperNetworkMgr.InitAndGenNetCrypt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPaperNetworkMgr::InitAndGenNetCrypt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperNetworkMgr", "InitAndGenNetCrypt");

	Params::PaperNetworkMgr_InitAndGenNetCrypt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperNetworkMgr.InitCrypt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             g_len                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             p_len                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             pub_key_len                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPaperNetworkMgr::InitCrypt(const int32 g_len, const int32 p_len, const int32 pub_key_len)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperNetworkMgr", "InitCrypt");

	Params::PaperNetworkMgr_InitCrypt Parms{};

	Parms.g_len = g_len;
	Parms.p_len = p_len;
	Parms.pub_key_len = pub_key_len;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperNetworkMgr.IsConnected
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPaperNetworkMgr::IsConnected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperNetworkMgr", "IsConnected");

	Params::PaperNetworkMgr_IsConnected Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperNetworkMgr.IsConnecting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPaperNetworkMgr::IsConnecting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperNetworkMgr", "IsConnecting");

	Params::PaperNetworkMgr_IsConnecting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperNetworkMgr.IsNetCrypterExists
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPaperNetworkMgr::IsNetCrypterExists()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperNetworkMgr", "IsNetCrypterExists");

	Params::PaperNetworkMgr_IsNetCrypterExists Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperNetworkMgr.IsUnLuaAsyncTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPaperNetworkMgr::IsUnLuaAsyncTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperNetworkMgr", "IsUnLuaAsyncTime");

	Params::PaperNetworkMgr_IsUnLuaAsyncTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperNetworkMgr.NetTraceReadDataProto
// (Final, Native, Public, BlueprintCallable)

void UPaperNetworkMgr::NetTraceReadDataProto()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperNetworkMgr", "NetTraceReadDataProto");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperNetworkMgr.NetTraceSendDataProto
// (Final, Native, Public, BlueprintCallable)

void UPaperNetworkMgr::NetTraceSendDataProto()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperNetworkMgr", "NetTraceSendDataProto");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperNetworkMgr.ReadDataToByteBuf
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPaperNetworkMgr::ReadDataToByteBuf()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperNetworkMgr", "ReadDataToByteBuf");

	Params::PaperNetworkMgr_ReadDataToByteBuf Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperNetworkMgr.SendDataFromByteBuf
// (Final, Native, Public, BlueprintCallable)

void UPaperNetworkMgr::SendDataFromByteBuf()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperNetworkMgr", "SendDataFromByteBuf");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperNetworkMgr.SendDataFromByteBufSync
// (Final, Native, Public, BlueprintCallable)

void UPaperNetworkMgr::SendDataFromByteBufSync()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperNetworkMgr", "SendDataFromByteBufSync");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperNetworkMgr.SetAesCryptMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InMode                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperNetworkMgr::SetAesCryptMode(int32 InMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperNetworkMgr", "SetAesCryptMode");

	Params::PaperNetworkMgr_SetAesCryptMode Parms{};

	Parms.InMode = InMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperNetworkMgr.SetConnectTimeout
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Timeout                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    autoDisconnect                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperNetworkMgr::SetConnectTimeout(float Timeout, bool autoDisconnect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperNetworkMgr", "SetConnectTimeout");

	Params::PaperNetworkMgr_SetConnectTimeout Parms{};

	Parms.Timeout = Timeout;
	Parms.autoDisconnect = autoDisconnect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperNetworkMgr.SetHandlerMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPaperNetworkHandler                    Mode                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperNetworkMgr::SetHandlerMode(EPaperNetworkHandler Mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperNetworkMgr", "SetHandlerMode");

	Params::PaperNetworkMgr_SetHandlerMode Parms{};

	Parms.Mode = Mode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperNetworkMgr.SetHeartbeatInterval
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Interval                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperNetworkMgr::SetHeartbeatInterval(float Interval)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperNetworkMgr", "SetHeartbeatInterval");

	Params::PaperNetworkMgr_SetHeartbeatInterval Parms{};

	Parms.Interval = Interval;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperNetworkMgr.SetNetProtoId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ProtoId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperNetworkMgr::SetNetProtoId(int32 ProtoId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperNetworkMgr", "SetNetProtoId");

	Params::PaperNetworkMgr_SetNetProtoId Parms{};

	Parms.ProtoId = ProtoId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperNetworkMgr.StartHeartbeatDataFromByteBuf
// (Final, Native, Public, BlueprintCallable)

void UPaperNetworkMgr::StartHeartbeatDataFromByteBuf()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperNetworkMgr", "StartHeartbeatDataFromByteBuf");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperNetworkSubsystem.GetPaperNetworkMgr
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPaperNetworkMgr*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPaperNetworkMgr* UPaperNetworkSubsystem::GetPaperNetworkMgr() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperNetworkSubsystem", "GetPaperNetworkMgr");

	Params::PaperNetworkSubsystem_GetPaperNetworkMgr Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperPlatformGameInstance.GC
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bForceLua                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperPlatformGameInstance::GC(bool bForceLua)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperPlatformGameInstance", "GC");

	Params::PaperPlatformGameInstance_GC Parms{};

	Parms.bForceLua = bForceLua;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperPlatformGameInstance.Lua
// (Final, Exec, Native, Public)
// Parameters:
// const class FString&                    LuaString                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperPlatformGameInstance::Lua(const class FString& LuaString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperPlatformGameInstance", "Lua");

	Params::PaperPlatformGameInstance_Lua Parms{};

	Parms.LuaString = std::move(LuaString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperPlatformGameInstance.Restart
// (Native, Public, BlueprintCallable)

void UPaperPlatformGameInstance::Restart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperPlatformGameInstance", "Restart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperPlayerPrefsMgr.GetInstance
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPaperPlayerPrefsMgr*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPaperPlayerPrefsMgr* UPaperPlayerPrefsMgr::GetInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PaperPlayerPrefsMgr", "GetInstance");

	Params::PaperPlayerPrefsMgr_GetInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperPlayerPrefsMgr.EmptyPaperProfileSection
// (Final, Native, Public, BlueprintCallable)

void UPaperPlayerPrefsMgr::EmptyPaperProfileSection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperPlayerPrefsMgr", "EmptyPaperProfileSection");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperPlayerPrefsMgr.GetBool
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPaperPlayerPrefsMgr::GetBool(const class FString& Key, bool* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperPlayerPrefsMgr", "GetBool");

	Params::PaperPlayerPrefsMgr_GetBool Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Value != nullptr)
		*Value = Parms.Value;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperPlayerPrefsMgr.GetFloat
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPaperPlayerPrefsMgr::GetFloat(const class FString& Key, float* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperPlayerPrefsMgr", "GetFloat");

	Params::PaperPlayerPrefsMgr_GetFloat Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Value != nullptr)
		*Value = Parms.Value;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperPlayerPrefsMgr.GetInt
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPaperPlayerPrefsMgr::GetInt(const class FString& Key, int32* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperPlayerPrefsMgr", "GetInt");

	Params::PaperPlayerPrefsMgr_GetInt Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Value != nullptr)
		*Value = Parms.Value;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperPlayerPrefsMgr.GetStr
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPaperPlayerPrefsMgr::GetStr(const class FString& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperPlayerPrefsMgr", "GetStr");

	Params::PaperPlayerPrefsMgr_GetStr Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperPlayerPrefsMgr.GetString
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString*                          Value                                                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPaperPlayerPrefsMgr::GetString(const class FString& Key, class FString* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperPlayerPrefsMgr", "GetString");

	Params::PaperPlayerPrefsMgr_GetString Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Value != nullptr)
		*Value = std::move(Parms.Value);

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.PaperPlayerPrefsMgr.Init
// (Final, Native, Public, BlueprintCallable)

void UPaperPlayerPrefsMgr::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperPlayerPrefsMgr", "Init");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperPlayerPrefsMgr.SetBool
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperPlayerPrefsMgr::SetBool(const class FString& Key, bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperPlayerPrefsMgr", "SetBool");

	Params::PaperPlayerPrefsMgr_SetBool Parms{};

	Parms.Key = std::move(Key);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperPlayerPrefsMgr.SetFloat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperPlayerPrefsMgr::SetFloat(const class FString& Key, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperPlayerPrefsMgr", "SetFloat");

	Params::PaperPlayerPrefsMgr_SetFloat Parms{};

	Parms.Key = std::move(Key);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperPlayerPrefsMgr.SetInt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperPlayerPrefsMgr::SetInt(const class FString& Key, int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperPlayerPrefsMgr", "SetInt");

	Params::PaperPlayerPrefsMgr_SetInt Parms{};

	Parms.Key = std::move(Key);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperPlayerPrefsMgr.SetString
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Value                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaperPlayerPrefsMgr::SetString(const class FString& Key, const class FString& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperPlayerPrefsMgr", "SetString");

	Params::PaperPlayerPrefsMgr_SetString Parms{};

	Parms.Key = std::move(Key);
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.PaperPlayerPrefsMgr.Shutdown
// (Final, Native, Public, BlueprintCallable)

void UPaperPlayerPrefsMgr::Shutdown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperPlayerPrefsMgr", "Shutdown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.X6IpNetDriverV2.HandleForceReplicate
// (Final, Native, Protected)

void UX6IpNetDriverV2::HandleForceReplicate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6IpNetDriverV2", "HandleForceReplicate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.X6NetClient.AddPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   NetID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NetClient::AddPlayer(int64 NetID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NetClient", "AddPlayer");

	Params::X6NetClient_AddPlayer Parms{};

	Parms.NetID = NetID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.X6NetClient.BindSimulatedActor
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int64&                            NetClientID                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int64&                            NetEntityID                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NetClient::BindSimulatedActor(const int64& NetClientID, const int64& NetEntityID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NetClient", "BindSimulatedActor");

	Params::X6NetClient_BindSimulatedActor Parms{};

	Parms.NetClientID = NetClientID;
	Parms.NetEntityID = NetEntityID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.X6NetClient.Debug_SetChannelReplicationPaused
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPause                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NetClient::Debug_SetChannelReplicationPaused(class AActor* TargetActor, bool bPause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NetClient", "Debug_SetChannelReplicationPaused");

	Params::X6NetClient_Debug_SetChannelReplicationPaused Parms{};

	Parms.TargetActor = TargetActor;
	Parms.bPause = bPause;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.X6NetClient.Debug_SetConnectionLight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bLight                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NetClient::Debug_SetConnectionLight(bool bLight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NetClient", "Debug_SetConnectionLight");

	Params::X6NetClient_Debug_SetConnectionLight Parms{};

	Parms.bLight = bLight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.X6NetClient.DebugConnectionLog_Lua
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bDebug                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NetClient::DebugConnectionLog_Lua(bool bDebug)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NetClient", "DebugConnectionLog_Lua");

	Params::X6NetClient_DebugConnectionLog_Lua Parms{};

	Parms.bDebug = bDebug;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.X6NetClient.GetMultiPlayerMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UX6NetClient::GetMultiPlayerMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NetClient", "GetMultiPlayerMode");

	Params::X6NetClient_GetMultiPlayerMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.X6NetClient.GetSeverTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UX6NetClient::GetSeverTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NetClient", "GetSeverTime");

	Params::X6NetClient_GetSeverTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.X6NetClient.IsMultiPlayerMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6NetClient::IsMultiPlayerMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NetClient", "IsMultiPlayerMode");

	Params::X6NetClient_IsMultiPlayerMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.X6NetClient.OnConnected
// (Final, Native, Public, BlueprintCallable)

void UX6NetClient::OnConnected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NetClient", "OnConnected");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.X6NetClient.OnDisconnected
// (Final, Native, Public, BlueprintCallable)

void UX6NetClient::OnDisconnected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NetClient", "OnDisconnected");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.X6NetClient.OnWorldBeginPlay
// (Final, Native, Public)

void UX6NetClient::OnWorldBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NetClient", "OnWorldBeginPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.X6NetClient.RegisterActorNetGUID_Lua
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   NetID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NetClient::RegisterActorNetGUID_Lua(int64 NetID, class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NetClient", "RegisterActorNetGUID_Lua");

	Params::X6NetClient_RegisterActorNetGUID_Lua Parms{};

	Parms.NetID = NetID;
	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.X6NetClient.RemovePlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   NetID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NetClient::RemovePlayer(int64 NetID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NetClient", "RemovePlayer");

	Params::X6NetClient_RemovePlayer Parms{};

	Parms.NetID = NetID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.X6NetClient.SetChannelReplicationPaused
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int64&                            NetClientID                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int64&                            NetEntityID                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPause                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NetClient::SetChannelReplicationPaused(const int64& NetClientID, const int64& NetEntityID, bool bPause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NetClient", "SetChannelReplicationPaused");

	Params::X6NetClient_SetChannelReplicationPaused Parms{};

	Parms.NetClientID = NetClientID;
	Parms.NetEntityID = NetEntityID;
	Parms.bPause = bPause;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.X6NetClient.SetConnectionLight
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int64&                            NetClientID                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bLight                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NetClient::SetConnectionLight(const int64& NetClientID, const bool bLight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NetClient", "SetConnectionLight");

	Params::X6NetClient_SetConnectionLight Parms{};

	Parms.NetClientID = NetClientID;
	Parms.bLight = bLight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.X6NetClient.SetConnectionPriority
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int64&                            NetClientID                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewReplicatePriority                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NetClient::SetConnectionPriority(const int64& NetClientID, int32 NewReplicatePriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NetClient", "SetConnectionPriority");

	Params::X6NetClient_SetConnectionPriority Parms{};

	Parms.NetClientID = NetClientID;
	Parms.NewReplicatePriority = NewReplicatePriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.X6NetClient.SetLocalNetID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   NetID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NetClient::SetLocalNetID(int64 NetID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NetClient", "SetLocalNetID");

	Params::X6NetClient_SetLocalNetID Parms{};

	Parms.NetID = NetID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.X6NetClient.SetMultiPlayerMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Mode                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NetClient::SetMultiPlayerMode(int32 Mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NetClient", "SetMultiPlayerMode");

	Params::X6NetClient_SetMultiPlayerMode Parms{};

	Parms.Mode = Mode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.X6NetClient.SetNetProtoId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   SendProtoId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RecvProtoId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NetClient::SetNetProtoId(int32 SendProtoId, int32 RecvProtoId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NetClient", "SetNetProtoId");

	Params::X6NetClient_SetNetProtoId Parms{};

	Parms.SendProtoId = SendProtoId;
	Parms.RecvProtoId = RecvProtoId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.X6NetClient.SetSeverTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NetClient::SetSeverTime(int64 Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NetClient", "SetSeverTime");

	Params::X6NetClient_SetSeverTime Parms{};

	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.X6NetClient.UnbindSimulatedActor
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int64&                            NetClientID                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NetClient::UnbindSimulatedActor(const int64& NetClientID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NetClient", "UnbindSimulatedActor");

	Params::X6NetClient_UnbindSimulatedActor Parms{};

	Parms.NetClientID = NetClientID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.X6NetClient.UnregisterNetGUID_Lua
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   NetID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NetClient::UnregisterNetGUID_Lua(int64 NetID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NetClient", "UnregisterNetGUID_Lua");

	Params::X6NetClient_UnregisterNetGUID_Lua Parms{};

	Parms.NetID = NetID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.X6NetClientV2.AddPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   NetID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   EntityID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NetClientV2::AddPlayer(int64 NetID, int64 EntityID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NetClientV2", "AddPlayer");

	Params::X6NetClientV2_AddPlayer Parms{};

	Parms.NetID = NetID;
	Parms.EntityID = EntityID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.X6NetClientV2.BindSimulatedActor
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int64&                            NetClientID                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int64&                            NetEntityID                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NetClientV2::BindSimulatedActor(const int64& NetClientID, const int64& NetEntityID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NetClientV2", "BindSimulatedActor");

	Params::X6NetClientV2_BindSimulatedActor Parms{};

	Parms.NetClientID = NetClientID;
	Parms.NetEntityID = NetEntityID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.X6NetClientV2.DebugConnectionLog_Lua
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bDebug                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NetClientV2::DebugConnectionLog_Lua(bool bDebug)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NetClientV2", "DebugConnectionLog_Lua");

	Params::X6NetClientV2_DebugConnectionLog_Lua Parms{};

	Parms.bDebug = bDebug;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.X6NetClientV2.DeInitConnection
// (Final, Native, Public, BlueprintCallable)

void UX6NetClientV2::DeInitConnection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NetClientV2", "DeInitConnection");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.X6NetClientV2.GetMultiPlayerMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UX6NetClientV2::GetMultiPlayerMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NetClientV2", "GetMultiPlayerMode");

	Params::X6NetClientV2_GetMultiPlayerMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.X6NetClientV2.GetSeverTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UX6NetClientV2::GetSeverTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NetClientV2", "GetSeverTime");

	Params::X6NetClientV2_GetSeverTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.X6NetClientV2.InitConnection
// (Final, Native, Public, BlueprintCallable)

void UX6NetClientV2::InitConnection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NetClientV2", "InitConnection");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.X6NetClientV2.IsMultiPlayerMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6NetClientV2::IsMultiPlayerMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NetClientV2", "IsMultiPlayerMode");

	Params::X6NetClientV2_IsMultiPlayerMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.X6NetClientV2.OnConnected
// (Final, Native, Public, BlueprintCallable)

void UX6NetClientV2::OnConnected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NetClientV2", "OnConnected");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.X6NetClientV2.OnDisconnected
// (Final, Native, Public, BlueprintCallable)

void UX6NetClientV2::OnDisconnected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NetClientV2", "OnDisconnected");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.X6NetClientV2.OnWorldBeginPlay
// (Final, Native, Public)

void UX6NetClientV2::OnWorldBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NetClientV2", "OnWorldBeginPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.X6NetClientV2.RegisterActorNetGUID_Lua
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   NetID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NetClientV2::RegisterActorNetGUID_Lua(int64 NetID, class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NetClientV2", "RegisterActorNetGUID_Lua");

	Params::X6NetClientV2_RegisterActorNetGUID_Lua Parms{};

	Parms.NetID = NetID;
	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.X6NetClientV2.RemovePlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   NetID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NetClientV2::RemovePlayer(int64 NetID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NetClientV2", "RemovePlayer");

	Params::X6NetClientV2_RemovePlayer Parms{};

	Parms.NetID = NetID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.X6NetClientV2.SetLocalNetID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   NetID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NetClientV2::SetLocalNetID(int64 NetID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NetClientV2", "SetLocalNetID");

	Params::X6NetClientV2_SetLocalNetID Parms{};

	Parms.NetID = NetID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.X6NetClientV2.SetMultiPlayerMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Mode                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NetClientV2::SetMultiPlayerMode(int32 Mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NetClientV2", "SetMultiPlayerMode");

	Params::X6NetClientV2_SetMultiPlayerMode Parms{};

	Parms.Mode = Mode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.X6NetClientV2.SetNetProtoId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   SendProtoId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RecvProtoId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NetClientV2::SetNetProtoId(int32 SendProtoId, int32 RecvProtoId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NetClientV2", "SetNetProtoId");

	Params::X6NetClientV2_SetNetProtoId Parms{};

	Parms.SendProtoId = SendProtoId;
	Parms.RecvProtoId = RecvProtoId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.X6NetClientV2.SetPlayerCustomReplicate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int64&                            playerId                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bCustomReplicate                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NetClientV2::SetPlayerCustomReplicate(const int64& playerId, const bool bCustomReplicate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NetClientV2", "SetPlayerCustomReplicate");

	Params::X6NetClientV2_SetPlayerCustomReplicate Parms{};

	Parms.playerId = playerId;
	Parms.bCustomReplicate = bCustomReplicate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.X6NetClientV2.SetPlayerForceReplicate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int64&                            playerId                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NetClientV2::SetPlayerForceReplicate(const int64& playerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NetClientV2", "SetPlayerForceReplicate");

	Params::X6NetClientV2_SetPlayerForceReplicate Parms{};

	Parms.playerId = playerId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.X6NetClientV2.SetPlayerLightweight
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int64&                            playerId                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bLightweight                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NetClientV2::SetPlayerLightweight(const int64& playerId, const bool bLightweight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NetClientV2", "SetPlayerLightweight");

	Params::X6NetClientV2_SetPlayerLightweight Parms{};

	Parms.playerId = playerId;
	Parms.bLightweight = bLightweight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.X6NetClientV2.SetSeverTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NetClientV2::SetSeverTime(int64 Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NetClientV2", "SetSeverTime");

	Params::X6NetClientV2_SetSeverTime Parms{};

	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.X6NetClientV2.UnbindSimulatedActor
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int64&                            NetClientID                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NetClientV2::UnbindSimulatedActor(const int64& NetClientID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NetClientV2", "UnbindSimulatedActor");

	Params::X6NetClientV2_UnbindSimulatedActor Parms{};

	Parms.NetClientID = NetClientID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.X6NetClientV2.UnregisterNetGUID_Lua
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   NetID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6NetClientV2::UnregisterNetGUID_Lua(int64 NetID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NetClientV2", "UnregisterNetGUID_Lua");

	Params::X6NetClientV2_UnregisterNetGUID_Lua Parms{};

	Parms.NetID = NetID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperLuaFrameworkBase.X6NetClientV2.UploadNetLog
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const bool&                             InternalEnv                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    SessionId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    LogFilePath                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool bSuccess, int32 ResponseCode, const class FString& ResponseString)>onHttpRequestCompleted                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6NetClientV2::UploadNetLog(const bool& InternalEnv, const class FString& SessionId, const class FString& LogFilePath, TDelegate<void(bool bSuccess, int32 ResponseCode, const class FString& ResponseString)> onHttpRequestCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6NetClientV2", "UploadNetLog");

	Params::X6NetClientV2_UploadNetLog Parms{};

	Parms.InternalEnv = InternalEnv;
	Parms.SessionId = std::move(SessionId);
	Parms.LogFilePath = std::move(LogFilePath);
	Parms.onHttpRequestCompleted = onHttpRequestCompleted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperLuaFrameworkBase.X6NetLogSettings.GetX6NetLogSettings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UX6NetLogSettings*          ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UX6NetLogSettings* UX6NetLogSettings::GetX6NetLogSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6NetLogSettings", "GetX6NetLogSettings");

	Params::X6NetLogSettings_GetX6NetLogSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

