#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: X6GraphRuntimeDebug

#include "Basic.hpp"

#include "X6GraphRuntimeDebug_classes.hpp"
#include "X6GraphRuntimeDebug_parameters.hpp"


namespace SDK
{

// Function X6GraphRuntimeDebug.X6GraphDebugNetSocketUtil.DisConnect
// (Final, Native, Public, BlueprintCallable)

void UX6GraphDebugNetSocketUtil::DisConnect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GraphDebugNetSocketUtil", "DisConnect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6GraphRuntimeDebug.X6GraphDebugNetSocketUtil.InitDebuggerSocketWaitForConnect
// (Final, Native, Public, BlueprintCallable)

void UX6GraphDebugNetSocketUtil::InitDebuggerSocketWaitForConnect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GraphDebugNetSocketUtil", "InitDebuggerSocketWaitForConnect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6GraphRuntimeDebug.X6GraphDebugNetSocketUtil.IsDebuggerConnected
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6GraphDebugNetSocketUtil::IsDebuggerConnected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GraphDebugNetSocketUtil", "IsDebuggerConnected");

	Params::X6GraphDebugNetSocketUtil_IsDebuggerConnected Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6GraphRuntimeDebug.X6GraphDebugNetSocketUtil.OnReciveDebuggerMsg
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   MsgType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    MsgContent                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6GraphDebugNetSocketUtil::OnReciveDebuggerMsg(int32 MsgType, const class FString& MsgContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GraphDebugNetSocketUtil", "OnReciveDebuggerMsg");

	Params::X6GraphDebugNetSocketUtil_OnReciveDebuggerMsg Parms{};

	Parms.MsgType = MsgType;
	Parms.MsgContent = std::move(MsgContent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function X6GraphRuntimeDebug.X6GraphDebugNetSocketUtil.SendMessageBytesToDebugger
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<uint8>*                          MsgData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UX6GraphDebugNetSocketUtil::SendMessageBytesToDebugger(TArray<uint8>* MsgData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GraphDebugNetSocketUtil", "SendMessageBytesToDebugger");

	Params::X6GraphDebugNetSocketUtil_SendMessageBytesToDebugger Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (MsgData != nullptr)
		*MsgData = std::move(Parms.MsgData);
}


// Function X6GraphRuntimeDebug.X6GraphDebugNetSocketUtil.SendMessageToDebugger
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    MsgData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6GraphDebugNetSocketUtil::SendMessageToDebugger(const class FString& MsgData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GraphDebugNetSocketUtil", "SendMessageToDebugger");

	Params::X6GraphDebugNetSocketUtil_SendMessageToDebugger Parms{};

	Parms.MsgData = std::move(MsgData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function X6GraphRuntimeDebug.X6GraphDebugNetSocketUtil.UnInitDebuggerSocket
// (Final, Native, Public, BlueprintCallable)

void UX6GraphDebugNetSocketUtil::UnInitDebuggerSocket()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6GraphDebugNetSocketUtil", "UnInitDebuggerSocket");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function X6GraphRuntimeDebug.X6GraphRuntimeDebugBPLibrary.Conv_BytesToString
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<uint8>&                    Bytes                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UX6GraphRuntimeDebugBPLibrary::Conv_BytesToString(const TArray<uint8>& Bytes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6GraphRuntimeDebugBPLibrary", "Conv_BytesToString");

	Params::X6GraphRuntimeDebugBPLibrary_Conv_BytesToString Parms{};

	Parms.Bytes = std::move(Bytes);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6GraphRuntimeDebug.X6GraphRuntimeDebugBPLibrary.Conv_StringToBytes
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InStr                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<uint8> UX6GraphRuntimeDebugBPLibrary::Conv_StringToBytes(const class FString& InStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6GraphRuntimeDebugBPLibrary", "Conv_StringToBytes");

	Params::X6GraphRuntimeDebugBPLibrary_Conv_StringToBytes Parms{};

	Parms.InStr = std::move(InStr);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6GraphRuntimeDebug.X6GraphRuntimeDebugBPLibrary.ConvInt_HToN
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<uint8> UX6GraphRuntimeDebugBPLibrary::ConvInt_HToN(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6GraphRuntimeDebugBPLibrary", "ConvInt_HToN");

	Params::X6GraphRuntimeDebugBPLibrary_ConvInt_HToN Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6GraphRuntimeDebug.X6GraphRuntimeDebugBPLibrary.ConvInt_NToH
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<uint8>*                          Bytes                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UX6GraphRuntimeDebugBPLibrary::ConvInt_NToH(TArray<uint8>* Bytes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6GraphRuntimeDebugBPLibrary", "ConvInt_NToH");

	Params::X6GraphRuntimeDebugBPLibrary_ConvInt_NToH Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Bytes != nullptr)
		*Bytes = std::move(Parms.Bytes);

	return Parms.ReturnValue;
}


// Function X6GraphRuntimeDebug.X6GraphRuntimeDebugBPLibrary.X6GraphRuntimeDebugSampleFunction
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   Param                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UX6GraphRuntimeDebugBPLibrary::X6GraphRuntimeDebugSampleFunction(float Param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6GraphRuntimeDebugBPLibrary", "X6GraphRuntimeDebugSampleFunction");

	Params::X6GraphRuntimeDebugBPLibrary_X6GraphRuntimeDebugSampleFunction Parms{};

	Parms.Param = Param;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

