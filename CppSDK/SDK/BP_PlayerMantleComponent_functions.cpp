#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerMantleComponent

#include "Basic.hpp"

#include "BP_PlayerMantleComponent_classes.hpp"
#include "BP_PlayerMantleComponent_parameters.hpp"


namespace SDK
{

// Function BP_PlayerMantleComponent.BP_PlayerMantleComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerMantleComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMantleComponent_C", "ReceiveTick");

	Params::BP_PlayerMantleComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerMantleComponent.BP_PlayerMantleComponent_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerMantleComponent_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMantleComponent_C", "ReceiveEndPlay");

	Params::BP_PlayerMantleComponent_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerMantleComponent.BP_PlayerMantleComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_PlayerMantleComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMantleComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerMantleComponent.BP_PlayerMantleComponent_C.ExecuteUbergraph_BP_PlayerMantleComponent
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerMantleComponent_C::ExecuteUbergraph_BP_PlayerMantleComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMantleComponent_C", "ExecuteUbergraph_BP_PlayerMantleComponent");

	Params::BP_PlayerMantleComponent_C_ExecuteUbergraph_BP_PlayerMantleComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerMantleComponent.BP_PlayerMantleComponent_C.BP_TryToStartMantle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerMantleComponent_C::BP_TryToStartMantle(bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMantleComponent_C", "BP_TryToStartMantle");

	Params::BP_PlayerMantleComponent_C_BP_TryToStartMantle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BP_PlayerMantleComponent.BP_PlayerMantleComponent_C.BP_Private_PostStart
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_PlayerMantleComponent_C::BP_Private_PostStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMantleComponent_C", "BP_Private_PostStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerMantleComponent.BP_PlayerMantleComponent_C.BP_Private_MantleUpdate
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerMantleComponent_C::BP_Private_MantleUpdate(double DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMantleComponent_C", "BP_Private_MantleUpdate");

	Params::BP_PlayerMantleComponent_C_BP_Private_MantleUpdate Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerMantleComponent.BP_PlayerMantleComponent_C.BP_Private_MantleStart
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  MantleHeigh                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FTransform&                TargetTransform                                        (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  HitComponet                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool*                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerMantleComponent_C::BP_Private_MantleStart(double MantleHeigh, const struct FTransform& TargetTransform, class USceneComponent* HitComponet, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMantleComponent_C", "BP_Private_MantleStart");

	Params::BP_PlayerMantleComponent_C_BP_Private_MantleStart Parms{};

	Parms.MantleHeigh = MantleHeigh;
	Parms.TargetTransform = std::move(TargetTransform);
	Parms.HitComponet = HitComponet;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BP_PlayerMantleComponent.BP_PlayerMantleComponent_C.BP_Private_MantlePreCheck
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_PlayerMantleComponent_C::BP_Private_MantlePreCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMantleComponent_C", "BP_Private_MantlePreCheck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerMantleComponent.BP_PlayerMantleComponent_C.BP_Private_MantlePostCheck
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReceivedInput                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerMantleComponent_C::BP_Private_MantlePostCheck(bool ReceivedInput, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMantleComponent_C", "BP_Private_MantlePostCheck");

	Params::BP_PlayerMantleComponent_C_BP_Private_MantlePostCheck Parms{};

	Parms.ReceivedInput = ReceivedInput;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BP_PlayerMantleComponent.BP_PlayerMantleComponent_C.BP_Private_MantleMainCheckInFalling
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  ZOffset                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerMantleComponent_C::BP_Private_MantleMainCheckInFalling(double ZOffset, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMantleComponent_C", "BP_Private_MantleMainCheckInFalling");

	Params::BP_PlayerMantleComponent_C_BP_Private_MantleMainCheckInFalling Parms{};

	Parms.ZOffset = ZOffset;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BP_PlayerMantleComponent.BP_PlayerMantleComponent_C.BP_Private_MantleMainCheck
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  ZOffset                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerMantleComponent_C::BP_Private_MantleMainCheck(double ZOffset, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMantleComponent_C", "BP_Private_MantleMainCheck");

	Params::BP_PlayerMantleComponent_C_BP_Private_MantleMainCheck Parms{};

	Parms.ZOffset = ZOffset;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BP_PlayerMantleComponent.BP_PlayerMantleComponent_C.BP_Private_MantleAllCheck
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  ZOffset                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Vault                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerMantleComponent_C::BP_Private_MantleAllCheck(double ZOffset, bool* Vault)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMantleComponent_C", "BP_Private_MantleAllCheck");

	Params::BP_PlayerMantleComponent_C_BP_Private_MantleAllCheck Parms{};

	Parms.ZOffset = ZOffset;

	UObject::ProcessEvent(Func, &Parms);

	if (Vault != nullptr)
		*Vault = Parms.Vault;
}


// Function BP_PlayerMantleComponent.BP_PlayerMantleComponent_C.BP_Private_ForceEndCheck
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerMantleComponent_C::BP_Private_ForceEndCheck(bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMantleComponent_C", "BP_Private_ForceEndCheck");

	Params::BP_PlayerMantleComponent_C_BP_Private_ForceEndCheck Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BP_PlayerMantleComponent.BP_PlayerMantleComponent_C.BP_IsMantleFeatureActivated
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerMantleComponent_C::BP_IsMantleFeatureActivated(bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMantleComponent_C", "BP_IsMantleFeatureActivated");

	Params::BP_PlayerMantleComponent_C_BP_IsMantleFeatureActivated Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BP_PlayerMantleComponent.BP_PlayerMantleComponent_C.BP_GetCurrentMantleType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EMantleType*                            MantleType                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerMantleComponent_C::BP_GetCurrentMantleType(EMantleType* MantleType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMantleComponent_C", "BP_GetCurrentMantleType");

	Params::BP_PlayerMantleComponent_C_BP_GetCurrentMantleType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MantleType != nullptr)
		*MantleType = Parms.MantleType;
}


// Function BP_PlayerMantleComponent.BP_PlayerMantleComponent_C.BP_CanDoMantleInFalling
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   CapsuleBaseLocation                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   CurrentPlayerInputVector                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   CurActorLocation                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  MinLedgeHeight                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  MaxLedgeHeight                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerMantleComponent_C::BP_CanDoMantleInFalling(const struct FVector& CapsuleBaseLocation, const struct FVector& CurrentPlayerInputVector, const struct FVector& CurActorLocation, double MinLedgeHeight, double MaxLedgeHeight, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMantleComponent_C", "BP_CanDoMantleInFalling");

	Params::BP_PlayerMantleComponent_C_BP_CanDoMantleInFalling Parms{};

	Parms.CapsuleBaseLocation = std::move(CapsuleBaseLocation);
	Parms.CurrentPlayerInputVector = std::move(CurrentPlayerInputVector);
	Parms.CurActorLocation = std::move(CurActorLocation);
	Parms.MinLedgeHeight = MinLedgeHeight;
	Parms.MaxLedgeHeight = MaxLedgeHeight;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BP_PlayerMantleComponent.BP_PlayerMantleComponent_C.BP_AnimNotify_OnPlayerMantleAnimationFinished
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerMantleComponent_C::BP_AnimNotify_OnPlayerMantleAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMantleComponent_C", "BP_AnimNotify_OnPlayerMantleAnimationFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerMantleComponent.BP_PlayerMantleComponent_C.BP_ActivateMantleFeature
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsActivate                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerMantleComponent_C::BP_ActivateMantleFeature(bool IsActivate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMantleComponent_C", "BP_ActivateMantleFeature");

	Params::BP_PlayerMantleComponent_C_BP_ActivateMantleFeature Parms{};

	Parms.IsActivate = IsActivate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerMantleComponent.BP_PlayerMantleComponent_C.GetModuleName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UBP_PlayerMantleComponent_C::GetModuleName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMantleComponent_C", "GetModuleName");

	Params::BP_PlayerMantleComponent_C_GetModuleName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

