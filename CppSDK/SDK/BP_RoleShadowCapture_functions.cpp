#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RoleShadowCapture

#include "Basic.hpp"

#include "BP_RoleShadowCapture_classes.hpp"
#include "BP_RoleShadowCapture_parameters.hpp"


namespace SDK
{

// Function BP_RoleShadowCapture.BP_RoleShadowCapture_C.BP_GetFloorLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Height                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Lerp                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         ResultValue                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator*                        RotationValue                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_RoleShadowCapture_C::BP_GetFloorLocation(double Height, bool Lerp, struct FVector* ResultValue, struct FRotator* RotationValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RoleShadowCapture_C", "BP_GetFloorLocation");

	Params::BP_RoleShadowCapture_C_BP_GetFloorLocation Parms{};

	Parms.Height = Height;
	Parms.Lerp = Lerp;

	UObject::ProcessEvent(Func, &Parms);

	if (ResultValue != nullptr)
		*ResultValue = std::move(Parms.ResultValue);

	if (RotationValue != nullptr)
		*RotationValue = std::move(Parms.RotationValue);
}


// Function BP_RoleShadowCapture.BP_RoleShadowCapture_C.BP_UpdateFloorRotation
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_RoleShadowCapture_C::BP_UpdateFloorRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RoleShadowCapture_C", "BP_UpdateFloorRotation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RoleShadowCapture.BP_RoleShadowCapture_C.CaculateShadowOpaccity
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  CurrentOpacity                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 NewOpacity                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RoleShadowCapture_C::CaculateShadowOpaccity(double CurrentOpacity, double* NewOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RoleShadowCapture_C", "CaculateShadowOpaccity");

	Params::BP_RoleShadowCapture_C_CaculateShadowOpaccity Parms{};

	Parms.CurrentOpacity = CurrentOpacity;

	UObject::ProcessEvent(Func, &Parms);

	if (NewOpacity != nullptr)
		*NewOpacity = Parms.NewOpacity;
}


// Function BP_RoleShadowCapture.BP_RoleShadowCapture_C.CheckFloor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Height                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RoleShadowCapture_C::CheckFloor(double Height)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RoleShadowCapture_C", "CheckFloor");

	Params::BP_RoleShadowCapture_C_CheckFloor Parms{};

	Parms.Height = Height;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RoleShadowCapture.BP_RoleShadowCapture_C.ExecuteUbergraph_BP_RoleShadowCapture
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RoleShadowCapture_C::ExecuteUbergraph_BP_RoleShadowCapture(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RoleShadowCapture_C", "ExecuteUbergraph_BP_RoleShadowCapture");

	Params::BP_RoleShadowCapture_C_ExecuteUbergraph_BP_RoleShadowCapture Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RoleShadowCapture.BP_RoleShadowCapture_C.GetHoldHandOtherActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor**                          OtherActor                                             (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_RoleShadowCapture_C::GetHoldHandOtherActor(class AActor* Actor, class AActor** OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RoleShadowCapture_C", "GetHoldHandOtherActor");

	Params::BP_RoleShadowCapture_C_GetHoldHandOtherActor Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (OtherActor != nullptr)
		*OtherActor = Parms.OtherActor;
}


// Function BP_RoleShadowCapture.BP_RoleShadowCapture_C.IsInLevelSequence
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RoleShadowCapture_C::IsInLevelSequence(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RoleShadowCapture_C", "IsInLevelSequence");

	Params::BP_RoleShadowCapture_C_IsInLevelSequence Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_RoleShadowCapture.BP_RoleShadowCapture_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_RoleShadowCapture_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RoleShadowCapture_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RoleShadowCapture.BP_RoleShadowCapture_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RoleShadowCapture_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RoleShadowCapture_C", "ReceiveTick");

	Params::BP_RoleShadowCapture_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RoleShadowCapture.BP_RoleShadowCapture_C.SetCastShadow
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InCastShadowValue                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RoleShadowCapture_C::SetCastShadow(bool InCastShadowValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RoleShadowCapture_C", "SetCastShadow");

	Params::BP_RoleShadowCapture_C_SetCastShadow Parms{};

	Parms.InCastShadowValue = InCastShadowValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RoleShadowCapture.BP_RoleShadowCapture_C.SetSetScaleParam
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InCastShadowValue                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RoleShadowCapture_C::SetSetScaleParam(bool InCastShadowValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RoleShadowCapture_C", "SetSetScaleParam");

	Params::BP_RoleShadowCapture_C_SetSetScaleParam Parms{};

	Parms.InCastShadowValue = InCastShadowValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RoleShadowCapture.BP_RoleShadowCapture_C.SoftShadowDecal
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_RoleShadowCapture_C::SoftShadowDecal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RoleShadowCapture_C", "SoftShadowDecal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RoleShadowCapture.BP_RoleShadowCapture_C.TraceGroundDistance
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double*                                 Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPhysicalMaterial**               PhysMat                                                (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_RoleShadowCapture_C::TraceGroundDistance(double* Distance, struct FVector* Location, class UPhysicalMaterial** PhysMat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RoleShadowCapture_C", "TraceGroundDistance");

	Params::BP_RoleShadowCapture_C_TraceGroundDistance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Distance != nullptr)
		*Distance = Parms.Distance;

	if (Location != nullptr)
		*Location = std::move(Parms.Location);

	if (PhysMat != nullptr)
		*PhysMat = Parms.PhysMat;
}


// Function BP_RoleShadowCapture.BP_RoleShadowCapture_C.UpdateCapture
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_RoleShadowCapture_C::UpdateCapture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RoleShadowCapture_C", "UpdateCapture");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RoleShadowCapture.BP_RoleShadowCapture_C.GetModuleName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString ABP_RoleShadowCapture_C::GetModuleName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RoleShadowCapture_C", "GetModuleName");

	Params::BP_RoleShadowCapture_C_GetModuleName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

