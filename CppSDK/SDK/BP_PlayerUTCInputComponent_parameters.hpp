#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerUTCInputComponent

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "EUTCJoystickMode_structs.hpp"
#include "UTCControlTypeEnum_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UTCConfigStruct_structs.hpp"
#include "X6Game_structs.hpp"
#include "F_JoystickCustomConfig_structs.hpp"
#include "EDeviceScreenSizeType_structs.hpp"
#include "F_UTCRatioConfig_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.UTCTouch Input Manager
// 0x01A8 (0x01A8 - 0x0000)
struct BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager final
{
public:
	EX6InputTouchEvent                            X6InputTouchEvent;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETouchIndex                                   FingerIndex;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUTCComponent_C*                        CallFunc_Array_Get_Item;                           // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Finger_Slots_Available_ReturnValue;    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Finger_Location_Exists_Result;         // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class UUTCComponent_C*>                CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0100(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UUTCComponent_C*                        CallFunc_Array_Get_Item_1;                         // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUTCComponent_C*                        CallFunc_Array_Get_Item_2;                         // 0x0118(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Finger_Location_Exists_Result_1;       // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Finger_Location_Exists_Result_2;       // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_122[0x6];                                      // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUTCComponent_C*                        CallFunc_Array_Get_Item_3;                         // 0x0128(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUTCComponent_C*                        CallFunc_Array_Get_Item_4;                         // 0x0130(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UUTCComponent_C*>                CallFunc_Filter_By_Active_Active_Components;       // 0x0138(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UUTCComponent_C*>                CallFunc_Filter_By_Bounds_In_Bounds;               // 0x0148(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UUTCComponent_C*>                CallFunc_Filter_By_Bounds_W_out_Bounds;            // 0x0158(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UUTCComponent_C*>                CallFunc_Filter_By_Bounds_Both;                    // 0x0168(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Is_Finger_Location_Exists_Result_3;       // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUTCComponent_C*>                CallFunc_Sort_By_Priority_W__Higher_Priority;      // 0x0180(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19A[0x2];                                      // 0x019A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager) == 0x000008, "Wrong alignment on BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager");
static_assert(sizeof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager) == 0x0001A8, "Wrong size on BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, X6InputTouchEvent) == 0x000000, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::X6InputTouchEvent' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, FingerIndex) == 0x000001, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::FingerIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, Location) == 0x000008, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::Location' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, CallFunc_BreakVector_X) == 0x000028, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, CallFunc_BreakVector_Y) == 0x000030, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, CallFunc_BreakVector_Z) == 0x000038, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, CallFunc_MakeVector_ReturnValue) == 0x000048, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000060, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, K2Node_SwitchEnum_CmpSuccess) == 0x000070, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, Temp_int_Loop_Counter_Variable_1) == 0x000074, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, Temp_int_Loop_Counter_Variable_2) == 0x000078, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, CallFunc_Add_IntInt_ReturnValue_1) == 0x00007C, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, CallFunc_Add_IntInt_ReturnValue_2) == 0x000080, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, Temp_int_Array_Index_Variable) == 0x000084, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, Temp_int_Array_Index_Variable_1) == 0x00008C, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, Temp_int_Array_Index_Variable_2) == 0x000090, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, CallFunc_Array_Get_Item) == 0x000098, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, CallFunc_Is_Finger_Slots_Available_ReturnValue) == 0x0000A0, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::CallFunc_Is_Finger_Slots_Available_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, CallFunc_Is_Finger_Location_Exists_Result) == 0x0000A1, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::CallFunc_Is_Finger_Location_Exists_Result' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, Temp_int_Array_Index_Variable_3) == 0x0000A4, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, Temp_int_Loop_Counter_Variable_3) == 0x0000A8, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, CallFunc_Less_IntInt_ReturnValue) == 0x0000AC, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000B0, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, CallFunc_GetDisplayName_ReturnValue) == 0x0000B8, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, CallFunc_Concat_StrStr_ReturnValue) == 0x0000C8, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000D8, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, CallFunc_GetOwner_ReturnValue) == 0x0000E8, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000F0, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000100, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, CallFunc_Array_Get_Item_1) == 0x000110, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, CallFunc_Array_Get_Item_2) == 0x000118, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, CallFunc_Is_Finger_Location_Exists_Result_1) == 0x000120, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::CallFunc_Is_Finger_Location_Exists_Result_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, CallFunc_Is_Finger_Location_Exists_Result_2) == 0x000121, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::CallFunc_Is_Finger_Location_Exists_Result_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, CallFunc_Array_Get_Item_3) == 0x000128, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, CallFunc_Array_Get_Item_4) == 0x000130, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, CallFunc_Filter_By_Active_Active_Components) == 0x000138, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::CallFunc_Filter_By_Active_Active_Components' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, CallFunc_Filter_By_Bounds_In_Bounds) == 0x000148, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::CallFunc_Filter_By_Bounds_In_Bounds' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, CallFunc_Filter_By_Bounds_W_out_Bounds) == 0x000158, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::CallFunc_Filter_By_Bounds_W_out_Bounds' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, CallFunc_Filter_By_Bounds_Both) == 0x000168, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::CallFunc_Filter_By_Bounds_Both' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, CallFunc_Is_Finger_Location_Exists_Result_3) == 0x000178, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::CallFunc_Is_Finger_Location_Exists_Result_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, CallFunc_Sort_By_Priority_W__Higher_Priority) == 0x000180, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::CallFunc_Sort_By_Priority_W__Higher_Priority' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, CallFunc_Array_Length_ReturnValue_1) == 0x000190, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, CallFunc_Array_Length_ReturnValue_2) == 0x000194, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, CallFunc_Less_IntInt_ReturnValue_1) == 0x000198, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, CallFunc_Less_IntInt_ReturnValue_2) == 0x000199, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, CallFunc_Array_Length_ReturnValue_3) == 0x00019C, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, CallFunc_Array_Length_ReturnValue_4) == 0x0001A0, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, CallFunc_Less_IntInt_ReturnValue_3) == 0x0001A4, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager, CallFunc_Greater_IntInt_ReturnValue) == 0x0001A5, "Member 'BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.UpdateSwipeToMoveComponent
// 0x0068 (0x0068 - 0x0000)
struct BP_PlayerUTCInputComponent_C_UpdateSwipeToMoveComponent final
{
public:
	class UUTCSwipeToMoveComponent_C*             SwipeToMoveComponent;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EUTCControlTypeEnum                           ControlType;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              InteractionOrigin;                                 // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              InteractionSize;                                   // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetVector2DInPercent_OutValue;            // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetVector2DInPercent_OutValue_1;          // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_AdjustBoundOrigin_OutOrigin;              // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerUTCInputComponent_C_UpdateSwipeToMoveComponent) == 0x000008, "Wrong alignment on BP_PlayerUTCInputComponent_C_UpdateSwipeToMoveComponent");
static_assert(sizeof(BP_PlayerUTCInputComponent_C_UpdateSwipeToMoveComponent) == 0x000068, "Wrong size on BP_PlayerUTCInputComponent_C_UpdateSwipeToMoveComponent");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateSwipeToMoveComponent, SwipeToMoveComponent) == 0x000000, "Member 'BP_PlayerUTCInputComponent_C_UpdateSwipeToMoveComponent::SwipeToMoveComponent' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateSwipeToMoveComponent, ControlType) == 0x000008, "Member 'BP_PlayerUTCInputComponent_C_UpdateSwipeToMoveComponent::ControlType' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateSwipeToMoveComponent, InteractionOrigin) == 0x000010, "Member 'BP_PlayerUTCInputComponent_C_UpdateSwipeToMoveComponent::InteractionOrigin' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateSwipeToMoveComponent, InteractionSize) == 0x000020, "Member 'BP_PlayerUTCInputComponent_C_UpdateSwipeToMoveComponent::InteractionSize' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateSwipeToMoveComponent, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_PlayerUTCInputComponent_C_UpdateSwipeToMoveComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateSwipeToMoveComponent, CallFunc_GetVector2DInPercent_OutValue) == 0x000038, "Member 'BP_PlayerUTCInputComponent_C_UpdateSwipeToMoveComponent::CallFunc_GetVector2DInPercent_OutValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateSwipeToMoveComponent, CallFunc_GetVector2DInPercent_OutValue_1) == 0x000048, "Member 'BP_PlayerUTCInputComponent_C_UpdateSwipeToMoveComponent::CallFunc_GetVector2DInPercent_OutValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateSwipeToMoveComponent, CallFunc_AdjustBoundOrigin_OutOrigin) == 0x000058, "Member 'BP_PlayerUTCInputComponent_C_UpdateSwipeToMoveComponent::CallFunc_AdjustBoundOrigin_OutOrigin' has a wrong offset!");

// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.UpdateJoystickComponent
// 0x0180 (0x0180 - 0x0000)
struct BP_PlayerUTCInputComponent_C_UpdateJoystickComponent final
{
public:
	class UUTCJoystickComponent_C*                joystickComponent;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EUTCControlTypeEnum                           ControlType;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CenterPos;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              VisualSize;                                        // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ThumbSize;                                         // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              InteractionOrigin;                                 // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              InteractionSize;                                   // 0x0050(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LockPos;                                           // 0x0060(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseFloat;                                          // 0x0061(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              EdgeGapSize;                                       // 0x0068(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PosOffset;                                         // 0x0078(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Scale;                                             // 0x0088(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Conv_DoubleToVector2D_ReturnValue;        // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_DoubleToVector2D_ReturnValue_1;      // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetVector2dInAbsolute_OutValue;           // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetVector2DInPercent_OutValue;            // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetVector2DInPercent_OutValue_1;          // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetVector2dInAbsolute_OutValue_1;         // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_AdjustBoundOrigin_OutOrigin;              // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetVector2dInAbsolute_OutValue_2;         // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue_1;  // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateWidgetSize_Is_Initialized;          // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_AdjustWidgetInitPos_OutVector2D;          // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerUTCInputComponent_C_UpdateJoystickComponent) == 0x000008, "Wrong alignment on BP_PlayerUTCInputComponent_C_UpdateJoystickComponent");
static_assert(sizeof(BP_PlayerUTCInputComponent_C_UpdateJoystickComponent) == 0x000180, "Wrong size on BP_PlayerUTCInputComponent_C_UpdateJoystickComponent");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateJoystickComponent, joystickComponent) == 0x000000, "Member 'BP_PlayerUTCInputComponent_C_UpdateJoystickComponent::joystickComponent' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateJoystickComponent, ControlType) == 0x000008, "Member 'BP_PlayerUTCInputComponent_C_UpdateJoystickComponent::ControlType' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateJoystickComponent, CenterPos) == 0x000010, "Member 'BP_PlayerUTCInputComponent_C_UpdateJoystickComponent::CenterPos' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateJoystickComponent, VisualSize) == 0x000020, "Member 'BP_PlayerUTCInputComponent_C_UpdateJoystickComponent::VisualSize' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateJoystickComponent, ThumbSize) == 0x000030, "Member 'BP_PlayerUTCInputComponent_C_UpdateJoystickComponent::ThumbSize' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateJoystickComponent, InteractionOrigin) == 0x000040, "Member 'BP_PlayerUTCInputComponent_C_UpdateJoystickComponent::InteractionOrigin' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateJoystickComponent, InteractionSize) == 0x000050, "Member 'BP_PlayerUTCInputComponent_C_UpdateJoystickComponent::InteractionSize' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateJoystickComponent, LockPos) == 0x000060, "Member 'BP_PlayerUTCInputComponent_C_UpdateJoystickComponent::LockPos' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateJoystickComponent, UseFloat) == 0x000061, "Member 'BP_PlayerUTCInputComponent_C_UpdateJoystickComponent::UseFloat' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateJoystickComponent, EdgeGapSize) == 0x000068, "Member 'BP_PlayerUTCInputComponent_C_UpdateJoystickComponent::EdgeGapSize' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateJoystickComponent, PosOffset) == 0x000078, "Member 'BP_PlayerUTCInputComponent_C_UpdateJoystickComponent::PosOffset' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateJoystickComponent, Scale) == 0x000088, "Member 'BP_PlayerUTCInputComponent_C_UpdateJoystickComponent::Scale' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateJoystickComponent, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'BP_PlayerUTCInputComponent_C_UpdateJoystickComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateJoystickComponent, CallFunc_Conv_DoubleToVector2D_ReturnValue) == 0x000098, "Member 'BP_PlayerUTCInputComponent_C_UpdateJoystickComponent::CallFunc_Conv_DoubleToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateJoystickComponent, CallFunc_Conv_DoubleToVector2D_ReturnValue_1) == 0x0000A8, "Member 'BP_PlayerUTCInputComponent_C_UpdateJoystickComponent::CallFunc_Conv_DoubleToVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateJoystickComponent, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x0000B8, "Member 'BP_PlayerUTCInputComponent_C_UpdateJoystickComponent::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateJoystickComponent, CallFunc_GetVector2dInAbsolute_OutValue) == 0x0000C8, "Member 'BP_PlayerUTCInputComponent_C_UpdateJoystickComponent::CallFunc_GetVector2dInAbsolute_OutValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateJoystickComponent, CallFunc_GetVector2DInPercent_OutValue) == 0x0000D8, "Member 'BP_PlayerUTCInputComponent_C_UpdateJoystickComponent::CallFunc_GetVector2DInPercent_OutValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateJoystickComponent, CallFunc_GetVector2DInPercent_OutValue_1) == 0x0000E8, "Member 'BP_PlayerUTCInputComponent_C_UpdateJoystickComponent::CallFunc_GetVector2DInPercent_OutValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateJoystickComponent, CallFunc_GetVector2dInAbsolute_OutValue_1) == 0x0000F8, "Member 'BP_PlayerUTCInputComponent_C_UpdateJoystickComponent::CallFunc_GetVector2dInAbsolute_OutValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateJoystickComponent, CallFunc_AdjustBoundOrigin_OutOrigin) == 0x000108, "Member 'BP_PlayerUTCInputComponent_C_UpdateJoystickComponent::CallFunc_AdjustBoundOrigin_OutOrigin' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateJoystickComponent, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x000118, "Member 'BP_PlayerUTCInputComponent_C_UpdateJoystickComponent::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateJoystickComponent, CallFunc_GetVector2dInAbsolute_OutValue_2) == 0x000128, "Member 'BP_PlayerUTCInputComponent_C_UpdateJoystickComponent::CallFunc_GetVector2dInAbsolute_OutValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateJoystickComponent, CallFunc_Multiply_Vector2DVector2D_ReturnValue_1) == 0x000138, "Member 'BP_PlayerUTCInputComponent_C_UpdateJoystickComponent::CallFunc_Multiply_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateJoystickComponent, CallFunc_UpdateWidgetSize_Is_Initialized) == 0x000148, "Member 'BP_PlayerUTCInputComponent_C_UpdateJoystickComponent::CallFunc_UpdateWidgetSize_Is_Initialized' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateJoystickComponent, CallFunc_AdjustWidgetInitPos_OutVector2D) == 0x000150, "Member 'BP_PlayerUTCInputComponent_C_UpdateJoystickComponent::CallFunc_AdjustWidgetInitPos_OutVector2D' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateJoystickComponent, CallFunc_BreakVector2D_X) == 0x000160, "Member 'BP_PlayerUTCInputComponent_C_UpdateJoystickComponent::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateJoystickComponent, CallFunc_BreakVector2D_Y) == 0x000168, "Member 'BP_PlayerUTCInputComponent_C_UpdateJoystickComponent::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateJoystickComponent, CallFunc_FMax_ReturnValue) == 0x000170, "Member 'BP_PlayerUTCInputComponent_C_UpdateJoystickComponent::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateJoystickComponent, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000178, "Member 'BP_PlayerUTCInputComponent_C_UpdateJoystickComponent::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.UpdateComponentByControlType
// 0x00E0 (0x00E0 - 0x0000)
struct BP_PlayerUTCInputComponent_C_UpdateComponentByControlType final
{
public:
	EUTCControlTypeEnum                           ControlType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	EUTCJoystickMode                              JoystickMode_0;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUTCComponent_C*                        CallFunc_GetComponentByControlType_OutComponent;   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetComponentByControlType_IsValid;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUTCSwipeToMoveComponent_C*             K2Node_DynamicCast_AsUTCSwipe_to_Move_Component;   // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUTCJoystickComponent_C*                K2Node_DynamicCast_AsUTCJoystick_Component;        // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetJoystickConfig_CenterPos;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetJoystickConfig_VisualSize;             // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetJoystickConfig_ThumbSize;              // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetJoystickConfig_InteractionOrigin;      // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetJoystickConfig_InteractionSize;        // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetJoystickConfig_LockPos;                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetJoystickConfig_UseFloat;               // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetJoystickConfig_EdgeGapSize;            // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BP_GetJoystickOffset_offset;              // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BP_GetJoystickOffset_scale;               // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSwipeToMoveConfig_InteractionOrigin;   // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSwipeToMoveConfig_InteractionSize;     // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerUTCInputComponent_C_UpdateComponentByControlType) == 0x000008, "Wrong alignment on BP_PlayerUTCInputComponent_C_UpdateComponentByControlType");
static_assert(sizeof(BP_PlayerUTCInputComponent_C_UpdateComponentByControlType) == 0x0000E0, "Wrong size on BP_PlayerUTCInputComponent_C_UpdateComponentByControlType");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateComponentByControlType, ControlType) == 0x000000, "Member 'BP_PlayerUTCInputComponent_C_UpdateComponentByControlType::ControlType' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateComponentByControlType, JoystickMode_0) == 0x000004, "Member 'BP_PlayerUTCInputComponent_C_UpdateComponentByControlType::JoystickMode_0' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateComponentByControlType, CallFunc_GetComponentByControlType_OutComponent) == 0x000008, "Member 'BP_PlayerUTCInputComponent_C_UpdateComponentByControlType::CallFunc_GetComponentByControlType_OutComponent' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateComponentByControlType, CallFunc_GetComponentByControlType_IsValid) == 0x000010, "Member 'BP_PlayerUTCInputComponent_C_UpdateComponentByControlType::CallFunc_GetComponentByControlType_IsValid' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateComponentByControlType, K2Node_DynamicCast_AsUTCSwipe_to_Move_Component) == 0x000018, "Member 'BP_PlayerUTCInputComponent_C_UpdateComponentByControlType::K2Node_DynamicCast_AsUTCSwipe_to_Move_Component' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateComponentByControlType, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_PlayerUTCInputComponent_C_UpdateComponentByControlType::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateComponentByControlType, K2Node_DynamicCast_AsUTCJoystick_Component) == 0x000028, "Member 'BP_PlayerUTCInputComponent_C_UpdateComponentByControlType::K2Node_DynamicCast_AsUTCJoystick_Component' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateComponentByControlType, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_PlayerUTCInputComponent_C_UpdateComponentByControlType::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateComponentByControlType, CallFunc_GetJoystickConfig_CenterPos) == 0x000038, "Member 'BP_PlayerUTCInputComponent_C_UpdateComponentByControlType::CallFunc_GetJoystickConfig_CenterPos' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateComponentByControlType, CallFunc_GetJoystickConfig_VisualSize) == 0x000048, "Member 'BP_PlayerUTCInputComponent_C_UpdateComponentByControlType::CallFunc_GetJoystickConfig_VisualSize' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateComponentByControlType, CallFunc_GetJoystickConfig_ThumbSize) == 0x000058, "Member 'BP_PlayerUTCInputComponent_C_UpdateComponentByControlType::CallFunc_GetJoystickConfig_ThumbSize' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateComponentByControlType, CallFunc_GetJoystickConfig_InteractionOrigin) == 0x000068, "Member 'BP_PlayerUTCInputComponent_C_UpdateComponentByControlType::CallFunc_GetJoystickConfig_InteractionOrigin' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateComponentByControlType, CallFunc_GetJoystickConfig_InteractionSize) == 0x000078, "Member 'BP_PlayerUTCInputComponent_C_UpdateComponentByControlType::CallFunc_GetJoystickConfig_InteractionSize' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateComponentByControlType, CallFunc_GetJoystickConfig_LockPos) == 0x000088, "Member 'BP_PlayerUTCInputComponent_C_UpdateComponentByControlType::CallFunc_GetJoystickConfig_LockPos' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateComponentByControlType, CallFunc_GetJoystickConfig_UseFloat) == 0x000089, "Member 'BP_PlayerUTCInputComponent_C_UpdateComponentByControlType::CallFunc_GetJoystickConfig_UseFloat' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateComponentByControlType, CallFunc_GetJoystickConfig_EdgeGapSize) == 0x000090, "Member 'BP_PlayerUTCInputComponent_C_UpdateComponentByControlType::CallFunc_GetJoystickConfig_EdgeGapSize' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateComponentByControlType, CallFunc_BP_GetJoystickOffset_offset) == 0x0000A0, "Member 'BP_PlayerUTCInputComponent_C_UpdateComponentByControlType::CallFunc_BP_GetJoystickOffset_offset' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateComponentByControlType, CallFunc_BP_GetJoystickOffset_scale) == 0x0000B0, "Member 'BP_PlayerUTCInputComponent_C_UpdateComponentByControlType::CallFunc_BP_GetJoystickOffset_scale' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateComponentByControlType, CallFunc_GetSwipeToMoveConfig_InteractionOrigin) == 0x0000B8, "Member 'BP_PlayerUTCInputComponent_C_UpdateComponentByControlType::CallFunc_GetSwipeToMoveConfig_InteractionOrigin' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateComponentByControlType, CallFunc_GetSwipeToMoveConfig_InteractionSize) == 0x0000C8, "Member 'BP_PlayerUTCInputComponent_C_UpdateComponentByControlType::CallFunc_GetSwipeToMoveConfig_InteractionSize' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_UpdateComponentByControlType, K2Node_SwitchEnum_CmpSuccess) == 0x0000D8, "Member 'BP_PlayerUTCInputComponent_C_UpdateComponentByControlType::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.SetTouchEnable
// 0x0038 (0x0038 - 0x0000)
struct BP_PlayerUTCInputComponent_C_SetTouchEnable final
{
public:
	EUTCControlTypeEnum                           ControlType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnable;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUTCComponent_C*                        CallFunc_GetComponentByControlType_OutComponent;   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetComponentByControlType_IsValid;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUTCSwipeToMoveComponent_C*             K2Node_DynamicCast_AsUTCSwipe_to_Move_Component;   // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUTCJoystickComponent_C*                K2Node_DynamicCast_AsUTCJoystick_Component;        // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerUTCInputComponent_C_SetTouchEnable) == 0x000008, "Wrong alignment on BP_PlayerUTCInputComponent_C_SetTouchEnable");
static_assert(sizeof(BP_PlayerUTCInputComponent_C_SetTouchEnable) == 0x000038, "Wrong size on BP_PlayerUTCInputComponent_C_SetTouchEnable");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_SetTouchEnable, ControlType) == 0x000000, "Member 'BP_PlayerUTCInputComponent_C_SetTouchEnable::ControlType' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_SetTouchEnable, bEnable) == 0x000001, "Member 'BP_PlayerUTCInputComponent_C_SetTouchEnable::bEnable' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_SetTouchEnable, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_PlayerUTCInputComponent_C_SetTouchEnable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_SetTouchEnable, CallFunc_GetComponentByControlType_OutComponent) == 0x000008, "Member 'BP_PlayerUTCInputComponent_C_SetTouchEnable::CallFunc_GetComponentByControlType_OutComponent' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_SetTouchEnable, CallFunc_GetComponentByControlType_IsValid) == 0x000010, "Member 'BP_PlayerUTCInputComponent_C_SetTouchEnable::CallFunc_GetComponentByControlType_IsValid' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_SetTouchEnable, K2Node_SwitchEnum_CmpSuccess) == 0x000011, "Member 'BP_PlayerUTCInputComponent_C_SetTouchEnable::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_SetTouchEnable, K2Node_DynamicCast_AsUTCSwipe_to_Move_Component) == 0x000018, "Member 'BP_PlayerUTCInputComponent_C_SetTouchEnable::K2Node_DynamicCast_AsUTCSwipe_to_Move_Component' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_SetTouchEnable, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_PlayerUTCInputComponent_C_SetTouchEnable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_SetTouchEnable, K2Node_DynamicCast_AsUTCJoystick_Component) == 0x000028, "Member 'BP_PlayerUTCInputComponent_C_SetTouchEnable::K2Node_DynamicCast_AsUTCJoystick_Component' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_SetTouchEnable, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_PlayerUTCInputComponent_C_SetTouchEnable::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.RightToLeft
// 0x0068 (0x0068 - 0x0000)
struct BP_PlayerUTCInputComponent_C_RightToLeft final
{
public:
	double                                        InX;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInPercent;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLogicSize;                                        // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        OutX;                                              // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerUTCInputComponent_C_RightToLeft) == 0x000008, "Wrong alignment on BP_PlayerUTCInputComponent_C_RightToLeft");
static_assert(sizeof(BP_PlayerUTCInputComponent_C_RightToLeft) == 0x000068, "Wrong size on BP_PlayerUTCInputComponent_C_RightToLeft");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_RightToLeft, InX) == 0x000000, "Member 'BP_PlayerUTCInputComponent_C_RightToLeft::InX' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_RightToLeft, bInPercent) == 0x000008, "Member 'BP_PlayerUTCInputComponent_C_RightToLeft::bInPercent' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_RightToLeft, bLogicSize) == 0x000009, "Member 'BP_PlayerUTCInputComponent_C_RightToLeft::bLogicSize' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_RightToLeft, OutX) == 0x000010, "Member 'BP_PlayerUTCInputComponent_C_RightToLeft::OutX' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_RightToLeft, CallFunc_GetViewportScale_ReturnValue) == 0x000018, "Member 'BP_PlayerUTCInputComponent_C_RightToLeft::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_RightToLeft, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_PlayerUTCInputComponent_C_RightToLeft::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_RightToLeft, CallFunc_GetViewportSize_ReturnValue) == 0x000028, "Member 'BP_PlayerUTCInputComponent_C_RightToLeft::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_RightToLeft, CallFunc_BreakVector2D_X) == 0x000038, "Member 'BP_PlayerUTCInputComponent_C_RightToLeft::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_RightToLeft, CallFunc_BreakVector2D_Y) == 0x000040, "Member 'BP_PlayerUTCInputComponent_C_RightToLeft::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_RightToLeft, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_PlayerUTCInputComponent_C_RightToLeft::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_RightToLeft, CallFunc_SelectFloat_ReturnValue) == 0x000050, "Member 'BP_PlayerUTCInputComponent_C_RightToLeft::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_RightToLeft, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'BP_PlayerUTCInputComponent_C_RightToLeft::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_RightToLeft, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000060, "Member 'BP_PlayerUTCInputComponent_C_RightToLeft::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerUTCInputComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerUTCInputComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_PlayerUTCInputComponent_C_ReceiveTick");
static_assert(sizeof(BP_PlayerUTCInputComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_PlayerUTCInputComponent_C_ReceiveTick");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_PlayerUTCInputComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerUTCInputComponent_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerUTCInputComponent_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_PlayerUTCInputComponent_C_ReceiveEndPlay");
static_assert(sizeof(BP_PlayerUTCInputComponent_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_PlayerUTCInputComponent_C_ReceiveEndPlay");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_PlayerUTCInputComponent_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.OnViewportSizeChanged
// 0x00E8 (0x00E8 - 0x0000)
struct BP_PlayerUTCInputComponent_C_OnViewportSizeChanged final
{
public:
	struct FVector2D                              Previous_Size;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Updated_Size;                                      // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_UTCRatioConfig                      CallFunc_Array_Get_Item;                           // 0x0038(0x00A8)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerUTCInputComponent_C_OnViewportSizeChanged) == 0x000008, "Wrong alignment on BP_PlayerUTCInputComponent_C_OnViewportSizeChanged");
static_assert(sizeof(BP_PlayerUTCInputComponent_C_OnViewportSizeChanged) == 0x0000E8, "Wrong size on BP_PlayerUTCInputComponent_C_OnViewportSizeChanged");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_OnViewportSizeChanged, Previous_Size) == 0x000000, "Member 'BP_PlayerUTCInputComponent_C_OnViewportSizeChanged::Previous_Size' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_OnViewportSizeChanged, Updated_Size) == 0x000010, "Member 'BP_PlayerUTCInputComponent_C_OnViewportSizeChanged::Updated_Size' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_OnViewportSizeChanged, Temp_bool_True_if_break_was_hit_Variable) == 0x000020, "Member 'BP_PlayerUTCInputComponent_C_OnViewportSizeChanged::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_OnViewportSizeChanged, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_PlayerUTCInputComponent_C_OnViewportSizeChanged::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_OnViewportSizeChanged, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'BP_PlayerUTCInputComponent_C_OnViewportSizeChanged::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_OnViewportSizeChanged, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_PlayerUTCInputComponent_C_OnViewportSizeChanged::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_OnViewportSizeChanged, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_PlayerUTCInputComponent_C_OnViewportSizeChanged::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_OnViewportSizeChanged, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_PlayerUTCInputComponent_C_OnViewportSizeChanged::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_OnViewportSizeChanged, CallFunc_Array_Length_ReturnValue) == 0x0000E0, "Member 'BP_PlayerUTCInputComponent_C_OnViewportSizeChanged::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_OnViewportSizeChanged, CallFunc_Less_IntInt_ReturnValue) == 0x0000E4, "Member 'BP_PlayerUTCInputComponent_C_OnViewportSizeChanged::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_OnViewportSizeChanged, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000E5, "Member 'BP_PlayerUTCInputComponent_C_OnViewportSizeChanged::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_OnViewportSizeChanged, CallFunc_BooleanAND_ReturnValue) == 0x0000E6, "Member 'BP_PlayerUTCInputComponent_C_OnViewportSizeChanged::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.InitUTCConfig
// 0x0080 (0x0080 - 0x0000)
struct BP_PlayerUTCInputComponent_C_InitUTCConfig final
{
public:
	struct FUTCConfigStruct                       CallFunc_GetDataTableRowFromName_OutRow;           // 0x0000(0x0078)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerUTCInputComponent_C_InitUTCConfig) == 0x000008, "Wrong alignment on BP_PlayerUTCInputComponent_C_InitUTCConfig");
static_assert(sizeof(BP_PlayerUTCInputComponent_C_InitUTCConfig) == 0x000080, "Wrong size on BP_PlayerUTCInputComponent_C_InitUTCConfig");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_InitUTCConfig, CallFunc_GetDataTableRowFromName_OutRow) == 0x000000, "Member 'BP_PlayerUTCInputComponent_C_InitUTCConfig::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_InitUTCConfig, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000078, "Member 'BP_PlayerUTCInputComponent_C_InitUTCConfig::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.InitUTCComponents
// 0x0050 (0x0050 - 0x0000)
struct BP_PlayerUTCInputComponent_C_InitUTCComponents final
{
public:
	class UUTCSwipeToMoveComponent_C*             CallFunc_GetSwipeToMoveComponent_comp;             // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BP_GetPixelRateStandardToReal_rate;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDeviceScreenSizeType                         CallFunc_BP_GetDeviceType_NewParam;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsComponentTickEnabled_ReturnValue;       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUTCTapComponent_C*                     CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUTCPinchComponent_C*                   CallFunc_AddComponentByClass_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUTCTapComponent_C*                     CallFunc_AddComponentByClass_ReturnValue_1;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUTCPinchComponent_C*                   CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerUTCInputComponent_C_InitUTCComponents) == 0x000008, "Wrong alignment on BP_PlayerUTCInputComponent_C_InitUTCComponents");
static_assert(sizeof(BP_PlayerUTCInputComponent_C_InitUTCComponents) == 0x000050, "Wrong size on BP_PlayerUTCInputComponent_C_InitUTCComponents");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_InitUTCComponents, CallFunc_GetSwipeToMoveComponent_comp) == 0x000000, "Member 'BP_PlayerUTCInputComponent_C_InitUTCComponents::CallFunc_GetSwipeToMoveComponent_comp' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_InitUTCComponents, CallFunc_BP_GetPixelRateStandardToReal_rate) == 0x000008, "Member 'BP_PlayerUTCInputComponent_C_InitUTCComponents::CallFunc_BP_GetPixelRateStandardToReal_rate' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_InitUTCComponents, CallFunc_BP_GetDeviceType_NewParam) == 0x000010, "Member 'BP_PlayerUTCInputComponent_C_InitUTCComponents::CallFunc_BP_GetDeviceType_NewParam' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_InitUTCComponents, CallFunc_IsComponentTickEnabled_ReturnValue) == 0x000011, "Member 'BP_PlayerUTCInputComponent_C_InitUTCComponents::CallFunc_IsComponentTickEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_InitUTCComponents, CallFunc_IsValid_ReturnValue) == 0x000012, "Member 'BP_PlayerUTCInputComponent_C_InitUTCComponents::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_InitUTCComponents, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'BP_PlayerUTCInputComponent_C_InitUTCComponents::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_InitUTCComponents, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'BP_PlayerUTCInputComponent_C_InitUTCComponents::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_InitUTCComponents, CallFunc_AddComponentByClass_ReturnValue) == 0x000028, "Member 'BP_PlayerUTCInputComponent_C_InitUTCComponents::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_InitUTCComponents, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'BP_PlayerUTCInputComponent_C_InitUTCComponents::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_InitUTCComponents, CallFunc_AddComponentByClass_ReturnValue_1) == 0x000038, "Member 'BP_PlayerUTCInputComponent_C_InitUTCComponents::CallFunc_AddComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_InitUTCComponents, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000040, "Member 'BP_PlayerUTCInputComponent_C_InitUTCComponents::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_InitUTCComponents, CallFunc_IsValid_ReturnValue_2) == 0x000048, "Member 'BP_PlayerUTCInputComponent_C_InitUTCComponents::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.HandleTouchEvent
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerUTCInputComponent_C_HandleTouchEvent final
{
public:
	EX6InputTouchEvent                            X6InputTouchEvent;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETouchIndex                                   FingerIndex;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerUTCInputComponent_C_HandleTouchEvent) == 0x000008, "Wrong alignment on BP_PlayerUTCInputComponent_C_HandleTouchEvent");
static_assert(sizeof(BP_PlayerUTCInputComponent_C_HandleTouchEvent) == 0x000020, "Wrong size on BP_PlayerUTCInputComponent_C_HandleTouchEvent");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_HandleTouchEvent, X6InputTouchEvent) == 0x000000, "Member 'BP_PlayerUTCInputComponent_C_HandleTouchEvent::X6InputTouchEvent' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_HandleTouchEvent, FingerIndex) == 0x000001, "Member 'BP_PlayerUTCInputComponent_C_HandleTouchEvent::FingerIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_HandleTouchEvent, Location) == 0x000008, "Member 'BP_PlayerUTCInputComponent_C_HandleTouchEvent::Location' has a wrong offset!");

// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.HandleExtraMouseRelease
// 0x0178 (0x0178 - 0x0000)
struct BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0078(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue; // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue;        // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PointerEvent_GetPointerIndex_ReturnValue; // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class UUTCComponent_C*>                CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0140(0x0010)(ReferenceParm, ContainsInstancedReference)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UUTCComponent_C*                        CallFunc_Array_Get_Item;                           // 0x0160(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Finger_Location_Exists_Result;         // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease) == 0x000008, "Wrong alignment on BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease");
static_assert(sizeof(BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease) == 0x000178, "Wrong size on BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease, MouseEvent) == 0x000000, "Member 'BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease::MouseEvent' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease, ReturnValue) == 0x000078, "Member 'BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease, Temp_int_Array_Index_Variable) == 0x00007C, "Member 'BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease, CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue) == 0x000080, "Member 'BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease::CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease, CallFunc_Conv_Vector2DToVector_ReturnValue) == 0x000090, "Member 'BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease::CallFunc_Conv_Vector2DToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease, CallFunc_PointerEvent_GetPointerIndex_ReturnValue) == 0x0000A8, "Member 'BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease::CallFunc_PointerEvent_GetPointerIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease, CallFunc_BreakVector_X) == 0x0000B0, "Member 'BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease, CallFunc_BreakVector_Y) == 0x0000B8, "Member 'BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease, CallFunc_BreakVector_Z) == 0x0000C0, "Member 'BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease, CallFunc_Conv_IntToByte_ReturnValue) == 0x0000C8, "Member 'BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease, CallFunc_MakeVector_ReturnValue) == 0x0000D0, "Member 'BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease, CallFunc_GetValidValue_ReturnValue) == 0x0000E8, "Member 'BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease, Temp_int_Loop_Counter_Variable) == 0x0000EC, "Member 'BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0000F0, "Member 'BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease, CallFunc_Add_IntInt_ReturnValue) == 0x000100, "Member 'BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease, CallFunc_GetDisplayName_ReturnValue) == 0x000108, "Member 'BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease, CallFunc_Concat_StrStr_ReturnValue) == 0x000118, "Member 'BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease, CallFunc_GetOwner_ReturnValue) == 0x000128, "Member 'BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000130, "Member 'BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000140, "Member 'BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000150, "Member 'BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease, CallFunc_Array_Get_Item) == 0x000160, "Member 'BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease, CallFunc_Is_Finger_Location_Exists_Result) == 0x000168, "Member 'BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease::CallFunc_Is_Finger_Location_Exists_Result' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease, CallFunc_Array_Length_ReturnValue) == 0x00016C, "Member 'BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease, CallFunc_Less_IntInt_ReturnValue) == 0x000170, "Member 'BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.GetVectorBySTR
// 0x0060 (0x0060 - 0x0000)
struct BP_PlayerUTCInputComponent_C_GetVectorBySTR final
{
public:
	struct FVector2D                              standardVec;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              realVec;                                           // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUTCSwipeToMoveComponent_C*             CallFunc_GetSwipeToMoveComponent_comp;             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetVector2dInAbsolute_OutValue;           // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BP_GetPixelRateStandardToReal_rate;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_DoubleToVector2D_ReturnValue;        // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerUTCInputComponent_C_GetVectorBySTR) == 0x000008, "Wrong alignment on BP_PlayerUTCInputComponent_C_GetVectorBySTR");
static_assert(sizeof(BP_PlayerUTCInputComponent_C_GetVectorBySTR) == 0x000060, "Wrong size on BP_PlayerUTCInputComponent_C_GetVectorBySTR");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetVectorBySTR, standardVec) == 0x000000, "Member 'BP_PlayerUTCInputComponent_C_GetVectorBySTR::standardVec' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetVectorBySTR, realVec) == 0x000010, "Member 'BP_PlayerUTCInputComponent_C_GetVectorBySTR::realVec' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetVectorBySTR, CallFunc_GetSwipeToMoveComponent_comp) == 0x000020, "Member 'BP_PlayerUTCInputComponent_C_GetVectorBySTR::CallFunc_GetSwipeToMoveComponent_comp' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetVectorBySTR, CallFunc_GetVector2dInAbsolute_OutValue) == 0x000028, "Member 'BP_PlayerUTCInputComponent_C_GetVectorBySTR::CallFunc_GetVector2dInAbsolute_OutValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetVectorBySTR, CallFunc_BP_GetPixelRateStandardToReal_rate) == 0x000038, "Member 'BP_PlayerUTCInputComponent_C_GetVectorBySTR::CallFunc_BP_GetPixelRateStandardToReal_rate' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetVectorBySTR, CallFunc_Conv_DoubleToVector2D_ReturnValue) == 0x000040, "Member 'BP_PlayerUTCInputComponent_C_GetVectorBySTR::CallFunc_Conv_DoubleToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetVectorBySTR, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x000050, "Member 'BP_PlayerUTCInputComponent_C_GetVectorBySTR::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");

// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.GetVector2DInPercent
// 0x0090 (0x0090 - 0x0000)
struct BP_PlayerUTCInputComponent_C_GetVector2DInPercent final
{
public:
	struct FVector2D                              InValue;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              OutValue;                                          // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerUTCInputComponent_C_GetVector2DInPercent) == 0x000008, "Wrong alignment on BP_PlayerUTCInputComponent_C_GetVector2DInPercent");
static_assert(sizeof(BP_PlayerUTCInputComponent_C_GetVector2DInPercent) == 0x000090, "Wrong size on BP_PlayerUTCInputComponent_C_GetVector2DInPercent");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetVector2DInPercent, InValue) == 0x000000, "Member 'BP_PlayerUTCInputComponent_C_GetVector2DInPercent::InValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetVector2DInPercent, OutValue) == 0x000010, "Member 'BP_PlayerUTCInputComponent_C_GetVector2DInPercent::OutValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetVector2DInPercent, CallFunc_GetViewportSize_ReturnValue) == 0x000020, "Member 'BP_PlayerUTCInputComponent_C_GetVector2DInPercent::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetVector2DInPercent, CallFunc_BreakVector2D_X) == 0x000030, "Member 'BP_PlayerUTCInputComponent_C_GetVector2DInPercent::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetVector2DInPercent, CallFunc_BreakVector2D_Y) == 0x000038, "Member 'BP_PlayerUTCInputComponent_C_GetVector2DInPercent::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetVector2DInPercent, CallFunc_BreakVector2D_X_1) == 0x000040, "Member 'BP_PlayerUTCInputComponent_C_GetVector2DInPercent::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetVector2DInPercent, CallFunc_BreakVector2D_Y_1) == 0x000048, "Member 'BP_PlayerUTCInputComponent_C_GetVector2DInPercent::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetVector2DInPercent, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_PlayerUTCInputComponent_C_GetVector2DInPercent::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetVector2DInPercent, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000058, "Member 'BP_PlayerUTCInputComponent_C_GetVector2DInPercent::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetVector2DInPercent, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'BP_PlayerUTCInputComponent_C_GetVector2DInPercent::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetVector2DInPercent, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'BP_PlayerUTCInputComponent_C_GetVector2DInPercent::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetVector2DInPercent, CallFunc_BooleanAND_ReturnValue) == 0x000069, "Member 'BP_PlayerUTCInputComponent_C_GetVector2DInPercent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetVector2DInPercent, CallFunc_SelectFloat_ReturnValue) == 0x000070, "Member 'BP_PlayerUTCInputComponent_C_GetVector2DInPercent::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetVector2DInPercent, CallFunc_SelectFloat_ReturnValue_1) == 0x000078, "Member 'BP_PlayerUTCInputComponent_C_GetVector2DInPercent::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetVector2DInPercent, CallFunc_MakeVector2D_ReturnValue) == 0x000080, "Member 'BP_PlayerUTCInputComponent_C_GetVector2DInPercent::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.GetVector2dInAbsolute
// 0x0090 (0x0090 - 0x0000)
struct BP_PlayerUTCInputComponent_C_GetVector2dInAbsolute final
{
public:
	struct FVector2D                              InValue;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              OutValue;                                          // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerUTCInputComponent_C_GetVector2dInAbsolute) == 0x000008, "Wrong alignment on BP_PlayerUTCInputComponent_C_GetVector2dInAbsolute");
static_assert(sizeof(BP_PlayerUTCInputComponent_C_GetVector2dInAbsolute) == 0x000090, "Wrong size on BP_PlayerUTCInputComponent_C_GetVector2dInAbsolute");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetVector2dInAbsolute, InValue) == 0x000000, "Member 'BP_PlayerUTCInputComponent_C_GetVector2dInAbsolute::InValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetVector2dInAbsolute, OutValue) == 0x000010, "Member 'BP_PlayerUTCInputComponent_C_GetVector2dInAbsolute::OutValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetVector2dInAbsolute, CallFunc_GetViewportSize_ReturnValue) == 0x000020, "Member 'BP_PlayerUTCInputComponent_C_GetVector2dInAbsolute::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetVector2dInAbsolute, CallFunc_BreakVector2D_X) == 0x000030, "Member 'BP_PlayerUTCInputComponent_C_GetVector2dInAbsolute::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetVector2dInAbsolute, CallFunc_BreakVector2D_Y) == 0x000038, "Member 'BP_PlayerUTCInputComponent_C_GetVector2dInAbsolute::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetVector2dInAbsolute, CallFunc_BreakVector2D_X_1) == 0x000040, "Member 'BP_PlayerUTCInputComponent_C_GetVector2dInAbsolute::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetVector2dInAbsolute, CallFunc_BreakVector2D_Y_1) == 0x000048, "Member 'BP_PlayerUTCInputComponent_C_GetVector2dInAbsolute::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetVector2dInAbsolute, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_PlayerUTCInputComponent_C_GetVector2dInAbsolute::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetVector2dInAbsolute, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000058, "Member 'BP_PlayerUTCInputComponent_C_GetVector2dInAbsolute::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetVector2dInAbsolute, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'BP_PlayerUTCInputComponent_C_GetVector2dInAbsolute::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetVector2dInAbsolute, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'BP_PlayerUTCInputComponent_C_GetVector2dInAbsolute::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetVector2dInAbsolute, CallFunc_BooleanAND_ReturnValue) == 0x000069, "Member 'BP_PlayerUTCInputComponent_C_GetVector2dInAbsolute::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetVector2dInAbsolute, CallFunc_SelectFloat_ReturnValue) == 0x000070, "Member 'BP_PlayerUTCInputComponent_C_GetVector2dInAbsolute::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetVector2dInAbsolute, CallFunc_SelectFloat_ReturnValue_1) == 0x000078, "Member 'BP_PlayerUTCInputComponent_C_GetVector2dInAbsolute::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetVector2dInAbsolute, CallFunc_MakeVector2D_ReturnValue) == 0x000080, "Member 'BP_PlayerUTCInputComponent_C_GetVector2dInAbsolute::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.GetSwipeToMoveConfig
// 0x0030 (0x0030 - 0x0000)
struct BP_PlayerUTCInputComponent_C_GetSwipeToMoveConfig final
{
public:
	EUTCControlTypeEnum                           ControlType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              InteractionOrigin;                                 // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              InteractionSize;                                   // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerUTCInputComponent_C_GetSwipeToMoveConfig) == 0x000008, "Wrong alignment on BP_PlayerUTCInputComponent_C_GetSwipeToMoveConfig");
static_assert(sizeof(BP_PlayerUTCInputComponent_C_GetSwipeToMoveConfig) == 0x000030, "Wrong size on BP_PlayerUTCInputComponent_C_GetSwipeToMoveConfig");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetSwipeToMoveConfig, ControlType) == 0x000000, "Member 'BP_PlayerUTCInputComponent_C_GetSwipeToMoveConfig::ControlType' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetSwipeToMoveConfig, InteractionOrigin) == 0x000008, "Member 'BP_PlayerUTCInputComponent_C_GetSwipeToMoveConfig::InteractionOrigin' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetSwipeToMoveConfig, InteractionSize) == 0x000018, "Member 'BP_PlayerUTCInputComponent_C_GetSwipeToMoveConfig::InteractionSize' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetSwipeToMoveConfig, K2Node_SwitchEnum_CmpSuccess) == 0x000028, "Member 'BP_PlayerUTCInputComponent_C_GetSwipeToMoveConfig::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.GetSwipeToMoveComponent
// 0x0028 (0x0028 - 0x0000)
struct BP_PlayerUTCInputComponent_C_GetSwipeToMoveComponent final
{
public:
	class UUTCSwipeToMoveComponent_C*             Comp;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUTCComponent_C*                        CallFunc_GetComponentByControlType_OutComponent;   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetComponentByControlType_IsValid;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUTCSwipeToMoveComponent_C*             K2Node_DynamicCast_AsUTCSwipe_to_Move_Component;   // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerUTCInputComponent_C_GetSwipeToMoveComponent) == 0x000008, "Wrong alignment on BP_PlayerUTCInputComponent_C_GetSwipeToMoveComponent");
static_assert(sizeof(BP_PlayerUTCInputComponent_C_GetSwipeToMoveComponent) == 0x000028, "Wrong size on BP_PlayerUTCInputComponent_C_GetSwipeToMoveComponent");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetSwipeToMoveComponent, Comp) == 0x000000, "Member 'BP_PlayerUTCInputComponent_C_GetSwipeToMoveComponent::Comp' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetSwipeToMoveComponent, CallFunc_GetComponentByControlType_OutComponent) == 0x000008, "Member 'BP_PlayerUTCInputComponent_C_GetSwipeToMoveComponent::CallFunc_GetComponentByControlType_OutComponent' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetSwipeToMoveComponent, CallFunc_GetComponentByControlType_IsValid) == 0x000010, "Member 'BP_PlayerUTCInputComponent_C_GetSwipeToMoveComponent::CallFunc_GetComponentByControlType_IsValid' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetSwipeToMoveComponent, K2Node_DynamicCast_AsUTCSwipe_to_Move_Component) == 0x000018, "Member 'BP_PlayerUTCInputComponent_C_GetSwipeToMoveComponent::K2Node_DynamicCast_AsUTCSwipe_to_Move_Component' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetSwipeToMoveComponent, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_PlayerUTCInputComponent_C_GetSwipeToMoveComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.GetJoystickConfig
// 0x01D8 (0x01D8 - 0x0000)
struct BP_PlayerUTCInputComponent_C_GetJoystickConfig final
{
public:
	EUTCControlTypeEnum                           ControlType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	EUTCJoystickMode                              JoystickMode_0;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CenterPos;                                         // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              VisualSize;                                        // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ThumbSize;                                         // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              InteractionOrigin;                                 // 0x0038(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              InteractionSize;                                   // 0x0048(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LockPos;                                           // 0x0058(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseFloat;                                          // 0x0059(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              EdgeGapSize;                                       // 0x0060(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_JoystickCustomConfig                CallFunc_Map_Find_Value;                           // 0x0078(0x0068)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_JoystickCustomConfig                CallFunc_Map_Find_Value_1;                         // 0x00E8(0x0068)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetVectorBySTR_realVec;                   // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetVectorBySTR_realVec_1;                 // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetVectorBySTR_realVec_2;                 // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetVectorBySTR_realVec_3;                 // 0x0188(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetVectorBySTR_realVec_4;                 // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetVectorBySTR_realVec_5;                 // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetVectorBySTR_realVec_6;                 // 0x01B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetVectorBySTR_realVec_7;                 // 0x01C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerUTCInputComponent_C_GetJoystickConfig) == 0x000008, "Wrong alignment on BP_PlayerUTCInputComponent_C_GetJoystickConfig");
static_assert(sizeof(BP_PlayerUTCInputComponent_C_GetJoystickConfig) == 0x0001D8, "Wrong size on BP_PlayerUTCInputComponent_C_GetJoystickConfig");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetJoystickConfig, ControlType) == 0x000000, "Member 'BP_PlayerUTCInputComponent_C_GetJoystickConfig::ControlType' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetJoystickConfig, JoystickMode_0) == 0x000004, "Member 'BP_PlayerUTCInputComponent_C_GetJoystickConfig::JoystickMode_0' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetJoystickConfig, CenterPos) == 0x000008, "Member 'BP_PlayerUTCInputComponent_C_GetJoystickConfig::CenterPos' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetJoystickConfig, VisualSize) == 0x000018, "Member 'BP_PlayerUTCInputComponent_C_GetJoystickConfig::VisualSize' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetJoystickConfig, ThumbSize) == 0x000028, "Member 'BP_PlayerUTCInputComponent_C_GetJoystickConfig::ThumbSize' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetJoystickConfig, InteractionOrigin) == 0x000038, "Member 'BP_PlayerUTCInputComponent_C_GetJoystickConfig::InteractionOrigin' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetJoystickConfig, InteractionSize) == 0x000048, "Member 'BP_PlayerUTCInputComponent_C_GetJoystickConfig::InteractionSize' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetJoystickConfig, LockPos) == 0x000058, "Member 'BP_PlayerUTCInputComponent_C_GetJoystickConfig::LockPos' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetJoystickConfig, UseFloat) == 0x000059, "Member 'BP_PlayerUTCInputComponent_C_GetJoystickConfig::UseFloat' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetJoystickConfig, EdgeGapSize) == 0x000060, "Member 'BP_PlayerUTCInputComponent_C_GetJoystickConfig::EdgeGapSize' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetJoystickConfig, K2Node_SwitchEnum_CmpSuccess) == 0x000070, "Member 'BP_PlayerUTCInputComponent_C_GetJoystickConfig::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetJoystickConfig, CallFunc_Map_Find_Value) == 0x000078, "Member 'BP_PlayerUTCInputComponent_C_GetJoystickConfig::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetJoystickConfig, CallFunc_Map_Find_ReturnValue) == 0x0000E0, "Member 'BP_PlayerUTCInputComponent_C_GetJoystickConfig::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetJoystickConfig, CallFunc_Map_Find_Value_1) == 0x0000E8, "Member 'BP_PlayerUTCInputComponent_C_GetJoystickConfig::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetJoystickConfig, CallFunc_Map_Find_ReturnValue_1) == 0x000150, "Member 'BP_PlayerUTCInputComponent_C_GetJoystickConfig::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetJoystickConfig, CallFunc_GetVectorBySTR_realVec) == 0x000158, "Member 'BP_PlayerUTCInputComponent_C_GetJoystickConfig::CallFunc_GetVectorBySTR_realVec' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetJoystickConfig, CallFunc_GetVectorBySTR_realVec_1) == 0x000168, "Member 'BP_PlayerUTCInputComponent_C_GetJoystickConfig::CallFunc_GetVectorBySTR_realVec_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetJoystickConfig, CallFunc_GetVectorBySTR_realVec_2) == 0x000178, "Member 'BP_PlayerUTCInputComponent_C_GetJoystickConfig::CallFunc_GetVectorBySTR_realVec_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetJoystickConfig, CallFunc_GetVectorBySTR_realVec_3) == 0x000188, "Member 'BP_PlayerUTCInputComponent_C_GetJoystickConfig::CallFunc_GetVectorBySTR_realVec_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetJoystickConfig, CallFunc_GetVectorBySTR_realVec_4) == 0x000198, "Member 'BP_PlayerUTCInputComponent_C_GetJoystickConfig::CallFunc_GetVectorBySTR_realVec_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetJoystickConfig, CallFunc_GetVectorBySTR_realVec_5) == 0x0001A8, "Member 'BP_PlayerUTCInputComponent_C_GetJoystickConfig::CallFunc_GetVectorBySTR_realVec_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetJoystickConfig, CallFunc_GetVectorBySTR_realVec_6) == 0x0001B8, "Member 'BP_PlayerUTCInputComponent_C_GetJoystickConfig::CallFunc_GetVectorBySTR_realVec_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetJoystickConfig, CallFunc_GetVectorBySTR_realVec_7) == 0x0001C8, "Member 'BP_PlayerUTCInputComponent_C_GetJoystickConfig::CallFunc_GetVectorBySTR_realVec_7' has a wrong offset!");

// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.GetComponentByControlType
// 0x0040 (0x0040 - 0x0000)
struct BP_PlayerUTCInputComponent_C_GetComponentByControlType final
{
public:
	EUTCControlTypeEnum                           ControlType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUTCComponent_C*                        OutComponent;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUTCComponent_C*                        CallFunc_Map_Find_Value;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerUTCInputComponent_C_GetComponentByControlType) == 0x000008, "Wrong alignment on BP_PlayerUTCInputComponent_C_GetComponentByControlType");
static_assert(sizeof(BP_PlayerUTCInputComponent_C_GetComponentByControlType) == 0x000040, "Wrong size on BP_PlayerUTCInputComponent_C_GetComponentByControlType");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetComponentByControlType, ControlType) == 0x000000, "Member 'BP_PlayerUTCInputComponent_C_GetComponentByControlType::ControlType' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetComponentByControlType, OutComponent) == 0x000008, "Member 'BP_PlayerUTCInputComponent_C_GetComponentByControlType::OutComponent' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetComponentByControlType, IsValid) == 0x000010, "Member 'BP_PlayerUTCInputComponent_C_GetComponentByControlType::IsValid' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetComponentByControlType, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000018, "Member 'BP_PlayerUTCInputComponent_C_GetComponentByControlType::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetComponentByControlType, CallFunc_Conv_StringToName_ReturnValue) == 0x000028, "Member 'BP_PlayerUTCInputComponent_C_GetComponentByControlType::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetComponentByControlType, CallFunc_Map_Find_Value) == 0x000030, "Member 'BP_PlayerUTCInputComponent_C_GetComponentByControlType::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetComponentByControlType, CallFunc_Map_Find_ReturnValue) == 0x000038, "Member 'BP_PlayerUTCInputComponent_C_GetComponentByControlType::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetComponentByControlType, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'BP_PlayerUTCInputComponent_C_GetComponentByControlType::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_GetComponentByControlType, CallFunc_BooleanAND_ReturnValue) == 0x00003A, "Member 'BP_PlayerUTCInputComponent_C_GetComponentByControlType::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.ExecuteUbergraph_BP_PlayerUTCInputComponent
// 0x0070 (0x0070 - 0x0000)
struct BP_PlayerUTCInputComponent_C_ExecuteUbergraph_BP_PlayerUTCInputComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EX6InputTouchEvent                            K2Node_Event_X6InputTouchEvent;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETouchIndex                                   K2Node_Event_FingerIndex;                          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_Location;                             // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FVector2D& Previous_Size, const struct FVector2D& Updated_Size)> K2Node_CreateDelegate_OutputDelegate; // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UX6GameInstance*                        CallFunc_GetX6GameInstance_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FPointerEvent& MouseEvent)> K2Node_CreateDelegate_OutputDelegate_1;  // 0x0048(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UX6InputProcessorHelper*                CallFunc_GetInputProcessorHelper_ReturnValue;      // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UX6GameInstance*                        CallFunc_GetX6GameInstance_ReturnValue_1;          // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UX6InputProcessorHelper*                CallFunc_GetInputProcessorHelper_ReturnValue_1;    // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerUTCInputComponent_C_ExecuteUbergraph_BP_PlayerUTCInputComponent) == 0x000008, "Wrong alignment on BP_PlayerUTCInputComponent_C_ExecuteUbergraph_BP_PlayerUTCInputComponent");
static_assert(sizeof(BP_PlayerUTCInputComponent_C_ExecuteUbergraph_BP_PlayerUTCInputComponent) == 0x000070, "Wrong size on BP_PlayerUTCInputComponent_C_ExecuteUbergraph_BP_PlayerUTCInputComponent");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_ExecuteUbergraph_BP_PlayerUTCInputComponent, EntryPoint) == 0x000000, "Member 'BP_PlayerUTCInputComponent_C_ExecuteUbergraph_BP_PlayerUTCInputComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_ExecuteUbergraph_BP_PlayerUTCInputComponent, K2Node_Event_X6InputTouchEvent) == 0x000004, "Member 'BP_PlayerUTCInputComponent_C_ExecuteUbergraph_BP_PlayerUTCInputComponent::K2Node_Event_X6InputTouchEvent' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_ExecuteUbergraph_BP_PlayerUTCInputComponent, K2Node_Event_FingerIndex) == 0x000005, "Member 'BP_PlayerUTCInputComponent_C_ExecuteUbergraph_BP_PlayerUTCInputComponent::K2Node_Event_FingerIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_ExecuteUbergraph_BP_PlayerUTCInputComponent, K2Node_Event_Location) == 0x000008, "Member 'BP_PlayerUTCInputComponent_C_ExecuteUbergraph_BP_PlayerUTCInputComponent::K2Node_Event_Location' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_ExecuteUbergraph_BP_PlayerUTCInputComponent, K2Node_Event_DeltaSeconds) == 0x000020, "Member 'BP_PlayerUTCInputComponent_C_ExecuteUbergraph_BP_PlayerUTCInputComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_ExecuteUbergraph_BP_PlayerUTCInputComponent, K2Node_Event_EndPlayReason) == 0x000024, "Member 'BP_PlayerUTCInputComponent_C_ExecuteUbergraph_BP_PlayerUTCInputComponent::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_ExecuteUbergraph_BP_PlayerUTCInputComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'BP_PlayerUTCInputComponent_C_ExecuteUbergraph_BP_PlayerUTCInputComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_ExecuteUbergraph_BP_PlayerUTCInputComponent, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_PlayerUTCInputComponent_C_ExecuteUbergraph_BP_PlayerUTCInputComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_ExecuteUbergraph_BP_PlayerUTCInputComponent, CallFunc_IsValid_ReturnValue_1) == 0x000039, "Member 'BP_PlayerUTCInputComponent_C_ExecuteUbergraph_BP_PlayerUTCInputComponent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_ExecuteUbergraph_BP_PlayerUTCInputComponent, CallFunc_GetX6GameInstance_ReturnValue) == 0x000040, "Member 'BP_PlayerUTCInputComponent_C_ExecuteUbergraph_BP_PlayerUTCInputComponent::CallFunc_GetX6GameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_ExecuteUbergraph_BP_PlayerUTCInputComponent, K2Node_CreateDelegate_OutputDelegate_1) == 0x000048, "Member 'BP_PlayerUTCInputComponent_C_ExecuteUbergraph_BP_PlayerUTCInputComponent::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_ExecuteUbergraph_BP_PlayerUTCInputComponent, CallFunc_GetInputProcessorHelper_ReturnValue) == 0x000058, "Member 'BP_PlayerUTCInputComponent_C_ExecuteUbergraph_BP_PlayerUTCInputComponent::CallFunc_GetInputProcessorHelper_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_ExecuteUbergraph_BP_PlayerUTCInputComponent, CallFunc_GetX6GameInstance_ReturnValue_1) == 0x000060, "Member 'BP_PlayerUTCInputComponent_C_ExecuteUbergraph_BP_PlayerUTCInputComponent::CallFunc_GetX6GameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_ExecuteUbergraph_BP_PlayerUTCInputComponent, CallFunc_GetInputProcessorHelper_ReturnValue_1) == 0x000068, "Member 'BP_PlayerUTCInputComponent_C_ExecuteUbergraph_BP_PlayerUTCInputComponent::CallFunc_GetInputProcessorHelper_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.DownToTop
// 0x0068 (0x0068 - 0x0000)
struct BP_PlayerUTCInputComponent_C_DownToTop final
{
public:
	double                                        InY;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInPercent;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLogicSize;                                        // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        OutY;                                              // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerUTCInputComponent_C_DownToTop) == 0x000008, "Wrong alignment on BP_PlayerUTCInputComponent_C_DownToTop");
static_assert(sizeof(BP_PlayerUTCInputComponent_C_DownToTop) == 0x000068, "Wrong size on BP_PlayerUTCInputComponent_C_DownToTop");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_DownToTop, InY) == 0x000000, "Member 'BP_PlayerUTCInputComponent_C_DownToTop::InY' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_DownToTop, bInPercent) == 0x000008, "Member 'BP_PlayerUTCInputComponent_C_DownToTop::bInPercent' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_DownToTop, bLogicSize) == 0x000009, "Member 'BP_PlayerUTCInputComponent_C_DownToTop::bLogicSize' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_DownToTop, OutY) == 0x000010, "Member 'BP_PlayerUTCInputComponent_C_DownToTop::OutY' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_DownToTop, CallFunc_GetViewportScale_ReturnValue) == 0x000018, "Member 'BP_PlayerUTCInputComponent_C_DownToTop::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_DownToTop, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_PlayerUTCInputComponent_C_DownToTop::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_DownToTop, CallFunc_GetViewportSize_ReturnValue) == 0x000028, "Member 'BP_PlayerUTCInputComponent_C_DownToTop::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_DownToTop, CallFunc_BreakVector2D_X) == 0x000038, "Member 'BP_PlayerUTCInputComponent_C_DownToTop::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_DownToTop, CallFunc_BreakVector2D_Y) == 0x000040, "Member 'BP_PlayerUTCInputComponent_C_DownToTop::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_DownToTop, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_PlayerUTCInputComponent_C_DownToTop::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_DownToTop, CallFunc_SelectFloat_ReturnValue) == 0x000050, "Member 'BP_PlayerUTCInputComponent_C_DownToTop::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_DownToTop, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'BP_PlayerUTCInputComponent_C_DownToTop::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_DownToTop, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000060, "Member 'BP_PlayerUTCInputComponent_C_DownToTop::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.DeInitUTCComponents
// 0x0058 (0x0058 - 0x0000)
struct BP_PlayerUTCInputComponent_C_DeInitUTCComponents final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0020(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUTCComponent_C*                        CallFunc_Map_Find_Value;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ComponentHasTag_ReturnValue;              // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerUTCInputComponent_C_DeInitUTCComponents) == 0x000008, "Wrong alignment on BP_PlayerUTCInputComponent_C_DeInitUTCComponents");
static_assert(sizeof(BP_PlayerUTCInputComponent_C_DeInitUTCComponents) == 0x000058, "Wrong size on BP_PlayerUTCInputComponent_C_DeInitUTCComponents");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_DeInitUTCComponents, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_PlayerUTCInputComponent_C_DeInitUTCComponents::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_DeInitUTCComponents, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_PlayerUTCInputComponent_C_DeInitUTCComponents::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_DeInitUTCComponents, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_PlayerUTCInputComponent_C_DeInitUTCComponents::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_DeInitUTCComponents, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_PlayerUTCInputComponent_C_DeInitUTCComponents::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_DeInitUTCComponents, CallFunc_GetOwner_ReturnValue_1) == 0x000018, "Member 'BP_PlayerUTCInputComponent_C_DeInitUTCComponents::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_DeInitUTCComponents, CallFunc_Map_Keys_Keys) == 0x000020, "Member 'BP_PlayerUTCInputComponent_C_DeInitUTCComponents::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_DeInitUTCComponents, CallFunc_GetOwner_ReturnValue_2) == 0x000030, "Member 'BP_PlayerUTCInputComponent_C_DeInitUTCComponents::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_DeInitUTCComponents, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_PlayerUTCInputComponent_C_DeInitUTCComponents::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_DeInitUTCComponents, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_PlayerUTCInputComponent_C_DeInitUTCComponents::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_DeInitUTCComponents, CallFunc_Map_Find_Value) == 0x000048, "Member 'BP_PlayerUTCInputComponent_C_DeInitUTCComponents::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_DeInitUTCComponents, CallFunc_Map_Find_ReturnValue) == 0x000050, "Member 'BP_PlayerUTCInputComponent_C_DeInitUTCComponents::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_DeInitUTCComponents, CallFunc_Less_IntInt_ReturnValue) == 0x000051, "Member 'BP_PlayerUTCInputComponent_C_DeInitUTCComponents::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_DeInitUTCComponents, CallFunc_IsValid_ReturnValue) == 0x000052, "Member 'BP_PlayerUTCInputComponent_C_DeInitUTCComponents::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_DeInitUTCComponents, CallFunc_ComponentHasTag_ReturnValue) == 0x000053, "Member 'BP_PlayerUTCInputComponent_C_DeInitUTCComponents::CallFunc_ComponentHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_DeInitUTCComponents, CallFunc_IsValid_ReturnValue_1) == 0x000054, "Member 'BP_PlayerUTCInputComponent_C_DeInitUTCComponents::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_DeInitUTCComponents, CallFunc_IsValid_ReturnValue_2) == 0x000055, "Member 'BP_PlayerUTCInputComponent_C_DeInitUTCComponents::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_DeInitUTCComponents, CallFunc_BooleanAND_ReturnValue) == 0x000056, "Member 'BP_PlayerUTCInputComponent_C_DeInitUTCComponents::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_DeInitUTCComponents, CallFunc_BooleanAND_ReturnValue_1) == 0x000057, "Member 'BP_PlayerUTCInputComponent_C_DeInitUTCComponents::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.CreateUTCComponent
// 0x0090 (0x0090 - 0x0000)
struct BP_PlayerUTCInputComponent_C_CreateUTCComponent final
{
public:
	EUTCControlTypeEnum                           ControlType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 ComponentClass;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Tag;                                               // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UUTCComponent_C*>                CallFunc_GetComponentsByTag_ReturnValue;           // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UUTCComponent_C*                        CallFunc_AddComponentByClass_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUTCComponent_C*                        CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerUTCInputComponent_C_CreateUTCComponent) == 0x000008, "Wrong alignment on BP_PlayerUTCInputComponent_C_CreateUTCComponent");
static_assert(sizeof(BP_PlayerUTCInputComponent_C_CreateUTCComponent) == 0x000090, "Wrong size on BP_PlayerUTCInputComponent_C_CreateUTCComponent");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_CreateUTCComponent, ControlType) == 0x000000, "Member 'BP_PlayerUTCInputComponent_C_CreateUTCComponent::ControlType' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_CreateUTCComponent, ComponentClass) == 0x000008, "Member 'BP_PlayerUTCInputComponent_C_CreateUTCComponent::ComponentClass' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_CreateUTCComponent, Tag) == 0x000010, "Member 'BP_PlayerUTCInputComponent_C_CreateUTCComponent::Tag' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_CreateUTCComponent, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_PlayerUTCInputComponent_C_CreateUTCComponent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_CreateUTCComponent, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000020, "Member 'BP_PlayerUTCInputComponent_C_CreateUTCComponent::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_CreateUTCComponent, CallFunc_Conv_StringToName_ReturnValue) == 0x000030, "Member 'BP_PlayerUTCInputComponent_C_CreateUTCComponent::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_CreateUTCComponent, K2Node_SwitchEnum_CmpSuccess) == 0x000038, "Member 'BP_PlayerUTCInputComponent_C_CreateUTCComponent::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_CreateUTCComponent, CallFunc_IsValidClass_ReturnValue) == 0x000039, "Member 'BP_PlayerUTCInputComponent_C_CreateUTCComponent::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_CreateUTCComponent, Temp_bool_True_if_break_was_hit_Variable) == 0x00003A, "Member 'BP_PlayerUTCInputComponent_C_CreateUTCComponent::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_CreateUTCComponent, CallFunc_Not_PreBool_ReturnValue) == 0x00003B, "Member 'BP_PlayerUTCInputComponent_C_CreateUTCComponent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_CreateUTCComponent, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'BP_PlayerUTCInputComponent_C_CreateUTCComponent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_CreateUTCComponent, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_PlayerUTCInputComponent_C_CreateUTCComponent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_CreateUTCComponent, K2Node_MakeArray_Array) == 0x000048, "Member 'BP_PlayerUTCInputComponent_C_CreateUTCComponent::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_CreateUTCComponent, CallFunc_GetOwner_ReturnValue) == 0x000058, "Member 'BP_PlayerUTCInputComponent_C_CreateUTCComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_CreateUTCComponent, CallFunc_GetComponentsByTag_ReturnValue) == 0x000060, "Member 'BP_PlayerUTCInputComponent_C_CreateUTCComponent::CallFunc_GetComponentsByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_CreateUTCComponent, CallFunc_AddComponentByClass_ReturnValue) == 0x000070, "Member 'BP_PlayerUTCInputComponent_C_CreateUTCComponent::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_CreateUTCComponent, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_PlayerUTCInputComponent_C_CreateUTCComponent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_CreateUTCComponent, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'BP_PlayerUTCInputComponent_C_CreateUTCComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_CreateUTCComponent, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'BP_PlayerUTCInputComponent_C_CreateUTCComponent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_CreateUTCComponent, CallFunc_Array_Length_ReturnValue_1) == 0x000088, "Member 'BP_PlayerUTCInputComponent_C_CreateUTCComponent::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_CreateUTCComponent, CallFunc_Less_IntInt_ReturnValue) == 0x00008C, "Member 'BP_PlayerUTCInputComponent_C_CreateUTCComponent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_CreateUTCComponent, CallFunc_Greater_IntInt_ReturnValue) == 0x00008D, "Member 'BP_PlayerUTCInputComponent_C_CreateUTCComponent::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_CreateUTCComponent, CallFunc_BooleanAND_ReturnValue) == 0x00008E, "Member 'BP_PlayerUTCInputComponent_C_CreateUTCComponent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.BP_UpdateJoystickComponent
// 0x0090 (0x0090 - 0x0000)
struct BP_PlayerUTCInputComponent_C_BP_UpdateJoystickComponent final
{
public:
	EUTCControlTypeEnum                           ControlType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CenterPos;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              VisualSize;                                        // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ThumbSize;                                         // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              InteractionOrigin;                                 // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              InteractionSize;                                   // 0x0048(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LockPos;                                           // 0x0058(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseFloat;                                          // 0x0059(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              EdgeGapSize;                                       // 0x0060(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUTCComponent_C*                        CallFunc_GetComponentByControlType_OutComponent;   // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetComponentByControlType_IsValid;        // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUTCJoystickComponent_C*                K2Node_DynamicCast_AsUTCJoystick_Component;        // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerUTCInputComponent_C_BP_UpdateJoystickComponent) == 0x000008, "Wrong alignment on BP_PlayerUTCInputComponent_C_BP_UpdateJoystickComponent");
static_assert(sizeof(BP_PlayerUTCInputComponent_C_BP_UpdateJoystickComponent) == 0x000090, "Wrong size on BP_PlayerUTCInputComponent_C_BP_UpdateJoystickComponent");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_UpdateJoystickComponent, ControlType) == 0x000000, "Member 'BP_PlayerUTCInputComponent_C_BP_UpdateJoystickComponent::ControlType' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_UpdateJoystickComponent, CenterPos) == 0x000008, "Member 'BP_PlayerUTCInputComponent_C_BP_UpdateJoystickComponent::CenterPos' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_UpdateJoystickComponent, VisualSize) == 0x000018, "Member 'BP_PlayerUTCInputComponent_C_BP_UpdateJoystickComponent::VisualSize' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_UpdateJoystickComponent, ThumbSize) == 0x000028, "Member 'BP_PlayerUTCInputComponent_C_BP_UpdateJoystickComponent::ThumbSize' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_UpdateJoystickComponent, InteractionOrigin) == 0x000038, "Member 'BP_PlayerUTCInputComponent_C_BP_UpdateJoystickComponent::InteractionOrigin' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_UpdateJoystickComponent, InteractionSize) == 0x000048, "Member 'BP_PlayerUTCInputComponent_C_BP_UpdateJoystickComponent::InteractionSize' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_UpdateJoystickComponent, LockPos) == 0x000058, "Member 'BP_PlayerUTCInputComponent_C_BP_UpdateJoystickComponent::LockPos' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_UpdateJoystickComponent, UseFloat) == 0x000059, "Member 'BP_PlayerUTCInputComponent_C_BP_UpdateJoystickComponent::UseFloat' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_UpdateJoystickComponent, EdgeGapSize) == 0x000060, "Member 'BP_PlayerUTCInputComponent_C_BP_UpdateJoystickComponent::EdgeGapSize' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_UpdateJoystickComponent, CallFunc_GetComponentByControlType_OutComponent) == 0x000070, "Member 'BP_PlayerUTCInputComponent_C_BP_UpdateJoystickComponent::CallFunc_GetComponentByControlType_OutComponent' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_UpdateJoystickComponent, CallFunc_GetComponentByControlType_IsValid) == 0x000078, "Member 'BP_PlayerUTCInputComponent_C_BP_UpdateJoystickComponent::CallFunc_GetComponentByControlType_IsValid' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_UpdateJoystickComponent, K2Node_DynamicCast_AsUTCJoystick_Component) == 0x000080, "Member 'BP_PlayerUTCInputComponent_C_BP_UpdateJoystickComponent::K2Node_DynamicCast_AsUTCJoystick_Component' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_UpdateJoystickComponent, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BP_PlayerUTCInputComponent_C_BP_UpdateJoystickComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.BP_SetUTCComponentsTickEnabled
// 0x0050 (0x0050 - 0x0000)
struct BP_PlayerUTCInputComponent_C_BP_SetUTCComponentsTickEnabled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bComponentTickEnabled;                             // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUTCComponent_C*>                UTCComponents;                                     // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUTCComponent_C*                        CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UUTCComponent_C*>                CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_PlayerUTCInputComponent_C_BP_SetUTCComponentsTickEnabled) == 0x000008, "Wrong alignment on BP_PlayerUTCInputComponent_C_BP_SetUTCComponentsTickEnabled");
static_assert(sizeof(BP_PlayerUTCInputComponent_C_BP_SetUTCComponentsTickEnabled) == 0x000050, "Wrong size on BP_PlayerUTCInputComponent_C_BP_SetUTCComponentsTickEnabled");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_SetUTCComponentsTickEnabled, bEnabled) == 0x000000, "Member 'BP_PlayerUTCInputComponent_C_BP_SetUTCComponentsTickEnabled::bEnabled' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_SetUTCComponentsTickEnabled, bComponentTickEnabled) == 0x000001, "Member 'BP_PlayerUTCInputComponent_C_BP_SetUTCComponentsTickEnabled::bComponentTickEnabled' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_SetUTCComponentsTickEnabled, UTCComponents) == 0x000008, "Member 'BP_PlayerUTCInputComponent_C_BP_SetUTCComponentsTickEnabled::UTCComponents' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_SetUTCComponentsTickEnabled, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_PlayerUTCInputComponent_C_BP_SetUTCComponentsTickEnabled::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_SetUTCComponentsTickEnabled, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_PlayerUTCInputComponent_C_BP_SetUTCComponentsTickEnabled::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_SetUTCComponentsTickEnabled, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_PlayerUTCInputComponent_C_BP_SetUTCComponentsTickEnabled::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_SetUTCComponentsTickEnabled, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000024, "Member 'BP_PlayerUTCInputComponent_C_BP_SetUTCComponentsTickEnabled::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_SetUTCComponentsTickEnabled, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_PlayerUTCInputComponent_C_BP_SetUTCComponentsTickEnabled::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_SetUTCComponentsTickEnabled, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_PlayerUTCInputComponent_C_BP_SetUTCComponentsTickEnabled::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_SetUTCComponentsTickEnabled, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_PlayerUTCInputComponent_C_BP_SetUTCComponentsTickEnabled::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_SetUTCComponentsTickEnabled, CallFunc_GetOwner_ReturnValue) == 0x000038, "Member 'BP_PlayerUTCInputComponent_C_BP_SetUTCComponentsTickEnabled::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_SetUTCComponentsTickEnabled, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000040, "Member 'BP_PlayerUTCInputComponent_C_BP_SetUTCComponentsTickEnabled::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");

// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.BP_SetTouchEnable
// 0x0002 (0x0002 - 0x0000)
struct BP_PlayerUTCInputComponent_C_BP_SetTouchEnable final
{
public:
	bool                                          bEnableControlCamera;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnableControlMove;                                // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerUTCInputComponent_C_BP_SetTouchEnable) == 0x000001, "Wrong alignment on BP_PlayerUTCInputComponent_C_BP_SetTouchEnable");
static_assert(sizeof(BP_PlayerUTCInputComponent_C_BP_SetTouchEnable) == 0x000002, "Wrong size on BP_PlayerUTCInputComponent_C_BP_SetTouchEnable");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_SetTouchEnable, bEnableControlCamera) == 0x000000, "Member 'BP_PlayerUTCInputComponent_C_BP_SetTouchEnable::bEnableControlCamera' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_SetTouchEnable, bEnableControlMove) == 0x000001, "Member 'BP_PlayerUTCInputComponent_C_BP_SetTouchEnable::bEnableControlMove' has a wrong offset!");

// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.BP_ResetJoystickAxis
// 0x0050 (0x0050 - 0x0000)
struct BP_PlayerUTCInputComponent_C_BP_ResetJoystickAxis final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUTCComponent_C*                        CallFunc_Map_Find_Value;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUTCJoystickComponent_C*                K2Node_DynamicCast_AsUTCJoystick_Component;        // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerUTCInputComponent_C_BP_ResetJoystickAxis) == 0x000008, "Wrong alignment on BP_PlayerUTCInputComponent_C_BP_ResetJoystickAxis");
static_assert(sizeof(BP_PlayerUTCInputComponent_C_BP_ResetJoystickAxis) == 0x000050, "Wrong size on BP_PlayerUTCInputComponent_C_BP_ResetJoystickAxis");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_ResetJoystickAxis, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_PlayerUTCInputComponent_C_BP_ResetJoystickAxis::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_ResetJoystickAxis, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_PlayerUTCInputComponent_C_BP_ResetJoystickAxis::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_ResetJoystickAxis, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_PlayerUTCInputComponent_C_BP_ResetJoystickAxis::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_ResetJoystickAxis, CallFunc_Map_Keys_Keys) == 0x000010, "Member 'BP_PlayerUTCInputComponent_C_BP_ResetJoystickAxis::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_ResetJoystickAxis, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_PlayerUTCInputComponent_C_BP_ResetJoystickAxis::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_ResetJoystickAxis, CallFunc_Array_Get_Item) == 0x000024, "Member 'BP_PlayerUTCInputComponent_C_BP_ResetJoystickAxis::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_ResetJoystickAxis, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_PlayerUTCInputComponent_C_BP_ResetJoystickAxis::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_ResetJoystickAxis, CallFunc_Map_Find_Value) == 0x000030, "Member 'BP_PlayerUTCInputComponent_C_BP_ResetJoystickAxis::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_ResetJoystickAxis, CallFunc_Map_Find_ReturnValue) == 0x000038, "Member 'BP_PlayerUTCInputComponent_C_BP_ResetJoystickAxis::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_ResetJoystickAxis, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'BP_PlayerUTCInputComponent_C_BP_ResetJoystickAxis::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_ResetJoystickAxis, K2Node_DynamicCast_AsUTCJoystick_Component) == 0x000040, "Member 'BP_PlayerUTCInputComponent_C_BP_ResetJoystickAxis::K2Node_DynamicCast_AsUTCJoystick_Component' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_ResetJoystickAxis, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_PlayerUTCInputComponent_C_BP_ResetJoystickAxis::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.BP_ResetByConfig
// 0x0028 (0x0028 - 0x0000)
struct BP_PlayerUTCInputComponent_C_BP_ResetByConfig final
{
public:
	EUTCControlTypeEnum                           ControlType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	EUTCJoystickMode                              JoystickMode_0;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUTCComponent_C*                        CallFunc_GetComponentByControlType_OutComponent;   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetComponentByControlType_IsValid;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUTCJoystickComponent_C*                K2Node_DynamicCast_AsUTCJoystick_Component;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerUTCInputComponent_C_BP_ResetByConfig) == 0x000008, "Wrong alignment on BP_PlayerUTCInputComponent_C_BP_ResetByConfig");
static_assert(sizeof(BP_PlayerUTCInputComponent_C_BP_ResetByConfig) == 0x000028, "Wrong size on BP_PlayerUTCInputComponent_C_BP_ResetByConfig");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_ResetByConfig, ControlType) == 0x000000, "Member 'BP_PlayerUTCInputComponent_C_BP_ResetByConfig::ControlType' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_ResetByConfig, JoystickMode_0) == 0x000004, "Member 'BP_PlayerUTCInputComponent_C_BP_ResetByConfig::JoystickMode_0' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_ResetByConfig, CallFunc_GetComponentByControlType_OutComponent) == 0x000008, "Member 'BP_PlayerUTCInputComponent_C_BP_ResetByConfig::CallFunc_GetComponentByControlType_OutComponent' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_ResetByConfig, CallFunc_GetComponentByControlType_IsValid) == 0x000010, "Member 'BP_PlayerUTCInputComponent_C_BP_ResetByConfig::CallFunc_GetComponentByControlType_IsValid' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_ResetByConfig, K2Node_DynamicCast_AsUTCJoystick_Component) == 0x000018, "Member 'BP_PlayerUTCInputComponent_C_BP_ResetByConfig::K2Node_DynamicCast_AsUTCJoystick_Component' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_ResetByConfig, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_PlayerUTCInputComponent_C_BP_ResetByConfig::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.BP_InitTouchEventBinding
// 0x0038 (0x0038 - 0x0000)
struct BP_PlayerUTCInputComponent_C_BP_InitTouchEventBinding final
{
public:
	class UBP_DispatchInputComponent_C*           DispatchComponent;                                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EX6InputTouchEvent X6InputTouchEvent, ETouchIndex FingerIndex, const struct FVector& Location)> K2Node_CreateDelegate_OutputDelegate; // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_DispatchInputComponent_C*           CallFunc_AddComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_DispatchInputComponent_C*           CallFunc_GetComponentByClass_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerUTCInputComponent_C_BP_InitTouchEventBinding) == 0x000008, "Wrong alignment on BP_PlayerUTCInputComponent_C_BP_InitTouchEventBinding");
static_assert(sizeof(BP_PlayerUTCInputComponent_C_BP_InitTouchEventBinding) == 0x000038, "Wrong size on BP_PlayerUTCInputComponent_C_BP_InitTouchEventBinding");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_InitTouchEventBinding, DispatchComponent) == 0x000000, "Member 'BP_PlayerUTCInputComponent_C_BP_InitTouchEventBinding::DispatchComponent' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_InitTouchEventBinding, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_PlayerUTCInputComponent_C_BP_InitTouchEventBinding::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_InitTouchEventBinding, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'BP_PlayerUTCInputComponent_C_BP_InitTouchEventBinding::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_InitTouchEventBinding, CallFunc_AddComponentByClass_ReturnValue) == 0x000020, "Member 'BP_PlayerUTCInputComponent_C_BP_InitTouchEventBinding::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_InitTouchEventBinding, CallFunc_GetComponentByClass_ReturnValue) == 0x000028, "Member 'BP_PlayerUTCInputComponent_C_BP_InitTouchEventBinding::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_InitTouchEventBinding, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_PlayerUTCInputComponent_C_BP_InitTouchEventBinding::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.BP_InitTouch
// 0x0048 (0x0048 - 0x0000)
struct BP_PlayerUTCInputComponent_C_BP_InitTouch final
{
public:
	class UUserWidget*                            JoystickWidget;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EUTCControlTypeEnum                           ControlType;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUTCComponent_C*                        CallFunc_GetComponentByControlType_OutComponent;   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetComponentByControlType_IsValid;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIUTCWidget_C>         K2Node_DynamicCast_AsIUTCWidget;                   // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUTCJoystickComponent_C*                K2Node_DynamicCast_AsUTCJoystick_Component;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerUTCInputComponent_C_BP_InitTouch) == 0x000008, "Wrong alignment on BP_PlayerUTCInputComponent_C_BP_InitTouch");
static_assert(sizeof(BP_PlayerUTCInputComponent_C_BP_InitTouch) == 0x000048, "Wrong size on BP_PlayerUTCInputComponent_C_BP_InitTouch");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_InitTouch, JoystickWidget) == 0x000000, "Member 'BP_PlayerUTCInputComponent_C_BP_InitTouch::JoystickWidget' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_InitTouch, ControlType) == 0x000008, "Member 'BP_PlayerUTCInputComponent_C_BP_InitTouch::ControlType' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_InitTouch, IsValid) == 0x000009, "Member 'BP_PlayerUTCInputComponent_C_BP_InitTouch::IsValid' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_InitTouch, CallFunc_GetComponentByControlType_OutComponent) == 0x000010, "Member 'BP_PlayerUTCInputComponent_C_BP_InitTouch::CallFunc_GetComponentByControlType_OutComponent' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_InitTouch, CallFunc_GetComponentByControlType_IsValid) == 0x000018, "Member 'BP_PlayerUTCInputComponent_C_BP_InitTouch::CallFunc_GetComponentByControlType_IsValid' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_InitTouch, K2Node_DynamicCast_AsIUTCWidget) == 0x000020, "Member 'BP_PlayerUTCInputComponent_C_BP_InitTouch::K2Node_DynamicCast_AsIUTCWidget' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_InitTouch, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_PlayerUTCInputComponent_C_BP_InitTouch::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_InitTouch, K2Node_DynamicCast_AsUTCJoystick_Component) == 0x000038, "Member 'BP_PlayerUTCInputComponent_C_BP_InitTouch::K2Node_DynamicCast_AsUTCJoystick_Component' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_InitTouch, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_PlayerUTCInputComponent_C_BP_InitTouch::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.BP_GetJoysitckDefaultInfo
// 0x00A0 (0x00A0 - 0x0000)
struct BP_PlayerUTCInputComponent_C_BP_GetJoysitckDefaultInfo final
{
public:
	EUTCJoystickMode                              Mode;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Pos;                                               // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Size;                                              // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetJoystickConfig_CenterPos;              // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetJoystickConfig_VisualSize;             // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetJoystickConfig_ThumbSize;              // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetJoystickConfig_InteractionOrigin;      // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetJoystickConfig_InteractionSize;        // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetJoystickConfig_LockPos;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetJoystickConfig_UseFloat;               // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetJoystickConfig_EdgeGapSize;            // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerUTCInputComponent_C_BP_GetJoysitckDefaultInfo) == 0x000008, "Wrong alignment on BP_PlayerUTCInputComponent_C_BP_GetJoysitckDefaultInfo");
static_assert(sizeof(BP_PlayerUTCInputComponent_C_BP_GetJoysitckDefaultInfo) == 0x0000A0, "Wrong size on BP_PlayerUTCInputComponent_C_BP_GetJoysitckDefaultInfo");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_GetJoysitckDefaultInfo, Mode) == 0x000000, "Member 'BP_PlayerUTCInputComponent_C_BP_GetJoysitckDefaultInfo::Mode' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_GetJoysitckDefaultInfo, Pos) == 0x000008, "Member 'BP_PlayerUTCInputComponent_C_BP_GetJoysitckDefaultInfo::Pos' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_GetJoysitckDefaultInfo, Size) == 0x000018, "Member 'BP_PlayerUTCInputComponent_C_BP_GetJoysitckDefaultInfo::Size' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_GetJoysitckDefaultInfo, CallFunc_GetJoystickConfig_CenterPos) == 0x000020, "Member 'BP_PlayerUTCInputComponent_C_BP_GetJoysitckDefaultInfo::CallFunc_GetJoystickConfig_CenterPos' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_GetJoysitckDefaultInfo, CallFunc_GetJoystickConfig_VisualSize) == 0x000030, "Member 'BP_PlayerUTCInputComponent_C_BP_GetJoysitckDefaultInfo::CallFunc_GetJoystickConfig_VisualSize' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_GetJoysitckDefaultInfo, CallFunc_GetJoystickConfig_ThumbSize) == 0x000040, "Member 'BP_PlayerUTCInputComponent_C_BP_GetJoysitckDefaultInfo::CallFunc_GetJoystickConfig_ThumbSize' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_GetJoysitckDefaultInfo, CallFunc_GetJoystickConfig_InteractionOrigin) == 0x000050, "Member 'BP_PlayerUTCInputComponent_C_BP_GetJoysitckDefaultInfo::CallFunc_GetJoystickConfig_InteractionOrigin' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_GetJoysitckDefaultInfo, CallFunc_GetJoystickConfig_InteractionSize) == 0x000060, "Member 'BP_PlayerUTCInputComponent_C_BP_GetJoysitckDefaultInfo::CallFunc_GetJoystickConfig_InteractionSize' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_GetJoysitckDefaultInfo, CallFunc_GetJoystickConfig_LockPos) == 0x000070, "Member 'BP_PlayerUTCInputComponent_C_BP_GetJoysitckDefaultInfo::CallFunc_GetJoystickConfig_LockPos' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_GetJoysitckDefaultInfo, CallFunc_GetJoystickConfig_UseFloat) == 0x000071, "Member 'BP_PlayerUTCInputComponent_C_BP_GetJoysitckDefaultInfo::CallFunc_GetJoystickConfig_UseFloat' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_GetJoysitckDefaultInfo, CallFunc_GetJoystickConfig_EdgeGapSize) == 0x000078, "Member 'BP_PlayerUTCInputComponent_C_BP_GetJoysitckDefaultInfo::CallFunc_GetJoystickConfig_EdgeGapSize' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_GetJoysitckDefaultInfo, CallFunc_BreakVector2D_X) == 0x000088, "Member 'BP_PlayerUTCInputComponent_C_BP_GetJoysitckDefaultInfo::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_GetJoysitckDefaultInfo, CallFunc_BreakVector2D_Y) == 0x000090, "Member 'BP_PlayerUTCInputComponent_C_BP_GetJoysitckDefaultInfo::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_BP_GetJoysitckDefaultInfo, CallFunc_FMax_ReturnValue) == 0x000098, "Member 'BP_PlayerUTCInputComponent_C_BP_GetJoysitckDefaultInfo::CallFunc_FMax_ReturnValue' has a wrong offset!");

// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.AdjustWidgetInitPos
// 0x00B0 (0x00B0 - 0x0000)
struct BP_PlayerUTCInputComponent_C_AdjustWidgetInitPos final
{
public:
	struct FVector2D                              InVector2D;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              InSize;                                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUTCControlTypeEnum                           ControlType;                                       // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              OutVector2D;                                       // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InSizeY;                                           // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InSizeX;                                           // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OutY;                                              // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OutX;                                              // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RightToLeft_OutX;                         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DownToTop_OutY;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RightToLeft_OutX_1;                       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DownToTop_OutY_1;                         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerUTCInputComponent_C_AdjustWidgetInitPos) == 0x000008, "Wrong alignment on BP_PlayerUTCInputComponent_C_AdjustWidgetInitPos");
static_assert(sizeof(BP_PlayerUTCInputComponent_C_AdjustWidgetInitPos) == 0x0000B0, "Wrong size on BP_PlayerUTCInputComponent_C_AdjustWidgetInitPos");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_AdjustWidgetInitPos, InVector2D) == 0x000000, "Member 'BP_PlayerUTCInputComponent_C_AdjustWidgetInitPos::InVector2D' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_AdjustWidgetInitPos, InSize) == 0x000010, "Member 'BP_PlayerUTCInputComponent_C_AdjustWidgetInitPos::InSize' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_AdjustWidgetInitPos, ControlType) == 0x000020, "Member 'BP_PlayerUTCInputComponent_C_AdjustWidgetInitPos::ControlType' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_AdjustWidgetInitPos, OutVector2D) == 0x000028, "Member 'BP_PlayerUTCInputComponent_C_AdjustWidgetInitPos::OutVector2D' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_AdjustWidgetInitPos, InSizeY) == 0x000038, "Member 'BP_PlayerUTCInputComponent_C_AdjustWidgetInitPos::InSizeY' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_AdjustWidgetInitPos, InSizeX) == 0x000040, "Member 'BP_PlayerUTCInputComponent_C_AdjustWidgetInitPos::InSizeX' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_AdjustWidgetInitPos, OutY) == 0x000048, "Member 'BP_PlayerUTCInputComponent_C_AdjustWidgetInitPos::OutY' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_AdjustWidgetInitPos, OutX) == 0x000050, "Member 'BP_PlayerUTCInputComponent_C_AdjustWidgetInitPos::OutX' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_AdjustWidgetInitPos, K2Node_SwitchEnum_CmpSuccess) == 0x000058, "Member 'BP_PlayerUTCInputComponent_C_AdjustWidgetInitPos::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_AdjustWidgetInitPos, CallFunc_RightToLeft_OutX) == 0x000060, "Member 'BP_PlayerUTCInputComponent_C_AdjustWidgetInitPos::CallFunc_RightToLeft_OutX' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_AdjustWidgetInitPos, CallFunc_BreakVector2D_X) == 0x000068, "Member 'BP_PlayerUTCInputComponent_C_AdjustWidgetInitPos::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_AdjustWidgetInitPos, CallFunc_BreakVector2D_Y) == 0x000070, "Member 'BP_PlayerUTCInputComponent_C_AdjustWidgetInitPos::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_AdjustWidgetInitPos, CallFunc_BreakVector2D_X_1) == 0x000078, "Member 'BP_PlayerUTCInputComponent_C_AdjustWidgetInitPos::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_AdjustWidgetInitPos, CallFunc_BreakVector2D_Y_1) == 0x000080, "Member 'BP_PlayerUTCInputComponent_C_AdjustWidgetInitPos::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_AdjustWidgetInitPos, CallFunc_DownToTop_OutY) == 0x000088, "Member 'BP_PlayerUTCInputComponent_C_AdjustWidgetInitPos::CallFunc_DownToTop_OutY' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_AdjustWidgetInitPos, CallFunc_RightToLeft_OutX_1) == 0x000090, "Member 'BP_PlayerUTCInputComponent_C_AdjustWidgetInitPos::CallFunc_RightToLeft_OutX_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_AdjustWidgetInitPos, CallFunc_DownToTop_OutY_1) == 0x000098, "Member 'BP_PlayerUTCInputComponent_C_AdjustWidgetInitPos::CallFunc_DownToTop_OutY_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_AdjustWidgetInitPos, CallFunc_MakeVector2D_ReturnValue) == 0x0000A0, "Member 'BP_PlayerUTCInputComponent_C_AdjustWidgetInitPos::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.AdjustBoundOrigin
// 0x00E0 (0x00E0 - 0x0000)
struct BP_PlayerUTCInputComponent_C_AdjustBoundOrigin final
{
public:
	struct FVector2D                              InOrigin;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              InSize;                                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUTCControlTypeEnum                           ControlType;                                       // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              OutOrigin;                                         // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InSizeY;                                           // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InSizeX;                                           // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InY;                                               // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InX;                                               // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OutY;                                              // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OutX;                                              // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RightToLeft_OutX;                         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DownToTop_OutY;                           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RightToLeft_OutX_1;                       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DownToTop_OutY_1;                         // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerUTCInputComponent_C_AdjustBoundOrigin) == 0x000008, "Wrong alignment on BP_PlayerUTCInputComponent_C_AdjustBoundOrigin");
static_assert(sizeof(BP_PlayerUTCInputComponent_C_AdjustBoundOrigin) == 0x0000E0, "Wrong size on BP_PlayerUTCInputComponent_C_AdjustBoundOrigin");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_AdjustBoundOrigin, InOrigin) == 0x000000, "Member 'BP_PlayerUTCInputComponent_C_AdjustBoundOrigin::InOrigin' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_AdjustBoundOrigin, InSize) == 0x000010, "Member 'BP_PlayerUTCInputComponent_C_AdjustBoundOrigin::InSize' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_AdjustBoundOrigin, ControlType) == 0x000020, "Member 'BP_PlayerUTCInputComponent_C_AdjustBoundOrigin::ControlType' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_AdjustBoundOrigin, OutOrigin) == 0x000028, "Member 'BP_PlayerUTCInputComponent_C_AdjustBoundOrigin::OutOrigin' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_AdjustBoundOrigin, InSizeY) == 0x000038, "Member 'BP_PlayerUTCInputComponent_C_AdjustBoundOrigin::InSizeY' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_AdjustBoundOrigin, InSizeX) == 0x000040, "Member 'BP_PlayerUTCInputComponent_C_AdjustBoundOrigin::InSizeX' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_AdjustBoundOrigin, InY) == 0x000048, "Member 'BP_PlayerUTCInputComponent_C_AdjustBoundOrigin::InY' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_AdjustBoundOrigin, InX) == 0x000050, "Member 'BP_PlayerUTCInputComponent_C_AdjustBoundOrigin::InX' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_AdjustBoundOrigin, OutY) == 0x000058, "Member 'BP_PlayerUTCInputComponent_C_AdjustBoundOrigin::OutY' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_AdjustBoundOrigin, OutX) == 0x000060, "Member 'BP_PlayerUTCInputComponent_C_AdjustBoundOrigin::OutX' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_AdjustBoundOrigin, K2Node_SwitchEnum_CmpSuccess) == 0x000068, "Member 'BP_PlayerUTCInputComponent_C_AdjustBoundOrigin::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_AdjustBoundOrigin, CallFunc_BreakVector2D_X) == 0x000070, "Member 'BP_PlayerUTCInputComponent_C_AdjustBoundOrigin::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_AdjustBoundOrigin, CallFunc_BreakVector2D_Y) == 0x000078, "Member 'BP_PlayerUTCInputComponent_C_AdjustBoundOrigin::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_AdjustBoundOrigin, CallFunc_BreakVector2D_X_1) == 0x000080, "Member 'BP_PlayerUTCInputComponent_C_AdjustBoundOrigin::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_AdjustBoundOrigin, CallFunc_BreakVector2D_Y_1) == 0x000088, "Member 'BP_PlayerUTCInputComponent_C_AdjustBoundOrigin::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_AdjustBoundOrigin, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000090, "Member 'BP_PlayerUTCInputComponent_C_AdjustBoundOrigin::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_AdjustBoundOrigin, CallFunc_RightToLeft_OutX) == 0x000098, "Member 'BP_PlayerUTCInputComponent_C_AdjustBoundOrigin::CallFunc_RightToLeft_OutX' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_AdjustBoundOrigin, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000A0, "Member 'BP_PlayerUTCInputComponent_C_AdjustBoundOrigin::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_AdjustBoundOrigin, CallFunc_DownToTop_OutY) == 0x0000A8, "Member 'BP_PlayerUTCInputComponent_C_AdjustBoundOrigin::CallFunc_DownToTop_OutY' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_AdjustBoundOrigin, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0000B0, "Member 'BP_PlayerUTCInputComponent_C_AdjustBoundOrigin::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_AdjustBoundOrigin, CallFunc_RightToLeft_OutX_1) == 0x0000B8, "Member 'BP_PlayerUTCInputComponent_C_AdjustBoundOrigin::CallFunc_RightToLeft_OutX_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_AdjustBoundOrigin, CallFunc_MakeVector2D_ReturnValue) == 0x0000C0, "Member 'BP_PlayerUTCInputComponent_C_AdjustBoundOrigin::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_AdjustBoundOrigin, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x0000D0, "Member 'BP_PlayerUTCInputComponent_C_AdjustBoundOrigin::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerUTCInputComponent_C_AdjustBoundOrigin, CallFunc_DownToTop_OutY_1) == 0x0000D8, "Member 'BP_PlayerUTCInputComponent_C_AdjustBoundOrigin::CallFunc_DownToTop_OutY_1' has a wrong offset!");

}

