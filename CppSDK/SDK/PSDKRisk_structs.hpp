#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PSDKRisk

#include "Basic.hpp"

#include "PSDKConfig_structs.hpp"
#include "PSDKBasic_structs.hpp"


namespace SDK
{

// ScriptStruct PSDKRisk.PSdkCaptchaLanguagesRow
// 0x0000 (0x00D8 - 0x00D8)
struct FPSdkCaptchaLanguagesRow final : public FPSDKLanguageTableRowBase
{
};
static_assert(alignof(FPSdkCaptchaLanguagesRow) == 0x000008, "Wrong alignment on FPSdkCaptchaLanguagesRow");
static_assert(sizeof(FPSdkCaptchaLanguagesRow) == 0x0000D8, "Wrong size on FPSdkCaptchaLanguagesRow");

// ScriptStruct PSDKRisk.PSdkPaperRiskInfoModel
// 0x0030 (0x0030 - 0x0000)
struct FPSdkPaperRiskInfoModel final
{
public:
	class FString                                 nonce;                                             // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 provider;                                          // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         phone;                                             // 0x0020(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FPSdkPaperRiskInfoModel) == 0x000008, "Wrong alignment on FPSdkPaperRiskInfoModel");
static_assert(sizeof(FPSdkPaperRiskInfoModel) == 0x000030, "Wrong size on FPSdkPaperRiskInfoModel");
static_assert(offsetof(FPSdkPaperRiskInfoModel, nonce) == 0x000000, "Member 'FPSdkPaperRiskInfoModel::nonce' has a wrong offset!");
static_assert(offsetof(FPSdkPaperRiskInfoModel, provider) == 0x000010, "Member 'FPSdkPaperRiskInfoModel::provider' has a wrong offset!");
static_assert(offsetof(FPSdkPaperRiskInfoModel, phone) == 0x000020, "Member 'FPSdkPaperRiskInfoModel::phone' has a wrong offset!");

// ScriptStruct PSDKRisk.PSdkPaperRiskDataModel
// 0x0030 (0x0030 - 0x0000)
struct FPSdkPaperRiskDataModel final
{
public:
	struct FPSdkPaperRiskInfoModel                Risk;                                              // 0x0000(0x0030)(NativeAccessSpecifierPublic)
};
static_assert(alignof(FPSdkPaperRiskDataModel) == 0x000008, "Wrong alignment on FPSdkPaperRiskDataModel");
static_assert(sizeof(FPSdkPaperRiskDataModel) == 0x000030, "Wrong size on FPSdkPaperRiskDataModel");
static_assert(offsetof(FPSdkPaperRiskDataModel, Risk) == 0x000000, "Member 'FPSdkPaperRiskDataModel::Risk' has a wrong offset!");

// ScriptStruct PSDKRisk.PSdkPaperRiskModel
// 0x0030 (0x0068 - 0x0038)
struct FPSdkPaperRiskModel final : public FPSBffBasicModel
{
public:
	struct FPSdkPaperRiskDataModel                Data;                                              // 0x0038(0x0030)(NativeAccessSpecifierPublic)
};
static_assert(alignof(FPSdkPaperRiskModel) == 0x000008, "Wrong alignment on FPSdkPaperRiskModel");
static_assert(sizeof(FPSdkPaperRiskModel) == 0x000068, "Wrong size on FPSdkPaperRiskModel");
static_assert(offsetof(FPSdkPaperRiskModel, Data) == 0x000038, "Member 'FPSdkPaperRiskModel::Data' has a wrong offset!");

// ScriptStruct PSDKRisk.PSdkPaperRiskCaptchaModel
// 0x0010 (0x0010 - 0x0000)
struct FPSdkPaperRiskCaptchaModel final
{
public:
	class FString                                 captcha_id;                                        // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FPSdkPaperRiskCaptchaModel) == 0x000008, "Wrong alignment on FPSdkPaperRiskCaptchaModel");
static_assert(sizeof(FPSdkPaperRiskCaptchaModel) == 0x000010, "Wrong size on FPSdkPaperRiskCaptchaModel");
static_assert(offsetof(FPSdkPaperRiskCaptchaModel, captcha_id) == 0x000000, "Member 'FPSdkPaperRiskCaptchaModel::captcha_id' has a wrong offset!");

// ScriptStruct PSDKRisk.PSdkPaperRiskConfigDataModel
// 0x0028 (0x0028 - 0x0000)
struct FPSdkPaperRiskConfigDataModel final
{
public:
	struct FPSdkPaperRiskCaptchaModel             Captcha;                                           // 0x0000(0x0010)(NativeAccessSpecifierPublic)
	class FString                                 Interactive_msg;                                   // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ccr;                                               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FPSdkPaperRiskConfigDataModel) == 0x000008, "Wrong alignment on FPSdkPaperRiskConfigDataModel");
static_assert(sizeof(FPSdkPaperRiskConfigDataModel) == 0x000028, "Wrong size on FPSdkPaperRiskConfigDataModel");
static_assert(offsetof(FPSdkPaperRiskConfigDataModel, Captcha) == 0x000000, "Member 'FPSdkPaperRiskConfigDataModel::Captcha' has a wrong offset!");
static_assert(offsetof(FPSdkPaperRiskConfigDataModel, Interactive_msg) == 0x000010, "Member 'FPSdkPaperRiskConfigDataModel::Interactive_msg' has a wrong offset!");
static_assert(offsetof(FPSdkPaperRiskConfigDataModel, ccr) == 0x000020, "Member 'FPSdkPaperRiskConfigDataModel::ccr' has a wrong offset!");

// ScriptStruct PSDKRisk.PSdkPaperRiskConfigModel
// 0x0028 (0x0060 - 0x0038)
struct FPSdkPaperRiskConfigModel final : public FPSBffBasicModel
{
public:
	struct FPSdkPaperRiskConfigDataModel          Data;                                              // 0x0038(0x0028)(NativeAccessSpecifierPublic)
};
static_assert(alignof(FPSdkPaperRiskConfigModel) == 0x000008, "Wrong alignment on FPSdkPaperRiskConfigModel");
static_assert(sizeof(FPSdkPaperRiskConfigModel) == 0x000060, "Wrong size on FPSdkPaperRiskConfigModel");
static_assert(offsetof(FPSdkPaperRiskConfigModel, Data) == 0x000038, "Member 'FPSdkPaperRiskConfigModel::Data' has a wrong offset!");

}

