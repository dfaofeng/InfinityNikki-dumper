#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UTCJoystickComponent

#include "Basic.hpp"

#include "UTCJoystickComponent_classes.hpp"
#include "UTCJoystickComponent_parameters.hpp"


namespace SDK
{

// Function UTCJoystickComponent.UTCJoystickComponent_C.UpdateWidgetSize
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Widget_Class                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Use_Widget_Size_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Hide_If_Unpossessed                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Is_Initialized                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCJoystickComponent_C::UpdateWidgetSize(class UClass* Widget_Class, bool Use_Widget_Size_0, bool Hide_If_Unpossessed, bool* Is_Initialized)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "UpdateWidgetSize");

	Params::UTCJoystickComponent_C_UpdateWidgetSize Parms{};

	Parms.Widget_Class = Widget_Class;
	Parms.Use_Widget_Size_0 = Use_Widget_Size_0;
	Parms.Hide_If_Unpossessed = Hide_If_Unpossessed;

	UObject::ProcessEvent(Func, &Parms);

	if (Is_Initialized != nullptr)
		*Is_Initialized = Parms.Is_Initialized;
}


// Function UTCJoystickComponent.UTCJoystickComponent_C.UpdateDebugWidget
// (Public, BlueprintCallable, BlueprintEvent)

void UUTCJoystickComponent_C::UpdateDebugWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "UpdateDebugWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UTCJoystickComponent.UTCJoystickComponent_C.Update Temp Variables
// (Public, BlueprintCallable, BlueprintEvent)

void UUTCJoystickComponent_C::Update_Temp_Variables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "Update Temp Variables");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UTCJoystickComponent.UTCJoystickComponent_C.Update Magnituge By Widget Size
// (Public, BlueprintCallable, BlueprintEvent)

void UUTCJoystickComponent_C::Update_Magnituge_By_Widget_Size()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "Update Magnituge By Widget Size");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UTCJoystickComponent.UTCJoystickComponent_C.Update Lock Axes
// (Public, BlueprintCallable, BlueprintEvent)

void UUTCJoystickComponent_C::Update_Lock_Axes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "Update Lock Axes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UTCJoystickComponent.UTCJoystickComponent_C.Update Floating
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector*                         JoystickLocation                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         PickerLocation                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCJoystickComponent_C::Update_Floating(struct FVector* JoystickLocation, struct FVector* PickerLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "Update Floating");

	Params::UTCJoystickComponent_C_Update_Floating Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (JoystickLocation != nullptr)
		*JoystickLocation = std::move(Parms.JoystickLocation);

	if (PickerLocation != nullptr)
		*PickerLocation = std::move(Parms.PickerLocation);
}


// Function UTCJoystickComponent.UTCJoystickComponent_C.Update Fixed Location
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Is_Viewport_Size_Changed                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCJoystickComponent_C::Update_Fixed_Location(bool Is_Viewport_Size_Changed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "Update Fixed Location");

	Params::UTCJoystickComponent_C_Update_Fixed_Location Parms{};

	Parms.Is_Viewport_Size_Changed = Is_Viewport_Size_Changed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCJoystickComponent.UTCJoystickComponent_C.Update Axis Vector
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D*                       Axis                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCJoystickComponent_C::Update_Axis_Vector(struct FVector2D* Axis)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "Update Axis Vector");

	Params::UTCJoystickComponent_C_Update_Axis_Vector Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Axis != nullptr)
		*Axis = std::move(Parms.Axis);
}


// Function UTCJoystickComponent.UTCJoystickComponent_C.Snap Widget to Bounds
// (Public, BlueprintCallable, BlueprintEvent)

void UUTCJoystickComponent_C::Snap_Widget_to_Bounds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "Snap Widget to Bounds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UTCJoystickComponent.UTCJoystickComponent_C.Snap Bounds to Fixed Location
// (Public, BlueprintCallable, BlueprintEvent)

void UUTCJoystickComponent_C::Snap_Bounds_to_Fixed_Location()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "Snap Bounds to Fixed Location");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UTCJoystickComponent.UTCJoystickComponent_C.SetWidgetVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewVisibility                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCJoystickComponent_C::SetWidgetVisibility(bool NewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "SetWidgetVisibility");

	Params::UTCJoystickComponent_C_SetWidgetVisibility Parms{};

	Parms.NewVisibility = NewVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCJoystickComponent.UTCJoystickComponent_C.Setup Widget
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Widget__with_IUTCWIdget_Interface_                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Use_Widget_Size__back_texture_size_                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Hide_if_Pawn_Unpossessed                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UUserWidget*                      JoystickWgt                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UUTCJoystickComponent_C::Setup_Widget(class UClass* Widget__with_IUTCWIdget_Interface_, bool Use_Widget_Size__back_texture_size_, bool Hide_if_Pawn_Unpossessed, class UUserWidget* JoystickWgt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "Setup Widget");

	Params::UTCJoystickComponent_C_Setup_Widget Parms{};

	Parms.Widget__with_IUTCWIdget_Interface_ = Widget__with_IUTCWIdget_Interface_;
	Parms.Use_Widget_Size__back_texture_size_ = Use_Widget_Size__back_texture_size_;
	Parms.Hide_if_Pawn_Unpossessed = Hide_if_Pawn_Unpossessed;
	Parms.JoystickWgt = JoystickWgt;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCJoystickComponent.UTCJoystickComponent_C.Setup Fixed Location
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Is_Enabled                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 Fixed_Location_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    In_Percent                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Imeediate_Recalculation                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Adjust_Bounds_to_Fixed_Location_0                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCJoystickComponent_C::Setup_Fixed_Location(bool Is_Enabled, const struct FVector2D& Fixed_Location_0, bool In_Percent, bool Imeediate_Recalculation, bool Adjust_Bounds_to_Fixed_Location_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "Setup Fixed Location");

	Params::UTCJoystickComponent_C_Setup_Fixed_Location Parms{};

	Parms.Is_Enabled = Is_Enabled;
	Parms.Fixed_Location_0 = std::move(Fixed_Location_0);
	Parms.In_Percent = In_Percent;
	Parms.Imeediate_Recalculation = Imeediate_Recalculation;
	Parms.Adjust_Bounds_to_Fixed_Location_0 = Adjust_Bounds_to_Fixed_Location_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCJoystickComponent.UTCJoystickComponent_C.SetJoystickMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    JoystickMode                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCJoystickComponent_C::SetJoystickMode(bool JoystickMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "SetJoystickMode");

	Params::UTCJoystickComponent_C_SetJoystickMode Parms{};

	Parms.JoystickMode = JoystickMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCJoystickComponent.UTCJoystickComponent_C.ResetWidgetPos
// (Public, BlueprintCallable, BlueprintEvent)

void UUTCJoystickComponent_C::ResetWidgetPos()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "ResetWidgetPos");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UTCJoystickComponent.UTCJoystickComponent_C.ResetClamped
// (BlueprintCallable, BlueprintEvent)

void UUTCJoystickComponent_C::ResetClamped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "ResetClamped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UTCJoystickComponent.UTCJoystickComponent_C.ReleaseTouch
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCJoystickComponent_C::ReleaseTouch(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "ReleaseTouch");

	Params::UTCJoystickComponent_C_ReleaseTouch Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCJoystickComponent.UTCJoystickComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCJoystickComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "ReceiveTick");

	Params::UTCJoystickComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCJoystickComponent.UTCJoystickComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UUTCJoystickComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UTCJoystickComponent.UTCJoystickComponent_C.On Y Axis Changed Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCJoystickComponent_C::On_Y_Axis_Changed_Event(double Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "On Y Axis Changed Event");

	Params::UTCJoystickComponent_C_On_Y_Axis_Changed_Event Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCJoystickComponent.UTCJoystickComponent_C.On X Axis Changed Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCJoystickComponent_C::On_X_Axis_Changed_Event(double Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "On X Axis Changed Event");

	Params::UTCJoystickComponent_C_On_X_Axis_Changed_Event Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCJoystickComponent.UTCJoystickComponent_C.On Viewport Size Is Changed
// (Public, BlueprintCallable, BlueprintEvent)

void UUTCJoystickComponent_C::On_Viewport_Size_Is_Changed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "On Viewport Size Is Changed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UTCJoystickComponent.UTCJoystickComponent_C.On Viewport Size Changed Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector2D&                 Previous_Size                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 Updated_Size                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCJoystickComponent_C::On_Viewport_Size_Changed_Event(const struct FVector2D& Previous_Size, const struct FVector2D& Updated_Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "On Viewport Size Changed Event");

	Params::UTCJoystickComponent_C_On_Viewport_Size_Changed_Event Parms{};

	Parms.Previous_Size = std::move(Previous_Size);
	Parms.Updated_Size = std::move(Updated_Size);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCJoystickComponent.UTCJoystickComponent_C.On Picker Location Changed Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCJoystickComponent_C::On_Picker_Location_Changed_Event(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "On Picker Location Changed Event");

	Params::UTCJoystickComponent_C_On_Picker_Location_Changed_Event Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCJoystickComponent.UTCJoystickComponent_C.On Pawn Unpossesed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Old_Controller                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UUTCJoystickComponent_C::On_Pawn_Unpossesed(class AController* Old_Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "On Pawn Unpossesed");

	Params::UTCJoystickComponent_C_On_Pawn_Unpossesed Parms{};

	Parms.Old_Controller = Old_Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCJoystickComponent.UTCJoystickComponent_C.On Pawn Possesed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      New_Controller                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UUTCJoystickComponent_C::On_Pawn_Possesed(class AController* New_Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "On Pawn Possesed");

	Params::UTCJoystickComponent_C_On_Pawn_Possesed Parms{};

	Parms.New_Controller = New_Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCJoystickComponent.UTCJoystickComponent_C.On Joystick Released Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCJoystickComponent_C::On_Joystick_Released_Event(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "On Joystick Released Event");

	Params::UTCJoystickComponent_C_On_Joystick_Released_Event Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCJoystickComponent.UTCJoystickComponent_C.On Joystick Pressed Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCJoystickComponent_C::On_Joystick_Pressed_Event(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "On Joystick Pressed Event");

	Params::UTCJoystickComponent_C_On_Joystick_Pressed_Event Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCJoystickComponent.UTCJoystickComponent_C.On Joystick Location Changed Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCJoystickComponent_C::On_Joystick_Location_Changed_Event(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "On Joystick Location Changed Event");

	Params::UTCJoystickComponent_C_On_Joystick_Location_Changed_Event Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCJoystickComponent.UTCJoystickComponent_C.On Event Touch Released
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETouchIndex                             FingerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCJoystickComponent_C::On_Event_Touch_Released(const struct FVector& Location, ETouchIndex FingerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "On Event Touch Released");

	Params::UTCJoystickComponent_C_On_Event_Touch_Released Parms{};

	Parms.Location = std::move(Location);
	Parms.FingerIndex = FingerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCJoystickComponent.UTCJoystickComponent_C.On Event Touch Pressed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETouchIndex                             FingerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCJoystickComponent_C::On_Event_Touch_Pressed(const struct FVector& Location, ETouchIndex FingerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "On Event Touch Pressed");

	Params::UTCJoystickComponent_C_On_Event_Touch_Pressed Parms{};

	Parms.Location = std::move(Location);
	Parms.FingerIndex = FingerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCJoystickComponent.UTCJoystickComponent_C.On Event Touch Moved
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETouchIndex                             FingerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCJoystickComponent_C::On_Event_Touch_Moved(const struct FVector& Location, ETouchIndex FingerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "On Event Touch Moved");

	Params::UTCJoystickComponent_C_On_Event_Touch_Moved Parms{};

	Parms.Location = std::move(Location);
	Parms.FingerIndex = FingerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCJoystickComponent.UTCJoystickComponent_C.On Event Touch Canceled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETouchIndex                             FingerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCJoystickComponent_C::On_Event_Touch_Canceled(const struct FVector& Location, ETouchIndex FingerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "On Event Touch Canceled");

	Params::UTCJoystickComponent_C_On_Event_Touch_Canceled Parms{};

	Parms.Location = std::move(Location);
	Parms.FingerIndex = FingerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCJoystickComponent.UTCJoystickComponent_C.On Axes Changed Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  XAxis                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  YAxis                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Direction_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCJoystickComponent_C::On_Axes_Changed_Event(double XAxis, double YAxis, const struct FVector& Direction_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "On Axes Changed Event");

	Params::UTCJoystickComponent_C_On_Axes_Changed_Event Parms{};

	Parms.XAxis = XAxis;
	Parms.YAxis = YAxis;
	Parms.Direction_0 = std::move(Direction_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCJoystickComponent.UTCJoystickComponent_C.IsWidgetVisible
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsVisible                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCJoystickComponent_C::IsWidgetVisible(bool* IsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "IsWidgetVisible");

	Params::UTCJoystickComponent_C_IsWidgetVisible Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsVisible != nullptr)
		*IsVisible = Parms.IsVisible;
}


// Function UTCJoystickComponent.UTCJoystickComponent_C.IsMagnitudeLowerThanMax
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   IsLowerThanMax                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCJoystickComponent_C::IsMagnitudeLowerThanMax(bool* IsLowerThanMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "IsMagnitudeLowerThanMax");

	Params::UTCJoystickComponent_C_IsMagnitudeLowerThanMax Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsLowerThanMax != nullptr)
		*IsLowerThanMax = Parms.IsLowerThanMax;
}


// Function UTCJoystickComponent.UTCJoystickComponent_C.InitializeDebugWidget
// (Public, BlueprintCallable, BlueprintEvent)

void UUTCJoystickComponent_C::InitializeDebugWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "InitializeDebugWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UTCJoystickComponent.UTCJoystickComponent_C.GetEdgeGapModifiedLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   PressLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         ModifiedLocation                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCJoystickComponent_C::GetEdgeGapModifiedLocation(const struct FVector& PressLocation, struct FVector* ModifiedLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "GetEdgeGapModifiedLocation");

	Params::UTCJoystickComponent_C_GetEdgeGapModifiedLocation Parms{};

	Parms.PressLocation = std::move(PressLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (ModifiedLocation != nullptr)
		*ModifiedLocation = std::move(Parms.ModifiedLocation);
}


// Function UTCJoystickComponent.UTCJoystickComponent_C.Get Joystick Widget Instance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget**                     Joystick_Widget_Instance                               (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UUTCJoystickComponent_C::Get_Joystick_Widget_Instance(class UUserWidget** Joystick_Widget_Instance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "Get Joystick Widget Instance");

	Params::UTCJoystickComponent_C_Get_Joystick_Widget_Instance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Joystick_Widget_Instance != nullptr)
		*Joystick_Widget_Instance = Parms.Joystick_Widget_Instance;
}


// Function UTCJoystickComponent.UTCJoystickComponent_C.ForceTickOnce
// (BlueprintCallable, BlueprintEvent)

void UUTCJoystickComponent_C::ForceTickOnce()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "ForceTickOnce");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UTCJoystickComponent.UTCJoystickComponent_C.ExecuteUbergraph_UTCJoystickComponent
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCJoystickComponent_C::ExecuteUbergraph_UTCJoystickComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "ExecuteUbergraph_UTCJoystickComponent");

	Params::UTCJoystickComponent_C_ExecuteUbergraph_UTCJoystickComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCJoystickComponent.UTCJoystickComponent_C.Destroy Widget
// (BlueprintCallable, BlueprintEvent)

void UUTCJoystickComponent_C::Destroy_Widget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "Destroy Widget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UTCJoystickComponent.UTCJoystickComponent_C.CheckJoystickMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   CurrentJoystickMode                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCJoystickComponent_C::CheckJoystickMode(bool* CurrentJoystickMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "CheckJoystickMode");

	Params::UTCJoystickComponent_C_CheckJoystickMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CurrentJoystickMode != nullptr)
		*CurrentJoystickMode = Parms.CurrentJoystickMode;
}


// Function UTCJoystickComponent.UTCJoystickComponent_C.AjustLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Pos                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   res                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCJoystickComponent_C::AjustLocation(const struct FVector& Pos, bool* res)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "AjustLocation");

	Params::UTCJoystickComponent_C_AjustLocation Parms{};

	Parms.Pos = std::move(Pos);

	UObject::ProcessEvent(Func, &Parms);

	if (res != nullptr)
		*res = Parms.res;
}


// Function UTCJoystickComponent.UTCJoystickComponent_C.AddEventInput
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             PropertyName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsAccumulate                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCJoystickComponent_C::AddEventInput(class FName PropertyName, const struct FVector& Value, bool IsAccumulate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "AddEventInput");

	Params::UTCJoystickComponent_C_AddEventInput Parms{};

	Parms.PropertyName = PropertyName;
	Parms.Value = std::move(Value);
	Parms.IsAccumulate = IsAccumulate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCJoystickComponent.UTCJoystickComponent_C.GetModuleName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UUTCJoystickComponent_C::GetModuleName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCJoystickComponent_C", "GetModuleName");

	Params::UTCJoystickComponent_C_GetModuleName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

