#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UTCComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "EDeviceScreenSizeType_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function UTCComponent.UTCComponent_C.Add Finger Location
// 0x0030 (0x0030 - 0x0000)
struct UTCComponent_C_Add_Finger_Location final
{
public:
	ETouchIndex                                   Finger_Index;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCComponent_C_Add_Finger_Location) == 0x000008, "Wrong alignment on UTCComponent_C_Add_Finger_Location");
static_assert(sizeof(UTCComponent_C_Add_Finger_Location) == 0x000030, "Wrong size on UTCComponent_C_Add_Finger_Location");
static_assert(offsetof(UTCComponent_C_Add_Finger_Location, Finger_Index) == 0x000000, "Member 'UTCComponent_C_Add_Finger_Location::Finger_Index' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Add_Finger_Location, Location) == 0x000008, "Member 'UTCComponent_C_Add_Finger_Location::Location' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Add_Finger_Location, Result) == 0x000020, "Member 'UTCComponent_C_Add_Finger_Location::Result' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Add_Finger_Location, CallFunc_Array_Add_ReturnValue) == 0x000024, "Member 'UTCComponent_C_Add_Finger_Location::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Add_Finger_Location, CallFunc_Array_Add_ReturnValue_1) == 0x000028, "Member 'UTCComponent_C_Add_Finger_Location::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Add_Finger_Location, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00002C, "Member 'UTCComponent_C_Add_Finger_Location::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function UTCComponent.UTCComponent_C.BP_GetDeviceType
// 0x0001 (0x0001 - 0x0000)
struct UTCComponent_C_BP_GetDeviceType final
{
public:
	EDeviceScreenSizeType                         NewParam;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCComponent_C_BP_GetDeviceType) == 0x000001, "Wrong alignment on UTCComponent_C_BP_GetDeviceType");
static_assert(sizeof(UTCComponent_C_BP_GetDeviceType) == 0x000001, "Wrong size on UTCComponent_C_BP_GetDeviceType");
static_assert(offsetof(UTCComponent_C_BP_GetDeviceType, NewParam) == 0x000000, "Member 'UTCComponent_C_BP_GetDeviceType::NewParam' has a wrong offset!");

// Function UTCComponent.UTCComponent_C.BP_GetJoystickOffset
// 0x0018 (0x0018 - 0x0000)
struct UTCComponent_C_BP_GetJoystickOffset final
{
public:
	struct FVector2D                              Offset;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Scale;                                             // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCComponent_C_BP_GetJoystickOffset) == 0x000008, "Wrong alignment on UTCComponent_C_BP_GetJoystickOffset");
static_assert(sizeof(UTCComponent_C_BP_GetJoystickOffset) == 0x000018, "Wrong size on UTCComponent_C_BP_GetJoystickOffset");
static_assert(offsetof(UTCComponent_C_BP_GetJoystickOffset, Offset) == 0x000000, "Member 'UTCComponent_C_BP_GetJoystickOffset::Offset' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_BP_GetJoystickOffset, Scale) == 0x000010, "Member 'UTCComponent_C_BP_GetJoystickOffset::Scale' has a wrong offset!");

// Function UTCComponent.UTCComponent_C.BP_GetPixelRateStandardToReal
// 0x0008 (0x0008 - 0x0000)
struct UTCComponent_C_BP_GetPixelRateStandardToReal final
{
public:
	double                                        Rate;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCComponent_C_BP_GetPixelRateStandardToReal) == 0x000008, "Wrong alignment on UTCComponent_C_BP_GetPixelRateStandardToReal");
static_assert(sizeof(UTCComponent_C_BP_GetPixelRateStandardToReal) == 0x000008, "Wrong size on UTCComponent_C_BP_GetPixelRateStandardToReal");
static_assert(offsetof(UTCComponent_C_BP_GetPixelRateStandardToReal, Rate) == 0x000000, "Member 'UTCComponent_C_BP_GetPixelRateStandardToReal::Rate' has a wrong offset!");

// Function UTCComponent.UTCComponent_C.BP_GetTouchSensitivity
// 0x0008 (0x0008 - 0x0000)
struct UTCComponent_C_BP_GetTouchSensitivity final
{
public:
	double                                        Rate;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCComponent_C_BP_GetTouchSensitivity) == 0x000008, "Wrong alignment on UTCComponent_C_BP_GetTouchSensitivity");
static_assert(sizeof(UTCComponent_C_BP_GetTouchSensitivity) == 0x000008, "Wrong size on UTCComponent_C_BP_GetTouchSensitivity");
static_assert(offsetof(UTCComponent_C_BP_GetTouchSensitivity, Rate) == 0x000000, "Member 'UTCComponent_C_BP_GetTouchSensitivity::Rate' has a wrong offset!");

// Function UTCComponent.UTCComponent_C.Check Bounds
// 0x0078 (0x0078 - 0x0000)
struct UTCComponent_C_Check_Bounds final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          In_Bounds;                                         // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          out_Bounds;                                        // 0x0019(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          In_Bounds_by_X;                                    // 0x001A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          In_Bounds_by_Y;                                    // 0x001B(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Without_Bounds;                                    // 0x001C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Bounding_Enabled_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_1;         // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCComponent_C_Check_Bounds) == 0x000008, "Wrong alignment on UTCComponent_C_Check_Bounds");
static_assert(sizeof(UTCComponent_C_Check_Bounds) == 0x000078, "Wrong size on UTCComponent_C_Check_Bounds");
static_assert(offsetof(UTCComponent_C_Check_Bounds, Location) == 0x000000, "Member 'UTCComponent_C_Check_Bounds::Location' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Check_Bounds, In_Bounds) == 0x000018, "Member 'UTCComponent_C_Check_Bounds::In_Bounds' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Check_Bounds, out_Bounds) == 0x000019, "Member 'UTCComponent_C_Check_Bounds::out_Bounds' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Check_Bounds, In_Bounds_by_X) == 0x00001A, "Member 'UTCComponent_C_Check_Bounds::In_Bounds_by_X' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Check_Bounds, In_Bounds_by_Y) == 0x00001B, "Member 'UTCComponent_C_Check_Bounds::In_Bounds_by_Y' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Check_Bounds, Without_Bounds) == 0x00001C, "Member 'UTCComponent_C_Check_Bounds::Without_Bounds' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Check_Bounds, CallFunc_BreakVector_X) == 0x000020, "Member 'UTCComponent_C_Check_Bounds::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Check_Bounds, CallFunc_BreakVector_Y) == 0x000028, "Member 'UTCComponent_C_Check_Bounds::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Check_Bounds, CallFunc_BreakVector_Z) == 0x000030, "Member 'UTCComponent_C_Check_Bounds::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Check_Bounds, CallFunc_Is_Bounding_Enabled_ReturnValue) == 0x000038, "Member 'UTCComponent_C_Check_Bounds::CallFunc_Is_Bounding_Enabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Check_Bounds, CallFunc_BreakVector2D_X) == 0x000040, "Member 'UTCComponent_C_Check_Bounds::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Check_Bounds, CallFunc_BreakVector2D_Y) == 0x000048, "Member 'UTCComponent_C_Check_Bounds::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Check_Bounds, CallFunc_BreakVector2D_X_1) == 0x000050, "Member 'UTCComponent_C_Check_Bounds::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Check_Bounds, CallFunc_BreakVector2D_Y_1) == 0x000058, "Member 'UTCComponent_C_Check_Bounds::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Check_Bounds, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000060, "Member 'UTCComponent_C_Check_Bounds::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Check_Bounds, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'UTCComponent_C_Check_Bounds::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Check_Bounds, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000070, "Member 'UTCComponent_C_Check_Bounds::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Check_Bounds, CallFunc_InRange_FloatFloat_ReturnValue_1) == 0x000071, "Member 'UTCComponent_C_Check_Bounds::CallFunc_InRange_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Check_Bounds, CallFunc_BooleanAND_ReturnValue) == 0x000072, "Member 'UTCComponent_C_Check_Bounds::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function UTCComponent.UTCComponent_C.Check Is Viewport Size Changed
// 0x0038 (0x0038 - 0x0000)
struct UTCComponent_C_Check_Is_Viewport_Size_Changed final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Changed;                                        // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCComponent_C_Check_Is_Viewport_Size_Changed) == 0x000008, "Wrong alignment on UTCComponent_C_Check_Is_Viewport_Size_Changed");
static_assert(sizeof(UTCComponent_C_Check_Is_Viewport_Size_Changed) == 0x000038, "Wrong size on UTCComponent_C_Check_Is_Viewport_Size_Changed");
static_assert(offsetof(UTCComponent_C_Check_Is_Viewport_Size_Changed, Result) == 0x000000, "Member 'UTCComponent_C_Check_Is_Viewport_Size_Changed::Result' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Check_Is_Viewport_Size_Changed, Is_Changed) == 0x000001, "Member 'UTCComponent_C_Check_Is_Viewport_Size_Changed::Is_Changed' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Check_Is_Viewport_Size_Changed, CallFunc_GetViewportSize_ReturnValue) == 0x000008, "Member 'UTCComponent_C_Check_Is_Viewport_Size_Changed::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Check_Is_Viewport_Size_Changed, CallFunc_BreakVector2D_X) == 0x000018, "Member 'UTCComponent_C_Check_Is_Viewport_Size_Changed::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Check_Is_Viewport_Size_Changed, CallFunc_BreakVector2D_Y) == 0x000020, "Member 'UTCComponent_C_Check_Is_Viewport_Size_Changed::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Check_Is_Viewport_Size_Changed, CallFunc_FTrunc_ReturnValue) == 0x000028, "Member 'UTCComponent_C_Check_Is_Viewport_Size_Changed::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Check_Is_Viewport_Size_Changed, CallFunc_FTrunc_ReturnValue_1) == 0x00002C, "Member 'UTCComponent_C_Check_Is_Viewport_Size_Changed::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Check_Is_Viewport_Size_Changed, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000030, "Member 'UTCComponent_C_Check_Is_Viewport_Size_Changed::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Check_Is_Viewport_Size_Changed, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000031, "Member 'UTCComponent_C_Check_Is_Viewport_Size_Changed::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Check_Is_Viewport_Size_Changed, CallFunc_BooleanOR_ReturnValue) == 0x000032, "Member 'UTCComponent_C_Check_Is_Viewport_Size_Changed::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function UTCComponent.UTCComponent_C.ExecuteUbergraph_UTCComponent
// 0x00B0 (0x00B0 - 0x0000)
struct UTCComponent_C_ExecuteUbergraph_UTCComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_Is_Viewport_Size_Changed_Result;    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Pawn_Possessed_By_PC_Is_Possessed;     // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Pawn_Possessed_By_PC_Is_Locally_Controlled; // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_3;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_Is_Viewport_Size_Changed_Result_1;  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APawn*>                          CallFunc_GetAllActorsOfClass_OutActors;            // 0x0060(0x0010)(ReferenceParm)
	class APawn*                                  CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUTCComponent_C*>                CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0080(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UUTCComponent_C*                        CallFunc_Array_Get_Item_1;                         // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Player_Controller_Loaded_Is_Loaded;    // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCComponent_C_ExecuteUbergraph_UTCComponent) == 0x000008, "Wrong alignment on UTCComponent_C_ExecuteUbergraph_UTCComponent");
static_assert(sizeof(UTCComponent_C_ExecuteUbergraph_UTCComponent) == 0x0000B0, "Wrong size on UTCComponent_C_ExecuteUbergraph_UTCComponent");
static_assert(offsetof(UTCComponent_C_ExecuteUbergraph_UTCComponent, EntryPoint) == 0x000000, "Member 'UTCComponent_C_ExecuteUbergraph_UTCComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_ExecuteUbergraph_UTCComponent, Temp_int_Variable) == 0x000004, "Member 'UTCComponent_C_ExecuteUbergraph_UTCComponent::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_ExecuteUbergraph_UTCComponent, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'UTCComponent_C_ExecuteUbergraph_UTCComponent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_ExecuteUbergraph_UTCComponent, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'UTCComponent_C_ExecuteUbergraph_UTCComponent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_ExecuteUbergraph_UTCComponent, K2Node_Event_DeltaSeconds) == 0x000010, "Member 'UTCComponent_C_ExecuteUbergraph_UTCComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_ExecuteUbergraph_UTCComponent, CallFunc_Check_Is_Viewport_Size_Changed_Result) == 0x000014, "Member 'UTCComponent_C_ExecuteUbergraph_UTCComponent::CallFunc_Check_Is_Viewport_Size_Changed_Result' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_ExecuteUbergraph_UTCComponent, CallFunc_Is_Pawn_Possessed_By_PC_Is_Possessed) == 0x000015, "Member 'UTCComponent_C_ExecuteUbergraph_UTCComponent::CallFunc_Is_Pawn_Possessed_By_PC_Is_Possessed' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_ExecuteUbergraph_UTCComponent, CallFunc_Is_Pawn_Possessed_By_PC_Is_Locally_Controlled) == 0x000016, "Member 'UTCComponent_C_ExecuteUbergraph_UTCComponent::CallFunc_Is_Pawn_Possessed_By_PC_Is_Locally_Controlled' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_ExecuteUbergraph_UTCComponent, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000018, "Member 'UTCComponent_C_ExecuteUbergraph_UTCComponent::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_ExecuteUbergraph_UTCComponent, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000020, "Member 'UTCComponent_C_ExecuteUbergraph_UTCComponent::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_ExecuteUbergraph_UTCComponent, CallFunc_MakeVector2D_ReturnValue) == 0x000028, "Member 'UTCComponent_C_ExecuteUbergraph_UTCComponent::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_ExecuteUbergraph_UTCComponent, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000038, "Member 'UTCComponent_C_ExecuteUbergraph_UTCComponent::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_ExecuteUbergraph_UTCComponent, CallFunc_Conv_IntToDouble_ReturnValue_3) == 0x000040, "Member 'UTCComponent_C_ExecuteUbergraph_UTCComponent::CallFunc_Conv_IntToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_ExecuteUbergraph_UTCComponent, CallFunc_MakeVector2D_ReturnValue_1) == 0x000048, "Member 'UTCComponent_C_ExecuteUbergraph_UTCComponent::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_ExecuteUbergraph_UTCComponent, CallFunc_Check_Is_Viewport_Size_Changed_Result_1) == 0x000058, "Member 'UTCComponent_C_ExecuteUbergraph_UTCComponent::CallFunc_Check_Is_Viewport_Size_Changed_Result_1' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_ExecuteUbergraph_UTCComponent, CallFunc_GetAllActorsOfClass_OutActors) == 0x000060, "Member 'UTCComponent_C_ExecuteUbergraph_UTCComponent::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_ExecuteUbergraph_UTCComponent, CallFunc_Array_Get_Item) == 0x000070, "Member 'UTCComponent_C_ExecuteUbergraph_UTCComponent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_ExecuteUbergraph_UTCComponent, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'UTCComponent_C_ExecuteUbergraph_UTCComponent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_ExecuteUbergraph_UTCComponent, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000080, "Member 'UTCComponent_C_ExecuteUbergraph_UTCComponent::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_ExecuteUbergraph_UTCComponent, CallFunc_Array_Get_Item_1) == 0x000090, "Member 'UTCComponent_C_ExecuteUbergraph_UTCComponent::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_ExecuteUbergraph_UTCComponent, CallFunc_Array_Length_ReturnValue_1) == 0x000098, "Member 'UTCComponent_C_ExecuteUbergraph_UTCComponent::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_ExecuteUbergraph_UTCComponent, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'UTCComponent_C_ExecuteUbergraph_UTCComponent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_ExecuteUbergraph_UTCComponent, Temp_int_Loop_Counter_Variable) == 0x0000A0, "Member 'UTCComponent_C_ExecuteUbergraph_UTCComponent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_ExecuteUbergraph_UTCComponent, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000A4, "Member 'UTCComponent_C_ExecuteUbergraph_UTCComponent::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_ExecuteUbergraph_UTCComponent, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A8, "Member 'UTCComponent_C_ExecuteUbergraph_UTCComponent::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_ExecuteUbergraph_UTCComponent, CallFunc_Is_Player_Controller_Loaded_Is_Loaded) == 0x0000AC, "Member 'UTCComponent_C_ExecuteUbergraph_UTCComponent::CallFunc_Is_Player_Controller_Loaded_Is_Loaded' has a wrong offset!");

// Function UTCComponent.UTCComponent_C.Filter By Active
// 0x0058 (0x0058 - 0x0000)
struct UTCComponent_C_Filter_By_Active final
{
public:
	TArray<class UUTCComponent_C*>                UTCComponents;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UUTCComponent_C*>                Active_Components;                                 // 0x0010(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UUTCComponent_C*>                Active_UTC_Components;                             // 0x0020(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUTCComponent_C*                        CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCComponent_C_Filter_By_Active) == 0x000008, "Wrong alignment on UTCComponent_C_Filter_By_Active");
static_assert(sizeof(UTCComponent_C_Filter_By_Active) == 0x000058, "Wrong size on UTCComponent_C_Filter_By_Active");
static_assert(offsetof(UTCComponent_C_Filter_By_Active, UTCComponents) == 0x000000, "Member 'UTCComponent_C_Filter_By_Active::UTCComponents' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Filter_By_Active, Active_Components) == 0x000010, "Member 'UTCComponent_C_Filter_By_Active::Active_Components' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Filter_By_Active, Active_UTC_Components) == 0x000020, "Member 'UTCComponent_C_Filter_By_Active::Active_UTC_Components' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Filter_By_Active, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'UTCComponent_C_Filter_By_Active::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Filter_By_Active, Temp_int_Array_Index_Variable) == 0x000034, "Member 'UTCComponent_C_Filter_By_Active::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Filter_By_Active, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'UTCComponent_C_Filter_By_Active::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Filter_By_Active, CallFunc_Array_Get_Item) == 0x000040, "Member 'UTCComponent_C_Filter_By_Active::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Filter_By_Active, CallFunc_IsActive_ReturnValue) == 0x000048, "Member 'UTCComponent_C_Filter_By_Active::CallFunc_IsActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Filter_By_Active, CallFunc_Less_IntInt_ReturnValue) == 0x000049, "Member 'UTCComponent_C_Filter_By_Active::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Filter_By_Active, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'UTCComponent_C_Filter_By_Active::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Filter_By_Active, CallFunc_Array_Add_ReturnValue) == 0x000050, "Member 'UTCComponent_C_Filter_By_Active::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function UTCComponent.UTCComponent_C.Get FingerIndex and Location by index
// 0x0048 (0x0048 - 0x0000)
struct UTCComponent_C_Get_FingerIndex_and_Location_by_index final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETouchIndex                                   FingerIndex;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Valid;                                          // 0x0021(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETouchIndex                                   CallFunc_Array_Get_Item;                           // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item_1;                         // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCComponent_C_Get_FingerIndex_and_Location_by_index) == 0x000008, "Wrong alignment on UTCComponent_C_Get_FingerIndex_and_Location_by_index");
static_assert(sizeof(UTCComponent_C_Get_FingerIndex_and_Location_by_index) == 0x000048, "Wrong size on UTCComponent_C_Get_FingerIndex_and_Location_by_index");
static_assert(offsetof(UTCComponent_C_Get_FingerIndex_and_Location_by_index, Index_0) == 0x000000, "Member 'UTCComponent_C_Get_FingerIndex_and_Location_by_index::Index_0' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Get_FingerIndex_and_Location_by_index, Location) == 0x000008, "Member 'UTCComponent_C_Get_FingerIndex_and_Location_by_index::Location' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Get_FingerIndex_and_Location_by_index, FingerIndex) == 0x000020, "Member 'UTCComponent_C_Get_FingerIndex_and_Location_by_index::FingerIndex' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Get_FingerIndex_and_Location_by_index, Is_Valid) == 0x000021, "Member 'UTCComponent_C_Get_FingerIndex_and_Location_by_index::Is_Valid' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Get_FingerIndex_and_Location_by_index, CallFunc_Array_Get_Item) == 0x000022, "Member 'UTCComponent_C_Get_FingerIndex_and_Location_by_index::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Get_FingerIndex_and_Location_by_index, CallFunc_Array_Get_Item_1) == 0x000028, "Member 'UTCComponent_C_Get_FingerIndex_and_Location_by_index::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Get_FingerIndex_and_Location_by_index, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000040, "Member 'UTCComponent_C_Get_FingerIndex_and_Location_by_index::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Get_FingerIndex_and_Location_by_index, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000041, "Member 'UTCComponent_C_Get_FingerIndex_and_Location_by_index::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Get_FingerIndex_and_Location_by_index, CallFunc_BooleanAND_ReturnValue) == 0x000042, "Member 'UTCComponent_C_Get_FingerIndex_and_Location_by_index::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function UTCComponent.UTCComponent_C.Get Fingers Length
// 0x0008 (0x0008 - 0x0000)
struct UTCComponent_C_Get_Fingers_Length final
{
public:
	int32                                         Length;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCComponent_C_Get_Fingers_Length) == 0x000004, "Wrong alignment on UTCComponent_C_Get_Fingers_Length");
static_assert(sizeof(UTCComponent_C_Get_Fingers_Length) == 0x000008, "Wrong size on UTCComponent_C_Get_Fingers_Length");
static_assert(offsetof(UTCComponent_C_Get_Fingers_Length, Length) == 0x000000, "Member 'UTCComponent_C_Get_Fingers_Length::Length' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Get_Fingers_Length, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'UTCComponent_C_Get_Fingers_Length::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function UTCComponent.UTCComponent_C.Get Is Pawn Possessed by PC
// 0x0058 (0x0058 - 0x0000)
struct UTCComponent_C_Get_Is_Pawn_Possessed_by_PC final
{
public:
	bool                                          Is_Possessed_By_PC;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Locally_Controlled;                             // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalController_ReturnValue;            // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller_1;          // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCComponent_C_Get_Is_Pawn_Possessed_by_PC) == 0x000008, "Wrong alignment on UTCComponent_C_Get_Is_Pawn_Possessed_by_PC");
static_assert(sizeof(UTCComponent_C_Get_Is_Pawn_Possessed_by_PC) == 0x000058, "Wrong size on UTCComponent_C_Get_Is_Pawn_Possessed_by_PC");
static_assert(offsetof(UTCComponent_C_Get_Is_Pawn_Possessed_by_PC, Is_Possessed_By_PC) == 0x000000, "Member 'UTCComponent_C_Get_Is_Pawn_Possessed_by_PC::Is_Possessed_By_PC' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Get_Is_Pawn_Possessed_by_PC, Is_Locally_Controlled) == 0x000001, "Member 'UTCComponent_C_Get_Is_Pawn_Possessed_by_PC::Is_Locally_Controlled' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Get_Is_Pawn_Possessed_by_PC, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'UTCComponent_C_Get_Is_Pawn_Possessed_by_PC::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Get_Is_Pawn_Possessed_by_PC, K2Node_DynamicCast_AsPawn) == 0x000010, "Member 'UTCComponent_C_Get_Is_Pawn_Possessed_by_PC::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Get_Is_Pawn_Possessed_by_PC, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'UTCComponent_C_Get_Is_Pawn_Possessed_by_PC::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Get_Is_Pawn_Possessed_by_PC, K2Node_DynamicCast_AsPlayer_Controller) == 0x000020, "Member 'UTCComponent_C_Get_Is_Pawn_Possessed_by_PC::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Get_Is_Pawn_Possessed_by_PC, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'UTCComponent_C_Get_Is_Pawn_Possessed_by_PC::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Get_Is_Pawn_Possessed_by_PC, CallFunc_IsLocallyControlled_ReturnValue) == 0x000029, "Member 'UTCComponent_C_Get_Is_Pawn_Possessed_by_PC::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Get_Is_Pawn_Possessed_by_PC, CallFunc_IsLocalController_ReturnValue) == 0x00002A, "Member 'UTCComponent_C_Get_Is_Pawn_Possessed_by_PC::CallFunc_IsLocalController_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Get_Is_Pawn_Possessed_by_PC, CallFunc_K2_GetPawn_ReturnValue) == 0x000030, "Member 'UTCComponent_C_Get_Is_Pawn_Possessed_by_PC::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Get_Is_Pawn_Possessed_by_PC, CallFunc_GetController_ReturnValue) == 0x000038, "Member 'UTCComponent_C_Get_Is_Pawn_Possessed_by_PC::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Get_Is_Pawn_Possessed_by_PC, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'UTCComponent_C_Get_Is_Pawn_Possessed_by_PC::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Get_Is_Pawn_Possessed_by_PC, K2Node_DynamicCast_AsPlayer_Controller_1) == 0x000048, "Member 'UTCComponent_C_Get_Is_Pawn_Possessed_by_PC::K2Node_DynamicCast_AsPlayer_Controller_1' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Get_Is_Pawn_Possessed_by_PC, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'UTCComponent_C_Get_Is_Pawn_Possessed_by_PC::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function UTCComponent.UTCComponent_C.Get Screen Size By Size In Percents
// 0x0060 (0x0060 - 0x0000)
struct UTCComponent_C_Get_Screen_Size_By_Size_In_Percents final
{
public:
	struct FVector2D                              InVec;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCComponent_C_Get_Screen_Size_By_Size_In_Percents) == 0x000008, "Wrong alignment on UTCComponent_C_Get_Screen_Size_By_Size_In_Percents");
static_assert(sizeof(UTCComponent_C_Get_Screen_Size_By_Size_In_Percents) == 0x000060, "Wrong size on UTCComponent_C_Get_Screen_Size_By_Size_In_Percents");
static_assert(offsetof(UTCComponent_C_Get_Screen_Size_By_Size_In_Percents, InVec) == 0x000000, "Member 'UTCComponent_C_Get_Screen_Size_By_Size_In_Percents::InVec' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Get_Screen_Size_By_Size_In_Percents, ReturnValue) == 0x000010, "Member 'UTCComponent_C_Get_Screen_Size_By_Size_In_Percents::ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Get_Screen_Size_By_Size_In_Percents, CallFunc_BreakVector2D_X) == 0x000020, "Member 'UTCComponent_C_Get_Screen_Size_By_Size_In_Percents::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Get_Screen_Size_By_Size_In_Percents, CallFunc_BreakVector2D_Y) == 0x000028, "Member 'UTCComponent_C_Get_Screen_Size_By_Size_In_Percents::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Get_Screen_Size_By_Size_In_Percents, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000030, "Member 'UTCComponent_C_Get_Screen_Size_By_Size_In_Percents::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Get_Screen_Size_By_Size_In_Percents, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'UTCComponent_C_Get_Screen_Size_By_Size_In_Percents::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Get_Screen_Size_By_Size_In_Percents, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000040, "Member 'UTCComponent_C_Get_Screen_Size_By_Size_In_Percents::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Get_Screen_Size_By_Size_In_Percents, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'UTCComponent_C_Get_Screen_Size_By_Size_In_Percents::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Get_Screen_Size_By_Size_In_Percents, CallFunc_MakeVector2D_ReturnValue) == 0x000050, "Member 'UTCComponent_C_Get_Screen_Size_By_Size_In_Percents::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function UTCComponent.UTCComponent_C.Is Bounding Enabled
// 0x0005 (0x0005 - 0x0000)
struct UTCComponent_C_Is_Bounding_Enabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsZero2D_ReturnValue;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCComponent_C_Is_Bounding_Enabled) == 0x000001, "Wrong alignment on UTCComponent_C_Is_Bounding_Enabled");
static_assert(sizeof(UTCComponent_C_Is_Bounding_Enabled) == 0x000005, "Wrong size on UTCComponent_C_Is_Bounding_Enabled");
static_assert(offsetof(UTCComponent_C_Is_Bounding_Enabled, ReturnValue) == 0x000000, "Member 'UTCComponent_C_Is_Bounding_Enabled::ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Is_Bounding_Enabled, CallFunc_IsZero2D_ReturnValue) == 0x000001, "Member 'UTCComponent_C_Is_Bounding_Enabled::CallFunc_IsZero2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Is_Bounding_Enabled, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'UTCComponent_C_Is_Bounding_Enabled::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Is_Bounding_Enabled, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'UTCComponent_C_Is_Bounding_Enabled::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Is_Bounding_Enabled, CallFunc_Not_PreBool_ReturnValue_1) == 0x000004, "Member 'UTCComponent_C_Is_Bounding_Enabled::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function UTCComponent.UTCComponent_C.Is Finger Location Exists
// 0x000C (0x000C - 0x0000)
struct UTCComponent_C_Is_Finger_Location_Exists final
{
public:
	ETouchIndex                                   Finger_Index;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCComponent_C_Is_Finger_Location_Exists) == 0x000004, "Wrong alignment on UTCComponent_C_Is_Finger_Location_Exists");
static_assert(sizeof(UTCComponent_C_Is_Finger_Location_Exists) == 0x00000C, "Wrong size on UTCComponent_C_Is_Finger_Location_Exists");
static_assert(offsetof(UTCComponent_C_Is_Finger_Location_Exists, Finger_Index) == 0x000000, "Member 'UTCComponent_C_Is_Finger_Location_Exists::Finger_Index' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Is_Finger_Location_Exists, Result) == 0x000001, "Member 'UTCComponent_C_Is_Finger_Location_Exists::Result' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Is_Finger_Location_Exists, CallFunc_Array_Find_ReturnValue) == 0x000004, "Member 'UTCComponent_C_Is_Finger_Location_Exists::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Is_Finger_Location_Exists, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000008, "Member 'UTCComponent_C_Is_Finger_Location_Exists::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function UTCComponent.UTCComponent_C.Is Finger Slots Available
// 0x000C (0x000C - 0x0000)
struct UTCComponent_C_Is_Finger_Slots_Available final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Fingers_Length_Length;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCComponent_C_Is_Finger_Slots_Available) == 0x000004, "Wrong alignment on UTCComponent_C_Is_Finger_Slots_Available");
static_assert(sizeof(UTCComponent_C_Is_Finger_Slots_Available) == 0x00000C, "Wrong size on UTCComponent_C_Is_Finger_Slots_Available");
static_assert(offsetof(UTCComponent_C_Is_Finger_Slots_Available, ReturnValue) == 0x000000, "Member 'UTCComponent_C_Is_Finger_Slots_Available::ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Is_Finger_Slots_Available, CallFunc_Get_Fingers_Length_Length) == 0x000004, "Member 'UTCComponent_C_Is_Finger_Slots_Available::CallFunc_Get_Fingers_Length_Length' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Is_Finger_Slots_Available, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'UTCComponent_C_Is_Finger_Slots_Available::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Is_Finger_Slots_Available, CallFunc_Greater_IntInt_ReturnValue) == 0x000009, "Member 'UTCComponent_C_Is_Finger_Slots_Available::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Is_Finger_Slots_Available, CallFunc_BooleanOR_ReturnValue) == 0x00000A, "Member 'UTCComponent_C_Is_Finger_Slots_Available::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function UTCComponent.UTCComponent_C.Is Pawn Possessed By PC
// 0x0004 (0x0004 - 0x0000)
struct UTCComponent_C_Is_Pawn_Possessed_By_PC final
{
public:
	bool                                          Is_Possessed_0;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Locally_Controlled;                             // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Is_Pawn_Possessed_by_PC_Is_Possessed_By_PC; // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Is_Pawn_Possessed_by_PC_Is_Locally_Controlled; // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCComponent_C_Is_Pawn_Possessed_By_PC) == 0x000001, "Wrong alignment on UTCComponent_C_Is_Pawn_Possessed_By_PC");
static_assert(sizeof(UTCComponent_C_Is_Pawn_Possessed_By_PC) == 0x000004, "Wrong size on UTCComponent_C_Is_Pawn_Possessed_By_PC");
static_assert(offsetof(UTCComponent_C_Is_Pawn_Possessed_By_PC, Is_Possessed_0) == 0x000000, "Member 'UTCComponent_C_Is_Pawn_Possessed_By_PC::Is_Possessed_0' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Is_Pawn_Possessed_By_PC, Is_Locally_Controlled) == 0x000001, "Member 'UTCComponent_C_Is_Pawn_Possessed_By_PC::Is_Locally_Controlled' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Is_Pawn_Possessed_By_PC, CallFunc_Get_Is_Pawn_Possessed_by_PC_Is_Possessed_By_PC) == 0x000002, "Member 'UTCComponent_C_Is_Pawn_Possessed_By_PC::CallFunc_Get_Is_Pawn_Possessed_by_PC_Is_Possessed_By_PC' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Is_Pawn_Possessed_By_PC, CallFunc_Get_Is_Pawn_Possessed_by_PC_Is_Locally_Controlled) == 0x000003, "Member 'UTCComponent_C_Is_Pawn_Possessed_By_PC::CallFunc_Get_Is_Pawn_Possessed_by_PC_Is_Locally_Controlled' has a wrong offset!");

// Function UTCComponent.UTCComponent_C.Is Player Controller Loaded
// 0x0040 (0x0040 - 0x0000)
struct UTCComponent_C_Is_Player_Controller_Loaded final
{
public:
	bool                                          Is_Loaded;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_DynamicCast_AsController;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCComponent_C_Is_Player_Controller_Loaded) == 0x000008, "Wrong alignment on UTCComponent_C_Is_Player_Controller_Loaded");
static_assert(sizeof(UTCComponent_C_Is_Player_Controller_Loaded) == 0x000040, "Wrong size on UTCComponent_C_Is_Player_Controller_Loaded");
static_assert(offsetof(UTCComponent_C_Is_Player_Controller_Loaded, Is_Loaded) == 0x000000, "Member 'UTCComponent_C_Is_Player_Controller_Loaded::Is_Loaded' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Is_Player_Controller_Loaded, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'UTCComponent_C_Is_Player_Controller_Loaded::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Is_Player_Controller_Loaded, K2Node_DynamicCast_AsPawn) == 0x000010, "Member 'UTCComponent_C_Is_Player_Controller_Loaded::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Is_Player_Controller_Loaded, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'UTCComponent_C_Is_Player_Controller_Loaded::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Is_Player_Controller_Loaded, K2Node_DynamicCast_AsController) == 0x000020, "Member 'UTCComponent_C_Is_Player_Controller_Loaded::K2Node_DynamicCast_AsController' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Is_Player_Controller_Loaded, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'UTCComponent_C_Is_Player_Controller_Loaded::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Is_Player_Controller_Loaded, CallFunc_GetController_ReturnValue) == 0x000030, "Member 'UTCComponent_C_Is_Player_Controller_Loaded::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Is_Player_Controller_Loaded, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'UTCComponent_C_Is_Player_Controller_Loaded::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Is_Player_Controller_Loaded, CallFunc_IsValid_ReturnValue_1) == 0x000039, "Member 'UTCComponent_C_Is_Player_Controller_Loaded::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function UTCComponent.UTCComponent_C.On Event Touch Canceled
// 0x0020 (0x0020 - 0x0000)
struct UTCComponent_C_On_Event_Touch_Canceled final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETouchIndex                                   FingerIndex;                                       // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCComponent_C_On_Event_Touch_Canceled) == 0x000008, "Wrong alignment on UTCComponent_C_On_Event_Touch_Canceled");
static_assert(sizeof(UTCComponent_C_On_Event_Touch_Canceled) == 0x000020, "Wrong size on UTCComponent_C_On_Event_Touch_Canceled");
static_assert(offsetof(UTCComponent_C_On_Event_Touch_Canceled, Location) == 0x000000, "Member 'UTCComponent_C_On_Event_Touch_Canceled::Location' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_On_Event_Touch_Canceled, FingerIndex) == 0x000018, "Member 'UTCComponent_C_On_Event_Touch_Canceled::FingerIndex' has a wrong offset!");

// Function UTCComponent.UTCComponent_C.On Event Touch Moved
// 0x0020 (0x0020 - 0x0000)
struct UTCComponent_C_On_Event_Touch_Moved final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETouchIndex                                   FingerIndex;                                       // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCComponent_C_On_Event_Touch_Moved) == 0x000008, "Wrong alignment on UTCComponent_C_On_Event_Touch_Moved");
static_assert(sizeof(UTCComponent_C_On_Event_Touch_Moved) == 0x000020, "Wrong size on UTCComponent_C_On_Event_Touch_Moved");
static_assert(offsetof(UTCComponent_C_On_Event_Touch_Moved, Location) == 0x000000, "Member 'UTCComponent_C_On_Event_Touch_Moved::Location' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_On_Event_Touch_Moved, FingerIndex) == 0x000018, "Member 'UTCComponent_C_On_Event_Touch_Moved::FingerIndex' has a wrong offset!");

// Function UTCComponent.UTCComponent_C.On Event Touch Pressed
// 0x0020 (0x0020 - 0x0000)
struct UTCComponent_C_On_Event_Touch_Pressed final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETouchIndex                                   FingerIndex;                                       // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Add_Finger_Location_Result;               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCComponent_C_On_Event_Touch_Pressed) == 0x000008, "Wrong alignment on UTCComponent_C_On_Event_Touch_Pressed");
static_assert(sizeof(UTCComponent_C_On_Event_Touch_Pressed) == 0x000020, "Wrong size on UTCComponent_C_On_Event_Touch_Pressed");
static_assert(offsetof(UTCComponent_C_On_Event_Touch_Pressed, Location) == 0x000000, "Member 'UTCComponent_C_On_Event_Touch_Pressed::Location' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_On_Event_Touch_Pressed, FingerIndex) == 0x000018, "Member 'UTCComponent_C_On_Event_Touch_Pressed::FingerIndex' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_On_Event_Touch_Pressed, CallFunc_Add_Finger_Location_Result) == 0x000019, "Member 'UTCComponent_C_On_Event_Touch_Pressed::CallFunc_Add_Finger_Location_Result' has a wrong offset!");

// Function UTCComponent.UTCComponent_C.On Event Touch Released
// 0x0020 (0x0020 - 0x0000)
struct UTCComponent_C_On_Event_Touch_Released final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETouchIndex                                   FingerIndex;                                       // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCComponent_C_On_Event_Touch_Released) == 0x000008, "Wrong alignment on UTCComponent_C_On_Event_Touch_Released");
static_assert(sizeof(UTCComponent_C_On_Event_Touch_Released) == 0x000020, "Wrong size on UTCComponent_C_On_Event_Touch_Released");
static_assert(offsetof(UTCComponent_C_On_Event_Touch_Released, Location) == 0x000000, "Member 'UTCComponent_C_On_Event_Touch_Released::Location' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_On_Event_Touch_Released, FingerIndex) == 0x000018, "Member 'UTCComponent_C_On_Event_Touch_Released::FingerIndex' has a wrong offset!");

// Function UTCComponent.UTCComponent_C.On Pawn Possesed
// 0x0018 (0x0018 - 0x0000)
struct UTCComponent_C_On_Pawn_Possesed final
{
public:
	class AController*                            New_Controller;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerController_ReturnValue;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCComponent_C_On_Pawn_Possesed) == 0x000008, "Wrong alignment on UTCComponent_C_On_Pawn_Possesed");
static_assert(sizeof(UTCComponent_C_On_Pawn_Possesed) == 0x000018, "Wrong size on UTCComponent_C_On_Pawn_Possesed");
static_assert(offsetof(UTCComponent_C_On_Pawn_Possesed, New_Controller) == 0x000000, "Member 'UTCComponent_C_On_Pawn_Possesed::New_Controller' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_On_Pawn_Possesed, K2Node_DynamicCast_AsPlayer_Controller) == 0x000008, "Member 'UTCComponent_C_On_Pawn_Possesed::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_On_Pawn_Possesed, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'UTCComponent_C_On_Pawn_Possesed::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_On_Pawn_Possesed, CallFunc_IsPlayerController_ReturnValue) == 0x000011, "Member 'UTCComponent_C_On_Pawn_Possesed::CallFunc_IsPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_On_Pawn_Possesed, CallFunc_IsValid_ReturnValue) == 0x000012, "Member 'UTCComponent_C_On_Pawn_Possesed::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function UTCComponent.UTCComponent_C.On Pawn Unpossesed
// 0x0050 (0x0050 - 0x0000)
struct UTCComponent_C_On_Pawn_Unpossesed final
{
public:
	class AController*                            Old_Controller;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETouchIndex                                   CallFunc_Array_Get_Item_1;                         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCComponent_C_On_Pawn_Unpossesed) == 0x000008, "Wrong alignment on UTCComponent_C_On_Pawn_Unpossesed");
static_assert(sizeof(UTCComponent_C_On_Pawn_Unpossesed) == 0x000050, "Wrong size on UTCComponent_C_On_Pawn_Unpossesed");
static_assert(offsetof(UTCComponent_C_On_Pawn_Unpossesed, Old_Controller) == 0x000000, "Member 'UTCComponent_C_On_Pawn_Unpossesed::Old_Controller' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_On_Pawn_Unpossesed, K2Node_DynamicCast_AsPlayer_Controller) == 0x000008, "Member 'UTCComponent_C_On_Pawn_Unpossesed::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_On_Pawn_Unpossesed, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'UTCComponent_C_On_Pawn_Unpossesed::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_On_Pawn_Unpossesed, Temp_int_Array_Index_Variable) == 0x000014, "Member 'UTCComponent_C_On_Pawn_Unpossesed::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_On_Pawn_Unpossesed, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'UTCComponent_C_On_Pawn_Unpossesed::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_On_Pawn_Unpossesed, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'UTCComponent_C_On_Pawn_Unpossesed::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_On_Pawn_Unpossesed, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'UTCComponent_C_On_Pawn_Unpossesed::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_On_Pawn_Unpossesed, CallFunc_Array_Get_Item) == 0x000028, "Member 'UTCComponent_C_On_Pawn_Unpossesed::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_On_Pawn_Unpossesed, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'UTCComponent_C_On_Pawn_Unpossesed::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_On_Pawn_Unpossesed, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'UTCComponent_C_On_Pawn_Unpossesed::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_On_Pawn_Unpossesed, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'UTCComponent_C_On_Pawn_Unpossesed::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function UTCComponent.UTCComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct UTCComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on UTCComponent_C_ReceiveTick");
static_assert(sizeof(UTCComponent_C_ReceiveTick) == 0x000004, "Wrong size on UTCComponent_C_ReceiveTick");
static_assert(offsetof(UTCComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'UTCComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function UTCComponent.UTCComponent_C.Remove Finger Location
// 0x000C (0x000C - 0x0000)
struct UTCComponent_C_Remove_Finger_Location final
{
public:
	ETouchIndex                                   Finger_Index;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCComponent_C_Remove_Finger_Location) == 0x000004, "Wrong alignment on UTCComponent_C_Remove_Finger_Location");
static_assert(sizeof(UTCComponent_C_Remove_Finger_Location) == 0x00000C, "Wrong size on UTCComponent_C_Remove_Finger_Location");
static_assert(offsetof(UTCComponent_C_Remove_Finger_Location, Finger_Index) == 0x000000, "Member 'UTCComponent_C_Remove_Finger_Location::Finger_Index' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Remove_Finger_Location, CallFunc_Array_Find_ReturnValue) == 0x000004, "Member 'UTCComponent_C_Remove_Finger_Location::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Remove_Finger_Location, CallFunc_Less_IntInt_ReturnValue) == 0x000008, "Member 'UTCComponent_C_Remove_Finger_Location::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function UTCComponent.UTCComponent_C.Setup Background by Bounds
// 0x0010 (0x0010 - 0x0000)
struct UTCComponent_C_Setup_Background_by_Bounds final
{
public:
	class UClass*                                 Background_Widget_Class;                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Hide_if_Pawn_Unpossessed;                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCComponent_C_Setup_Background_by_Bounds) == 0x000008, "Wrong alignment on UTCComponent_C_Setup_Background_by_Bounds");
static_assert(sizeof(UTCComponent_C_Setup_Background_by_Bounds) == 0x000010, "Wrong size on UTCComponent_C_Setup_Background_by_Bounds");
static_assert(offsetof(UTCComponent_C_Setup_Background_by_Bounds, Background_Widget_Class) == 0x000000, "Member 'UTCComponent_C_Setup_Background_by_Bounds::Background_Widget_Class' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Setup_Background_by_Bounds, Hide_if_Pawn_Unpossessed) == 0x000008, "Member 'UTCComponent_C_Setup_Background_by_Bounds::Hide_if_Pawn_Unpossessed' has a wrong offset!");

// Function UTCComponent.UTCComponent_C.Setup Background by Size and Origin
// 0x0040 (0x0040 - 0x0000)
struct UTCComponent_C_Setup_Background_by_Size_and_Origin final
{
public:
	class UClass*                                 Widget_Class;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Hide_if_Pawn_Unpossessed;                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Origin;                                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Origin_In_Percent;                                 // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Size;                                              // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Size_In_Percent;                                   // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rectangular__by_greater_value_of_Size_;            // 0x0039(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCComponent_C_Setup_Background_by_Size_and_Origin) == 0x000008, "Wrong alignment on UTCComponent_C_Setup_Background_by_Size_and_Origin");
static_assert(sizeof(UTCComponent_C_Setup_Background_by_Size_and_Origin) == 0x000040, "Wrong size on UTCComponent_C_Setup_Background_by_Size_and_Origin");
static_assert(offsetof(UTCComponent_C_Setup_Background_by_Size_and_Origin, Widget_Class) == 0x000000, "Member 'UTCComponent_C_Setup_Background_by_Size_and_Origin::Widget_Class' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Setup_Background_by_Size_and_Origin, Hide_if_Pawn_Unpossessed) == 0x000008, "Member 'UTCComponent_C_Setup_Background_by_Size_and_Origin::Hide_if_Pawn_Unpossessed' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Setup_Background_by_Size_and_Origin, Origin) == 0x000010, "Member 'UTCComponent_C_Setup_Background_by_Size_and_Origin::Origin' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Setup_Background_by_Size_and_Origin, Origin_In_Percent) == 0x000020, "Member 'UTCComponent_C_Setup_Background_by_Size_and_Origin::Origin_In_Percent' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Setup_Background_by_Size_and_Origin, Size) == 0x000028, "Member 'UTCComponent_C_Setup_Background_by_Size_and_Origin::Size' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Setup_Background_by_Size_and_Origin, Size_In_Percent) == 0x000038, "Member 'UTCComponent_C_Setup_Background_by_Size_and_Origin::Size_In_Percent' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Setup_Background_by_Size_and_Origin, Rectangular__by_greater_value_of_Size_) == 0x000039, "Member 'UTCComponent_C_Setup_Background_by_Size_and_Origin::Rectangular__by_greater_value_of_Size_' has a wrong offset!");

// Function UTCComponent.UTCComponent_C.Setup Background Widget
// 0x0068 (0x0068 - 0x0000)
struct UTCComponent_C_Setup_Background_Widget final
{
public:
	class UClass*                                 Background_Widget_Class;                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Hide_if_Pawn_Unpossessed;                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Bounds_Size_and_Origin;                        // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Origin__if_you_re_not_using_bounds_;               // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Origin_In_Percent;                                 // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Size__if_you_re_not_using_bounds_;                 // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Size_In_Percent;                                   // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rectangular__by_greater_value_of_Size_;            // 0x0039(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Create_ReturnValue;                       // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Is_Pawn_Possessed_by_PC_Is_Possessed_By_PC; // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Is_Pawn_Possessed_by_PC_Is_Locally_Controlled; // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ClassClass_ReturnValue;          // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCComponent_C_Setup_Background_Widget) == 0x000008, "Wrong alignment on UTCComponent_C_Setup_Background_Widget");
static_assert(sizeof(UTCComponent_C_Setup_Background_Widget) == 0x000068, "Wrong size on UTCComponent_C_Setup_Background_Widget");
static_assert(offsetof(UTCComponent_C_Setup_Background_Widget, Background_Widget_Class) == 0x000000, "Member 'UTCComponent_C_Setup_Background_Widget::Background_Widget_Class' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Setup_Background_Widget, Hide_if_Pawn_Unpossessed) == 0x000008, "Member 'UTCComponent_C_Setup_Background_Widget::Hide_if_Pawn_Unpossessed' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Setup_Background_Widget, Use_Bounds_Size_and_Origin) == 0x000009, "Member 'UTCComponent_C_Setup_Background_Widget::Use_Bounds_Size_and_Origin' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Setup_Background_Widget, Origin__if_you_re_not_using_bounds_) == 0x000010, "Member 'UTCComponent_C_Setup_Background_Widget::Origin__if_you_re_not_using_bounds_' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Setup_Background_Widget, Origin_In_Percent) == 0x000020, "Member 'UTCComponent_C_Setup_Background_Widget::Origin_In_Percent' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Setup_Background_Widget, Size__if_you_re_not_using_bounds_) == 0x000028, "Member 'UTCComponent_C_Setup_Background_Widget::Size__if_you_re_not_using_bounds_' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Setup_Background_Widget, Size_In_Percent) == 0x000038, "Member 'UTCComponent_C_Setup_Background_Widget::Size_In_Percent' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Setup_Background_Widget, Rectangular__by_greater_value_of_Size_) == 0x000039, "Member 'UTCComponent_C_Setup_Background_Widget::Rectangular__by_greater_value_of_Size_' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Setup_Background_Widget, CallFunc_Create_ReturnValue) == 0x000040, "Member 'UTCComponent_C_Setup_Background_Widget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Setup_Background_Widget, CallFunc_IsValidClass_ReturnValue) == 0x000048, "Member 'UTCComponent_C_Setup_Background_Widget::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Setup_Background_Widget, CallFunc_Get_Is_Pawn_Possessed_by_PC_Is_Possessed_By_PC) == 0x000049, "Member 'UTCComponent_C_Setup_Background_Widget::CallFunc_Get_Is_Pawn_Possessed_by_PC_Is_Possessed_By_PC' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Setup_Background_Widget, CallFunc_Get_Is_Pawn_Possessed_by_PC_Is_Locally_Controlled) == 0x00004A, "Member 'UTCComponent_C_Setup_Background_Widget::CallFunc_Get_Is_Pawn_Possessed_by_PC_Is_Locally_Controlled' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Setup_Background_Widget, CallFunc_Not_PreBool_ReturnValue) == 0x00004B, "Member 'UTCComponent_C_Setup_Background_Widget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Setup_Background_Widget, CallFunc_BooleanAND_ReturnValue) == 0x00004C, "Member 'UTCComponent_C_Setup_Background_Widget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Setup_Background_Widget, CallFunc_Not_PreBool_ReturnValue_1) == 0x00004D, "Member 'UTCComponent_C_Setup_Background_Widget::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Setup_Background_Widget, CallFunc_BooleanAND_ReturnValue_1) == 0x00004E, "Member 'UTCComponent_C_Setup_Background_Widget::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Setup_Background_Widget, CallFunc_BooleanOR_ReturnValue) == 0x00004F, "Member 'UTCComponent_C_Setup_Background_Widget::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Setup_Background_Widget, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'UTCComponent_C_Setup_Background_Widget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Setup_Background_Widget, CallFunc_GetObjectClass_ReturnValue) == 0x000058, "Member 'UTCComponent_C_Setup_Background_Widget::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Setup_Background_Widget, CallFunc_IsValid_ReturnValue_1) == 0x000060, "Member 'UTCComponent_C_Setup_Background_Widget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Setup_Background_Widget, CallFunc_NotEqual_ClassClass_ReturnValue) == 0x000061, "Member 'UTCComponent_C_Setup_Background_Widget::CallFunc_NotEqual_ClassClass_ReturnValue' has a wrong offset!");

// Function UTCComponent.UTCComponent_C.Setup Bounds
// 0x0030 (0x0030 - 0x0000)
struct UTCComponent_C_Setup_Bounds final
{
public:
	bool                                          Is_Enabled;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Bounds_Origin_0;                                   // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Bounds_Size_0;                                     // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          In_Percent;                                        // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rect__by_greater_value_;                           // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCComponent_C_Setup_Bounds) == 0x000008, "Wrong alignment on UTCComponent_C_Setup_Bounds");
static_assert(sizeof(UTCComponent_C_Setup_Bounds) == 0x000030, "Wrong size on UTCComponent_C_Setup_Bounds");
static_assert(offsetof(UTCComponent_C_Setup_Bounds, Is_Enabled) == 0x000000, "Member 'UTCComponent_C_Setup_Bounds::Is_Enabled' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Setup_Bounds, Bounds_Origin_0) == 0x000008, "Member 'UTCComponent_C_Setup_Bounds::Bounds_Origin_0' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Setup_Bounds, Bounds_Size_0) == 0x000018, "Member 'UTCComponent_C_Setup_Bounds::Bounds_Size_0' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Setup_Bounds, In_Percent) == 0x000028, "Member 'UTCComponent_C_Setup_Bounds::In_Percent' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Setup_Bounds, Rect__by_greater_value_) == 0x000029, "Member 'UTCComponent_C_Setup_Bounds::Rect__by_greater_value_' has a wrong offset!");

// Function UTCComponent.UTCComponent_C.Update Background Widget
// 0x00D8 (0x00D8 - 0x0000)
struct UTCComponent_C_Update_Background_Widget final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Get_Screen_Size_By_Size_In_Percents_ReturnValue; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default;                             // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Get_Screen_Size_By_Size_In_Percents_ReturnValue_1; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_1;                           // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_2;                           // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_3;                           // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_4;                           // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast;     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_A_ImplicitCast;               // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCComponent_C_Update_Background_Widget) == 0x000008, "Wrong alignment on UTCComponent_C_Update_Background_Widget");
static_assert(sizeof(UTCComponent_C_Update_Background_Widget) == 0x0000D8, "Wrong size on UTCComponent_C_Update_Background_Widget");
static_assert(offsetof(UTCComponent_C_Update_Background_Widget, Temp_bool_Variable) == 0x000000, "Member 'UTCComponent_C_Update_Background_Widget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Update_Background_Widget, Temp_bool_Variable_1) == 0x000001, "Member 'UTCComponent_C_Update_Background_Widget::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Update_Background_Widget, Temp_bool_Variable_2) == 0x000002, "Member 'UTCComponent_C_Update_Background_Widget::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Update_Background_Widget, Temp_bool_Variable_3) == 0x000003, "Member 'UTCComponent_C_Update_Background_Widget::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Update_Background_Widget, Temp_bool_Variable_4) == 0x000004, "Member 'UTCComponent_C_Update_Background_Widget::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Update_Background_Widget, CallFunc_Get_Screen_Size_By_Size_In_Percents_ReturnValue) == 0x000008, "Member 'UTCComponent_C_Update_Background_Widget::CallFunc_Get_Screen_Size_By_Size_In_Percents_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Update_Background_Widget, K2Node_Select_Default) == 0x000018, "Member 'UTCComponent_C_Update_Background_Widget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Update_Background_Widget, CallFunc_Get_Screen_Size_By_Size_In_Percents_ReturnValue_1) == 0x000028, "Member 'UTCComponent_C_Update_Background_Widget::CallFunc_Get_Screen_Size_By_Size_In_Percents_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Update_Background_Widget, CallFunc_BreakVector2D_X) == 0x000038, "Member 'UTCComponent_C_Update_Background_Widget::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Update_Background_Widget, CallFunc_BreakVector2D_Y) == 0x000040, "Member 'UTCComponent_C_Update_Background_Widget::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Update_Background_Widget, K2Node_Select_Default_1) == 0x000048, "Member 'UTCComponent_C_Update_Background_Widget::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Update_Background_Widget, CallFunc_FMax_ReturnValue) == 0x000058, "Member 'UTCComponent_C_Update_Background_Widget::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Update_Background_Widget, CallFunc_MakeVector2D_ReturnValue) == 0x000060, "Member 'UTCComponent_C_Update_Background_Widget::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Update_Background_Widget, K2Node_Select_Default_2) == 0x000070, "Member 'UTCComponent_C_Update_Background_Widget::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Update_Background_Widget, K2Node_Select_Default_3) == 0x000080, "Member 'UTCComponent_C_Update_Background_Widget::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Update_Background_Widget, K2Node_Select_Default_4) == 0x000090, "Member 'UTCComponent_C_Update_Background_Widget::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Update_Background_Widget, CallFunc_IsValid_ReturnValue) == 0x0000A0, "Member 'UTCComponent_C_Update_Background_Widget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Update_Background_Widget, CallFunc_GetViewportScale_ReturnValue) == 0x0000A4, "Member 'UTCComponent_C_Update_Background_Widget::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Update_Background_Widget, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'UTCComponent_C_Update_Background_Widget::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Update_Background_Widget, CallFunc_SelectFloat_ReturnValue) == 0x0000B0, "Member 'UTCComponent_C_Update_Background_Widget::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Update_Background_Widget, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x0000B8, "Member 'UTCComponent_C_Update_Background_Widget::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Update_Background_Widget, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast) == 0x0000C8, "Member 'UTCComponent_C_Update_Background_Widget::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Update_Background_Widget, CallFunc_SelectFloat_A_ImplicitCast) == 0x0000D0, "Member 'UTCComponent_C_Update_Background_Widget::CallFunc_SelectFloat_A_ImplicitCast' has a wrong offset!");

// Function UTCComponent.UTCComponent_C.Update Bounds In Percent
// 0x0068 (0x0068 - 0x0000)
struct UTCComponent_C_Update_Bounds_In_Percent final
{
public:
	bool                                          Is_Viewport_Size_Changed;                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Get_Screen_Size_By_Size_In_Percents_ReturnValue; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Get_Screen_Size_By_Size_In_Percents_ReturnValue_1; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default;                             // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCComponent_C_Update_Bounds_In_Percent) == 0x000008, "Wrong alignment on UTCComponent_C_Update_Bounds_In_Percent");
static_assert(sizeof(UTCComponent_C_Update_Bounds_In_Percent) == 0x000068, "Wrong size on UTCComponent_C_Update_Bounds_In_Percent");
static_assert(offsetof(UTCComponent_C_Update_Bounds_In_Percent, Is_Viewport_Size_Changed) == 0x000000, "Member 'UTCComponent_C_Update_Bounds_In_Percent::Is_Viewport_Size_Changed' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Update_Bounds_In_Percent, Temp_bool_Variable) == 0x000001, "Member 'UTCComponent_C_Update_Bounds_In_Percent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Update_Bounds_In_Percent, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'UTCComponent_C_Update_Bounds_In_Percent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Update_Bounds_In_Percent, CallFunc_Get_Screen_Size_By_Size_In_Percents_ReturnValue) == 0x000008, "Member 'UTCComponent_C_Update_Bounds_In_Percent::CallFunc_Get_Screen_Size_By_Size_In_Percents_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Update_Bounds_In_Percent, CallFunc_Get_Screen_Size_By_Size_In_Percents_ReturnValue_1) == 0x000018, "Member 'UTCComponent_C_Update_Bounds_In_Percent::CallFunc_Get_Screen_Size_By_Size_In_Percents_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Update_Bounds_In_Percent, CallFunc_BreakVector2D_X) == 0x000028, "Member 'UTCComponent_C_Update_Bounds_In_Percent::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Update_Bounds_In_Percent, CallFunc_BreakVector2D_Y) == 0x000030, "Member 'UTCComponent_C_Update_Bounds_In_Percent::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Update_Bounds_In_Percent, CallFunc_FMax_ReturnValue) == 0x000038, "Member 'UTCComponent_C_Update_Bounds_In_Percent::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Update_Bounds_In_Percent, CallFunc_MakeVector2D_ReturnValue) == 0x000040, "Member 'UTCComponent_C_Update_Bounds_In_Percent::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Update_Bounds_In_Percent, CallFunc_BooleanAND_ReturnValue_1) == 0x000050, "Member 'UTCComponent_C_Update_Bounds_In_Percent::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Update_Bounds_In_Percent, K2Node_Select_Default) == 0x000058, "Member 'UTCComponent_C_Update_Bounds_In_Percent::K2Node_Select_Default' has a wrong offset!");

// Function UTCComponent.UTCComponent_C.Update Finger Location
// 0x0028 (0x0028 - 0x0000)
struct UTCComponent_C_Update_Finger_Location final
{
public:
	ETouchIndex                                   Finger_Index;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                New_Location;                                      // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCComponent_C_Update_Finger_Location) == 0x000008, "Wrong alignment on UTCComponent_C_Update_Finger_Location");
static_assert(sizeof(UTCComponent_C_Update_Finger_Location) == 0x000028, "Wrong size on UTCComponent_C_Update_Finger_Location");
static_assert(offsetof(UTCComponent_C_Update_Finger_Location, Finger_Index) == 0x000000, "Member 'UTCComponent_C_Update_Finger_Location::Finger_Index' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Update_Finger_Location, New_Location) == 0x000008, "Member 'UTCComponent_C_Update_Finger_Location::New_Location' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Update_Finger_Location, CallFunc_Array_Find_ReturnValue) == 0x000020, "Member 'UTCComponent_C_Update_Finger_Location::CallFunc_Array_Find_ReturnValue' has a wrong offset!");

// Function UTCComponent.UTCComponent_C.Filter By Bounds
// 0x00C0 (0x00C0 - 0x0000)
struct UTCComponent_C_Filter_By_Bounds final
{
public:
	TArray<class UUTCComponent_C*>                UTC_Components;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FVector                                Location;                                          // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUTCComponent_C*>                In_Bounds;                                         // 0x0028(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UUTCComponent_C*>                out_Bounds;                                        // 0x0038(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UUTCComponent_C*>                Both;                                              // 0x0048(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UUTCComponent_C*>                Both_Local;                                        // 0x0058(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class UUTCComponent_C*>                out_Bounds_Local;                                  // 0x0068(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class UUTCComponent_C*>                In_Bounds_Local;                                   // 0x0078(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUTCComponent_C*                        CallFunc_Array_Get_Item;                           // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_Bounds_In_Bounds;                   // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_Bounds_W_out_Bounds;                // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_Bounds_In_Bounds_by_X;              // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_Bounds_In_Bounds_by_Y;              // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A6[0x2];                                       // 0x00A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCComponent_C_Filter_By_Bounds) == 0x000008, "Wrong alignment on UTCComponent_C_Filter_By_Bounds");
static_assert(sizeof(UTCComponent_C_Filter_By_Bounds) == 0x0000C0, "Wrong size on UTCComponent_C_Filter_By_Bounds");
static_assert(offsetof(UTCComponent_C_Filter_By_Bounds, UTC_Components) == 0x000000, "Member 'UTCComponent_C_Filter_By_Bounds::UTC_Components' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Filter_By_Bounds, Location) == 0x000010, "Member 'UTCComponent_C_Filter_By_Bounds::Location' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Filter_By_Bounds, In_Bounds) == 0x000028, "Member 'UTCComponent_C_Filter_By_Bounds::In_Bounds' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Filter_By_Bounds, out_Bounds) == 0x000038, "Member 'UTCComponent_C_Filter_By_Bounds::out_Bounds' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Filter_By_Bounds, Both) == 0x000048, "Member 'UTCComponent_C_Filter_By_Bounds::Both' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Filter_By_Bounds, Both_Local) == 0x000058, "Member 'UTCComponent_C_Filter_By_Bounds::Both_Local' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Filter_By_Bounds, out_Bounds_Local) == 0x000068, "Member 'UTCComponent_C_Filter_By_Bounds::out_Bounds_Local' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Filter_By_Bounds, In_Bounds_Local) == 0x000078, "Member 'UTCComponent_C_Filter_By_Bounds::In_Bounds_Local' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Filter_By_Bounds, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'UTCComponent_C_Filter_By_Bounds::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Filter_By_Bounds, Temp_int_Array_Index_Variable) == 0x00008C, "Member 'UTCComponent_C_Filter_By_Bounds::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Filter_By_Bounds, Temp_int_Loop_Counter_Variable) == 0x000090, "Member 'UTCComponent_C_Filter_By_Bounds::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Filter_By_Bounds, CallFunc_Array_Get_Item) == 0x000098, "Member 'UTCComponent_C_Filter_By_Bounds::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Filter_By_Bounds, CallFunc_Check_Bounds_In_Bounds) == 0x0000A0, "Member 'UTCComponent_C_Filter_By_Bounds::CallFunc_Check_Bounds_In_Bounds' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Filter_By_Bounds, CallFunc_Check_Bounds_W_out_Bounds) == 0x0000A1, "Member 'UTCComponent_C_Filter_By_Bounds::CallFunc_Check_Bounds_W_out_Bounds' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Filter_By_Bounds, CallFunc_Check_Bounds_In_Bounds_by_X) == 0x0000A2, "Member 'UTCComponent_C_Filter_By_Bounds::CallFunc_Check_Bounds_In_Bounds_by_X' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Filter_By_Bounds, CallFunc_Check_Bounds_In_Bounds_by_Y) == 0x0000A3, "Member 'UTCComponent_C_Filter_By_Bounds::CallFunc_Check_Bounds_In_Bounds_by_Y' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Filter_By_Bounds, CallFunc_Less_IntInt_ReturnValue) == 0x0000A4, "Member 'UTCComponent_C_Filter_By_Bounds::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Filter_By_Bounds, CallFunc_Not_PreBool_ReturnValue) == 0x0000A5, "Member 'UTCComponent_C_Filter_By_Bounds::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Filter_By_Bounds, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'UTCComponent_C_Filter_By_Bounds::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Filter_By_Bounds, CallFunc_BooleanAND_ReturnValue) == 0x0000AC, "Member 'UTCComponent_C_Filter_By_Bounds::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Filter_By_Bounds, CallFunc_Array_Add_ReturnValue) == 0x0000B0, "Member 'UTCComponent_C_Filter_By_Bounds::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Filter_By_Bounds, CallFunc_Array_Add_ReturnValue_1) == 0x0000B4, "Member 'UTCComponent_C_Filter_By_Bounds::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Filter_By_Bounds, CallFunc_Array_Add_ReturnValue_2) == 0x0000B8, "Member 'UTCComponent_C_Filter_By_Bounds::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");

// Function UTCComponent.UTCComponent_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct UTCComponent_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(UTCComponent_C_GetModuleName) == 0x000008, "Wrong alignment on UTCComponent_C_GetModuleName");
static_assert(sizeof(UTCComponent_C_GetModuleName) == 0x000010, "Wrong size on UTCComponent_C_GetModuleName");
static_assert(offsetof(UTCComponent_C_GetModuleName, ReturnValue) == 0x000000, "Member 'UTCComponent_C_GetModuleName::ReturnValue' has a wrong offset!");

// Function UTCComponent.UTCComponent_C.Sort By Priority
// 0x0078 (0x0078 - 0x0000)
struct UTCComponent_C_Sort_By_Priority final
{
public:
	TArray<class UUTCComponent_C*>                UTC_Components;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UUTCComponent_C*>                _Higher_Priority;                                  // 0x0010(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UUTCComponent_C*>                _Higher_Priority_Local;                            // 0x0020(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Higher_Priority;                                   // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUTCComponent_C*                        CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUTCComponent_C*                        CallFunc_Array_Get_Item_1;                         // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UTCComponent_C_Sort_By_Priority) == 0x000008, "Wrong alignment on UTCComponent_C_Sort_By_Priority");
static_assert(sizeof(UTCComponent_C_Sort_By_Priority) == 0x000078, "Wrong size on UTCComponent_C_Sort_By_Priority");
static_assert(offsetof(UTCComponent_C_Sort_By_Priority, UTC_Components) == 0x000000, "Member 'UTCComponent_C_Sort_By_Priority::UTC_Components' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Sort_By_Priority, _Higher_Priority) == 0x000010, "Member 'UTCComponent_C_Sort_By_Priority::_Higher_Priority' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Sort_By_Priority, _Higher_Priority_Local) == 0x000020, "Member 'UTCComponent_C_Sort_By_Priority::_Higher_Priority_Local' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Sort_By_Priority, Higher_Priority) == 0x000030, "Member 'UTCComponent_C_Sort_By_Priority::Higher_Priority' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Sort_By_Priority, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'UTCComponent_C_Sort_By_Priority::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Sort_By_Priority, CallFunc_Array_Length_ReturnValue_1) == 0x000038, "Member 'UTCComponent_C_Sort_By_Priority::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Sort_By_Priority, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'UTCComponent_C_Sort_By_Priority::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Sort_By_Priority, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'UTCComponent_C_Sort_By_Priority::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Sort_By_Priority, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'UTCComponent_C_Sort_By_Priority::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Sort_By_Priority, Temp_int_Array_Index_Variable) == 0x000048, "Member 'UTCComponent_C_Sort_By_Priority::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Sort_By_Priority, Temp_int_Array_Index_Variable_1) == 0x00004C, "Member 'UTCComponent_C_Sort_By_Priority::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Sort_By_Priority, CallFunc_Array_Get_Item) == 0x000050, "Member 'UTCComponent_C_Sort_By_Priority::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Sort_By_Priority, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'UTCComponent_C_Sort_By_Priority::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Sort_By_Priority, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000060, "Member 'UTCComponent_C_Sort_By_Priority::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Sort_By_Priority, CallFunc_Greater_IntInt_ReturnValue) == 0x000061, "Member 'UTCComponent_C_Sort_By_Priority::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Sort_By_Priority, CallFunc_Array_Add_ReturnValue) == 0x000064, "Member 'UTCComponent_C_Sort_By_Priority::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Sort_By_Priority, Temp_int_Loop_Counter_Variable_1) == 0x000068, "Member 'UTCComponent_C_Sort_By_Priority::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Sort_By_Priority, CallFunc_Less_IntInt_ReturnValue_1) == 0x00006C, "Member 'UTCComponent_C_Sort_By_Priority::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UTCComponent_C_Sort_By_Priority, CallFunc_Add_IntInt_ReturnValue_1) == 0x000070, "Member 'UTCComponent_C_Sort_By_Priority::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

}

