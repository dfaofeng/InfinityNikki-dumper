#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CleanableAnimalComponent_V2

#include "Basic.hpp"

#include "BP_CleanableAnimalComponent_V2_classes.hpp"
#include "BP_CleanableAnimalComponent_V2_parameters.hpp"


namespace SDK
{

// Function BP_CleanableAnimalComponent_V2.BP_CleanableAnimalComponent_V2_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CleanableAnimalComponent_V2_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CleanableAnimalComponent_V2_C", "ReceiveTick");

	Params::BP_CleanableAnimalComponent_V2_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CleanableAnimalComponent_V2.BP_CleanableAnimalComponent_V2_C.ExecuteUbergraph_BP_CleanableAnimalComponent_V2
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CleanableAnimalComponent_V2_C::ExecuteUbergraph_BP_CleanableAnimalComponent_V2(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CleanableAnimalComponent_V2_C", "ExecuteUbergraph_BP_CleanableAnimalComponent_V2");

	Params::BP_CleanableAnimalComponent_V2_C_ExecuteUbergraph_BP_CleanableAnimalComponent_V2 Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CleanableAnimalComponent_V2.BP_CleanableAnimalComponent_V2_C.BP_SetJewelryVisible
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CleanableAnimalComponent_V2_C::BP_SetJewelryVisible(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CleanableAnimalComponent_V2_C", "BP_SetJewelryVisible");

	Params::BP_CleanableAnimalComponent_V2_C_BP_SetJewelryVisible Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CleanableAnimalComponent_V2.BP_CleanableAnimalComponent_V2_C.BP_SetCleanEFXAlpha
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    isNeedHide                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CleanableAnimalComponent_V2_C::BP_SetCleanEFXAlpha(bool isNeedHide, double DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CleanableAnimalComponent_V2_C", "BP_SetCleanEFXAlpha");

	Params::BP_CleanableAnimalComponent_V2_C_BP_SetCleanEFXAlpha Parms{};

	Parms.isNeedHide = isNeedHide;
	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CleanableAnimalComponent_V2.BP_CleanableAnimalComponent_V2_C.BP_ServerSyncFakePosition
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   FakePosition                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CleanableAnimalComponent_V2_C::BP_ServerSyncFakePosition(const struct FVector& FakePosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CleanableAnimalComponent_V2_C", "BP_ServerSyncFakePosition");

	Params::BP_CleanableAnimalComponent_V2_C_BP_ServerSyncFakePosition Parms{};

	Parms.FakePosition = std::move(FakePosition);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CleanableAnimalComponent_V2.BP_CleanableAnimalComponent_V2_C.BP_RequestDestroyOwner
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CleanableAnimalComponent_V2_C::BP_RequestDestroyOwner()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CleanableAnimalComponent_V2_C", "BP_RequestDestroyOwner");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CleanableAnimalComponent_V2.BP_CleanableAnimalComponent_V2_C.BP_GetSlotRotation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SlotIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         rotateForwardVector                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CleanableAnimalComponent_V2_C::BP_GetSlotRotation(int32 SlotIndex, struct FVector* rotateForwardVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CleanableAnimalComponent_V2_C", "BP_GetSlotRotation");

	Params::BP_CleanableAnimalComponent_V2_C_BP_GetSlotRotation Parms{};

	Parms.SlotIndex = SlotIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (rotateForwardVector != nullptr)
		*rotateForwardVector = std::move(Parms.rotateForwardVector);
}


// Function BP_CleanableAnimalComponent_V2.BP_CleanableAnimalComponent_V2_C.BP_GetSlotLS
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString*                          NewParam1                                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UBP_CleanableAnimalComponent_V2_C::BP_GetSlotLS(int32 NewParam, class FString* NewParam1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CleanableAnimalComponent_V2_C", "BP_GetSlotLS");

	Params::BP_CleanableAnimalComponent_V2_C_BP_GetSlotLS Parms{};

	Parms.NewParam = NewParam;

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam1 != nullptr)
		*NewParam1 = std::move(Parms.NewParam1);
}


// Function BP_CleanableAnimalComponent_V2.BP_CleanableAnimalComponent_V2_C.BP_GetSlotLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SlotIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         slotLocation                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CleanableAnimalComponent_V2_C::BP_GetSlotLocation(int32 SlotIndex, struct FVector* slotLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CleanableAnimalComponent_V2_C", "BP_GetSlotLocation");

	Params::BP_CleanableAnimalComponent_V2_C_BP_GetSlotLocation Parms{};

	Parms.SlotIndex = SlotIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (slotLocation != nullptr)
		*slotLocation = std::move(Parms.slotLocation);
}


// Function BP_CleanableAnimalComponent_V2.BP_CleanableAnimalComponent_V2_C.BP_GetNearestSlotIndex
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32*                                  nearestSlotIndex                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CleanableAnimalComponent_V2_C::BP_GetNearestSlotIndex(int32* nearestSlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CleanableAnimalComponent_V2_C", "BP_GetNearestSlotIndex");

	Params::BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (nearestSlotIndex != nullptr)
		*nearestSlotIndex = Parms.nearestSlotIndex;
}


// Function BP_CleanableAnimalComponent_V2.BP_CleanableAnimalComponent_V2_C.BP_GetIsClean
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   bClean                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CleanableAnimalComponent_V2_C::BP_GetIsClean(bool* bClean)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CleanableAnimalComponent_V2_C", "BP_GetIsClean");

	Params::BP_CleanableAnimalComponent_V2_C_BP_GetIsClean Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bClean != nullptr)
		*bClean = Parms.bClean;
}


// Function BP_CleanableAnimalComponent_V2.BP_CleanableAnimalComponent_V2_C.BP_GetAnimalConfigId
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32*                                  animalCfgId                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CleanableAnimalComponent_V2_C::BP_GetAnimalConfigId(int32* animalCfgId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CleanableAnimalComponent_V2_C", "BP_GetAnimalConfigId");

	Params::BP_CleanableAnimalComponent_V2_C_BP_GetAnimalConfigId Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (animalCfgId != nullptr)
		*animalCfgId = Parms.animalCfgId;
}


// Function BP_CleanableAnimalComponent_V2.BP_CleanableAnimalComponent_V2_C.BP_EventTick
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CleanableAnimalComponent_V2_C::BP_EventTick(double DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CleanableAnimalComponent_V2_C", "BP_EventTick");

	Params::BP_CleanableAnimalComponent_V2_C_BP_EventTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CleanableAnimalComponent_V2.BP_CleanableAnimalComponent_V2_C.BP_CheckInCleanRange
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bInRange                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CleanableAnimalComponent_V2_C::BP_CheckInCleanRange(bool* bInRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CleanableAnimalComponent_V2_C", "BP_CheckInCleanRange");

	Params::BP_CleanableAnimalComponent_V2_C_BP_CheckInCleanRange Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bInRange != nullptr)
		*bInRange = Parms.bInRange;
}


// Function BP_CleanableAnimalComponent_V2.BP_CleanableAnimalComponent_V2_C.GetModuleName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UBP_CleanableAnimalComponent_V2_C::GetModuleName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CleanableAnimalComponent_V2_C", "GetModuleName");

	Params::BP_CleanableAnimalComponent_V2_C_GetModuleName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

