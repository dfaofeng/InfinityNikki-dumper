#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PaperNavMesh

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class PaperNavMesh.NavWaterDepthComponent
// 0x0080 (0x0640 - 0x05C0)
class UNavWaterDepthComponent final : public UPrimitiveComponent
{
public:
	TSubclassOf<class UNavArea>                   AreaClass;                                         // 0x05B8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                FailsafeExtent;                                    // 0x05C0(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bIncludeAgentHeight : 1;                           // 0x05D8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_5D9[0x7];                                      // 0x05D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TWeakObjectPtr<class AActor>>          SoftRelativeActors;                                // 0x05E0(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                         WaterDepthOverride;                                // 0x05F0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5F4[0x4C];                                     // 0x05F4(0x004C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetAreaClass(TSubclassOf<class UNavArea> NewAreaClass);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NavWaterDepthComponent">();
	}
	static class UNavWaterDepthComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavWaterDepthComponent>();
	}
};
static_assert(alignof(UNavWaterDepthComponent) == 0x000010, "Wrong alignment on UNavWaterDepthComponent");
static_assert(sizeof(UNavWaterDepthComponent) == 0x000640, "Wrong size on UNavWaterDepthComponent");
static_assert(offsetof(UNavWaterDepthComponent, AreaClass) == 0x0005B8, "Member 'UNavWaterDepthComponent::AreaClass' has a wrong offset!");
static_assert(offsetof(UNavWaterDepthComponent, FailsafeExtent) == 0x0005C0, "Member 'UNavWaterDepthComponent::FailsafeExtent' has a wrong offset!");
static_assert(offsetof(UNavWaterDepthComponent, SoftRelativeActors) == 0x0005E0, "Member 'UNavWaterDepthComponent::SoftRelativeActors' has a wrong offset!");
static_assert(offsetof(UNavWaterDepthComponent, WaterDepthOverride) == 0x0005F0, "Member 'UNavWaterDepthComponent::WaterDepthOverride' has a wrong offset!");

// Class PaperNavMesh.NavWaterDepthManager
// 0x0070 (0x0418 - 0x03A8)
class ANavWaterDepthManager final : public AActor
{
public:
	uint32                                        FillCollisionUnderneathHeightForNavmesh;           // 0x03A8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bUnwalkableFlagForNavmesh : 1;                     // 0x03AC(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_3AD[0x3];                                      // 0x03AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 WaterDepthOverrides;                               // 0x03B0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C0[0x58];                                     // 0x03C0(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnNavDataGenerationFinished(class ANavigationData* NavData);
	void OnNavDataGenerationStart(class ANavigationData* NavData);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NavWaterDepthManager">();
	}
	static class ANavWaterDepthManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<ANavWaterDepthManager>();
	}
};
static_assert(alignof(ANavWaterDepthManager) == 0x000008, "Wrong alignment on ANavWaterDepthManager");
static_assert(sizeof(ANavWaterDepthManager) == 0x000418, "Wrong size on ANavWaterDepthManager");
static_assert(offsetof(ANavWaterDepthManager, FillCollisionUnderneathHeightForNavmesh) == 0x0003A8, "Member 'ANavWaterDepthManager::FillCollisionUnderneathHeightForNavmesh' has a wrong offset!");
static_assert(offsetof(ANavWaterDepthManager, WaterDepthOverrides) == 0x0003B0, "Member 'ANavWaterDepthManager::WaterDepthOverrides' has a wrong offset!");

}

