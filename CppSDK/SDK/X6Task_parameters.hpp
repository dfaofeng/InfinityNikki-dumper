#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: X6Task

#include "Basic.hpp"


namespace SDK::Params
{

// Function X6Task.X6TaskBase.InovkeTaskStart
// 0x0008 (0x0008 - 0x0000)
struct X6TaskBase_InovkeTaskStart final
{
public:
	class FName                                   EventName;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(X6TaskBase_InovkeTaskStart) == 0x000004, "Wrong alignment on X6TaskBase_InovkeTaskStart");
static_assert(sizeof(X6TaskBase_InovkeTaskStart) == 0x000008, "Wrong size on X6TaskBase_InovkeTaskStart");
static_assert(offsetof(X6TaskBase_InovkeTaskStart, EventName) == 0x000000, "Member 'X6TaskBase_InovkeTaskStart::EventName' has a wrong offset!");

// Function X6Task.X6TaskBase.OnTaskFinishEvent
// 0x0001 (0x0001 - 0x0000)
struct X6TaskBase_OnTaskFinishEvent final
{
public:
	bool                                          bIsLogicalFinish;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(X6TaskBase_OnTaskFinishEvent) == 0x000001, "Wrong alignment on X6TaskBase_OnTaskFinishEvent");
static_assert(sizeof(X6TaskBase_OnTaskFinishEvent) == 0x000001, "Wrong size on X6TaskBase_OnTaskFinishEvent");
static_assert(offsetof(X6TaskBase_OnTaskFinishEvent, bIsLogicalFinish) == 0x000000, "Member 'X6TaskBase_OnTaskFinishEvent::bIsLogicalFinish' has a wrong offset!");

// Function X6Task.X6TaskBase.OnTaskStart
// 0x0008 (0x0008 - 0x0000)
struct X6TaskBase_OnTaskStart final
{
public:
	class FName                                   EventName;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(X6TaskBase_OnTaskStart) == 0x000004, "Wrong alignment on X6TaskBase_OnTaskStart");
static_assert(sizeof(X6TaskBase_OnTaskStart) == 0x000008, "Wrong size on X6TaskBase_OnTaskStart");
static_assert(offsetof(X6TaskBase_OnTaskStart, EventName) == 0x000000, "Member 'X6TaskBase_OnTaskStart::EventName' has a wrong offset!");

// Function X6Task.X6TaskBase.OnTaskTick
// 0x0004 (0x0004 - 0x0000)
struct X6TaskBase_OnTaskTick final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(X6TaskBase_OnTaskTick) == 0x000004, "Wrong alignment on X6TaskBase_OnTaskTick");
static_assert(sizeof(X6TaskBase_OnTaskTick) == 0x000004, "Wrong size on X6TaskBase_OnTaskTick");
static_assert(offsetof(X6TaskBase_OnTaskTick, DeltaTime) == 0x000000, "Member 'X6TaskBase_OnTaskTick::DeltaTime' has a wrong offset!");

// Function X6Task.X6TaskAsyncBase.InovkeAsyncTaskStart
// 0x0008 (0x0008 - 0x0000)
struct X6TaskAsyncBase_InovkeAsyncTaskStart final
{
public:
	class FName                                   EventName;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(X6TaskAsyncBase_InovkeAsyncTaskStart) == 0x000004, "Wrong alignment on X6TaskAsyncBase_InovkeAsyncTaskStart");
static_assert(sizeof(X6TaskAsyncBase_InovkeAsyncTaskStart) == 0x000008, "Wrong size on X6TaskAsyncBase_InovkeAsyncTaskStart");
static_assert(offsetof(X6TaskAsyncBase_InovkeAsyncTaskStart, EventName) == 0x000000, "Member 'X6TaskAsyncBase_InovkeAsyncTaskStart::EventName' has a wrong offset!");

}

