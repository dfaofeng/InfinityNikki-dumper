#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MainFaculaLighter

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "S_Lighter_structs.hpp"


namespace SDK::Params
{

// Function BP_MainFaculaLighter.BP_MainFaculaLighter_C.ExecuteUbergraph_BP_MainFaculaLighter
// 0x0018 (0x0018 - 0x0000)
struct BP_MainFaculaLighter_C_ExecuteUbergraph_BP_MainFaculaLighter final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CLFS_Mgr_C*                         CallFunc_GetActorOfClass_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainFaculaLighter_C_ExecuteUbergraph_BP_MainFaculaLighter) == 0x000008, "Wrong alignment on BP_MainFaculaLighter_C_ExecuteUbergraph_BP_MainFaculaLighter");
static_assert(sizeof(BP_MainFaculaLighter_C_ExecuteUbergraph_BP_MainFaculaLighter) == 0x000018, "Wrong size on BP_MainFaculaLighter_C_ExecuteUbergraph_BP_MainFaculaLighter");
static_assert(offsetof(BP_MainFaculaLighter_C_ExecuteUbergraph_BP_MainFaculaLighter, EntryPoint) == 0x000000, "Member 'BP_MainFaculaLighter_C_ExecuteUbergraph_BP_MainFaculaLighter::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MainFaculaLighter_C_ExecuteUbergraph_BP_MainFaculaLighter, CallFunc_GetActorOfClass_ReturnValue) == 0x000008, "Member 'BP_MainFaculaLighter_C_ExecuteUbergraph_BP_MainFaculaLighter::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainFaculaLighter_C_ExecuteUbergraph_BP_MainFaculaLighter, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_MainFaculaLighter_C_ExecuteUbergraph_BP_MainFaculaLighter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainFaculaLighter_C_ExecuteUbergraph_BP_MainFaculaLighter, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'BP_MainFaculaLighter_C_ExecuteUbergraph_BP_MainFaculaLighter::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_MainFaculaLighter.BP_MainFaculaLighter_C.Lighten
// 0x0110 (0x0110 - 0x0000)
struct BP_MainFaculaLighter_C_Lighten final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_Lighter                             K2Node_MakeStruct_S_Lighter;                       // 0x00D8(0x0038)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainFaculaLighter_C_Lighten) == 0x000008, "Wrong alignment on BP_MainFaculaLighter_C_Lighten");
static_assert(sizeof(BP_MainFaculaLighter_C_Lighten) == 0x000110, "Wrong size on BP_MainFaculaLighter_C_Lighten");
static_assert(offsetof(BP_MainFaculaLighter_C_Lighten, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_MainFaculaLighter_C_Lighten::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainFaculaLighter_C_Lighten, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_MainFaculaLighter_C_Lighten::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainFaculaLighter_C_Lighten, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000010, "Member 'BP_MainFaculaLighter_C_Lighten::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainFaculaLighter_C_Lighten, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000028, "Member 'BP_MainFaculaLighter_C_Lighten::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainFaculaLighter_C_Lighten, CallFunc_GetActorScale3D_ReturnValue) == 0x000040, "Member 'BP_MainFaculaLighter_C_Lighten::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainFaculaLighter_C_Lighten, CallFunc_BreakRotator_Roll) == 0x000058, "Member 'BP_MainFaculaLighter_C_Lighten::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_MainFaculaLighter_C_Lighten, CallFunc_BreakRotator_Pitch) == 0x00005C, "Member 'BP_MainFaculaLighter_C_Lighten::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_MainFaculaLighter_C_Lighten, CallFunc_BreakRotator_Yaw) == 0x000060, "Member 'BP_MainFaculaLighter_C_Lighten::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_MainFaculaLighter_C_Lighten, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000068, "Member 'BP_MainFaculaLighter_C_Lighten::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainFaculaLighter_C_Lighten, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000080, "Member 'BP_MainFaculaLighter_C_Lighten::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainFaculaLighter_C_Lighten, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000098, "Member 'BP_MainFaculaLighter_C_Lighten::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainFaculaLighter_C_Lighten, CallFunc_BreakVector_X) == 0x0000B0, "Member 'BP_MainFaculaLighter_C_Lighten::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_MainFaculaLighter_C_Lighten, CallFunc_BreakVector_Y) == 0x0000B8, "Member 'BP_MainFaculaLighter_C_Lighten::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_MainFaculaLighter_C_Lighten, CallFunc_BreakVector_Z) == 0x0000C0, "Member 'BP_MainFaculaLighter_C_Lighten::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_MainFaculaLighter_C_Lighten, CallFunc_MakeVector2D_ReturnValue) == 0x0000C8, "Member 'BP_MainFaculaLighter_C_Lighten::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MainFaculaLighter_C_Lighten, K2Node_MakeStruct_S_Lighter) == 0x0000D8, "Member 'BP_MainFaculaLighter_C_Lighten::K2Node_MakeStruct_S_Lighter' has a wrong offset!");

}

