#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NikkiPlayer_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "X6Game_structs.hpp"
#include "X6Game_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass NikkiPlayer_BP.NikkiPlayer_BP_C
// 0x0210 (0x0AF0 - 0x08E0)
class ANikkiPlayer_BP_C final : public AX6NikkiPawn
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x08E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_BasedMovementReplicateHelperComponent_C* BP_BasedMovementReplicateHelperComponent;     // 0x08E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerWeaponComponent_C*            BP_PlayerWeaponComponent;                          // 0x08F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_MainCharacterRPCHelperComponent_C*  BP_MainCharacterRPCHelperComponent;                // 0x08F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_SpatialAudioComponent_C*            BP_SpatialAudioComponent;                          // 0x0900(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerStrafeMovementComponent_C*    BP_PlayerStrafeMovementComponent;                  // 0x0908(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerCombatMovementComponent_C*    BP_PlayerCombatMovementComponent;                  // 0x0910(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_MainCharacterInAirMovementComp_C*   BP_MainCharacterInAirMovementComp;                 // 0x0918(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_MainCharacterRegularMovementComp_C* BP_MainCharacterRegularMovementComp;               // 0x0920(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_UIWS_Interactor_C*                  BP_UIWS_Interactor;                                // 0x0928(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHeightfieldReadbackComponent*          HeightfieldReadback;                               // 0x0930(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_CombatPartHitComponent_C*           BP_CombatPartHitComponent;                         // 0x0938(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           Ak;                                                // 0x0940(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNikkiPhysicsManagerComponent*          NikkiPhysicsManager;                               // 0x0948(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_Foliage_Interactor_Component_C*     BP_Foliage_Interactor_Component;                   // 0x0950(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_AIAgentComponent_C*                 BP_AIAgentComponent;                               // 0x0958(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 HeadOrnament;                                      // 0x0960(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_AdjustTransformComponent_C*         BP_AdjustTransformComponent;                       // 0x0968(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterBaseInfoComponent_C*       BP_CharacterBaseInfoComponent;                     // 0x0970(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DispatchInputComponent_C*           BP_DispatchInputComponent;                         // 0x0978(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_AdvancedCamera_C*                   AdvancedCamera;                                    // 0x0980(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   PlayerFootBlobShadowRight;                         // 0x0988(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   PlayerFootBlobShadowLeft;                          // 0x0990(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UX6AIStimuliSourceComponent*            X6AIStimuliSource;                                 // 0x0998(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_CombatPerformanceProcessorComponent_C* BP_CombatPerformanceProcessorComponent;         // 0x09A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerInAirMoveableComponent_C*     BP_PlayerInAirMoveableComponent;                   // 0x09A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerFeedBackPerformanceComponent_C* BP_PlayerFeedBackPerformanceComponent;           // 0x09B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_X6_UIPFInteractor_Foliage_C*        BP_X6_UIPFInteractor_Foliage;                      // 0x09B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerUTCInputComponent_C*          BP_PlayerUTCInputComponent;                        // 0x09C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_CombatCharSkillOpComp_C*            BP_CombatCharSkillOpComp;                          // 0x09C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_SoundAndParticleComponent_C*        BP_SoundAndParticleComponent;                      // 0x09D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UX6CustomRootMotionComponent*           X6CustomRootMotion;                                // 0x09D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UX6NikkiCPPTickHelperComponent*         X6NikkiCPPTickHelper;                              // 0x09E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerMantleComponent_C*            BP_PlayerMantleComponent;                          // 0x09E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerAnimStatesComponent_C*        BP_PlayerAnimStatesComponent;                      // 0x09F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerMoveableComponent_C*          BP_PlayerMoveableComponent;                        // 0x09F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerSpecialAbilityComponent_C*    BP_PlayerSpecialAbilityComponent;                  // 0x0A00(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerEnvironmentEffectComponent_C* BP_PlayerEnvironmentEffectComponent;               // 0x0A08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_TemperatureBaseComponent_C*         BP_TemperatureBaseComponent;                       // 0x0A10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      BigAreaCheckInteractiveItem;                       // 0x0A18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_SuitDisplayComponent_C*             BP_SuitDisplayComponent;                           // 0x0A20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerPawnAttributesComponent_C*    BP_PlayerPawnAttributesComponent;                  // 0x0A28(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      RecognizeInteractiveItem;                          // 0x0A30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_RecognizeInteractiveActorComp_C*    BP_RecognizeInteractiveActorComp;                  // 0x0A38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Shoe;                                              // 0x0A40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Trouser;                                           // 0x0A48(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Hair;                                              // 0x0A50(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Skirt;                                             // 0x0A58(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              Attacking;                                         // 0x0A60(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	double                                        YAxis;                                             // 0x0A70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        XAxis;                                             // 0x0A78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AX6PlayerCameraManager*                 PlayerCameraManager;                               // 0x0A80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        RecordedDefaultWalkSpeed;                          // 0x0A88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class AActor* InteractingActor)> LastInteractMoveFinished;         // 0x0A90(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              On_Land;                                           // 0x0AA0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              PlayerDiedPuzzle;                                  // 0x0AB0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              CameraLockOnFinish;                                // 0x0AC0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UDecalComponent*                        Decal_TestYL;                                      // 0x0AD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Blink_L;                                           // 0x0AD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Blink_R;                                           // 0x0AE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GeneralLocoRequestHandler_C*        GeneralLocoRequestObj;                             // 0x0AE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void BP_ResetInputCache();
	void CheckClickActor();
	bool CheckInput();
	void CreateAndBindLocoRequestObj();
	void ExecuteUbergraph_NikkiPlayer_BP(int32 EntryPoint);
	void GetAIObjectClass(class FString* LuaClassPath);
	struct FVector GetInputNormalVector();
	void InpActEvt_Movement_Move_X_Axis_Action_K2Node_X6EnhancedInputActionEvent_2(const struct FX6InputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const TArray<struct FX6InputActionTriggerKeyData>& TriggerKeyDatas);
	void InpActEvt_Movement_Move_X_Axis_Action_K2Node_X6EnhancedInputActionEvent_3(const struct FX6InputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const TArray<struct FX6InputActionTriggerKeyData>& TriggerKeyDatas);
	void InpActEvt_Movement_Move_Y_Axis_Action_K2Node_X6EnhancedInputActionEvent_0(const struct FX6InputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const TArray<struct FX6InputActionTriggerKeyData>& TriggerKeyDatas);
	void InpActEvt_Movement_Move_Y_Axis_Action_K2Node_X6EnhancedInputActionEvent_1(const struct FX6InputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const TArray<struct FX6InputActionTriggerKeyData>& TriggerKeyDatas);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void SetJobStickState(bool Enable);
	void UITouchEvent(EX6InputTouchEvent EventType, const struct FVector& Location);
	void UserConstructionScript();

	class FString GetModuleName() const;
	struct FVector GetMoveGoalOffsetInternal(const class AActor* MovingActor) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"NikkiPlayer_BP_C">();
	}
	static class ANikkiPlayer_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ANikkiPlayer_BP_C>();
	}
};
static_assert(alignof(ANikkiPlayer_BP_C) == 0x000010, "Wrong alignment on ANikkiPlayer_BP_C");
static_assert(sizeof(ANikkiPlayer_BP_C) == 0x000AF0, "Wrong size on ANikkiPlayer_BP_C");
static_assert(offsetof(ANikkiPlayer_BP_C, UberGraphFrame) == 0x0008E0, "Member 'ANikkiPlayer_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, BP_BasedMovementReplicateHelperComponent) == 0x0008E8, "Member 'ANikkiPlayer_BP_C::BP_BasedMovementReplicateHelperComponent' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, BP_PlayerWeaponComponent) == 0x0008F0, "Member 'ANikkiPlayer_BP_C::BP_PlayerWeaponComponent' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, BP_MainCharacterRPCHelperComponent) == 0x0008F8, "Member 'ANikkiPlayer_BP_C::BP_MainCharacterRPCHelperComponent' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, BP_SpatialAudioComponent) == 0x000900, "Member 'ANikkiPlayer_BP_C::BP_SpatialAudioComponent' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, BP_PlayerStrafeMovementComponent) == 0x000908, "Member 'ANikkiPlayer_BP_C::BP_PlayerStrafeMovementComponent' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, BP_PlayerCombatMovementComponent) == 0x000910, "Member 'ANikkiPlayer_BP_C::BP_PlayerCombatMovementComponent' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, BP_MainCharacterInAirMovementComp) == 0x000918, "Member 'ANikkiPlayer_BP_C::BP_MainCharacterInAirMovementComp' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, BP_MainCharacterRegularMovementComp) == 0x000920, "Member 'ANikkiPlayer_BP_C::BP_MainCharacterRegularMovementComp' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, BP_UIWS_Interactor) == 0x000928, "Member 'ANikkiPlayer_BP_C::BP_UIWS_Interactor' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, HeightfieldReadback) == 0x000930, "Member 'ANikkiPlayer_BP_C::HeightfieldReadback' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, BP_CombatPartHitComponent) == 0x000938, "Member 'ANikkiPlayer_BP_C::BP_CombatPartHitComponent' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, Ak) == 0x000940, "Member 'ANikkiPlayer_BP_C::Ak' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, NikkiPhysicsManager) == 0x000948, "Member 'ANikkiPlayer_BP_C::NikkiPhysicsManager' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, BP_Foliage_Interactor_Component) == 0x000950, "Member 'ANikkiPlayer_BP_C::BP_Foliage_Interactor_Component' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, BP_AIAgentComponent) == 0x000958, "Member 'ANikkiPlayer_BP_C::BP_AIAgentComponent' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, HeadOrnament) == 0x000960, "Member 'ANikkiPlayer_BP_C::HeadOrnament' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, BP_AdjustTransformComponent) == 0x000968, "Member 'ANikkiPlayer_BP_C::BP_AdjustTransformComponent' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, BP_CharacterBaseInfoComponent) == 0x000970, "Member 'ANikkiPlayer_BP_C::BP_CharacterBaseInfoComponent' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, BP_DispatchInputComponent) == 0x000978, "Member 'ANikkiPlayer_BP_C::BP_DispatchInputComponent' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, AdvancedCamera) == 0x000980, "Member 'ANikkiPlayer_BP_C::AdvancedCamera' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, PlayerFootBlobShadowRight) == 0x000988, "Member 'ANikkiPlayer_BP_C::PlayerFootBlobShadowRight' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, PlayerFootBlobShadowLeft) == 0x000990, "Member 'ANikkiPlayer_BP_C::PlayerFootBlobShadowLeft' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, X6AIStimuliSource) == 0x000998, "Member 'ANikkiPlayer_BP_C::X6AIStimuliSource' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, BP_CombatPerformanceProcessorComponent) == 0x0009A0, "Member 'ANikkiPlayer_BP_C::BP_CombatPerformanceProcessorComponent' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, BP_PlayerInAirMoveableComponent) == 0x0009A8, "Member 'ANikkiPlayer_BP_C::BP_PlayerInAirMoveableComponent' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, BP_PlayerFeedBackPerformanceComponent) == 0x0009B0, "Member 'ANikkiPlayer_BP_C::BP_PlayerFeedBackPerformanceComponent' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, BP_X6_UIPFInteractor_Foliage) == 0x0009B8, "Member 'ANikkiPlayer_BP_C::BP_X6_UIPFInteractor_Foliage' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, BP_PlayerUTCInputComponent) == 0x0009C0, "Member 'ANikkiPlayer_BP_C::BP_PlayerUTCInputComponent' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, BP_CombatCharSkillOpComp) == 0x0009C8, "Member 'ANikkiPlayer_BP_C::BP_CombatCharSkillOpComp' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, BP_SoundAndParticleComponent) == 0x0009D0, "Member 'ANikkiPlayer_BP_C::BP_SoundAndParticleComponent' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, X6CustomRootMotion) == 0x0009D8, "Member 'ANikkiPlayer_BP_C::X6CustomRootMotion' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, X6NikkiCPPTickHelper) == 0x0009E0, "Member 'ANikkiPlayer_BP_C::X6NikkiCPPTickHelper' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, BP_PlayerMantleComponent) == 0x0009E8, "Member 'ANikkiPlayer_BP_C::BP_PlayerMantleComponent' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, BP_PlayerAnimStatesComponent) == 0x0009F0, "Member 'ANikkiPlayer_BP_C::BP_PlayerAnimStatesComponent' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, BP_PlayerMoveableComponent) == 0x0009F8, "Member 'ANikkiPlayer_BP_C::BP_PlayerMoveableComponent' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, BP_PlayerSpecialAbilityComponent) == 0x000A00, "Member 'ANikkiPlayer_BP_C::BP_PlayerSpecialAbilityComponent' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, BP_PlayerEnvironmentEffectComponent) == 0x000A08, "Member 'ANikkiPlayer_BP_C::BP_PlayerEnvironmentEffectComponent' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, BP_TemperatureBaseComponent) == 0x000A10, "Member 'ANikkiPlayer_BP_C::BP_TemperatureBaseComponent' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, BigAreaCheckInteractiveItem) == 0x000A18, "Member 'ANikkiPlayer_BP_C::BigAreaCheckInteractiveItem' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, BP_SuitDisplayComponent) == 0x000A20, "Member 'ANikkiPlayer_BP_C::BP_SuitDisplayComponent' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, BP_PlayerPawnAttributesComponent) == 0x000A28, "Member 'ANikkiPlayer_BP_C::BP_PlayerPawnAttributesComponent' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, RecognizeInteractiveItem) == 0x000A30, "Member 'ANikkiPlayer_BP_C::RecognizeInteractiveItem' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, BP_RecognizeInteractiveActorComp) == 0x000A38, "Member 'ANikkiPlayer_BP_C::BP_RecognizeInteractiveActorComp' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, Shoe) == 0x000A40, "Member 'ANikkiPlayer_BP_C::Shoe' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, Trouser) == 0x000A48, "Member 'ANikkiPlayer_BP_C::Trouser' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, Hair) == 0x000A50, "Member 'ANikkiPlayer_BP_C::Hair' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, Skirt) == 0x000A58, "Member 'ANikkiPlayer_BP_C::Skirt' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, Attacking) == 0x000A60, "Member 'ANikkiPlayer_BP_C::Attacking' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, YAxis) == 0x000A70, "Member 'ANikkiPlayer_BP_C::YAxis' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, XAxis) == 0x000A78, "Member 'ANikkiPlayer_BP_C::XAxis' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, PlayerCameraManager) == 0x000A80, "Member 'ANikkiPlayer_BP_C::PlayerCameraManager' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, RecordedDefaultWalkSpeed) == 0x000A88, "Member 'ANikkiPlayer_BP_C::RecordedDefaultWalkSpeed' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, LastInteractMoveFinished) == 0x000A90, "Member 'ANikkiPlayer_BP_C::LastInteractMoveFinished' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, On_Land) == 0x000AA0, "Member 'ANikkiPlayer_BP_C::On_Land' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, PlayerDiedPuzzle) == 0x000AB0, "Member 'ANikkiPlayer_BP_C::PlayerDiedPuzzle' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, CameraLockOnFinish) == 0x000AC0, "Member 'ANikkiPlayer_BP_C::CameraLockOnFinish' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, Decal_TestYL) == 0x000AD0, "Member 'ANikkiPlayer_BP_C::Decal_TestYL' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, Blink_L) == 0x000AD8, "Member 'ANikkiPlayer_BP_C::Blink_L' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, Blink_R) == 0x000AE0, "Member 'ANikkiPlayer_BP_C::Blink_R' has a wrong offset!");
static_assert(offsetof(ANikkiPlayer_BP_C, GeneralLocoRequestObj) == 0x000AE8, "Member 'ANikkiPlayer_BP_C::GeneralLocoRequestObj' has a wrong offset!");

}

