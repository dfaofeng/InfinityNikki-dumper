#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PSDKBasic

#include "Basic.hpp"

#include "PSDKBasic_classes.hpp"
#include "PSDKBasic_parameters.hpp"


namespace SDK
{

// Function PSDKBasic.PSDKGamePadHelpersFunctionLibrary.GetCurrentInputType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPSDKInputType                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPSDKInputType UPSDKGamePadHelpersFunctionLibrary::GetCurrentInputType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PSDKGamePadHelpersFunctionLibrary", "GetCurrentInputType");

	Params::PSDKGamePadHelpersFunctionLibrary_GetCurrentInputType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PSDKBasic.PSDKGamePadHelpersFunctionLibrary.IsCurrentGamePad
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPSDKGamePadHelpersFunctionLibrary::IsCurrentGamePad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PSDKGamePadHelpersFunctionLibrary", "IsCurrentGamePad");

	Params::PSDKGamePadHelpersFunctionLibrary_IsCurrentGamePad Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PSDKBasic.PSDKGamePadHelpersFunctionLibrary.IsSteamDeck
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPSDKGamePadHelpersFunctionLibrary::IsSteamDeck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PSDKGamePadHelpersFunctionLibrary", "IsSteamDeck");

	Params::PSDKGamePadHelpersFunctionLibrary_IsSteamDeck Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PSDKBasic.PSDKGamePadHelpersFunctionLibrary.IsTopWidgetInLayers
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPSdkUIBaseWidget*                UserWidget                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPSDKGamePadHelpersFunctionLibrary::IsTopWidgetInLayers(class UPSdkUIBaseWidget* UserWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PSDKGamePadHelpersFunctionLibrary", "IsTopWidgetInLayers");

	Params::PSDKGamePadHelpersFunctionLibrary_IsTopWidgetInLayers Parms{};

	Parms.UserWidget = UserWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PSDKBasic.PSDKGamePadHelpersFunctionLibrary.ShouldShowGamePadIcons
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPSdkUIBaseWidget*                UserWidget                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPSDKGamePadHelpersFunctionLibrary::ShouldShowGamePadIcons(class UPSdkUIBaseWidget* UserWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PSDKGamePadHelpersFunctionLibrary", "ShouldShowGamePadIcons");

	Params::PSDKGamePadHelpersFunctionLibrary_ShouldShowGamePadIcons Parms{};

	Parms.UserWidget = UserWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PSDKBasic.PSDKGamePadInterface.OnKeyDownTrigger
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FKeyEvent&                 KeyEvent                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void IPSDKGamePadInterface::OnKeyDownTrigger(const struct FKeyEvent& KeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PSDKGamePadInterface", "OnKeyDownTrigger");

	Params::PSDKGamePadInterface_OnKeyDownTrigger Parms{};

	Parms.KeyEvent = std::move(KeyEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PSDKBasic.PSDKGamePadInterface.OnKeyUpTrigger
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FKeyEvent&                 KeyEvent                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void IPSDKGamePadInterface::OnKeyUpTrigger(const struct FKeyEvent& KeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PSDKGamePadInterface", "OnKeyUpTrigger");

	Params::PSDKGamePadInterface_OnKeyUpTrigger Parms{};

	Parms.KeyEvent = std::move(KeyEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PSDKBasic.PSdkPS5BaseUI.OnGamepadButton
// (Final, Native, Private, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FKeyEvent&                 KeyEvent                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UPSdkPS5BaseUI::OnGamepadButton(const struct FKeyEvent& KeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PSdkPS5BaseUI", "OnGamepadButton");

	Params::PSdkPS5BaseUI_OnGamepadButton Parms{};

	Parms.KeyEvent = std::move(KeyEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PSDKBasic.PSdkUIOneButtonUI.OnCloseButton
// (Final, Native, Protected, BlueprintCallable)

void UPSdkUIOneButtonUI::OnCloseButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PSdkUIOneButtonUI", "OnCloseButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PSDKBasic.PSdkUIOneButtonUI.OnCommitButton
// (Final, Native, Protected, BlueprintCallable)

void UPSdkUIOneButtonUI::OnCommitButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PSdkUIOneButtonUI", "OnCommitButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PSDKBasic.PSdkUITwoButtonsUI.OnCancelButton
// (Final, Native, Protected, BlueprintCallable)

void UPSdkUITwoButtonsUI::OnCancelButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PSdkUITwoButtonsUI", "OnCancelButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PSDKBasic.PSdkUITwoButtonsUI.OnCloseButton
// (Final, Native, Protected, BlueprintCallable)

void UPSdkUITwoButtonsUI::OnCloseButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PSdkUITwoButtonsUI", "OnCloseButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PSDKBasic.PSdkUITwoButtonsUI.OnCommitButton
// (Final, Native, Protected, BlueprintCallable)

void UPSdkUITwoButtonsUI::OnCommitButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PSdkUITwoButtonsUI", "OnCommitButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PSDKBasic.PSdkUITwoButtonsVerticalUI.OnCancelButtonClicked
// (Final, Native, Protected, BlueprintCallable)

void UPSdkUITwoButtonsVerticalUI::OnCancelButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PSdkUITwoButtonsVerticalUI", "OnCancelButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PSDKBasic.PSdkUITwoButtonsVerticalUI.OnCancelButtonHovered
// (Final, Native, Protected, BlueprintCallable)

void UPSdkUITwoButtonsVerticalUI::OnCancelButtonHovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PSdkUITwoButtonsVerticalUI", "OnCancelButtonHovered");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PSDKBasic.PSdkUITwoButtonsVerticalUI.OnCancelButtonPressed
// (Final, Native, Protected, BlueprintCallable)

void UPSdkUITwoButtonsVerticalUI::OnCancelButtonPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PSdkUITwoButtonsVerticalUI", "OnCancelButtonPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PSDKBasic.PSdkUITwoButtonsVerticalUI.OnCancelButtonReleased
// (Final, Native, Protected, BlueprintCallable)

void UPSdkUITwoButtonsVerticalUI::OnCancelButtonReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PSdkUITwoButtonsVerticalUI", "OnCancelButtonReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PSDKBasic.PSdkUITwoButtonsVerticalUI.OnCancelButtonUnhovered
// (Final, Native, Protected, BlueprintCallable)

void UPSdkUITwoButtonsVerticalUI::OnCancelButtonUnhovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PSdkUITwoButtonsVerticalUI", "OnCancelButtonUnhovered");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PSDKBasic.PSdkUITwoButtonsVerticalUI.OnCloseButtonReleased
// (Final, Native, Protected, BlueprintCallable)

void UPSdkUITwoButtonsVerticalUI::OnCloseButtonReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PSdkUITwoButtonsVerticalUI", "OnCloseButtonReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PSDKBasic.PSdkUITwoButtonsVerticalUI.OnCommitButtonReleased
// (Final, Native, Protected, BlueprintCallable)

void UPSdkUITwoButtonsVerticalUI::OnCommitButtonReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PSdkUITwoButtonsVerticalUI", "OnCommitButtonReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PSDKBasic.PSWebBrowser.Handle
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const class FString&                    Params_0                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPSWebBrowser::Handle(const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PSWebBrowser", "Handle");

	Params::PSWebBrowser_Handle Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PSDKBasic.PSWebBrowser.Reload
// (Final, Native, Public, BlueprintCallable, Const)

void UPSWebBrowser::Reload() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PSWebBrowser", "Reload");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

