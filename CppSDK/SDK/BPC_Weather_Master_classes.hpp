#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_Weather_Master

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DynamicEnvironmentSystem_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPC_Weather_Master.BPC_Weather_Master_C
// 0x0030 (0x0290 - 0x0260)
#pragma pack(push, 0x1)
class alignas(0x10) UBPC_Weather_Master_C : public UDynamicWeatherComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        SelfProgress;                                      // 0x0268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URainRipplesComponent*                  RainRipple;                                        // 0x0270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_DyEnvWeathers_C*                    DynamicWeatherBP;                                  // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          AlwaysNeed;                                        // 0x0280(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BPC_Weather_Master(int32 EntryPoint);
	void OnCreated();
	void OnDestroyed();
	void FadeOutComplete_BP();
	void WhenFadeoutDoSth();
	void OnFadeIn(float Progress);
	void OnFadeOut(float Progress);
	void OnFadeOutComplete();
	void ReceiveBeginPlay();
	void SetupParticle();
	void SetupPostProcessMaterial();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPC_Weather_Master_C">();
	}
	static class UBPC_Weather_Master_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPC_Weather_Master_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(UBPC_Weather_Master_C) == 0x000010, "Wrong alignment on UBPC_Weather_Master_C");
static_assert(sizeof(UBPC_Weather_Master_C) == 0x000290, "Wrong size on UBPC_Weather_Master_C");
static_assert(offsetof(UBPC_Weather_Master_C, UberGraphFrame) == 0x000260, "Member 'UBPC_Weather_Master_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPC_Weather_Master_C, SelfProgress) == 0x000268, "Member 'UBPC_Weather_Master_C::SelfProgress' has a wrong offset!");
static_assert(offsetof(UBPC_Weather_Master_C, RainRipple) == 0x000270, "Member 'UBPC_Weather_Master_C::RainRipple' has a wrong offset!");
static_assert(offsetof(UBPC_Weather_Master_C, DynamicWeatherBP) == 0x000278, "Member 'UBPC_Weather_Master_C::DynamicWeatherBP' has a wrong offset!");
static_assert(offsetof(UBPC_Weather_Master_C, AlwaysNeed) == 0x000280, "Member 'UBPC_Weather_Master_C::AlwaysNeed' has a wrong offset!");

}

