#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NPCPhotoReaction_PassThroughConfig_Template

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "X6Game_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_NPCPhotoReaction_PassThroughConfig_Template.BP_NPCPhotoReaction_PassThroughConfig_Template_C
// 0x0060 (0x0090 - 0x0030)
class UBP_NPCPhotoReaction_PassThroughConfig_Template_C final : public UPrimaryDataAsset
{
public:
	TSoftObjectPtr<class UAnimSequence>           PhotoReactionAnim;                                 // 0x0030(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	double                                        TrackDistanceToPlayer;                             // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SpotAcceptance;                                    // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PerformancePointTime;                              // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PerformanceCollisionBoxHalfSize;                   // 0x0070(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUnequipHandHeld;                                  // 0x0088(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERegularLocomotionType                        MoveType;                                          // 0x0089(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_NPCPhotoReaction_PassThroughConfig_Template_C">();
	}
	static class UBP_NPCPhotoReaction_PassThroughConfig_Template_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_NPCPhotoReaction_PassThroughConfig_Template_C>();
	}
};
static_assert(alignof(UBP_NPCPhotoReaction_PassThroughConfig_Template_C) == 0x000008, "Wrong alignment on UBP_NPCPhotoReaction_PassThroughConfig_Template_C");
static_assert(sizeof(UBP_NPCPhotoReaction_PassThroughConfig_Template_C) == 0x000090, "Wrong size on UBP_NPCPhotoReaction_PassThroughConfig_Template_C");
static_assert(offsetof(UBP_NPCPhotoReaction_PassThroughConfig_Template_C, PhotoReactionAnim) == 0x000030, "Member 'UBP_NPCPhotoReaction_PassThroughConfig_Template_C::PhotoReactionAnim' has a wrong offset!");
static_assert(offsetof(UBP_NPCPhotoReaction_PassThroughConfig_Template_C, TrackDistanceToPlayer) == 0x000058, "Member 'UBP_NPCPhotoReaction_PassThroughConfig_Template_C::TrackDistanceToPlayer' has a wrong offset!");
static_assert(offsetof(UBP_NPCPhotoReaction_PassThroughConfig_Template_C, SpotAcceptance) == 0x000060, "Member 'UBP_NPCPhotoReaction_PassThroughConfig_Template_C::SpotAcceptance' has a wrong offset!");
static_assert(offsetof(UBP_NPCPhotoReaction_PassThroughConfig_Template_C, PerformancePointTime) == 0x000068, "Member 'UBP_NPCPhotoReaction_PassThroughConfig_Template_C::PerformancePointTime' has a wrong offset!");
static_assert(offsetof(UBP_NPCPhotoReaction_PassThroughConfig_Template_C, PerformanceCollisionBoxHalfSize) == 0x000070, "Member 'UBP_NPCPhotoReaction_PassThroughConfig_Template_C::PerformanceCollisionBoxHalfSize' has a wrong offset!");
static_assert(offsetof(UBP_NPCPhotoReaction_PassThroughConfig_Template_C, bUnequipHandHeld) == 0x000088, "Member 'UBP_NPCPhotoReaction_PassThroughConfig_Template_C::bUnequipHandHeld' has a wrong offset!");
static_assert(offsetof(UBP_NPCPhotoReaction_PassThroughConfig_Template_C, MoveType) == 0x000089, "Member 'UBP_NPCPhotoReaction_PassThroughConfig_Template_C::MoveType' has a wrong offset!");

}

