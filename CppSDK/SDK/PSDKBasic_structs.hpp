#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PSDKBasic

#include "Basic.hpp"


namespace SDK
{

// Enum PSDKBasic.EPSDKInputType
// NumValues: 0x0004
enum class EPSDKInputType : uint8
{
	XBOX                                     = 0,
	PS                                       = 1,
	Other                                    = 2,
	EPSDKInputType_MAX                       = 3,
};

// Enum PSDKBasic.EPSDKNotificationNotificationType
// NumValues: 0x000C
enum class EPSDKNotificationNotificationType : uint8
{
	DO_NOT_USE_ME                            = 0,
	USER_NOT_PERMIT_PRIVACY_FORCE_QUIT       = 1,
	REQUIRE_SHOW_MOUSE                       = 2,
	GAME_FORCE_UPDATE                        = 3,
	STEAM_ACCOUNT_ERROR                      = 4,
	USER_REFUSE_BIND_INFOLD_ACCOUNT_FORCE_QUIT = 5,
	LAUNCHER_ERROR_FORCE_QUIT                = 6,
	PSN_MULTIPLAYER_JOIN_SESSION             = 7,
	PSN_MULTIPLAYER_SESSION_STATUS_CHANGED   = 8,
	PSN_MULTIPLAYER_PLAYER_STATUS_CHANGED    = 9,
	PLATFORM_ACCOUNT_LOGIN_STATUS_CHANGED    = 10,
	EPSDKNotificationNotificationType_MAX    = 11,
};

// Enum PSDKBasic.EPSDKNotificationPlatformAccountLoginStatus
// NumValues: 0x0003
enum class EPSDKNotificationPlatformAccountLoginStatus : uint8
{
	Login                                    = 0,
	Logout                                   = 1,
	EPSDKNotificationPlatformAccountLoginStatus_MAX = 2,
};

// Enum PSDKBasic.EPSDKNotificationPlayerStatusChangedType
// NumValues: 0x0003
enum class EPSDKNotificationPlayerStatusChangedType : uint8
{
	JOINED                                   = 0,
	LEAVED                                   = 1,
	EPSDKNotificationPlayerStatusChangedType_MAX = 2,
};

// Enum PSDKBasic.EPSDKNotificationPlayerSessionChangedType
// NumValues: 0x0003
enum class EPSDKNotificationPlayerSessionChangedType : uint8
{
	CREATED                                  = 0,
	DELETED                                  = 1,
	EPSDKNotificationPlayerSessionChangedType_MAX = 2,
};

// ScriptStruct PSDKBasic.JsonData
// 0x00B8 (0x00B8 - 0x0000)
struct alignas(0x08) FJsonData
{
public:
	uint8                                         Pad_0[0xB8];                                       // 0x0000(0x00B8)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FJsonData) == 0x000008, "Wrong alignment on FJsonData");
static_assert(sizeof(FJsonData) == 0x0000B8, "Wrong size on FJsonData");

// ScriptStruct PSDKBasic.PSDKBackendResponseBase
// 0x0028 (0x00E0 - 0x00B8)
struct FPSDKBackendResponseBase : public FJsonData
{
public:
	int32                                         Code;                                              // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Info;                                              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 request_id;                                        // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FPSDKBackendResponseBase) == 0x000008, "Wrong alignment on FPSDKBackendResponseBase");
static_assert(sizeof(FPSDKBackendResponseBase) == 0x0000E0, "Wrong size on FPSDKBackendResponseBase");
static_assert(offsetof(FPSDKBackendResponseBase, Code) == 0x0000B8, "Member 'FPSDKBackendResponseBase::Code' has a wrong offset!");
static_assert(offsetof(FPSDKBackendResponseBase, Info) == 0x0000C0, "Member 'FPSDKBackendResponseBase::Info' has a wrong offset!");
static_assert(offsetof(FPSDKBackendResponseBase, request_id) == 0x0000D0, "Member 'FPSDKBackendResponseBase::request_id' has a wrong offset!");

// ScriptStruct PSDKBasic.PSBffBasicModel
// 0x0038 (0x0038 - 0x0000)
struct FPSBffBasicModel
{
public:
	int32                                         Code;                                              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Info;                                              // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 request_id;                                        // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ResponseString;                                    // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FPSBffBasicModel) == 0x000008, "Wrong alignment on FPSBffBasicModel");
static_assert(sizeof(FPSBffBasicModel) == 0x000038, "Wrong size on FPSBffBasicModel");
static_assert(offsetof(FPSBffBasicModel, Code) == 0x000000, "Member 'FPSBffBasicModel::Code' has a wrong offset!");
static_assert(offsetof(FPSBffBasicModel, Info) == 0x000008, "Member 'FPSBffBasicModel::Info' has a wrong offset!");
static_assert(offsetof(FPSBffBasicModel, request_id) == 0x000018, "Member 'FPSBffBasicModel::request_id' has a wrong offset!");
static_assert(offsetof(FPSBffBasicModel, ResponseString) == 0x000028, "Member 'FPSBffBasicModel::ResponseString' has a wrong offset!");

// ScriptStruct PSDKBasic.PSDKNotificationPlatformAccountLoginStatusNotification
// 0x0018 (0x00D0 - 0x00B8)
struct FPSDKNotificationPlatformAccountLoginStatusNotification final : public FJsonData
{
public:
	class FString                                 accountId;                                         // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C8[0x1];                                       // 0x00C8(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         oldStatus;                                         // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CA[0x1];                                       // 0x00CA(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         newStatus;                                         // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FPSDKNotificationPlatformAccountLoginStatusNotification) == 0x000008, "Wrong alignment on FPSDKNotificationPlatformAccountLoginStatusNotification");
static_assert(sizeof(FPSDKNotificationPlatformAccountLoginStatusNotification) == 0x0000D0, "Wrong size on FPSDKNotificationPlatformAccountLoginStatusNotification");
static_assert(offsetof(FPSDKNotificationPlatformAccountLoginStatusNotification, accountId) == 0x0000B8, "Member 'FPSDKNotificationPlatformAccountLoginStatusNotification::accountId' has a wrong offset!");
static_assert(offsetof(FPSDKNotificationPlatformAccountLoginStatusNotification, oldStatus) == 0x0000C9, "Member 'FPSDKNotificationPlatformAccountLoginStatusNotification::oldStatus' has a wrong offset!");
static_assert(offsetof(FPSDKNotificationPlatformAccountLoginStatusNotification, newStatus) == 0x0000CB, "Member 'FPSDKNotificationPlatformAccountLoginStatusNotification::newStatus' has a wrong offset!");

// ScriptStruct PSDKBasic.PSDKNotificationForceUpdateNotification
// 0x0058 (0x0110 - 0x00B8)
struct FPSDKNotificationForceUpdateNotification final : public FJsonData
{
public:
	int32                                         Ret;                                               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Type;                                              // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 oldVersion;                                        // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D8[0x8];                                       // 0x00D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 minNewVersion;                                     // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F0[0x8];                                       // 0x00F0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 msg;                                               // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_108[0x8];                                      // 0x0108(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FPSDKNotificationForceUpdateNotification) == 0x000008, "Wrong alignment on FPSDKNotificationForceUpdateNotification");
static_assert(sizeof(FPSDKNotificationForceUpdateNotification) == 0x000110, "Wrong size on FPSDKNotificationForceUpdateNotification");
static_assert(offsetof(FPSDKNotificationForceUpdateNotification, Ret) == 0x0000B8, "Member 'FPSDKNotificationForceUpdateNotification::Ret' has a wrong offset!");
static_assert(offsetof(FPSDKNotificationForceUpdateNotification, Type) == 0x0000C0, "Member 'FPSDKNotificationForceUpdateNotification::Type' has a wrong offset!");
static_assert(offsetof(FPSDKNotificationForceUpdateNotification, oldVersion) == 0x0000C8, "Member 'FPSDKNotificationForceUpdateNotification::oldVersion' has a wrong offset!");
static_assert(offsetof(FPSDKNotificationForceUpdateNotification, minNewVersion) == 0x0000E0, "Member 'FPSDKNotificationForceUpdateNotification::minNewVersion' has a wrong offset!");
static_assert(offsetof(FPSDKNotificationForceUpdateNotification, msg) == 0x0000F8, "Member 'FPSDKNotificationForceUpdateNotification::msg' has a wrong offset!");

// ScriptStruct PSDKBasic.PSDKNotificationGameIntentJoinSession
// 0x0030 (0x00E8 - 0x00B8)
struct FPSDKNotificationGameIntentJoinSession final : public FJsonData
{
public:
	class FString                                 playerSessionId;                                   // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C8[0x8];                                       // 0x00C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 playerId;                                          // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E0[0x8];                                       // 0x00E0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FPSDKNotificationGameIntentJoinSession) == 0x000008, "Wrong alignment on FPSDKNotificationGameIntentJoinSession");
static_assert(sizeof(FPSDKNotificationGameIntentJoinSession) == 0x0000E8, "Wrong size on FPSDKNotificationGameIntentJoinSession");
static_assert(offsetof(FPSDKNotificationGameIntentJoinSession, playerSessionId) == 0x0000B8, "Member 'FPSDKNotificationGameIntentJoinSession::playerSessionId' has a wrong offset!");
static_assert(offsetof(FPSDKNotificationGameIntentJoinSession, playerId) == 0x0000D0, "Member 'FPSDKNotificationGameIntentJoinSession::playerId' has a wrong offset!");

// ScriptStruct PSDKBasic.PSDKNotificationPlayerStatusChanged
// 0x0050 (0x0108 - 0x00B8)
struct FPSDKNotificationPlayerStatusChanged final : public FJsonData
{
public:
	uint8                                         Type;                                              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 playerId;                                          // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D0[0x8];                                       // 0x00D0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 openId;                                            // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E8[0x8];                                       // 0x00E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 playerSessionId;                                   // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_100[0x8];                                      // 0x0100(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FPSDKNotificationPlayerStatusChanged) == 0x000008, "Wrong alignment on FPSDKNotificationPlayerStatusChanged");
static_assert(sizeof(FPSDKNotificationPlayerStatusChanged) == 0x000108, "Wrong size on FPSDKNotificationPlayerStatusChanged");
static_assert(offsetof(FPSDKNotificationPlayerStatusChanged, Type) == 0x0000B8, "Member 'FPSDKNotificationPlayerStatusChanged::Type' has a wrong offset!");
static_assert(offsetof(FPSDKNotificationPlayerStatusChanged, playerId) == 0x0000C0, "Member 'FPSDKNotificationPlayerStatusChanged::playerId' has a wrong offset!");
static_assert(offsetof(FPSDKNotificationPlayerStatusChanged, openId) == 0x0000D8, "Member 'FPSDKNotificationPlayerStatusChanged::openId' has a wrong offset!");
static_assert(offsetof(FPSDKNotificationPlayerStatusChanged, playerSessionId) == 0x0000F0, "Member 'FPSDKNotificationPlayerStatusChanged::playerSessionId' has a wrong offset!");

// ScriptStruct PSDKBasic.PSDKNotificationPlayerSessionChanged
// 0x0020 (0x00D8 - 0x00B8)
struct FPSDKNotificationPlayerSessionChanged final : public FJsonData
{
public:
	uint8                                         Type;                                              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 playerSessionId;                                   // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D0[0x8];                                       // 0x00D0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FPSDKNotificationPlayerSessionChanged) == 0x000008, "Wrong alignment on FPSDKNotificationPlayerSessionChanged");
static_assert(sizeof(FPSDKNotificationPlayerSessionChanged) == 0x0000D8, "Wrong size on FPSDKNotificationPlayerSessionChanged");
static_assert(offsetof(FPSDKNotificationPlayerSessionChanged, Type) == 0x0000B8, "Member 'FPSDKNotificationPlayerSessionChanged::Type' has a wrong offset!");
static_assert(offsetof(FPSDKNotificationPlayerSessionChanged, playerSessionId) == 0x0000C0, "Member 'FPSDKNotificationPlayerSessionChanged::playerSessionId' has a wrong offset!");

}

