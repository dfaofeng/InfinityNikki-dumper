#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HandHeldObjTemplate

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "EInt32_WeaponEquipAnimType_structs.hpp"
#include "F_Weapon_structs.hpp"
#include "X6Game_classes.hpp"
#include "F_HandObjInfo_structs.hpp"
#include "F_WeaponNiagara_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HandHeldObjTemplate.BP_HandHeldObjTemplate_C
// 0x0140 (0x0190 - 0x0050)
class UBP_HandHeldObjTemplate_C final : public UX6HandHeldObjTemplate
{
public:
	struct FF_Weapon                              Config;                                            // 0x0050(0x0038)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 WeaponName;                                        // 0x0088(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          BP_EnableCollision;                                // 0x0098(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FF_HandObjInfo>                 HandObjs;                                          // 0x00A0(0x0010)(Edit, BlueprintVisible)
	bool                                          BP_EnableFloating;                                 // 0x00B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_DoCollisionCheck;                               // 0x00B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        BP_FollowInterpSpeed;                              // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BP_Amplitude;                                      // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BP_Frequency;                                      // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             BP_RelativeTransform;                              // 0x00D0(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FF_WeaponNiagara>               BP_NiagaraConfigs;                                 // 0x0130(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          BP_EnableNiagaraEquip;                             // 0x0140(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FF_WeaponNiagara>               BP_EquipNiagaraConfigs;                            // 0x0148(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FF_WeaponNiagara>               BP_UnequipNiagaraConfigs;                          // 0x0158(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        BP_ShowDelay;                                      // 0x0168(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BP_HideDelay;                                      // 0x0170(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_EnableAnimationEquip;                           // 0x0178(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	EInt32_WeaponEquipAnimType                    BP_EquipAnimType;                                  // 0x017C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInt32_WeaponEquipAnimType                    BP_UnequipAnimType;                                // 0x0180(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HandHeldObjTemplate_C">();
	}
	static class UBP_HandHeldObjTemplate_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_HandHeldObjTemplate_C>();
	}
};
static_assert(alignof(UBP_HandHeldObjTemplate_C) == 0x000010, "Wrong alignment on UBP_HandHeldObjTemplate_C");
static_assert(sizeof(UBP_HandHeldObjTemplate_C) == 0x000190, "Wrong size on UBP_HandHeldObjTemplate_C");
static_assert(offsetof(UBP_HandHeldObjTemplate_C, Config) == 0x000050, "Member 'UBP_HandHeldObjTemplate_C::Config' has a wrong offset!");
static_assert(offsetof(UBP_HandHeldObjTemplate_C, WeaponName) == 0x000088, "Member 'UBP_HandHeldObjTemplate_C::WeaponName' has a wrong offset!");
static_assert(offsetof(UBP_HandHeldObjTemplate_C, BP_EnableCollision) == 0x000098, "Member 'UBP_HandHeldObjTemplate_C::BP_EnableCollision' has a wrong offset!");
static_assert(offsetof(UBP_HandHeldObjTemplate_C, HandObjs) == 0x0000A0, "Member 'UBP_HandHeldObjTemplate_C::HandObjs' has a wrong offset!");
static_assert(offsetof(UBP_HandHeldObjTemplate_C, BP_EnableFloating) == 0x0000B0, "Member 'UBP_HandHeldObjTemplate_C::BP_EnableFloating' has a wrong offset!");
static_assert(offsetof(UBP_HandHeldObjTemplate_C, BP_DoCollisionCheck) == 0x0000B1, "Member 'UBP_HandHeldObjTemplate_C::BP_DoCollisionCheck' has a wrong offset!");
static_assert(offsetof(UBP_HandHeldObjTemplate_C, BP_FollowInterpSpeed) == 0x0000B8, "Member 'UBP_HandHeldObjTemplate_C::BP_FollowInterpSpeed' has a wrong offset!");
static_assert(offsetof(UBP_HandHeldObjTemplate_C, BP_Amplitude) == 0x0000C0, "Member 'UBP_HandHeldObjTemplate_C::BP_Amplitude' has a wrong offset!");
static_assert(offsetof(UBP_HandHeldObjTemplate_C, BP_Frequency) == 0x0000C8, "Member 'UBP_HandHeldObjTemplate_C::BP_Frequency' has a wrong offset!");
static_assert(offsetof(UBP_HandHeldObjTemplate_C, BP_RelativeTransform) == 0x0000D0, "Member 'UBP_HandHeldObjTemplate_C::BP_RelativeTransform' has a wrong offset!");
static_assert(offsetof(UBP_HandHeldObjTemplate_C, BP_NiagaraConfigs) == 0x000130, "Member 'UBP_HandHeldObjTemplate_C::BP_NiagaraConfigs' has a wrong offset!");
static_assert(offsetof(UBP_HandHeldObjTemplate_C, BP_EnableNiagaraEquip) == 0x000140, "Member 'UBP_HandHeldObjTemplate_C::BP_EnableNiagaraEquip' has a wrong offset!");
static_assert(offsetof(UBP_HandHeldObjTemplate_C, BP_EquipNiagaraConfigs) == 0x000148, "Member 'UBP_HandHeldObjTemplate_C::BP_EquipNiagaraConfigs' has a wrong offset!");
static_assert(offsetof(UBP_HandHeldObjTemplate_C, BP_UnequipNiagaraConfigs) == 0x000158, "Member 'UBP_HandHeldObjTemplate_C::BP_UnequipNiagaraConfigs' has a wrong offset!");
static_assert(offsetof(UBP_HandHeldObjTemplate_C, BP_ShowDelay) == 0x000168, "Member 'UBP_HandHeldObjTemplate_C::BP_ShowDelay' has a wrong offset!");
static_assert(offsetof(UBP_HandHeldObjTemplate_C, BP_HideDelay) == 0x000170, "Member 'UBP_HandHeldObjTemplate_C::BP_HideDelay' has a wrong offset!");
static_assert(offsetof(UBP_HandHeldObjTemplate_C, BP_EnableAnimationEquip) == 0x000178, "Member 'UBP_HandHeldObjTemplate_C::BP_EnableAnimationEquip' has a wrong offset!");
static_assert(offsetof(UBP_HandHeldObjTemplate_C, BP_EquipAnimType) == 0x00017C, "Member 'UBP_HandHeldObjTemplate_C::BP_EquipAnimType' has a wrong offset!");
static_assert(offsetof(UBP_HandHeldObjTemplate_C, BP_UnequipAnimType) == 0x000180, "Member 'UBP_HandHeldObjTemplate_C::BP_UnequipAnimType' has a wrong offset!");

}

