#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HitConfigDataAsset

#include "Basic.hpp"

#include "F_HitMainBodySet_structs.hpp"
#include "ECombatHitMainType_structs.hpp"
#include "F_HitOtherPartsSet_structs.hpp"
#include "F_HitFeedBackConfigs_structs.hpp"
#include "F_DeathConfig_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HitConfigDataAsset.BP_HitConfigDataAsset_C
// 0x0130 (0x0160 - 0x0030)
class UBP_HitConfigDataAsset_C final : public UPrimaryDataAsset
{
public:
	struct FF_HitMainBodySet                      MainBodyConfig;                                    // 0x0030(0x0078)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	TMap<ECombatHitMainType, struct FF_HitOtherPartsSet> OtherPartsHitConfigs;                       // 0x00A8(0x0050)(Edit, BlueprintVisible)
	TArray<struct FF_HitFeedBackConfigs>          FeedbackConfigs;                                   // 0x00F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FF_DeathConfig                         DeathConfig;                                       // 0x0108(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           ReliveAM;                                          // 0x0158(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HitConfigDataAsset_C">();
	}
	static class UBP_HitConfigDataAsset_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_HitConfigDataAsset_C>();
	}
};
static_assert(alignof(UBP_HitConfigDataAsset_C) == 0x000008, "Wrong alignment on UBP_HitConfigDataAsset_C");
static_assert(sizeof(UBP_HitConfigDataAsset_C) == 0x000160, "Wrong size on UBP_HitConfigDataAsset_C");
static_assert(offsetof(UBP_HitConfigDataAsset_C, MainBodyConfig) == 0x000030, "Member 'UBP_HitConfigDataAsset_C::MainBodyConfig' has a wrong offset!");
static_assert(offsetof(UBP_HitConfigDataAsset_C, OtherPartsHitConfigs) == 0x0000A8, "Member 'UBP_HitConfigDataAsset_C::OtherPartsHitConfigs' has a wrong offset!");
static_assert(offsetof(UBP_HitConfigDataAsset_C, FeedbackConfigs) == 0x0000F8, "Member 'UBP_HitConfigDataAsset_C::FeedbackConfigs' has a wrong offset!");
static_assert(offsetof(UBP_HitConfigDataAsset_C, DeathConfig) == 0x000108, "Member 'UBP_HitConfigDataAsset_C::DeathConfig' has a wrong offset!");
static_assert(offsetof(UBP_HitConfigDataAsset_C, ReliveAM) == 0x000158, "Member 'UBP_HitConfigDataAsset_C::ReliveAM' has a wrong offset!");

}

