#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BulletDataAsset

#include "Basic.hpp"

#include "ESkillReleaseTargetType_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "EBulletEffectType_structs.hpp"
#include "X6Game_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BulletDataAsset.BP_BulletDataAsset_C
// 0x0108 (0x01B8 - 0x00B0)
class UBP_BulletDataAsset_C : public UX6BulletDataAsset
{
public:
	TSoftClassPtr<class UClass>                   BulletEffectActorRef;                              // 0x00B0(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	ESkillReleaseTargetType                       BulletReleaseType;                                 // 0x00D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bReleaseInGround;                                  // 0x00D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCustomBound;                                      // 0x00DA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DB[0x5];                                       // 0x00DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Bound;                                             // 0x00E0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBulletEffectType                             BulletEffectType;                                  // 0x00F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_BulletDataAsset_C*>          StartTrigger;                                      // 0x0100(0x0010)(Edit, BlueprintVisible)
	TArray<class UBP_BulletDataAsset_C*>          HitTrigger;                                        // 0x0110(0x0010)(Edit, BlueprintVisible)
	TArray<class UBP_BuffConfig_C*>               HitBuff;                                           // 0x0120(0x0010)(Edit, BlueprintVisible)
	bool                                          EnableDestroyTriggerWhenHit;                       // 0x0130(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_BulletDataAsset_C*>          DestroyTrigger;                                    // 0x0138(0x0010)(Edit, BlueprintVisible)
	TSoftObjectPtr<class UBP_CameraAndForceShakeConfigTemplate_C> ShakeSource;                       // 0x0148(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TSoftObjectPtr<class UBP_CameraAndForceShakeConfigTemplate_C> DestroyShakeSource;                // 0x0170(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          bIsDestroyInHitLocation;                           // 0x0198(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         DestroyEffectByHitSummon;                          // 0x01A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         DestroyEffectByHitShield;                          // 0x01A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bUseEffectStateChannle;                            // 0x01B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BulletDataAsset_C">();
	}
	static class UBP_BulletDataAsset_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_BulletDataAsset_C>();
	}
};
static_assert(alignof(UBP_BulletDataAsset_C) == 0x000008, "Wrong alignment on UBP_BulletDataAsset_C");
static_assert(sizeof(UBP_BulletDataAsset_C) == 0x0001B8, "Wrong size on UBP_BulletDataAsset_C");
static_assert(offsetof(UBP_BulletDataAsset_C, BulletEffectActorRef) == 0x0000B0, "Member 'UBP_BulletDataAsset_C::BulletEffectActorRef' has a wrong offset!");
static_assert(offsetof(UBP_BulletDataAsset_C, BulletReleaseType) == 0x0000D8, "Member 'UBP_BulletDataAsset_C::BulletReleaseType' has a wrong offset!");
static_assert(offsetof(UBP_BulletDataAsset_C, bReleaseInGround) == 0x0000D9, "Member 'UBP_BulletDataAsset_C::bReleaseInGround' has a wrong offset!");
static_assert(offsetof(UBP_BulletDataAsset_C, bCustomBound) == 0x0000DA, "Member 'UBP_BulletDataAsset_C::bCustomBound' has a wrong offset!");
static_assert(offsetof(UBP_BulletDataAsset_C, Bound) == 0x0000E0, "Member 'UBP_BulletDataAsset_C::Bound' has a wrong offset!");
static_assert(offsetof(UBP_BulletDataAsset_C, BulletEffectType) == 0x0000F8, "Member 'UBP_BulletDataAsset_C::BulletEffectType' has a wrong offset!");
static_assert(offsetof(UBP_BulletDataAsset_C, StartTrigger) == 0x000100, "Member 'UBP_BulletDataAsset_C::StartTrigger' has a wrong offset!");
static_assert(offsetof(UBP_BulletDataAsset_C, HitTrigger) == 0x000110, "Member 'UBP_BulletDataAsset_C::HitTrigger' has a wrong offset!");
static_assert(offsetof(UBP_BulletDataAsset_C, HitBuff) == 0x000120, "Member 'UBP_BulletDataAsset_C::HitBuff' has a wrong offset!");
static_assert(offsetof(UBP_BulletDataAsset_C, EnableDestroyTriggerWhenHit) == 0x000130, "Member 'UBP_BulletDataAsset_C::EnableDestroyTriggerWhenHit' has a wrong offset!");
static_assert(offsetof(UBP_BulletDataAsset_C, DestroyTrigger) == 0x000138, "Member 'UBP_BulletDataAsset_C::DestroyTrigger' has a wrong offset!");
static_assert(offsetof(UBP_BulletDataAsset_C, ShakeSource) == 0x000148, "Member 'UBP_BulletDataAsset_C::ShakeSource' has a wrong offset!");
static_assert(offsetof(UBP_BulletDataAsset_C, DestroyShakeSource) == 0x000170, "Member 'UBP_BulletDataAsset_C::DestroyShakeSource' has a wrong offset!");
static_assert(offsetof(UBP_BulletDataAsset_C, bIsDestroyInHitLocation) == 0x000198, "Member 'UBP_BulletDataAsset_C::bIsDestroyInHitLocation' has a wrong offset!");
static_assert(offsetof(UBP_BulletDataAsset_C, DestroyEffectByHitSummon) == 0x0001A0, "Member 'UBP_BulletDataAsset_C::DestroyEffectByHitSummon' has a wrong offset!");
static_assert(offsetof(UBP_BulletDataAsset_C, DestroyEffectByHitShield) == 0x0001A8, "Member 'UBP_BulletDataAsset_C::DestroyEffectByHitShield' has a wrong offset!");
static_assert(offsetof(UBP_BulletDataAsset_C, bUseEffectStateChannle) == 0x0001B0, "Member 'UBP_BulletDataAsset_C::bUseEffectStateChannle' has a wrong offset!");

}

