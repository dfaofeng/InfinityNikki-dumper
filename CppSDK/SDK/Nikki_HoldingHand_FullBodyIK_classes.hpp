#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Nikki_HoldingHand_FullBodyIK

#include "Basic.hpp"

#include "ControlRig_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "PBIK_structs.hpp"


namespace SDK
{

// RigVMBlueprintGeneratedClass Nikki_HoldingHand_FullBodyIK.Nikki_HoldingHand_FullBodyIK_C
// 0x00E8 (0x0B90 - 0x0AA8)
class UNikki_HoldingHand_FullBodyIK_C final : public UControlRig
{
public:
	bool                                          BP_Enable;                                         // 0x0AA8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_IsLeader;                                       // 0x0AA9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_IsLeftHand;                                     // 0x0AAA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AAB[0x5];                                      // 0x0AAB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             BP_LeftHandIKTargetTransform;                      // 0x0AB0(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             BP_RightHandIKTargetTransform;                     // 0x0B10(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FPBIKBoneSetting>               BP_LeftBoneSettings;                               // 0x0B70(0x0010)(Edit, BlueprintVisible)
	TArray<struct FPBIKBoneSetting>               BP_RightBoneSettings;                              // 0x0B80(0x0010)(Edit, BlueprintVisible)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Nikki_HoldingHand_FullBodyIK_C">();
	}
	static class UNikki_HoldingHand_FullBodyIK_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNikki_HoldingHand_FullBodyIK_C>();
	}
};
static_assert(alignof(UNikki_HoldingHand_FullBodyIK_C) == 0x000010, "Wrong alignment on UNikki_HoldingHand_FullBodyIK_C");
static_assert(sizeof(UNikki_HoldingHand_FullBodyIK_C) == 0x000B90, "Wrong size on UNikki_HoldingHand_FullBodyIK_C");
static_assert(offsetof(UNikki_HoldingHand_FullBodyIK_C, BP_Enable) == 0x000AA8, "Member 'UNikki_HoldingHand_FullBodyIK_C::BP_Enable' has a wrong offset!");
static_assert(offsetof(UNikki_HoldingHand_FullBodyIK_C, BP_IsLeader) == 0x000AA9, "Member 'UNikki_HoldingHand_FullBodyIK_C::BP_IsLeader' has a wrong offset!");
static_assert(offsetof(UNikki_HoldingHand_FullBodyIK_C, BP_IsLeftHand) == 0x000AAA, "Member 'UNikki_HoldingHand_FullBodyIK_C::BP_IsLeftHand' has a wrong offset!");
static_assert(offsetof(UNikki_HoldingHand_FullBodyIK_C, BP_LeftHandIKTargetTransform) == 0x000AB0, "Member 'UNikki_HoldingHand_FullBodyIK_C::BP_LeftHandIKTargetTransform' has a wrong offset!");
static_assert(offsetof(UNikki_HoldingHand_FullBodyIK_C, BP_RightHandIKTargetTransform) == 0x000B10, "Member 'UNikki_HoldingHand_FullBodyIK_C::BP_RightHandIKTargetTransform' has a wrong offset!");
static_assert(offsetof(UNikki_HoldingHand_FullBodyIK_C, BP_LeftBoneSettings) == 0x000B70, "Member 'UNikki_HoldingHand_FullBodyIK_C::BP_LeftBoneSettings' has a wrong offset!");
static_assert(offsetof(UNikki_HoldingHand_FullBodyIK_C, BP_RightBoneSettings) == 0x000B80, "Member 'UNikki_HoldingHand_FullBodyIK_C::BP_RightBoneSettings' has a wrong offset!");

}

