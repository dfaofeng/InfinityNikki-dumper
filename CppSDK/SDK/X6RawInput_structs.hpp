#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: X6RawInput

#include "Basic.hpp"

#include "InputCore_structs.hpp"


namespace SDK
{

// ScriptStruct X6RawInput.X6RegisteredDeviceInfo
// 0x0020 (0x0020 - 0x0000)
struct FX6RegisteredDeviceInfo final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         VendorID;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         productID;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DeviceName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FX6RegisteredDeviceInfo) == 0x000008, "Wrong alignment on FX6RegisteredDeviceInfo");
static_assert(sizeof(FX6RegisteredDeviceInfo) == 0x000020, "Wrong size on FX6RegisteredDeviceInfo");
static_assert(offsetof(FX6RegisteredDeviceInfo, Handle) == 0x000000, "Member 'FX6RegisteredDeviceInfo::Handle' has a wrong offset!");
static_assert(offsetof(FX6RegisteredDeviceInfo, VendorID) == 0x000004, "Member 'FX6RegisteredDeviceInfo::VendorID' has a wrong offset!");
static_assert(offsetof(FX6RegisteredDeviceInfo, productID) == 0x000008, "Member 'FX6RegisteredDeviceInfo::productID' has a wrong offset!");
static_assert(offsetof(FX6RegisteredDeviceInfo, DeviceName) == 0x000010, "Member 'FX6RegisteredDeviceInfo::DeviceName' has a wrong offset!");

// ScriptStruct X6RawInput.X6RawInputDeviceAxisProperties
// 0x0030 (0x0030 - 0x0000)
struct FX6RawInputDeviceAxisProperties final
{
public:
	uint8                                         bEnabled : 1;                                      // 0x0000(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Key;                                               // 0x0008(0x0018)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bInverted : 1;                                     // 0x0020(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bGamepadStick : 1;                                 // 0x0020(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Offset;                                            // 0x0024(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Scale;                                             // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InitValue;                                         // 0x002C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FX6RawInputDeviceAxisProperties) == 0x000008, "Wrong alignment on FX6RawInputDeviceAxisProperties");
static_assert(sizeof(FX6RawInputDeviceAxisProperties) == 0x000030, "Wrong size on FX6RawInputDeviceAxisProperties");
static_assert(offsetof(FX6RawInputDeviceAxisProperties, Key) == 0x000008, "Member 'FX6RawInputDeviceAxisProperties::Key' has a wrong offset!");
static_assert(offsetof(FX6RawInputDeviceAxisProperties, Offset) == 0x000024, "Member 'FX6RawInputDeviceAxisProperties::Offset' has a wrong offset!");
static_assert(offsetof(FX6RawInputDeviceAxisProperties, Scale) == 0x000028, "Member 'FX6RawInputDeviceAxisProperties::Scale' has a wrong offset!");
static_assert(offsetof(FX6RawInputDeviceAxisProperties, InitValue) == 0x00002C, "Member 'FX6RawInputDeviceAxisProperties::InitValue' has a wrong offset!");

// ScriptStruct X6RawInput.X6RawInputDeviceButtonProperties
// 0x0020 (0x0020 - 0x0000)
struct FX6RawInputDeviceButtonProperties final
{
public:
	uint8                                         bEnabled : 1;                                      // 0x0000(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Key;                                               // 0x0008(0x0018)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FX6RawInputDeviceButtonProperties) == 0x000008, "Wrong alignment on FX6RawInputDeviceButtonProperties");
static_assert(sizeof(FX6RawInputDeviceButtonProperties) == 0x000020, "Wrong size on FX6RawInputDeviceButtonProperties");
static_assert(offsetof(FX6RawInputDeviceButtonProperties, Key) == 0x000008, "Member 'FX6RawInputDeviceButtonProperties::Key' has a wrong offset!");

// ScriptStruct X6RawInput.X6RawInputDeviceConfiguration
// 0x0050 (0x0050 - 0x0000)
struct FX6RawInputDeviceConfiguration final
{
public:
	class FString                                 VendorID;                                          // 0x0000(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 productID;                                         // 0x0010(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FX6RawInputDeviceAxisProperties> AxisProperties;                                   // 0x0020(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FX6RawInputDeviceButtonProperties> ButtonProperties;                               // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FX6RawInputDeviceButtonProperties> DPadButtonProperties;                           // 0x0040(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FX6RawInputDeviceConfiguration) == 0x000008, "Wrong alignment on FX6RawInputDeviceConfiguration");
static_assert(sizeof(FX6RawInputDeviceConfiguration) == 0x000050, "Wrong size on FX6RawInputDeviceConfiguration");
static_assert(offsetof(FX6RawInputDeviceConfiguration, VendorID) == 0x000000, "Member 'FX6RawInputDeviceConfiguration::VendorID' has a wrong offset!");
static_assert(offsetof(FX6RawInputDeviceConfiguration, productID) == 0x000010, "Member 'FX6RawInputDeviceConfiguration::productID' has a wrong offset!");
static_assert(offsetof(FX6RawInputDeviceConfiguration, AxisProperties) == 0x000020, "Member 'FX6RawInputDeviceConfiguration::AxisProperties' has a wrong offset!");
static_assert(offsetof(FX6RawInputDeviceConfiguration, ButtonProperties) == 0x000030, "Member 'FX6RawInputDeviceConfiguration::ButtonProperties' has a wrong offset!");
static_assert(offsetof(FX6RawInputDeviceConfiguration, DPadButtonProperties) == 0x000040, "Member 'FX6RawInputDeviceConfiguration::DPadButtonProperties' has a wrong offset!");

}

