#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HUD_CommonSlot_Mobile

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_HUD_CommonSlot_Mobile.WBP_HUD_CommonSlot_Mobile_C.ExecuteUbergraph_WBP_HUD_CommonSlot_Mobile
// 0x0008 (0x0008 - 0x0000)
struct WBP_HUD_CommonSlot_Mobile_C_ExecuteUbergraph_WBP_HUD_CommonSlot_Mobile final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_CommonSlot_Mobile_C_ExecuteUbergraph_WBP_HUD_CommonSlot_Mobile) == 0x000004, "Wrong alignment on WBP_HUD_CommonSlot_Mobile_C_ExecuteUbergraph_WBP_HUD_CommonSlot_Mobile");
static_assert(sizeof(WBP_HUD_CommonSlot_Mobile_C_ExecuteUbergraph_WBP_HUD_CommonSlot_Mobile) == 0x000008, "Wrong size on WBP_HUD_CommonSlot_Mobile_C_ExecuteUbergraph_WBP_HUD_CommonSlot_Mobile");
static_assert(offsetof(WBP_HUD_CommonSlot_Mobile_C_ExecuteUbergraph_WBP_HUD_CommonSlot_Mobile, EntryPoint) == 0x000000, "Member 'WBP_HUD_CommonSlot_Mobile_C_ExecuteUbergraph_WBP_HUD_CommonSlot_Mobile::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_HUD_CommonSlot_Mobile_C_ExecuteUbergraph_WBP_HUD_CommonSlot_Mobile, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_HUD_CommonSlot_Mobile_C_ExecuteUbergraph_WBP_HUD_CommonSlot_Mobile::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_HUD_CommonSlot_Mobile.WBP_HUD_CommonSlot_Mobile_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_HUD_CommonSlot_Mobile_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_CommonSlot_Mobile_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_HUD_CommonSlot_Mobile_C_PreConstruct");
static_assert(sizeof(WBP_HUD_CommonSlot_Mobile_C_PreConstruct) == 0x000001, "Wrong size on WBP_HUD_CommonSlot_Mobile_C_PreConstruct");
static_assert(offsetof(WBP_HUD_CommonSlot_Mobile_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_HUD_CommonSlot_Mobile_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_HUD_CommonSlot_Mobile.WBP_HUD_CommonSlot_Mobile_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct WBP_HUD_CommonSlot_Mobile_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_CommonSlot_Mobile_C_GetModuleName) == 0x000008, "Wrong alignment on WBP_HUD_CommonSlot_Mobile_C_GetModuleName");
static_assert(sizeof(WBP_HUD_CommonSlot_Mobile_C_GetModuleName) == 0x000010, "Wrong size on WBP_HUD_CommonSlot_Mobile_C_GetModuleName");
static_assert(offsetof(WBP_HUD_CommonSlot_Mobile_C_GetModuleName, ReturnValue) == 0x000000, "Member 'WBP_HUD_CommonSlot_Mobile_C_GetModuleName::ReturnValue' has a wrong offset!");

}

