#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AudioVolumeActor

#include "Basic.hpp"

#include "Enum_AudioVolumeType_structs.hpp"
#include "Engine_structs.hpp"
#include "X6Game_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AudioVolumeActor.BP_AudioVolumeActor_C
// 0x0078 (0x04B0 - 0x0438)
class ABP_AudioVolumeActor_C final : public AX6Actor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0438(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Cube;                                              // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x0448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UAkAudioType>>    EnterAkAssetData;                                  // 0x0458(0x0010)(Edit, BlueprintVisible)
	TArray<TSoftObjectPtr<class UAkAudioType>>    ExitAkAssetData;                                   // 0x0468(0x0010)(Edit, BlueprintVisible)
	bool                                          bIsEnabled;                                        // 0x0478(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_479[0x7];                                      // 0x0479(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_AudioVolumeActor_C*>         DisableAudioVolumeActors;                          // 0x0480(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	bool                                          bTriggerOnce;                                      // 0x0490(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_491[0x7];                                      // 0x0491(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<Enum_AudioVolumeType>                  AudioVolumeTypes;                                  // 0x0498(0x0010)(Edit, BlueprintVisible)
	bool                                          bIsCollisionEnabled;                               // 0x04A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AudioVolumeActor(int32 EntryPoint);
	void PostServerInit(bool bServer);
	void ServerInit(bool bServer);
	void SetEnable(bool bNewEnable);
	void UserConstructionScript();

	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AudioVolumeActor_C">();
	}
	static class ABP_AudioVolumeActor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AudioVolumeActor_C>();
	}
};
static_assert(alignof(ABP_AudioVolumeActor_C) == 0x000008, "Wrong alignment on ABP_AudioVolumeActor_C");
static_assert(sizeof(ABP_AudioVolumeActor_C) == 0x0004B0, "Wrong size on ABP_AudioVolumeActor_C");
static_assert(offsetof(ABP_AudioVolumeActor_C, UberGraphFrame) == 0x000438, "Member 'ABP_AudioVolumeActor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_AudioVolumeActor_C, Cube) == 0x000440, "Member 'ABP_AudioVolumeActor_C::Cube' has a wrong offset!");
static_assert(offsetof(ABP_AudioVolumeActor_C, Box) == 0x000448, "Member 'ABP_AudioVolumeActor_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_AudioVolumeActor_C, DefaultSceneRoot) == 0x000450, "Member 'ABP_AudioVolumeActor_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_AudioVolumeActor_C, EnterAkAssetData) == 0x000458, "Member 'ABP_AudioVolumeActor_C::EnterAkAssetData' has a wrong offset!");
static_assert(offsetof(ABP_AudioVolumeActor_C, ExitAkAssetData) == 0x000468, "Member 'ABP_AudioVolumeActor_C::ExitAkAssetData' has a wrong offset!");
static_assert(offsetof(ABP_AudioVolumeActor_C, bIsEnabled) == 0x000478, "Member 'ABP_AudioVolumeActor_C::bIsEnabled' has a wrong offset!");
static_assert(offsetof(ABP_AudioVolumeActor_C, DisableAudioVolumeActors) == 0x000480, "Member 'ABP_AudioVolumeActor_C::DisableAudioVolumeActors' has a wrong offset!");
static_assert(offsetof(ABP_AudioVolumeActor_C, bTriggerOnce) == 0x000490, "Member 'ABP_AudioVolumeActor_C::bTriggerOnce' has a wrong offset!");
static_assert(offsetof(ABP_AudioVolumeActor_C, AudioVolumeTypes) == 0x000498, "Member 'ABP_AudioVolumeActor_C::AudioVolumeTypes' has a wrong offset!");
static_assert(offsetof(ABP_AudioVolumeActor_C, bIsCollisionEnabled) == 0x0004A8, "Member 'ABP_AudioVolumeActor_C::bIsCollisionEnabled' has a wrong offset!");

}

