#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DamiaoFootPlacementIK_CtrlRig

#include "Basic.hpp"

#include "ControlRig_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// ControlRigBlueprintGeneratedClass DamiaoFootPlacementIK_CtrlRig.DamiaoFootPlacementIK_CtrlRig_C
// 0x0168 (0x0C10 - 0x0AA8)
class UDamiaoFootPlacementIK_CtrlRig_C final : public UControlRig
{
public:
	struct FVector                                AnkleLeftOffsetLocation;                           // 0x0AA8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AnkleRightOffsetLocation;                          // 0x0AC0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               AnkleLeftOffsetRotation;                           // 0x0AD8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               AnkleRightOffsetRotation;                          // 0x0AF0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                PelvisOffset;                                      // 0x0B08(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PelvisWeight;                                      // 0x0B20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LeftFootTranslationWeight;                         // 0x0B28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RightFootTranslationWeight;                        // 0x0B30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LeftFootRotationWeight;                            // 0x0B38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RightFootRotationWeight;                           // 0x0B40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InnerRootMOffset;                                  // 0x0B48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SlopeAngle;                                        // 0x0B50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Velocity;                                          // 0x0B58(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurrentPelvisOffset;                               // 0x0B70(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentAnkleLeftOffsetZ;                           // 0x0B88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentAnkleRightOffsetZ;                          // 0x0B90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B98[0x8];                                      // 0x0B98(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  CurrentAnkleLeftRotationOffset;                    // 0x0BA0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  CurrentAnkleRightRotationOffset;                   // 0x0BC0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentLeftFootTranslationWeight;                  // 0x0BE0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentLeftFootRotationWeight;                     // 0x0BE4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentRightFootTranslationWeight;                 // 0x0BE8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentRightFootRotationWeight;                    // 0x0BEC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bForceInitFootPlacementIKParam;                    // 0x0BF0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BF1[0x7];                                      // 0x0BF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CurrentPelvisWeight;                               // 0x0BF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocationOffsetSpringInterpStrength;                // 0x0C00(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DamiaoFootPlacementIK_CtrlRig_C">();
	}
	static class UDamiaoFootPlacementIK_CtrlRig_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDamiaoFootPlacementIK_CtrlRig_C>();
	}
};
static_assert(alignof(UDamiaoFootPlacementIK_CtrlRig_C) == 0x000010, "Wrong alignment on UDamiaoFootPlacementIK_CtrlRig_C");
static_assert(sizeof(UDamiaoFootPlacementIK_CtrlRig_C) == 0x000C10, "Wrong size on UDamiaoFootPlacementIK_CtrlRig_C");
static_assert(offsetof(UDamiaoFootPlacementIK_CtrlRig_C, AnkleLeftOffsetLocation) == 0x000AA8, "Member 'UDamiaoFootPlacementIK_CtrlRig_C::AnkleLeftOffsetLocation' has a wrong offset!");
static_assert(offsetof(UDamiaoFootPlacementIK_CtrlRig_C, AnkleRightOffsetLocation) == 0x000AC0, "Member 'UDamiaoFootPlacementIK_CtrlRig_C::AnkleRightOffsetLocation' has a wrong offset!");
static_assert(offsetof(UDamiaoFootPlacementIK_CtrlRig_C, AnkleLeftOffsetRotation) == 0x000AD8, "Member 'UDamiaoFootPlacementIK_CtrlRig_C::AnkleLeftOffsetRotation' has a wrong offset!");
static_assert(offsetof(UDamiaoFootPlacementIK_CtrlRig_C, AnkleRightOffsetRotation) == 0x000AF0, "Member 'UDamiaoFootPlacementIK_CtrlRig_C::AnkleRightOffsetRotation' has a wrong offset!");
static_assert(offsetof(UDamiaoFootPlacementIK_CtrlRig_C, PelvisOffset) == 0x000B08, "Member 'UDamiaoFootPlacementIK_CtrlRig_C::PelvisOffset' has a wrong offset!");
static_assert(offsetof(UDamiaoFootPlacementIK_CtrlRig_C, PelvisWeight) == 0x000B20, "Member 'UDamiaoFootPlacementIK_CtrlRig_C::PelvisWeight' has a wrong offset!");
static_assert(offsetof(UDamiaoFootPlacementIK_CtrlRig_C, LeftFootTranslationWeight) == 0x000B28, "Member 'UDamiaoFootPlacementIK_CtrlRig_C::LeftFootTranslationWeight' has a wrong offset!");
static_assert(offsetof(UDamiaoFootPlacementIK_CtrlRig_C, RightFootTranslationWeight) == 0x000B30, "Member 'UDamiaoFootPlacementIK_CtrlRig_C::RightFootTranslationWeight' has a wrong offset!");
static_assert(offsetof(UDamiaoFootPlacementIK_CtrlRig_C, LeftFootRotationWeight) == 0x000B38, "Member 'UDamiaoFootPlacementIK_CtrlRig_C::LeftFootRotationWeight' has a wrong offset!");
static_assert(offsetof(UDamiaoFootPlacementIK_CtrlRig_C, RightFootRotationWeight) == 0x000B40, "Member 'UDamiaoFootPlacementIK_CtrlRig_C::RightFootRotationWeight' has a wrong offset!");
static_assert(offsetof(UDamiaoFootPlacementIK_CtrlRig_C, InnerRootMOffset) == 0x000B48, "Member 'UDamiaoFootPlacementIK_CtrlRig_C::InnerRootMOffset' has a wrong offset!");
static_assert(offsetof(UDamiaoFootPlacementIK_CtrlRig_C, SlopeAngle) == 0x000B50, "Member 'UDamiaoFootPlacementIK_CtrlRig_C::SlopeAngle' has a wrong offset!");
static_assert(offsetof(UDamiaoFootPlacementIK_CtrlRig_C, Velocity) == 0x000B58, "Member 'UDamiaoFootPlacementIK_CtrlRig_C::Velocity' has a wrong offset!");
static_assert(offsetof(UDamiaoFootPlacementIK_CtrlRig_C, CurrentPelvisOffset) == 0x000B70, "Member 'UDamiaoFootPlacementIK_CtrlRig_C::CurrentPelvisOffset' has a wrong offset!");
static_assert(offsetof(UDamiaoFootPlacementIK_CtrlRig_C, CurrentAnkleLeftOffsetZ) == 0x000B88, "Member 'UDamiaoFootPlacementIK_CtrlRig_C::CurrentAnkleLeftOffsetZ' has a wrong offset!");
static_assert(offsetof(UDamiaoFootPlacementIK_CtrlRig_C, CurrentAnkleRightOffsetZ) == 0x000B90, "Member 'UDamiaoFootPlacementIK_CtrlRig_C::CurrentAnkleRightOffsetZ' has a wrong offset!");
static_assert(offsetof(UDamiaoFootPlacementIK_CtrlRig_C, CurrentAnkleLeftRotationOffset) == 0x000BA0, "Member 'UDamiaoFootPlacementIK_CtrlRig_C::CurrentAnkleLeftRotationOffset' has a wrong offset!");
static_assert(offsetof(UDamiaoFootPlacementIK_CtrlRig_C, CurrentAnkleRightRotationOffset) == 0x000BC0, "Member 'UDamiaoFootPlacementIK_CtrlRig_C::CurrentAnkleRightRotationOffset' has a wrong offset!");
static_assert(offsetof(UDamiaoFootPlacementIK_CtrlRig_C, CurrentLeftFootTranslationWeight) == 0x000BE0, "Member 'UDamiaoFootPlacementIK_CtrlRig_C::CurrentLeftFootTranslationWeight' has a wrong offset!");
static_assert(offsetof(UDamiaoFootPlacementIK_CtrlRig_C, CurrentLeftFootRotationWeight) == 0x000BE4, "Member 'UDamiaoFootPlacementIK_CtrlRig_C::CurrentLeftFootRotationWeight' has a wrong offset!");
static_assert(offsetof(UDamiaoFootPlacementIK_CtrlRig_C, CurrentRightFootTranslationWeight) == 0x000BE8, "Member 'UDamiaoFootPlacementIK_CtrlRig_C::CurrentRightFootTranslationWeight' has a wrong offset!");
static_assert(offsetof(UDamiaoFootPlacementIK_CtrlRig_C, CurrentRightFootRotationWeight) == 0x000BEC, "Member 'UDamiaoFootPlacementIK_CtrlRig_C::CurrentRightFootRotationWeight' has a wrong offset!");
static_assert(offsetof(UDamiaoFootPlacementIK_CtrlRig_C, bForceInitFootPlacementIKParam) == 0x000BF0, "Member 'UDamiaoFootPlacementIK_CtrlRig_C::bForceInitFootPlacementIKParam' has a wrong offset!");
static_assert(offsetof(UDamiaoFootPlacementIK_CtrlRig_C, CurrentPelvisWeight) == 0x000BF8, "Member 'UDamiaoFootPlacementIK_CtrlRig_C::CurrentPelvisWeight' has a wrong offset!");
static_assert(offsetof(UDamiaoFootPlacementIK_CtrlRig_C, LocationOffsetSpringInterpStrength) == 0x000C00, "Member 'UDamiaoFootPlacementIK_CtrlRig_C::LocationOffsetSpringInterpStrength' has a wrong offset!");

}

