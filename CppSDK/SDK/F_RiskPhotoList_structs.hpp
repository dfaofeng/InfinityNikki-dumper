#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: F_RiskPhotoList

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Enum_WeatherType_structs.hpp"
#include "F_RiskPhotoMonsterList_structs.hpp"
#include "E_ImageRecognitionFinishType_structs.hpp"


namespace SDK
{

// UserDefinedStruct F_RiskPhotoList.F_RiskPhotoList
// 0x00D8 (0x00D8 - 0x0000)
struct FF_RiskPhotoList final
{
public:
	struct FGameplayTag                           CharacterTag_62_7EF1BDDA4E6C44AA0CD3619DBFE800E6;  // 0x0000(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	class FText                                   CharacterHintText_65_8AF393A44FEF2243CBBD719C02EB26C6; // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         Num_68_B64616B74ED72E675200A9AC5132BD69;           // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NeedCheckScreenRatio_71_00F5FBE645EB37F56F9AFDBE0AA65E01; // 0x001C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ScreenRatio_74_8B86A32C4D554F67947CAE9173BB044C;   // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ScreenRatioHintText_77_91E70D0440F335D74756BDAAB9A7C98C; // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          NeedCheckWeather_25_D980B280456A653D4B953BBFD962F46F; // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	Enum_WeatherType                              Weather_14_81C80ACE4ABC8CF126A41C848FEC6224;       // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   WeatherHintText_41_C03C0F344D3A247D3693C0946A0F9210; // 0x0040(0x0010)(Edit, BlueprintVisible)
	bool                                          NeedCheckHour_26_DF2C30F54BF07A5AC14D889442FE1C71; // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         HourBegin_15_1A6ABF224D3569E22D94A4B782164C8E;     // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HourEnd_16_41B255334A99AF7B563D2EA4AE8A734B;       // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   HourHintText_40_F8E594CC464FBFC9B9A421998F3C4C19;  // 0x0060(0x0010)(Edit, BlueprintVisible)
	struct FF_RiskPhotoMonsterList                MonsterBehavior_81_3434DFE84E379CA4870C7A9F219B446B; // 0x0070(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class FText                                   PromptText_31_80D4034E4CF8E8434F8DC6A32299DF2E;    // 0x0098(0x0010)(Edit, BlueprintVisible)
	TSoftObjectPtr<class UTexture>                FallbackPhoto_84_ABDFF74C41567469AEE53AADF942F364; // 0x00A8(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	E_ImageRecognitionFinishType                  FinishType_87_E0B8ED01498A29D4CA43E3A570933A23;    // 0x00D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         FinishTypeParam_90_EE5AE730487B72021A6384B69959D5FF; // 0x00D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FF_RiskPhotoList) == 0x000008, "Wrong alignment on FF_RiskPhotoList");
static_assert(sizeof(FF_RiskPhotoList) == 0x0000D8, "Wrong size on FF_RiskPhotoList");
static_assert(offsetof(FF_RiskPhotoList, CharacterTag_62_7EF1BDDA4E6C44AA0CD3619DBFE800E6) == 0x000000, "Member 'FF_RiskPhotoList::CharacterTag_62_7EF1BDDA4E6C44AA0CD3619DBFE800E6' has a wrong offset!");
static_assert(offsetof(FF_RiskPhotoList, CharacterHintText_65_8AF393A44FEF2243CBBD719C02EB26C6) == 0x000008, "Member 'FF_RiskPhotoList::CharacterHintText_65_8AF393A44FEF2243CBBD719C02EB26C6' has a wrong offset!");
static_assert(offsetof(FF_RiskPhotoList, Num_68_B64616B74ED72E675200A9AC5132BD69) == 0x000018, "Member 'FF_RiskPhotoList::Num_68_B64616B74ED72E675200A9AC5132BD69' has a wrong offset!");
static_assert(offsetof(FF_RiskPhotoList, NeedCheckScreenRatio_71_00F5FBE645EB37F56F9AFDBE0AA65E01) == 0x00001C, "Member 'FF_RiskPhotoList::NeedCheckScreenRatio_71_00F5FBE645EB37F56F9AFDBE0AA65E01' has a wrong offset!");
static_assert(offsetof(FF_RiskPhotoList, ScreenRatio_74_8B86A32C4D554F67947CAE9173BB044C) == 0x000020, "Member 'FF_RiskPhotoList::ScreenRatio_74_8B86A32C4D554F67947CAE9173BB044C' has a wrong offset!");
static_assert(offsetof(FF_RiskPhotoList, ScreenRatioHintText_77_91E70D0440F335D74756BDAAB9A7C98C) == 0x000028, "Member 'FF_RiskPhotoList::ScreenRatioHintText_77_91E70D0440F335D74756BDAAB9A7C98C' has a wrong offset!");
static_assert(offsetof(FF_RiskPhotoList, NeedCheckWeather_25_D980B280456A653D4B953BBFD962F46F) == 0x000038, "Member 'FF_RiskPhotoList::NeedCheckWeather_25_D980B280456A653D4B953BBFD962F46F' has a wrong offset!");
static_assert(offsetof(FF_RiskPhotoList, Weather_14_81C80ACE4ABC8CF126A41C848FEC6224) == 0x00003C, "Member 'FF_RiskPhotoList::Weather_14_81C80ACE4ABC8CF126A41C848FEC6224' has a wrong offset!");
static_assert(offsetof(FF_RiskPhotoList, WeatherHintText_41_C03C0F344D3A247D3693C0946A0F9210) == 0x000040, "Member 'FF_RiskPhotoList::WeatherHintText_41_C03C0F344D3A247D3693C0946A0F9210' has a wrong offset!");
static_assert(offsetof(FF_RiskPhotoList, NeedCheckHour_26_DF2C30F54BF07A5AC14D889442FE1C71) == 0x000050, "Member 'FF_RiskPhotoList::NeedCheckHour_26_DF2C30F54BF07A5AC14D889442FE1C71' has a wrong offset!");
static_assert(offsetof(FF_RiskPhotoList, HourBegin_15_1A6ABF224D3569E22D94A4B782164C8E) == 0x000054, "Member 'FF_RiskPhotoList::HourBegin_15_1A6ABF224D3569E22D94A4B782164C8E' has a wrong offset!");
static_assert(offsetof(FF_RiskPhotoList, HourEnd_16_41B255334A99AF7B563D2EA4AE8A734B) == 0x000058, "Member 'FF_RiskPhotoList::HourEnd_16_41B255334A99AF7B563D2EA4AE8A734B' has a wrong offset!");
static_assert(offsetof(FF_RiskPhotoList, HourHintText_40_F8E594CC464FBFC9B9A421998F3C4C19) == 0x000060, "Member 'FF_RiskPhotoList::HourHintText_40_F8E594CC464FBFC9B9A421998F3C4C19' has a wrong offset!");
static_assert(offsetof(FF_RiskPhotoList, MonsterBehavior_81_3434DFE84E379CA4870C7A9F219B446B) == 0x000070, "Member 'FF_RiskPhotoList::MonsterBehavior_81_3434DFE84E379CA4870C7A9F219B446B' has a wrong offset!");
static_assert(offsetof(FF_RiskPhotoList, PromptText_31_80D4034E4CF8E8434F8DC6A32299DF2E) == 0x000098, "Member 'FF_RiskPhotoList::PromptText_31_80D4034E4CF8E8434F8DC6A32299DF2E' has a wrong offset!");
static_assert(offsetof(FF_RiskPhotoList, FallbackPhoto_84_ABDFF74C41567469AEE53AADF942F364) == 0x0000A8, "Member 'FF_RiskPhotoList::FallbackPhoto_84_ABDFF74C41567469AEE53AADF942F364' has a wrong offset!");
static_assert(offsetof(FF_RiskPhotoList, FinishType_87_E0B8ED01498A29D4CA43E3A570933A23) == 0x0000D0, "Member 'FF_RiskPhotoList::FinishType_87_E0B8ED01498A29D4CA43E3A570933A23' has a wrong offset!");
static_assert(offsetof(FF_RiskPhotoList, FinishTypeParam_90_EE5AE730487B72021A6384B69959D5FF) == 0x0000D4, "Member 'FF_RiskPhotoList::FinishTypeParam_90_EE5AE730487B72021A6384B69959D5FF' has a wrong offset!");

}

