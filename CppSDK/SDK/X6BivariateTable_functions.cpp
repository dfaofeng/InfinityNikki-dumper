#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: X6BivariateTable

#include "Basic.hpp"

#include "X6BivariateTable_classes.hpp"
#include "X6BivariateTable_parameters.hpp"


namespace SDK
{

// Function X6BivariateTable.X6BivariateTableFunctionLibrary.GetCellDataAsInt
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// const class UX6BivariateTable*          InTable                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             RowName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ColumnName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UX6BivariateTableFunctionLibrary::GetCellDataAsInt(const class UX6BivariateTable* InTable, class FName RowName, class FName ColumnName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BivariateTableFunctionLibrary", "GetCellDataAsInt");

	Params::X6BivariateTableFunctionLibrary_GetCellDataAsInt Parms{};

	Parms.InTable = InTable;
	Parms.RowName = RowName;
	Parms.ColumnName = ColumnName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6BivariateTable.X6BivariateTableFunctionLibrary.GetCellDataAsInt_ByIndex
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// const class UX6BivariateTable*          InTable                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RowIndex                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ColumnIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UX6BivariateTableFunctionLibrary::GetCellDataAsInt_ByIndex(const class UX6BivariateTable* InTable, int32 RowIndex, int32 ColumnIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BivariateTableFunctionLibrary", "GetCellDataAsInt_ByIndex");

	Params::X6BivariateTableFunctionLibrary_GetCellDataAsInt_ByIndex Parms{};

	Parms.InTable = InTable;
	Parms.RowIndex = RowIndex;
	Parms.ColumnIndex = ColumnIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function X6BivariateTable.X6BivariateTableFunctionLibrary.GetRowOrColumnNum
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// const class UX6BivariateTable*          InTable                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UX6BivariateTableFunctionLibrary::GetRowOrColumnNum(const class UX6BivariateTable* InTable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6BivariateTableFunctionLibrary", "GetRowOrColumnNum");

	Params::X6BivariateTableFunctionLibrary_GetRowOrColumnNum Parms{};

	Parms.InTable = InTable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

