#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMGPolygon

#include "Basic.hpp"

#include "UMGPolygon_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function UMGPolygon.PolygonWidget.AddPolygonEdgePoint
// 0x0028 (0x0028 - 0x0000)
struct PolygonWidget_AddPolygonEdgePoint final
{
public:
	struct FUMGPolygonPoint                       PolygonPoint;                                      // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bUpdatePolygon;                                    // 0x0020(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PolygonWidget_AddPolygonEdgePoint) == 0x000008, "Wrong alignment on PolygonWidget_AddPolygonEdgePoint");
static_assert(sizeof(PolygonWidget_AddPolygonEdgePoint) == 0x000028, "Wrong size on PolygonWidget_AddPolygonEdgePoint");
static_assert(offsetof(PolygonWidget_AddPolygonEdgePoint, PolygonPoint) == 0x000000, "Member 'PolygonWidget_AddPolygonEdgePoint::PolygonPoint' has a wrong offset!");
static_assert(offsetof(PolygonWidget_AddPolygonEdgePoint, bUpdatePolygon) == 0x000020, "Member 'PolygonWidget_AddPolygonEdgePoint::bUpdatePolygon' has a wrong offset!");

// Function UMGPolygon.PolygonWidget.AddPolygonEdgePointAtIndex
// 0x0028 (0x0028 - 0x0000)
struct PolygonWidget_AddPolygonEdgePointAtIndex final
{
public:
	struct FUMGPolygonPoint                       PolygonPoint;                                      // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUpdatePolygon;                                    // 0x0024(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PolygonWidget_AddPolygonEdgePointAtIndex) == 0x000008, "Wrong alignment on PolygonWidget_AddPolygonEdgePointAtIndex");
static_assert(sizeof(PolygonWidget_AddPolygonEdgePointAtIndex) == 0x000028, "Wrong size on PolygonWidget_AddPolygonEdgePointAtIndex");
static_assert(offsetof(PolygonWidget_AddPolygonEdgePointAtIndex, PolygonPoint) == 0x000000, "Member 'PolygonWidget_AddPolygonEdgePointAtIndex::PolygonPoint' has a wrong offset!");
static_assert(offsetof(PolygonWidget_AddPolygonEdgePointAtIndex, Index_0) == 0x000020, "Member 'PolygonWidget_AddPolygonEdgePointAtIndex::Index_0' has a wrong offset!");
static_assert(offsetof(PolygonWidget_AddPolygonEdgePointAtIndex, bUpdatePolygon) == 0x000024, "Member 'PolygonWidget_AddPolygonEdgePointAtIndex::bUpdatePolygon' has a wrong offset!");

// Function UMGPolygon.PolygonWidget.ChangePolygonEdgePointAtIndex
// 0x0028 (0x0028 - 0x0000)
struct PolygonWidget_ChangePolygonEdgePointAtIndex final
{
public:
	struct FUMGPolygonPoint                       PolygonPoint;                                      // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUpdatePolygon;                                    // 0x0024(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PolygonWidget_ChangePolygonEdgePointAtIndex) == 0x000008, "Wrong alignment on PolygonWidget_ChangePolygonEdgePointAtIndex");
static_assert(sizeof(PolygonWidget_ChangePolygonEdgePointAtIndex) == 0x000028, "Wrong size on PolygonWidget_ChangePolygonEdgePointAtIndex");
static_assert(offsetof(PolygonWidget_ChangePolygonEdgePointAtIndex, PolygonPoint) == 0x000000, "Member 'PolygonWidget_ChangePolygonEdgePointAtIndex::PolygonPoint' has a wrong offset!");
static_assert(offsetof(PolygonWidget_ChangePolygonEdgePointAtIndex, Index_0) == 0x000020, "Member 'PolygonWidget_ChangePolygonEdgePointAtIndex::Index_0' has a wrong offset!");
static_assert(offsetof(PolygonWidget_ChangePolygonEdgePointAtIndex, bUpdatePolygon) == 0x000024, "Member 'PolygonWidget_ChangePolygonEdgePointAtIndex::bUpdatePolygon' has a wrong offset!");

// Function UMGPolygon.PolygonWidget.RemoveAllPolygonEdgePoint
// 0x0001 (0x0001 - 0x0000)
struct PolygonWidget_RemoveAllPolygonEdgePoint final
{
public:
	bool                                          bUpdatePolygon;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PolygonWidget_RemoveAllPolygonEdgePoint) == 0x000001, "Wrong alignment on PolygonWidget_RemoveAllPolygonEdgePoint");
static_assert(sizeof(PolygonWidget_RemoveAllPolygonEdgePoint) == 0x000001, "Wrong size on PolygonWidget_RemoveAllPolygonEdgePoint");
static_assert(offsetof(PolygonWidget_RemoveAllPolygonEdgePoint, bUpdatePolygon) == 0x000000, "Member 'PolygonWidget_RemoveAllPolygonEdgePoint::bUpdatePolygon' has a wrong offset!");

// Function UMGPolygon.PolygonWidget.RemovePolygonEdgePoint
// 0x0008 (0x0008 - 0x0000)
struct PolygonWidget_RemovePolygonEdgePoint final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUpdatePolygon;                                    // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PolygonWidget_RemovePolygonEdgePoint) == 0x000004, "Wrong alignment on PolygonWidget_RemovePolygonEdgePoint");
static_assert(sizeof(PolygonWidget_RemovePolygonEdgePoint) == 0x000008, "Wrong size on PolygonWidget_RemovePolygonEdgePoint");
static_assert(offsetof(PolygonWidget_RemovePolygonEdgePoint, Index_0) == 0x000000, "Member 'PolygonWidget_RemovePolygonEdgePoint::Index_0' has a wrong offset!");
static_assert(offsetof(PolygonWidget_RemovePolygonEdgePoint, bUpdatePolygon) == 0x000004, "Member 'PolygonWidget_RemovePolygonEdgePoint::bUpdatePolygon' has a wrong offset!");

// Function UMGPolygon.PolygonWidget.SetPolygonType
// 0x0001 (0x0001 - 0x0000)
struct PolygonWidget_SetPolygonType final
{
public:
	EUMGPolygonType                               Type;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PolygonWidget_SetPolygonType) == 0x000001, "Wrong alignment on PolygonWidget_SetPolygonType");
static_assert(sizeof(PolygonWidget_SetPolygonType) == 0x000001, "Wrong size on PolygonWidget_SetPolygonType");
static_assert(offsetof(PolygonWidget_SetPolygonType, Type) == 0x000000, "Member 'PolygonWidget_SetPolygonType::Type' has a wrong offset!");

// Function UMGPolygon.PolygonWidget.CheckPointInPolygon
// 0x0018 (0x0018 - 0x0000)
struct PolygonWidget_CheckPointInPolygon final
{
public:
	struct FVector2D                              Point;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PolygonWidget_CheckPointInPolygon) == 0x000008, "Wrong alignment on PolygonWidget_CheckPointInPolygon");
static_assert(sizeof(PolygonWidget_CheckPointInPolygon) == 0x000018, "Wrong size on PolygonWidget_CheckPointInPolygon");
static_assert(offsetof(PolygonWidget_CheckPointInPolygon, Point) == 0x000000, "Member 'PolygonWidget_CheckPointInPolygon::Point' has a wrong offset!");
static_assert(offsetof(PolygonWidget_CheckPointInPolygon, ReturnValue) == 0x000010, "Member 'PolygonWidget_CheckPointInPolygon::ReturnValue' has a wrong offset!");

// Function UMGPolygon.PolygonWidget.GetDirectionAtDistanceAlongPolygonEdge
// 0x0018 (0x0018 - 0x0000)
struct PolygonWidget_GetDirectionAtDistanceAlongPolygonEdge final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EUMGPolygonCoordinateSpace                    CoordinateSpace;                                   // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PolygonWidget_GetDirectionAtDistanceAlongPolygonEdge) == 0x000008, "Wrong alignment on PolygonWidget_GetDirectionAtDistanceAlongPolygonEdge");
static_assert(sizeof(PolygonWidget_GetDirectionAtDistanceAlongPolygonEdge) == 0x000018, "Wrong size on PolygonWidget_GetDirectionAtDistanceAlongPolygonEdge");
static_assert(offsetof(PolygonWidget_GetDirectionAtDistanceAlongPolygonEdge, Distance) == 0x000000, "Member 'PolygonWidget_GetDirectionAtDistanceAlongPolygonEdge::Distance' has a wrong offset!");
static_assert(offsetof(PolygonWidget_GetDirectionAtDistanceAlongPolygonEdge, CoordinateSpace) == 0x000004, "Member 'PolygonWidget_GetDirectionAtDistanceAlongPolygonEdge::CoordinateSpace' has a wrong offset!");
static_assert(offsetof(PolygonWidget_GetDirectionAtDistanceAlongPolygonEdge, ReturnValue) == 0x000008, "Member 'PolygonWidget_GetDirectionAtDistanceAlongPolygonEdge::ReturnValue' has a wrong offset!");

// Function UMGPolygon.PolygonWidget.GetDirectionAtPolygonEdgeInputKey
// 0x0018 (0x0018 - 0x0000)
struct PolygonWidget_GetDirectionAtPolygonEdgeInputKey final
{
public:
	float                                         InKey;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EUMGPolygonCoordinateSpace                    CoordinateSpace;                                   // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PolygonWidget_GetDirectionAtPolygonEdgeInputKey) == 0x000008, "Wrong alignment on PolygonWidget_GetDirectionAtPolygonEdgeInputKey");
static_assert(sizeof(PolygonWidget_GetDirectionAtPolygonEdgeInputKey) == 0x000018, "Wrong size on PolygonWidget_GetDirectionAtPolygonEdgeInputKey");
static_assert(offsetof(PolygonWidget_GetDirectionAtPolygonEdgeInputKey, InKey) == 0x000000, "Member 'PolygonWidget_GetDirectionAtPolygonEdgeInputKey::InKey' has a wrong offset!");
static_assert(offsetof(PolygonWidget_GetDirectionAtPolygonEdgeInputKey, CoordinateSpace) == 0x000004, "Member 'PolygonWidget_GetDirectionAtPolygonEdgeInputKey::CoordinateSpace' has a wrong offset!");
static_assert(offsetof(PolygonWidget_GetDirectionAtPolygonEdgeInputKey, ReturnValue) == 0x000008, "Member 'PolygonWidget_GetDirectionAtPolygonEdgeInputKey::ReturnValue' has a wrong offset!");

// Function UMGPolygon.PolygonWidget.GetDirectionAtPolygonEdgePoint
// 0x0018 (0x0018 - 0x0000)
struct PolygonWidget_GetDirectionAtPolygonEdgePoint final
{
public:
	int32                                         PointIndex;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EUMGPolygonCoordinateSpace                    CoordinateSpace;                                   // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PolygonWidget_GetDirectionAtPolygonEdgePoint) == 0x000008, "Wrong alignment on PolygonWidget_GetDirectionAtPolygonEdgePoint");
static_assert(sizeof(PolygonWidget_GetDirectionAtPolygonEdgePoint) == 0x000018, "Wrong size on PolygonWidget_GetDirectionAtPolygonEdgePoint");
static_assert(offsetof(PolygonWidget_GetDirectionAtPolygonEdgePoint, PointIndex) == 0x000000, "Member 'PolygonWidget_GetDirectionAtPolygonEdgePoint::PointIndex' has a wrong offset!");
static_assert(offsetof(PolygonWidget_GetDirectionAtPolygonEdgePoint, CoordinateSpace) == 0x000004, "Member 'PolygonWidget_GetDirectionAtPolygonEdgePoint::CoordinateSpace' has a wrong offset!");
static_assert(offsetof(PolygonWidget_GetDirectionAtPolygonEdgePoint, ReturnValue) == 0x000008, "Member 'PolygonWidget_GetDirectionAtPolygonEdgePoint::ReturnValue' has a wrong offset!");

// Function UMGPolygon.PolygonWidget.GetDistanceAlongPolygonAtPolygonEdgeInputKey
// 0x0008 (0x0008 - 0x0000)
struct PolygonWidget_GetDistanceAlongPolygonAtPolygonEdgeInputKey final
{
public:
	float                                         InKey;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PolygonWidget_GetDistanceAlongPolygonAtPolygonEdgeInputKey) == 0x000004, "Wrong alignment on PolygonWidget_GetDistanceAlongPolygonAtPolygonEdgeInputKey");
static_assert(sizeof(PolygonWidget_GetDistanceAlongPolygonAtPolygonEdgeInputKey) == 0x000008, "Wrong size on PolygonWidget_GetDistanceAlongPolygonAtPolygonEdgeInputKey");
static_assert(offsetof(PolygonWidget_GetDistanceAlongPolygonAtPolygonEdgeInputKey, InKey) == 0x000000, "Member 'PolygonWidget_GetDistanceAlongPolygonAtPolygonEdgeInputKey::InKey' has a wrong offset!");
static_assert(offsetof(PolygonWidget_GetDistanceAlongPolygonAtPolygonEdgeInputKey, ReturnValue) == 0x000004, "Member 'PolygonWidget_GetDistanceAlongPolygonAtPolygonEdgeInputKey::ReturnValue' has a wrong offset!");

// Function UMGPolygon.PolygonWidget.GetInputKeyAtDistanceAlongPolygonEdge
// 0x000C (0x000C - 0x0000)
struct PolygonWidget_GetInputKeyAtDistanceAlongPolygonEdge final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EUMGPolygonCoordinateSpace                    CoordinateSpace;                                   // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PolygonWidget_GetInputKeyAtDistanceAlongPolygonEdge) == 0x000004, "Wrong alignment on PolygonWidget_GetInputKeyAtDistanceAlongPolygonEdge");
static_assert(sizeof(PolygonWidget_GetInputKeyAtDistanceAlongPolygonEdge) == 0x00000C, "Wrong size on PolygonWidget_GetInputKeyAtDistanceAlongPolygonEdge");
static_assert(offsetof(PolygonWidget_GetInputKeyAtDistanceAlongPolygonEdge, Distance) == 0x000000, "Member 'PolygonWidget_GetInputKeyAtDistanceAlongPolygonEdge::Distance' has a wrong offset!");
static_assert(offsetof(PolygonWidget_GetInputKeyAtDistanceAlongPolygonEdge, CoordinateSpace) == 0x000004, "Member 'PolygonWidget_GetInputKeyAtDistanceAlongPolygonEdge::CoordinateSpace' has a wrong offset!");
static_assert(offsetof(PolygonWidget_GetInputKeyAtDistanceAlongPolygonEdge, ReturnValue) == 0x000008, "Member 'PolygonWidget_GetInputKeyAtDistanceAlongPolygonEdge::ReturnValue' has a wrong offset!");

// Function UMGPolygon.PolygonWidget.GetLocationAtDistanceAlongPolygonEdge
// 0x0018 (0x0018 - 0x0000)
struct PolygonWidget_GetLocationAtDistanceAlongPolygonEdge final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EUMGPolygonCoordinateSpace                    CoordinateSpace;                                   // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PolygonWidget_GetLocationAtDistanceAlongPolygonEdge) == 0x000008, "Wrong alignment on PolygonWidget_GetLocationAtDistanceAlongPolygonEdge");
static_assert(sizeof(PolygonWidget_GetLocationAtDistanceAlongPolygonEdge) == 0x000018, "Wrong size on PolygonWidget_GetLocationAtDistanceAlongPolygonEdge");
static_assert(offsetof(PolygonWidget_GetLocationAtDistanceAlongPolygonEdge, Distance) == 0x000000, "Member 'PolygonWidget_GetLocationAtDistanceAlongPolygonEdge::Distance' has a wrong offset!");
static_assert(offsetof(PolygonWidget_GetLocationAtDistanceAlongPolygonEdge, CoordinateSpace) == 0x000004, "Member 'PolygonWidget_GetLocationAtDistanceAlongPolygonEdge::CoordinateSpace' has a wrong offset!");
static_assert(offsetof(PolygonWidget_GetLocationAtDistanceAlongPolygonEdge, ReturnValue) == 0x000008, "Member 'PolygonWidget_GetLocationAtDistanceAlongPolygonEdge::ReturnValue' has a wrong offset!");

// Function UMGPolygon.PolygonWidget.GetLocationAtPolygonEdgeInputKey
// 0x0018 (0x0018 - 0x0000)
struct PolygonWidget_GetLocationAtPolygonEdgeInputKey final
{
public:
	float                                         InKey;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EUMGPolygonCoordinateSpace                    CoordinateSpace;                                   // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PolygonWidget_GetLocationAtPolygonEdgeInputKey) == 0x000008, "Wrong alignment on PolygonWidget_GetLocationAtPolygonEdgeInputKey");
static_assert(sizeof(PolygonWidget_GetLocationAtPolygonEdgeInputKey) == 0x000018, "Wrong size on PolygonWidget_GetLocationAtPolygonEdgeInputKey");
static_assert(offsetof(PolygonWidget_GetLocationAtPolygonEdgeInputKey, InKey) == 0x000000, "Member 'PolygonWidget_GetLocationAtPolygonEdgeInputKey::InKey' has a wrong offset!");
static_assert(offsetof(PolygonWidget_GetLocationAtPolygonEdgeInputKey, CoordinateSpace) == 0x000004, "Member 'PolygonWidget_GetLocationAtPolygonEdgeInputKey::CoordinateSpace' has a wrong offset!");
static_assert(offsetof(PolygonWidget_GetLocationAtPolygonEdgeInputKey, ReturnValue) == 0x000008, "Member 'PolygonWidget_GetLocationAtPolygonEdgeInputKey::ReturnValue' has a wrong offset!");

// Function UMGPolygon.PolygonWidget.GetLocationAtPolygonEdgePoint
// 0x0018 (0x0018 - 0x0000)
struct PolygonWidget_GetLocationAtPolygonEdgePoint final
{
public:
	int32                                         PointIndex;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EUMGPolygonCoordinateSpace                    CoordinateSpace;                                   // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PolygonWidget_GetLocationAtPolygonEdgePoint) == 0x000008, "Wrong alignment on PolygonWidget_GetLocationAtPolygonEdgePoint");
static_assert(sizeof(PolygonWidget_GetLocationAtPolygonEdgePoint) == 0x000018, "Wrong size on PolygonWidget_GetLocationAtPolygonEdgePoint");
static_assert(offsetof(PolygonWidget_GetLocationAtPolygonEdgePoint, PointIndex) == 0x000000, "Member 'PolygonWidget_GetLocationAtPolygonEdgePoint::PointIndex' has a wrong offset!");
static_assert(offsetof(PolygonWidget_GetLocationAtPolygonEdgePoint, CoordinateSpace) == 0x000004, "Member 'PolygonWidget_GetLocationAtPolygonEdgePoint::CoordinateSpace' has a wrong offset!");
static_assert(offsetof(PolygonWidget_GetLocationAtPolygonEdgePoint, ReturnValue) == 0x000008, "Member 'PolygonWidget_GetLocationAtPolygonEdgePoint::ReturnValue' has a wrong offset!");

// Function UMGPolygon.PolygonWidget.GetNumberOfPolygonEdgePoints
// 0x0004 (0x0004 - 0x0000)
struct PolygonWidget_GetNumberOfPolygonEdgePoints final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PolygonWidget_GetNumberOfPolygonEdgePoints) == 0x000004, "Wrong alignment on PolygonWidget_GetNumberOfPolygonEdgePoints");
static_assert(sizeof(PolygonWidget_GetNumberOfPolygonEdgePoints) == 0x000004, "Wrong size on PolygonWidget_GetNumberOfPolygonEdgePoints");
static_assert(offsetof(PolygonWidget_GetNumberOfPolygonEdgePoints, ReturnValue) == 0x000000, "Member 'PolygonWidget_GetNumberOfPolygonEdgePoints::ReturnValue' has a wrong offset!");

// Function UMGPolygon.PolygonWidget.GetPolygonEdgeLength
// 0x0004 (0x0004 - 0x0000)
struct PolygonWidget_GetPolygonEdgeLength final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PolygonWidget_GetPolygonEdgeLength) == 0x000004, "Wrong alignment on PolygonWidget_GetPolygonEdgeLength");
static_assert(sizeof(PolygonWidget_GetPolygonEdgeLength) == 0x000004, "Wrong size on PolygonWidget_GetPolygonEdgeLength");
static_assert(offsetof(PolygonWidget_GetPolygonEdgeLength, ReturnValue) == 0x000000, "Member 'PolygonWidget_GetPolygonEdgeLength::ReturnValue' has a wrong offset!");

// Function UMGPolygon.PolygonWidget.GetPolygonType
// 0x0001 (0x0001 - 0x0000)
struct PolygonWidget_GetPolygonType final
{
public:
	EUMGPolygonType                               ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PolygonWidget_GetPolygonType) == 0x000001, "Wrong alignment on PolygonWidget_GetPolygonType");
static_assert(sizeof(PolygonWidget_GetPolygonType) == 0x000001, "Wrong size on PolygonWidget_GetPolygonType");
static_assert(offsetof(PolygonWidget_GetPolygonType, ReturnValue) == 0x000000, "Member 'PolygonWidget_GetPolygonType::ReturnValue' has a wrong offset!");

// Function UMGPolygon.PolygonWidget.GetRotationAngleAtDistanceAlongPolygonEdge
// 0x000C (0x000C - 0x0000)
struct PolygonWidget_GetRotationAngleAtDistanceAlongPolygonEdge final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EUMGPolygonCoordinateSpace                    CoordinateSpace;                                   // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PolygonWidget_GetRotationAngleAtDistanceAlongPolygonEdge) == 0x000004, "Wrong alignment on PolygonWidget_GetRotationAngleAtDistanceAlongPolygonEdge");
static_assert(sizeof(PolygonWidget_GetRotationAngleAtDistanceAlongPolygonEdge) == 0x00000C, "Wrong size on PolygonWidget_GetRotationAngleAtDistanceAlongPolygonEdge");
static_assert(offsetof(PolygonWidget_GetRotationAngleAtDistanceAlongPolygonEdge, Distance) == 0x000000, "Member 'PolygonWidget_GetRotationAngleAtDistanceAlongPolygonEdge::Distance' has a wrong offset!");
static_assert(offsetof(PolygonWidget_GetRotationAngleAtDistanceAlongPolygonEdge, CoordinateSpace) == 0x000004, "Member 'PolygonWidget_GetRotationAngleAtDistanceAlongPolygonEdge::CoordinateSpace' has a wrong offset!");
static_assert(offsetof(PolygonWidget_GetRotationAngleAtDistanceAlongPolygonEdge, ReturnValue) == 0x000008, "Member 'PolygonWidget_GetRotationAngleAtDistanceAlongPolygonEdge::ReturnValue' has a wrong offset!");

// Function UMGPolygon.PolygonWidget.GetRotationAngleAtPolygonEdgeInputKey
// 0x000C (0x000C - 0x0000)
struct PolygonWidget_GetRotationAngleAtPolygonEdgeInputKey final
{
public:
	float                                         InKey;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EUMGPolygonCoordinateSpace                    CoordinateSpace;                                   // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PolygonWidget_GetRotationAngleAtPolygonEdgeInputKey) == 0x000004, "Wrong alignment on PolygonWidget_GetRotationAngleAtPolygonEdgeInputKey");
static_assert(sizeof(PolygonWidget_GetRotationAngleAtPolygonEdgeInputKey) == 0x00000C, "Wrong size on PolygonWidget_GetRotationAngleAtPolygonEdgeInputKey");
static_assert(offsetof(PolygonWidget_GetRotationAngleAtPolygonEdgeInputKey, InKey) == 0x000000, "Member 'PolygonWidget_GetRotationAngleAtPolygonEdgeInputKey::InKey' has a wrong offset!");
static_assert(offsetof(PolygonWidget_GetRotationAngleAtPolygonEdgeInputKey, CoordinateSpace) == 0x000004, "Member 'PolygonWidget_GetRotationAngleAtPolygonEdgeInputKey::CoordinateSpace' has a wrong offset!");
static_assert(offsetof(PolygonWidget_GetRotationAngleAtPolygonEdgeInputKey, ReturnValue) == 0x000008, "Member 'PolygonWidget_GetRotationAngleAtPolygonEdgeInputKey::ReturnValue' has a wrong offset!");

// Function UMGPolygon.PolygonWidget.GetTangentAtDistanceAlongPolygonEdge
// 0x0018 (0x0018 - 0x0000)
struct PolygonWidget_GetTangentAtDistanceAlongPolygonEdge final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EUMGPolygonCoordinateSpace                    CoordinateSpace;                                   // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PolygonWidget_GetTangentAtDistanceAlongPolygonEdge) == 0x000008, "Wrong alignment on PolygonWidget_GetTangentAtDistanceAlongPolygonEdge");
static_assert(sizeof(PolygonWidget_GetTangentAtDistanceAlongPolygonEdge) == 0x000018, "Wrong size on PolygonWidget_GetTangentAtDistanceAlongPolygonEdge");
static_assert(offsetof(PolygonWidget_GetTangentAtDistanceAlongPolygonEdge, Distance) == 0x000000, "Member 'PolygonWidget_GetTangentAtDistanceAlongPolygonEdge::Distance' has a wrong offset!");
static_assert(offsetof(PolygonWidget_GetTangentAtDistanceAlongPolygonEdge, CoordinateSpace) == 0x000004, "Member 'PolygonWidget_GetTangentAtDistanceAlongPolygonEdge::CoordinateSpace' has a wrong offset!");
static_assert(offsetof(PolygonWidget_GetTangentAtDistanceAlongPolygonEdge, ReturnValue) == 0x000008, "Member 'PolygonWidget_GetTangentAtDistanceAlongPolygonEdge::ReturnValue' has a wrong offset!");

// Function UMGPolygon.PolygonWidget.GetTangentAtPolygonEdgeInputKey
// 0x0018 (0x0018 - 0x0000)
struct PolygonWidget_GetTangentAtPolygonEdgeInputKey final
{
public:
	float                                         InKey;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EUMGPolygonCoordinateSpace                    CoordinateSpace;                                   // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PolygonWidget_GetTangentAtPolygonEdgeInputKey) == 0x000008, "Wrong alignment on PolygonWidget_GetTangentAtPolygonEdgeInputKey");
static_assert(sizeof(PolygonWidget_GetTangentAtPolygonEdgeInputKey) == 0x000018, "Wrong size on PolygonWidget_GetTangentAtPolygonEdgeInputKey");
static_assert(offsetof(PolygonWidget_GetTangentAtPolygonEdgeInputKey, InKey) == 0x000000, "Member 'PolygonWidget_GetTangentAtPolygonEdgeInputKey::InKey' has a wrong offset!");
static_assert(offsetof(PolygonWidget_GetTangentAtPolygonEdgeInputKey, CoordinateSpace) == 0x000004, "Member 'PolygonWidget_GetTangentAtPolygonEdgeInputKey::CoordinateSpace' has a wrong offset!");
static_assert(offsetof(PolygonWidget_GetTangentAtPolygonEdgeInputKey, ReturnValue) == 0x000008, "Member 'PolygonWidget_GetTangentAtPolygonEdgeInputKey::ReturnValue' has a wrong offset!");

// Function UMGPolygon.PolygonWidget.GetTangentAtPolygonEdgePoint
// 0x0018 (0x0018 - 0x0000)
struct PolygonWidget_GetTangentAtPolygonEdgePoint final
{
public:
	int32                                         PointIndex;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EUMGPolygonCoordinateSpace                    CoordinateSpace;                                   // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PolygonWidget_GetTangentAtPolygonEdgePoint) == 0x000008, "Wrong alignment on PolygonWidget_GetTangentAtPolygonEdgePoint");
static_assert(sizeof(PolygonWidget_GetTangentAtPolygonEdgePoint) == 0x000018, "Wrong size on PolygonWidget_GetTangentAtPolygonEdgePoint");
static_assert(offsetof(PolygonWidget_GetTangentAtPolygonEdgePoint, PointIndex) == 0x000000, "Member 'PolygonWidget_GetTangentAtPolygonEdgePoint::PointIndex' has a wrong offset!");
static_assert(offsetof(PolygonWidget_GetTangentAtPolygonEdgePoint, CoordinateSpace) == 0x000004, "Member 'PolygonWidget_GetTangentAtPolygonEdgePoint::CoordinateSpace' has a wrong offset!");
static_assert(offsetof(PolygonWidget_GetTangentAtPolygonEdgePoint, ReturnValue) == 0x000008, "Member 'PolygonWidget_GetTangentAtPolygonEdgePoint::ReturnValue' has a wrong offset!");

}

