#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HUD_MiniMap

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_HUD_MiniMap.WBP_HUD_MiniMap_C.ExecuteUbergraph_WBP_HUD_MiniMap
// 0x0048 (0x0048 - 0x0000)
struct WBP_HUD_MiniMap_C_ExecuteUbergraph_WBP_HUD_MiniMap final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUserWidget*>                    CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_MiniMap_C_ExecuteUbergraph_WBP_HUD_MiniMap) == 0x000008, "Wrong alignment on WBP_HUD_MiniMap_C_ExecuteUbergraph_WBP_HUD_MiniMap");
static_assert(sizeof(WBP_HUD_MiniMap_C_ExecuteUbergraph_WBP_HUD_MiniMap) == 0x000048, "Wrong size on WBP_HUD_MiniMap_C_ExecuteUbergraph_WBP_HUD_MiniMap");
static_assert(offsetof(WBP_HUD_MiniMap_C_ExecuteUbergraph_WBP_HUD_MiniMap, EntryPoint) == 0x000000, "Member 'WBP_HUD_MiniMap_C_ExecuteUbergraph_WBP_HUD_MiniMap::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_ExecuteUbergraph_WBP_HUD_MiniMap, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000008, "Member 'WBP_HUD_MiniMap_C_ExecuteUbergraph_WBP_HUD_MiniMap::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_ExecuteUbergraph_WBP_HUD_MiniMap, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'WBP_HUD_MiniMap_C_ExecuteUbergraph_WBP_HUD_MiniMap::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_ExecuteUbergraph_WBP_HUD_MiniMap, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'WBP_HUD_MiniMap_C_ExecuteUbergraph_WBP_HUD_MiniMap::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_ExecuteUbergraph_WBP_HUD_MiniMap, CallFunc_Array_Get_Item) == 0x000020, "Member 'WBP_HUD_MiniMap_C_ExecuteUbergraph_WBP_HUD_MiniMap::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_ExecuteUbergraph_WBP_HUD_MiniMap, CallFunc_GetDisplayName_ReturnValue) == 0x000028, "Member 'WBP_HUD_MiniMap_C_ExecuteUbergraph_WBP_HUD_MiniMap::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_ExecuteUbergraph_WBP_HUD_MiniMap, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'WBP_HUD_MiniMap_C_ExecuteUbergraph_WBP_HUD_MiniMap::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_ExecuteUbergraph_WBP_HUD_MiniMap, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'WBP_HUD_MiniMap_C_ExecuteUbergraph_WBP_HUD_MiniMap::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_ExecuteUbergraph_WBP_HUD_MiniMap, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'WBP_HUD_MiniMap_C_ExecuteUbergraph_WBP_HUD_MiniMap::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_HUD_MiniMap.WBP_HUD_MiniMap_C.ReportException
// 0x0010 (0x0010 - 0x0000)
struct WBP_HUD_MiniMap_C_ReportException final
{
public:
	class FString                                 NewParam;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_MiniMap_C_ReportException) == 0x000008, "Wrong alignment on WBP_HUD_MiniMap_C_ReportException");
static_assert(sizeof(WBP_HUD_MiniMap_C_ReportException) == 0x000010, "Wrong size on WBP_HUD_MiniMap_C_ReportException");
static_assert(offsetof(WBP_HUD_MiniMap_C_ReportException, NewParam) == 0x000000, "Member 'WBP_HUD_MiniMap_C_ReportException::NewParam' has a wrong offset!");

// Function WBP_HUD_MiniMap.WBP_HUD_MiniMap_C.UpdateWidget
// 0x01B8 (0x01B8 - 0x0000)
struct WBP_HUD_MiniMap_C_UpdateWidget final
{
public:
	class UWidget*                                目标;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelWidget*                           NewLocalVar;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelWidget*                           K2Node_DynamicCast_AsPanel_Widget;                 // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            K2Node_DynamicCast_AsUser_Widget;                  // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetRootWidget_ReturnValue;                // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelWidget*                           K2Node_DynamicCast_AsPanel_Widget_1;               // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B[0x5];                                       // 0x009B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_Vector2dToString_ReturnValue;        // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_Vector2dToString_ReturnValue_1;      // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x00C0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_2;             // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x01A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_MiniMap_C_UpdateWidget) == 0x000008, "Wrong alignment on WBP_HUD_MiniMap_C_UpdateWidget");
static_assert(sizeof(WBP_HUD_MiniMap_C_UpdateWidget) == 0x0001B8, "Wrong size on WBP_HUD_MiniMap_C_UpdateWidget");
static_assert(offsetof(WBP_HUD_MiniMap_C_UpdateWidget, 目标) == 0x000000, "Member 'WBP_HUD_MiniMap_C_UpdateWidget::目标' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_UpdateWidget, NewLocalVar) == 0x000008, "Member 'WBP_HUD_MiniMap_C_UpdateWidget::NewLocalVar' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_UpdateWidget, K2Node_DynamicCast_AsPanel_Widget) == 0x000010, "Member 'WBP_HUD_MiniMap_C_UpdateWidget::K2Node_DynamicCast_AsPanel_Widget' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_UpdateWidget, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_HUD_MiniMap_C_UpdateWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_UpdateWidget, K2Node_DynamicCast_AsUser_Widget) == 0x000020, "Member 'WBP_HUD_MiniMap_C_UpdateWidget::K2Node_DynamicCast_AsUser_Widget' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_UpdateWidget, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'WBP_HUD_MiniMap_C_UpdateWidget::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_UpdateWidget, CallFunc_GetDisplayName_ReturnValue) == 0x000030, "Member 'WBP_HUD_MiniMap_C_UpdateWidget::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_UpdateWidget, CallFunc_GetDisplayName_ReturnValue_1) == 0x000040, "Member 'WBP_HUD_MiniMap_C_UpdateWidget::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_UpdateWidget, CallFunc_GetRootWidget_ReturnValue) == 0x000050, "Member 'WBP_HUD_MiniMap_C_UpdateWidget::CallFunc_GetRootWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_UpdateWidget, K2Node_DynamicCast_AsPanel_Widget_1) == 0x000058, "Member 'WBP_HUD_MiniMap_C_UpdateWidget::K2Node_DynamicCast_AsPanel_Widget_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_UpdateWidget, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'WBP_HUD_MiniMap_C_UpdateWidget::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_UpdateWidget, Temp_int_Array_Index_Variable) == 0x000064, "Member 'WBP_HUD_MiniMap_C_UpdateWidget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_UpdateWidget, CallFunc_BreakVector2D_X) == 0x000068, "Member 'WBP_HUD_MiniMap_C_UpdateWidget::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_UpdateWidget, CallFunc_BreakVector2D_Y) == 0x000070, "Member 'WBP_HUD_MiniMap_C_UpdateWidget::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_UpdateWidget, CallFunc_BreakVector2D_X_1) == 0x000078, "Member 'WBP_HUD_MiniMap_C_UpdateWidget::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_UpdateWidget, CallFunc_BreakVector2D_Y_1) == 0x000080, "Member 'WBP_HUD_MiniMap_C_UpdateWidget::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_UpdateWidget, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000088, "Member 'WBP_HUD_MiniMap_C_UpdateWidget::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_UpdateWidget, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000090, "Member 'WBP_HUD_MiniMap_C_UpdateWidget::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_UpdateWidget, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000098, "Member 'WBP_HUD_MiniMap_C_UpdateWidget::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_UpdateWidget, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000099, "Member 'WBP_HUD_MiniMap_C_UpdateWidget::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_UpdateWidget, CallFunc_BooleanAND_ReturnValue) == 0x00009A, "Member 'WBP_HUD_MiniMap_C_UpdateWidget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_UpdateWidget, CallFunc_Conv_Vector2dToString_ReturnValue) == 0x0000A0, "Member 'WBP_HUD_MiniMap_C_UpdateWidget::CallFunc_Conv_Vector2dToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_UpdateWidget, CallFunc_Conv_Vector2dToString_ReturnValue_1) == 0x0000B0, "Member 'WBP_HUD_MiniMap_C_UpdateWidget::CallFunc_Conv_Vector2dToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_UpdateWidget, CallFunc_GetAllChildren_ReturnValue) == 0x0000C0, "Member 'WBP_HUD_MiniMap_C_UpdateWidget::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_UpdateWidget, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'WBP_HUD_MiniMap_C_UpdateWidget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_UpdateWidget, CallFunc_Concat_StrStr_ReturnValue) == 0x0000D8, "Member 'WBP_HUD_MiniMap_C_UpdateWidget::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_UpdateWidget, CallFunc_GetVisibility_ReturnValue) == 0x0000E8, "Member 'WBP_HUD_MiniMap_C_UpdateWidget::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_UpdateWidget, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000F0, "Member 'WBP_HUD_MiniMap_C_UpdateWidget::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_UpdateWidget, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000100, "Member 'WBP_HUD_MiniMap_C_UpdateWidget::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_UpdateWidget, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000108, "Member 'WBP_HUD_MiniMap_C_UpdateWidget::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_UpdateWidget, CallFunc_GetDisplayName_ReturnValue_2) == 0x000118, "Member 'WBP_HUD_MiniMap_C_UpdateWidget::CallFunc_GetDisplayName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_UpdateWidget, CallFunc_Array_Length_ReturnValue) == 0x000128, "Member 'WBP_HUD_MiniMap_C_UpdateWidget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_UpdateWidget, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000130, "Member 'WBP_HUD_MiniMap_C_UpdateWidget::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_UpdateWidget, Temp_int_Loop_Counter_Variable) == 0x000140, "Member 'WBP_HUD_MiniMap_C_UpdateWidget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_UpdateWidget, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000148, "Member 'WBP_HUD_MiniMap_C_UpdateWidget::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_UpdateWidget, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000158, "Member 'WBP_HUD_MiniMap_C_UpdateWidget::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_UpdateWidget, CallFunc_Less_IntInt_ReturnValue) == 0x000168, "Member 'WBP_HUD_MiniMap_C_UpdateWidget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_UpdateWidget, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000170, "Member 'WBP_HUD_MiniMap_C_UpdateWidget::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_UpdateWidget, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000180, "Member 'WBP_HUD_MiniMap_C_UpdateWidget::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_UpdateWidget, CallFunc_Add_IntInt_ReturnValue) == 0x000190, "Member 'WBP_HUD_MiniMap_C_UpdateWidget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_UpdateWidget, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000198, "Member 'WBP_HUD_MiniMap_C_UpdateWidget::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_HUD_MiniMap_C_UpdateWidget, CallFunc_Concat_StrStr_ReturnValue_8) == 0x0001A8, "Member 'WBP_HUD_MiniMap_C_UpdateWidget::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");

// Function WBP_HUD_MiniMap.WBP_HUD_MiniMap_C.UpteWidgetSize
// 0x0008 (0x0008 - 0x0000)
struct WBP_HUD_MiniMap_C_UpteWidgetSize final
{
public:
	class UWidget*                                NewParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_MiniMap_C_UpteWidgetSize) == 0x000008, "Wrong alignment on WBP_HUD_MiniMap_C_UpteWidgetSize");
static_assert(sizeof(WBP_HUD_MiniMap_C_UpteWidgetSize) == 0x000008, "Wrong size on WBP_HUD_MiniMap_C_UpteWidgetSize");
static_assert(offsetof(WBP_HUD_MiniMap_C_UpteWidgetSize, NewParam) == 0x000000, "Member 'WBP_HUD_MiniMap_C_UpteWidgetSize::NewParam' has a wrong offset!");

// Function WBP_HUD_MiniMap.WBP_HUD_MiniMap_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct WBP_HUD_MiniMap_C_GetModuleName final
{
public:
	class FString                                 ReturnValue_0;                                     // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_MiniMap_C_GetModuleName) == 0x000008, "Wrong alignment on WBP_HUD_MiniMap_C_GetModuleName");
static_assert(sizeof(WBP_HUD_MiniMap_C_GetModuleName) == 0x000010, "Wrong size on WBP_HUD_MiniMap_C_GetModuleName");
static_assert(offsetof(WBP_HUD_MiniMap_C_GetModuleName, ReturnValue_0) == 0x000000, "Member 'WBP_HUD_MiniMap_C_GetModuleName::ReturnValue_0' has a wrong offset!");

}

