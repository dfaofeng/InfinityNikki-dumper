#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PaperSkelMeshBaker

#include "Basic.hpp"

#include "PaperSkelMeshBaker_structs.hpp"


namespace SDK::Params
{

// Function PaperSkelMeshBaker.PaperSkelMeshBakeLibrary.ForceRefreshAnimation
// 0x0008 (0x0008 - 0x0000)
struct PaperSkelMeshBakeLibrary_ForceRefreshAnimation final
{
public:
	class USkeletalMeshComponent*                 InSkeletalMeshComponent;                           // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperSkelMeshBakeLibrary_ForceRefreshAnimation) == 0x000008, "Wrong alignment on PaperSkelMeshBakeLibrary_ForceRefreshAnimation");
static_assert(sizeof(PaperSkelMeshBakeLibrary_ForceRefreshAnimation) == 0x000008, "Wrong size on PaperSkelMeshBakeLibrary_ForceRefreshAnimation");
static_assert(offsetof(PaperSkelMeshBakeLibrary_ForceRefreshAnimation, InSkeletalMeshComponent) == 0x000000, "Member 'PaperSkelMeshBakeLibrary_ForceRefreshAnimation::InSkeletalMeshComponent' has a wrong offset!");

// Function PaperSkelMeshBaker.PaperSkelMeshBakeLibrary.MergeSkeletalMeshComponentsAndSave
// 0x0080 (0x0080 - 0x0000)
struct PaperSkelMeshBakeLibrary_MergeSkeletalMeshComponentsAndSave final
{
public:
	class FString                                 PackageName;                                       // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPaperSkelMeshMergeParams              Params_0;                                          // 0x0010(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                          bIsNeedSave;                                       // 0x0070(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperSkelMeshBakeLibrary_MergeSkeletalMeshComponentsAndSave) == 0x000008, "Wrong alignment on PaperSkelMeshBakeLibrary_MergeSkeletalMeshComponentsAndSave");
static_assert(sizeof(PaperSkelMeshBakeLibrary_MergeSkeletalMeshComponentsAndSave) == 0x000080, "Wrong size on PaperSkelMeshBakeLibrary_MergeSkeletalMeshComponentsAndSave");
static_assert(offsetof(PaperSkelMeshBakeLibrary_MergeSkeletalMeshComponentsAndSave, PackageName) == 0x000000, "Member 'PaperSkelMeshBakeLibrary_MergeSkeletalMeshComponentsAndSave::PackageName' has a wrong offset!");
static_assert(offsetof(PaperSkelMeshBakeLibrary_MergeSkeletalMeshComponentsAndSave, Params_0) == 0x000010, "Member 'PaperSkelMeshBakeLibrary_MergeSkeletalMeshComponentsAndSave::Params_0' has a wrong offset!");
static_assert(offsetof(PaperSkelMeshBakeLibrary_MergeSkeletalMeshComponentsAndSave, bIsNeedSave) == 0x000070, "Member 'PaperSkelMeshBakeLibrary_MergeSkeletalMeshComponentsAndSave::bIsNeedSave' has a wrong offset!");
static_assert(offsetof(PaperSkelMeshBakeLibrary_MergeSkeletalMeshComponentsAndSave, ReturnValue) == 0x000078, "Member 'PaperSkelMeshBakeLibrary_MergeSkeletalMeshComponentsAndSave::ReturnValue' has a wrong offset!");

// Function PaperSkelMeshBaker.PaperSkelMeshBakeLibrary.SwitchMergedMaterialBetweenMaskAndOpaque
// 0x0010 (0x0010 - 0x0000)
struct PaperSkelMeshBakeLibrary_SwitchMergedMaterialBetweenMaskAndOpaque final
{
public:
	class USkeletalMeshComponent*                 Component;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSwitchToMask;                                     // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PaperSkelMeshBakeLibrary_SwitchMergedMaterialBetweenMaskAndOpaque) == 0x000008, "Wrong alignment on PaperSkelMeshBakeLibrary_SwitchMergedMaterialBetweenMaskAndOpaque");
static_assert(sizeof(PaperSkelMeshBakeLibrary_SwitchMergedMaterialBetweenMaskAndOpaque) == 0x000010, "Wrong size on PaperSkelMeshBakeLibrary_SwitchMergedMaterialBetweenMaskAndOpaque");
static_assert(offsetof(PaperSkelMeshBakeLibrary_SwitchMergedMaterialBetweenMaskAndOpaque, Component) == 0x000000, "Member 'PaperSkelMeshBakeLibrary_SwitchMergedMaterialBetweenMaskAndOpaque::Component' has a wrong offset!");
static_assert(offsetof(PaperSkelMeshBakeLibrary_SwitchMergedMaterialBetweenMaskAndOpaque, bSwitchToMask) == 0x000008, "Member 'PaperSkelMeshBakeLibrary_SwitchMergedMaterialBetweenMaskAndOpaque::bSwitchToMask' has a wrong offset!");

// Function PaperSkelMeshBaker.PaperSkelMeshBakeLibrary.UpdateSkeletalMesh
// 0x0010 (0x0010 - 0x0000)
struct PaperSkelMeshBakeLibrary_UpdateSkeletalMesh final
{
public:
	class USkeletalMeshComponent*                 TargetComponent;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                          InSkeletalMesh;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaperSkelMeshBakeLibrary_UpdateSkeletalMesh) == 0x000008, "Wrong alignment on PaperSkelMeshBakeLibrary_UpdateSkeletalMesh");
static_assert(sizeof(PaperSkelMeshBakeLibrary_UpdateSkeletalMesh) == 0x000010, "Wrong size on PaperSkelMeshBakeLibrary_UpdateSkeletalMesh");
static_assert(offsetof(PaperSkelMeshBakeLibrary_UpdateSkeletalMesh, TargetComponent) == 0x000000, "Member 'PaperSkelMeshBakeLibrary_UpdateSkeletalMesh::TargetComponent' has a wrong offset!");
static_assert(offsetof(PaperSkelMeshBakeLibrary_UpdateSkeletalMesh, InSkeletalMesh) == 0x000008, "Member 'PaperSkelMeshBakeLibrary_UpdateSkeletalMesh::InSkeletalMesh' has a wrong offset!");

}

