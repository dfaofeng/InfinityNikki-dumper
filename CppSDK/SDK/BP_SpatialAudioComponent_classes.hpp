#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SpatialAudioComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SpatialAudioComponent.BP_SpatialAudioComponent_C
// 0x0050 (0x00F8 - 0x00A8)
class UBP_SpatialAudioComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAkRtpc*                                RoomSizeRTPC;                                      // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAkRtpc*                                InOutRoomRatioRTPC;                                // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAkRtpc*                                LAmbOpennessRTPC;                                  // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAkRtpc*                                RAmbOpennessRTPC;                                  // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UDataTable>              SurfaceTypeStateMap;                               // 0x00D0(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_SpatialAudioComponent(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);

	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SpatialAudioComponent_C">();
	}
	static class UBP_SpatialAudioComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_SpatialAudioComponent_C>();
	}
};
static_assert(alignof(UBP_SpatialAudioComponent_C) == 0x000008, "Wrong alignment on UBP_SpatialAudioComponent_C");
static_assert(sizeof(UBP_SpatialAudioComponent_C) == 0x0000F8, "Wrong size on UBP_SpatialAudioComponent_C");
static_assert(offsetof(UBP_SpatialAudioComponent_C, UberGraphFrame) == 0x0000A8, "Member 'UBP_SpatialAudioComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_SpatialAudioComponent_C, RoomSizeRTPC) == 0x0000B0, "Member 'UBP_SpatialAudioComponent_C::RoomSizeRTPC' has a wrong offset!");
static_assert(offsetof(UBP_SpatialAudioComponent_C, InOutRoomRatioRTPC) == 0x0000B8, "Member 'UBP_SpatialAudioComponent_C::InOutRoomRatioRTPC' has a wrong offset!");
static_assert(offsetof(UBP_SpatialAudioComponent_C, LAmbOpennessRTPC) == 0x0000C0, "Member 'UBP_SpatialAudioComponent_C::LAmbOpennessRTPC' has a wrong offset!");
static_assert(offsetof(UBP_SpatialAudioComponent_C, RAmbOpennessRTPC) == 0x0000C8, "Member 'UBP_SpatialAudioComponent_C::RAmbOpennessRTPC' has a wrong offset!");
static_assert(offsetof(UBP_SpatialAudioComponent_C, SurfaceTypeStateMap) == 0x0000D0, "Member 'UBP_SpatialAudioComponent_C::SurfaceTypeStateMap' has a wrong offset!");

}

