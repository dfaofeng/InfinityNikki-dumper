#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FSM_QuadrupedAnimalReaction

#include "Basic.hpp"

#include "FSM_QuadrupedAnimalReaction_classes.hpp"
#include "FSM_QuadrupedAnimalReaction_parameters.hpp"


namespace SDK
{

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.WantedStanceTransitonStart_B2F1FD674D016BAA6C715DA17E929405
// (BlueprintCallable, BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::WantedStanceTransitonStart_B2F1FD674D016BAA6C715DA17E929405()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "WantedStanceTransitonStart_B2F1FD674D016BAA6C715DA17E929405");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.WantedStanceTransitonStart_51B4524846EAD7E8757D4D8F3326AF1B
// (BlueprintCallable, BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::WantedStanceTransitonStart_51B4524846EAD7E8757D4D8F3326AF1B()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "WantedStanceTransitonStart_51B4524846EAD7E8757D4D8F3326AF1B");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.WantedStanceTransitonEnd_B2F1FD674D016BAA6C715DA17E929405
// (BlueprintCallable, BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::WantedStanceTransitonEnd_B2F1FD674D016BAA6C715DA17E929405()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "WantedStanceTransitonEnd_B2F1FD674D016BAA6C715DA17E929405");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.WantedStanceTransitonEnd_51B4524846EAD7E8757D4D8F3326AF1B
// (BlueprintCallable, BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::WantedStanceTransitonEnd_51B4524846EAD7E8757D4D8F3326AF1B()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "WantedStanceTransitonEnd_51B4524846EAD7E8757D4D8F3326AF1B");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.UpdateTurnByMontage
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::UpdateTurnByMontage(double DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "UpdateTurnByMontage");

	Params::FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.UpdateTurnByCurve
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::UpdateTurnByCurve(double DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "UpdateTurnByCurve");

	Params::FSM_QuadrupedAnimalReaction_C_UpdateTurnByCurve Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.UpdateTransitionState
// (Public, BlueprintCallable, BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::UpdateTransitionState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "UpdateTransitionState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.TryStartInitTurn_Curious
// (BlueprintCallable, BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::TryStartInitTurn_Curious()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "TryStartInitTurn_Curious");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.TryStartInitTurn_Alert
// (BlueprintCallable, BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::TryStartInitTurn_Alert()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "TryStartInitTurn_Alert");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.TryStartCuriousTurn
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bTurnStarted                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::TryStartCuriousTurn(bool* bTurnStarted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "TryStartCuriousTurn");

	Params::FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bTurnStarted != nullptr)
		*bTurnStarted = Parms.bTurnStarted;
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.TryStartAlertTurn
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bTurnStarted                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::TryStartAlertTurn(bool* bTurnStarted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "TryStartAlertTurn");

	Params::FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bTurnStarted != nullptr)
		*bTurnStarted = Parms.bTurnStarted;
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.TryFleeForReachMaxAlertDuration_OnTurnFinish
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bTurnByCurve                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::TryFleeForReachMaxAlertDuration_OnTurnFinish(bool bTurnByCurve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "TryFleeForReachMaxAlertDuration_OnTurnFinish");

	Params::FSM_QuadrupedAnimalReaction_C_TryFleeForReachMaxAlertDuration_OnTurnFinish Parms{};

	Parms.bTurnByCurve = bTurnByCurve;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.TryFleeForReachMaxAlertDuration_OnAnimTransitionEnd
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              StanceTag                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::TryFleeForReachMaxAlertDuration_OnAnimTransitionEnd(const struct FGameplayTag& StanceTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "TryFleeForReachMaxAlertDuration_OnAnimTransitionEnd");

	Params::FSM_QuadrupedAnimalReaction_C_TryFleeForReachMaxAlertDuration_OnAnimTransitionEnd Parms{};

	Parms.StanceTag = std::move(StanceTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.TryEnterState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EQuadrupedAnimalReactionState           NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::TryEnterState(EQuadrupedAnimalReactionState NewState, bool* bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "TryEnterState");

	Params::FSM_QuadrupedAnimalReaction_C_TryEnterState Parms{};

	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.TaskFail_B2F1FD674D016BAA6C715DA17E929405
// (BlueprintCallable, BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::TaskFail_B2F1FD674D016BAA6C715DA17E929405()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "TaskFail_B2F1FD674D016BAA6C715DA17E929405");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.TaskFail_51B4524846EAD7E8757D4D8F3326AF1B
// (BlueprintCallable, BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::TaskFail_51B4524846EAD7E8757D4D8F3326AF1B()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "TaskFail_51B4524846EAD7E8757D4D8F3326AF1B");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.TaskBegin_B2F1FD674D016BAA6C715DA17E929405
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UX6TaskAsyncBase*                 Task                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::TaskBegin_B2F1FD674D016BAA6C715DA17E929405(class UX6TaskAsyncBase* Task)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "TaskBegin_B2F1FD674D016BAA6C715DA17E929405");

	Params::FSM_QuadrupedAnimalReaction_C_TaskBegin_B2F1FD674D016BAA6C715DA17E929405 Parms{};

	Parms.Task = Task;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.TaskBegin_51B4524846EAD7E8757D4D8F3326AF1B
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UX6TaskAsyncBase*                 Task                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::TaskBegin_51B4524846EAD7E8757D4D8F3326AF1B(class UX6TaskAsyncBase* Task)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "TaskBegin_51B4524846EAD7E8757D4D8F3326AF1B");

	Params::FSM_QuadrupedAnimalReaction_C_TaskBegin_51B4524846EAD7E8757D4D8F3326AF1B Parms{};

	Parms.Task = Task;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.StartTurnCoolDown
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  CoolDown                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::StartTurnCoolDown(double CoolDown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "StartTurnCoolDown");

	Params::FSM_QuadrupedAnimalReaction_C_StartTurnCoolDown Parms{};

	Parms.CoolDown = CoolDown;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.StartFleeTask
// (Public, BlueprintCallable, BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::StartFleeTask()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "StartFleeTask");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.StartCuriousStance
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bFastTransition                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::StartCuriousStance(bool bFastTransition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "StartCuriousStance");

	Params::FSM_QuadrupedAnimalReaction_C_StartCuriousStance Parms{};

	Parms.bFastTransition = bFastTransition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.StartAlertStance
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bFastTransition                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::StartAlertStance(bool bFastTransition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "StartAlertStance");

	Params::FSM_QuadrupedAnimalReaction_C_StartAlertStance Parms{};

	Parms.bFastTransition = bFastTransition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.SMGraphK2Node_TransitionResultNode_DBF695D848A31221905EBE8EEA8A25FB_ReturningNormal_to_Normal_2333D4CF416FFA32CA55A09AA36F63CE
// (BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::SMGraphK2Node_TransitionResultNode_DBF695D848A31221905EBE8EEA8A25FB_ReturningNormal_to_Normal_2333D4CF416FFA32CA55A09AA36F63CE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "SMGraphK2Node_TransitionResultNode_DBF695D848A31221905EBE8EEA8A25FB_ReturningNormal_to_Normal_2333D4CF416FFA32CA55A09AA36F63CE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.SMGraphK2Node_TransitionResultNode_DBF695D848A31221905EBE8EEA8A25FB_Normal_to_Curious_8AD203EB4DA13BC9F633BF99578E4391
// (BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::SMGraphK2Node_TransitionResultNode_DBF695D848A31221905EBE8EEA8A25FB_Normal_to_Curious_8AD203EB4DA13BC9F633BF99578E4391()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "SMGraphK2Node_TransitionResultNode_DBF695D848A31221905EBE8EEA8A25FB_Normal_to_Curious_8AD203EB4DA13BC9F633BF99578E4391");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.SMGraphK2Node_TransitionResultNode_DBF695D848A31221905EBE8EEA8A25FB_Normal_to_Alert_0D3380DE45930652F23E9D8176135DAE
// (BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::SMGraphK2Node_TransitionResultNode_DBF695D848A31221905EBE8EEA8A25FB_Normal_to_Alert_0D3380DE45930652F23E9D8176135DAE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "SMGraphK2Node_TransitionResultNode_DBF695D848A31221905EBE8EEA8A25FB_Normal_to_Alert_0D3380DE45930652F23E9D8176135DAE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.SMGraphK2Node_TransitionResultNode_DBF695D848A31221905EBE8EEA8A25FB_Flee_to_AfterFlee_032A05F646E8A1F5B9A86FB959F0B949
// (BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::SMGraphK2Node_TransitionResultNode_DBF695D848A31221905EBE8EEA8A25FB_Flee_to_AfterFlee_032A05F646E8A1F5B9A86FB959F0B949()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "SMGraphK2Node_TransitionResultNode_DBF695D848A31221905EBE8EEA8A25FB_Flee_to_AfterFlee_032A05F646E8A1F5B9A86FB959F0B949");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.SMGraphK2Node_TransitionResultNode_DBF695D848A31221905EBE8EEA8A25FB_Curious_to_ReturningNormal_34D3F87C40BA38B3A8C37E92FB51EED9
// (BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::SMGraphK2Node_TransitionResultNode_DBF695D848A31221905EBE8EEA8A25FB_Curious_to_ReturningNormal_34D3F87C40BA38B3A8C37E92FB51EED9()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "SMGraphK2Node_TransitionResultNode_DBF695D848A31221905EBE8EEA8A25FB_Curious_to_ReturningNormal_34D3F87C40BA38B3A8C37E92FB51EED9");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.SMGraphK2Node_TransitionResultNode_DBF695D848A31221905EBE8EEA8A25FB_Curious_to_Alert_6CE0A53C470998626B9F9A8709C6E53E
// (BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::SMGraphK2Node_TransitionResultNode_DBF695D848A31221905EBE8EEA8A25FB_Curious_to_Alert_6CE0A53C470998626B9F9A8709C6E53E()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "SMGraphK2Node_TransitionResultNode_DBF695D848A31221905EBE8EEA8A25FB_Curious_to_Alert_6CE0A53C470998626B9F9A8709C6E53E");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.SMGraphK2Node_TransitionResultNode_DBF695D848A31221905EBE8EEA8A25FB_AnyState_DBF695D848A31221905EBE8EEA8A25FB_Normal_to_Flee_0CE9B474482F64AC27C471A5B83E06B9
// (BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::SMGraphK2Node_TransitionResultNode_DBF695D848A31221905EBE8EEA8A25FB_AnyState_DBF695D848A31221905EBE8EEA8A25FB_Normal_to_Flee_0CE9B474482F64AC27C471A5B83E06B9()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "SMGraphK2Node_TransitionResultNode_DBF695D848A31221905EBE8EEA8A25FB_AnyState_DBF695D848A31221905EBE8EEA8A25FB_Normal_to_Flee_0CE9B474482F64AC27C471A5B83E06B9");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.SMGraphK2Node_TransitionResultNode_DBF695D848A31221905EBE8EEA8A25FB_AnyState_DBF695D848A31221905EBE8EEA8A25FB_Curious_to_Flee_56248172D8C6F264BC49C29FA24E0FBB
// (BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::SMGraphK2Node_TransitionResultNode_DBF695D848A31221905EBE8EEA8A25FB_AnyState_DBF695D848A31221905EBE8EEA8A25FB_Curious_to_Flee_56248172D8C6F264BC49C29FA24E0FBB()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "SMGraphK2Node_TransitionResultNode_DBF695D848A31221905EBE8EEA8A25FB_AnyState_DBF695D848A31221905EBE8EEA8A25FB_Curious_to_Flee_56248172D8C6F264BC49C29FA24E0FBB");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.SMGraphK2Node_TransitionResultNode_DBF695D848A31221905EBE8EEA8A25FB_AnyState_DBF695D848A31221905EBE8EEA8A25FB_Alert_to_Flee_3D1AA4AD9523C1D4D2BF5CE8B6ACE754
// (BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::SMGraphK2Node_TransitionResultNode_DBF695D848A31221905EBE8EEA8A25FB_AnyState_DBF695D848A31221905EBE8EEA8A25FB_Alert_to_Flee_3D1AA4AD9523C1D4D2BF5CE8B6ACE754()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "SMGraphK2Node_TransitionResultNode_DBF695D848A31221905EBE8EEA8A25FB_AnyState_DBF695D848A31221905EBE8EEA8A25FB_Alert_to_Flee_3D1AA4AD9523C1D4D2BF5CE8B6ACE754");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.SMGraphK2Node_TransitionResultNode_DBF695D848A31221905EBE8EEA8A25FB_AnyState_DBF695D848A31221905EBE8EEA8A25FB_AfterFlee_to_Flee_77566BBF3FAFBFD0936A68F9DE3DB5CF
// (BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::SMGraphK2Node_TransitionResultNode_DBF695D848A31221905EBE8EEA8A25FB_AnyState_DBF695D848A31221905EBE8EEA8A25FB_AfterFlee_to_Flee_77566BBF3FAFBFD0936A68F9DE3DB5CF()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "SMGraphK2Node_TransitionResultNode_DBF695D848A31221905EBE8EEA8A25FB_AnyState_DBF695D848A31221905EBE8EEA8A25FB_AfterFlee_to_Flee_77566BBF3FAFBFD0936A68F9DE3DB5CF");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.SMGraphK2Node_TransitionResultNode_DBF695D848A31221905EBE8EEA8A25FB_Alert_to_ReturningNormal_052BAE594ED796D86373A7ADD4B7B034
// (BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::SMGraphK2Node_TransitionResultNode_DBF695D848A31221905EBE8EEA8A25FB_Alert_to_ReturningNormal_052BAE594ED796D86373A7ADD4B7B034()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "SMGraphK2Node_TransitionResultNode_DBF695D848A31221905EBE8EEA8A25FB_Alert_to_ReturningNormal_052BAE594ED796D86373A7ADD4B7B034");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.SMGraphK2Node_TransitionResultNode_DBF695D848A31221905EBE8EEA8A25FB_Alert_to_Curious_666C5E2C4875220B448A139C63DE43A1
// (BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::SMGraphK2Node_TransitionResultNode_DBF695D848A31221905EBE8EEA8A25FB_Alert_to_Curious_666C5E2C4875220B448A139C63DE43A1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "SMGraphK2Node_TransitionResultNode_DBF695D848A31221905EBE8EEA8A25FB_Alert_to_Curious_666C5E2C4875220B448A139C63DE43A1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.SMGraphK2Node_TransitionResultNode_DBF695D848A31221905EBE8EEA8A25FB_AfterFlee_to_Normal_EE22567A40B0FDF01DA12894CBBD7ED7
// (BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::SMGraphK2Node_TransitionResultNode_DBF695D848A31221905EBE8EEA8A25FB_AfterFlee_to_Normal_EE22567A40B0FDF01DA12894CBBD7ED7()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "SMGraphK2Node_TransitionResultNode_DBF695D848A31221905EBE8EEA8A25FB_AfterFlee_to_Normal_EE22567A40B0FDF01DA12894CBBD7ED7");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.SMGraphK2Node_TransitionResultNode_DBF695D848A31221905EBE8EEA8A25FB_AfterFlee_to_Curious_C2DB55C64C132EE3BB6E8EA37101F00A
// (BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::SMGraphK2Node_TransitionResultNode_DBF695D848A31221905EBE8EEA8A25FB_AfterFlee_to_Curious_C2DB55C64C132EE3BB6E8EA37101F00A()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "SMGraphK2Node_TransitionResultNode_DBF695D848A31221905EBE8EEA8A25FB_AfterFlee_to_Curious_C2DB55C64C132EE3BB6E8EA37101F00A");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.SMGraphK2Node_TransitionResultNode_DBF695D848A31221905EBE8EEA8A25FB_AfterFlee_to_Alert_6D888D8D49B627AA1117F98C0476B0ED
// (BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::SMGraphK2Node_TransitionResultNode_DBF695D848A31221905EBE8EEA8A25FB_AfterFlee_to_Alert_6D888D8D49B627AA1117F98C0476B0ED()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "SMGraphK2Node_TransitionResultNode_DBF695D848A31221905EBE8EEA8A25FB_AfterFlee_to_Alert_6D888D8D49B627AA1117F98C0476B0ED");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.SMGraphK2Node_StateUpdateNode_DBF695D848A31221905EBE8EEA8A25FB_Curious_EA5D754F46FCB72AEA1264B0593EA4EF
// (BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::SMGraphK2Node_StateUpdateNode_DBF695D848A31221905EBE8EEA8A25FB_Curious_EA5D754F46FCB72AEA1264B0593EA4EF(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "SMGraphK2Node_StateUpdateNode_DBF695D848A31221905EBE8EEA8A25FB_Curious_EA5D754F46FCB72AEA1264B0593EA4EF");

	Params::FSM_QuadrupedAnimalReaction_C_SMGraphK2Node_StateUpdateNode_DBF695D848A31221905EBE8EEA8A25FB_Curious_EA5D754F46FCB72AEA1264B0593EA4EF Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.SMGraphK2Node_StateUpdateNode_DBF695D848A31221905EBE8EEA8A25FB_Alert_B03E0BFC4F2299D81B147ABF5ED89194
// (BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::SMGraphK2Node_StateUpdateNode_DBF695D848A31221905EBE8EEA8A25FB_Alert_B03E0BFC4F2299D81B147ABF5ED89194(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "SMGraphK2Node_StateUpdateNode_DBF695D848A31221905EBE8EEA8A25FB_Alert_B03E0BFC4F2299D81B147ABF5ED89194");

	Params::FSM_QuadrupedAnimalReaction_C_SMGraphK2Node_StateUpdateNode_DBF695D848A31221905EBE8EEA8A25FB_Alert_B03E0BFC4F2299D81B147ABF5ED89194 Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.SMGraphK2Node_StateEntryNode_DBF695D848A31221905EBE8EEA8A25FB_ReturningNormal_F10DAF664E9529EC9214C8A811F3AE3A
// (BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::SMGraphK2Node_StateEntryNode_DBF695D848A31221905EBE8EEA8A25FB_ReturningNormal_F10DAF664E9529EC9214C8A811F3AE3A()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "SMGraphK2Node_StateEntryNode_DBF695D848A31221905EBE8EEA8A25FB_ReturningNormal_F10DAF664E9529EC9214C8A811F3AE3A");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.SMGraphK2Node_StateEntryNode_DBF695D848A31221905EBE8EEA8A25FB_Normal_512F351543C5CD9D2C35FAB99C406FF7
// (BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::SMGraphK2Node_StateEntryNode_DBF695D848A31221905EBE8EEA8A25FB_Normal_512F351543C5CD9D2C35FAB99C406FF7()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "SMGraphK2Node_StateEntryNode_DBF695D848A31221905EBE8EEA8A25FB_Normal_512F351543C5CD9D2C35FAB99C406FF7");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.SMGraphK2Node_StateEntryNode_DBF695D848A31221905EBE8EEA8A25FB_Flee_8822E59F42464D6E89CE1AB018B93817
// (BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::SMGraphK2Node_StateEntryNode_DBF695D848A31221905EBE8EEA8A25FB_Flee_8822E59F42464D6E89CE1AB018B93817()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "SMGraphK2Node_StateEntryNode_DBF695D848A31221905EBE8EEA8A25FB_Flee_8822E59F42464D6E89CE1AB018B93817");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.SMGraphK2Node_StateEntryNode_DBF695D848A31221905EBE8EEA8A25FB_Curious_EA5D754F46FCB72AEA1264B0593EA4EF
// (BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::SMGraphK2Node_StateEntryNode_DBF695D848A31221905EBE8EEA8A25FB_Curious_EA5D754F46FCB72AEA1264B0593EA4EF()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "SMGraphK2Node_StateEntryNode_DBF695D848A31221905EBE8EEA8A25FB_Curious_EA5D754F46FCB72AEA1264B0593EA4EF");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.SMGraphK2Node_StateEntryNode_DBF695D848A31221905EBE8EEA8A25FB_Alert_B03E0BFC4F2299D81B147ABF5ED89194
// (BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::SMGraphK2Node_StateEntryNode_DBF695D848A31221905EBE8EEA8A25FB_Alert_B03E0BFC4F2299D81B147ABF5ED89194()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "SMGraphK2Node_StateEntryNode_DBF695D848A31221905EBE8EEA8A25FB_Alert_B03E0BFC4F2299D81B147ABF5ED89194");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.SMGraphK2Node_StateEntryNode_DBF695D848A31221905EBE8EEA8A25FB_AfterFlee_42D3822F4E6D19707C73B391A5AFDBF5
// (BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::SMGraphK2Node_StateEntryNode_DBF695D848A31221905EBE8EEA8A25FB_AfterFlee_42D3822F4E6D19707C73B391A5AFDBF5()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "SMGraphK2Node_StateEntryNode_DBF695D848A31221905EBE8EEA8A25FB_AfterFlee_42D3822F4E6D19707C73B391A5AFDBF5");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.SMGraphK2Node_StateEndNode_DBF695D848A31221905EBE8EEA8A25FB_ReturningNormal_F10DAF664E9529EC9214C8A811F3AE3A
// (BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::SMGraphK2Node_StateEndNode_DBF695D848A31221905EBE8EEA8A25FB_ReturningNormal_F10DAF664E9529EC9214C8A811F3AE3A()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "SMGraphK2Node_StateEndNode_DBF695D848A31221905EBE8EEA8A25FB_ReturningNormal_F10DAF664E9529EC9214C8A811F3AE3A");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.SMGraphK2Node_StateEndNode_DBF695D848A31221905EBE8EEA8A25FB_Normal_512F351543C5CD9D2C35FAB99C406FF7
// (BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::SMGraphK2Node_StateEndNode_DBF695D848A31221905EBE8EEA8A25FB_Normal_512F351543C5CD9D2C35FAB99C406FF7()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "SMGraphK2Node_StateEndNode_DBF695D848A31221905EBE8EEA8A25FB_Normal_512F351543C5CD9D2C35FAB99C406FF7");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.SMGraphK2Node_StateEndNode_DBF695D848A31221905EBE8EEA8A25FB_Flee_8822E59F42464D6E89CE1AB018B93817
// (BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::SMGraphK2Node_StateEndNode_DBF695D848A31221905EBE8EEA8A25FB_Flee_8822E59F42464D6E89CE1AB018B93817()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "SMGraphK2Node_StateEndNode_DBF695D848A31221905EBE8EEA8A25FB_Flee_8822E59F42464D6E89CE1AB018B93817");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.SMGraphK2Node_StateEndNode_DBF695D848A31221905EBE8EEA8A25FB_Curious_EA5D754F46FCB72AEA1264B0593EA4EF
// (BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::SMGraphK2Node_StateEndNode_DBF695D848A31221905EBE8EEA8A25FB_Curious_EA5D754F46FCB72AEA1264B0593EA4EF()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "SMGraphK2Node_StateEndNode_DBF695D848A31221905EBE8EEA8A25FB_Curious_EA5D754F46FCB72AEA1264B0593EA4EF");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.SMGraphK2Node_StateEndNode_DBF695D848A31221905EBE8EEA8A25FB_Alert_B03E0BFC4F2299D81B147ABF5ED89194
// (BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::SMGraphK2Node_StateEndNode_DBF695D848A31221905EBE8EEA8A25FB_Alert_B03E0BFC4F2299D81B147ABF5ED89194()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "SMGraphK2Node_StateEndNode_DBF695D848A31221905EBE8EEA8A25FB_Alert_B03E0BFC4F2299D81B147ABF5ED89194");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.SMGraphK2Node_StateEndNode_DBF695D848A31221905EBE8EEA8A25FB_AfterFlee_42D3822F4E6D19707C73B391A5AFDBF5
// (BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::SMGraphK2Node_StateEndNode_DBF695D848A31221905EBE8EEA8A25FB_AfterFlee_42D3822F4E6D19707C73B391A5AFDBF5()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "SMGraphK2Node_StateEndNode_DBF695D848A31221905EBE8EEA8A25FB_AfterFlee_42D3822F4E6D19707C73B391A5AFDBF5");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.SetDataAsset
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_QuadrupedAnimalReactionDefinition_C*DataAsset_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::SetDataAsset(class UBP_QuadrupedAnimalReactionDefinition_C* DataAsset_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "SetDataAsset");

	Params::FSM_QuadrupedAnimalReaction_C_SetDataAsset Parms{};

	Parms.DataAsset_0 = DataAsset_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.PreloadAnimations
// (BlueprintCallable, BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::PreloadAnimations()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "PreloadAnimations");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.PostAIObjectInit_Flee
// (BlueprintCallable, BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::PostAIObjectInit_Flee()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "PostAIObjectInit_Flee");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.PostAIObjectInit
// (Public, BlueprintCallable, BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::PostAIObjectInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "PostAIObjectInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OtherTransitionEnd_B2F1FD674D016BAA6C715DA17E929405
// (BlueprintCallable, BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::OtherTransitionEnd_B2F1FD674D016BAA6C715DA17E929405()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "OtherTransitionEnd_B2F1FD674D016BAA6C715DA17E929405");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OtherTransitionEnd_51B4524846EAD7E8757D4D8F3326AF1B
// (BlueprintCallable, BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::OtherTransitionEnd_51B4524846EAD7E8757D4D8F3326AF1B()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "OtherTransitionEnd_51B4524846EAD7E8757D4D8F3326AF1B");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OnTurnNearlyFinish_Curious
// (BlueprintCallable, BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::OnTurnNearlyFinish_Curious()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "OnTurnNearlyFinish_Curious");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OnTurnNearlyFinish_Alert
// (BlueprintCallable, BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::OnTurnNearlyFinish_Alert()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "OnTurnNearlyFinish_Alert");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OnTurnCoolDownFinished
// (Public, BlueprintCallable, BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::OnTurnCoolDownFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "OnTurnCoolDownFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OnStateMachineStop
// (Event, Public, BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::OnStateMachineStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "OnStateMachineStop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OnStateMachineStateChanged
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FSMStateInfo&              ToState                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FSMStateInfo&              FromState                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UFSM_QuadrupedAnimalReaction_C::OnStateMachineStateChanged(const struct FSMStateInfo& ToState, const struct FSMStateInfo& FromState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "OnStateMachineStateChanged");

	Params::FSM_QuadrupedAnimalReaction_C_OnStateMachineStateChanged Parms{};

	Parms.ToState = std::move(ToState);
	Parms.FromState = std::move(FromState);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OnStateMachineShutdown
// (Event, Public, BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::OnStateMachineShutdown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "OnStateMachineShutdown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OnStanceStop_Curious
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              StanceTag                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::OnStanceStop_Curious(const struct FGameplayTag& StanceTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "OnStanceStop_Curious");

	Params::FSM_QuadrupedAnimalReaction_C_OnStanceStop_Curious Parms{};

	Parms.StanceTag = std::move(StanceTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OnStanceStop_Alert
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              StanceTag                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::OnStanceStop_Alert(const struct FGameplayTag& StanceTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "OnStanceStop_Alert");

	Params::FSM_QuadrupedAnimalReaction_C_OnStanceStop_Alert Parms{};

	Parms.StanceTag = std::move(StanceTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OnReachAlertMaxDuration
// (BlueprintCallable, BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::OnReachAlertMaxDuration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "OnReachAlertMaxDuration");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OnLoaded_FEB03CB44437EDB029A7E590C7692481
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::OnLoaded_FEB03CB44437EDB029A7E590C7692481(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "OnLoaded_FEB03CB44437EDB029A7E590C7692481");

	Params::FSM_QuadrupedAnimalReaction_C_OnLoaded_FEB03CB44437EDB029A7E590C7692481 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OnLoaded_A0C6596B46C0C8B8859ACEBEC7094AB5
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::OnLoaded_A0C6596B46C0C8B8859ACEBEC7094AB5(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "OnLoaded_A0C6596B46C0C8B8859ACEBEC7094AB5");

	Params::FSM_QuadrupedAnimalReaction_C_OnLoaded_A0C6596B46C0C8B8859ACEBEC7094AB5 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OnLeaveAlertRangeEndOverlap
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::OnLeaveAlertRangeEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "OnLeaveAlertRangeEndOverlap");

	Params::FSM_QuadrupedAnimalReaction_C_OnLeaveAlertRangeEndOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OnLeaveAlertRangeBeginOverlap
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UFSM_QuadrupedAnimalReaction_C::OnLeaveAlertRangeBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "OnLeaveAlertRangeBeginOverlap");

	Params::FSM_QuadrupedAnimalReaction_C_OnLeaveAlertRangeBeginOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OnInRangeActorStopHoldingBrush
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::OnInRangeActorStopHoldingBrush(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "OnInRangeActorStopHoldingBrush");

	Params::FSM_QuadrupedAnimalReaction_C_OnInRangeActorStopHoldingBrush Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OnInRangeActorStartHoldingBrush
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::OnInRangeActorStartHoldingBrush(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "OnInRangeActorStartHoldingBrush");

	Params::FSM_QuadrupedAnimalReaction_C_OnInRangeActorStartHoldingBrush Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OnGestureEnd_HandleTurn
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bInterrupt                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::OnGestureEnd_HandleTurn(bool bInterrupt, const struct FGameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "OnGestureEnd_HandleTurn");

	Params::FSM_QuadrupedAnimalReaction_C_OnGestureEnd_HandleTurn Parms{};

	Parms.bInterrupt = bInterrupt;
	Parms.Tag = std::move(Tag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OnFleeCollisionEndOverlap
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::OnFleeCollisionEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "OnFleeCollisionEndOverlap");

	Params::FSM_QuadrupedAnimalReaction_C_OnFleeCollisionEndOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OnFleeCollisionBeginOverlap
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UFSM_QuadrupedAnimalReaction_C::OnFleeCollisionBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "OnFleeCollisionBeginOverlap");

	Params::FSM_QuadrupedAnimalReaction_C_OnFleeCollisionBeginOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OnEnterAlertRangeEndOverlap
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::OnEnterAlertRangeEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "OnEnterAlertRangeEndOverlap");

	Params::FSM_QuadrupedAnimalReaction_C_OnEnterAlertRangeEndOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OnEnterAlertRangeBeginOverlap
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UFSM_QuadrupedAnimalReaction_C::OnEnterAlertRangeBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "OnEnterAlertRangeBeginOverlap");

	Params::FSM_QuadrupedAnimalReaction_C_OnEnterAlertRangeBeginOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OnCuriousCollisionEndOverlap
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::OnCuriousCollisionEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "OnCuriousCollisionEndOverlap");

	Params::FSM_QuadrupedAnimalReaction_C_OnCuriousCollisionEndOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OnCuriousCollisionBeginOverlap
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UFSM_QuadrupedAnimalReaction_C::OnCuriousCollisionBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "OnCuriousCollisionBeginOverlap");

	Params::FSM_QuadrupedAnimalReaction_C_OnCuriousCollisionBeginOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OnAnimTransitionEnd_ReturningNormal
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              StanceTag                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::OnAnimTransitionEnd_ReturningNormal(const struct FGameplayTag& StanceTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "OnAnimTransitionEnd_ReturningNormal");

	Params::FSM_QuadrupedAnimalReaction_C_OnAnimTransitionEnd_ReturningNormal Parms{};

	Parms.StanceTag = std::move(StanceTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OnAnimTransitionEnd_Normal
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              StanceTag                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::OnAnimTransitionEnd_Normal(const struct FGameplayTag& StanceTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "OnAnimTransitionEnd_Normal");

	Params::FSM_QuadrupedAnimalReaction_C_OnAnimTransitionEnd_Normal Parms{};

	Parms.StanceTag = std::move(StanceTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OnAnimTransitionEnd_HandleStopStance
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              StanceTag                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::OnAnimTransitionEnd_HandleStopStance(const struct FGameplayTag& StanceTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "OnAnimTransitionEnd_HandleStopStance");

	Params::FSM_QuadrupedAnimalReaction_C_OnAnimTransitionEnd_HandleStopStance Parms{};

	Parms.StanceTag = std::move(StanceTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.MarkTransitionStateDirty
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::MarkTransitionStateDirty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "MarkTransitionStateDirty");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.IsTurning
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   bIsTurning                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::IsTurning(bool* bIsTurning)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "IsTurning");

	Params::FSM_QuadrupedAnimalReaction_C_IsTurning Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bIsTurning != nullptr)
		*bIsTurning = Parms.bIsTurning;
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.IsCanTrigger
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UActorComponent*                  Comp                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsCanTrigger_0                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::IsCanTrigger(class AActor* Actor, class UActorComponent* Comp, bool* IsCanTrigger_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "IsCanTrigger");

	Params::FSM_QuadrupedAnimalReaction_C_IsCanTrigger Parms{};

	Parms.Actor = Actor;
	Parms.Comp = Comp;

	UObject::ProcessEvent(Func, &Parms);

	if (IsCanTrigger_0 != nullptr)
		*IsCanTrigger_0 = Parms.IsCanTrigger_0;
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.InternalStartTurnByCurve
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  TurnAngle_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCurveFloat*                      TurnCurve                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::InternalStartTurnByCurve(double TurnAngle_0, class UCurveFloat* TurnCurve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "InternalStartTurnByCurve");

	Params::FSM_QuadrupedAnimalReaction_C_InternalStartTurnByCurve Parms{};

	Parms.TurnAngle_0 = TurnAngle_0;
	Parms.TurnCurve = TurnCurve;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.InternalStartTurnByAnim
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              GestureTag                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// double                                  TurnScale                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::InternalStartTurnByAnim(const struct FGameplayTag& GestureTag, double TurnScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "InternalStartTurnByAnim");

	Params::FSM_QuadrupedAnimalReaction_C_InternalStartTurnByAnim Parms{};

	Parms.GestureTag = std::move(GestureTag);
	Parms.TurnScale = TurnScale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.InitCollisions
// (BlueprintCallable, BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::InitCollisions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "InitCollisions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.Init
// (BlueprintCallable, BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.GetTurnTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double*                                 TurnTime                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::GetTurnTime(double* TurnTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "GetTurnTime");

	Params::FSM_QuadrupedAnimalReaction_C_GetTurnTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TurnTime != nullptr)
		*TurnTime = Parms.TurnTime;
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.GetStimuliSourceActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor**                          StimuliSourceActor_0                                   (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::GetStimuliSourceActor(class AActor** StimuliSourceActor_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "GetStimuliSourceActor");

	Params::FSM_QuadrupedAnimalReaction_C_GetStimuliSourceActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (StimuliSourceActor_0 != nullptr)
		*StimuliSourceActor_0 = Parms.StimuliSourceActor_0;
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.GetLookAtTargetTurnAngle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double*                                 TurnAngle_0                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::GetLookAtTargetTurnAngle(double* TurnAngle_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "GetLookAtTargetTurnAngle");

	Params::FSM_QuadrupedAnimalReaction_C_GetLookAtTargetTurnAngle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TurnAngle_0 != nullptr)
		*TurnAngle_0 = Parms.TurnAngle_0;
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.GetHorizontalRotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FRotator&                  Rotator                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator*                        AdjustedRotator                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UFSM_QuadrupedAnimalReaction_C::GetHorizontalRotation(const struct FRotator& Rotator, struct FRotator* AdjustedRotator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "GetHorizontalRotation");

	Params::FSM_QuadrupedAnimalReaction_C_GetHorizontalRotation Parms{};

	Parms.Rotator = std::move(Rotator);

	UObject::ProcessEvent(Func, &Parms);

	if (AdjustedRotator != nullptr)
		*AdjustedRotator = std::move(Parms.AdjustedRotator);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.GetFleeSucceedDistance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double*                                 FleeSucceedDistance                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::GetFleeSucceedDistance(double* FleeSucceedDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "GetFleeSucceedDistance");

	Params::FSM_QuadrupedAnimalReaction_C_GetFleeSucceedDistance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (FleeSucceedDistance != nullptr)
		*FleeSucceedDistance = Parms.FleeSucceedDistance;
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.GetFleeQueryParams
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector*                         Center                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 FleeRadius                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 FleeStepDistMin                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 FleeStepDistMax                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::GetFleeQueryParams(struct FVector* Center, double* FleeRadius, double* FleeStepDistMin, double* FleeStepDistMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "GetFleeQueryParams");

	Params::FSM_QuadrupedAnimalReaction_C_GetFleeQueryParams Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Center != nullptr)
		*Center = std::move(Parms.Center);

	if (FleeRadius != nullptr)
		*FleeRadius = Parms.FleeRadius;

	if (FleeStepDistMin != nullptr)
		*FleeStepDistMin = Parms.FleeStepDistMin;

	if (FleeStepDistMax != nullptr)
		*FleeStepDistMax = Parms.FleeStepDistMax;
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.GetCurrentState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EQuadrupedAnimalReactionState*          State                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::GetCurrentState(EQuadrupedAnimalReactionState* State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "GetCurrentState");

	Params::FSM_QuadrupedAnimalReaction_C_GetCurrentState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (State != nullptr)
		*State = Parms.State;
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.ExecuteUbergraph_FSM_QuadrupedAnimalReaction
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::ExecuteUbergraph_FSM_QuadrupedAnimalReaction(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "ExecuteUbergraph_FSM_QuadrupedAnimalReaction");

	Params::FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.EvalTransitionsWithResult
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bStateChanged                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::EvalTransitionsWithResult(bool* bStateChanged)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "EvalTransitionsWithResult");

	Params::FSM_QuadrupedAnimalReaction_C_EvalTransitionsWithResult Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bStateChanged != nullptr)
		*bStateChanged = Parms.bStateChanged;
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.ClearAllTimers
// (Public, BlueprintCallable, BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::ClearAllTimers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "ClearAllTimers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.BP_RequestStopStance
// (Public, BlueprintCallable, BlueprintEvent)

void UFSM_QuadrupedAnimalReaction_C::BP_RequestStopStance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "BP_RequestStopStance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.BP_RequestStartStance
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              StanceTag                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::BP_RequestStartStance(const struct FGameplayTag& StanceTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "BP_RequestStartStance");

	Params::FSM_QuadrupedAnimalReaction_C_BP_RequestStartStance Parms{};

	Parms.StanceTag = std::move(StanceTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.BP_RequestStartGesture
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              GestureTag                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::BP_RequestStartGesture(const struct FGameplayTag& GestureTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "BP_RequestStartGesture");

	Params::FSM_QuadrupedAnimalReaction_C_BP_RequestStartGesture Parms{};

	Parms.GestureTag = std::move(GestureTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.BP_IsPlayingStance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   bIsPlayingStance                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::BP_IsPlayingStance(bool* bIsPlayingStance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "BP_IsPlayingStance");

	Params::FSM_QuadrupedAnimalReaction_C_BP_IsPlayingStance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bIsPlayingStance != nullptr)
		*bIsPlayingStance = Parms.bIsPlayingStance;
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.BP_IsInTransition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   bInTransition                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::BP_IsInTransition(bool* bInTransition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "BP_IsInTransition");

	Params::FSM_QuadrupedAnimalReaction_C_BP_IsInTransition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bInTransition != nullptr)
		*bInTransition = Parms.bInTransition;
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.BP_GetStanceSoftRef
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FGameplayTag&              Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class UAnimSequenceBase>*StanceSoftRef                                          (Parm, OutParm, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::BP_GetStanceSoftRef(const struct FGameplayTag& Tag, TSoftObjectPtr<class UAnimSequenceBase>* StanceSoftRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "BP_GetStanceSoftRef");

	Params::FSM_QuadrupedAnimalReaction_C_BP_GetStanceSoftRef Parms{};

	Parms.Tag = std::move(Tag);

	UObject::ProcessEvent(Func, &Parms);

	if (StanceSoftRef != nullptr)
		*StanceSoftRef = Parms.StanceSoftRef;
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.BP_GetGestureSoftRef
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FGameplayTag&              Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class UAnimSequenceBase>*GestureSoftRef                                         (Parm, OutParm, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::BP_GetGestureSoftRef(const struct FGameplayTag& Tag, TSoftObjectPtr<class UAnimSequenceBase>* GestureSoftRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "BP_GetGestureSoftRef");

	Params::FSM_QuadrupedAnimalReaction_C_BP_GetGestureSoftRef Parms{};

	Parms.Tag = std::move(Tag);

	UObject::ProcessEvent(Func, &Parms);

	if (GestureSoftRef != nullptr)
		*GestureSoftRef = Parms.GestureSoftRef;
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.BP_ForceDestroyComponent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USphereComponent*                 Comp                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::BP_ForceDestroyComponent(class USphereComponent* Comp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "BP_ForceDestroyComponent");

	Params::FSM_QuadrupedAnimalReaction_C_BP_ForceDestroyComponent Parms{};

	Parms.Comp = Comp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.BP_CanCurStanceTransitionToThisStance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FGameplayTag&              StanceTag                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool*                                   bCanTransition                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::BP_CanCurStanceTransitionToThisStance(const struct FGameplayTag& StanceTag, bool* bCanTransition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "BP_CanCurStanceTransitionToThisStance");

	Params::FSM_QuadrupedAnimalReaction_C_BP_CanCurStanceTransitionToThisStance Parms{};

	Parms.StanceTag = std::move(StanceTag);

	UObject::ProcessEvent(Func, &Parms);

	if (bCanTransition != nullptr)
		*bCanTransition = Parms.bCanTransition;
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.BP_AddReactionCollision
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USphereComponent*                 Comp                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UFSM_QuadrupedAnimalReaction_C::BP_AddReactionCollision(class USphereComponent* Comp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "BP_AddReactionCollision");

	Params::FSM_QuadrupedAnimalReaction_C_BP_AddReactionCollision Parms{};

	Parms.Comp = Comp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.GetModuleName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UFSM_QuadrupedAnimalReaction_C::GetModuleName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FSM_QuadrupedAnimalReaction_C", "GetModuleName");

	Params::FSM_QuadrupedAnimalReaction_C_GetModuleName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

