#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MatchClothObject

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "Struct_ClothMatchStrsArray_structs.hpp"
#include "E_MatchClothType_structs.hpp"
#include "Struct_ClothMatchSkelMap_structs.hpp"
#include "Struct_ClothMatchSkelCompMap_structs.hpp"
#include "Struct_ClothMatchNameArray_structs.hpp"
#include "NikkiFitCloth_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass MatchClothObject.MatchClothObject_C
// 0x0398 (0x03C0 - 0x0028)
class UMatchClothObject_C final : public UObject
{
public:
	TMap<class FString, struct FStruct_ClothMatchStrsArray> ClothMatchIgnoreConfig;                  // 0x0028(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FString, class USkeletalMeshComponent*> SuitPartsMap;                                 // 0x0078(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UBP_MatchClothDataAsset_C*              MatchClothConfig;                                  // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bDebug;                                            // 0x00D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         SkelMeshCompUpdata;                                // 0x00D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMap<E_MatchClothType, struct FStruct_ClothMatchStrsArray> MatchType_CombineStrs;                // 0x00E8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FString, struct FStruct_ClothMatchSkelCompMap> CombineStr_SkelMeshComp;               // 0x0138(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UFitClothCacheAsset*                    BodyCacheAsset;                                    // 0x0188(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMap<class USkeletalMesh*, class UFitMatchSetting_C*> InputSkelMeshArray;                        // 0x0190(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMap<class FString, struct FStruct_ClothMatchSkelMap> CombineStr_SkelMesh;                       // 0x01E0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMap<class USkeletalMesh*, class USkeletalMeshComponent*> SkelMesh2CompMap;                      // 0x0230(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMap<class UAnimInstance*, struct FStruct_ClothMatchNameArray> AI_ColliderBones;                 // 0x0280(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class UAnimInstance*, struct FStruct_ClothMatchNameArray> AI_AnimBones;                     // 0x02D0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FString, bool>                     CombineStr_OverwriteMatchType;                     // 0x0320(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class USkeletalMesh*, class UFitMatchSetting_C*> SkelMesh_OverwriteMatchType;               // 0x0370(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void AllResetData(TArray<class FName>& InMatchPartStrs, E_MatchClothType InMatchType);
	void ApplyMatchDataV2();
	void ClearPairCache();
	void ComputeClothesCombineV2(TArray<class USkeletalMesh*>& InSkelMeshArray, E_MatchClothType InMatchType);
	void ComputeMatchClothesV2(E_MatchClothType InMatchType, const struct FMatchClothParameter& InMatchClothesPara, const TMap<uint8, struct FMatchClothParameter>& InSpacialTypeParam);
	void ComputeMatchCollectionV2(E_MatchClothType InMatchType, TArray<class USkeletalMesh*>* ResultSkelMeshArray);
	void DebugInfo(TArray<class FString>& InString);
	void GetAssetSetting(class USkeletalMesh* InputObject, bool* Result, class UClothsMatchSetting_C** Cloths_Match_Setting);
	void GetIgnoreMap();
	void GetMatchClothesCombine();
	bool IsIgnoreArm(class USkeletalMesh* InputObjectA, class USkeletalMesh* InputObjectB, E_MatchClothType InMatchType);
	bool isIgnoreConfig(class UObject* InnerClothObject, class UObject* OuterClothObject);
	void isIgnoreOrnamentPair(class UObject* InnerClothObject, class UObject* OuterClothObject, bool* Result);
	bool IsOverlayLongSkirt(class USkeletalMesh* InputObject, E_MatchClothType InTypeName);
	bool isSameSuit(const class USkeletalMesh* InObjectA, class USkeletalMesh* InObjectB);
	void MutiThread_ApplyMatchDataV2(const TMap<class FString, class USkeletalMeshComponent*>& InSuitMap);
	void MutiThread_ComputeMatchClothesV2();
	void ReleaseClothesCombinePairCache(const TMap<class FString, class USkeletalMeshComponent*>& SuitPartsMap_0);
	void ResetMatchClothData(class USkeletalMeshComponent* InComponent);
	void SetInputSkelMeshArray(TArray<class USkeletalMesh*>& InputSkelMeshArray_0);
	void SetSuitPartsMap(const TMap<class FString, class USkeletalMeshComponent*>& SuitPartsMap_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MatchClothObject_C">();
	}
	static class UMatchClothObject_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMatchClothObject_C>();
	}
};
static_assert(alignof(UMatchClothObject_C) == 0x000008, "Wrong alignment on UMatchClothObject_C");
static_assert(sizeof(UMatchClothObject_C) == 0x0003C0, "Wrong size on UMatchClothObject_C");
static_assert(offsetof(UMatchClothObject_C, ClothMatchIgnoreConfig) == 0x000028, "Member 'UMatchClothObject_C::ClothMatchIgnoreConfig' has a wrong offset!");
static_assert(offsetof(UMatchClothObject_C, SuitPartsMap) == 0x000078, "Member 'UMatchClothObject_C::SuitPartsMap' has a wrong offset!");
static_assert(offsetof(UMatchClothObject_C, MatchClothConfig) == 0x0000C8, "Member 'UMatchClothObject_C::MatchClothConfig' has a wrong offset!");
static_assert(offsetof(UMatchClothObject_C, bDebug) == 0x0000D0, "Member 'UMatchClothObject_C::bDebug' has a wrong offset!");
static_assert(offsetof(UMatchClothObject_C, SkelMeshCompUpdata) == 0x0000D8, "Member 'UMatchClothObject_C::SkelMeshCompUpdata' has a wrong offset!");
static_assert(offsetof(UMatchClothObject_C, MatchType_CombineStrs) == 0x0000E8, "Member 'UMatchClothObject_C::MatchType_CombineStrs' has a wrong offset!");
static_assert(offsetof(UMatchClothObject_C, CombineStr_SkelMeshComp) == 0x000138, "Member 'UMatchClothObject_C::CombineStr_SkelMeshComp' has a wrong offset!");
static_assert(offsetof(UMatchClothObject_C, BodyCacheAsset) == 0x000188, "Member 'UMatchClothObject_C::BodyCacheAsset' has a wrong offset!");
static_assert(offsetof(UMatchClothObject_C, InputSkelMeshArray) == 0x000190, "Member 'UMatchClothObject_C::InputSkelMeshArray' has a wrong offset!");
static_assert(offsetof(UMatchClothObject_C, CombineStr_SkelMesh) == 0x0001E0, "Member 'UMatchClothObject_C::CombineStr_SkelMesh' has a wrong offset!");
static_assert(offsetof(UMatchClothObject_C, SkelMesh2CompMap) == 0x000230, "Member 'UMatchClothObject_C::SkelMesh2CompMap' has a wrong offset!");
static_assert(offsetof(UMatchClothObject_C, AI_ColliderBones) == 0x000280, "Member 'UMatchClothObject_C::AI_ColliderBones' has a wrong offset!");
static_assert(offsetof(UMatchClothObject_C, AI_AnimBones) == 0x0002D0, "Member 'UMatchClothObject_C::AI_AnimBones' has a wrong offset!");
static_assert(offsetof(UMatchClothObject_C, CombineStr_OverwriteMatchType) == 0x000320, "Member 'UMatchClothObject_C::CombineStr_OverwriteMatchType' has a wrong offset!");
static_assert(offsetof(UMatchClothObject_C, SkelMesh_OverwriteMatchType) == 0x000370, "Member 'UMatchClothObject_C::SkelMesh_OverwriteMatchType' has a wrong offset!");

}

