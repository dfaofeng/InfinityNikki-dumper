#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NikkiAnim_BPNew

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "X6Game_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "F_PawnStateToOverlayData_structs.hpp"
#include "F_StylizedClothAnimRow_structs.hpp"
#include "X6Animation_structs.hpp"
#include "NikkiPhysics_structs.hpp"


namespace SDK::Params
{

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.AnimationLayer_BaseMovement
// 0x0010 (0x0010 - 0x0000)
struct NikkiAnim_BPNew_C_AnimationLayer_BaseMovement final
{
public:
	struct FPoseLink                              AnimationLayer_BaseMovement_0;                     // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(NikkiAnim_BPNew_C_AnimationLayer_BaseMovement) == 0x000008, "Wrong alignment on NikkiAnim_BPNew_C_AnimationLayer_BaseMovement");
static_assert(sizeof(NikkiAnim_BPNew_C_AnimationLayer_BaseMovement) == 0x000010, "Wrong size on NikkiAnim_BPNew_C_AnimationLayer_BaseMovement");
static_assert(offsetof(NikkiAnim_BPNew_C_AnimationLayer_BaseMovement, AnimationLayer_BaseMovement_0) == 0x000000, "Member 'NikkiAnim_BPNew_C_AnimationLayer_BaseMovement::AnimationLayer_BaseMovement_0' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct NikkiAnim_BPNew_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(NikkiAnim_BPNew_C_AnimGraph) == 0x000008, "Wrong alignment on NikkiAnim_BPNew_C_AnimGraph");
static_assert(sizeof(NikkiAnim_BPNew_C_AnimGraph) == 0x000010, "Wrong size on NikkiAnim_BPNew_C_AnimGraph");
static_assert(offsetof(NikkiAnim_BPNew_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'NikkiAnim_BPNew_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.AnimLayer_AimOffset
// 0x0020 (0x0020 - 0x0000)
struct NikkiAnim_BPNew_C_AnimLayer_AimOffset final
{
public:
	struct FPoseLink                              InPoseForAimOffset;                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              AnimLayer_AimOffset_0;                             // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(NikkiAnim_BPNew_C_AnimLayer_AimOffset) == 0x000008, "Wrong alignment on NikkiAnim_BPNew_C_AnimLayer_AimOffset");
static_assert(sizeof(NikkiAnim_BPNew_C_AnimLayer_AimOffset) == 0x000020, "Wrong size on NikkiAnim_BPNew_C_AnimLayer_AimOffset");
static_assert(offsetof(NikkiAnim_BPNew_C_AnimLayer_AimOffset, InPoseForAimOffset) == 0x000000, "Member 'NikkiAnim_BPNew_C_AnimLayer_AimOffset::InPoseForAimOffset' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_AnimLayer_AimOffset, AnimLayer_AimOffset_0) == 0x000010, "Member 'NikkiAnim_BPNew_C_AnimLayer_AimOffset::AnimLayer_AimOffset_0' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.AnimLayer_AttractorBehavior
// 0x0020 (0x0020 - 0x0000)
struct NikkiAnim_BPNew_C_AnimLayer_AttractorBehavior final
{
public:
	struct FPoseLink                              InPose_AttractorBehavior;                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              AnimLayer_AttractorBehavior_0;                     // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(NikkiAnim_BPNew_C_AnimLayer_AttractorBehavior) == 0x000008, "Wrong alignment on NikkiAnim_BPNew_C_AnimLayer_AttractorBehavior");
static_assert(sizeof(NikkiAnim_BPNew_C_AnimLayer_AttractorBehavior) == 0x000020, "Wrong size on NikkiAnim_BPNew_C_AnimLayer_AttractorBehavior");
static_assert(offsetof(NikkiAnim_BPNew_C_AnimLayer_AttractorBehavior, InPose_AttractorBehavior) == 0x000000, "Member 'NikkiAnim_BPNew_C_AnimLayer_AttractorBehavior::InPose_AttractorBehavior' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_AnimLayer_AttractorBehavior, AnimLayer_AttractorBehavior_0) == 0x000010, "Member 'NikkiAnim_BPNew_C_AnimLayer_AttractorBehavior::AnimLayer_AttractorBehavior_0' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.AnimLayer_BehaviorAdditiveMode
// 0x0020 (0x0020 - 0x0000)
struct NikkiAnim_BPNew_C_AnimLayer_BehaviorAdditiveMode final
{
public:
	struct FPoseLink                              InPoseForPlayerBehavior;                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              AnimLayer_BehaviorAdditiveMode_0;                  // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(NikkiAnim_BPNew_C_AnimLayer_BehaviorAdditiveMode) == 0x000008, "Wrong alignment on NikkiAnim_BPNew_C_AnimLayer_BehaviorAdditiveMode");
static_assert(sizeof(NikkiAnim_BPNew_C_AnimLayer_BehaviorAdditiveMode) == 0x000020, "Wrong size on NikkiAnim_BPNew_C_AnimLayer_BehaviorAdditiveMode");
static_assert(offsetof(NikkiAnim_BPNew_C_AnimLayer_BehaviorAdditiveMode, InPoseForPlayerBehavior) == 0x000000, "Member 'NikkiAnim_BPNew_C_AnimLayer_BehaviorAdditiveMode::InPoseForPlayerBehavior' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_AnimLayer_BehaviorAdditiveMode, AnimLayer_BehaviorAdditiveMode_0) == 0x000010, "Member 'NikkiAnim_BPNew_C_AnimLayer_BehaviorAdditiveMode::AnimLayer_BehaviorAdditiveMode_0' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.AnimLayer_BehaviorConnectionMode
// 0x0020 (0x0020 - 0x0000)
struct NikkiAnim_BPNew_C_AnimLayer_BehaviorConnectionMode final
{
public:
	struct FPoseLink                              InPoseToConnectionMode;                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              AnimLayer_BehaviorConnectionMode_0;                // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(NikkiAnim_BPNew_C_AnimLayer_BehaviorConnectionMode) == 0x000008, "Wrong alignment on NikkiAnim_BPNew_C_AnimLayer_BehaviorConnectionMode");
static_assert(sizeof(NikkiAnim_BPNew_C_AnimLayer_BehaviorConnectionMode) == 0x000020, "Wrong size on NikkiAnim_BPNew_C_AnimLayer_BehaviorConnectionMode");
static_assert(offsetof(NikkiAnim_BPNew_C_AnimLayer_BehaviorConnectionMode, InPoseToConnectionMode) == 0x000000, "Member 'NikkiAnim_BPNew_C_AnimLayer_BehaviorConnectionMode::InPoseToConnectionMode' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_AnimLayer_BehaviorConnectionMode, AnimLayer_BehaviorConnectionMode_0) == 0x000010, "Member 'NikkiAnim_BPNew_C_AnimLayer_BehaviorConnectionMode::AnimLayer_BehaviorConnectionMode_0' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.AnimLayer_CombatMovement
// 0x0010 (0x0010 - 0x0000)
struct NikkiAnim_BPNew_C_AnimLayer_CombatMovement final
{
public:
	struct FPoseLink                              AnimLayer_CombatMovement_0;                        // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(NikkiAnim_BPNew_C_AnimLayer_CombatMovement) == 0x000008, "Wrong alignment on NikkiAnim_BPNew_C_AnimLayer_CombatMovement");
static_assert(sizeof(NikkiAnim_BPNew_C_AnimLayer_CombatMovement) == 0x000010, "Wrong size on NikkiAnim_BPNew_C_AnimLayer_CombatMovement");
static_assert(offsetof(NikkiAnim_BPNew_C_AnimLayer_CombatMovement, AnimLayer_CombatMovement_0) == 0x000000, "Member 'NikkiAnim_BPNew_C_AnimLayer_CombatMovement::AnimLayer_CombatMovement_0' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.AnimLayer_CustomBehavior
// 0x0020 (0x0020 - 0x0000)
struct NikkiAnim_BPNew_C_AnimLayer_CustomBehavior final
{
public:
	struct FPoseLink                              InPose;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              AnimLayer_CustomBehavior_0;                        // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(NikkiAnim_BPNew_C_AnimLayer_CustomBehavior) == 0x000008, "Wrong alignment on NikkiAnim_BPNew_C_AnimLayer_CustomBehavior");
static_assert(sizeof(NikkiAnim_BPNew_C_AnimLayer_CustomBehavior) == 0x000020, "Wrong size on NikkiAnim_BPNew_C_AnimLayer_CustomBehavior");
static_assert(offsetof(NikkiAnim_BPNew_C_AnimLayer_CustomBehavior, InPose) == 0x000000, "Member 'NikkiAnim_BPNew_C_AnimLayer_CustomBehavior::InPose' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_AnimLayer_CustomBehavior, AnimLayer_CustomBehavior_0) == 0x000010, "Member 'NikkiAnim_BPNew_C_AnimLayer_CustomBehavior::AnimLayer_CustomBehavior_0' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.AnimLayer_DialogueBehavior
// 0x0020 (0x0020 - 0x0000)
struct NikkiAnim_BPNew_C_AnimLayer_DialogueBehavior final
{
public:
	struct FPoseLink                              InPose_DIalogueBehavior;                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              AnimLayer_DialogueBehavior_0;                      // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(NikkiAnim_BPNew_C_AnimLayer_DialogueBehavior) == 0x000008, "Wrong alignment on NikkiAnim_BPNew_C_AnimLayer_DialogueBehavior");
static_assert(sizeof(NikkiAnim_BPNew_C_AnimLayer_DialogueBehavior) == 0x000020, "Wrong size on NikkiAnim_BPNew_C_AnimLayer_DialogueBehavior");
static_assert(offsetof(NikkiAnim_BPNew_C_AnimLayer_DialogueBehavior, InPose_DIalogueBehavior) == 0x000000, "Member 'NikkiAnim_BPNew_C_AnimLayer_DialogueBehavior::InPose_DIalogueBehavior' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_AnimLayer_DialogueBehavior, AnimLayer_DialogueBehavior_0) == 0x000010, "Member 'NikkiAnim_BPNew_C_AnimLayer_DialogueBehavior::AnimLayer_DialogueBehavior_0' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.AnimLayer_EquipmentAdditiveMode
// 0x0020 (0x0020 - 0x0000)
struct NikkiAnim_BPNew_C_AnimLayer_EquipmentAdditiveMode final
{
public:
	struct FPoseLink                              InPoseForEquipment;                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              AnimLayer_EquipmentAdditiveMode_0;                 // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(NikkiAnim_BPNew_C_AnimLayer_EquipmentAdditiveMode) == 0x000008, "Wrong alignment on NikkiAnim_BPNew_C_AnimLayer_EquipmentAdditiveMode");
static_assert(sizeof(NikkiAnim_BPNew_C_AnimLayer_EquipmentAdditiveMode) == 0x000020, "Wrong size on NikkiAnim_BPNew_C_AnimLayer_EquipmentAdditiveMode");
static_assert(offsetof(NikkiAnim_BPNew_C_AnimLayer_EquipmentAdditiveMode, InPoseForEquipment) == 0x000000, "Member 'NikkiAnim_BPNew_C_AnimLayer_EquipmentAdditiveMode::InPoseForEquipment' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_AnimLayer_EquipmentAdditiveMode, AnimLayer_EquipmentAdditiveMode_0) == 0x000010, "Member 'NikkiAnim_BPNew_C_AnimLayer_EquipmentAdditiveMode::AnimLayer_EquipmentAdditiveMode_0' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.AnimLayer_InteractionPerformanceBehavior
// 0x0020 (0x0020 - 0x0000)
struct NikkiAnim_BPNew_C_AnimLayer_InteractionPerformanceBehavior final
{
public:
	struct FPoseLink                              InPose_InterationPerformance;                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              AnimLayer_InteractionPerformanceBehavior_0;        // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(NikkiAnim_BPNew_C_AnimLayer_InteractionPerformanceBehavior) == 0x000008, "Wrong alignment on NikkiAnim_BPNew_C_AnimLayer_InteractionPerformanceBehavior");
static_assert(sizeof(NikkiAnim_BPNew_C_AnimLayer_InteractionPerformanceBehavior) == 0x000020, "Wrong size on NikkiAnim_BPNew_C_AnimLayer_InteractionPerformanceBehavior");
static_assert(offsetof(NikkiAnim_BPNew_C_AnimLayer_InteractionPerformanceBehavior, InPose_InterationPerformance) == 0x000000, "Member 'NikkiAnim_BPNew_C_AnimLayer_InteractionPerformanceBehavior::InPose_InterationPerformance' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_AnimLayer_InteractionPerformanceBehavior, AnimLayer_InteractionPerformanceBehavior_0) == 0x000010, "Member 'NikkiAnim_BPNew_C_AnimLayer_InteractionPerformanceBehavior::AnimLayer_InteractionPerformanceBehavior_0' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.AnimLayer_Jump
// 0x0010 (0x0010 - 0x0000)
struct NikkiAnim_BPNew_C_AnimLayer_Jump final
{
public:
	struct FPoseLink                              AnimLayer_Jump_0;                                  // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(NikkiAnim_BPNew_C_AnimLayer_Jump) == 0x000008, "Wrong alignment on NikkiAnim_BPNew_C_AnimLayer_Jump");
static_assert(sizeof(NikkiAnim_BPNew_C_AnimLayer_Jump) == 0x000010, "Wrong size on NikkiAnim_BPNew_C_AnimLayer_Jump");
static_assert(offsetof(NikkiAnim_BPNew_C_AnimLayer_Jump, AnimLayer_Jump_0) == 0x000000, "Member 'NikkiAnim_BPNew_C_AnimLayer_Jump::AnimLayer_Jump_0' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.AnimLayer_Land
// 0x0010 (0x0010 - 0x0000)
struct NikkiAnim_BPNew_C_AnimLayer_Land final
{
public:
	struct FPoseLink                              AnimLayer_Land_0;                                  // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(NikkiAnim_BPNew_C_AnimLayer_Land) == 0x000008, "Wrong alignment on NikkiAnim_BPNew_C_AnimLayer_Land");
static_assert(sizeof(NikkiAnim_BPNew_C_AnimLayer_Land) == 0x000010, "Wrong size on NikkiAnim_BPNew_C_AnimLayer_Land");
static_assert(offsetof(NikkiAnim_BPNew_C_AnimLayer_Land, AnimLayer_Land_0) == 0x000000, "Member 'NikkiAnim_BPNew_C_AnimLayer_Land::AnimLayer_Land_0' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.AnimLayer_MovementDependObject
// 0x0010 (0x0010 - 0x0000)
struct NikkiAnim_BPNew_C_AnimLayer_MovementDependObject final
{
public:
	struct FPoseLink                              AnimLayer_MovementDependObject_0;                  // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(NikkiAnim_BPNew_C_AnimLayer_MovementDependObject) == 0x000008, "Wrong alignment on NikkiAnim_BPNew_C_AnimLayer_MovementDependObject");
static_assert(sizeof(NikkiAnim_BPNew_C_AnimLayer_MovementDependObject) == 0x000010, "Wrong size on NikkiAnim_BPNew_C_AnimLayer_MovementDependObject");
static_assert(offsetof(NikkiAnim_BPNew_C_AnimLayer_MovementDependObject, AnimLayer_MovementDependObject_0) == 0x000000, "Member 'NikkiAnim_BPNew_C_AnimLayer_MovementDependObject::AnimLayer_MovementDependObject_0' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.AnimLayer_NPCAdditiveBehavior
// 0x0020 (0x0020 - 0x0000)
struct NikkiAnim_BPNew_C_AnimLayer_NPCAdditiveBehavior final
{
public:
	struct FPoseLink                              InPose;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              AnimLayer_NPCAdditiveBehavior_0;                   // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(NikkiAnim_BPNew_C_AnimLayer_NPCAdditiveBehavior) == 0x000008, "Wrong alignment on NikkiAnim_BPNew_C_AnimLayer_NPCAdditiveBehavior");
static_assert(sizeof(NikkiAnim_BPNew_C_AnimLayer_NPCAdditiveBehavior) == 0x000020, "Wrong size on NikkiAnim_BPNew_C_AnimLayer_NPCAdditiveBehavior");
static_assert(offsetof(NikkiAnim_BPNew_C_AnimLayer_NPCAdditiveBehavior, InPose) == 0x000000, "Member 'NikkiAnim_BPNew_C_AnimLayer_NPCAdditiveBehavior::InPose' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_AnimLayer_NPCAdditiveBehavior, AnimLayer_NPCAdditiveBehavior_0) == 0x000010, "Member 'NikkiAnim_BPNew_C_AnimLayer_NPCAdditiveBehavior::AnimLayer_NPCAdditiveBehavior_0' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.AnimLayer_NPCBehavior
// 0x0020 (0x0020 - 0x0000)
struct NikkiAnim_BPNew_C_AnimLayer_NPCBehavior final
{
public:
	struct FPoseLink                              InPose_0;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              AnimLayer_NPCBehavior_0;                           // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(NikkiAnim_BPNew_C_AnimLayer_NPCBehavior) == 0x000008, "Wrong alignment on NikkiAnim_BPNew_C_AnimLayer_NPCBehavior");
static_assert(sizeof(NikkiAnim_BPNew_C_AnimLayer_NPCBehavior) == 0x000020, "Wrong size on NikkiAnim_BPNew_C_AnimLayer_NPCBehavior");
static_assert(offsetof(NikkiAnim_BPNew_C_AnimLayer_NPCBehavior, InPose_0) == 0x000000, "Member 'NikkiAnim_BPNew_C_AnimLayer_NPCBehavior::InPose_0' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_AnimLayer_NPCBehavior, AnimLayer_NPCBehavior_0) == 0x000010, "Member 'NikkiAnim_BPNew_C_AnimLayer_NPCBehavior::AnimLayer_NPCBehavior_0' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.AnimLayer_PlayerControllingTool
// 0x0010 (0x0010 - 0x0000)
struct NikkiAnim_BPNew_C_AnimLayer_PlayerControllingTool final
{
public:
	struct FPoseLink                              AnimLayer_PlayerControllingTool_0;                 // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(NikkiAnim_BPNew_C_AnimLayer_PlayerControllingTool) == 0x000008, "Wrong alignment on NikkiAnim_BPNew_C_AnimLayer_PlayerControllingTool");
static_assert(sizeof(NikkiAnim_BPNew_C_AnimLayer_PlayerControllingTool) == 0x000010, "Wrong size on NikkiAnim_BPNew_C_AnimLayer_PlayerControllingTool");
static_assert(offsetof(NikkiAnim_BPNew_C_AnimLayer_PlayerControllingTool, AnimLayer_PlayerControllingTool_0) == 0x000000, "Member 'NikkiAnim_BPNew_C_AnimLayer_PlayerControllingTool::AnimLayer_PlayerControllingTool_0' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.AnimLayer_PlayerRegularMovement
// 0x0010 (0x0010 - 0x0000)
struct NikkiAnim_BPNew_C_AnimLayer_PlayerRegularMovement final
{
public:
	struct FPoseLink                              AnimLayer_PlayerRegularMovement_0;                 // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(NikkiAnim_BPNew_C_AnimLayer_PlayerRegularMovement) == 0x000008, "Wrong alignment on NikkiAnim_BPNew_C_AnimLayer_PlayerRegularMovement");
static_assert(sizeof(NikkiAnim_BPNew_C_AnimLayer_PlayerRegularMovement) == 0x000010, "Wrong size on NikkiAnim_BPNew_C_AnimLayer_PlayerRegularMovement");
static_assert(offsetof(NikkiAnim_BPNew_C_AnimLayer_PlayerRegularMovement, AnimLayer_PlayerRegularMovement_0) == 0x000000, "Member 'NikkiAnim_BPNew_C_AnimLayer_PlayerRegularMovement::AnimLayer_PlayerRegularMovement_0' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.AnimLayer_SituationFeedbackBehavior
// 0x0020 (0x0020 - 0x0000)
struct NikkiAnim_BPNew_C_AnimLayer_SituationFeedbackBehavior final
{
public:
	struct FPoseLink                              InPose_SituationFeedback;                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              AnimLayer_SituationFeedbackBehavior_0;             // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(NikkiAnim_BPNew_C_AnimLayer_SituationFeedbackBehavior) == 0x000008, "Wrong alignment on NikkiAnim_BPNew_C_AnimLayer_SituationFeedbackBehavior");
static_assert(sizeof(NikkiAnim_BPNew_C_AnimLayer_SituationFeedbackBehavior) == 0x000020, "Wrong size on NikkiAnim_BPNew_C_AnimLayer_SituationFeedbackBehavior");
static_assert(offsetof(NikkiAnim_BPNew_C_AnimLayer_SituationFeedbackBehavior, InPose_SituationFeedback) == 0x000000, "Member 'NikkiAnim_BPNew_C_AnimLayer_SituationFeedbackBehavior::InPose_SituationFeedback' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_AnimLayer_SituationFeedbackBehavior, AnimLayer_SituationFeedbackBehavior_0) == 0x000010, "Member 'NikkiAnim_BPNew_C_AnimLayer_SituationFeedbackBehavior::AnimLayer_SituationFeedbackBehavior_0' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.AnimLayer_SpecialSurfaceMovement
// 0x0010 (0x0010 - 0x0000)
struct NikkiAnim_BPNew_C_AnimLayer_SpecialSurfaceMovement final
{
public:
	struct FPoseLink                              AnimLayer_SpecialSurfaceMovement_0;                // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(NikkiAnim_BPNew_C_AnimLayer_SpecialSurfaceMovement) == 0x000008, "Wrong alignment on NikkiAnim_BPNew_C_AnimLayer_SpecialSurfaceMovement");
static_assert(sizeof(NikkiAnim_BPNew_C_AnimLayer_SpecialSurfaceMovement) == 0x000010, "Wrong size on NikkiAnim_BPNew_C_AnimLayer_SpecialSurfaceMovement");
static_assert(offsetof(NikkiAnim_BPNew_C_AnimLayer_SpecialSurfaceMovement, AnimLayer_SpecialSurfaceMovement_0) == 0x000000, "Member 'NikkiAnim_BPNew_C_AnimLayer_SpecialSurfaceMovement::AnimLayer_SpecialSurfaceMovement_0' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.AnimLayer_StrafeMovement
// 0x0010 (0x0010 - 0x0000)
struct NikkiAnim_BPNew_C_AnimLayer_StrafeMovement final
{
public:
	struct FPoseLink                              AnimLayer_StrafeMovement_0;                        // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(NikkiAnim_BPNew_C_AnimLayer_StrafeMovement) == 0x000008, "Wrong alignment on NikkiAnim_BPNew_C_AnimLayer_StrafeMovement");
static_assert(sizeof(NikkiAnim_BPNew_C_AnimLayer_StrafeMovement) == 0x000010, "Wrong size on NikkiAnim_BPNew_C_AnimLayer_StrafeMovement");
static_assert(offsetof(NikkiAnim_BPNew_C_AnimLayer_StrafeMovement, AnimLayer_StrafeMovement_0) == 0x000000, "Member 'NikkiAnim_BPNew_C_AnimLayer_StrafeMovement::AnimLayer_StrafeMovement_0' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.AnimLayer_UsingCarrierMovement
// 0x0010 (0x0010 - 0x0000)
struct NikkiAnim_BPNew_C_AnimLayer_UsingCarrierMovement final
{
public:
	struct FPoseLink                              AnimLayer_UsingCarrierMovement_0;                  // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(NikkiAnim_BPNew_C_AnimLayer_UsingCarrierMovement) == 0x000008, "Wrong alignment on NikkiAnim_BPNew_C_AnimLayer_UsingCarrierMovement");
static_assert(sizeof(NikkiAnim_BPNew_C_AnimLayer_UsingCarrierMovement) == 0x000010, "Wrong size on NikkiAnim_BPNew_C_AnimLayer_UsingCarrierMovement");
static_assert(offsetof(NikkiAnim_BPNew_C_AnimLayer_UsingCarrierMovement, AnimLayer_UsingCarrierMovement_0) == 0x000000, "Member 'NikkiAnim_BPNew_C_AnimLayer_UsingCarrierMovement::AnimLayer_UsingCarrierMovement_0' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.AnimLayer_WhiteBoxMovement
// 0x0010 (0x0010 - 0x0000)
struct NikkiAnim_BPNew_C_AnimLayer_WhiteBoxMovement final
{
public:
	struct FPoseLink                              AnimLayer_WhiteBoxMovement_0;                      // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(NikkiAnim_BPNew_C_AnimLayer_WhiteBoxMovement) == 0x000008, "Wrong alignment on NikkiAnim_BPNew_C_AnimLayer_WhiteBoxMovement");
static_assert(sizeof(NikkiAnim_BPNew_C_AnimLayer_WhiteBoxMovement) == 0x000010, "Wrong size on NikkiAnim_BPNew_C_AnimLayer_WhiteBoxMovement");
static_assert(offsetof(NikkiAnim_BPNew_C_AnimLayer_WhiteBoxMovement, AnimLayer_WhiteBoxMovement_0) == 0x000000, "Member 'NikkiAnim_BPNew_C_AnimLayer_WhiteBoxMovement::AnimLayer_WhiteBoxMovement_0' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.BasePoseForAdditive
// 0x0010 (0x0010 - 0x0000)
struct NikkiAnim_BPNew_C_BasePoseForAdditive final
{
public:
	struct FPoseLink                              BasePoseForAdditive_0;                             // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(NikkiAnim_BPNew_C_BasePoseForAdditive) == 0x000008, "Wrong alignment on NikkiAnim_BPNew_C_BasePoseForAdditive");
static_assert(sizeof(NikkiAnim_BPNew_C_BasePoseForAdditive) == 0x000010, "Wrong size on NikkiAnim_BPNew_C_BasePoseForAdditive");
static_assert(offsetof(NikkiAnim_BPNew_C_BasePoseForAdditive, BasePoseForAdditive_0) == 0x000000, "Member 'NikkiAnim_BPNew_C_BasePoseForAdditive::BasePoseForAdditive_0' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.BlueprintThreadSafeUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct NikkiAnim_BPNew_C_BlueprintThreadSafeUpdateAnimation final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NikkiAnim_BPNew_C_BlueprintThreadSafeUpdateAnimation) == 0x000004, "Wrong alignment on NikkiAnim_BPNew_C_BlueprintThreadSafeUpdateAnimation");
static_assert(sizeof(NikkiAnim_BPNew_C_BlueprintThreadSafeUpdateAnimation) == 0x000004, "Wrong size on NikkiAnim_BPNew_C_BlueprintThreadSafeUpdateAnimation");
static_assert(offsetof(NikkiAnim_BPNew_C_BlueprintThreadSafeUpdateAnimation, DeltaTime) == 0x000000, "Member 'NikkiAnim_BPNew_C_BlueprintThreadSafeUpdateAnimation::DeltaTime' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct NikkiAnim_BPNew_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NikkiAnim_BPNew_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on NikkiAnim_BPNew_C_BlueprintUpdateAnimation");
static_assert(sizeof(NikkiAnim_BPNew_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on NikkiAnim_BPNew_C_BlueprintUpdateAnimation");
static_assert(offsetof(NikkiAnim_BPNew_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'NikkiAnim_BPNew_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.CanUseDialogPerformance
// 0x0003 (0x0003 - 0x0000)
struct NikkiAnim_BPNew_C_CanUseDialogPerformance final
{
public:
	bool                                          bRet;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NikkiAnim_BPNew_C_CanUseDialogPerformance) == 0x000001, "Wrong alignment on NikkiAnim_BPNew_C_CanUseDialogPerformance");
static_assert(sizeof(NikkiAnim_BPNew_C_CanUseDialogPerformance) == 0x000003, "Wrong size on NikkiAnim_BPNew_C_CanUseDialogPerformance");
static_assert(offsetof(NikkiAnim_BPNew_C_CanUseDialogPerformance, bRet) == 0x000000, "Member 'NikkiAnim_BPNew_C_CanUseDialogPerformance::bRet' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_CanUseDialogPerformance, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'NikkiAnim_BPNew_C_CanUseDialogPerformance::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_CanUseDialogPerformance, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'NikkiAnim_BPNew_C_CanUseDialogPerformance::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.ClearInertialization
// 0x0020 (0x0020 - 0x0000)
struct NikkiAnim_BPNew_C_ClearInertialization final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(NikkiAnim_BPNew_C_ClearInertialization) == 0x000008, "Wrong alignment on NikkiAnim_BPNew_C_ClearInertialization");
static_assert(sizeof(NikkiAnim_BPNew_C_ClearInertialization) == 0x000020, "Wrong size on NikkiAnim_BPNew_C_ClearInertialization");
static_assert(offsetof(NikkiAnim_BPNew_C_ClearInertialization, Context) == 0x000000, "Member 'NikkiAnim_BPNew_C_ClearInertialization::Context' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ClearInertialization, Node) == 0x000010, "Member 'NikkiAnim_BPNew_C_ClearInertialization::Node' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.ExecuteUbergraph_NikkiAnim_BPNew
// 0x0238 (0x0238 - 0x0000)
struct NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetForceInitFootPlacementIKParam_ReturnValue; // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanUseDialogPerformance_bRet;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UX6OverlayFrameSettings*                CallFunc_SpawnObject_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValueWithDefault_OutValue;        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCurveValueWithDefault_ReturnValue;     // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValueWithDefault_OutValue_1;      // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCurveValueWithDefault_ReturnValue_1;   // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UX6OverlayFrameSettings*                CallFunc_SpawnObject_ReturnValue_1;                // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_4;       // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_5;       // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_6;       // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetForceInitFootPlacementIKParam_ReturnValue_1; // 0x0087(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerAnimStatesComponent_C*        CallFunc_GetComponentByClass_ReturnValue;          // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_GetEnableEmotionPerformance_EnableEmotionPerformance; // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Delta;                          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_1;            // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSizeXY_ReturnValue;                      // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_2;            // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerRegularInAirMovementComp_C*   CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0120(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x012B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue;               // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckActorHasBegunPlay_ReturnValue;       // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13A[0x6];                                      // 0x013A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_3;            // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetComponentByClass_ReturnValue_2;        // 0x0148(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_1;              // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_2;              // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_3;              // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_7;       // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15D[0x3];                                      // 0x015D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_8;       // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_4;            // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UX6CharacterMovementComponent*          CallFunc_GetComponentByClass_ReturnValue_3;        // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_182[0x6];                                      // 0x0182(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue_1;          // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_Alpha_ImplicitCast;         // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet___CustomProperty_PelvisWeight_9C3CB6104FEEB92C4E76B49E09A60DE1_ImplicitCast; // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet___CustomProperty_LeftFootTranslationWeight_9C3CB6104FEEB92C4E76B49E09A60DE1_ImplicitCast; // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet___CustomProperty_LeftFootRotationWeight_9C3CB6104FEEB92C4E76B49E09A60DE1_ImplicitCast; // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet___CustomProperty_RightFootTranslationWeight_9C3CB6104FEEB92C4E76B49E09A60DE1_ImplicitCast; // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet___CustomProperty_RightFootRotationWeight_9C3CB6104FEEB92C4E76B49E09A60DE1_ImplicitCast; // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_Alpha_ImplicitCast_1;       // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Set_Item_ImplicitCast;              // 0x01DC(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateIKDatas_Delta_ImplicitCast;         // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateDefaultEmotionRatio_DeltaSeconds_ImplicitCast; // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateFootPlacementIKAlpha_DeltaSeconds_ImplicitCast; // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_FacialSlotBlendAlpha_ImplicitCast; // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_EyeBlinkWeight_ImplicitCast;    // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_1;    // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_Alpha_ImplicitCast_2;       // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_Alpha_ImplicitCast_3;       // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew) == 0x000008, "Wrong alignment on NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew");
static_assert(sizeof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew) == 0x000238, "Wrong size on NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, EntryPoint) == 0x000000, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::EntryPoint' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_GetForceInitFootPlacementIKParam_ReturnValue) == 0x000004, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_GetForceInitFootPlacementIKParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000005, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_Not_PreBool_ReturnValue) == 0x000006, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_GetCurveValue_ReturnValue) == 0x000008, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x00000C, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x000010, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_CanUseDialogPerformance_bRet) == 0x00002C, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_CanUseDialogPerformance_bRet' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x00002D, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_SelectFloat_ReturnValue) == 0x000030, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x000038, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, K2Node_CreateDelegate_OutputDelegate_1) == 0x00003C, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_SpawnObject_ReturnValue) == 0x000050, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_GetCurveValueWithDefault_OutValue) == 0x000058, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_GetCurveValueWithDefault_OutValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_GetCurveValueWithDefault_ReturnValue) == 0x00005C, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_GetCurveValueWithDefault_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_GetCurveValueWithDefault_OutValue_1) == 0x000060, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_GetCurveValueWithDefault_OutValue_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_GetCurveValueWithDefault_ReturnValue_1) == 0x000064, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_GetCurveValueWithDefault_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_SpawnObject_ReturnValue_1) == 0x000068, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_SpawnObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000070, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000071, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_BooleanAND_ReturnValue) == 0x000072, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_Greater_DoubleDouble_ReturnValue_4) == 0x000073, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_Greater_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_SelectFloat_ReturnValue_1) == 0x000078, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_BooleanAND_ReturnValue_1) == 0x000080, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_Greater_DoubleDouble_ReturnValue_5) == 0x000081, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_Greater_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000082, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_Greater_DoubleDouble_ReturnValue_6) == 0x000083, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_Greater_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_BooleanAND_ReturnValue_2) == 0x000084, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_BooleanAND_ReturnValue_3) == 0x000085, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000086, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_GetForceInitFootPlacementIKParam_ReturnValue_1) == 0x000087, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_GetForceInitFootPlacementIKParam_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, K2Node_Event_DeltaTimeX) == 0x000088, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000090, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_IsValid_ReturnValue_1) == 0x000098, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_IsValid_ReturnValue_2) == 0x000099, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_GetComponentByClass_ReturnValue) == 0x0000A0, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_BP_GetEnableEmotionPerformance_EnableEmotionPerformance) == 0x0000A8, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_BP_GetEnableEmotionPerformance_EnableEmotionPerformance' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, K2Node_CustomEvent_Delta) == 0x0000B0, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::K2Node_CustomEvent_Delta' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_BooleanAND_ReturnValue_4) == 0x0000B8, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_BreakRotator_Roll) == 0x0000BC, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_BreakRotator_Pitch) == 0x0000C0, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_BreakRotator_Yaw) == 0x0000C4, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_MakeRotator_ReturnValue) == 0x0000D0, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_TryGetPawnOwner_ReturnValue_1) == 0x0000E8, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_TryGetPawnOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0000F0, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_GetVelocity_ReturnValue) == 0x0000F8, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_VSizeXY_ReturnValue) == 0x000110, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_VSizeXY_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_TryGetPawnOwner_ReturnValue_2) == 0x000118, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_TryGetPawnOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000120, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_IsValid_ReturnValue_3) == 0x000128, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_IsValid_ReturnValue_4) == 0x000129, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_GetValidValue_ReturnValue) == 0x00012A, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_BooleanOR_ReturnValue) == 0x00012B, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_Not_PreBool_ReturnValue_1) == 0x00012C, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_GetOwningActor_ReturnValue) == 0x000130, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_GetOwningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_CheckActorHasBegunPlay_ReturnValue) == 0x000138, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_CheckActorHasBegunPlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_IsValid_ReturnValue_5) == 0x000139, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_TryGetPawnOwner_ReturnValue_3) == 0x000140, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_TryGetPawnOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_GetComponentByClass_ReturnValue_2) == 0x000148, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_GetComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_GetCurveValue_ReturnValue_1) == 0x000150, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_GetCurveValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_GetCurveValue_ReturnValue_2) == 0x000154, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_GetCurveValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_GetCurveValue_ReturnValue_3) == 0x000158, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_GetCurveValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_Greater_DoubleDouble_ReturnValue_7) == 0x00015C, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_Greater_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000160, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_Greater_DoubleDouble_ReturnValue_8) == 0x000168, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_Greater_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_TryGetPawnOwner_ReturnValue_4) == 0x000170, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_TryGetPawnOwner_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_GetComponentByClass_ReturnValue_3) == 0x000178, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_GetComponentByClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_IsValid_ReturnValue_6) == 0x000180, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_BooleanOR_ReturnValue_1) == 0x000181, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_Conv_BoolToDouble_ReturnValue_1) == 0x000188, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_Conv_BoolToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_BooleanAND_ReturnValue_5) == 0x000190, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_FInterpTo_ReturnValue) == 0x000198, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0001A0, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, K2Node_StructMemberSet_Alpha_ImplicitCast) == 0x0001A8, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::K2Node_StructMemberSet_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, K2Node_VariableSet___CustomProperty_PelvisWeight_9C3CB6104FEEB92C4E76B49E09A60DE1_ImplicitCast) == 0x0001B0, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::K2Node_VariableSet___CustomProperty_PelvisWeight_9C3CB6104FEEB92C4E76B49E09A60DE1_ImplicitCast' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, K2Node_VariableSet___CustomProperty_LeftFootTranslationWeight_9C3CB6104FEEB92C4E76B49E09A60DE1_ImplicitCast) == 0x0001B8, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::K2Node_VariableSet___CustomProperty_LeftFootTranslationWeight_9C3CB6104FEEB92C4E76B49E09A60DE1_ImplicitCast' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, K2Node_VariableSet___CustomProperty_LeftFootRotationWeight_9C3CB6104FEEB92C4E76B49E09A60DE1_ImplicitCast) == 0x0001C0, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::K2Node_VariableSet___CustomProperty_LeftFootRotationWeight_9C3CB6104FEEB92C4E76B49E09A60DE1_ImplicitCast' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, K2Node_VariableSet___CustomProperty_RightFootTranslationWeight_9C3CB6104FEEB92C4E76B49E09A60DE1_ImplicitCast) == 0x0001C8, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::K2Node_VariableSet___CustomProperty_RightFootTranslationWeight_9C3CB6104FEEB92C4E76B49E09A60DE1_ImplicitCast' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, K2Node_VariableSet___CustomProperty_RightFootRotationWeight_9C3CB6104FEEB92C4E76B49E09A60DE1_ImplicitCast) == 0x0001D0, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::K2Node_VariableSet___CustomProperty_RightFootRotationWeight_9C3CB6104FEEB92C4E76B49E09A60DE1_ImplicitCast' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, K2Node_StructMemberSet_Alpha_ImplicitCast_1) == 0x0001D8, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::K2Node_StructMemberSet_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_Array_Set_Item_ImplicitCast) == 0x0001DC, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_Array_Set_Item_ImplicitCast' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_UpdateIKDatas_Delta_ImplicitCast) == 0x0001E0, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_UpdateIKDatas_Delta_ImplicitCast' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_UpdateDefaultEmotionRatio_DeltaSeconds_ImplicitCast) == 0x0001E8, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_UpdateDefaultEmotionRatio_DeltaSeconds_ImplicitCast' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_UpdateFootPlacementIKAlpha_DeltaSeconds_ImplicitCast) == 0x0001F0, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_UpdateFootPlacementIKAlpha_DeltaSeconds_ImplicitCast' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, K2Node_VariableSet_FacialSlotBlendAlpha_ImplicitCast) == 0x0001F8, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::K2Node_VariableSet_FacialSlotBlendAlpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000200, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x000208, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, K2Node_VariableSet_EyeBlinkWeight_ImplicitCast) == 0x000210, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::K2Node_VariableSet_EyeBlinkWeight_ImplicitCast' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000218, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_Greater_DoubleDouble_A_ImplicitCast_1) == 0x000220, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_Greater_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000228, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, K2Node_StructMemberSet_Alpha_ImplicitCast_2) == 0x000230, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::K2Node_StructMemberSet_Alpha_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew, K2Node_StructMemberSet_Alpha_ImplicitCast_3) == 0x000234, "Member 'NikkiAnim_BPNew_C_ExecuteUbergraph_NikkiAnim_BPNew::K2Node_StructMemberSet_Alpha_ImplicitCast_3' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.GetBlinkValue
// 0x0050 (0x0050 - 0x0000)
struct NikkiAnim_BPNew_C_GetBlinkValue final
{
public:
	double                                        Blink_L;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Blink_R;                                           // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_DistanceBetweenTwoSocketsAndMapRange_ReturnValue; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_DistanceBetweenTwoSocketsAndMapRange_ReturnValue_1; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast_1;     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NikkiAnim_BPNew_C_GetBlinkValue) == 0x000008, "Wrong alignment on NikkiAnim_BPNew_C_GetBlinkValue");
static_assert(sizeof(NikkiAnim_BPNew_C_GetBlinkValue) == 0x000050, "Wrong size on NikkiAnim_BPNew_C_GetBlinkValue");
static_assert(offsetof(NikkiAnim_BPNew_C_GetBlinkValue, Blink_L) == 0x000000, "Member 'NikkiAnim_BPNew_C_GetBlinkValue::Blink_L' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_GetBlinkValue, Blink_R) == 0x000008, "Member 'NikkiAnim_BPNew_C_GetBlinkValue::Blink_R' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_GetBlinkValue, CallFunc_GetOwningComponent_ReturnValue) == 0x000010, "Member 'NikkiAnim_BPNew_C_GetBlinkValue::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_GetBlinkValue, CallFunc_K2_DistanceBetweenTwoSocketsAndMapRange_ReturnValue) == 0x000018, "Member 'NikkiAnim_BPNew_C_GetBlinkValue::CallFunc_K2_DistanceBetweenTwoSocketsAndMapRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_GetBlinkValue, CallFunc_K2_DistanceBetweenTwoSocketsAndMapRange_ReturnValue_1) == 0x00001C, "Member 'NikkiAnim_BPNew_C_GetBlinkValue::CallFunc_K2_DistanceBetweenTwoSocketsAndMapRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_GetBlinkValue, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'NikkiAnim_BPNew_C_GetBlinkValue::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_GetBlinkValue, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'NikkiAnim_BPNew_C_GetBlinkValue::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_GetBlinkValue, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000030, "Member 'NikkiAnim_BPNew_C_GetBlinkValue::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_GetBlinkValue, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'NikkiAnim_BPNew_C_GetBlinkValue::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_GetBlinkValue, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000040, "Member 'NikkiAnim_BPNew_C_GetBlinkValue::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_GetBlinkValue, CallFunc_Divide_DoubleDouble_A_ImplicitCast_1) == 0x000048, "Member 'NikkiAnim_BPNew_C_GetBlinkValue::CallFunc_Divide_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.GetForceInitFootPlacementIKParam
// 0x0002 (0x0002 - 0x0000)
struct NikkiAnim_BPNew_C_GetForceInitFootPlacementIKParam final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret;                                               // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NikkiAnim_BPNew_C_GetForceInitFootPlacementIKParam) == 0x000001, "Wrong alignment on NikkiAnim_BPNew_C_GetForceInitFootPlacementIKParam");
static_assert(sizeof(NikkiAnim_BPNew_C_GetForceInitFootPlacementIKParam) == 0x000002, "Wrong size on NikkiAnim_BPNew_C_GetForceInitFootPlacementIKParam");
static_assert(offsetof(NikkiAnim_BPNew_C_GetForceInitFootPlacementIKParam, ReturnValue) == 0x000000, "Member 'NikkiAnim_BPNew_C_GetForceInitFootPlacementIKParam::ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_GetForceInitFootPlacementIKParam, Ret) == 0x000001, "Member 'NikkiAnim_BPNew_C_GetForceInitFootPlacementIKParam::Ret' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.InitDialogueEmotionParams
// 0x0038 (0x0038 - 0x0000)
struct NikkiAnim_BPNew_C_InitDialogueEmotionParams final
{
public:
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue;               // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetMainSkeletalComponent_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          CallFunc_GetSkeletalMeshAsset_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAssetUserData*                         CallFunc_GetAssetUserDataOfClass_ReturnValue;      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_DialogueEmotionUserData_C*          K2Node_DynamicCast_AsBP_Dialogue_Emotion_User_Data; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NikkiAnim_BPNew_C_InitDialogueEmotionParams) == 0x000008, "Wrong alignment on NikkiAnim_BPNew_C_InitDialogueEmotionParams");
static_assert(sizeof(NikkiAnim_BPNew_C_InitDialogueEmotionParams) == 0x000038, "Wrong size on NikkiAnim_BPNew_C_InitDialogueEmotionParams");
static_assert(offsetof(NikkiAnim_BPNew_C_InitDialogueEmotionParams, CallFunc_GetOwningActor_ReturnValue) == 0x000000, "Member 'NikkiAnim_BPNew_C_InitDialogueEmotionParams::CallFunc_GetOwningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_InitDialogueEmotionParams, CallFunc_GetMainSkeletalComponent_ReturnValue) == 0x000008, "Member 'NikkiAnim_BPNew_C_InitDialogueEmotionParams::CallFunc_GetMainSkeletalComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_InitDialogueEmotionParams, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'NikkiAnim_BPNew_C_InitDialogueEmotionParams::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_InitDialogueEmotionParams, CallFunc_GetSkeletalMeshAsset_ReturnValue) == 0x000018, "Member 'NikkiAnim_BPNew_C_InitDialogueEmotionParams::CallFunc_GetSkeletalMeshAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_InitDialogueEmotionParams, CallFunc_GetAssetUserDataOfClass_ReturnValue) == 0x000020, "Member 'NikkiAnim_BPNew_C_InitDialogueEmotionParams::CallFunc_GetAssetUserDataOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_InitDialogueEmotionParams, K2Node_DynamicCast_AsBP_Dialogue_Emotion_User_Data) == 0x000028, "Member 'NikkiAnim_BPNew_C_InitDialogueEmotionParams::K2Node_DynamicCast_AsBP_Dialogue_Emotion_User_Data' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_InitDialogueEmotionParams, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'NikkiAnim_BPNew_C_InitDialogueEmotionParams::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.LayedDynamicAdditive
// 0x0030 (0x0030 - 0x0000)
struct NikkiAnim_BPNew_C_LayedDynamicAdditive final
{
public:
	struct FPoseLink                              MotionPose;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              BasePose;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              LayedDynamicAdditive_0;                            // 0x0020(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(NikkiAnim_BPNew_C_LayedDynamicAdditive) == 0x000008, "Wrong alignment on NikkiAnim_BPNew_C_LayedDynamicAdditive");
static_assert(sizeof(NikkiAnim_BPNew_C_LayedDynamicAdditive) == 0x000030, "Wrong size on NikkiAnim_BPNew_C_LayedDynamicAdditive");
static_assert(offsetof(NikkiAnim_BPNew_C_LayedDynamicAdditive, MotionPose) == 0x000000, "Member 'NikkiAnim_BPNew_C_LayedDynamicAdditive::MotionPose' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_LayedDynamicAdditive, BasePose) == 0x000010, "Member 'NikkiAnim_BPNew_C_LayedDynamicAdditive::BasePose' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_LayedDynamicAdditive, LayedDynamicAdditive_0) == 0x000020, "Member 'NikkiAnim_BPNew_C_LayedDynamicAdditive::LayedDynamicAdditive_0' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.OnBecomeRelevant_ContrlRig_FootPlacementIK
// 0x0020 (0x0020 - 0x0000)
struct NikkiAnim_BPNew_C_OnBecomeRelevant_ContrlRig_FootPlacementIK final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(NikkiAnim_BPNew_C_OnBecomeRelevant_ContrlRig_FootPlacementIK) == 0x000008, "Wrong alignment on NikkiAnim_BPNew_C_OnBecomeRelevant_ContrlRig_FootPlacementIK");
static_assert(sizeof(NikkiAnim_BPNew_C_OnBecomeRelevant_ContrlRig_FootPlacementIK) == 0x000020, "Wrong size on NikkiAnim_BPNew_C_OnBecomeRelevant_ContrlRig_FootPlacementIK");
static_assert(offsetof(NikkiAnim_BPNew_C_OnBecomeRelevant_ContrlRig_FootPlacementIK, Context) == 0x000000, "Member 'NikkiAnim_BPNew_C_OnBecomeRelevant_ContrlRig_FootPlacementIK::Context' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_OnBecomeRelevant_ContrlRig_FootPlacementIK, Node) == 0x000010, "Member 'NikkiAnim_BPNew_C_OnBecomeRelevant_ContrlRig_FootPlacementIK::Node' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.OnOverlayBlendBecomeRelevant
// 0x0050 (0x0050 - 0x0000)
struct NikkiAnim_BPNew_C_OnOverlayBlendBecomeRelevant final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	EAnimNodeReferenceConversionResult            CallFunc_ConvertToX6OverlayBlend_Result;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FX6OverlayBlendReference               CallFunc_ConvertToX6OverlayBlend_ReturnValue;      // 0x0028(0x0010)(NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FX6OverlayBlendReference               CallFunc_DeactivateBlendThisFrame_ReturnValue;     // 0x0040(0x0010)(NoDestructor)
};
static_assert(alignof(NikkiAnim_BPNew_C_OnOverlayBlendBecomeRelevant) == 0x000008, "Wrong alignment on NikkiAnim_BPNew_C_OnOverlayBlendBecomeRelevant");
static_assert(sizeof(NikkiAnim_BPNew_C_OnOverlayBlendBecomeRelevant) == 0x000050, "Wrong size on NikkiAnim_BPNew_C_OnOverlayBlendBecomeRelevant");
static_assert(offsetof(NikkiAnim_BPNew_C_OnOverlayBlendBecomeRelevant, Context) == 0x000000, "Member 'NikkiAnim_BPNew_C_OnOverlayBlendBecomeRelevant::Context' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_OnOverlayBlendBecomeRelevant, Node) == 0x000010, "Member 'NikkiAnim_BPNew_C_OnOverlayBlendBecomeRelevant::Node' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_OnOverlayBlendBecomeRelevant, CallFunc_ConvertToX6OverlayBlend_Result) == 0x000020, "Member 'NikkiAnim_BPNew_C_OnOverlayBlendBecomeRelevant::CallFunc_ConvertToX6OverlayBlend_Result' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_OnOverlayBlendBecomeRelevant, CallFunc_ConvertToX6OverlayBlend_ReturnValue) == 0x000028, "Member 'NikkiAnim_BPNew_C_OnOverlayBlendBecomeRelevant::CallFunc_ConvertToX6OverlayBlend_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_OnOverlayBlendBecomeRelevant, K2Node_SwitchEnum_CmpSuccess) == 0x000038, "Member 'NikkiAnim_BPNew_C_OnOverlayBlendBecomeRelevant::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_OnOverlayBlendBecomeRelevant, CallFunc_DeactivateBlendThisFrame_ReturnValue) == 0x000040, "Member 'NikkiAnim_BPNew_C_OnOverlayBlendBecomeRelevant::CallFunc_DeactivateBlendThisFrame_ReturnValue' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.OnStylizedOverlayBecomeRelevant
// 0x0050 (0x0050 - 0x0000)
struct NikkiAnim_BPNew_C_OnStylizedOverlayBecomeRelevant final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	EAnimNodeReferenceConversionResult            CallFunc_ConvertToX6StylizedOverlayBlend_Result;   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FX6StylizedOverlayBlendReference       CallFunc_ConvertToX6StylizedOverlayBlend_ReturnValue; // 0x0028(0x0010)(NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FX6StylizedOverlayBlendReference       CallFunc_DeactivateStylizedBlendThisFrame_ReturnValue; // 0x0040(0x0010)(NoDestructor)
};
static_assert(alignof(NikkiAnim_BPNew_C_OnStylizedOverlayBecomeRelevant) == 0x000008, "Wrong alignment on NikkiAnim_BPNew_C_OnStylizedOverlayBecomeRelevant");
static_assert(sizeof(NikkiAnim_BPNew_C_OnStylizedOverlayBecomeRelevant) == 0x000050, "Wrong size on NikkiAnim_BPNew_C_OnStylizedOverlayBecomeRelevant");
static_assert(offsetof(NikkiAnim_BPNew_C_OnStylizedOverlayBecomeRelevant, Context) == 0x000000, "Member 'NikkiAnim_BPNew_C_OnStylizedOverlayBecomeRelevant::Context' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_OnStylizedOverlayBecomeRelevant, Node) == 0x000010, "Member 'NikkiAnim_BPNew_C_OnStylizedOverlayBecomeRelevant::Node' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_OnStylizedOverlayBecomeRelevant, CallFunc_ConvertToX6StylizedOverlayBlend_Result) == 0x000020, "Member 'NikkiAnim_BPNew_C_OnStylizedOverlayBecomeRelevant::CallFunc_ConvertToX6StylizedOverlayBlend_Result' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_OnStylizedOverlayBecomeRelevant, CallFunc_ConvertToX6StylizedOverlayBlend_ReturnValue) == 0x000028, "Member 'NikkiAnim_BPNew_C_OnStylizedOverlayBecomeRelevant::CallFunc_ConvertToX6StylizedOverlayBlend_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_OnStylizedOverlayBecomeRelevant, K2Node_SwitchEnum_CmpSuccess) == 0x000038, "Member 'NikkiAnim_BPNew_C_OnStylizedOverlayBecomeRelevant::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_OnStylizedOverlayBecomeRelevant, CallFunc_DeactivateStylizedBlendThisFrame_ReturnValue) == 0x000040, "Member 'NikkiAnim_BPNew_C_OnStylizedOverlayBecomeRelevant::CallFunc_DeactivateStylizedBlendThisFrame_ReturnValue' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.OnUpperPoseUpdate
// 0x0020 (0x0020 - 0x0000)
struct NikkiAnim_BPNew_C_OnUpperPoseUpdate final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(NikkiAnim_BPNew_C_OnUpperPoseUpdate) == 0x000008, "Wrong alignment on NikkiAnim_BPNew_C_OnUpperPoseUpdate");
static_assert(sizeof(NikkiAnim_BPNew_C_OnUpperPoseUpdate) == 0x000020, "Wrong size on NikkiAnim_BPNew_C_OnUpperPoseUpdate");
static_assert(offsetof(NikkiAnim_BPNew_C_OnUpperPoseUpdate, Context) == 0x000000, "Member 'NikkiAnim_BPNew_C_OnUpperPoseUpdate::Context' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_OnUpperPoseUpdate, Node) == 0x000010, "Member 'NikkiAnim_BPNew_C_OnUpperPoseUpdate::Node' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.SM Base Pose Update
// 0x0020 (0x0020 - 0x0000)
struct NikkiAnim_BPNew_C_SM_Base_Pose_Update final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(NikkiAnim_BPNew_C_SM_Base_Pose_Update) == 0x000008, "Wrong alignment on NikkiAnim_BPNew_C_SM_Base_Pose_Update");
static_assert(sizeof(NikkiAnim_BPNew_C_SM_Base_Pose_Update) == 0x000020, "Wrong size on NikkiAnim_BPNew_C_SM_Base_Pose_Update");
static_assert(offsetof(NikkiAnim_BPNew_C_SM_Base_Pose_Update, Context) == 0x000000, "Member 'NikkiAnim_BPNew_C_SM_Base_Pose_Update::Context' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_SM_Base_Pose_Update, Node) == 0x000010, "Member 'NikkiAnim_BPNew_C_SM_Base_Pose_Update::Node' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.UpdateAdjustSittingPostureState
// 0x05A0 (0x05A0 - 0x0000)
struct NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState final
{
public:
	TArray<int32>                                 ClothesIDArray;                                    // 0x0000(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue_1;               // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue_2;               // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Vector_IsNearlyZero_ReturnValue;          // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_1;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Vector_IsNearlyZero_ReturnValue_1;        // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Vector_IsNearlyZero_ReturnValue_2;        // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EControlBoneType                              Temp_byte_Variable;                                // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EControlBoneType                              Temp_byte_Variable_1;                              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EControlBoneType                              Temp_byte_Variable_2;                              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_2;                           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_2;              // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0110(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_Map_Find_Value;                           // 0x0170(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0xF];                                      // 0x01D1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Map_Find_Value_1;                         // 0x01E0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0xF];                                      // 0x0241(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Map_Find_Value_2;                         // 0x0250(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0xF];                                      // 0x02B1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Map_Find_Value_3;                         // 0x02C0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0xF];                                      // 0x0321(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0330(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391[0xF];                                      // 0x0391(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_InvertTransform_ReturnValue;              // 0x03A0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0400(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue_1;          // 0x0460(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue_2;          // 0x04C0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_SelectTransform_ReturnValue;              // 0x0520(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0581(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0582(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_583[0x5];                                      // 0x0583(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_1;    // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_AdjustSittingPostureIK_Alpha_ImplicitCast; // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState) == 0x000010, "Wrong alignment on NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState");
static_assert(sizeof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState) == 0x0005A0, "Wrong size on NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, ClothesIDArray) == 0x000000, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::ClothesIDArray' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000010, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_Set_Contains_ReturnValue) == 0x000011, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_Set_Contains_ReturnValue_1) == 0x000012, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_Set_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_Not_PreBool_ReturnValue) == 0x000013, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_Not_PreBool_ReturnValue_1) == 0x000014, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_Set_Contains_ReturnValue_2) == 0x000015, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_Set_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_Not_PreBool_ReturnValue_2) == 0x000016, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_Vector_IsNearlyZero_ReturnValue) == 0x000017, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_Vector_IsNearlyZero_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_GetCurveValue_ReturnValue) == 0x000018, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x00001C, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_GetCurveValue_ReturnValue_1) == 0x000020, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_GetCurveValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_BooleanAND_ReturnValue) == 0x000024, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000025, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_BooleanAND_ReturnValue_1) == 0x000026, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_Vector_IsNearlyZero_ReturnValue_1) == 0x000027, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_Vector_IsNearlyZero_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_BooleanAND_ReturnValue_2) == 0x000028, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_BooleanAND_ReturnValue_3) == 0x000029, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x00002A, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_BreakVector_X) == 0x000030, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_BreakVector_Y) == 0x000038, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_BreakVector_Z) == 0x000040, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_BreakVector_X_1) == 0x000048, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_BreakVector_Y_1) == 0x000050, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_BreakVector_Z_1) == 0x000058, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_BreakVector_X_2) == 0x000060, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_BreakVector_Y_2) == 0x000068, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_BreakVector_Z_2) == 0x000070, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_Vector_IsNearlyZero_ReturnValue_2) == 0x000078, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_Vector_IsNearlyZero_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, Temp_byte_Variable) == 0x000079, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_BooleanAND_ReturnValue_4) == 0x00007A, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_BooleanAND_ReturnValue_5) == 0x00007B, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, K2Node_Select_Default) == 0x000080, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000088, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, Temp_byte_Variable_1) == 0x000090, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_MakeVector_ReturnValue) == 0x000098, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, K2Node_Select_Default_1) == 0x0000B0, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000B8, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_MakeVector_ReturnValue_1) == 0x0000C0, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, Temp_byte_Variable_2) == 0x0000D8, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, K2Node_Select_Default_2) == 0x0000E0, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0000E8, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_MakeVector_ReturnValue_2) == 0x0000F0, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_GetCurveValue_ReturnValue_2) == 0x000108, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_GetCurveValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_GetSocketTransform_ReturnValue) == 0x000110, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_Map_Find_Value) == 0x000170, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_Map_Find_ReturnValue) == 0x0001D0, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_Map_Find_Value_1) == 0x0001E0, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_Map_Find_ReturnValue_1) == 0x000240, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_Map_Find_Value_2) == 0x000250, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_Map_Find_ReturnValue_2) == 0x0002B0, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_Map_Find_Value_3) == 0x0002C0, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_Map_Find_ReturnValue_3) == 0x000320, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000330, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_BooleanOR_ReturnValue) == 0x000390, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_InvertTransform_ReturnValue) == 0x0003A0, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_InvertTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_ComposeTransforms_ReturnValue) == 0x000400, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_ComposeTransforms_ReturnValue_1) == 0x000460, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_ComposeTransforms_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_ComposeTransforms_ReturnValue_2) == 0x0004C0, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_ComposeTransforms_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_SelectTransform_ReturnValue) == 0x000520, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_SelectTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_IsValid_ReturnValue) == 0x000580, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_IsValid_ReturnValue_1) == 0x000581, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_BooleanAND_ReturnValue_6) == 0x000582, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000588, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, CallFunc_Greater_DoubleDouble_A_ImplicitCast_1) == 0x000590, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::CallFunc_Greater_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState, K2Node_VariableSet_AdjustSittingPostureIK_Alpha_ImplicitCast) == 0x000598, "Member 'NikkiAnim_BPNew_C_UpdateAdjustSittingPostureState::K2Node_VariableSet_AdjustSittingPostureIK_Alpha_ImplicitCast' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.UpdateBikeFootIKDate
// 0x0110 (0x0110 - 0x0000)
struct NikkiAnim_BPNew_C_UpdateBikeFootIKDate final
{
public:
	struct FFootIKFeatureTargetDataV2             CallFunc_GetCurFootIKFeatureTargetData_ReturnValue; // 0x0000(0x00A0)(NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_BikeFootIkLeftFootTranslationAlpha_ImplicitCast; // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_BikeFootIkLeftFootRotationAlpha_ImplicitCast; // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_BikeFootIkRightFootTranslationAlpha_ImplicitCast; // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_BikeFootIkRightFootRotationAlpha_ImplicitCast; // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NikkiAnim_BPNew_C_UpdateBikeFootIKDate) == 0x000008, "Wrong alignment on NikkiAnim_BPNew_C_UpdateBikeFootIKDate");
static_assert(sizeof(NikkiAnim_BPNew_C_UpdateBikeFootIKDate) == 0x000110, "Wrong size on NikkiAnim_BPNew_C_UpdateBikeFootIKDate");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateBikeFootIKDate, CallFunc_GetCurFootIKFeatureTargetData_ReturnValue) == 0x000000, "Member 'NikkiAnim_BPNew_C_UpdateBikeFootIKDate::CallFunc_GetCurFootIKFeatureTargetData_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateBikeFootIKDate, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A0, "Member 'NikkiAnim_BPNew_C_UpdateBikeFootIKDate::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateBikeFootIKDate, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000B8, "Member 'NikkiAnim_BPNew_C_UpdateBikeFootIKDate::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateBikeFootIKDate, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0000D0, "Member 'NikkiAnim_BPNew_C_UpdateBikeFootIKDate::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateBikeFootIKDate, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000E8, "Member 'NikkiAnim_BPNew_C_UpdateBikeFootIKDate::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateBikeFootIKDate, K2Node_VariableSet_BikeFootIkLeftFootTranslationAlpha_ImplicitCast) == 0x0000F0, "Member 'NikkiAnim_BPNew_C_UpdateBikeFootIKDate::K2Node_VariableSet_BikeFootIkLeftFootTranslationAlpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateBikeFootIKDate, K2Node_VariableSet_BikeFootIkLeftFootRotationAlpha_ImplicitCast) == 0x0000F8, "Member 'NikkiAnim_BPNew_C_UpdateBikeFootIKDate::K2Node_VariableSet_BikeFootIkLeftFootRotationAlpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateBikeFootIKDate, K2Node_VariableSet_BikeFootIkRightFootTranslationAlpha_ImplicitCast) == 0x000100, "Member 'NikkiAnim_BPNew_C_UpdateBikeFootIKDate::K2Node_VariableSet_BikeFootIkRightFootTranslationAlpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateBikeFootIKDate, K2Node_VariableSet_BikeFootIkRightFootRotationAlpha_ImplicitCast) == 0x000108, "Member 'NikkiAnim_BPNew_C_UpdateBikeFootIKDate::K2Node_VariableSet_BikeFootIkRightFootRotationAlpha_ImplicitCast' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.UpdateClothesOverlayConfigs
// 0x0050 (0x0050 - 0x0000)
struct NikkiAnim_BPNew_C_UpdateClothesOverlayConfigs final
{
public:
	TMap<struct FGameplayTag, class UX6OverlayData*> NewParam;                                       // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(NikkiAnim_BPNew_C_UpdateClothesOverlayConfigs) == 0x000008, "Wrong alignment on NikkiAnim_BPNew_C_UpdateClothesOverlayConfigs");
static_assert(sizeof(NikkiAnim_BPNew_C_UpdateClothesOverlayConfigs) == 0x000050, "Wrong size on NikkiAnim_BPNew_C_UpdateClothesOverlayConfigs");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateClothesOverlayConfigs, NewParam) == 0x000000, "Member 'NikkiAnim_BPNew_C_UpdateClothesOverlayConfigs::NewParam' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.UpdateDefaultEmotionRatio
// 0x0018 (0x0018 - 0x0000)
struct NikkiAnim_BPNew_C_UpdateDefaultEmotionRatio final
{
public:
	double                                        DeltaSeconds;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Constant_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NikkiAnim_BPNew_C_UpdateDefaultEmotionRatio) == 0x000008, "Wrong alignment on NikkiAnim_BPNew_C_UpdateDefaultEmotionRatio");
static_assert(sizeof(NikkiAnim_BPNew_C_UpdateDefaultEmotionRatio) == 0x000018, "Wrong size on NikkiAnim_BPNew_C_UpdateDefaultEmotionRatio");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateDefaultEmotionRatio, DeltaSeconds) == 0x000000, "Member 'NikkiAnim_BPNew_C_UpdateDefaultEmotionRatio::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateDefaultEmotionRatio, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'NikkiAnim_BPNew_C_UpdateDefaultEmotionRatio::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateDefaultEmotionRatio, CallFunc_FInterpTo_Constant_ReturnValue) == 0x000010, "Member 'NikkiAnim_BPNew_C_UpdateDefaultEmotionRatio::CallFunc_FInterpTo_Constant_ReturnValue' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.UpdateFootPlacementIKAlpha
// 0x00A8 (0x00A8 - 0x0000)
struct NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha final
{
public:
	double                                        DeltaSeconds;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FootTargetAlpha;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FloatSpringInterp_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_1;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeToClosestMarker_OutMarkerTime;     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetTimeToClosestMarker_ReturnValue;       // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeToClosestMarker_OutMarkerTime_1;   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetTimeToClosestMarker_ReturnValue_1;     // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F[0x1];                                       // 0x003F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValueWithDefault_OutValue;        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCurveValueWithDefault_ReturnValue;     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FloatSpringInterp_Current_ImplicitCast;   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FloatSpringInterp_Target_ImplicitCast;    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FloatSpringInterp_DeltaTime_ImplicitCast; // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_CurrentFootIKRigAlpha_AnimOnly_ImplicitCast; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast;                       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast_1;                     // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha) == 0x000008, "Wrong alignment on NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha");
static_assert(sizeof(NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha) == 0x0000A8, "Wrong size on NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha, DeltaSeconds) == 0x000000, "Member 'NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha, FootTargetAlpha) == 0x000008, "Member 'NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha::FootTargetAlpha' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha, Temp_real_Variable) == 0x000010, "Member 'NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha, CallFunc_FloatSpringInterp_ReturnValue) == 0x000018, "Member 'NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha::CallFunc_FloatSpringInterp_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha, Temp_real_Variable_1) == 0x000020, "Member 'NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha, CallFunc_GetTimeToClosestMarker_OutMarkerTime) == 0x000028, "Member 'NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha::CallFunc_GetTimeToClosestMarker_OutMarkerTime' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha, CallFunc_GetTimeToClosestMarker_ReturnValue) == 0x00002C, "Member 'NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha::CallFunc_GetTimeToClosestMarker_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha, CallFunc_Abs_ReturnValue) == 0x000030, "Member 'NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha, CallFunc_GetTimeToClosestMarker_OutMarkerTime_1) == 0x000038, "Member 'NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha::CallFunc_GetTimeToClosestMarker_OutMarkerTime_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha, CallFunc_GetTimeToClosestMarker_ReturnValue_1) == 0x00003C, "Member 'NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha::CallFunc_GetTimeToClosestMarker_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x00003D, "Member 'NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha, CallFunc_BooleanAND_ReturnValue) == 0x00003E, "Member 'NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha, CallFunc_Abs_ReturnValue_1) == 0x000040, "Member 'NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha, CallFunc_BooleanOR_ReturnValue) == 0x00004A, "Member 'NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha, Temp_bool_Variable) == 0x00004B, "Member 'NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha, CallFunc_GetCurveValueWithDefault_OutValue) == 0x00004C, "Member 'NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha::CallFunc_GetCurveValueWithDefault_OutValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha, CallFunc_GetCurveValueWithDefault_ReturnValue) == 0x000050, "Member 'NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha::CallFunc_GetCurveValueWithDefault_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000058, "Member 'NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha, K2Node_Select_Default) == 0x000060, "Member 'NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha, CallFunc_SelectFloat_ReturnValue) == 0x000070, "Member 'NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha, CallFunc_FloatSpringInterp_Current_ImplicitCast) == 0x000078, "Member 'NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha::CallFunc_FloatSpringInterp_Current_ImplicitCast' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha, CallFunc_FloatSpringInterp_Target_ImplicitCast) == 0x00007C, "Member 'NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha::CallFunc_FloatSpringInterp_Target_ImplicitCast' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha, CallFunc_FloatSpringInterp_DeltaTime_ImplicitCast) == 0x000080, "Member 'NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha::CallFunc_FloatSpringInterp_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha, K2Node_VariableSet_CurrentFootIKRigAlpha_AnimOnly_ImplicitCast) == 0x000088, "Member 'NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha::K2Node_VariableSet_CurrentFootIKRigAlpha_AnimOnly_ImplicitCast' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha, CallFunc_Abs_A_ImplicitCast) == 0x000090, "Member 'NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha::CallFunc_Abs_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha, CallFunc_Abs_A_ImplicitCast_1) == 0x000098, "Member 'NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha::CallFunc_Abs_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x0000A0, "Member 'NikkiAnim_BPNew_C_UpdateFootPlacementIKAlpha::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.UpdateIKDatas
// 0x0008 (0x0008 - 0x0000)
struct NikkiAnim_BPNew_C_UpdateIKDatas final
{
public:
	double                                        Delta;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NikkiAnim_BPNew_C_UpdateIKDatas) == 0x000008, "Wrong alignment on NikkiAnim_BPNew_C_UpdateIKDatas");
static_assert(sizeof(NikkiAnim_BPNew_C_UpdateIKDatas) == 0x000008, "Wrong size on NikkiAnim_BPNew_C_UpdateIKDatas");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateIKDatas, Delta) == 0x000000, "Member 'NikkiAnim_BPNew_C_UpdateIKDatas::Delta' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.UpdateLayeredBlendParam
// 0x0060 (0x0060 - 0x0000)
struct NikkiAnim_BPNew_C_UpdateLayeredBlendParam final
{
public:
	double                                        Curve_Arm_LS;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSlotActive_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_1;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_2;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_3;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1;   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast_2;   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Curve_Arm_LS_ImplicitCast;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NikkiAnim_BPNew_C_UpdateLayeredBlendParam) == 0x000008, "Wrong alignment on NikkiAnim_BPNew_C_UpdateLayeredBlendParam");
static_assert(sizeof(NikkiAnim_BPNew_C_UpdateLayeredBlendParam) == 0x000060, "Wrong size on NikkiAnim_BPNew_C_UpdateLayeredBlendParam");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateLayeredBlendParam, Curve_Arm_LS) == 0x000000, "Member 'NikkiAnim_BPNew_C_UpdateLayeredBlendParam::Curve_Arm_LS' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateLayeredBlendParam, CallFunc_IsSlotActive_ReturnValue) == 0x000008, "Member 'NikkiAnim_BPNew_C_UpdateLayeredBlendParam::CallFunc_IsSlotActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateLayeredBlendParam, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'NikkiAnim_BPNew_C_UpdateLayeredBlendParam::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateLayeredBlendParam, CallFunc_GetCurveValue_ReturnValue) == 0x000018, "Member 'NikkiAnim_BPNew_C_UpdateLayeredBlendParam::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateLayeredBlendParam, CallFunc_GetCurveValue_ReturnValue_1) == 0x00001C, "Member 'NikkiAnim_BPNew_C_UpdateLayeredBlendParam::CallFunc_GetCurveValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateLayeredBlendParam, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'NikkiAnim_BPNew_C_UpdateLayeredBlendParam::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateLayeredBlendParam, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000028, "Member 'NikkiAnim_BPNew_C_UpdateLayeredBlendParam::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateLayeredBlendParam, CallFunc_GetCurveValue_ReturnValue_2) == 0x000030, "Member 'NikkiAnim_BPNew_C_UpdateLayeredBlendParam::CallFunc_GetCurveValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateLayeredBlendParam, CallFunc_GetCurveValue_ReturnValue_3) == 0x000034, "Member 'NikkiAnim_BPNew_C_UpdateLayeredBlendParam::CallFunc_GetCurveValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateLayeredBlendParam, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x000038, "Member 'NikkiAnim_BPNew_C_UpdateLayeredBlendParam::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateLayeredBlendParam, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000040, "Member 'NikkiAnim_BPNew_C_UpdateLayeredBlendParam::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateLayeredBlendParam, CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1) == 0x000048, "Member 'NikkiAnim_BPNew_C_UpdateLayeredBlendParam::CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateLayeredBlendParam, CallFunc_Subtract_DoubleDouble_B_ImplicitCast_2) == 0x000050, "Member 'NikkiAnim_BPNew_C_UpdateLayeredBlendParam::CallFunc_Subtract_DoubleDouble_B_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateLayeredBlendParam, K2Node_VariableSet_Curve_Arm_LS_ImplicitCast) == 0x000058, "Member 'NikkiAnim_BPNew_C_UpdateLayeredBlendParam::K2Node_VariableSet_Curve_Arm_LS_ImplicitCast' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.UpdateSitType
// 0x0060 (0x0060 - 0x0000)
struct NikkiAnim_BPNew_C_UpdateSitType final
{
public:
	float                                         CallFunc_GetCurveValueWithDefault_OutValue;        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCurveValueWithDefault_ReturnValue;     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValueWithDefault_OutValue_1;      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCurveValueWithDefault_ReturnValue_1;   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValueWithDefault_OutValue_2;      // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCurveValueWithDefault_ReturnValue_2;   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValueWithDefault_OutValue_3;      // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCurveValueWithDefault_ReturnValue_3;   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValueWithDefault_OutValue_4;      // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCurveValueWithDefault_ReturnValue_4;   // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_4;       // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValueWithDefault_OutValue_5;      // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCurveValueWithDefault_ReturnValue_5;   // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_5;       // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_1;    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_2;    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_3;    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_4;    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_5;    // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NikkiAnim_BPNew_C_UpdateSitType) == 0x000008, "Wrong alignment on NikkiAnim_BPNew_C_UpdateSitType");
static_assert(sizeof(NikkiAnim_BPNew_C_UpdateSitType) == 0x000060, "Wrong size on NikkiAnim_BPNew_C_UpdateSitType");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateSitType, CallFunc_GetCurveValueWithDefault_OutValue) == 0x000000, "Member 'NikkiAnim_BPNew_C_UpdateSitType::CallFunc_GetCurveValueWithDefault_OutValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateSitType, CallFunc_GetCurveValueWithDefault_ReturnValue) == 0x000004, "Member 'NikkiAnim_BPNew_C_UpdateSitType::CallFunc_GetCurveValueWithDefault_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateSitType, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000005, "Member 'NikkiAnim_BPNew_C_UpdateSitType::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateSitType, CallFunc_GetCurveValueWithDefault_OutValue_1) == 0x000008, "Member 'NikkiAnim_BPNew_C_UpdateSitType::CallFunc_GetCurveValueWithDefault_OutValue_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateSitType, CallFunc_GetCurveValueWithDefault_ReturnValue_1) == 0x00000C, "Member 'NikkiAnim_BPNew_C_UpdateSitType::CallFunc_GetCurveValueWithDefault_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateSitType, CallFunc_GetCurveValueWithDefault_OutValue_2) == 0x000010, "Member 'NikkiAnim_BPNew_C_UpdateSitType::CallFunc_GetCurveValueWithDefault_OutValue_2' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateSitType, CallFunc_GetCurveValueWithDefault_ReturnValue_2) == 0x000014, "Member 'NikkiAnim_BPNew_C_UpdateSitType::CallFunc_GetCurveValueWithDefault_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateSitType, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000015, "Member 'NikkiAnim_BPNew_C_UpdateSitType::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateSitType, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000016, "Member 'NikkiAnim_BPNew_C_UpdateSitType::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateSitType, CallFunc_GetCurveValueWithDefault_OutValue_3) == 0x000018, "Member 'NikkiAnim_BPNew_C_UpdateSitType::CallFunc_GetCurveValueWithDefault_OutValue_3' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateSitType, CallFunc_GetCurveValueWithDefault_ReturnValue_3) == 0x00001C, "Member 'NikkiAnim_BPNew_C_UpdateSitType::CallFunc_GetCurveValueWithDefault_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateSitType, CallFunc_GetCurveValueWithDefault_OutValue_4) == 0x000020, "Member 'NikkiAnim_BPNew_C_UpdateSitType::CallFunc_GetCurveValueWithDefault_OutValue_4' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateSitType, CallFunc_GetCurveValueWithDefault_ReturnValue_4) == 0x000024, "Member 'NikkiAnim_BPNew_C_UpdateSitType::CallFunc_GetCurveValueWithDefault_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateSitType, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x000025, "Member 'NikkiAnim_BPNew_C_UpdateSitType::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateSitType, CallFunc_Greater_DoubleDouble_ReturnValue_4) == 0x000026, "Member 'NikkiAnim_BPNew_C_UpdateSitType::CallFunc_Greater_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateSitType, CallFunc_GetCurveValueWithDefault_OutValue_5) == 0x000028, "Member 'NikkiAnim_BPNew_C_UpdateSitType::CallFunc_GetCurveValueWithDefault_OutValue_5' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateSitType, CallFunc_GetCurveValueWithDefault_ReturnValue_5) == 0x00002C, "Member 'NikkiAnim_BPNew_C_UpdateSitType::CallFunc_GetCurveValueWithDefault_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateSitType, CallFunc_Greater_DoubleDouble_ReturnValue_5) == 0x00002D, "Member 'NikkiAnim_BPNew_C_UpdateSitType::CallFunc_Greater_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateSitType, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000030, "Member 'NikkiAnim_BPNew_C_UpdateSitType::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateSitType, CallFunc_Greater_DoubleDouble_A_ImplicitCast_1) == 0x000038, "Member 'NikkiAnim_BPNew_C_UpdateSitType::CallFunc_Greater_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateSitType, CallFunc_Greater_DoubleDouble_A_ImplicitCast_2) == 0x000040, "Member 'NikkiAnim_BPNew_C_UpdateSitType::CallFunc_Greater_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateSitType, CallFunc_Greater_DoubleDouble_A_ImplicitCast_3) == 0x000048, "Member 'NikkiAnim_BPNew_C_UpdateSitType::CallFunc_Greater_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateSitType, CallFunc_Greater_DoubleDouble_A_ImplicitCast_4) == 0x000050, "Member 'NikkiAnim_BPNew_C_UpdateSitType::CallFunc_Greater_DoubleDouble_A_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateSitType, CallFunc_Greater_DoubleDouble_A_ImplicitCast_5) == 0x000058, "Member 'NikkiAnim_BPNew_C_UpdateSitType::CallFunc_Greater_DoubleDouble_A_ImplicitCast_5' has a wrong offset!");

// Function NikkiAnim_BPNew.NikkiAnim_BPNew_C.UpdateStylizedClothAnimations
// 0x0708 (0x0708 - 0x0000)
struct NikkiAnim_BPNew_C_UpdateStylizedClothAnimations final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_StylizedClothAnimRow                CallFunc_GetDataTableRowFromName_OutRow;           // 0x0038(0x0660)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0698(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_699[0x3];                                      // 0x0699(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x069C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_PawnStateToOverlayData              CallFunc_Array_Get_Item;                           // 0x06A0(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x06D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D9[0x7];                                      // 0x06D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x06E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item_1;                         // 0x06E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UX6OverlayData*                         K2Node_DynamicCast_AsX6Overlay_Data;               // 0x06F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x06F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F9[0x3];                                      // 0x06F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x06FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0700(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0701(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NikkiAnim_BPNew_C_UpdateStylizedClothAnimations) == 0x000008, "Wrong alignment on NikkiAnim_BPNew_C_UpdateStylizedClothAnimations");
static_assert(sizeof(NikkiAnim_BPNew_C_UpdateStylizedClothAnimations) == 0x000708, "Wrong size on NikkiAnim_BPNew_C_UpdateStylizedClothAnimations");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateStylizedClothAnimations, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'NikkiAnim_BPNew_C_UpdateStylizedClothAnimations::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateStylizedClothAnimations, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'NikkiAnim_BPNew_C_UpdateStylizedClothAnimations::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateStylizedClothAnimations, Temp_int_Array_Index_Variable) == 0x000008, "Member 'NikkiAnim_BPNew_C_UpdateStylizedClothAnimations::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateStylizedClothAnimations, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'NikkiAnim_BPNew_C_UpdateStylizedClothAnimations::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateStylizedClothAnimations, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'NikkiAnim_BPNew_C_UpdateStylizedClothAnimations::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateStylizedClothAnimations, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'NikkiAnim_BPNew_C_UpdateStylizedClothAnimations::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateStylizedClothAnimations, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'NikkiAnim_BPNew_C_UpdateStylizedClothAnimations::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateStylizedClothAnimations, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000019, "Member 'NikkiAnim_BPNew_C_UpdateStylizedClothAnimations::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateStylizedClothAnimations, CallFunc_Conv_IntToString_ReturnValue) == 0x000020, "Member 'NikkiAnim_BPNew_C_UpdateStylizedClothAnimations::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateStylizedClothAnimations, CallFunc_Conv_StringToName_ReturnValue) == 0x000030, "Member 'NikkiAnim_BPNew_C_UpdateStylizedClothAnimations::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateStylizedClothAnimations, CallFunc_GetDataTableRowFromName_OutRow) == 0x000038, "Member 'NikkiAnim_BPNew_C_UpdateStylizedClothAnimations::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateStylizedClothAnimations, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000698, "Member 'NikkiAnim_BPNew_C_UpdateStylizedClothAnimations::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateStylizedClothAnimations, CallFunc_Array_Length_ReturnValue) == 0x00069C, "Member 'NikkiAnim_BPNew_C_UpdateStylizedClothAnimations::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateStylizedClothAnimations, CallFunc_Array_Get_Item) == 0x0006A0, "Member 'NikkiAnim_BPNew_C_UpdateStylizedClothAnimations::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateStylizedClothAnimations, CallFunc_Less_IntInt_ReturnValue) == 0x0006D8, "Member 'NikkiAnim_BPNew_C_UpdateStylizedClothAnimations::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateStylizedClothAnimations, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x0006E0, "Member 'NikkiAnim_BPNew_C_UpdateStylizedClothAnimations::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateStylizedClothAnimations, CallFunc_Array_Get_Item_1) == 0x0006E8, "Member 'NikkiAnim_BPNew_C_UpdateStylizedClothAnimations::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateStylizedClothAnimations, K2Node_DynamicCast_AsX6Overlay_Data) == 0x0006F0, "Member 'NikkiAnim_BPNew_C_UpdateStylizedClothAnimations::K2Node_DynamicCast_AsX6Overlay_Data' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateStylizedClothAnimations, K2Node_DynamicCast_bSuccess) == 0x0006F8, "Member 'NikkiAnim_BPNew_C_UpdateStylizedClothAnimations::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateStylizedClothAnimations, CallFunc_Array_Length_ReturnValue_1) == 0x0006FC, "Member 'NikkiAnim_BPNew_C_UpdateStylizedClothAnimations::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateStylizedClothAnimations, CallFunc_IsValid_ReturnValue_1) == 0x000700, "Member 'NikkiAnim_BPNew_C_UpdateStylizedClothAnimations::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NikkiAnim_BPNew_C_UpdateStylizedClothAnimations, CallFunc_Less_IntInt_ReturnValue_1) == 0x000701, "Member 'NikkiAnim_BPNew_C_UpdateStylizedClothAnimations::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

}

