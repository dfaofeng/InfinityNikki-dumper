#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: F_Weapon

#include "Basic.hpp"

#include "Enum_WeaponHandMode_structs.hpp"
#include "EInt32_WeaponEquipAnimType_structs.hpp"
#include "EInt32_WeaponPoseAnimType_structs.hpp"
#include "F_WeaponPose_structs.hpp"


namespace SDK
{

// UserDefinedStruct F_Weapon.F_Weapon
// 0x0038 (0x0038 - 0x0000)
struct FF_Weapon final
{
public:
	class FString                                 weapon_name_6_6D28FD844DCEEC34283801B0C1A4E14D;    // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	EInt32_WeaponEquipAnimType                    equip_anim_type_67_568AF7834FA51C60FCAD4E8C79E0604D; // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInt32_WeaponEquipAnimType                    unequip_anim_type_65_7FC8873C48AEBB801BC984998C548F4C; // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_WeaponHandMode                           default_weapon_hand_36_7ADDBF1D48730F4E630D44BEF7255B7C; // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	EInt32_WeaponPoseAnimType                     default_anim_type_61_7639CE504051764FA470D08B14007EB8; // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FF_WeaponPose>                  pose_list_42_7FE420F54BE05063CA1D1BBB03B0A143;     // 0x0020(0x0010)(Edit, BlueprintVisible)
	double                                        auto_unequip_delaytime_46_8A6285B7468B68239FC33B9E7616220A; // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FF_Weapon) == 0x000008, "Wrong alignment on FF_Weapon");
static_assert(sizeof(FF_Weapon) == 0x000038, "Wrong size on FF_Weapon");
static_assert(offsetof(FF_Weapon, weapon_name_6_6D28FD844DCEEC34283801B0C1A4E14D) == 0x000000, "Member 'FF_Weapon::weapon_name_6_6D28FD844DCEEC34283801B0C1A4E14D' has a wrong offset!");
static_assert(offsetof(FF_Weapon, equip_anim_type_67_568AF7834FA51C60FCAD4E8C79E0604D) == 0x000010, "Member 'FF_Weapon::equip_anim_type_67_568AF7834FA51C60FCAD4E8C79E0604D' has a wrong offset!");
static_assert(offsetof(FF_Weapon, unequip_anim_type_65_7FC8873C48AEBB801BC984998C548F4C) == 0x000014, "Member 'FF_Weapon::unequip_anim_type_65_7FC8873C48AEBB801BC984998C548F4C' has a wrong offset!");
static_assert(offsetof(FF_Weapon, default_weapon_hand_36_7ADDBF1D48730F4E630D44BEF7255B7C) == 0x000018, "Member 'FF_Weapon::default_weapon_hand_36_7ADDBF1D48730F4E630D44BEF7255B7C' has a wrong offset!");
static_assert(offsetof(FF_Weapon, default_anim_type_61_7639CE504051764FA470D08B14007EB8) == 0x00001C, "Member 'FF_Weapon::default_anim_type_61_7639CE504051764FA470D08B14007EB8' has a wrong offset!");
static_assert(offsetof(FF_Weapon, pose_list_42_7FE420F54BE05063CA1D1BBB03B0A143) == 0x000020, "Member 'FF_Weapon::pose_list_42_7FE420F54BE05063CA1D1BBB03B0A143' has a wrong offset!");
static_assert(offsetof(FF_Weapon, auto_unequip_delaytime_46_8A6285B7468B68239FC33B9E7616220A) == 0x000030, "Member 'FF_Weapon::auto_unequip_delaytime_46_8A6285B7468B68239FC33B9E7616220A' has a wrong offset!");

}

