#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_PlayerStrafeMovement

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ABP_PlayerStrafeMovement_structs.hpp"
#include "AnimStruct_CardinalDirections_structs.hpp"
#include "AnimationWarpingRuntime_structs.hpp"
#include "X6Animation_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "ECardinalDirections_structs.hpp"
#include "X6Game_structs.hpp"
#include "X6Game_classes.hpp"
#include "EInputDeviceKeyType_structs.hpp"
#include "EPlayerMovementScenarios_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_PlayerStrafeMovement.ABP_PlayerStrafeMovement_C
// 0x17B0 (0x1DB0 - 0x0600)
class UABP_PlayerStrafeMovement_C final : public UX6NikkiGroundAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0600(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_PlayerStrafeMovement::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;     // 0x0608(0x0003)(HasGetValueTypeHash)
	uint8                                         Pad_60B[0x5];                                      // 0x060B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0610(0x0008)()
	struct FAnimSubsystemInstance_NodeRelevancy   AnimBlueprintExtension_NodeRelevancy;              // 0x0618(0x00A8)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x06C0(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root_16;                             // 0x06C8(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_5;                   // 0x06E8(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_15;                             // 0x07A0(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_14;                             // 0x07C0(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x07E0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x0808(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x0830(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x0858(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x0880(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x08A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x08D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x08F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x0920(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x0948(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x0970(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0998(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x09C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x09E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0A10(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0A38(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0A60(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x0AA8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0AC8(0x0048)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x0B10(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x0B30(0x0020)()
	struct FAnimNode_OrientationWarping           AnimGraphNode_OrientationWarping_1;                // 0x0B50(0x0220)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x0D70(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0D90(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0DB0(0x0020)()
	struct FAnimNode_OrientationWarping           AnimGraphNode_OrientationWarping;                  // 0x0DD0(0x0220)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0FF0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x1038(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x1058(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x10A0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x10C0(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x1188(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x11A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x11D0(0x0028)()
	struct FAnimNode_Mirror                       AnimGraphNode_Mirror_1;                            // 0x11F8(0x0048)()
	struct FAnimNode_X6SequencePlayer             AnimGraphNode_X6SequencePlayer_1;                  // 0x1240(0x0108)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x1348(0x0020)()
	struct FAnimNode_Mirror                       AnimGraphNode_Mirror;                              // 0x1368(0x0048)()
	struct FAnimNode_X6SequencePlayer             AnimGraphNode_X6SequencePlayer;                    // 0x13B0(0x0108)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x14B8(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x14D8(0x0028)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x1500(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x15C8(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x15E8(0x0028)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1610(0x00C8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_13;                             // 0x16D8(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_12;                             // 0x16F8(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_4;                   // 0x1718(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_11;                             // 0x17D0(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_3;                   // 0x17F0(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_10;                             // 0x18A8(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_2;                   // 0x18C8(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_9;                              // 0x1980(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_8;                              // 0x19A0(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_7;                              // 0x19C0(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_6;                              // 0x19E0(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_5;                              // 0x1A00(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_4;                              // 0x1A20(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_3;                              // 0x1A40(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_2;                              // 0x1A60(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_1;                   // 0x1A80(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x1B38(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x1B58(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x1C10(0x0020)()
	float                                         K2Node_PropertyAccess_3;                           // 0x1C30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_2;                           // 0x1C34(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C35[0x3];                                     // 0x1C35(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_PropertyAccess_1;                           // 0x1C38(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_PropertyAccess;                             // 0x1C50(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerMoveableComponent_C*          BP_PlayerMoveableComp;                             // 0x1C68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            BP_CharacterMovement;                              // 0x1C70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 BP_SkeletonMeshComp;                               // 0x1C78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerRegularMovementCompV3_C*      BP_PlayerMovementComp;                             // 0x1C80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerAnimStatesComponent_C*        BP_AnimStatesAComp;                                // 0x1C88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ECardinalDirections                           CurrentDirectionIndex;                             // 0x1C90(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C91[0x7];                                     // 0x1C91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        FwdDeadZone;                                       // 0x1C98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BwdDeadZone;                                       // 0x1CA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CardinalDirectionDeadZone;                         // 0x1CA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWasMovingLastUpdate;                              // 0x1CB0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFirstUpdate;                                     // 0x1CB1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CB2[0x6];                                     // 0x1CB2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        VelocityDirectionAngle;                            // 0x1CB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnimStruct_CardinalDirections         Jog_Cardinals;                                     // 0x1CC0(0x0020)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FAnimStruct_CardinalDirections         Jog_Start_Cardinals;                               // 0x1CE0(0x0020)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FAnimStruct_CardinalDirections         Jog_Stop_Cardinals;                                // 0x1D00(0x0020)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	ECardinalDirections                           StartDirection;                                    // 0x1D20(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECardinalDirections                           StopDirection;                                     // 0x1D21(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D22[0x6];                                     // 0x1D22(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          IdleAnim;                                          // 0x1D28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerStrafeMovementComponent_C*    BP_PlayerStrafeMoveComp;                           // 0x1D30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnabledMove;                                      // 0x1D38(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERegularFloatingJumpStage                     BP_PrevJumpStage;                                  // 0x1D39(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_IsLandStatic;                                   // 0x1D3A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D3B[0x5];                                     // 0x1D3B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          BP_StaticLandingAnim;                              // 0x1D40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_JumpIsRightFoot;                                // 0x1D48(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D49[0x7];                                     // 0x1D49(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          BP_JogLandingAnim;                                 // 0x1D50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_IsLandingHeavy;                                 // 0x1D58(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D59[0x7];                                     // 0x1D59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        BP_FallHighSpeedValue;                             // 0x1D60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerInAirMoveableComponent_C*     BP_InAirMovementComp;                              // 0x1D68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ERegularFloatingJumpStage                     BP_JumpStage;                                      // 0x1D70(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D71[0x7];                                     // 0x1D71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                PlayerVelocity;                                    // 0x1D78(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerRegularInAirMovementComp_C*   BP_RegularInAIrMovementComp;                       // 0x1D90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        InputDeadZone;                                     // 0x1D98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCustomHasMovementInput;                           // 0x1DA0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void AnimLayer_AimOffset(const struct FPoseLink& InPoseForAimOffset, struct FPoseLink* AnimLayer_AimOffset_0);
	void AnimLayer_BehaviorAdditiveMode(const struct FPoseLink& InPoseForPlayerBehavior, struct FPoseLink* AnimLayer_BehaviorAdditiveMode_0);
	void AnimLayer_BehaviorConnectionMode(const struct FPoseLink& InPoseToConnectionMode, struct FPoseLink* AnimLayer_BehaviorConnectionMode_0);
	void AnimLayer_CombatMovement(struct FPoseLink* AnimLayer_CombatMovement_0);
	void AnimLayer_EquipmentAdditiveMode(const struct FPoseLink& InPoseForEquipment, struct FPoseLink* AnimLayer_EquipmentAdditiveMode_0);
	void AnimLayer_Jump(struct FPoseLink* AnimLayer_Jump_0);
	void AnimLayer_Land(struct FPoseLink* AnimLayer_Land_0);
	void AnimLayer_MovementDependObject(struct FPoseLink* AnimLayer_MovementDependObject_0);
	void AnimLayer_NPCAdditiveBehavior(const struct FPoseLink& InPose, struct FPoseLink* AnimLayer_NPCAdditiveBehavior_0);
	void AnimLayer_NPCBehavior(const struct FPoseLink& InPose_0, struct FPoseLink* AnimLayer_NPCBehavior_0);
	void AnimLayer_PlayerControllingTool(struct FPoseLink* AnimLayer_PlayerControllingTool_0);
	void AnimLayer_PlayerRegularMovement(struct FPoseLink* AnimLayer_PlayerRegularMovement_0);
	void AnimLayer_SpecialSurfaceMovement(struct FPoseLink* AnimLayer_SpecialSurfaceMovement_0);
	void AnimLayer_StrafeMovement(struct FPoseLink* AnimLayer_StrafeMovement_0);
	void AnimLayer_UsingCarrierMovement(struct FPoseLink* AnimLayer_UsingCarrierMovement_0);
	void AnimLayer_WhiteBoxMovement(struct FPoseLink* AnimLayer_WhiteBoxMovement_0);
	void BlueprintBeginPlay();
	void BlueprintThreadSafeUpdateAnimation(float DeltaTime);
	void CalcAngleOffset(int32* NewParam);
	void DeterminLandingAnimSequence();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PlayerStrafeMovement_AnimGraphNode_TransitionResult_512C2AED481629CEC343FA9267F4085B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PlayerStrafeMovement_AnimGraphNode_TransitionResult_72F139F848805AE4323649B4AA631341();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PlayerStrafeMovement_AnimGraphNode_TransitionResult_7E49726B4FDE3676653C52A80B74DA93();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PlayerStrafeMovement_AnimGraphNode_TransitionResult_A3D36D88488CE1B4A1D9B0B2D1AAF96F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PlayerStrafeMovement_AnimGraphNode_TransitionResult_DBB63E29401F734C02EB2EA18B83950A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PlayerStrafeMovement_AnimGraphNode_TransitionResult_FF33D83A42D6D6CFC42D79A03A9A6289();
	void Event_OnPlayerFloatingJumpStageChanged_Event(ERegularFloatingJumpStage NewStage, ERegularFloatingJumpStage OldStage);
	void ExecuteUbergraph_ABP_PlayerStrafeMovement(int32 EntryPoint);
	void OnMovementModeChanged_Event(EMovementMode PrevMode, EMovementMode NewMode);
	bool PrepareComponents();
	void SelectCardinalDirection(ECardinalDirections* Direction);
	void SetUpStartAnim(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void SetUpStartState(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void SetUpStopAnim(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void UpdateCycleAnim(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void UpdateEssentialStates();
	void UpdateEssentialValues();
	void UpdateMovementData();
	void UpdateStrafeData();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_PlayerStrafeMovement_C">();
	}
	static class UABP_PlayerStrafeMovement_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_PlayerStrafeMovement_C>();
	}
};
static_assert(alignof(UABP_PlayerStrafeMovement_C) == 0x000010, "Wrong alignment on UABP_PlayerStrafeMovement_C");
static_assert(sizeof(UABP_PlayerStrafeMovement_C) == 0x001DB0, "Wrong size on UABP_PlayerStrafeMovement_C");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, UberGraphFrame) == 0x000600, "Member 'UABP_PlayerStrafeMovement_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, __AnimBlueprintMutables) == 0x000608, "Member 'UABP_PlayerStrafeMovement_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimBlueprintExtension_PropertyAccess) == 0x000610, "Member 'UABP_PlayerStrafeMovement_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimBlueprintExtension_NodeRelevancy) == 0x000618, "Member 'UABP_PlayerStrafeMovement_C::AnimBlueprintExtension_NodeRelevancy' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimBlueprintExtension_Base) == 0x0006C0, "Member 'UABP_PlayerStrafeMovement_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_Root_16) == 0x0006C8, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_Root_16' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_LinkedInputPose_5) == 0x0006E8, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_LinkedInputPose_5' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_Root_15) == 0x0007A0, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_Root_15' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_Root_14) == 0x0007C0, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_Root_14' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_TransitionResult_19) == 0x0007E0, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_TransitionResult_18) == 0x000808, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_TransitionResult_17) == 0x000830, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_TransitionResult_16) == 0x000858, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_TransitionResult_15) == 0x000880, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_TransitionResult_14) == 0x0008A8, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_TransitionResult_13) == 0x0008D0, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_TransitionResult_12) == 0x0008F8, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_TransitionResult_11) == 0x000920, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_TransitionResult_10) == 0x000948, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_TransitionResult_9) == 0x000970, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_TransitionResult_8) == 0x000998, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_TransitionResult_7) == 0x0009C0, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_TransitionResult_6) == 0x0009E8, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_TransitionResult_5) == 0x000A10, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_TransitionResult_4) == 0x000A38, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_SequencePlayer_3) == 0x000A60, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_StateResult_7) == 0x000AA8, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_SequencePlayer_2) == 0x000AC8, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_LocalToComponentSpace_1) == 0x000B10, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x000B30, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_OrientationWarping_1) == 0x000B50, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_OrientationWarping_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_StateResult_6) == 0x000D70, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_LocalToComponentSpace) == 0x000D90, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_ComponentToLocalSpace) == 0x000DB0, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_OrientationWarping) == 0x000DD0, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_OrientationWarping' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_SequencePlayer_1) == 0x000FF0, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_StateResult_5) == 0x001038, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_SequencePlayer) == 0x001058, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_StateResult_4) == 0x0010A0, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_StateMachine_2) == 0x0010C0, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_StateResult_3) == 0x001188, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_TransitionResult_3) == 0x0011A8, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_TransitionResult_2) == 0x0011D0, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_Mirror_1) == 0x0011F8, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_Mirror_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_X6SequencePlayer_1) == 0x001240, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_X6SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_StateResult_2) == 0x001348, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_Mirror) == 0x001368, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_Mirror' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_X6SequencePlayer) == 0x0013B0, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_X6SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_StateResult_1) == 0x0014B8, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_TransitionResult_1) == 0x0014D8, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_StateMachine_1) == 0x001500, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_StateResult) == 0x0015C8, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_TransitionResult) == 0x0015E8, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_StateMachine) == 0x001610, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_Root_13) == 0x0016D8, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_Root_13' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_Root_12) == 0x0016F8, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_Root_12' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_LinkedInputPose_4) == 0x001718, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_LinkedInputPose_4' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_Root_11) == 0x0017D0, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_Root_11' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_LinkedInputPose_3) == 0x0017F0, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_LinkedInputPose_3' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_Root_10) == 0x0018A8, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_Root_10' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_LinkedInputPose_2) == 0x0018C8, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_LinkedInputPose_2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_Root_9) == 0x001980, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_Root_9' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_Root_8) == 0x0019A0, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_Root_8' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_Root_7) == 0x0019C0, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_Root_7' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_Root_6) == 0x0019E0, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_Root_6' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_Root_5) == 0x001A00, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_Root_5' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_Root_4) == 0x001A20, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_Root_4' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_Root_3) == 0x001A40, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_Root_3' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_Root_2) == 0x001A60, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_Root_2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_LinkedInputPose_1) == 0x001A80, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_LinkedInputPose_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_Root_1) == 0x001B38, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_LinkedInputPose) == 0x001B58, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, AnimGraphNode_Root) == 0x001C10, "Member 'UABP_PlayerStrafeMovement_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, K2Node_PropertyAccess_3) == 0x001C30, "Member 'UABP_PlayerStrafeMovement_C::K2Node_PropertyAccess_3' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, K2Node_PropertyAccess_2) == 0x001C34, "Member 'UABP_PlayerStrafeMovement_C::K2Node_PropertyAccess_2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, K2Node_PropertyAccess_1) == 0x001C38, "Member 'UABP_PlayerStrafeMovement_C::K2Node_PropertyAccess_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, K2Node_PropertyAccess) == 0x001C50, "Member 'UABP_PlayerStrafeMovement_C::K2Node_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, BP_PlayerMoveableComp) == 0x001C68, "Member 'UABP_PlayerStrafeMovement_C::BP_PlayerMoveableComp' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, BP_CharacterMovement) == 0x001C70, "Member 'UABP_PlayerStrafeMovement_C::BP_CharacterMovement' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, BP_SkeletonMeshComp) == 0x001C78, "Member 'UABP_PlayerStrafeMovement_C::BP_SkeletonMeshComp' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, BP_PlayerMovementComp) == 0x001C80, "Member 'UABP_PlayerStrafeMovement_C::BP_PlayerMovementComp' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, BP_AnimStatesAComp) == 0x001C88, "Member 'UABP_PlayerStrafeMovement_C::BP_AnimStatesAComp' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, CurrentDirectionIndex) == 0x001C90, "Member 'UABP_PlayerStrafeMovement_C::CurrentDirectionIndex' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, FwdDeadZone) == 0x001C98, "Member 'UABP_PlayerStrafeMovement_C::FwdDeadZone' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, BwdDeadZone) == 0x001CA0, "Member 'UABP_PlayerStrafeMovement_C::BwdDeadZone' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, CardinalDirectionDeadZone) == 0x001CA8, "Member 'UABP_PlayerStrafeMovement_C::CardinalDirectionDeadZone' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, bWasMovingLastUpdate) == 0x001CB0, "Member 'UABP_PlayerStrafeMovement_C::bWasMovingLastUpdate' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, IsFirstUpdate) == 0x001CB1, "Member 'UABP_PlayerStrafeMovement_C::IsFirstUpdate' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, VelocityDirectionAngle) == 0x001CB8, "Member 'UABP_PlayerStrafeMovement_C::VelocityDirectionAngle' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, Jog_Cardinals) == 0x001CC0, "Member 'UABP_PlayerStrafeMovement_C::Jog_Cardinals' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, Jog_Start_Cardinals) == 0x001CE0, "Member 'UABP_PlayerStrafeMovement_C::Jog_Start_Cardinals' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, Jog_Stop_Cardinals) == 0x001D00, "Member 'UABP_PlayerStrafeMovement_C::Jog_Stop_Cardinals' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, StartDirection) == 0x001D20, "Member 'UABP_PlayerStrafeMovement_C::StartDirection' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, StopDirection) == 0x001D21, "Member 'UABP_PlayerStrafeMovement_C::StopDirection' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, IdleAnim) == 0x001D28, "Member 'UABP_PlayerStrafeMovement_C::IdleAnim' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, BP_PlayerStrafeMoveComp) == 0x001D30, "Member 'UABP_PlayerStrafeMovement_C::BP_PlayerStrafeMoveComp' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, bEnabledMove) == 0x001D38, "Member 'UABP_PlayerStrafeMovement_C::bEnabledMove' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, BP_PrevJumpStage) == 0x001D39, "Member 'UABP_PlayerStrafeMovement_C::BP_PrevJumpStage' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, BP_IsLandStatic) == 0x001D3A, "Member 'UABP_PlayerStrafeMovement_C::BP_IsLandStatic' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, BP_StaticLandingAnim) == 0x001D40, "Member 'UABP_PlayerStrafeMovement_C::BP_StaticLandingAnim' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, BP_JumpIsRightFoot) == 0x001D48, "Member 'UABP_PlayerStrafeMovement_C::BP_JumpIsRightFoot' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, BP_JogLandingAnim) == 0x001D50, "Member 'UABP_PlayerStrafeMovement_C::BP_JogLandingAnim' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, BP_IsLandingHeavy) == 0x001D58, "Member 'UABP_PlayerStrafeMovement_C::BP_IsLandingHeavy' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, BP_FallHighSpeedValue) == 0x001D60, "Member 'UABP_PlayerStrafeMovement_C::BP_FallHighSpeedValue' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, BP_InAirMovementComp) == 0x001D68, "Member 'UABP_PlayerStrafeMovement_C::BP_InAirMovementComp' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, BP_JumpStage) == 0x001D70, "Member 'UABP_PlayerStrafeMovement_C::BP_JumpStage' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, PlayerVelocity) == 0x001D78, "Member 'UABP_PlayerStrafeMovement_C::PlayerVelocity' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, BP_RegularInAIrMovementComp) == 0x001D90, "Member 'UABP_PlayerStrafeMovement_C::BP_RegularInAIrMovementComp' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, InputDeadZone) == 0x001D98, "Member 'UABP_PlayerStrafeMovement_C::InputDeadZone' has a wrong offset!");
static_assert(offsetof(UABP_PlayerStrafeMovement_C, bCustomHasMovementInput) == 0x001DA0, "Member 'UABP_PlayerStrafeMovement_C::bCustomHasMovementInput' has a wrong offset!");

}

