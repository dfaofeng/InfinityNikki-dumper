#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FluxDataComponent

#include "Basic.hpp"

#include "BP_FluxDataComponent_classes.hpp"
#include "BP_FluxDataComponent_parameters.hpp"


namespace SDK
{

// Function BP_FluxDataComponent.BP_FluxDataComponent_C.Activation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UActorComponent*                  Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    bReset                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FluxDataComponent_C::Activation(class UActorComponent* Component, bool bReset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxDataComponent_C", "Activation");

	Params::BP_FluxDataComponent_C_Activation Parms{};

	Parms.Component = Component;
	Parms.bReset = bReset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FluxDataComponent.BP_FluxDataComponent_C.ApplyNiagaraParameters
// (Protected, BlueprintCallable, BlueprintEvent)

void UBP_FluxDataComponent_C::ApplyNiagaraParameters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxDataComponent_C", "ApplyNiagaraParameters");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FluxDataComponent.BP_FluxDataComponent_C.Deactivation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UActorComponent*                  Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_FluxDataComponent_C::Deactivation(class UActorComponent* Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxDataComponent_C", "Deactivation");

	Params::BP_FluxDataComponent_C_Deactivation Parms{};

	Parms.Component = Component;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FluxDataComponent.BP_FluxDataComponent_C.ExecuteUbergraph_BP_FluxDataComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FluxDataComponent_C::ExecuteUbergraph_BP_FluxDataComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxDataComponent_C", "ExecuteUbergraph_BP_FluxDataComponent");

	Params::BP_FluxDataComponent_C_ExecuteUbergraph_BP_FluxDataComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FluxDataComponent.BP_FluxDataComponent_C.Get Readback Indexed Position
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         Velocity                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 Height                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FluxDataComponent_C::Get_Readback_Indexed_Position(int32 Index_0, struct FVector* Location, struct FVector* Velocity, double* Height)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxDataComponent_C", "Get Readback Indexed Position");

	Params::BP_FluxDataComponent_C_Get_Readback_Indexed_Position Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);

	if (Velocity != nullptr)
		*Velocity = std::move(Parms.Velocity);

	if (Height != nullptr)
		*Height = Parms.Height;
}


// Function BP_FluxDataComponent.BP_FluxDataComponent_C.InitEventListener
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_FluxDataComponent_C::InitEventListener()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxDataComponent_C", "InitEventListener");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FluxDataComponent.BP_FluxDataComponent_C.ReadParticleData
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<struct FBasicParticleData>&Data                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UNiagaraSystem*                   NiagaraSystem                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_FluxDataComponent_C::ReadParticleData(const TArray<struct FBasicParticleData>& Data, class UNiagaraSystem* NiagaraSystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxDataComponent_C", "ReadParticleData");

	Params::BP_FluxDataComponent_C_ReadParticleData Parms{};

	Parms.Data = std::move(Data);
	Parms.NiagaraSystem = NiagaraSystem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FluxDataComponent.BP_FluxDataComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_FluxDataComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxDataComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FluxDataComponent.BP_FluxDataComponent_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FluxDataComponent_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxDataComponent_C", "ReceiveEndPlay");

	Params::BP_FluxDataComponent_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FluxDataComponent.BP_FluxDataComponent_C.ReceiveParticleData
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<struct FBasicParticleData>&Data                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UNiagaraSystem*                   NiagaraSystem                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   SimulationPositionOffset                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FluxDataComponent_C::ReceiveParticleData(const TArray<struct FBasicParticleData>& Data, class UNiagaraSystem* NiagaraSystem, const struct FVector& SimulationPositionOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxDataComponent_C", "ReceiveParticleData");

	Params::BP_FluxDataComponent_C_ReceiveParticleData Parms{};

	Parms.Data = std::move(Data);
	Parms.NiagaraSystem = NiagaraSystem;
	Parms.SimulationPositionOffset = std::move(SimulationPositionOffset);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FluxDataComponent.BP_FluxDataComponent_C.ReceiveReadData
// (Net, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<struct FBasicParticleData>&Data                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_FluxDataComponent_C::ReceiveReadData(const TArray<struct FBasicParticleData>& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxDataComponent_C", "ReceiveReadData");

	Params::BP_FluxDataComponent_C_ReceiveReadData Parms{};

	Parms.Data = std::move(Data);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FluxDataComponent.BP_FluxDataComponent_C.RemoveEventListener
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_FluxDataComponent_C::RemoveEventListener()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxDataComponent_C", "RemoveEventListener");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FluxDataComponent.BP_FluxDataComponent_C.SetPointData
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBasicParticleData&              ParticleDataStructure                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UBP_FluxDataComponent_C::SetPointData(struct FBasicParticleData& ParticleDataStructure)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxDataComponent_C", "SetPointData");

	Params::BP_FluxDataComponent_C_SetPointData Parms{};

	Parms.ParticleDataStructure = std::move(ParticleDataStructure);

	UObject::ProcessEvent(Func, &Parms);

	ParticleDataStructure = std::move(Parms.ParticleDataStructure);
}


// Function BP_FluxDataComponent.BP_FluxDataComponent_C.SetQuadData
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FBasicParticleData>&      ParticleDataStructure                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_FluxDataComponent_C::SetQuadData(TArray<struct FBasicParticleData>& ParticleDataStructure)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxDataComponent_C", "SetQuadData");

	Params::BP_FluxDataComponent_C_SetQuadData Parms{};

	Parms.ParticleDataStructure = std::move(ParticleDataStructure);

	UObject::ProcessEvent(Func, &Parms);

	ParticleDataStructure = std::move(Parms.ParticleDataStructure);
}


// Function BP_FluxDataComponent.BP_FluxDataComponent_C.SetRelativeSamplePoints
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FVector>&                 Points                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_FluxDataComponent_C::SetRelativeSamplePoints(TArray<struct FVector>& Points)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxDataComponent_C", "SetRelativeSamplePoints");

	Params::BP_FluxDataComponent_C_SetRelativeSamplePoints Parms{};

	Parms.Points = std::move(Points);

	UObject::ProcessEvent(Func, &Parms);

	Points = std::move(Parms.Points);
}


// Function BP_FluxDataComponent.BP_FluxDataComponent_C.SetSurfaceActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class AActor*&                    Interface                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void UBP_FluxDataComponent_C::SetSurfaceActor(const class AActor*& Interface)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxDataComponent_C", "SetSurfaceActor");

	Params::BP_FluxDataComponent_C_SetSurfaceActor Parms{};

	Parms.Interface = Interface;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FluxDataComponent.BP_FluxDataComponent_C.GetOwnerComponent
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class USceneComponent**                 SceneComponent                                         (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_FluxDataComponent_C::GetOwnerComponent(class USceneComponent** SceneComponent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxDataComponent_C", "GetOwnerComponent");

	Params::BP_FluxDataComponent_C_GetOwnerComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SceneComponent != nullptr)
		*SceneComponent = Parms.SceneComponent;
}


// Function BP_FluxDataComponent.BP_FluxDataComponent_C.GetWorldSurface
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor**                          Output                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_FluxDataComponent_C::GetWorldSurface(class AActor** Output) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxDataComponent_C", "GetWorldSurface");

	Params::BP_FluxDataComponent_C_GetWorldSurface Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = Parms.Output;
}

}

