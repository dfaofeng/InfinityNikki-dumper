#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MonsterPerformanceProcessorComponent

#include "Basic.hpp"

#include "EMonsterDropTag_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MonsterPerformanceProcessorComponent.BP_MonsterPerformanceProcessorComponent_C
// 0x0050 (0x00F8 - 0x00A8)
class UBP_MonsterPerformanceProcessorComponent_C final : public UActorComponent
{
public:
	bool                                          ShadowDecal;                                       // 0x00A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LifeSpan;                                          // 0x00A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMonsterDropTag                               MonsterSpawnerTag;                                 // 0x00AA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_AB[0x5];                                       // 0x00AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DecalOpacity;                                      // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DecalRadius;                                       // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FloorTraceLength;                                  // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   ShadowActorClass;                                  // 0x00C8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          bNoOutlineWithCustomDissolve;                      // 0x00F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LockBossHP;                                        // 0x00F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2[0x2];                                       // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumBossHPLocks;                                    // 0x00F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BPI_SetCustomBossCamera(class UCameraBaseParamsData* BossCameraConfig, const struct FViewTargetTransitionParams& BlendInParam, class UClass* CameraSynchronizerClass);
	void BPI_ResetCustomBossCamera(const struct FViewTargetTransitionParams& BlendOutParam);
	void BPI_PartDissolve(class UMeshComponent* mesh, int32 MaterialIndex, class UCurveFloat* DissolveCurve);
	void BP_SetHPForceHide(bool bForceHide);
	void BP_BreakHPLock();

	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MonsterPerformanceProcessorComponent_C">();
	}
	static class UBP_MonsterPerformanceProcessorComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_MonsterPerformanceProcessorComponent_C>();
	}
};
static_assert(alignof(UBP_MonsterPerformanceProcessorComponent_C) == 0x000008, "Wrong alignment on UBP_MonsterPerformanceProcessorComponent_C");
static_assert(sizeof(UBP_MonsterPerformanceProcessorComponent_C) == 0x0000F8, "Wrong size on UBP_MonsterPerformanceProcessorComponent_C");
static_assert(offsetof(UBP_MonsterPerformanceProcessorComponent_C, ShadowDecal) == 0x0000A8, "Member 'UBP_MonsterPerformanceProcessorComponent_C::ShadowDecal' has a wrong offset!");
static_assert(offsetof(UBP_MonsterPerformanceProcessorComponent_C, LifeSpan) == 0x0000A9, "Member 'UBP_MonsterPerformanceProcessorComponent_C::LifeSpan' has a wrong offset!");
static_assert(offsetof(UBP_MonsterPerformanceProcessorComponent_C, MonsterSpawnerTag) == 0x0000AA, "Member 'UBP_MonsterPerformanceProcessorComponent_C::MonsterSpawnerTag' has a wrong offset!");
static_assert(offsetof(UBP_MonsterPerformanceProcessorComponent_C, DecalOpacity) == 0x0000B0, "Member 'UBP_MonsterPerformanceProcessorComponent_C::DecalOpacity' has a wrong offset!");
static_assert(offsetof(UBP_MonsterPerformanceProcessorComponent_C, DecalRadius) == 0x0000B8, "Member 'UBP_MonsterPerformanceProcessorComponent_C::DecalRadius' has a wrong offset!");
static_assert(offsetof(UBP_MonsterPerformanceProcessorComponent_C, FloorTraceLength) == 0x0000C0, "Member 'UBP_MonsterPerformanceProcessorComponent_C::FloorTraceLength' has a wrong offset!");
static_assert(offsetof(UBP_MonsterPerformanceProcessorComponent_C, ShadowActorClass) == 0x0000C8, "Member 'UBP_MonsterPerformanceProcessorComponent_C::ShadowActorClass' has a wrong offset!");
static_assert(offsetof(UBP_MonsterPerformanceProcessorComponent_C, bNoOutlineWithCustomDissolve) == 0x0000F0, "Member 'UBP_MonsterPerformanceProcessorComponent_C::bNoOutlineWithCustomDissolve' has a wrong offset!");
static_assert(offsetof(UBP_MonsterPerformanceProcessorComponent_C, LockBossHP) == 0x0000F1, "Member 'UBP_MonsterPerformanceProcessorComponent_C::LockBossHP' has a wrong offset!");
static_assert(offsetof(UBP_MonsterPerformanceProcessorComponent_C, NumBossHPLocks) == 0x0000F4, "Member 'UBP_MonsterPerformanceProcessorComponent_C::NumBossHPLocks' has a wrong offset!");

}

