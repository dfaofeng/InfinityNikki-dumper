#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FocusOnTargetCamera

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_FocusOnTargetCamera.BP_FocusOnTargetCamera_C.ExecuteUbergraph_BP_FocusOnTargetCamera
// 0x0004 (0x0004 - 0x0000)
struct BP_FocusOnTargetCamera_C_ExecuteUbergraph_BP_FocusOnTargetCamera final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FocusOnTargetCamera_C_ExecuteUbergraph_BP_FocusOnTargetCamera) == 0x000004, "Wrong alignment on BP_FocusOnTargetCamera_C_ExecuteUbergraph_BP_FocusOnTargetCamera");
static_assert(sizeof(BP_FocusOnTargetCamera_C_ExecuteUbergraph_BP_FocusOnTargetCamera) == 0x000004, "Wrong size on BP_FocusOnTargetCamera_C_ExecuteUbergraph_BP_FocusOnTargetCamera");
static_assert(offsetof(BP_FocusOnTargetCamera_C_ExecuteUbergraph_BP_FocusOnTargetCamera, EntryPoint) == 0x000000, "Member 'BP_FocusOnTargetCamera_C_ExecuteUbergraph_BP_FocusOnTargetCamera::EntryPoint' has a wrong offset!");

// Function BP_FocusOnTargetCamera.BP_FocusOnTargetCamera_C.BP_EndFocus
// 0x0002 (0x0002 - 0x0000)
struct BP_FocusOnTargetCamera_C_BP_EndFocus final
{
public:
	bool                                          bImmediately;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bBlendToTop;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FocusOnTargetCamera_C_BP_EndFocus) == 0x000001, "Wrong alignment on BP_FocusOnTargetCamera_C_BP_EndFocus");
static_assert(sizeof(BP_FocusOnTargetCamera_C_BP_EndFocus) == 0x000002, "Wrong size on BP_FocusOnTargetCamera_C_BP_EndFocus");
static_assert(offsetof(BP_FocusOnTargetCamera_C_BP_EndFocus, bImmediately) == 0x000000, "Member 'BP_FocusOnTargetCamera_C_BP_EndFocus::bImmediately' has a wrong offset!");
static_assert(offsetof(BP_FocusOnTargetCamera_C_BP_EndFocus, bBlendToTop) == 0x000001, "Member 'BP_FocusOnTargetCamera_C_BP_EndFocus::bBlendToTop' has a wrong offset!");

// Function BP_FocusOnTargetCamera.BP_FocusOnTargetCamera_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct BP_FocusOnTargetCamera_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_FocusOnTargetCamera_C_GetModuleName) == 0x000008, "Wrong alignment on BP_FocusOnTargetCamera_C_GetModuleName");
static_assert(sizeof(BP_FocusOnTargetCamera_C_GetModuleName) == 0x000010, "Wrong size on BP_FocusOnTargetCamera_C_GetModuleName");
static_assert(offsetof(BP_FocusOnTargetCamera_C_GetModuleName, ReturnValue) == 0x000000, "Member 'BP_FocusOnTargetCamera_C_GetModuleName::ReturnValue' has a wrong offset!");

}

