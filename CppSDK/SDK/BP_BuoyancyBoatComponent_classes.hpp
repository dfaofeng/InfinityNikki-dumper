#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BuoyancyBoatComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "BS_FluxBuoyancyPontoon_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BuoyancyBoatComponent.BP_BuoyancyBoatComponent_C
// 0x00A8 (0x0150 - 0x00A8)
class UBP_BuoyancyBoatComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<struct FBS_FluxBuoyancyPontoon>        Pontoons;                                          // 0x00B0(0x0010)(Edit, BlueprintVisible)
	class UPrimitiveComponent*                    CachedMesh;                                        // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        BaseDensity;                                       // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BaseDrag;                                          // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_FluxDataComponent_C*                FluxData;                                          // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        BaseForce;                                         // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Debug;                                             // 0x00E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UsePontoonsInFluxData;                             // 0x00E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          inWater;                                           // 0x00EA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EB[0x5];                                       // 0x00EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineComponent*                       Spline;                                            // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APCG_SplineMesh_UE_C*                   BouyancyBody;                                      // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          isSwing;                                           // 0x0100(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBS_FluxBuoyancyPontoon>        CurrentPontoons;                                   // 0x0108(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        Amplitude;                                         // 0x0118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Frequency;                                         // 0x0120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        InitPosS;                                          // 0x0128(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        WaterHighOffset;                                   // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WaterHigh;                                         // 0x0140(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Phase;                                             // 0x0148(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void DebugPontoons();
	void ExecuteUbergraph_BP_BuoyancyBoatComponent(int32 EntryPoint);
	void GetCapVolume(double H, double R, double* V);
	void GetSpghereUnderPlaneVolume(double Distance, double Radius, double* V);
	void GetSphereVolume(double R, double* V);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void UpdateBuoyancy(double DeltaTime, const struct FBS_FluxBuoyancyPontoon& BuoyancyData, const struct FVector& InitPos);

	void GetOwnerMesh(class UPrimitiveComponent** Output_Get) const;
	void GetPontoonsLocations(TArray<struct FVector>* Locations) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BuoyancyBoatComponent_C">();
	}
	static class UBP_BuoyancyBoatComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_BuoyancyBoatComponent_C>();
	}
};
static_assert(alignof(UBP_BuoyancyBoatComponent_C) == 0x000008, "Wrong alignment on UBP_BuoyancyBoatComponent_C");
static_assert(sizeof(UBP_BuoyancyBoatComponent_C) == 0x000150, "Wrong size on UBP_BuoyancyBoatComponent_C");
static_assert(offsetof(UBP_BuoyancyBoatComponent_C, UberGraphFrame) == 0x0000A8, "Member 'UBP_BuoyancyBoatComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_BuoyancyBoatComponent_C, Pontoons) == 0x0000B0, "Member 'UBP_BuoyancyBoatComponent_C::Pontoons' has a wrong offset!");
static_assert(offsetof(UBP_BuoyancyBoatComponent_C, CachedMesh) == 0x0000C0, "Member 'UBP_BuoyancyBoatComponent_C::CachedMesh' has a wrong offset!");
static_assert(offsetof(UBP_BuoyancyBoatComponent_C, BaseDensity) == 0x0000C8, "Member 'UBP_BuoyancyBoatComponent_C::BaseDensity' has a wrong offset!");
static_assert(offsetof(UBP_BuoyancyBoatComponent_C, BaseDrag) == 0x0000D0, "Member 'UBP_BuoyancyBoatComponent_C::BaseDrag' has a wrong offset!");
static_assert(offsetof(UBP_BuoyancyBoatComponent_C, FluxData) == 0x0000D8, "Member 'UBP_BuoyancyBoatComponent_C::FluxData' has a wrong offset!");
static_assert(offsetof(UBP_BuoyancyBoatComponent_C, BaseForce) == 0x0000E0, "Member 'UBP_BuoyancyBoatComponent_C::BaseForce' has a wrong offset!");
static_assert(offsetof(UBP_BuoyancyBoatComponent_C, Debug) == 0x0000E8, "Member 'UBP_BuoyancyBoatComponent_C::Debug' has a wrong offset!");
static_assert(offsetof(UBP_BuoyancyBoatComponent_C, UsePontoonsInFluxData) == 0x0000E9, "Member 'UBP_BuoyancyBoatComponent_C::UsePontoonsInFluxData' has a wrong offset!");
static_assert(offsetof(UBP_BuoyancyBoatComponent_C, inWater) == 0x0000EA, "Member 'UBP_BuoyancyBoatComponent_C::inWater' has a wrong offset!");
static_assert(offsetof(UBP_BuoyancyBoatComponent_C, Spline) == 0x0000F0, "Member 'UBP_BuoyancyBoatComponent_C::Spline' has a wrong offset!");
static_assert(offsetof(UBP_BuoyancyBoatComponent_C, BouyancyBody) == 0x0000F8, "Member 'UBP_BuoyancyBoatComponent_C::BouyancyBody' has a wrong offset!");
static_assert(offsetof(UBP_BuoyancyBoatComponent_C, isSwing) == 0x000100, "Member 'UBP_BuoyancyBoatComponent_C::isSwing' has a wrong offset!");
static_assert(offsetof(UBP_BuoyancyBoatComponent_C, CurrentPontoons) == 0x000108, "Member 'UBP_BuoyancyBoatComponent_C::CurrentPontoons' has a wrong offset!");
static_assert(offsetof(UBP_BuoyancyBoatComponent_C, Amplitude) == 0x000118, "Member 'UBP_BuoyancyBoatComponent_C::Amplitude' has a wrong offset!");
static_assert(offsetof(UBP_BuoyancyBoatComponent_C, Frequency) == 0x000120, "Member 'UBP_BuoyancyBoatComponent_C::Frequency' has a wrong offset!");
static_assert(offsetof(UBP_BuoyancyBoatComponent_C, InitPosS) == 0x000128, "Member 'UBP_BuoyancyBoatComponent_C::InitPosS' has a wrong offset!");
static_assert(offsetof(UBP_BuoyancyBoatComponent_C, WaterHighOffset) == 0x000138, "Member 'UBP_BuoyancyBoatComponent_C::WaterHighOffset' has a wrong offset!");
static_assert(offsetof(UBP_BuoyancyBoatComponent_C, WaterHigh) == 0x000140, "Member 'UBP_BuoyancyBoatComponent_C::WaterHigh' has a wrong offset!");
static_assert(offsetof(UBP_BuoyancyBoatComponent_C, Phase) == 0x000148, "Member 'UBP_BuoyancyBoatComponent_C::Phase' has a wrong offset!");

}

