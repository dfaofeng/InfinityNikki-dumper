#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GC_OutlineBase

#include "Basic.hpp"

#include "GC_OutlineBase_classes.hpp"
#include "GC_OutlineBase_parameters.hpp"


namespace SDK
{

// Function GC_OutlineBase.GC_OutlineBase_C.BP_AddMeshEffect
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMeshComponent*                   EffectMesh                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void AGC_OutlineBase_C::BP_AddMeshEffect(class UMeshComponent* EffectMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_OutlineBase_C", "BP_AddMeshEffect");

	Params::GC_OutlineBase_C_BP_AddMeshEffect Parms{};

	Parms.EffectMesh = EffectMesh;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GC_OutlineBase.GC_OutlineBase_C.BP_RemoveEffect
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMeshComponent*                   EffectMesh                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void AGC_OutlineBase_C::BP_RemoveEffect(class UMeshComponent* EffectMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_OutlineBase_C", "BP_RemoveEffect");

	Params::GC_OutlineBase_C_BP_RemoveEffect Parms{};

	Parms.EffectMesh = EffectMesh;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GC_OutlineBase.GC_OutlineBase_C.OnActive
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MyTarget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayCueParameters&    Parameters                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AGC_OutlineBase_C::OnActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_OutlineBase_C", "OnActive");

	Params::GC_OutlineBase_C_OnActive Parms{};

	Parms.MyTarget = MyTarget;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GC_OutlineBase.GC_OutlineBase_C.OnRemove
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MyTarget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayCueParameters&    Parameters                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AGC_OutlineBase_C::OnRemove(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_OutlineBase_C", "OnRemove");

	Params::GC_OutlineBase_C_OnRemove Parms{};

	Parms.MyTarget = MyTarget;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GC_OutlineBase.GC_OutlineBase_C.GetModuleName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString AGC_OutlineBase_C::GetModuleName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_OutlineBase_C", "GetModuleName");

	Params::GC_OutlineBase_C_GetModuleName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

