#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CustomRayMarchingCloud

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CustomRayMarchingCloud.BP_CustomRayMarchingCloud_C
// 0x0130 (0x04D8 - 0x03A8)
class ABP_CustomRayMarchingCloud_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          HiddenBox;                                         // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane;                                             // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Mid;                                               // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Material;                                          // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Material_Mobile;                                   // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Cloud_Scale_Km;                                    // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Cloud_Bias;                                        // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Cloud_Density;                                     // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Cloud_Density_Mobile;                              // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Cloud_Altitude_Km;                                 // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Cloud_Layer_Thickness_Km;                          // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Cloud_Detail_Scale;                                // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Cloud_Detail_Scale_2;                              // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Cloud_Detail_Amount;                               // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Cloud_Detail_Amount_2;                             // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Atmosphere_Scale_Relative_to_Earth;                // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        StepSize;                                          // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Stepsize_Mobile;                                   // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Shadow_Density;                                    // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Shadow_Density_Mobile;                             // 0x0450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Upper_Falloff;                                     // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Upper_Falloff_Mobile;                              // 0x0460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Lower_Falloff;                                     // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Offset;                                            // 0x0470(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Texture_Altitude_Shift;                            // 0x0480(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Shadow_Octave_Density;                             // 0x0488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Shadow_Octave_Intensity;                           // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Detail_Mip;                                        // 0x0498(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Detail_Mip_2;                                      // 0x04A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Ambient_Density;                                   // 0x04A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Powder_Density;                                    // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPCuse_;                                          // 0x04B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B9[0x7];                                      // 0x04B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HiddenBoxScale;                                    // 0x04C0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Construction();
	void ExecuteUbergraph_BP_CustomRayMarchingCloud(int32 EntryPoint);
	void Hidden();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void ShowCloud();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CustomRayMarchingCloud_C">();
	}
	static class ABP_CustomRayMarchingCloud_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CustomRayMarchingCloud_C>();
	}
};
static_assert(alignof(ABP_CustomRayMarchingCloud_C) == 0x000008, "Wrong alignment on ABP_CustomRayMarchingCloud_C");
static_assert(sizeof(ABP_CustomRayMarchingCloud_C) == 0x0004D8, "Wrong size on ABP_CustomRayMarchingCloud_C");
static_assert(offsetof(ABP_CustomRayMarchingCloud_C, UberGraphFrame) == 0x0003A8, "Member 'ABP_CustomRayMarchingCloud_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_CustomRayMarchingCloud_C, HiddenBox) == 0x0003B0, "Member 'ABP_CustomRayMarchingCloud_C::HiddenBox' has a wrong offset!");
static_assert(offsetof(ABP_CustomRayMarchingCloud_C, Plane) == 0x0003B8, "Member 'ABP_CustomRayMarchingCloud_C::Plane' has a wrong offset!");
static_assert(offsetof(ABP_CustomRayMarchingCloud_C, DefaultSceneRoot) == 0x0003C0, "Member 'ABP_CustomRayMarchingCloud_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_CustomRayMarchingCloud_C, Mid) == 0x0003C8, "Member 'ABP_CustomRayMarchingCloud_C::Mid' has a wrong offset!");
static_assert(offsetof(ABP_CustomRayMarchingCloud_C, Material) == 0x0003D0, "Member 'ABP_CustomRayMarchingCloud_C::Material' has a wrong offset!");
static_assert(offsetof(ABP_CustomRayMarchingCloud_C, Material_Mobile) == 0x0003D8, "Member 'ABP_CustomRayMarchingCloud_C::Material_Mobile' has a wrong offset!");
static_assert(offsetof(ABP_CustomRayMarchingCloud_C, Cloud_Scale_Km) == 0x0003E0, "Member 'ABP_CustomRayMarchingCloud_C::Cloud_Scale_Km' has a wrong offset!");
static_assert(offsetof(ABP_CustomRayMarchingCloud_C, Cloud_Bias) == 0x0003E8, "Member 'ABP_CustomRayMarchingCloud_C::Cloud_Bias' has a wrong offset!");
static_assert(offsetof(ABP_CustomRayMarchingCloud_C, Cloud_Density) == 0x0003F0, "Member 'ABP_CustomRayMarchingCloud_C::Cloud_Density' has a wrong offset!");
static_assert(offsetof(ABP_CustomRayMarchingCloud_C, Cloud_Density_Mobile) == 0x0003F8, "Member 'ABP_CustomRayMarchingCloud_C::Cloud_Density_Mobile' has a wrong offset!");
static_assert(offsetof(ABP_CustomRayMarchingCloud_C, Cloud_Altitude_Km) == 0x000400, "Member 'ABP_CustomRayMarchingCloud_C::Cloud_Altitude_Km' has a wrong offset!");
static_assert(offsetof(ABP_CustomRayMarchingCloud_C, Cloud_Layer_Thickness_Km) == 0x000408, "Member 'ABP_CustomRayMarchingCloud_C::Cloud_Layer_Thickness_Km' has a wrong offset!");
static_assert(offsetof(ABP_CustomRayMarchingCloud_C, Cloud_Detail_Scale) == 0x000410, "Member 'ABP_CustomRayMarchingCloud_C::Cloud_Detail_Scale' has a wrong offset!");
static_assert(offsetof(ABP_CustomRayMarchingCloud_C, Cloud_Detail_Scale_2) == 0x000418, "Member 'ABP_CustomRayMarchingCloud_C::Cloud_Detail_Scale_2' has a wrong offset!");
static_assert(offsetof(ABP_CustomRayMarchingCloud_C, Cloud_Detail_Amount) == 0x000420, "Member 'ABP_CustomRayMarchingCloud_C::Cloud_Detail_Amount' has a wrong offset!");
static_assert(offsetof(ABP_CustomRayMarchingCloud_C, Cloud_Detail_Amount_2) == 0x000428, "Member 'ABP_CustomRayMarchingCloud_C::Cloud_Detail_Amount_2' has a wrong offset!");
static_assert(offsetof(ABP_CustomRayMarchingCloud_C, Atmosphere_Scale_Relative_to_Earth) == 0x000430, "Member 'ABP_CustomRayMarchingCloud_C::Atmosphere_Scale_Relative_to_Earth' has a wrong offset!");
static_assert(offsetof(ABP_CustomRayMarchingCloud_C, StepSize) == 0x000438, "Member 'ABP_CustomRayMarchingCloud_C::StepSize' has a wrong offset!");
static_assert(offsetof(ABP_CustomRayMarchingCloud_C, Stepsize_Mobile) == 0x000440, "Member 'ABP_CustomRayMarchingCloud_C::Stepsize_Mobile' has a wrong offset!");
static_assert(offsetof(ABP_CustomRayMarchingCloud_C, Shadow_Density) == 0x000448, "Member 'ABP_CustomRayMarchingCloud_C::Shadow_Density' has a wrong offset!");
static_assert(offsetof(ABP_CustomRayMarchingCloud_C, Shadow_Density_Mobile) == 0x000450, "Member 'ABP_CustomRayMarchingCloud_C::Shadow_Density_Mobile' has a wrong offset!");
static_assert(offsetof(ABP_CustomRayMarchingCloud_C, Upper_Falloff) == 0x000458, "Member 'ABP_CustomRayMarchingCloud_C::Upper_Falloff' has a wrong offset!");
static_assert(offsetof(ABP_CustomRayMarchingCloud_C, Upper_Falloff_Mobile) == 0x000460, "Member 'ABP_CustomRayMarchingCloud_C::Upper_Falloff_Mobile' has a wrong offset!");
static_assert(offsetof(ABP_CustomRayMarchingCloud_C, Lower_Falloff) == 0x000468, "Member 'ABP_CustomRayMarchingCloud_C::Lower_Falloff' has a wrong offset!");
static_assert(offsetof(ABP_CustomRayMarchingCloud_C, Offset) == 0x000470, "Member 'ABP_CustomRayMarchingCloud_C::Offset' has a wrong offset!");
static_assert(offsetof(ABP_CustomRayMarchingCloud_C, Texture_Altitude_Shift) == 0x000480, "Member 'ABP_CustomRayMarchingCloud_C::Texture_Altitude_Shift' has a wrong offset!");
static_assert(offsetof(ABP_CustomRayMarchingCloud_C, Shadow_Octave_Density) == 0x000488, "Member 'ABP_CustomRayMarchingCloud_C::Shadow_Octave_Density' has a wrong offset!");
static_assert(offsetof(ABP_CustomRayMarchingCloud_C, Shadow_Octave_Intensity) == 0x000490, "Member 'ABP_CustomRayMarchingCloud_C::Shadow_Octave_Intensity' has a wrong offset!");
static_assert(offsetof(ABP_CustomRayMarchingCloud_C, Detail_Mip) == 0x000498, "Member 'ABP_CustomRayMarchingCloud_C::Detail_Mip' has a wrong offset!");
static_assert(offsetof(ABP_CustomRayMarchingCloud_C, Detail_Mip_2) == 0x0004A0, "Member 'ABP_CustomRayMarchingCloud_C::Detail_Mip_2' has a wrong offset!");
static_assert(offsetof(ABP_CustomRayMarchingCloud_C, Ambient_Density) == 0x0004A8, "Member 'ABP_CustomRayMarchingCloud_C::Ambient_Density' has a wrong offset!");
static_assert(offsetof(ABP_CustomRayMarchingCloud_C, Powder_Density) == 0x0004B0, "Member 'ABP_CustomRayMarchingCloud_C::Powder_Density' has a wrong offset!");
static_assert(offsetof(ABP_CustomRayMarchingCloud_C, IsPCuse_) == 0x0004B8, "Member 'ABP_CustomRayMarchingCloud_C::IsPCuse_' has a wrong offset!");
static_assert(offsetof(ABP_CustomRayMarchingCloud_C, HiddenBoxScale) == 0x0004C0, "Member 'ABP_CustomRayMarchingCloud_C::HiddenBoxScale' has a wrong offset!");

}

