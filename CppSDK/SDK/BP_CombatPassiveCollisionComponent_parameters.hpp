#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CombatPassiveCollisionComponent

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_CombatPassiveCollisionComponent.BP_CombatPassiveCollisionComponent_C.ResetEnableByAnimNotify
// 0x0001 (0x0001 - 0x0000)
struct BP_CombatPassiveCollisionComponent_C_ResetEnableByAnimNotify final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CombatPassiveCollisionComponent_C_ResetEnableByAnimNotify) == 0x000001, "Wrong alignment on BP_CombatPassiveCollisionComponent_C_ResetEnableByAnimNotify");
static_assert(sizeof(BP_CombatPassiveCollisionComponent_C_ResetEnableByAnimNotify) == 0x000001, "Wrong size on BP_CombatPassiveCollisionComponent_C_ResetEnableByAnimNotify");
static_assert(offsetof(BP_CombatPassiveCollisionComponent_C_ResetEnableByAnimNotify, Enable) == 0x000000, "Member 'BP_CombatPassiveCollisionComponent_C_ResetEnableByAnimNotify::Enable' has a wrong offset!");

// Function BP_CombatPassiveCollisionComponent.BP_CombatPassiveCollisionComponent_C.BP_SetSingleComponentForDamage
// 0x0008 (0x0008 - 0x0000)
struct BP_CombatPassiveCollisionComponent_C_BP_SetSingleComponentForDamage final
{
public:
	class UActorComponent*                        TargetComponent;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CombatPassiveCollisionComponent_C_BP_SetSingleComponentForDamage) == 0x000008, "Wrong alignment on BP_CombatPassiveCollisionComponent_C_BP_SetSingleComponentForDamage");
static_assert(sizeof(BP_CombatPassiveCollisionComponent_C_BP_SetSingleComponentForDamage) == 0x000008, "Wrong size on BP_CombatPassiveCollisionComponent_C_BP_SetSingleComponentForDamage");
static_assert(offsetof(BP_CombatPassiveCollisionComponent_C_BP_SetSingleComponentForDamage, TargetComponent) == 0x000000, "Member 'BP_CombatPassiveCollisionComponent_C_BP_SetSingleComponentForDamage::TargetComponent' has a wrong offset!");

// Function BP_CombatPassiveCollisionComponent.BP_CombatPassiveCollisionComponent_C.BP_SetEnable
// 0x0001 (0x0001 - 0x0000)
struct BP_CombatPassiveCollisionComponent_C_BP_SetEnable final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CombatPassiveCollisionComponent_C_BP_SetEnable) == 0x000001, "Wrong alignment on BP_CombatPassiveCollisionComponent_C_BP_SetEnable");
static_assert(sizeof(BP_CombatPassiveCollisionComponent_C_BP_SetEnable) == 0x000001, "Wrong size on BP_CombatPassiveCollisionComponent_C_BP_SetEnable");
static_assert(offsetof(BP_CombatPassiveCollisionComponent_C_BP_SetEnable, Enable) == 0x000000, "Member 'BP_CombatPassiveCollisionComponent_C_BP_SetEnable::Enable' has a wrong offset!");

// Function BP_CombatPassiveCollisionComponent.BP_CombatPassiveCollisionComponent_C.BP_SetCustomCollisionForDamage
// 0x0008 (0x0008 - 0x0000)
struct BP_CombatPassiveCollisionComponent_C_BP_SetCustomCollisionForDamage final
{
public:
	class UShapeComponent*                        CollisionComponent;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CombatPassiveCollisionComponent_C_BP_SetCustomCollisionForDamage) == 0x000008, "Wrong alignment on BP_CombatPassiveCollisionComponent_C_BP_SetCustomCollisionForDamage");
static_assert(sizeof(BP_CombatPassiveCollisionComponent_C_BP_SetCustomCollisionForDamage) == 0x000008, "Wrong size on BP_CombatPassiveCollisionComponent_C_BP_SetCustomCollisionForDamage");
static_assert(offsetof(BP_CombatPassiveCollisionComponent_C_BP_SetCustomCollisionForDamage, CollisionComponent) == 0x000000, "Member 'BP_CombatPassiveCollisionComponent_C_BP_SetCustomCollisionForDamage::CollisionComponent' has a wrong offset!");

// Function BP_CombatPassiveCollisionComponent.BP_CombatPassiveCollisionComponent_C.BP_AddMeshCollisionForDamage
// 0x0008 (0x0008 - 0x0000)
struct BP_CombatPassiveCollisionComponent_C_BP_AddMeshCollisionForDamage final
{
public:
	class UMeshComponent*                         MeshComp;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CombatPassiveCollisionComponent_C_BP_AddMeshCollisionForDamage) == 0x000008, "Wrong alignment on BP_CombatPassiveCollisionComponent_C_BP_AddMeshCollisionForDamage");
static_assert(sizeof(BP_CombatPassiveCollisionComponent_C_BP_AddMeshCollisionForDamage) == 0x000008, "Wrong size on BP_CombatPassiveCollisionComponent_C_BP_AddMeshCollisionForDamage");
static_assert(offsetof(BP_CombatPassiveCollisionComponent_C_BP_AddMeshCollisionForDamage, MeshComp) == 0x000000, "Member 'BP_CombatPassiveCollisionComponent_C_BP_AddMeshCollisionForDamage::MeshComp' has a wrong offset!");

// Function BP_CombatPassiveCollisionComponent.BP_CombatPassiveCollisionComponent_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct BP_CombatPassiveCollisionComponent_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_CombatPassiveCollisionComponent_C_GetModuleName) == 0x000008, "Wrong alignment on BP_CombatPassiveCollisionComponent_C_GetModuleName");
static_assert(sizeof(BP_CombatPassiveCollisionComponent_C_GetModuleName) == 0x000010, "Wrong size on BP_CombatPassiveCollisionComponent_C_GetModuleName");
static_assert(offsetof(BP_CombatPassiveCollisionComponent_C_GetModuleName, ReturnValue) == 0x000000, "Member 'BP_CombatPassiveCollisionComponent_C_GetModuleName::ReturnValue' has a wrong offset!");

}

