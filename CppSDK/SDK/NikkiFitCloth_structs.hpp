#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NikkiFitCloth

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// Enum NikkiFitCloth.ECacheAssetType
// NumValues: 0x0005
enum class ECacheAssetType : uint8
{
	NormalCloth                              = 0,
	SkinCloth                                = 1,
	SkirtCloth                               = 2,
	Body                                     = 3,
	ECacheAssetType_MAX                      = 4,
};

// Enum NikkiFitCloth.EMeshComponentType
// NumValues: 0x0005
enum class EMeshComponentType : uint8
{
	InnerCloth                               = 0,
	OuterCloth                               = 1,
	Body                                     = 2,
	RenderBody                               = 3,
	EMeshComponentType_MAX                   = 4,
};

// Enum NikkiFitCloth.EProjectMethodType
// NumValues: 0x0003
enum class EProjectMethodType : uint8
{
	IntersectedPos                           = 0,
	BodySkinPos                              = 1,
	EProjectMethodType_MAX                   = 2,
};

// Enum NikkiFitCloth.EProjectDataType
// NumValues: 0x0004
enum class EProjectDataType : uint8
{
	Normal                                   = 1,
	Smooth                                   = 2,
	Trunk                                    = 4,
	EProjectDataType_MAX                     = 5,
};

// ScriptStruct NikkiFitCloth.LODVertexIndices
// 0x0018 (0x0018 - 0x0000)
struct FLODVertexIndices final
{
public:
	int32                                         LODIndex;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 VertexIndices;                                     // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FLODVertexIndices) == 0x000008, "Wrong alignment on FLODVertexIndices");
static_assert(sizeof(FLODVertexIndices) == 0x000018, "Wrong size on FLODVertexIndices");
static_assert(offsetof(FLODVertexIndices, LODIndex) == 0x000000, "Member 'FLODVertexIndices::LODIndex' has a wrong offset!");
static_assert(offsetof(FLODVertexIndices, VertexIndices) == 0x000008, "Member 'FLODVertexIndices::VertexIndices' has a wrong offset!");

// ScriptStruct NikkiFitCloth.SectionValuePair
// 0x0008 (0x0008 - 0x0000)
struct FSectionValuePair final
{
public:
	int32                                         SectionIndex;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SectionValue;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSectionValuePair) == 0x000004, "Wrong alignment on FSectionValuePair");
static_assert(sizeof(FSectionValuePair) == 0x000008, "Wrong size on FSectionValuePair");
static_assert(offsetof(FSectionValuePair, SectionIndex) == 0x000000, "Member 'FSectionValuePair::SectionIndex' has a wrong offset!");
static_assert(offsetof(FSectionValuePair, SectionValue) == 0x000004, "Member 'FSectionValuePair::SectionValue' has a wrong offset!");

// ScriptStruct NikkiFitCloth.ClothLODSectionIndices
// 0x0018 (0x0018 - 0x0000)
struct FClothLODSectionIndices final
{
public:
	int32                                         LODIndex;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 SectionIndices;                                    // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FClothLODSectionIndices) == 0x000008, "Wrong alignment on FClothLODSectionIndices");
static_assert(sizeof(FClothLODSectionIndices) == 0x000018, "Wrong size on FClothLODSectionIndices");
static_assert(offsetof(FClothLODSectionIndices, LODIndex) == 0x000000, "Member 'FClothLODSectionIndices::LODIndex' has a wrong offset!");
static_assert(offsetof(FClothLODSectionIndices, SectionIndices) == 0x000008, "Member 'FClothLODSectionIndices::SectionIndices' has a wrong offset!");

// ScriptStruct NikkiFitCloth.MeshToMeshVertMapInfo
// 0x0030 (0x0030 - 0x0000)
struct FMeshToMeshVertMapInfo final
{
public:
	int32                                         VertexIndex;                                       // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 SourceMeshVertIndices;                             // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4f                              PositionBaryCoordsAndDist;                         // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMeshToMeshVertMapInfo) == 0x000010, "Wrong alignment on FMeshToMeshVertMapInfo");
static_assert(sizeof(FMeshToMeshVertMapInfo) == 0x000030, "Wrong size on FMeshToMeshVertMapInfo");
static_assert(offsetof(FMeshToMeshVertMapInfo, VertexIndex) == 0x000000, "Member 'FMeshToMeshVertMapInfo::VertexIndex' has a wrong offset!");
static_assert(offsetof(FMeshToMeshVertMapInfo, SourceMeshVertIndices) == 0x000008, "Member 'FMeshToMeshVertMapInfo::SourceMeshVertIndices' has a wrong offset!");
static_assert(offsetof(FMeshToMeshVertMapInfo, PositionBaryCoordsAndDist) == 0x000020, "Member 'FMeshToMeshVertMapInfo::PositionBaryCoordsAndDist' has a wrong offset!");

// ScriptStruct NikkiFitCloth.MeshToMeshSectionMapInfo
// 0x0020 (0x0020 - 0x0000)
struct FMeshToMeshSectionMapInfo final
{
public:
	int32                                         SectionIndex;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ValidDistance;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Tolerance;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMeshToMeshVertMapInfo>         VertMapInfos;                                      // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMeshToMeshSectionMapInfo) == 0x000008, "Wrong alignment on FMeshToMeshSectionMapInfo");
static_assert(sizeof(FMeshToMeshSectionMapInfo) == 0x000020, "Wrong size on FMeshToMeshSectionMapInfo");
static_assert(offsetof(FMeshToMeshSectionMapInfo, SectionIndex) == 0x000000, "Member 'FMeshToMeshSectionMapInfo::SectionIndex' has a wrong offset!");
static_assert(offsetof(FMeshToMeshSectionMapInfo, ValidDistance) == 0x000004, "Member 'FMeshToMeshSectionMapInfo::ValidDistance' has a wrong offset!");
static_assert(offsetof(FMeshToMeshSectionMapInfo, Tolerance) == 0x000008, "Member 'FMeshToMeshSectionMapInfo::Tolerance' has a wrong offset!");
static_assert(offsetof(FMeshToMeshSectionMapInfo, VertMapInfos) == 0x000010, "Member 'FMeshToMeshSectionMapInfo::VertMapInfos' has a wrong offset!");

// ScriptStruct NikkiFitCloth.ClothLODSectionMapInfos
// 0x0018 (0x0018 - 0x0000)
struct FClothLODSectionMapInfos final
{
public:
	int32                                         LODIndex;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMeshToMeshSectionMapInfo>      SectionMapInfos;                                   // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FClothLODSectionMapInfos) == 0x000008, "Wrong alignment on FClothLODSectionMapInfos");
static_assert(sizeof(FClothLODSectionMapInfos) == 0x000018, "Wrong size on FClothLODSectionMapInfos");
static_assert(offsetof(FClothLODSectionMapInfos, LODIndex) == 0x000000, "Member 'FClothLODSectionMapInfos::LODIndex' has a wrong offset!");
static_assert(offsetof(FClothLODSectionMapInfos, SectionMapInfos) == 0x000008, "Member 'FClothLODSectionMapInfos::SectionMapInfos' has a wrong offset!");

// ScriptStruct NikkiFitCloth.BoneReferenceData
// 0x0010 (0x0010 - 0x0000)
struct FBoneReferenceData final
{
public:
	struct FBoneReference                         BoneReference;                                     // 0x0000(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FBoneReferenceData) == 0x000004, "Wrong alignment on FBoneReferenceData");
static_assert(sizeof(FBoneReferenceData) == 0x000010, "Wrong size on FBoneReferenceData");
static_assert(offsetof(FBoneReferenceData, BoneReference) == 0x000000, "Member 'FBoneReferenceData::BoneReference' has a wrong offset!");

// ScriptStruct NikkiFitCloth.ClothBodyBoneNamePair
// 0x0020 (0x0020 - 0x0000)
struct FClothBodyBoneNamePair final
{
public:
	struct FBoneReference                         ClothBoneName;                                     // 0x0000(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FBoneReference                         BodyBoneName;                                      // 0x0010(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FClothBodyBoneNamePair) == 0x000004, "Wrong alignment on FClothBodyBoneNamePair");
static_assert(sizeof(FClothBodyBoneNamePair) == 0x000020, "Wrong size on FClothBodyBoneNamePair");
static_assert(offsetof(FClothBodyBoneNamePair, ClothBoneName) == 0x000000, "Member 'FClothBodyBoneNamePair::ClothBoneName' has a wrong offset!");
static_assert(offsetof(FClothBodyBoneNamePair, BodyBoneName) == 0x000010, "Member 'FClothBodyBoneNamePair::BodyBoneName' has a wrong offset!");

// ScriptStruct NikkiFitCloth.ClothVertexColorMaskUnit
// 0x0010 (0x0010 - 0x0000)
struct FClothVertexColorMaskUnit final
{
public:
	uint8                                         Color;                                             // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseMask;                                          // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNormal;                                           // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOrigin;                                           // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaskRatio;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseDeform;                                        // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DeformRatio;                                       // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FClothVertexColorMaskUnit) == 0x000004, "Wrong alignment on FClothVertexColorMaskUnit");
static_assert(sizeof(FClothVertexColorMaskUnit) == 0x000010, "Wrong size on FClothVertexColorMaskUnit");
static_assert(offsetof(FClothVertexColorMaskUnit, Color) == 0x000000, "Member 'FClothVertexColorMaskUnit::Color' has a wrong offset!");
static_assert(offsetof(FClothVertexColorMaskUnit, bUseMask) == 0x000001, "Member 'FClothVertexColorMaskUnit::bUseMask' has a wrong offset!");
static_assert(offsetof(FClothVertexColorMaskUnit, bNormal) == 0x000002, "Member 'FClothVertexColorMaskUnit::bNormal' has a wrong offset!");
static_assert(offsetof(FClothVertexColorMaskUnit, bOrigin) == 0x000003, "Member 'FClothVertexColorMaskUnit::bOrigin' has a wrong offset!");
static_assert(offsetof(FClothVertexColorMaskUnit, MaskRatio) == 0x000004, "Member 'FClothVertexColorMaskUnit::MaskRatio' has a wrong offset!");
static_assert(offsetof(FClothVertexColorMaskUnit, bUseDeform) == 0x000008, "Member 'FClothVertexColorMaskUnit::bUseDeform' has a wrong offset!");
static_assert(offsetof(FClothVertexColorMaskUnit, DeformRatio) == 0x00000C, "Member 'FClothVertexColorMaskUnit::DeformRatio' has a wrong offset!");

// ScriptStruct NikkiFitCloth.MatchClothProjectParameter
// 0x000C (0x000C - 0x0000)
struct FMatchClothProjectParameter final
{
public:
	float                                         ProjectRatio;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMiddleZoneDeform;                                 // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EProjectMethodType                            ProjectType;                                       // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ProjectToBodyDistOffset;                           // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMatchClothProjectParameter) == 0x000004, "Wrong alignment on FMatchClothProjectParameter");
static_assert(sizeof(FMatchClothProjectParameter) == 0x00000C, "Wrong size on FMatchClothProjectParameter");
static_assert(offsetof(FMatchClothProjectParameter, ProjectRatio) == 0x000000, "Member 'FMatchClothProjectParameter::ProjectRatio' has a wrong offset!");
static_assert(offsetof(FMatchClothProjectParameter, bMiddleZoneDeform) == 0x000004, "Member 'FMatchClothProjectParameter::bMiddleZoneDeform' has a wrong offset!");
static_assert(offsetof(FMatchClothProjectParameter, ProjectType) == 0x000005, "Member 'FMatchClothProjectParameter::ProjectType' has a wrong offset!");
static_assert(offsetof(FMatchClothProjectParameter, ProjectToBodyDistOffset) == 0x000008, "Member 'FMatchClothProjectParameter::ProjectToBodyDistOffset' has a wrong offset!");

// ScriptStruct NikkiFitCloth.MatchClothProjectDataTypeParameter
// 0x0001 (0x0001 - 0x0000)
struct FMatchClothProjectDataTypeParameter final
{
public:
	EProjectDataType                              ProjectDataType;                                   // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMatchClothProjectDataTypeParameter) == 0x000001, "Wrong alignment on FMatchClothProjectDataTypeParameter");
static_assert(sizeof(FMatchClothProjectDataTypeParameter) == 0x000001, "Wrong size on FMatchClothProjectDataTypeParameter");
static_assert(offsetof(FMatchClothProjectDataTypeParameter, ProjectDataType) == 0x000000, "Member 'FMatchClothProjectDataTypeParameter::ProjectDataType' has a wrong offset!");

// ScriptStruct NikkiFitCloth.MatchClothIntersectParameter
// 0x0020 (0x0020 - 0x0000)
struct FMatchClothIntersectParameter final
{
public:
	float                                         BoundaryOffset;                                    // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartOuterExtendDist;                              // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TestOuterExtendDist;                               // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseInnerTag;                                      // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseOldExtention;                                  // 0x000D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InnerExtendNum;                                    // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaskAdjExtendNum;                                  // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DeformAdjExtendNum;                                // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DeformAdjWeight;                                   // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMatchClothIntersectParameter) == 0x000004, "Wrong alignment on FMatchClothIntersectParameter");
static_assert(sizeof(FMatchClothIntersectParameter) == 0x000020, "Wrong size on FMatchClothIntersectParameter");
static_assert(offsetof(FMatchClothIntersectParameter, BoundaryOffset) == 0x000000, "Member 'FMatchClothIntersectParameter::BoundaryOffset' has a wrong offset!");
static_assert(offsetof(FMatchClothIntersectParameter, StartOuterExtendDist) == 0x000004, "Member 'FMatchClothIntersectParameter::StartOuterExtendDist' has a wrong offset!");
static_assert(offsetof(FMatchClothIntersectParameter, TestOuterExtendDist) == 0x000008, "Member 'FMatchClothIntersectParameter::TestOuterExtendDist' has a wrong offset!");
static_assert(offsetof(FMatchClothIntersectParameter, bUseInnerTag) == 0x00000C, "Member 'FMatchClothIntersectParameter::bUseInnerTag' has a wrong offset!");
static_assert(offsetof(FMatchClothIntersectParameter, bUseOldExtention) == 0x00000D, "Member 'FMatchClothIntersectParameter::bUseOldExtention' has a wrong offset!");
static_assert(offsetof(FMatchClothIntersectParameter, InnerExtendNum) == 0x000010, "Member 'FMatchClothIntersectParameter::InnerExtendNum' has a wrong offset!");
static_assert(offsetof(FMatchClothIntersectParameter, MaskAdjExtendNum) == 0x000014, "Member 'FMatchClothIntersectParameter::MaskAdjExtendNum' has a wrong offset!");
static_assert(offsetof(FMatchClothIntersectParameter, DeformAdjExtendNum) == 0x000018, "Member 'FMatchClothIntersectParameter::DeformAdjExtendNum' has a wrong offset!");
static_assert(offsetof(FMatchClothIntersectParameter, DeformAdjWeight) == 0x00001C, "Member 'FMatchClothIntersectParameter::DeformAdjWeight' has a wrong offset!");

// ScriptStruct NikkiFitCloth.MatchClothBodySkinParameter
// 0x0008 (0x0008 - 0x0000)
struct FMatchClothBodySkinParameter final
{
public:
	float                                         StartOuterExtendDist;                              // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ProjectToBodyDistOffset;                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMatchClothBodySkinParameter) == 0x000004, "Wrong alignment on FMatchClothBodySkinParameter");
static_assert(sizeof(FMatchClothBodySkinParameter) == 0x000008, "Wrong size on FMatchClothBodySkinParameter");
static_assert(offsetof(FMatchClothBodySkinParameter, StartOuterExtendDist) == 0x000000, "Member 'FMatchClothBodySkinParameter::StartOuterExtendDist' has a wrong offset!");
static_assert(offsetof(FMatchClothBodySkinParameter, ProjectToBodyDistOffset) == 0x000004, "Member 'FMatchClothBodySkinParameter::ProjectToBodyDistOffset' has a wrong offset!");

// ScriptStruct NikkiFitCloth.MatchClothSmoothParameter
// 0x0010 (0x0010 - 0x0000)
struct FMatchClothSmoothParameter final
{
public:
	int32                                         IterationNumber;                                   // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         IterationSmoothWeight;                             // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SmoothRange;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SmoothRangeWeight;                                 // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMatchClothSmoothParameter) == 0x000004, "Wrong alignment on FMatchClothSmoothParameter");
static_assert(sizeof(FMatchClothSmoothParameter) == 0x000010, "Wrong size on FMatchClothSmoothParameter");
static_assert(offsetof(FMatchClothSmoothParameter, IterationNumber) == 0x000000, "Member 'FMatchClothSmoothParameter::IterationNumber' has a wrong offset!");
static_assert(offsetof(FMatchClothSmoothParameter, IterationSmoothWeight) == 0x000004, "Member 'FMatchClothSmoothParameter::IterationSmoothWeight' has a wrong offset!");
static_assert(offsetof(FMatchClothSmoothParameter, SmoothRange) == 0x000008, "Member 'FMatchClothSmoothParameter::SmoothRange' has a wrong offset!");
static_assert(offsetof(FMatchClothSmoothParameter, SmoothRangeWeight) == 0x00000C, "Member 'FMatchClothSmoothParameter::SmoothRangeWeight' has a wrong offset!");

// ScriptStruct NikkiFitCloth.MatchClothAdvancedParameter
// 0x000C (0x000C - 0x0000)
struct FMatchClothAdvancedParameter final
{
public:
	int32                                         DebugVertexIndex;                                  // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DebugVertexColor;                                  // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableInnerTest;                                  // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableInOut;                                      // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMatchClothAdvancedParameter) == 0x000004, "Wrong alignment on FMatchClothAdvancedParameter");
static_assert(sizeof(FMatchClothAdvancedParameter) == 0x00000C, "Wrong size on FMatchClothAdvancedParameter");
static_assert(offsetof(FMatchClothAdvancedParameter, DebugVertexIndex) == 0x000000, "Member 'FMatchClothAdvancedParameter::DebugVertexIndex' has a wrong offset!");
static_assert(offsetof(FMatchClothAdvancedParameter, DebugVertexColor) == 0x000004, "Member 'FMatchClothAdvancedParameter::DebugVertexColor' has a wrong offset!");
static_assert(offsetof(FMatchClothAdvancedParameter, bEnableInnerTest) == 0x000008, "Member 'FMatchClothAdvancedParameter::bEnableInnerTest' has a wrong offset!");
static_assert(offsetof(FMatchClothAdvancedParameter, bEnableInOut) == 0x000009, "Member 'FMatchClothAdvancedParameter::bEnableInOut' has a wrong offset!");

// ScriptStruct NikkiFitCloth.MatchClothOuterSectionParameter
// 0x0040 (0x0040 - 0x0000)
struct FMatchClothOuterSectionParameter final
{
public:
	TArray<int32>                                 ExcludeOuterSectionIndices;                        // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                 DeformOnlyOuterSectionIndices;                     // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                 MaskOnlyOuterSectionIndices;                       // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FSectionValuePair>              SectionValuePairs;                                 // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMatchClothOuterSectionParameter) == 0x000008, "Wrong alignment on FMatchClothOuterSectionParameter");
static_assert(sizeof(FMatchClothOuterSectionParameter) == 0x000040, "Wrong size on FMatchClothOuterSectionParameter");
static_assert(offsetof(FMatchClothOuterSectionParameter, ExcludeOuterSectionIndices) == 0x000000, "Member 'FMatchClothOuterSectionParameter::ExcludeOuterSectionIndices' has a wrong offset!");
static_assert(offsetof(FMatchClothOuterSectionParameter, DeformOnlyOuterSectionIndices) == 0x000010, "Member 'FMatchClothOuterSectionParameter::DeformOnlyOuterSectionIndices' has a wrong offset!");
static_assert(offsetof(FMatchClothOuterSectionParameter, MaskOnlyOuterSectionIndices) == 0x000020, "Member 'FMatchClothOuterSectionParameter::MaskOnlyOuterSectionIndices' has a wrong offset!");
static_assert(offsetof(FMatchClothOuterSectionParameter, SectionValuePairs) == 0x000030, "Member 'FMatchClothOuterSectionParameter::SectionValuePairs' has a wrong offset!");

// ScriptStruct NikkiFitCloth.MatchClothEditorParameter
// 0x0090 (0x0090 - 0x0000)
struct FMatchClothEditorParameter final
{
public:
	float                                         MergeDistThreshold;                                // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SkinMaterialSlotName;                              // 0x0004(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SkinMaterialKeyWord;                               // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SmoothProjectWeightThreshold;                      // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RelatedWeightThreshold;                            // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RenderBodyExtendNum;                               // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RenderBodyExtendDist;                              // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ImportMappingTol;                                  // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TestImportProjectionLength;                        // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CheckRenderDistLength;                             // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FClothBodyBoneNamePair>         BoneNamePairs;                                     // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                         SmoothBoneNames;                                   // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                 JsonConfigString;                                  // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 JsonVertexLevelString;                             // 0x0070(0x0010)(Edit, BlueprintVisible, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIgnoreFingerBone;                                 // 0x0080(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bBuildVertexLevel;                                 // 0x0081(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseAdvancedSkinDist;                              // 0x0082(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_83[0x1];                                       // 0x0083(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DebugLODIndex;                                     // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DebugVertexIndex;                                  // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMatchClothEditorParameter) == 0x000008, "Wrong alignment on FMatchClothEditorParameter");
static_assert(sizeof(FMatchClothEditorParameter) == 0x000090, "Wrong size on FMatchClothEditorParameter");
static_assert(offsetof(FMatchClothEditorParameter, MergeDistThreshold) == 0x000000, "Member 'FMatchClothEditorParameter::MergeDistThreshold' has a wrong offset!");
static_assert(offsetof(FMatchClothEditorParameter, SkinMaterialSlotName) == 0x000004, "Member 'FMatchClothEditorParameter::SkinMaterialSlotName' has a wrong offset!");
static_assert(offsetof(FMatchClothEditorParameter, SkinMaterialKeyWord) == 0x000010, "Member 'FMatchClothEditorParameter::SkinMaterialKeyWord' has a wrong offset!");
static_assert(offsetof(FMatchClothEditorParameter, SmoothProjectWeightThreshold) == 0x000020, "Member 'FMatchClothEditorParameter::SmoothProjectWeightThreshold' has a wrong offset!");
static_assert(offsetof(FMatchClothEditorParameter, RelatedWeightThreshold) == 0x000024, "Member 'FMatchClothEditorParameter::RelatedWeightThreshold' has a wrong offset!");
static_assert(offsetof(FMatchClothEditorParameter, RenderBodyExtendNum) == 0x000028, "Member 'FMatchClothEditorParameter::RenderBodyExtendNum' has a wrong offset!");
static_assert(offsetof(FMatchClothEditorParameter, RenderBodyExtendDist) == 0x00002C, "Member 'FMatchClothEditorParameter::RenderBodyExtendDist' has a wrong offset!");
static_assert(offsetof(FMatchClothEditorParameter, ImportMappingTol) == 0x000030, "Member 'FMatchClothEditorParameter::ImportMappingTol' has a wrong offset!");
static_assert(offsetof(FMatchClothEditorParameter, TestImportProjectionLength) == 0x000034, "Member 'FMatchClothEditorParameter::TestImportProjectionLength' has a wrong offset!");
static_assert(offsetof(FMatchClothEditorParameter, CheckRenderDistLength) == 0x000038, "Member 'FMatchClothEditorParameter::CheckRenderDistLength' has a wrong offset!");
static_assert(offsetof(FMatchClothEditorParameter, BoneNamePairs) == 0x000040, "Member 'FMatchClothEditorParameter::BoneNamePairs' has a wrong offset!");
static_assert(offsetof(FMatchClothEditorParameter, SmoothBoneNames) == 0x000050, "Member 'FMatchClothEditorParameter::SmoothBoneNames' has a wrong offset!");
static_assert(offsetof(FMatchClothEditorParameter, JsonConfigString) == 0x000060, "Member 'FMatchClothEditorParameter::JsonConfigString' has a wrong offset!");
static_assert(offsetof(FMatchClothEditorParameter, JsonVertexLevelString) == 0x000070, "Member 'FMatchClothEditorParameter::JsonVertexLevelString' has a wrong offset!");
static_assert(offsetof(FMatchClothEditorParameter, bIgnoreFingerBone) == 0x000080, "Member 'FMatchClothEditorParameter::bIgnoreFingerBone' has a wrong offset!");
static_assert(offsetof(FMatchClothEditorParameter, bBuildVertexLevel) == 0x000081, "Member 'FMatchClothEditorParameter::bBuildVertexLevel' has a wrong offset!");
static_assert(offsetof(FMatchClothEditorParameter, bUseAdvancedSkinDist) == 0x000082, "Member 'FMatchClothEditorParameter::bUseAdvancedSkinDist' has a wrong offset!");
static_assert(offsetof(FMatchClothEditorParameter, DebugLODIndex) == 0x000084, "Member 'FMatchClothEditorParameter::DebugLODIndex' has a wrong offset!");
static_assert(offsetof(FMatchClothEditorParameter, DebugVertexIndex) == 0x000088, "Member 'FMatchClothEditorParameter::DebugVertexIndex' has a wrong offset!");

// ScriptStruct NikkiFitCloth.LODMatchClothParameter
// 0x00F0 (0x00F0 - 0x0000)
struct FLODMatchClothParameter final
{
public:
	bool                                          bSkipCloth;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUpdateVertexColor;                                // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUpdateVertexPosition;                             // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseRuntimeInner;                                  // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseRuntimeOuter;                                  // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumParallelFor;                                    // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMatchClothProjectDataTypeParameter    ProjectDataTypeParam;                              // 0x000C(0x0001)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bUseRigidMapping;                                  // 0x000D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseBillboard;                                     // 0x000E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BillboardOffsetDist;                               // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceUpSkin;                                      // 0x0014(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RenderBodyOffsetDist;                              // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TestLevelOffset;                                   // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bApplyTestLevelOffset;                             // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ProjectLevelOffset;                                // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bApplyEqualLevelOffset;                            // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDeformSkin;                                       // 0x0029(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseBodySkinParam;                                 // 0x002A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatchClothBodySkinParameter           BodySkinParam;                                     // 0x002C(0x0008)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	float                                         PaperFurLengthScale;                               // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseSmooth;                                        // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatchClothSmoothParameter             SmoothParam;                                       // 0x003C(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FMatchClothProjectParameter            ProjectParam;                                      // 0x004C(0x000C)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FMatchClothIntersectParameter          IntersectParam;                                    // 0x0058(0x0020)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FMatchClothAdvancedParameter           AdvancedParam;                                     // 0x0078(0x000C)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FClothVertexColorMaskUnit>      ClothVertexColorMaskUnits;                         // 0x0088(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FMatchClothOuterSectionParameter       ClothOuterSectionParameter;                        // 0x0098(0x0040)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<int32>                                 DisabledLODIndices;                                // 0x00D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bIgnoreTagIntersection;                            // 0x00E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bApplyInnerPairCacheData;                          // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bApplyOuterPairCacheData;                          // 0x00EA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_EB[0x5];                                       // 0x00EB(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FLODMatchClothParameter) == 0x000008, "Wrong alignment on FLODMatchClothParameter");
static_assert(sizeof(FLODMatchClothParameter) == 0x0000F0, "Wrong size on FLODMatchClothParameter");
static_assert(offsetof(FLODMatchClothParameter, bSkipCloth) == 0x000000, "Member 'FLODMatchClothParameter::bSkipCloth' has a wrong offset!");
static_assert(offsetof(FLODMatchClothParameter, bUpdateVertexColor) == 0x000001, "Member 'FLODMatchClothParameter::bUpdateVertexColor' has a wrong offset!");
static_assert(offsetof(FLODMatchClothParameter, bUpdateVertexPosition) == 0x000002, "Member 'FLODMatchClothParameter::bUpdateVertexPosition' has a wrong offset!");
static_assert(offsetof(FLODMatchClothParameter, bUseRuntimeInner) == 0x000003, "Member 'FLODMatchClothParameter::bUseRuntimeInner' has a wrong offset!");
static_assert(offsetof(FLODMatchClothParameter, bUseRuntimeOuter) == 0x000004, "Member 'FLODMatchClothParameter::bUseRuntimeOuter' has a wrong offset!");
static_assert(offsetof(FLODMatchClothParameter, NumParallelFor) == 0x000008, "Member 'FLODMatchClothParameter::NumParallelFor' has a wrong offset!");
static_assert(offsetof(FLODMatchClothParameter, ProjectDataTypeParam) == 0x00000C, "Member 'FLODMatchClothParameter::ProjectDataTypeParam' has a wrong offset!");
static_assert(offsetof(FLODMatchClothParameter, bUseRigidMapping) == 0x00000D, "Member 'FLODMatchClothParameter::bUseRigidMapping' has a wrong offset!");
static_assert(offsetof(FLODMatchClothParameter, bUseBillboard) == 0x00000E, "Member 'FLODMatchClothParameter::bUseBillboard' has a wrong offset!");
static_assert(offsetof(FLODMatchClothParameter, BillboardOffsetDist) == 0x000010, "Member 'FLODMatchClothParameter::BillboardOffsetDist' has a wrong offset!");
static_assert(offsetof(FLODMatchClothParameter, bForceUpSkin) == 0x000014, "Member 'FLODMatchClothParameter::bForceUpSkin' has a wrong offset!");
static_assert(offsetof(FLODMatchClothParameter, RenderBodyOffsetDist) == 0x000018, "Member 'FLODMatchClothParameter::RenderBodyOffsetDist' has a wrong offset!");
static_assert(offsetof(FLODMatchClothParameter, TestLevelOffset) == 0x00001C, "Member 'FLODMatchClothParameter::TestLevelOffset' has a wrong offset!");
static_assert(offsetof(FLODMatchClothParameter, bApplyTestLevelOffset) == 0x000020, "Member 'FLODMatchClothParameter::bApplyTestLevelOffset' has a wrong offset!");
static_assert(offsetof(FLODMatchClothParameter, ProjectLevelOffset) == 0x000024, "Member 'FLODMatchClothParameter::ProjectLevelOffset' has a wrong offset!");
static_assert(offsetof(FLODMatchClothParameter, bApplyEqualLevelOffset) == 0x000028, "Member 'FLODMatchClothParameter::bApplyEqualLevelOffset' has a wrong offset!");
static_assert(offsetof(FLODMatchClothParameter, bDeformSkin) == 0x000029, "Member 'FLODMatchClothParameter::bDeformSkin' has a wrong offset!");
static_assert(offsetof(FLODMatchClothParameter, bUseBodySkinParam) == 0x00002A, "Member 'FLODMatchClothParameter::bUseBodySkinParam' has a wrong offset!");
static_assert(offsetof(FLODMatchClothParameter, BodySkinParam) == 0x00002C, "Member 'FLODMatchClothParameter::BodySkinParam' has a wrong offset!");
static_assert(offsetof(FLODMatchClothParameter, PaperFurLengthScale) == 0x000034, "Member 'FLODMatchClothParameter::PaperFurLengthScale' has a wrong offset!");
static_assert(offsetof(FLODMatchClothParameter, bUseSmooth) == 0x000038, "Member 'FLODMatchClothParameter::bUseSmooth' has a wrong offset!");
static_assert(offsetof(FLODMatchClothParameter, SmoothParam) == 0x00003C, "Member 'FLODMatchClothParameter::SmoothParam' has a wrong offset!");
static_assert(offsetof(FLODMatchClothParameter, ProjectParam) == 0x00004C, "Member 'FLODMatchClothParameter::ProjectParam' has a wrong offset!");
static_assert(offsetof(FLODMatchClothParameter, IntersectParam) == 0x000058, "Member 'FLODMatchClothParameter::IntersectParam' has a wrong offset!");
static_assert(offsetof(FLODMatchClothParameter, AdvancedParam) == 0x000078, "Member 'FLODMatchClothParameter::AdvancedParam' has a wrong offset!");
static_assert(offsetof(FLODMatchClothParameter, ClothVertexColorMaskUnits) == 0x000088, "Member 'FLODMatchClothParameter::ClothVertexColorMaskUnits' has a wrong offset!");
static_assert(offsetof(FLODMatchClothParameter, ClothOuterSectionParameter) == 0x000098, "Member 'FLODMatchClothParameter::ClothOuterSectionParameter' has a wrong offset!");
static_assert(offsetof(FLODMatchClothParameter, DisabledLODIndices) == 0x0000D8, "Member 'FLODMatchClothParameter::DisabledLODIndices' has a wrong offset!");
static_assert(offsetof(FLODMatchClothParameter, bIgnoreTagIntersection) == 0x0000E8, "Member 'FLODMatchClothParameter::bIgnoreTagIntersection' has a wrong offset!");
static_assert(offsetof(FLODMatchClothParameter, bApplyInnerPairCacheData) == 0x0000E9, "Member 'FLODMatchClothParameter::bApplyInnerPairCacheData' has a wrong offset!");
static_assert(offsetof(FLODMatchClothParameter, bApplyOuterPairCacheData) == 0x0000EA, "Member 'FLODMatchClothParameter::bApplyOuterPairCacheData' has a wrong offset!");

// ScriptStruct NikkiFitCloth.MatchClothParameter
// 0x0028 (0x0028 - 0x0000)
struct FMatchClothParameter final
{
public:
	TArray<struct FLODMatchClothParameter>        LODMatchParams;                                    // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                 DisabledLODIndices;                                // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bUseLODParallelFor;                                // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseRuntimeInner;                                  // 0x0021(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseRuntimeOuter;                                  // 0x0022(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bApplyInnerPairCacheData;                          // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bApplyOuterPairCacheData;                          // 0x0024(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMatchClothParameter) == 0x000008, "Wrong alignment on FMatchClothParameter");
static_assert(sizeof(FMatchClothParameter) == 0x000028, "Wrong size on FMatchClothParameter");
static_assert(offsetof(FMatchClothParameter, LODMatchParams) == 0x000000, "Member 'FMatchClothParameter::LODMatchParams' has a wrong offset!");
static_assert(offsetof(FMatchClothParameter, DisabledLODIndices) == 0x000010, "Member 'FMatchClothParameter::DisabledLODIndices' has a wrong offset!");
static_assert(offsetof(FMatchClothParameter, bUseLODParallelFor) == 0x000020, "Member 'FMatchClothParameter::bUseLODParallelFor' has a wrong offset!");
static_assert(offsetof(FMatchClothParameter, bUseRuntimeInner) == 0x000021, "Member 'FMatchClothParameter::bUseRuntimeInner' has a wrong offset!");
static_assert(offsetof(FMatchClothParameter, bUseRuntimeOuter) == 0x000022, "Member 'FMatchClothParameter::bUseRuntimeOuter' has a wrong offset!");
static_assert(offsetof(FMatchClothParameter, bApplyInnerPairCacheData) == 0x000023, "Member 'FMatchClothParameter::bApplyInnerPairCacheData' has a wrong offset!");
static_assert(offsetof(FMatchClothParameter, bApplyOuterPairCacheData) == 0x000024, "Member 'FMatchClothParameter::bApplyOuterPairCacheData' has a wrong offset!");

}

