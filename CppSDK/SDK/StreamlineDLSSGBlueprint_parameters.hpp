#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: StreamlineDLSSGBlueprint

#include "Basic.hpp"

#include "StreamlineDLSSGBlueprint_structs.hpp"
#include "StreamlineBlueprint_structs.hpp"


namespace SDK::Params
{

// Function StreamlineDLSSGBlueprint.StreamlineLibraryDLSSG.GetDefaultDLSSGMode
// 0x0001 (0x0001 - 0x0000)
struct StreamlineLibraryDLSSG_GetDefaultDLSSGMode final
{
public:
	EStreamlineDLSSGMode                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StreamlineLibraryDLSSG_GetDefaultDLSSGMode) == 0x000001, "Wrong alignment on StreamlineLibraryDLSSG_GetDefaultDLSSGMode");
static_assert(sizeof(StreamlineLibraryDLSSG_GetDefaultDLSSGMode) == 0x000001, "Wrong size on StreamlineLibraryDLSSG_GetDefaultDLSSGMode");
static_assert(offsetof(StreamlineLibraryDLSSG_GetDefaultDLSSGMode, ReturnValue) == 0x000000, "Member 'StreamlineLibraryDLSSG_GetDefaultDLSSGMode::ReturnValue' has a wrong offset!");

// Function StreamlineDLSSGBlueprint.StreamlineLibraryDLSSG.GetDLSSGFrameTiming
// 0x0008 (0x0008 - 0x0000)
struct StreamlineLibraryDLSSG_GetDLSSGFrameTiming final
{
public:
	float                                         FrameRateInHertz;                                  // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FramesPresented;                                   // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StreamlineLibraryDLSSG_GetDLSSGFrameTiming) == 0x000004, "Wrong alignment on StreamlineLibraryDLSSG_GetDLSSGFrameTiming");
static_assert(sizeof(StreamlineLibraryDLSSG_GetDLSSGFrameTiming) == 0x000008, "Wrong size on StreamlineLibraryDLSSG_GetDLSSGFrameTiming");
static_assert(offsetof(StreamlineLibraryDLSSG_GetDLSSGFrameTiming, FrameRateInHertz) == 0x000000, "Member 'StreamlineLibraryDLSSG_GetDLSSGFrameTiming::FrameRateInHertz' has a wrong offset!");
static_assert(offsetof(StreamlineLibraryDLSSG_GetDLSSGFrameTiming, FramesPresented) == 0x000004, "Member 'StreamlineLibraryDLSSG_GetDLSSGFrameTiming::FramesPresented' has a wrong offset!");

// Function StreamlineDLSSGBlueprint.StreamlineLibraryDLSSG.GetDLSSGMode
// 0x0001 (0x0001 - 0x0000)
struct StreamlineLibraryDLSSG_GetDLSSGMode final
{
public:
	EStreamlineDLSSGMode                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StreamlineLibraryDLSSG_GetDLSSGMode) == 0x000001, "Wrong alignment on StreamlineLibraryDLSSG_GetDLSSGMode");
static_assert(sizeof(StreamlineLibraryDLSSG_GetDLSSGMode) == 0x000001, "Wrong size on StreamlineLibraryDLSSG_GetDLSSGMode");
static_assert(offsetof(StreamlineLibraryDLSSG_GetDLSSGMode, ReturnValue) == 0x000000, "Member 'StreamlineLibraryDLSSG_GetDLSSGMode::ReturnValue' has a wrong offset!");

// Function StreamlineDLSSGBlueprint.StreamlineLibraryDLSSG.GetSupportedDLSSGModes
// 0x0010 (0x0010 - 0x0000)
struct StreamlineLibraryDLSSG_GetSupportedDLSSGModes final
{
public:
	TArray<EStreamlineDLSSGMode>                  ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(StreamlineLibraryDLSSG_GetSupportedDLSSGModes) == 0x000008, "Wrong alignment on StreamlineLibraryDLSSG_GetSupportedDLSSGModes");
static_assert(sizeof(StreamlineLibraryDLSSG_GetSupportedDLSSGModes) == 0x000010, "Wrong size on StreamlineLibraryDLSSG_GetSupportedDLSSGModes");
static_assert(offsetof(StreamlineLibraryDLSSG_GetSupportedDLSSGModes, ReturnValue) == 0x000000, "Member 'StreamlineLibraryDLSSG_GetSupportedDLSSGModes::ReturnValue' has a wrong offset!");

// Function StreamlineDLSSGBlueprint.StreamlineLibraryDLSSG.IsDLSSGModeSupported
// 0x0002 (0x0002 - 0x0000)
struct StreamlineLibraryDLSSG_IsDLSSGModeSupported final
{
public:
	EStreamlineDLSSGMode                          DLSSGMode;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StreamlineLibraryDLSSG_IsDLSSGModeSupported) == 0x000001, "Wrong alignment on StreamlineLibraryDLSSG_IsDLSSGModeSupported");
static_assert(sizeof(StreamlineLibraryDLSSG_IsDLSSGModeSupported) == 0x000002, "Wrong size on StreamlineLibraryDLSSG_IsDLSSGModeSupported");
static_assert(offsetof(StreamlineLibraryDLSSG_IsDLSSGModeSupported, DLSSGMode) == 0x000000, "Member 'StreamlineLibraryDLSSG_IsDLSSGModeSupported::DLSSGMode' has a wrong offset!");
static_assert(offsetof(StreamlineLibraryDLSSG_IsDLSSGModeSupported, ReturnValue) == 0x000001, "Member 'StreamlineLibraryDLSSG_IsDLSSGModeSupported::ReturnValue' has a wrong offset!");

// Function StreamlineDLSSGBlueprint.StreamlineLibraryDLSSG.IsDLSSGSupported
// 0x0001 (0x0001 - 0x0000)
struct StreamlineLibraryDLSSG_IsDLSSGSupported final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StreamlineLibraryDLSSG_IsDLSSGSupported) == 0x000001, "Wrong alignment on StreamlineLibraryDLSSG_IsDLSSGSupported");
static_assert(sizeof(StreamlineLibraryDLSSG_IsDLSSGSupported) == 0x000001, "Wrong size on StreamlineLibraryDLSSG_IsDLSSGSupported");
static_assert(offsetof(StreamlineLibraryDLSSG_IsDLSSGSupported, ReturnValue) == 0x000000, "Member 'StreamlineLibraryDLSSG_IsDLSSGSupported::ReturnValue' has a wrong offset!");

// Function StreamlineDLSSGBlueprint.StreamlineLibraryDLSSG.QueryDLSSGSupport
// 0x0001 (0x0001 - 0x0000)
struct StreamlineLibraryDLSSG_QueryDLSSGSupport final
{
public:
	EStreamlineFeatureSupport                     ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StreamlineLibraryDLSSG_QueryDLSSGSupport) == 0x000001, "Wrong alignment on StreamlineLibraryDLSSG_QueryDLSSGSupport");
static_assert(sizeof(StreamlineLibraryDLSSG_QueryDLSSGSupport) == 0x000001, "Wrong size on StreamlineLibraryDLSSG_QueryDLSSGSupport");
static_assert(offsetof(StreamlineLibraryDLSSG_QueryDLSSGSupport, ReturnValue) == 0x000000, "Member 'StreamlineLibraryDLSSG_QueryDLSSGSupport::ReturnValue' has a wrong offset!");

// Function StreamlineDLSSGBlueprint.StreamlineLibraryDLSSG.SetDLSSGMode
// 0x0001 (0x0001 - 0x0000)
struct StreamlineLibraryDLSSG_SetDLSSGMode final
{
public:
	EStreamlineDLSSGMode                          DLSSGMode;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StreamlineLibraryDLSSG_SetDLSSGMode) == 0x000001, "Wrong alignment on StreamlineLibraryDLSSG_SetDLSSGMode");
static_assert(sizeof(StreamlineLibraryDLSSG_SetDLSSGMode) == 0x000001, "Wrong size on StreamlineLibraryDLSSG_SetDLSSGMode");
static_assert(offsetof(StreamlineLibraryDLSSG_SetDLSSGMode, DLSSGMode) == 0x000000, "Member 'StreamlineLibraryDLSSG_SetDLSSGMode::DLSSGMode' has a wrong offset!");

}

