#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FitMatchSetting

#include "Basic.hpp"

#include "E_MatchClothType_Arm_structs.hpp"
#include "E_MatchClothType_Leg_structs.hpp"
#include "E_MatchClothType_Head_structs.hpp"
#include "E_MatchClothType_Body_structs.hpp"
#include "NikkiFitCloth_structs.hpp"
#include "NikkiFitCloth_classes.hpp"
#include "E_MatchClothType_Neck_structs.hpp"
#include "E_MatchClothType_structs.hpp"
#include "Struct_ClothMatchSectionPriority_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass FitMatchSetting.FitMatchSetting_C
// 0x00F8 (0x0168 - 0x0070)
class UFitMatchSetting_C final : public UClothPropertyAssetUserData
{
public:
	E_MatchClothType_Arm                          Arm;                                               // 0x0070(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MatchClothType_Body                         Body;                                              // 0x0071(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MatchClothType_Leg                          Leg;                                               // 0x0072(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MatchClothType_Head                         Head;                                              // 0x0073(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTranslucent;                                      // 0x0074(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLongSkirt;                                        // 0x0075(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MatchClothType_Neck                         Neck;                                              // 0x0076(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSkipSameSuit;                                     // 0x0077(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           DisableCollisionBone;                              // 0x0078(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bIgnoreTagIntersection;                            // 0x0088(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bForceUpSkin;                                      // 0x0089(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FClothVertexColorMaskUnit>      ColorVertexMaskUnit;                               // 0x0090(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bMatchPartsOverride;                               // 0x00A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<E_MatchClothType, struct FMatchClothParameter> MatchPartsMap;                               // 0x00A8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bBuildVertexLevel;                                 // 0x00F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStruct_ClothMatchSectionPriority> SectionPriority;                                // 0x0100(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          OuterMatchPartsOverride;                           // 0x0110(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<E_MatchClothType, struct FMatchClothParameter> OuterMatchPartsMap;                          // 0x0118(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void GetMatchType(E_MatchClothType InTypeName, int32* Result);
	void OnRep_bRuntimeOuter();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"FitMatchSetting_C">();
	}
	static class UFitMatchSetting_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFitMatchSetting_C>();
	}
};
static_assert(alignof(UFitMatchSetting_C) == 0x000008, "Wrong alignment on UFitMatchSetting_C");
static_assert(sizeof(UFitMatchSetting_C) == 0x000168, "Wrong size on UFitMatchSetting_C");
static_assert(offsetof(UFitMatchSetting_C, Arm) == 0x000070, "Member 'UFitMatchSetting_C::Arm' has a wrong offset!");
static_assert(offsetof(UFitMatchSetting_C, Body) == 0x000071, "Member 'UFitMatchSetting_C::Body' has a wrong offset!");
static_assert(offsetof(UFitMatchSetting_C, Leg) == 0x000072, "Member 'UFitMatchSetting_C::Leg' has a wrong offset!");
static_assert(offsetof(UFitMatchSetting_C, Head) == 0x000073, "Member 'UFitMatchSetting_C::Head' has a wrong offset!");
static_assert(offsetof(UFitMatchSetting_C, bTranslucent) == 0x000074, "Member 'UFitMatchSetting_C::bTranslucent' has a wrong offset!");
static_assert(offsetof(UFitMatchSetting_C, bLongSkirt) == 0x000075, "Member 'UFitMatchSetting_C::bLongSkirt' has a wrong offset!");
static_assert(offsetof(UFitMatchSetting_C, Neck) == 0x000076, "Member 'UFitMatchSetting_C::Neck' has a wrong offset!");
static_assert(offsetof(UFitMatchSetting_C, bSkipSameSuit) == 0x000077, "Member 'UFitMatchSetting_C::bSkipSameSuit' has a wrong offset!");
static_assert(offsetof(UFitMatchSetting_C, DisableCollisionBone) == 0x000078, "Member 'UFitMatchSetting_C::DisableCollisionBone' has a wrong offset!");
static_assert(offsetof(UFitMatchSetting_C, bIgnoreTagIntersection) == 0x000088, "Member 'UFitMatchSetting_C::bIgnoreTagIntersection' has a wrong offset!");
static_assert(offsetof(UFitMatchSetting_C, bForceUpSkin) == 0x000089, "Member 'UFitMatchSetting_C::bForceUpSkin' has a wrong offset!");
static_assert(offsetof(UFitMatchSetting_C, ColorVertexMaskUnit) == 0x000090, "Member 'UFitMatchSetting_C::ColorVertexMaskUnit' has a wrong offset!");
static_assert(offsetof(UFitMatchSetting_C, bMatchPartsOverride) == 0x0000A0, "Member 'UFitMatchSetting_C::bMatchPartsOverride' has a wrong offset!");
static_assert(offsetof(UFitMatchSetting_C, MatchPartsMap) == 0x0000A8, "Member 'UFitMatchSetting_C::MatchPartsMap' has a wrong offset!");
static_assert(offsetof(UFitMatchSetting_C, bBuildVertexLevel) == 0x0000F8, "Member 'UFitMatchSetting_C::bBuildVertexLevel' has a wrong offset!");
static_assert(offsetof(UFitMatchSetting_C, SectionPriority) == 0x000100, "Member 'UFitMatchSetting_C::SectionPriority' has a wrong offset!");
static_assert(offsetof(UFitMatchSetting_C, OuterMatchPartsOverride) == 0x000110, "Member 'UFitMatchSetting_C::OuterMatchPartsOverride' has a wrong offset!");
static_assert(offsetof(UFitMatchSetting_C, OuterMatchPartsMap) == 0x000118, "Member 'UFitMatchSetting_C::OuterMatchPartsMap' has a wrong offset!");

}

