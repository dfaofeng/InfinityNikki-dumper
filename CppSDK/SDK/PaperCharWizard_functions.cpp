#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PaperCharWizard

#include "Basic.hpp"

#include "PaperCharWizard_classes.hpp"
#include "PaperCharWizard_parameters.hpp"


namespace SDK
{

// Function PaperCharWizard.PaperCharWizardGlobalMgr.Receive_Init
// (Event, Public, BlueprintEvent)

void UPaperCharWizardGlobalMgr::Receive_Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperCharWizardGlobalMgr", "Receive_Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PaperCharWizard.PaperCharWizardGlobalMgr.Receive_UnInit
// (Event, Public, BlueprintEvent)

void UPaperCharWizardGlobalMgr::Receive_UnInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaperCharWizardGlobalMgr", "Receive_UnInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PaperCharWizard.X6PaperCharAIWizardLibrary.ActivateGameViewport
// (Final, Native, Static, Public, BlueprintCallable)

void UX6PaperCharAIWizardLibrary::ActivateGameViewport()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6PaperCharAIWizardLibrary", "ActivateGameViewport");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PaperCharWizard.X6PaperCharAIWizardLibrary.AIWizardLib_GetObject
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WidgetObject                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UX6PaperCharAIWizardLibrary::AIWizardLib_GetObject(class UObject* WidgetObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6PaperCharAIWizardLibrary", "AIWizardLib_GetObject");

	Params::X6PaperCharAIWizardLibrary_AIWizardLib_GetObject Parms{};

	Parms.WidgetObject = WidgetObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperCharWizard.X6PaperCharAIWizardLibrary.AIWizardLib_GetPropertyName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WidgetObject                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UX6PaperCharAIWizardLibrary::AIWizardLib_GetPropertyName(class UObject* WidgetObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6PaperCharAIWizardLibrary", "AIWizardLib_GetPropertyName");

	Params::X6PaperCharAIWizardLibrary_AIWizardLib_GetPropertyName Parms{};

	Parms.WidgetObject = WidgetObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperCharWizard.X6PaperCharAIWizardLibrary.AIWizardLib_SetNameOverride
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WidgetObject                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText&                      NewPropertyName                                        (ConstParm, Parm, NativeAccessSpecifierPublic)

void UX6PaperCharAIWizardLibrary::AIWizardLib_SetNameOverride(class UObject* WidgetObject, const class FText& NewPropertyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6PaperCharAIWizardLibrary", "AIWizardLib_SetNameOverride");

	Params::X6PaperCharAIWizardLibrary_AIWizardLib_SetNameOverride Parms{};

	Parms.WidgetObject = WidgetObject;
	Parms.NewPropertyName = std::move(NewPropertyName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperCharWizard.X6PaperCharAIWizardLibrary.AIWizardLib_SetObject
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WidgetObject                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          InNewObject                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6PaperCharAIWizardLibrary::AIWizardLib_SetObject(class UObject* WidgetObject, class UObject* InNewObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6PaperCharAIWizardLibrary", "AIWizardLib_SetObject");

	Params::X6PaperCharAIWizardLibrary_AIWizardLib_SetObject Parms{};

	Parms.WidgetObject = WidgetObject;
	Parms.InNewObject = InNewObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperCharWizard.X6PaperCharAIWizardLibrary.AIWizardLib_SetPropertiesNameOverride
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WidgetObject                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TMap<class FName, class FName>&   InPropertiesNameOverride                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UX6PaperCharAIWizardLibrary::AIWizardLib_SetPropertiesNameOverride(class UObject* WidgetObject, const TMap<class FName, class FName>& InPropertiesNameOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6PaperCharAIWizardLibrary", "AIWizardLib_SetPropertiesNameOverride");

	Params::X6PaperCharAIWizardLibrary_AIWizardLib_SetPropertiesNameOverride Parms{};

	Parms.WidgetObject = WidgetObject;
	Parms.InPropertiesNameOverride = std::move(InPropertiesNameOverride);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperCharWizard.X6PaperCharAIWizardLibrary.AIWizardLib_SetPropertyName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WidgetObject                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             NewPropertyName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6PaperCharAIWizardLibrary::AIWizardLib_SetPropertyName(class UObject* WidgetObject, class FName NewPropertyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6PaperCharAIWizardLibrary", "AIWizardLib_SetPropertyName");

	Params::X6PaperCharAIWizardLibrary_AIWizardLib_SetPropertyName Parms{};

	Parms.WidgetObject = WidgetObject;
	Parms.NewPropertyName = NewPropertyName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperCharWizard.X6PaperCharAIWizardLibrary.AIWizardLib_SetShowPropertyName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WidgetObject                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    NewShowPropertyName                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6PaperCharAIWizardLibrary::AIWizardLib_SetShowPropertyName(class UObject* WidgetObject, bool NewShowPropertyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6PaperCharAIWizardLibrary", "AIWizardLib_SetShowPropertyName");

	Params::X6PaperCharAIWizardLibrary_AIWizardLib_SetShowPropertyName Parms{};

	Parms.WidgetObject = WidgetObject;
	Parms.NewShowPropertyName = NewShowPropertyName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperCharWizard.X6PaperCharAIWizardLibrary.CallFunctionByObjectParam
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             FunctionName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ParamObject                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6PaperCharAIWizardLibrary::CallFunctionByObjectParam(class UObject* Object, class FName FunctionName, class UObject* ParamObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6PaperCharAIWizardLibrary", "CallFunctionByObjectParam");

	Params::X6PaperCharAIWizardLibrary_CallFunctionByObjectParam Parms{};

	Parms.Object = Object;
	Parms.FunctionName = FunctionName;
	Parms.ParamObject = ParamObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperCharWizard.X6PaperCharAIWizardLibrary.CallFunctionByObjectPropertyName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             FunctionName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ParamObject                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParamPropertyName                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6PaperCharAIWizardLibrary::CallFunctionByObjectPropertyName(class UObject* Object, class FName FunctionName, class UObject* ParamObject, class FName ParamPropertyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6PaperCharAIWizardLibrary", "CallFunctionByObjectPropertyName");

	Params::X6PaperCharAIWizardLibrary_CallFunctionByObjectPropertyName Parms{};

	Parms.Object = Object;
	Parms.FunctionName = FunctionName;
	Parms.ParamObject = ParamObject;
	Parms.ParamPropertyName = ParamPropertyName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperCharWizard.X6PaperCharAIWizardLibrary.CanFileCheckout
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    InFile                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECheckoutFaildType*                     CheckoutFaildType                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6PaperCharAIWizardLibrary::CanFileCheckout(const class FString& InFile, ECheckoutFaildType* CheckoutFaildType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6PaperCharAIWizardLibrary", "CanFileCheckout");

	Params::X6PaperCharAIWizardLibrary_CanFileCheckout Parms{};

	Parms.InFile = std::move(InFile);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CheckoutFaildType != nullptr)
		*CheckoutFaildType = Parms.CheckoutFaildType;

	return Parms.ReturnValue;
}


// Function PaperCharWizard.X6PaperCharAIWizardLibrary.CopyObject
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UX6PaperCharAIWizardLibrary::CopyObject(class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6PaperCharAIWizardLibrary", "CopyObject");

	Params::X6PaperCharAIWizardLibrary_CopyObject Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperCharWizard.X6PaperCharAIWizardLibrary.CopyObjectProperties
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          SrcObject                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          TargetObject                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class FName>&              SrcPropertyNames                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// const TArray<class FName>&              TargetPropertyNames                                    (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6PaperCharAIWizardLibrary::CopyObjectProperties(class UObject* SrcObject, class UObject* TargetObject, const TArray<class FName>& SrcPropertyNames, const TArray<class FName>& TargetPropertyNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6PaperCharAIWizardLibrary", "CopyObjectProperties");

	Params::X6PaperCharAIWizardLibrary_CopyObjectProperties Parms{};

	Parms.SrcObject = SrcObject;
	Parms.TargetObject = TargetObject;
	Parms.SrcPropertyNames = std::move(SrcPropertyNames);
	Parms.TargetPropertyNames = std::move(TargetPropertyNames);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperCharWizard.X6PaperCharAIWizardLibrary.CreateObjectToFile
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSubclassOf<class UObject>              ObjectClass                                            (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UObject>           SoftObjectClass                                        (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    DefaultPath                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString*                          OutFilePath                                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject**                         OutObject                                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    AssetName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ShowSelectPathPanel                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6PaperCharAIWizardLibrary::CreateObjectToFile(TSubclassOf<class UObject> ObjectClass, TSoftObjectPtr<class UObject> SoftObjectClass, const class FString& DefaultPath, class FString* OutFilePath, class UObject** OutObject, const class FString& AssetName, bool ShowSelectPathPanel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6PaperCharAIWizardLibrary", "CreateObjectToFile");

	Params::X6PaperCharAIWizardLibrary_CreateObjectToFile Parms{};

	Parms.ObjectClass = ObjectClass;
	Parms.SoftObjectClass = SoftObjectClass;
	Parms.DefaultPath = std::move(DefaultPath);
	Parms.AssetName = std::move(AssetName);
	Parms.ShowSelectPathPanel = ShowSelectPathPanel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutFilePath != nullptr)
		*OutFilePath = std::move(Parms.OutFilePath);

	if (OutObject != nullptr)
		*OutObject = Parms.OutObject;

	return Parms.ReturnValue;
}


// Function PaperCharWizard.X6PaperCharAIWizardLibrary.ExportDAAsset
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6PaperCharAIWizardLibrary::ExportDAAsset(class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6PaperCharAIWizardLibrary", "ExportDAAsset");

	Params::X6PaperCharAIWizardLibrary_ExportDAAsset Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperCharWizard.X6PaperCharAIWizardLibrary.ExportDTAsset
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UDataTable*                       DataTable                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ExcelFileName                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ExcelSheetName                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class FString>&            TbNames                                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FString*                          ErrorMsg                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    NeedGenTb                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    NeedCheckOut                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6PaperCharAIWizardLibrary::ExportDTAsset(class UDataTable* DataTable, const class FString& ExcelFileName, const class FString& ExcelSheetName, const TArray<class FString>& TbNames, class FString* ErrorMsg, bool NeedGenTb, bool NeedCheckOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6PaperCharAIWizardLibrary", "ExportDTAsset");

	Params::X6PaperCharAIWizardLibrary_ExportDTAsset Parms{};

	Parms.DataTable = DataTable;
	Parms.ExcelFileName = std::move(ExcelFileName);
	Parms.ExcelSheetName = std::move(ExcelSheetName);
	Parms.TbNames = std::move(TbNames);
	Parms.NeedGenTb = NeedGenTb;
	Parms.NeedCheckOut = NeedCheckOut;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ErrorMsg != nullptr)
		*ErrorMsg = std::move(Parms.ErrorMsg);

	return Parms.ReturnValue;
}


// Function PaperCharWizard.X6PaperCharAIWizardLibrary.ExportGameplayTags
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString*                          OutMsg                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString*                          OutXmlPath                                             (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString*                          OutExcelPath                                           (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6PaperCharAIWizardLibrary::ExportGameplayTags(class FString* OutMsg, class FString* OutXmlPath, class FString* OutExcelPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6PaperCharAIWizardLibrary", "ExportGameplayTags");

	Params::X6PaperCharAIWizardLibrary_ExportGameplayTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutMsg != nullptr)
		*OutMsg = std::move(Parms.OutMsg);

	if (OutXmlPath != nullptr)
		*OutXmlPath = std::move(Parms.OutXmlPath);

	if (OutExcelPath != nullptr)
		*OutExcelPath = std::move(Parms.OutExcelPath);

	return Parms.ReturnValue;
}


// Function PaperCharWizard.X6PaperCharAIWizardLibrary.GenerateConfigByTime
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString*                          OutMsg                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6PaperCharAIWizardLibrary::GenerateConfigByTime(class FString* OutMsg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6PaperCharAIWizardLibrary", "GenerateConfigByTime");

	Params::X6PaperCharAIWizardLibrary_GenerateConfigByTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutMsg != nullptr)
		*OutMsg = std::move(Parms.OutMsg);

	return Parms.ReturnValue;
}


// Function PaperCharWizard.X6PaperCharAIWizardLibrary.GetDataTableRowDependenceAssetPaths
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UDataTable*                       DataTable                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             RowName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>*                  OutPackagePaths                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6PaperCharAIWizardLibrary::GetDataTableRowDependenceAssetPaths(class UDataTable* DataTable, class FName RowName, TArray<class FString>* OutPackagePaths)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6PaperCharAIWizardLibrary", "GetDataTableRowDependenceAssetPaths");

	Params::X6PaperCharAIWizardLibrary_GetDataTableRowDependenceAssetPaths Parms{};

	Parms.DataTable = DataTable;
	Parms.RowName = RowName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPackagePaths != nullptr)
		*OutPackagePaths = std::move(Parms.OutPackagePaths);

	return Parms.ReturnValue;
}


// Function PaperCharWizard.X6PaperCharAIWizardLibrary.GetEnumValueDisplayNameMap
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    EnumNameOrPath                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsBlueprintEnum                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<class FString, int32>              ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<class FString, int32> UX6PaperCharAIWizardLibrary::GetEnumValueDisplayNameMap(const class FString& EnumNameOrPath, bool IsBlueprintEnum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6PaperCharAIWizardLibrary", "GetEnumValueDisplayNameMap");

	Params::X6PaperCharAIWizardLibrary_GetEnumValueDisplayNameMap Parms{};

	Parms.EnumNameOrPath = std::move(EnumNameOrPath);
	Parms.IsBlueprintEnum = IsBlueprintEnum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperCharWizard.X6PaperCharAIWizardLibrary.GetHashID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InString                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UX6PaperCharAIWizardLibrary::GetHashID(const class FString& InString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6PaperCharAIWizardLibrary", "GetHashID");

	Params::X6PaperCharAIWizardLibrary_GetHashID Parms{};

	Parms.InString = std::move(InString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperCharWizard.X6PaperCharAIWizardLibrary.GetPropertyNamesByCategoriesWithIgnore
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class FName>&              Categories                                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// const TArray<class FName>&              IgnoreNames                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UX6PaperCharAIWizardLibrary::GetPropertyNamesByCategoriesWithIgnore(class UObject* Object, const TArray<class FName>& Categories, const TArray<class FName>& IgnoreNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6PaperCharAIWizardLibrary", "GetPropertyNamesByCategoriesWithIgnore");

	Params::X6PaperCharAIWizardLibrary_GetPropertyNamesByCategoriesWithIgnore Parms{};

	Parms.Object = Object;
	Parms.Categories = std::move(Categories);
	Parms.IgnoreNames = std::move(IgnoreNames);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperCharWizard.X6PaperCharAIWizardLibrary.GetPropertyNamesByCategory
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             CategoryName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UX6PaperCharAIWizardLibrary::GetPropertyNamesByCategory(class UObject* Object, class FName CategoryName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6PaperCharAIWizardLibrary", "GetPropertyNamesByCategory");

	Params::X6PaperCharAIWizardLibrary_GetPropertyNamesByCategory Parms{};

	Parms.Object = Object;
	Parms.CategoryName = CategoryName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperCharWizard.X6PaperCharAIWizardLibrary.IsAssetDirty
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6PaperCharAIWizardLibrary::IsAssetDirty(class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6PaperCharAIWizardLibrary", "IsAssetDirty");

	Params::X6PaperCharAIWizardLibrary_IsAssetDirty Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperCharWizard.X6PaperCharAIWizardLibrary.IsFileCheckedOut
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InFile                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6PaperCharAIWizardLibrary::IsFileCheckedOut(const class FString& InFile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6PaperCharAIWizardLibrary", "IsFileCheckedOut");

	Params::X6PaperCharAIWizardLibrary_IsFileCheckedOut Parms{};

	Parms.InFile = std::move(InFile);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperCharWizard.X6PaperCharAIWizardLibrary.P4CheckOutFile
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InFile                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6PaperCharAIWizardLibrary::P4CheckOutFile(const class FString& InFile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6PaperCharAIWizardLibrary", "P4CheckOutFile");

	Params::X6PaperCharAIWizardLibrary_P4CheckOutFile Parms{};

	Parms.InFile = std::move(InFile);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperCharWizard.X6PaperCharAIWizardLibrary.P4DeleteFile
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InFile                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6PaperCharAIWizardLibrary::P4DeleteFile(const class FString& InFile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6PaperCharAIWizardLibrary", "P4DeleteFile");

	Params::X6PaperCharAIWizardLibrary_P4DeleteFile Parms{};

	Parms.InFile = std::move(InFile);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperCharWizard.X6PaperCharAIWizardLibrary.RenameAsset
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    NewName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6PaperCharAIWizardLibrary::RenameAsset(class UObject* Object, const class FString& NewName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6PaperCharAIWizardLibrary", "RenameAsset");

	Params::X6PaperCharAIWizardLibrary_RenameAsset Parms{};

	Parms.Object = Object;
	Parms.NewName = std::move(NewName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperCharWizard.X6PaperCharAIWizardLibrary.ReplaceObject
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          SrcObject                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          TargetObject                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    UseStandaloneAssetFlag                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6PaperCharAIWizardLibrary::ReplaceObject(class UObject* SrcObject, class UObject* TargetObject, bool UseStandaloneAssetFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6PaperCharAIWizardLibrary", "ReplaceObject");

	Params::X6PaperCharAIWizardLibrary_ReplaceObject Parms{};

	Parms.SrcObject = SrcObject;
	Parms.TargetObject = TargetObject;
	Parms.UseStandaloneAssetFlag = UseStandaloneAssetFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperCharWizard.X6PaperCharAIWizardLibrary.SaveAndCheckOutAsset
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6PaperCharAIWizardLibrary::SaveAndCheckOutAsset(class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6PaperCharAIWizardLibrary", "SaveAndCheckOutAsset");

	Params::X6PaperCharAIWizardLibrary_SaveAndCheckOutAsset Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperCharWizard.X6PaperCharAIWizardLibrary.SaveObject
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6PaperCharAIWizardLibrary::SaveObject(class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6PaperCharAIWizardLibrary", "SaveObject");

	Params::X6PaperCharAIWizardLibrary_SaveObject Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperCharWizard.X6PaperCharAIWizardLibrary.SaveObjectToFile
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    DefaultPath                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString*                          OutFilePath                                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject**                         OutObject                                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    AssetName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ShowSelectPathPanel                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6PaperCharAIWizardLibrary::SaveObjectToFile(class UObject* Object, const class FString& DefaultPath, class FString* OutFilePath, class UObject** OutObject, const class FString& AssetName, bool ShowSelectPathPanel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6PaperCharAIWizardLibrary", "SaveObjectToFile");

	Params::X6PaperCharAIWizardLibrary_SaveObjectToFile Parms{};

	Parms.Object = Object;
	Parms.DefaultPath = std::move(DefaultPath);
	Parms.AssetName = std::move(AssetName);
	Parms.ShowSelectPathPanel = ShowSelectPathPanel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutFilePath != nullptr)
		*OutFilePath = std::move(Parms.OutFilePath);

	if (OutObject != nullptr)
		*OutObject = Parms.OutObject;

	return Parms.ReturnValue;
}


// Function PaperCharWizard.X6PaperCharAIWizardLibrary.SelectAssetFromContentBrowser
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    AssetPath                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UObject>              AssetClass                                             (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UX6PaperCharAIWizardLibrary::SelectAssetFromContentBrowser(const class FString& AssetPath, TSubclassOf<class UObject> AssetClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6PaperCharAIWizardLibrary", "SelectAssetFromContentBrowser");

	Params::X6PaperCharAIWizardLibrary_SelectAssetFromContentBrowser Parms{};

	Parms.AssetPath = std::move(AssetPath);
	Parms.AssetClass = AssetClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperCharWizard.X6PaperCharAIWizardLibrary.SyncPackagesFromSourceControl
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class FString>&            PackageNames                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UX6PaperCharAIWizardLibrary::SyncPackagesFromSourceControl(const TArray<class FString>& PackageNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6PaperCharAIWizardLibrary", "SyncPackagesFromSourceControl");

	Params::X6PaperCharAIWizardLibrary_SyncPackagesFromSourceControl Parms{};

	Parms.PackageNames = std::move(PackageNames);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperCharWizard.X6PaperCharAIWizardLibrary.UpdatePackageByPaths
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class FString>&            PackagePaths                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class FString>*                  CheckoutByOtherList                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class FString>*                  NotLatestList                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6PaperCharAIWizardLibrary::UpdatePackageByPaths(const TArray<class FString>& PackagePaths, TArray<class FString>* CheckoutByOtherList, TArray<class FString>* NotLatestList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6PaperCharAIWizardLibrary", "UpdatePackageByPaths");

	Params::X6PaperCharAIWizardLibrary_UpdatePackageByPaths Parms{};

	Parms.PackagePaths = std::move(PackagePaths);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CheckoutByOtherList != nullptr)
		*CheckoutByOtherList = std::move(Parms.CheckoutByOtherList);

	if (NotLatestList != nullptr)
		*NotLatestList = std::move(Parms.NotLatestList);

	return Parms.ReturnValue;
}


// Function PaperCharWizard.X6T2NpcConfigMgr.GetInstance
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UX6T2NpcConfigMgr*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UX6T2NpcConfigMgr* UX6T2NpcConfigMgr::GetInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6T2NpcConfigMgr", "GetInstance");

	Params::X6T2NpcConfigMgr_GetInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperCharWizard.X6T2NpcConfigMgr.GetAllMovableNPCDatas
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FT2MoveNpcVersionGroupInfo>*Spawners                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UX6T2NpcConfigMgr::GetAllMovableNPCDatas(TArray<struct FT2MoveNpcVersionGroupInfo>* Spawners)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6T2NpcConfigMgr", "GetAllMovableNPCDatas");

	Params::X6T2NpcConfigMgr_GetAllMovableNPCDatas Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Spawners != nullptr)
		*Spawners = std::move(Parms.Spawners);
}


// Function PaperCharWizard.X6T2NpcConfigMgr.GetAllStaticNPCDatas
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FT2NpcVersionSpawnConfig>*Spawners                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UX6T2NpcConfigMgr::GetAllStaticNPCDatas(TArray<struct FT2NpcVersionSpawnConfig>* Spawners)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6T2NpcConfigMgr", "GetAllStaticNPCDatas");

	Params::X6T2NpcConfigMgr_GetAllStaticNPCDatas Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Spawners != nullptr)
		*Spawners = std::move(Parms.Spawners);
}


// Function PaperCharWizard.X6T2NpcConfigMgr.GetT2MoveNPCSpawnerCharData
// (Final, Native, Public, HasOutParams)
// Parameters:
// const int64                             SpawnerID                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int64                             DatalayerId                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FT2MoveNpcVersionGroupInfo*      OutSpawnerConfig                                       (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6T2NpcConfigMgr::GetT2MoveNPCSpawnerCharData(const int64 SpawnerID, const int64 DatalayerId, struct FT2MoveNpcVersionGroupInfo* OutSpawnerConfig)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6T2NpcConfigMgr", "GetT2MoveNPCSpawnerCharData");

	Params::X6T2NpcConfigMgr_GetT2MoveNPCSpawnerCharData Parms{};

	Parms.SpawnerID = SpawnerID;
	Parms.DatalayerId = DatalayerId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSpawnerConfig != nullptr)
		*OutSpawnerConfig = std::move(Parms.OutSpawnerConfig);

	return Parms.ReturnValue;
}


// Function PaperCharWizard.X6T2NpcConfigMgr.GetT2MoveNPCSpawnerCharDataWithVersionNo
// (Final, Native, Public, HasOutParams)
// Parameters:
// const int64                             SpawnerID                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int64                             DatalayerId                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FT2MoveNpcGroupInfo*             OutSpawnerConfig                                       (Parm, OutParm, NativeAccessSpecifierPublic)
// const class FString&                    VersionNo                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6T2NpcConfigMgr::GetT2MoveNPCSpawnerCharDataWithVersionNo(const int64 SpawnerID, const int64 DatalayerId, struct FT2MoveNpcGroupInfo* OutSpawnerConfig, const class FString& VersionNo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6T2NpcConfigMgr", "GetT2MoveNPCSpawnerCharDataWithVersionNo");

	Params::X6T2NpcConfigMgr_GetT2MoveNPCSpawnerCharDataWithVersionNo Parms{};

	Parms.SpawnerID = SpawnerID;
	Parms.DatalayerId = DatalayerId;
	Parms.VersionNo = std::move(VersionNo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSpawnerConfig != nullptr)
		*OutSpawnerConfig = std::move(Parms.OutSpawnerConfig);

	return Parms.ReturnValue;
}


// Function PaperCharWizard.X6T2NpcConfigMgr.GetT2NPCSpawnerCharDataInLayer
// (Final, Native, Public, HasOutParams)
// Parameters:
// const int64&                            DatalayerId                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<int64, struct FT2NpcVersionSpawnConfig>*Result                                                 (Parm, OutParm, NativeAccessSpecifierPublic)

void UX6T2NpcConfigMgr::GetT2NPCSpawnerCharDataInLayer(const int64& DatalayerId, TMap<int64, struct FT2NpcVersionSpawnConfig>* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6T2NpcConfigMgr", "GetT2NPCSpawnerCharDataInLayer");

	Params::X6T2NpcConfigMgr_GetT2NPCSpawnerCharDataInLayer Parms{};

	Parms.DatalayerId = DatalayerId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function PaperCharWizard.X6T2NpcConfigMgr.IsT2MoveNPCSpawnerCharDataLoaded
// (Final, Native, Public, HasOutParams)
// Parameters:
// const int64&                            DatalayerId                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int64&                            SpawnerID                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6T2NpcConfigMgr::IsT2MoveNPCSpawnerCharDataLoaded(const int64& DatalayerId, const int64& SpawnerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6T2NpcConfigMgr", "IsT2MoveNPCSpawnerCharDataLoaded");

	Params::X6T2NpcConfigMgr_IsT2MoveNPCSpawnerCharDataLoaded Parms{};

	Parms.DatalayerId = DatalayerId;
	Parms.SpawnerID = SpawnerID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperCharWizard.X6T2NpcConfigMgr.IsT2NPCSpawnerCharDataLoaded
// (Final, Native, Public, HasOutParams)
// Parameters:
// const int64&                            DatalayerId                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int64&                            SpawnerID                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6T2NpcConfigMgr::IsT2NPCSpawnerCharDataLoaded(const int64& DatalayerId, const int64& SpawnerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6T2NpcConfigMgr", "IsT2NPCSpawnerCharDataLoaded");

	Params::X6T2NpcConfigMgr_IsT2NPCSpawnerCharDataLoaded Parms{};

	Parms.DatalayerId = DatalayerId;
	Parms.SpawnerID = SpawnerID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PaperCharWizard.X6T2NpcConfigMgr.LoadT2MoveNPCSpawnerCharDataAsync
// (Final, Native, Public, HasOutParams)
// Parameters:
// const int64&                            DatalayerId                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6T2NpcConfigMgr::LoadT2MoveNPCSpawnerCharDataAsync(const int64& DatalayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6T2NpcConfigMgr", "LoadT2MoveNPCSpawnerCharDataAsync");

	Params::X6T2NpcConfigMgr_LoadT2MoveNPCSpawnerCharDataAsync Parms{};

	Parms.DatalayerId = DatalayerId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperCharWizard.X6T2NpcConfigMgr.LoadT2NPCSpawnerCharDataAsync
// (Final, Native, Public, HasOutParams)
// Parameters:
// const int64&                            DatalayerId                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6T2NpcConfigMgr::LoadT2NPCSpawnerCharDataAsync(const int64& DatalayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6T2NpcConfigMgr", "LoadT2NPCSpawnerCharDataAsync");

	Params::X6T2NpcConfigMgr_LoadT2NPCSpawnerCharDataAsync Parms{};

	Parms.DatalayerId = DatalayerId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperCharWizard.X6T2NpcConfigMgr.RemoveSpawnerCharData
// (Native, Public, HasOutParams)
// Parameters:
// const int64&                            DatalayerId                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int64&                            SpawnerID                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6T2NpcConfigMgr::RemoveSpawnerCharData(const int64& DatalayerId, const int64& SpawnerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6T2NpcConfigMgr", "RemoveSpawnerCharData");

	Params::X6T2NpcConfigMgr_RemoveSpawnerCharData Parms{};

	Parms.DatalayerId = DatalayerId;
	Parms.SpawnerID = SpawnerID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperCharWizard.X6T2NpcConfigMgr.RemoveT2MoveNPCSpawnerCharData
// (Final, Native, Public, HasOutParams)
// Parameters:
// const int64&                            DatalayerId                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int64&                            SpawnerID                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6T2NpcConfigMgr::RemoveT2MoveNPCSpawnerCharData(const int64& DatalayerId, const int64& SpawnerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6T2NpcConfigMgr", "RemoveT2MoveNPCSpawnerCharData");

	Params::X6T2NpcConfigMgr_RemoveT2MoveNPCSpawnerCharData Parms{};

	Parms.DatalayerId = DatalayerId;
	Parms.SpawnerID = SpawnerID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PaperCharWizard.X6T2NpcConfigMgr.TryGetSpawnerCharData
// (Native, Public, HasOutParams)
// Parameters:
// const int64&                            SpawnerID                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int64&                            DatalayerId                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FT2NpcVersionSpawnConfig*        versionSpawnerConfig                                   (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6T2NpcConfigMgr::TryGetSpawnerCharData(const int64& SpawnerID, const int64& DatalayerId, struct FT2NpcVersionSpawnConfig* versionSpawnerConfig)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6T2NpcConfigMgr", "TryGetSpawnerCharData");

	Params::X6T2NpcConfigMgr_TryGetSpawnerCharData Parms{};

	Parms.SpawnerID = SpawnerID;
	Parms.DatalayerId = DatalayerId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (versionSpawnerConfig != nullptr)
		*versionSpawnerConfig = std::move(Parms.versionSpawnerConfig);

	return Parms.ReturnValue;
}


// Function PaperCharWizard.X6T2NpcConfigMgr.TryGetSpawnerCharDataWithVersion
// (Native, Public, HasOutParams)
// Parameters:
// const int64&                            SpawnerID                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int64&                            DatalayerId                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FT2NpcSpawnConfig*               spawnerConfig                                          (Parm, OutParm, NativeAccessSpecifierPublic)
// const class FString&                    VersionNo                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6T2NpcConfigMgr::TryGetSpawnerCharDataWithVersion(const int64& SpawnerID, const int64& DatalayerId, struct FT2NpcSpawnConfig* spawnerConfig, const class FString& VersionNo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6T2NpcConfigMgr", "TryGetSpawnerCharDataWithVersion");

	Params::X6T2NpcConfigMgr_TryGetSpawnerCharDataWithVersion Parms{};

	Parms.SpawnerID = SpawnerID;
	Parms.DatalayerId = DatalayerId;
	Parms.VersionNo = std::move(VersionNo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (spawnerConfig != nullptr)
		*spawnerConfig = std::move(Parms.spawnerConfig);

	return Parms.ReturnValue;
}

}

