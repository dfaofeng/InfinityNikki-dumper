#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PaperMovieScene

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "MovieScene_structs.hpp"
#include "MovieScene_classes.hpp"
#include "SlateCore_structs.hpp"
#include "MovieSceneTracks_structs.hpp"
#include "PaperMovieScene_structs.hpp"


namespace SDK
{

// Class PaperMovieScene.PaperMovieSceneCameraCutSection
// 0x00B0 (0x01D0 - 0x0120)
class UPaperMovieSceneCameraCutSection final : public UMovieSceneSection
{
public:
	uint8                                         Pad_120[0x8];                                      // 0x0120(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bLockPreviousCamera;                               // 0x0128(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CameraGuid;                                        // 0x012C(0x0010)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FMovieSceneObjectBindingID             CameraBindingID;                                   // 0x013C(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_154[0xC];                                      // 0x0154(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             InitialCameraCutTransform;                         // 0x0160(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bHasInitialCameraCutTransform;                     // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1C1[0xF];                                      // 0x01C1(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetCameraBindingID(const struct FMovieSceneObjectBindingID& InCameraBindingID);

	const struct FMovieSceneObjectBindingID GetCameraBindingID() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PaperMovieSceneCameraCutSection">();
	}
	static class UPaperMovieSceneCameraCutSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPaperMovieSceneCameraCutSection>();
	}
};
static_assert(alignof(UPaperMovieSceneCameraCutSection) == 0x000010, "Wrong alignment on UPaperMovieSceneCameraCutSection");
static_assert(sizeof(UPaperMovieSceneCameraCutSection) == 0x0001D0, "Wrong size on UPaperMovieSceneCameraCutSection");
static_assert(offsetof(UPaperMovieSceneCameraCutSection, bLockPreviousCamera) == 0x000128, "Member 'UPaperMovieSceneCameraCutSection::bLockPreviousCamera' has a wrong offset!");
static_assert(offsetof(UPaperMovieSceneCameraCutSection, CameraGuid) == 0x00012C, "Member 'UPaperMovieSceneCameraCutSection::CameraGuid' has a wrong offset!");
static_assert(offsetof(UPaperMovieSceneCameraCutSection, CameraBindingID) == 0x00013C, "Member 'UPaperMovieSceneCameraCutSection::CameraBindingID' has a wrong offset!");
static_assert(offsetof(UPaperMovieSceneCameraCutSection, InitialCameraCutTransform) == 0x000160, "Member 'UPaperMovieSceneCameraCutSection::InitialCameraCutTransform' has a wrong offset!");
static_assert(offsetof(UPaperMovieSceneCameraCutSection, bHasInitialCameraCutTransform) == 0x0001C0, "Member 'UPaperMovieSceneCameraCutSection::bHasInitialCameraCutTransform' has a wrong offset!");

// Class PaperMovieScene.PaperMovieSceneCameraCutTrack
// 0x0020 (0x00B8 - 0x0098)
class UPaperMovieSceneCameraCutTrack final : public UMovieSceneNameableTrack
{
public:
	bool                                          bCanBlend;                                         // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMovieSceneSection*>             Sections;                                          // 0x00A0(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	bool                                          bAutoArrangeSections;                              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PaperMovieSceneCameraCutTrack">();
	}
	static class UPaperMovieSceneCameraCutTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPaperMovieSceneCameraCutTrack>();
	}
};
static_assert(alignof(UPaperMovieSceneCameraCutTrack) == 0x000008, "Wrong alignment on UPaperMovieSceneCameraCutTrack");
static_assert(sizeof(UPaperMovieSceneCameraCutTrack) == 0x0000B8, "Wrong size on UPaperMovieSceneCameraCutTrack");
static_assert(offsetof(UPaperMovieSceneCameraCutTrack, bCanBlend) == 0x000098, "Member 'UPaperMovieSceneCameraCutTrack::bCanBlend' has a wrong offset!");
static_assert(offsetof(UPaperMovieSceneCameraCutTrack, Sections) == 0x0000A0, "Member 'UPaperMovieSceneCameraCutTrack::Sections' has a wrong offset!");
static_assert(offsetof(UPaperMovieSceneCameraCutTrack, bAutoArrangeSections) == 0x0000B0, "Member 'UPaperMovieSceneCameraCutTrack::bAutoArrangeSections' has a wrong offset!");

// Class PaperMovieScene.PaperMovieSceneCameraCutTrackInstance
// 0x0028 (0x0078 - 0x0050)
class UPaperMovieSceneCameraCutTrackInstance final : public UMovieSceneTrackInstance
{
public:
	uint8                                         Pad_50[0x28];                                      // 0x0050(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PaperMovieSceneCameraCutTrackInstance">();
	}
	static class UPaperMovieSceneCameraCutTrackInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPaperMovieSceneCameraCutTrackInstance>();
	}
};
static_assert(alignof(UPaperMovieSceneCameraCutTrackInstance) == 0x000008, "Wrong alignment on UPaperMovieSceneCameraCutTrackInstance");
static_assert(sizeof(UPaperMovieSceneCameraCutTrackInstance) == 0x000078, "Wrong size on UPaperMovieSceneCameraCutTrackInstance");

// Class PaperMovieScene.PaperMovieSceneGroupSection
// 0x0158 (0x0278 - 0x0120)
class UPaperMovieSceneGroupSection final : public UMovieSceneGroupSectionInterface
{
public:
	class FString                                 TitleSuffix;                                       // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UPaperMovieSceneGroupSection*>   LineBreaks;                                        // 0x0130(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	EPaperGroupSectionSubType                     subtype;                                           // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperMovieSceneLineSection*            LineSection;                                       // 0x0148(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowSkip;                                        // 0x0150(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoPlayNextPart;                                 // 0x0151(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowText;                                         // 0x0152(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_153[0x25];                                     // 0x0153(0x0025)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFrameNumber                           LastTime;                                          // 0x0178(0x0004)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMovieSceneSection*>             GroupItems;                                        // 0x0180(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_190[0xE8];                                     // 0x0190(0x00E8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PaperMovieSceneGroupSection">();
	}
	static class UPaperMovieSceneGroupSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPaperMovieSceneGroupSection>();
	}
};
static_assert(alignof(UPaperMovieSceneGroupSection) == 0x000008, "Wrong alignment on UPaperMovieSceneGroupSection");
static_assert(sizeof(UPaperMovieSceneGroupSection) == 0x000278, "Wrong size on UPaperMovieSceneGroupSection");
static_assert(offsetof(UPaperMovieSceneGroupSection, TitleSuffix) == 0x000120, "Member 'UPaperMovieSceneGroupSection::TitleSuffix' has a wrong offset!");
static_assert(offsetof(UPaperMovieSceneGroupSection, LineBreaks) == 0x000130, "Member 'UPaperMovieSceneGroupSection::LineBreaks' has a wrong offset!");
static_assert(offsetof(UPaperMovieSceneGroupSection, subtype) == 0x000140, "Member 'UPaperMovieSceneGroupSection::subtype' has a wrong offset!");
static_assert(offsetof(UPaperMovieSceneGroupSection, LineSection) == 0x000148, "Member 'UPaperMovieSceneGroupSection::LineSection' has a wrong offset!");
static_assert(offsetof(UPaperMovieSceneGroupSection, bAllowSkip) == 0x000150, "Member 'UPaperMovieSceneGroupSection::bAllowSkip' has a wrong offset!");
static_assert(offsetof(UPaperMovieSceneGroupSection, bAutoPlayNextPart) == 0x000151, "Member 'UPaperMovieSceneGroupSection::bAutoPlayNextPart' has a wrong offset!");
static_assert(offsetof(UPaperMovieSceneGroupSection, bShowText) == 0x000152, "Member 'UPaperMovieSceneGroupSection::bShowText' has a wrong offset!");
static_assert(offsetof(UPaperMovieSceneGroupSection, LastTime) == 0x000178, "Member 'UPaperMovieSceneGroupSection::LastTime' has a wrong offset!");
static_assert(offsetof(UPaperMovieSceneGroupSection, GroupItems) == 0x000180, "Member 'UPaperMovieSceneGroupSection::GroupItems' has a wrong offset!");

// Class PaperMovieScene.PaperMovieSceneGroupTrack
// 0x0030 (0x00C8 - 0x0098)
class UPaperMovieSceneGroupTrack final : public UMovieSceneGroupTrackInterface
{
public:
	uint8                                         Pad_98[0x20];                                      // 0x0098(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMovieSceneSection*>             Sections;                                          // 0x00B8(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PaperMovieSceneGroupTrack">();
	}
	static class UPaperMovieSceneGroupTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPaperMovieSceneGroupTrack>();
	}
};
static_assert(alignof(UPaperMovieSceneGroupTrack) == 0x000008, "Wrong alignment on UPaperMovieSceneGroupTrack");
static_assert(sizeof(UPaperMovieSceneGroupTrack) == 0x0000C8, "Wrong size on UPaperMovieSceneGroupTrack");
static_assert(offsetof(UPaperMovieSceneGroupTrack, Sections) == 0x0000B8, "Member 'UPaperMovieSceneGroupTrack::Sections' has a wrong offset!");

// Class PaperMovieScene.PaperMovieSceneIdleSectionBase
// 0x0000 (0x0120 - 0x0120)
class UPaperMovieSceneIdleSectionBase : public UMovieSceneSection
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PaperMovieSceneIdleSectionBase">();
	}
	static class UPaperMovieSceneIdleSectionBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPaperMovieSceneIdleSectionBase>();
	}
};
static_assert(alignof(UPaperMovieSceneIdleSectionBase) == 0x000008, "Wrong alignment on UPaperMovieSceneIdleSectionBase");
static_assert(sizeof(UPaperMovieSceneIdleSectionBase) == 0x000120, "Wrong size on UPaperMovieSceneIdleSectionBase");

// Class PaperMovieScene.PaperMovieSceneIdleRepeaterSection
// 0x0010 (0x0130 - 0x0120)
class UPaperMovieSceneIdleRepeaterSection final : public UPaperMovieSceneIdleSectionBase
{
public:
	class FString                                 EventName;                                         // 0x0120(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PaperMovieSceneIdleRepeaterSection">();
	}
	static class UPaperMovieSceneIdleRepeaterSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPaperMovieSceneIdleRepeaterSection>();
	}
};
static_assert(alignof(UPaperMovieSceneIdleRepeaterSection) == 0x000008, "Wrong alignment on UPaperMovieSceneIdleRepeaterSection");
static_assert(sizeof(UPaperMovieSceneIdleRepeaterSection) == 0x000130, "Wrong size on UPaperMovieSceneIdleRepeaterSection");
static_assert(offsetof(UPaperMovieSceneIdleRepeaterSection, EventName) == 0x000120, "Member 'UPaperMovieSceneIdleRepeaterSection::EventName' has a wrong offset!");

// Class PaperMovieScene.PaperMovieSceneIdleTrack
// 0x0020 (0x00B8 - 0x0098)
class UPaperMovieSceneIdleTrack final : public UMovieSceneNameableTrack
{
public:
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         bFireEventsWhenForwards : 1;                       // 0x00A0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bFireEventsWhenBackwards : 1;                      // 0x00A0(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	EFireEventsAtPosition                         EventPosition;                                     // 0x00A4(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMovieSceneSection*>             Sections;                                          // 0x00A8(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PaperMovieSceneIdleTrack">();
	}
	static class UPaperMovieSceneIdleTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPaperMovieSceneIdleTrack>();
	}
};
static_assert(alignof(UPaperMovieSceneIdleTrack) == 0x000008, "Wrong alignment on UPaperMovieSceneIdleTrack");
static_assert(sizeof(UPaperMovieSceneIdleTrack) == 0x0000B8, "Wrong size on UPaperMovieSceneIdleTrack");
static_assert(offsetof(UPaperMovieSceneIdleTrack, EventPosition) == 0x0000A4, "Member 'UPaperMovieSceneIdleTrack::EventPosition' has a wrong offset!");
static_assert(offsetof(UPaperMovieSceneIdleTrack, Sections) == 0x0000A8, "Member 'UPaperMovieSceneIdleTrack::Sections' has a wrong offset!");

// Class PaperMovieScene.PaperMovieSceneIdleTriggerSection
// 0x0110 (0x0230 - 0x0120)
class UPaperMovieSceneIdleTriggerSection final : public UPaperMovieSceneIdleSectionBase
{
public:
	struct FMovieSceneStringChannel               StringChannel;                                     // 0x0120(0x0110)(NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PaperMovieSceneIdleTriggerSection">();
	}
	static class UPaperMovieSceneIdleTriggerSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPaperMovieSceneIdleTriggerSection>();
	}
};
static_assert(alignof(UPaperMovieSceneIdleTriggerSection) == 0x000008, "Wrong alignment on UPaperMovieSceneIdleTriggerSection");
static_assert(sizeof(UPaperMovieSceneIdleTriggerSection) == 0x000230, "Wrong size on UPaperMovieSceneIdleTriggerSection");
static_assert(offsetof(UPaperMovieSceneIdleTriggerSection, StringChannel) == 0x000120, "Member 'UPaperMovieSceneIdleTriggerSection::StringChannel' has a wrong offset!");

// Class PaperMovieScene.PaperMovieSceneLineSection
// 0x0020 (0x0140 - 0x0120)
class UPaperMovieSceneLineSection final : public UMovieSceneSection
{
public:
	uint8                                         bCustomDuration : 1;                               // 0x0120(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SpeakerTag;                                        // 0x0124(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   TextId;                                            // 0x012C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   SpeakerText;                                       // 0x0134(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PaperMovieSceneLineSection">();
	}
	static class UPaperMovieSceneLineSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPaperMovieSceneLineSection>();
	}
};
static_assert(alignof(UPaperMovieSceneLineSection) == 0x000008, "Wrong alignment on UPaperMovieSceneLineSection");
static_assert(sizeof(UPaperMovieSceneLineSection) == 0x000140, "Wrong size on UPaperMovieSceneLineSection");
static_assert(offsetof(UPaperMovieSceneLineSection, SpeakerTag) == 0x000124, "Member 'UPaperMovieSceneLineSection::SpeakerTag' has a wrong offset!");
static_assert(offsetof(UPaperMovieSceneLineSection, TextId) == 0x00012C, "Member 'UPaperMovieSceneLineSection::TextId' has a wrong offset!");
static_assert(offsetof(UPaperMovieSceneLineSection, SpeakerText) == 0x000134, "Member 'UPaperMovieSceneLineSection::SpeakerText' has a wrong offset!");

// Class PaperMovieScene.PaperMovieSceneLineTrack
// 0x0018 (0x00B0 - 0x0098)
class UPaperMovieSceneLineTrack final : public UMovieSceneNameableTrack
{
public:
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMovieSceneSection*>             Sections;                                          // 0x00A0(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PaperMovieSceneLineTrack">();
	}
	static class UPaperMovieSceneLineTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPaperMovieSceneLineTrack>();
	}
};
static_assert(alignof(UPaperMovieSceneLineTrack) == 0x000008, "Wrong alignment on UPaperMovieSceneLineTrack");
static_assert(sizeof(UPaperMovieSceneLineTrack) == 0x0000B0, "Wrong size on UPaperMovieSceneLineTrack");
static_assert(offsetof(UPaperMovieSceneLineTrack, Sections) == 0x0000A0, "Member 'UPaperMovieSceneLineTrack::Sections' has a wrong offset!");

// Class PaperMovieScene.PaperMovieSceneSequencerSectionBP
// 0x0010 (0x0130 - 0x0120)
class UPaperMovieSceneSequencerSectionBP : public UMovieSceneSection
{
public:
	uint8                                         Pad_120[0x8];                                      // 0x0120(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	EPaperSequencerSectionType                    SequencerSectionType;                              // 0x0128(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class FText K2_GetActorName();
	class FText K2_GetLineText();
	class FText K2_GetSectionTitle();
	void K2_OnSectionBegin();
	void K2_OnSectionEnd();
	void K2_OnSectionUpdate();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PaperMovieSceneSequencerSectionBP">();
	}
	static class UPaperMovieSceneSequencerSectionBP* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPaperMovieSceneSequencerSectionBP>();
	}
};
static_assert(alignof(UPaperMovieSceneSequencerSectionBP) == 0x000008, "Wrong alignment on UPaperMovieSceneSequencerSectionBP");
static_assert(sizeof(UPaperMovieSceneSequencerSectionBP) == 0x000130, "Wrong size on UPaperMovieSceneSequencerSectionBP");
static_assert(offsetof(UPaperMovieSceneSequencerSectionBP, SequencerSectionType) == 0x000128, "Member 'UPaperMovieSceneSequencerSectionBP::SequencerSectionType' has a wrong offset!");

// Class PaperMovieScene.PaperMovieSceneSequencerSectionBP_Animation
// 0x0000 (0x0130 - 0x0130)
class UPaperMovieSceneSequencerSectionBP_Animation final : public UPaperMovieSceneSequencerSectionBP
{
public:
	class UAnimSequenceBase* K2_GetAnimSequence();
	void K2_OnSectionBegin_BindingObect(class AActor* BindingObect);
	void K2_OnSectionUpdate_BindingObect(class AActor* BindingObect);
	bool K2_SetAnimationData(const struct FPaperDialogueCustomSectionData& InSectionData, float* OutAnimLengh);
	void K2_SetAnimSequence(class UAnimSequenceBase* InAnimSequence);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PaperMovieSceneSequencerSectionBP_Animation">();
	}
	static class UPaperMovieSceneSequencerSectionBP_Animation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPaperMovieSceneSequencerSectionBP_Animation>();
	}
};
static_assert(alignof(UPaperMovieSceneSequencerSectionBP_Animation) == 0x000008, "Wrong alignment on UPaperMovieSceneSequencerSectionBP_Animation");
static_assert(sizeof(UPaperMovieSceneSequencerSectionBP_Animation) == 0x000130, "Wrong size on UPaperMovieSceneSequencerSectionBP_Animation");

// Class PaperMovieScene.PaperMovieSceneSequencerTrackBP
// 0x0118 (0x01B0 - 0x0098)
class UPaperMovieSceneSequencerTrackBP : public UMovieSceneNameableTrack
{
public:
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bSupportsMultipleRows;                             // 0x00A0(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSupportsBlending;                                 // 0x00A1(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	EPCDCustomSequencerTrackType                  TrackType;                                         // 0x00A4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UObject>                    SupportedObjectType;                               // 0x00A8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, AssetRegistrySearchable, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPaperMovieSceneSequencerSectionBP> DefaultSectionType;                        // 0x00B0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, AssetRegistrySearchable, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UPaperMovieSceneSequencerSectionBP>> SupportedSections;                 // 0x00B8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, AssetRegistrySearchable, UObjectWrapper, NativeAccessSpecifierPublic)
	TSubclassOf<class UPaperMovieSceneSequencerTrackInstanceBP> TrackInstanceType;                   // 0x00C8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, AssetRegistrySearchable, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                            Icon;                                              // 0x00D0(0x00D0)(Edit, DisableEditOnInstance, AssetRegistrySearchable, NativeAccessSpecifierPublic)
	TArray<class UMovieSceneSection*>             Sections;                                          // 0x01A0(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PaperMovieSceneSequencerTrackBP">();
	}
	static class UPaperMovieSceneSequencerTrackBP* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPaperMovieSceneSequencerTrackBP>();
	}
};
static_assert(alignof(UPaperMovieSceneSequencerTrackBP) == 0x000010, "Wrong alignment on UPaperMovieSceneSequencerTrackBP");
static_assert(sizeof(UPaperMovieSceneSequencerTrackBP) == 0x0001B0, "Wrong size on UPaperMovieSceneSequencerTrackBP");
static_assert(offsetof(UPaperMovieSceneSequencerTrackBP, bSupportsMultipleRows) == 0x0000A0, "Member 'UPaperMovieSceneSequencerTrackBP::bSupportsMultipleRows' has a wrong offset!");
static_assert(offsetof(UPaperMovieSceneSequencerTrackBP, bSupportsBlending) == 0x0000A1, "Member 'UPaperMovieSceneSequencerTrackBP::bSupportsBlending' has a wrong offset!");
static_assert(offsetof(UPaperMovieSceneSequencerTrackBP, TrackType) == 0x0000A4, "Member 'UPaperMovieSceneSequencerTrackBP::TrackType' has a wrong offset!");
static_assert(offsetof(UPaperMovieSceneSequencerTrackBP, SupportedObjectType) == 0x0000A8, "Member 'UPaperMovieSceneSequencerTrackBP::SupportedObjectType' has a wrong offset!");
static_assert(offsetof(UPaperMovieSceneSequencerTrackBP, DefaultSectionType) == 0x0000B0, "Member 'UPaperMovieSceneSequencerTrackBP::DefaultSectionType' has a wrong offset!");
static_assert(offsetof(UPaperMovieSceneSequencerTrackBP, SupportedSections) == 0x0000B8, "Member 'UPaperMovieSceneSequencerTrackBP::SupportedSections' has a wrong offset!");
static_assert(offsetof(UPaperMovieSceneSequencerTrackBP, TrackInstanceType) == 0x0000C8, "Member 'UPaperMovieSceneSequencerTrackBP::TrackInstanceType' has a wrong offset!");
static_assert(offsetof(UPaperMovieSceneSequencerTrackBP, Icon) == 0x0000D0, "Member 'UPaperMovieSceneSequencerTrackBP::Icon' has a wrong offset!");
static_assert(offsetof(UPaperMovieSceneSequencerTrackBP, Sections) == 0x0001A0, "Member 'UPaperMovieSceneSequencerTrackBP::Sections' has a wrong offset!");

// Class PaperMovieScene.PaperMovieSceneSequencerTrackBP_Animation
// 0x0010 (0x01C0 - 0x01B0)
class UPaperMovieSceneSequencerTrackBP_Animation final : public UPaperMovieSceneSequencerTrackBP
{
public:
	struct FGuid                                  ObjectBindingID_Runtime;                           // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PaperMovieSceneSequencerTrackBP_Animation">();
	}
	static class UPaperMovieSceneSequencerTrackBP_Animation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPaperMovieSceneSequencerTrackBP_Animation>();
	}
};
static_assert(alignof(UPaperMovieSceneSequencerTrackBP_Animation) == 0x000010, "Wrong alignment on UPaperMovieSceneSequencerTrackBP_Animation");
static_assert(sizeof(UPaperMovieSceneSequencerTrackBP_Animation) == 0x0001C0, "Wrong size on UPaperMovieSceneSequencerTrackBP_Animation");
static_assert(offsetof(UPaperMovieSceneSequencerTrackBP_Animation, ObjectBindingID_Runtime) == 0x0001B0, "Member 'UPaperMovieSceneSequencerTrackBP_Animation::ObjectBindingID_Runtime' has a wrong offset!");

// Class PaperMovieScene.PaperMovieSceneSequencerTrackInstanceBP
// 0x0000 (0x0050 - 0x0050)
class UPaperMovieSceneSequencerTrackInstanceBP final : public UMovieSceneTrackInstance
{
public:
	void K2_OnBeginUpdateInputs();
	void K2_OnDestroyed();
	void K2_OnEndUpdateInputs();
	void K2_OnInitialize();
	void K2_OnInputAdded(const struct FPCDSequencerTrackInstanceInput& Input);
	void K2_OnInputRemoved(const struct FPCDSequencerTrackInstanceInput& Input);
	void K2_OnUpdate();

	class UObject* GetAnimatedObject() const;
	struct FPCDSequencerTrackInstanceInput GetInput(int32 Index_0) const;
	TArray<struct FPCDSequencerTrackInstanceInput> GetInputs() const;
	int32 GetNumInputs() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PaperMovieSceneSequencerTrackInstanceBP">();
	}
	static class UPaperMovieSceneSequencerTrackInstanceBP* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPaperMovieSceneSequencerTrackInstanceBP>();
	}
};
static_assert(alignof(UPaperMovieSceneSequencerTrackInstanceBP) == 0x000008, "Wrong alignment on UPaperMovieSceneSequencerTrackInstanceBP");
static_assert(sizeof(UPaperMovieSceneSequencerTrackInstanceBP) == 0x000050, "Wrong size on UPaperMovieSceneSequencerTrackInstanceBP");

}

