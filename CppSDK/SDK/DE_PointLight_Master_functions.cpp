#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DE_PointLight_Master

#include "Basic.hpp"

#include "DE_PointLight_Master_classes.hpp"
#include "DE_PointLight_Master_parameters.hpp"


namespace SDK
{

// Function DE_PointLight_Master.DE_PointLight_Master_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ADE_PointLight_Master_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DE_PointLight_Master_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DE_PointLight_Master.DE_PointLight_Master_C.UseMultiplyParam
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ADE_PointLight_Master_C::UseMultiplyParam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DE_PointLight_Master_C", "UseMultiplyParam");

	Params::DE_PointLight_Master_C_UseMultiplyParam Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DE_PointLight_Master.DE_PointLight_Master_C.UpdateLightState
// (Public, BlueprintCallable, BlueprintEvent)

void ADE_PointLight_Master_C::UpdateLightState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DE_PointLight_Master_C", "UpdateLightState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DE_PointLight_Master.DE_PointLight_Master_C.UpdateDELight
// (Public, BlueprintCallable, BlueprintEvent)

void ADE_PointLight_Master_C::UpdateDELight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DE_PointLight_Master_C", "UpdateDELight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DE_PointLight_Master.DE_PointLight_Master_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ADE_PointLight_Master_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DE_PointLight_Master_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DE_PointLight_Master.DE_PointLight_Master_C.GetFinalIntensity
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ADE_PointLight_Master_C::GetFinalIntensity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DE_PointLight_Master_C", "GetFinalIntensity");

	Params::DE_PointLight_Master_C_GetFinalIntensity Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DE_PointLight_Master.DE_PointLight_Master_C.ExecuteUbergraph_DE_PointLight_Master
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADE_PointLight_Master_C::ExecuteUbergraph_DE_PointLight_Master(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DE_PointLight_Master_C", "ExecuteUbergraph_DE_PointLight_Master");

	Params::DE_PointLight_Master_C_ExecuteUbergraph_DE_PointLight_Master Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DE_PointLight_Master.DE_PointLight_Master_C.Disable LightFuncton and IES
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ULightComponent*                  InputPin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ADE_PointLight_Master_C::Disable_LightFuncton_and_IES(class ULightComponent* InputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DE_PointLight_Master_C", "Disable LightFuncton and IES");

	Params::DE_PointLight_Master_C_Disable_LightFuncton_and_IES Parms{};

	Parms.InputPin = InputPin;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DE_PointLight_Master.DE_PointLight_Master_C.Clean IES
// (Public, BlueprintCallable, BlueprintEvent)

void ADE_PointLight_Master_C::Clean_IES()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DE_PointLight_Master_C", "Clean IES");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DE_PointLight_Master.DE_PointLight_Master_C.CheckIES
// (Public, BlueprintCallable, BlueprintEvent)

void ADE_PointLight_Master_C::CheckIES()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DE_PointLight_Master_C", "CheckIES");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DE_PointLight_Master.DE_PointLight_Master_C.CheckerMultiplyRenderState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPointLightComponent*             InputPin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ADE_PointLight_Master_C::CheckerMultiplyRenderState(class UPointLightComponent* InputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DE_PointLight_Master_C", "CheckerMultiplyRenderState");

	Params::DE_PointLight_Master_C_CheckerMultiplyRenderState Parms{};

	Parms.InputPin = InputPin;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DE_PointLight_Master.DE_PointLight_Master_C.GetModuleName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString ADE_PointLight_Master_C::GetModuleName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DE_PointLight_Master_C", "GetModuleName");

	Params::DE_PointLight_Master_C_GetModuleName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

