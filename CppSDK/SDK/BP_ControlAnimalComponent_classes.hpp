#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ControlAnimalComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_SimpleAbilityBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ControlAnimalComponent.BP_ControlAnimalComponent_C
// 0x0090 (0x0180 - 0x00F0)
class UBP_ControlAnimalComponent_C final : public UBP_SimpleAbilityBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_ControlAnimalComponent_C;        // 0x00F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UDataTable*                             AnimialDataTable;                                  // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 AnimInstClass;                                     // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          Cache_MeshAsset;                                   // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Cache_IdleAnim;                                    // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Cache_MoveAnim;                                    // 0x0118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Cache_PerformMontage;                              // 0x0120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UBP_MovementAllConfigTemplate_C*        Cache_MovementCfg;                                 // 0x0128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UCameraBaseParamsData*                  Cache_CameraCfg;                                   // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FViewTargetTransitionParams            CameraBlendInCfg;                                  // 0x0138(0x0020)(Edit, BlueprintVisible, NoDestructor)
	struct FViewTargetTransitionParams            CameraBlendOutCfg;                                 // 0x0158(0x0020)(Edit, BlueprintVisible, NoDestructor)
	class UBlendSpace1D*                          Cache_MoveBlendAnim;                               // 0x0178(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ReceiveTick(float DeltaSeconds);
	void ExecuteUbergraph_BP_ControlAnimalComponent(int32 EntryPoint);

	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ControlAnimalComponent_C">();
	}
	static class UBP_ControlAnimalComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_ControlAnimalComponent_C>();
	}
};
static_assert(alignof(UBP_ControlAnimalComponent_C) == 0x000008, "Wrong alignment on UBP_ControlAnimalComponent_C");
static_assert(sizeof(UBP_ControlAnimalComponent_C) == 0x000180, "Wrong size on UBP_ControlAnimalComponent_C");
static_assert(offsetof(UBP_ControlAnimalComponent_C, UberGraphFrame_BP_ControlAnimalComponent_C) == 0x0000F0, "Member 'UBP_ControlAnimalComponent_C::UberGraphFrame_BP_ControlAnimalComponent_C' has a wrong offset!");
static_assert(offsetof(UBP_ControlAnimalComponent_C, AnimialDataTable) == 0x0000F8, "Member 'UBP_ControlAnimalComponent_C::AnimialDataTable' has a wrong offset!");
static_assert(offsetof(UBP_ControlAnimalComponent_C, AnimInstClass) == 0x000100, "Member 'UBP_ControlAnimalComponent_C::AnimInstClass' has a wrong offset!");
static_assert(offsetof(UBP_ControlAnimalComponent_C, Cache_MeshAsset) == 0x000108, "Member 'UBP_ControlAnimalComponent_C::Cache_MeshAsset' has a wrong offset!");
static_assert(offsetof(UBP_ControlAnimalComponent_C, Cache_IdleAnim) == 0x000110, "Member 'UBP_ControlAnimalComponent_C::Cache_IdleAnim' has a wrong offset!");
static_assert(offsetof(UBP_ControlAnimalComponent_C, Cache_MoveAnim) == 0x000118, "Member 'UBP_ControlAnimalComponent_C::Cache_MoveAnim' has a wrong offset!");
static_assert(offsetof(UBP_ControlAnimalComponent_C, Cache_PerformMontage) == 0x000120, "Member 'UBP_ControlAnimalComponent_C::Cache_PerformMontage' has a wrong offset!");
static_assert(offsetof(UBP_ControlAnimalComponent_C, Cache_MovementCfg) == 0x000128, "Member 'UBP_ControlAnimalComponent_C::Cache_MovementCfg' has a wrong offset!");
static_assert(offsetof(UBP_ControlAnimalComponent_C, Cache_CameraCfg) == 0x000130, "Member 'UBP_ControlAnimalComponent_C::Cache_CameraCfg' has a wrong offset!");
static_assert(offsetof(UBP_ControlAnimalComponent_C, CameraBlendInCfg) == 0x000138, "Member 'UBP_ControlAnimalComponent_C::CameraBlendInCfg' has a wrong offset!");
static_assert(offsetof(UBP_ControlAnimalComponent_C, CameraBlendOutCfg) == 0x000158, "Member 'UBP_ControlAnimalComponent_C::CameraBlendOutCfg' has a wrong offset!");
static_assert(offsetof(UBP_ControlAnimalComponent_C, Cache_MoveBlendAnim) == 0x000178, "Member 'UBP_ControlAnimalComponent_C::Cache_MoveBlendAnim' has a wrong offset!");

}

