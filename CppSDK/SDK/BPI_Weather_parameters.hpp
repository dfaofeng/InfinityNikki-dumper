#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_Weather

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BPI_Weather.BPI_Weather_C.Manual Operation TOD
// 0x0008 (0x0008 - 0x0000)
struct BPI_Weather_C_Manual_Operation_TOD final
{
public:
	double                                        Time;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Weather_C_Manual_Operation_TOD) == 0x000008, "Wrong alignment on BPI_Weather_C_Manual_Operation_TOD");
static_assert(sizeof(BPI_Weather_C_Manual_Operation_TOD) == 0x000008, "Wrong size on BPI_Weather_C_Manual_Operation_TOD");
static_assert(offsetof(BPI_Weather_C_Manual_Operation_TOD, Time) == 0x000000, "Member 'BPI_Weather_C_Manual_Operation_TOD::Time' has a wrong offset!");

// Function BPI_Weather.BPI_Weather_C.BPI_WeatherData
// 0x0008 (0x0008 - 0x0000)
struct BPI_Weather_C_BPI_WeatherData final
{
public:
	class UClass*                                 WeatherPreset;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Weather_C_BPI_WeatherData) == 0x000008, "Wrong alignment on BPI_Weather_C_BPI_WeatherData");
static_assert(sizeof(BPI_Weather_C_BPI_WeatherData) == 0x000008, "Wrong size on BPI_Weather_C_BPI_WeatherData");
static_assert(offsetof(BPI_Weather_C_BPI_WeatherData, WeatherPreset) == 0x000000, "Member 'BPI_Weather_C_BPI_WeatherData::WeatherPreset' has a wrong offset!");

// Function BPI_Weather.BPI_Weather_C.BPI_WeatherChanged
// 0x0030 (0x0030 - 0x0000)
struct BPI_Weather_C_BPI_WeatherChanged final
{
public:
	class FString                                 RegionName;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 UnloadWeatherName;                                 // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 LoadWeatherName;                                   // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Weather_C_BPI_WeatherChanged) == 0x000008, "Wrong alignment on BPI_Weather_C_BPI_WeatherChanged");
static_assert(sizeof(BPI_Weather_C_BPI_WeatherChanged) == 0x000030, "Wrong size on BPI_Weather_C_BPI_WeatherChanged");
static_assert(offsetof(BPI_Weather_C_BPI_WeatherChanged, RegionName) == 0x000000, "Member 'BPI_Weather_C_BPI_WeatherChanged::RegionName' has a wrong offset!");
static_assert(offsetof(BPI_Weather_C_BPI_WeatherChanged, UnloadWeatherName) == 0x000010, "Member 'BPI_Weather_C_BPI_WeatherChanged::UnloadWeatherName' has a wrong offset!");
static_assert(offsetof(BPI_Weather_C_BPI_WeatherChanged, LoadWeatherName) == 0x000020, "Member 'BPI_Weather_C_BPI_WeatherChanged::LoadWeatherName' has a wrong offset!");

// Function BPI_Weather.BPI_Weather_C.BPI_TODTime
// 0x0008 (0x0008 - 0x0000)
struct BPI_Weather_C_BPI_TODTime final
{
public:
	double                                        Time;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Weather_C_BPI_TODTime) == 0x000008, "Wrong alignment on BPI_Weather_C_BPI_TODTime");
static_assert(sizeof(BPI_Weather_C_BPI_TODTime) == 0x000008, "Wrong size on BPI_Weather_C_BPI_TODTime");
static_assert(offsetof(BPI_Weather_C_BPI_TODTime, Time) == 0x000000, "Member 'BPI_Weather_C_BPI_TODTime::Time' has a wrong offset!");

// Function BPI_Weather.BPI_Weather_C.BPI_SaveAsset
// 0x0002 (0x0002 - 0x0000)
struct BPI_Weather_C_BPI_SaveAsset final
{
public:
	bool                                          OnlySyncContent;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OnlyWriteParam;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Weather_C_BPI_SaveAsset) == 0x000001, "Wrong alignment on BPI_Weather_C_BPI_SaveAsset");
static_assert(sizeof(BPI_Weather_C_BPI_SaveAsset) == 0x000002, "Wrong size on BPI_Weather_C_BPI_SaveAsset");
static_assert(offsetof(BPI_Weather_C_BPI_SaveAsset, OnlySyncContent) == 0x000000, "Member 'BPI_Weather_C_BPI_SaveAsset::OnlySyncContent' has a wrong offset!");
static_assert(offsetof(BPI_Weather_C_BPI_SaveAsset, OnlyWriteParam) == 0x000001, "Member 'BPI_Weather_C_BPI_SaveAsset::OnlyWriteParam' has a wrong offset!");

// Function BPI_Weather.BPI_Weather_C.BPI_EditorUpdateRole
// 0x0010 (0x0010 - 0x0000)
struct BPI_Weather_C_BPI_EditorUpdateRole final
{
public:
	struct FLinearColor                           LocalLightColor;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Weather_C_BPI_EditorUpdateRole) == 0x000004, "Wrong alignment on BPI_Weather_C_BPI_EditorUpdateRole");
static_assert(sizeof(BPI_Weather_C_BPI_EditorUpdateRole) == 0x000010, "Wrong size on BPI_Weather_C_BPI_EditorUpdateRole");
static_assert(offsetof(BPI_Weather_C_BPI_EditorUpdateRole, LocalLightColor) == 0x000000, "Member 'BPI_Weather_C_BPI_EditorUpdateRole::LocalLightColor' has a wrong offset!");

}

