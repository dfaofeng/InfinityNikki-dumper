#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TT_TargetingSelectionByBulletTrack_V2

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ECharacterType_structs.hpp"
#include "EFightCamp_structs.hpp"
#include "X6Game_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass TT_TargetingSelectionByBulletTrack_V2.TT_TargetingSelectionByBulletTrack_V2_C
// 0x0110 (0x01C0 - 0x00B0)
class UTT_TargetingSelectionByBulletTrack_V2_C final : public UX6TargetingSelectionTask_ChargeUpBase
{
public:
	bool                                          bOnlyFilterInteractive;                            // 0x00B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      CollisionObjectTypes;                              // 0x00B8(0x0010)(Edit, BlueprintVisible)
	struct FVector                                DefaultSourceOffset;                               // 0x00C8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 SocketName;                                        // 0x00E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bUseRelativeOffset;                                // 0x00F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIgnoreSourceActor;                                // 0x00F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIgnoreInstigatorActor;                            // 0x00F2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F3[0x5];                                       // 0x00F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        FloorAngle;                                        // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Speed;                                             // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Duration;                                          // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPenetrateTrace;                                   // 0x0110(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 TraceSocketName;                                   // 0x0118(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                TraceOffset;                                       // 0x0128(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ShapeTraceDataAsset_C*              HitShapeTraceData;                                 // 0x0140(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ShapeTraceDataAsset_C*              CollisionShapeTraceData;                           // 0x0148(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FilterShapeSize;                                   // 0x0150(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFilterTrace;                                      // 0x0168(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ECharacterType>                        FilterCharacterType;                               // 0x0170(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<EFightCamp>                            FilterFightCamp;                                   // 0x0180(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        SortAngleWeight;                                   // 0x0190(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SortAngleRefScore;                                 // 0x0198(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SortDisWeight;                                     // 0x01A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SortDisRefScore;                                   // 0x01A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SortMonsterScore;                                  // 0x01B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SortCombatInteractiveScore;                        // 0x01B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	class FString GetModuleName() const;
	bool K2_CanSelect(const struct FTargetingRequestHandle& TargetingHandle, const struct FTargetingSourceContext& SourceContext) const;
	void SelectTargets(const struct FTargetingRequestHandle& TargetingHandle, const struct FTargetingSourceContext& SourceContext) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TT_TargetingSelectionByBulletTrack_V2_C">();
	}
	static class UTT_TargetingSelectionByBulletTrack_V2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTT_TargetingSelectionByBulletTrack_V2_C>();
	}
};
static_assert(alignof(UTT_TargetingSelectionByBulletTrack_V2_C) == 0x000010, "Wrong alignment on UTT_TargetingSelectionByBulletTrack_V2_C");
static_assert(sizeof(UTT_TargetingSelectionByBulletTrack_V2_C) == 0x0001C0, "Wrong size on UTT_TargetingSelectionByBulletTrack_V2_C");
static_assert(offsetof(UTT_TargetingSelectionByBulletTrack_V2_C, bOnlyFilterInteractive) == 0x0000B0, "Member 'UTT_TargetingSelectionByBulletTrack_V2_C::bOnlyFilterInteractive' has a wrong offset!");
static_assert(offsetof(UTT_TargetingSelectionByBulletTrack_V2_C, CollisionObjectTypes) == 0x0000B8, "Member 'UTT_TargetingSelectionByBulletTrack_V2_C::CollisionObjectTypes' has a wrong offset!");
static_assert(offsetof(UTT_TargetingSelectionByBulletTrack_V2_C, DefaultSourceOffset) == 0x0000C8, "Member 'UTT_TargetingSelectionByBulletTrack_V2_C::DefaultSourceOffset' has a wrong offset!");
static_assert(offsetof(UTT_TargetingSelectionByBulletTrack_V2_C, SocketName) == 0x0000E0, "Member 'UTT_TargetingSelectionByBulletTrack_V2_C::SocketName' has a wrong offset!");
static_assert(offsetof(UTT_TargetingSelectionByBulletTrack_V2_C, bUseRelativeOffset) == 0x0000F0, "Member 'UTT_TargetingSelectionByBulletTrack_V2_C::bUseRelativeOffset' has a wrong offset!");
static_assert(offsetof(UTT_TargetingSelectionByBulletTrack_V2_C, bIgnoreSourceActor) == 0x0000F1, "Member 'UTT_TargetingSelectionByBulletTrack_V2_C::bIgnoreSourceActor' has a wrong offset!");
static_assert(offsetof(UTT_TargetingSelectionByBulletTrack_V2_C, bIgnoreInstigatorActor) == 0x0000F2, "Member 'UTT_TargetingSelectionByBulletTrack_V2_C::bIgnoreInstigatorActor' has a wrong offset!");
static_assert(offsetof(UTT_TargetingSelectionByBulletTrack_V2_C, FloorAngle) == 0x0000F8, "Member 'UTT_TargetingSelectionByBulletTrack_V2_C::FloorAngle' has a wrong offset!");
static_assert(offsetof(UTT_TargetingSelectionByBulletTrack_V2_C, Speed) == 0x000100, "Member 'UTT_TargetingSelectionByBulletTrack_V2_C::Speed' has a wrong offset!");
static_assert(offsetof(UTT_TargetingSelectionByBulletTrack_V2_C, Duration) == 0x000108, "Member 'UTT_TargetingSelectionByBulletTrack_V2_C::Duration' has a wrong offset!");
static_assert(offsetof(UTT_TargetingSelectionByBulletTrack_V2_C, bPenetrateTrace) == 0x000110, "Member 'UTT_TargetingSelectionByBulletTrack_V2_C::bPenetrateTrace' has a wrong offset!");
static_assert(offsetof(UTT_TargetingSelectionByBulletTrack_V2_C, TraceSocketName) == 0x000118, "Member 'UTT_TargetingSelectionByBulletTrack_V2_C::TraceSocketName' has a wrong offset!");
static_assert(offsetof(UTT_TargetingSelectionByBulletTrack_V2_C, TraceOffset) == 0x000128, "Member 'UTT_TargetingSelectionByBulletTrack_V2_C::TraceOffset' has a wrong offset!");
static_assert(offsetof(UTT_TargetingSelectionByBulletTrack_V2_C, HitShapeTraceData) == 0x000140, "Member 'UTT_TargetingSelectionByBulletTrack_V2_C::HitShapeTraceData' has a wrong offset!");
static_assert(offsetof(UTT_TargetingSelectionByBulletTrack_V2_C, CollisionShapeTraceData) == 0x000148, "Member 'UTT_TargetingSelectionByBulletTrack_V2_C::CollisionShapeTraceData' has a wrong offset!");
static_assert(offsetof(UTT_TargetingSelectionByBulletTrack_V2_C, FilterShapeSize) == 0x000150, "Member 'UTT_TargetingSelectionByBulletTrack_V2_C::FilterShapeSize' has a wrong offset!");
static_assert(offsetof(UTT_TargetingSelectionByBulletTrack_V2_C, bFilterTrace) == 0x000168, "Member 'UTT_TargetingSelectionByBulletTrack_V2_C::bFilterTrace' has a wrong offset!");
static_assert(offsetof(UTT_TargetingSelectionByBulletTrack_V2_C, FilterCharacterType) == 0x000170, "Member 'UTT_TargetingSelectionByBulletTrack_V2_C::FilterCharacterType' has a wrong offset!");
static_assert(offsetof(UTT_TargetingSelectionByBulletTrack_V2_C, FilterFightCamp) == 0x000180, "Member 'UTT_TargetingSelectionByBulletTrack_V2_C::FilterFightCamp' has a wrong offset!");
static_assert(offsetof(UTT_TargetingSelectionByBulletTrack_V2_C, SortAngleWeight) == 0x000190, "Member 'UTT_TargetingSelectionByBulletTrack_V2_C::SortAngleWeight' has a wrong offset!");
static_assert(offsetof(UTT_TargetingSelectionByBulletTrack_V2_C, SortAngleRefScore) == 0x000198, "Member 'UTT_TargetingSelectionByBulletTrack_V2_C::SortAngleRefScore' has a wrong offset!");
static_assert(offsetof(UTT_TargetingSelectionByBulletTrack_V2_C, SortDisWeight) == 0x0001A0, "Member 'UTT_TargetingSelectionByBulletTrack_V2_C::SortDisWeight' has a wrong offset!");
static_assert(offsetof(UTT_TargetingSelectionByBulletTrack_V2_C, SortDisRefScore) == 0x0001A8, "Member 'UTT_TargetingSelectionByBulletTrack_V2_C::SortDisRefScore' has a wrong offset!");
static_assert(offsetof(UTT_TargetingSelectionByBulletTrack_V2_C, SortMonsterScore) == 0x0001B0, "Member 'UTT_TargetingSelectionByBulletTrack_V2_C::SortMonsterScore' has a wrong offset!");
static_assert(offsetof(UTT_TargetingSelectionByBulletTrack_V2_C, SortCombatInteractiveScore) == 0x0001B8, "Member 'UTT_TargetingSelectionByBulletTrack_V2_C::SortCombatInteractiveScore' has a wrong offset!");

}

