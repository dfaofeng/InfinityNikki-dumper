#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CustomWidget

#include "Basic.hpp"

#include "CustomWidget_structs.hpp"
#include "UMG_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// Class CustomWidget.X6CustomHittestButton
// 0x0160 (0x07B0 - 0x0650)
class UX6CustomHittestButton final : public UButton
{
public:
	uint8                                         Pad_648[0x8];                                      // 0x0648(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FX6CustomHittestSlateStyle             HittestStyle;                                      // 0x0650(0x0150)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	uint8                                         Pad_7A0[0x10];                                     // 0x07A0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void UpdateHittestStyle();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"X6CustomHittestButton">();
	}
	static class UX6CustomHittestButton* GetDefaultObj()
	{
		return GetDefaultObjImpl<UX6CustomHittestButton>();
	}
};
static_assert(alignof(UX6CustomHittestButton) == 0x000010, "Wrong alignment on UX6CustomHittestButton");
static_assert(sizeof(UX6CustomHittestButton) == 0x0007B0, "Wrong size on UX6CustomHittestButton");
static_assert(offsetof(UX6CustomHittestButton, HittestStyle) == 0x000650, "Member 'UX6CustomHittestButton::HittestStyle' has a wrong offset!");

// Class CustomWidget.X6LongPressedButton
// 0x0058 (0x01F8 - 0x01A0)
class UX6LongPressedButton final : public UContentWidget
{
public:
	bool                                          IsFocusable;                                       // 0x01A0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DoubleClickedTimeInterval;                         // 0x01A4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LongPressedTimeInterval;                           // 0x01A8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnDoubleClicked;                                   // 0x01B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C0[0x18];                                     // 0x01C0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnLongPressed;                                     // 0x01D8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E8[0x10];                                     // 0x01E8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"X6LongPressedButton">();
	}
	static class UX6LongPressedButton* GetDefaultObj()
	{
		return GetDefaultObjImpl<UX6LongPressedButton>();
	}
};
static_assert(alignof(UX6LongPressedButton) == 0x000008, "Wrong alignment on UX6LongPressedButton");
static_assert(sizeof(UX6LongPressedButton) == 0x0001F8, "Wrong size on UX6LongPressedButton");
static_assert(offsetof(UX6LongPressedButton, IsFocusable) == 0x0001A0, "Member 'UX6LongPressedButton::IsFocusable' has a wrong offset!");
static_assert(offsetof(UX6LongPressedButton, DoubleClickedTimeInterval) == 0x0001A4, "Member 'UX6LongPressedButton::DoubleClickedTimeInterval' has a wrong offset!");
static_assert(offsetof(UX6LongPressedButton, LongPressedTimeInterval) == 0x0001A8, "Member 'UX6LongPressedButton::LongPressedTimeInterval' has a wrong offset!");
static_assert(offsetof(UX6LongPressedButton, OnDoubleClicked) == 0x0001B0, "Member 'UX6LongPressedButton::OnDoubleClicked' has a wrong offset!");
static_assert(offsetof(UX6LongPressedButton, OnLongPressed) == 0x0001D8, "Member 'UX6LongPressedButton::OnLongPressed' has a wrong offset!");

// Class CustomWidget.X6LongPressedButtonSlot
// 0x0028 (0x0060 - 0x0038)
class UX6LongPressedButtonSlot final : public UPanelSlot
{
public:
	struct FMargin                                Padding;                                           // 0x0038(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	EHorizontalAlignment                          HorizontalAlignment;                               // 0x0048(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVerticalAlignment                            VerticalAlignment;                                 // 0x0049(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4A[0x16];                                      // 0x004A(0x0016)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetHorizontalAlignment(EHorizontalAlignment InHorizontalAlignment);
	void SetPadding(const struct FMargin& InPadding);
	void SetVerticalAlignment(EVerticalAlignment InVerticalAlignment);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"X6LongPressedButtonSlot">();
	}
	static class UX6LongPressedButtonSlot* GetDefaultObj()
	{
		return GetDefaultObjImpl<UX6LongPressedButtonSlot>();
	}
};
static_assert(alignof(UX6LongPressedButtonSlot) == 0x000008, "Wrong alignment on UX6LongPressedButtonSlot");
static_assert(sizeof(UX6LongPressedButtonSlot) == 0x000060, "Wrong size on UX6LongPressedButtonSlot");
static_assert(offsetof(UX6LongPressedButtonSlot, Padding) == 0x000038, "Member 'UX6LongPressedButtonSlot::Padding' has a wrong offset!");
static_assert(offsetof(UX6LongPressedButtonSlot, HorizontalAlignment) == 0x000048, "Member 'UX6LongPressedButtonSlot::HorizontalAlignment' has a wrong offset!");
static_assert(offsetof(UX6LongPressedButtonSlot, VerticalAlignment) == 0x000049, "Member 'UX6LongPressedButtonSlot::VerticalAlignment' has a wrong offset!");

// Class CustomWidget.X6MultiPlatformButton
// 0x0050 (0x06A0 - 0x0650)
class UX6MultiPlatformButton final : public UButton
{
public:
	bool                                          bCanTriggerHoveredByFocus;                         // 0x0648(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_649[0x7];                                      // 0x0649(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UX6InputAction*                         InputActionToBind;                                 // 0x0650(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTriggerInputActionByButton;                       // 0x0658(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_659[0x47];                                     // 0x0659(0x0047)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BindInputAction(class UX6InputAction* InputAction);
	void HandleInputActionCanceled(const struct FX6InputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const TArray<struct FX6InputActionTriggerKeyData>& TriggerKeyDatas);
	void HandleInputActionCompleted(const struct FX6InputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const TArray<struct FX6InputActionTriggerKeyData>& TriggerKeyDatas);
	void HandleInputActionStarted(const struct FX6InputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const TArray<struct FX6InputActionTriggerKeyData>& TriggerKeyDatas);
	void HandleInputActionTriggered(const struct FX6InputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const TArray<struct FX6InputActionTriggerKeyData>& TriggerKeyDatas);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"X6MultiPlatformButton">();
	}
	static class UX6MultiPlatformButton* GetDefaultObj()
	{
		return GetDefaultObjImpl<UX6MultiPlatformButton>();
	}
};
static_assert(alignof(UX6MultiPlatformButton) == 0x000010, "Wrong alignment on UX6MultiPlatformButton");
static_assert(sizeof(UX6MultiPlatformButton) == 0x0006A0, "Wrong size on UX6MultiPlatformButton");
static_assert(offsetof(UX6MultiPlatformButton, bCanTriggerHoveredByFocus) == 0x000648, "Member 'UX6MultiPlatformButton::bCanTriggerHoveredByFocus' has a wrong offset!");
static_assert(offsetof(UX6MultiPlatformButton, InputActionToBind) == 0x000650, "Member 'UX6MultiPlatformButton::InputActionToBind' has a wrong offset!");
static_assert(offsetof(UX6MultiPlatformButton, bTriggerInputActionByButton) == 0x000658, "Member 'UX6MultiPlatformButton::bTriggerInputActionByButton' has a wrong offset!");

// Class CustomWidget.X6WrapBox
// 0x0008 (0x01D0 - 0x01C8)
class UX6WrapBox final : public UWrapBox
{
public:
	TSubclassOf<class UUserWidget>                EntryWidgetClass;                                  // 0x01C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void SetEntryNum(int32 InNum);
	void SetEntryWidgetClass(TSubclassOf<class UUserWidget> InEntryWidgetClass);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"X6WrapBox">();
	}
	static class UX6WrapBox* GetDefaultObj()
	{
		return GetDefaultObjImpl<UX6WrapBox>();
	}
};
static_assert(alignof(UX6WrapBox) == 0x000008, "Wrong alignment on UX6WrapBox");
static_assert(sizeof(UX6WrapBox) == 0x0001D0, "Wrong size on UX6WrapBox");
static_assert(offsetof(UX6WrapBox, EntryWidgetClass) == 0x0001C8, "Member 'UX6WrapBox::EntryWidgetClass' has a wrong offset!");

}

