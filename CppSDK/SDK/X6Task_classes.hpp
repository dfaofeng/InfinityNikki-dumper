#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: X6Task

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class X6Task.X6TaskBase
// 0x0020 (0x0048 - 0x0028)
class UX6TaskBase : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           ArrEventName;                                      // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bEnableTick;                                       // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void InovkeTaskStart(class FName* EventName);
	void OnTaskFinish();
	void OnTaskFinishEvent(bool bIsLogicalFinish);
	void OnTaskStart(class FName* EventName);
	void OnTaskTick(float DeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"X6TaskBase">();
	}
	static class UX6TaskBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UX6TaskBase>();
	}
};
static_assert(alignof(UX6TaskBase) == 0x000008, "Wrong alignment on UX6TaskBase");
static_assert(sizeof(UX6TaskBase) == 0x000048, "Wrong size on UX6TaskBase");
static_assert(offsetof(UX6TaskBase, ArrEventName) == 0x000030, "Member 'UX6TaskBase::ArrEventName' has a wrong offset!");
static_assert(offsetof(UX6TaskBase, bEnableTick) == 0x000040, "Member 'UX6TaskBase::bEnableTick' has a wrong offset!");

// Class X6Task.X6TaskAsyncBase
// 0x0000 (0x0048 - 0x0048)
class UX6TaskAsyncBase final : public UX6TaskBase
{
public:
	void InovkeAsyncTaskStart(class FName* EventName);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"X6TaskAsyncBase">();
	}
	static class UX6TaskAsyncBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UX6TaskAsyncBase>();
	}
};
static_assert(alignof(UX6TaskAsyncBase) == 0x000008, "Wrong alignment on UX6TaskAsyncBase");
static_assert(sizeof(UX6TaskAsyncBase) == 0x000048, "Wrong size on UX6TaskAsyncBase");

// Class X6Task.X6TaskManager
// 0x0060 (0x0090 - 0x0030)
class UX6TaskManager final : public UGameInstanceSubsystem
{
public:
	uint8                                         Pad_30[0x60];                                      // 0x0030(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"X6TaskManager">();
	}
	static class UX6TaskManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UX6TaskManager>();
	}
};
static_assert(alignof(UX6TaskManager) == 0x000008, "Wrong alignment on UX6TaskManager");
static_assert(sizeof(UX6TaskManager) == 0x000090, "Wrong size on UX6TaskManager");

}

