#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PositioningShadow_ConfigTemplate

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PositioningShadow_ConfigTemplate.BP_PositioningShadow_ConfigTemplate_C
// 0x00A8 (0x00D8 - 0x0030)
class UBP_PositioningShadow_ConfigTemplate_C final : public UPrimaryDataAsset
{
public:
	bool                                          EnableShadowDecal;                                 // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        FallingTransitionSpeed;                            // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LandingTransitionSpeed;                            // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WaitingTime;                                       // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxJumpHeight;                                     // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxTraceHeight;                                    // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SphereTraceRadius;                                 // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BlurAir;                                           // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ShadowDecalSize;                                   // 0x0070(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Curve_ShadowDecalDistanceMappedToScale2D;          // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            ShadowOnWaterSurfaceMesh;                          // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      ShadowOnWaterSurfaceMI;                            // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UNiagaraSystem>          JumpingFX;                                         // 0x00A0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UDataTable*                             FXDataTable;                                       // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          RotationSnapFloor;                                 // 0x00D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WithLerp;                                          // 0x00D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PositioningShadow_ConfigTemplate_C">();
	}
	static class UBP_PositioningShadow_ConfigTemplate_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_PositioningShadow_ConfigTemplate_C>();
	}
};
static_assert(alignof(UBP_PositioningShadow_ConfigTemplate_C) == 0x000008, "Wrong alignment on UBP_PositioningShadow_ConfigTemplate_C");
static_assert(sizeof(UBP_PositioningShadow_ConfigTemplate_C) == 0x0000D8, "Wrong size on UBP_PositioningShadow_ConfigTemplate_C");
static_assert(offsetof(UBP_PositioningShadow_ConfigTemplate_C, EnableShadowDecal) == 0x000030, "Member 'UBP_PositioningShadow_ConfigTemplate_C::EnableShadowDecal' has a wrong offset!");
static_assert(offsetof(UBP_PositioningShadow_ConfigTemplate_C, FallingTransitionSpeed) == 0x000038, "Member 'UBP_PositioningShadow_ConfigTemplate_C::FallingTransitionSpeed' has a wrong offset!");
static_assert(offsetof(UBP_PositioningShadow_ConfigTemplate_C, LandingTransitionSpeed) == 0x000040, "Member 'UBP_PositioningShadow_ConfigTemplate_C::LandingTransitionSpeed' has a wrong offset!");
static_assert(offsetof(UBP_PositioningShadow_ConfigTemplate_C, WaitingTime) == 0x000048, "Member 'UBP_PositioningShadow_ConfigTemplate_C::WaitingTime' has a wrong offset!");
static_assert(offsetof(UBP_PositioningShadow_ConfigTemplate_C, MaxJumpHeight) == 0x000050, "Member 'UBP_PositioningShadow_ConfigTemplate_C::MaxJumpHeight' has a wrong offset!");
static_assert(offsetof(UBP_PositioningShadow_ConfigTemplate_C, MaxTraceHeight) == 0x000058, "Member 'UBP_PositioningShadow_ConfigTemplate_C::MaxTraceHeight' has a wrong offset!");
static_assert(offsetof(UBP_PositioningShadow_ConfigTemplate_C, SphereTraceRadius) == 0x000060, "Member 'UBP_PositioningShadow_ConfigTemplate_C::SphereTraceRadius' has a wrong offset!");
static_assert(offsetof(UBP_PositioningShadow_ConfigTemplate_C, BlurAir) == 0x000068, "Member 'UBP_PositioningShadow_ConfigTemplate_C::BlurAir' has a wrong offset!");
static_assert(offsetof(UBP_PositioningShadow_ConfigTemplate_C, ShadowDecalSize) == 0x000070, "Member 'UBP_PositioningShadow_ConfigTemplate_C::ShadowDecalSize' has a wrong offset!");
static_assert(offsetof(UBP_PositioningShadow_ConfigTemplate_C, Curve_ShadowDecalDistanceMappedToScale2D) == 0x000088, "Member 'UBP_PositioningShadow_ConfigTemplate_C::Curve_ShadowDecalDistanceMappedToScale2D' has a wrong offset!");
static_assert(offsetof(UBP_PositioningShadow_ConfigTemplate_C, ShadowOnWaterSurfaceMesh) == 0x000090, "Member 'UBP_PositioningShadow_ConfigTemplate_C::ShadowOnWaterSurfaceMesh' has a wrong offset!");
static_assert(offsetof(UBP_PositioningShadow_ConfigTemplate_C, ShadowOnWaterSurfaceMI) == 0x000098, "Member 'UBP_PositioningShadow_ConfigTemplate_C::ShadowOnWaterSurfaceMI' has a wrong offset!");
static_assert(offsetof(UBP_PositioningShadow_ConfigTemplate_C, JumpingFX) == 0x0000A0, "Member 'UBP_PositioningShadow_ConfigTemplate_C::JumpingFX' has a wrong offset!");
static_assert(offsetof(UBP_PositioningShadow_ConfigTemplate_C, FXDataTable) == 0x0000C8, "Member 'UBP_PositioningShadow_ConfigTemplate_C::FXDataTable' has a wrong offset!");
static_assert(offsetof(UBP_PositioningShadow_ConfigTemplate_C, RotationSnapFloor) == 0x0000D0, "Member 'UBP_PositioningShadow_ConfigTemplate_C::RotationSnapFloor' has a wrong offset!");
static_assert(offsetof(UBP_PositioningShadow_ConfigTemplate_C, WithLerp) == 0x0000D1, "Member 'UBP_PositioningShadow_ConfigTemplate_C::WithLerp' has a wrong offset!");

}

