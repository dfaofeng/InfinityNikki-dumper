#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: X6EnhancedInput

#include "Basic.hpp"

#include "X6EnhancedInput_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class X6EnhancedInput.X6EnhancedInputActionDelegateBinding
// 0x0010 (0x0038 - 0x0028)
class UX6EnhancedInputActionDelegateBinding final : public UInputDelegateBinding
{
public:
	TArray<struct FX6BlueprintEnhancedInputActionBinding> InputActionDelegateBindings;               // 0x0028(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"X6EnhancedInputActionDelegateBinding">();
	}
	static class UX6EnhancedInputActionDelegateBinding* GetDefaultObj()
	{
		return GetDefaultObjImpl<UX6EnhancedInputActionDelegateBinding>();
	}
};
static_assert(alignof(UX6EnhancedInputActionDelegateBinding) == 0x000008, "Wrong alignment on UX6EnhancedInputActionDelegateBinding");
static_assert(sizeof(UX6EnhancedInputActionDelegateBinding) == 0x000038, "Wrong size on UX6EnhancedInputActionDelegateBinding");
static_assert(offsetof(UX6EnhancedInputActionDelegateBinding, InputActionDelegateBindings) == 0x000028, "Member 'UX6EnhancedInputActionDelegateBinding::InputActionDelegateBindings' has a wrong offset!");

// Class X6EnhancedInput.X6EnhancedInputActionValueBinding
// 0x0010 (0x0038 - 0x0028)
class UX6EnhancedInputActionValueBinding final : public UInputDelegateBinding
{
public:
	TArray<struct FX6BlueprintEnhancedInputActionBinding> InputActionValueBindings;                  // 0x0028(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"X6EnhancedInputActionValueBinding">();
	}
	static class UX6EnhancedInputActionValueBinding* GetDefaultObj()
	{
		return GetDefaultObjImpl<UX6EnhancedInputActionValueBinding>();
	}
};
static_assert(alignof(UX6EnhancedInputActionValueBinding) == 0x000008, "Wrong alignment on UX6EnhancedInputActionValueBinding");
static_assert(sizeof(UX6EnhancedInputActionValueBinding) == 0x000038, "Wrong size on UX6EnhancedInputActionValueBinding");
static_assert(offsetof(UX6EnhancedInputActionValueBinding, InputActionValueBindings) == 0x000028, "Member 'UX6EnhancedInputActionValueBinding::InputActionValueBindings' has a wrong offset!");

// Class X6EnhancedInput.X6EnhancedInputComponent
// 0x0070 (0x01A0 - 0x0130)
class UX6EnhancedInputComponent final : public UInputComponent
{
public:
	uint8                                         Pad_130[0x70];                                     // 0x0130(0x0070)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	struct FX6InputActionValue GetBoundActionValue(const class UX6InputAction* Action) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"X6EnhancedInputComponent">();
	}
	static class UX6EnhancedInputComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UX6EnhancedInputComponent>();
	}
};
static_assert(alignof(UX6EnhancedInputComponent) == 0x000008, "Wrong alignment on UX6EnhancedInputComponent");
static_assert(sizeof(UX6EnhancedInputComponent) == 0x0001A0, "Wrong size on UX6EnhancedInputComponent");

// Class X6EnhancedInput.X6EnhancedInputLibrary
// 0x0000 (0x0028 - 0x0028)
class UX6EnhancedInputLibrary final : public UBlueprintFunctionLibrary
{
public:
	static double Conv_InputActionValueToAxis1D(const struct FX6InputActionValue& InValue);
	static struct FVector2D Conv_InputActionValueToAxis2D(const struct FX6InputActionValue& InValue);
	static struct FVector Conv_InputActionValueToAxis3D(const struct FX6InputActionValue& InValue);
	static bool Conv_InputActionValueToBool(const struct FX6InputActionValue& InValue);
	static struct FX6InputActionValue GetBoundActionValue(class AActor* Actor, const class UX6InputAction* Action);
	static void RequestRebuildControlMappingsUsingContext(const class UX6InputMappingContext* Context, bool bForceImmediately);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"X6EnhancedInputLibrary">();
	}
	static class UX6EnhancedInputLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UX6EnhancedInputLibrary>();
	}
};
static_assert(alignof(UX6EnhancedInputLibrary) == 0x000008, "Wrong alignment on UX6EnhancedInputLibrary");
static_assert(sizeof(UX6EnhancedInputLibrary) == 0x000028, "Wrong size on UX6EnhancedInputLibrary");

// Class X6EnhancedInput.X6EnhancedInputSettings
// 0x0008 (0x0030 - 0x0028)
class UX6EnhancedInputSettings final : public USaveGame
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"X6EnhancedInputSettings">();
	}
	static class UX6EnhancedInputSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UX6EnhancedInputSettings>();
	}
};
static_assert(alignof(UX6EnhancedInputSettings) == 0x000008, "Wrong alignment on UX6EnhancedInputSettings");
static_assert(sizeof(UX6EnhancedInputSettings) == 0x000030, "Wrong size on UX6EnhancedInputSettings");

// Class X6EnhancedInput.X6EnhancedInputSubsystemInterface
// 0x0000 (0x0000 - 0x0000)
class IX6EnhancedInputSubsystemInterface final : public IInterface
{
public:
	void AddEventInput(class UClass* EventClass, class FName EventPropertyName, class UObject* EventTarget, const struct FVector& InRawValue, bool IsAccumulate);
	void AddGlobalDisabledInputAction(const class UX6InputAction* InAction);
	void AddGlobalEnabledInputAction(const class UX6InputAction* InAction);
	void AddMappingContext(const class UX6InputMappingContext* MappingContext, int32 Priority);
	void AddOverwriteMappings(const class UX6InputMappingContext* InMappingContext, const TMap<int32, struct FOverwriteKeyArray>& InOverwriteMappingIndexDatas, bool bNeedClear);
	void ClearAllMappings();
	void ClearGlobalDisabledInputActions();
	void ClearGlobalEnabledInputActions();
	void ClearInputActionOverrideSound(const class UX6InputAction* InAction, EX6TriggerEvent InTriggerEvent);
	void ClearOverwriteMappings(const class UX6InputMappingContext* InMappingContext);
	void DisableInputAction(const class UX6InputAction* InAction);
	void DisableInputActions(const TArray<class UX6InputAction*>& InActions);
	void EnableInputAction(const class UX6InputAction* InAction);
	void EnableInputActions(const TArray<class UX6InputAction*>& InActions);
	TArray<struct FX6EnhancedActionKeyMapping> GetActionKeyMappings(const class UX6InputAction* InputAction);
	TArray<struct FKey> GetActionMappingKeys(const class UX6InputAction* InputAction);
	bool GetActionMappingKeysWithTriggers(const class UX6InputAction* InputAction, const TArray<class UClass*>& InTriggerClasss, TArray<struct FKey>* OutKeys);
	void GetDisabledInputActions(TArray<class UX6InputAction*>* OutActions);
	EX6ForceInputState GetForceInputState();
	void GetForceInputStateExceptActions(TArray<class UX6InputAction*>* OutActions);
	void GetGlobalDisabledInputActions(TArray<class UX6InputAction*>* OutActions);
	void GetGlobalEnabledInputActions(TArray<class UX6InputAction*>* OutActions);
	void InitInputActionDefaultSound(const TArray<struct FX6InputActionSoundInfo>& InSoundInfos);
	void RemoveGlobalDisabledInputAction(const class UX6InputAction* InAction);
	void RemoveGlobalEnabledInputAction(const class UX6InputAction* InAction);
	void RemoveMappingContext(const class UX6InputMappingContext* MappingContext);
	void RequestRebuildControlMappings(bool bForceImmediately);
	void SetForceInputState(EX6ForceInputState InForceInputState, const TArray<class UX6InputAction*>& InExceptActions);
	void SetGlobalDisabledInputActions(const TArray<class UX6InputAction*>& InActions);
	void SetGlobalEnabledInputActions(const TArray<class UX6InputAction*>& InActions);
	void SetInputActionOverrideSound(const class UX6InputAction* InAction, TSoftObjectPtr<class UAkAudioEvent> InAudioEvent, EX6TriggerEvent InTriggerEvent);
	void TriggerAction(const class UX6InputAction* InputAction, EX6TriggerEvent InTriggerEvent, const struct FVector& InRawValue);

	bool HasMappingContext(const class UX6InputMappingContext* MappingContext) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"X6EnhancedInputSubsystemInterface">();
	}
	static class IX6EnhancedInputSubsystemInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IX6EnhancedInputSubsystemInterface>();
	}
};
static_assert(alignof(IX6EnhancedInputSubsystemInterface) == 0x000001, "Wrong alignment on IX6EnhancedInputSubsystemInterface");
static_assert(sizeof(IX6EnhancedInputSubsystemInterface) == 0x000001, "Wrong size on IX6EnhancedInputSubsystemInterface");

// Class X6EnhancedInput.X6EnhancedInputLocalPlayerSubsystem
// 0x0110 (0x0140 - 0x0030)
class UX6EnhancedInputLocalPlayerSubsystem final : public ULocalPlayerSubsystem
{
public:
	uint8                                         Pad_30[0x110];                                     // 0x0030(0x0110)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void RegisterInputActionUIFilterDelegate(TDelegate<void(const class UObject* Widget)> UIFilterDelegate);

	int32 BindAction(const class UX6InputAction* InputAction, EX6TriggerEvent InTriggerEvent, class UObject* InObject, TDelegate<void(const struct FX6InputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const TArray<struct FX6InputActionTriggerKeyData>& TriggerKeyDatas)> OnTriggerAction, class UX6EnhancedInputComponent* BindToComponent) const;
	int32 BindActionByFuntionName(const class UX6InputAction* InputAction, EX6TriggerEvent InTriggerEvent, class UObject* InObject, class FName InFunctionName, class UX6EnhancedInputComponent* BindToComponent) const;
	EX6InputActionCheckState CheckInputActionState(const class FString& InputActionPath) const;
	bool UnbindActionByHandle(int32 BindingHandle, class UX6EnhancedInputComponent* UnbindFromComponent, bool ForceRemove) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"X6EnhancedInputLocalPlayerSubsystem">();
	}
	static class UX6EnhancedInputLocalPlayerSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UX6EnhancedInputLocalPlayerSubsystem>();
	}
};
static_assert(alignof(UX6EnhancedInputLocalPlayerSubsystem) == 0x000008, "Wrong alignment on UX6EnhancedInputLocalPlayerSubsystem");
static_assert(sizeof(UX6EnhancedInputLocalPlayerSubsystem) == 0x000140, "Wrong size on UX6EnhancedInputLocalPlayerSubsystem");

// Class X6EnhancedInput.X6EnhancedPlayerInput
// 0x0558 (0x09F0 - 0x0498)
class UX6EnhancedPlayerInput final : public UPlayerInput
{
public:
	uint8                                         Pad_498[0x90];                                     // 0x0498(0x0090)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UX6InputMappingContext*, int32>    AppliedInputContexts;                              // 0x0528(0x0050)(Transient, NativeAccessSpecifierPrivate)
	TArray<struct FX6EnhancedActionKeyMapping>    EnhancedActionMappings;                            // 0x0578(0x0010)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_588[0x50];                                     // 0x0588(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UX6InputAction*, struct FX6InputActionInstance> ActionInstanceData;                   // 0x05D8(0x0050)(Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_628[0x3C8];                                    // 0x0628(0x03C8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"X6EnhancedPlayerInput">();
	}
	static class UX6EnhancedPlayerInput* GetDefaultObj()
	{
		return GetDefaultObjImpl<UX6EnhancedPlayerInput>();
	}
};
static_assert(alignof(UX6EnhancedPlayerInput) == 0x000008, "Wrong alignment on UX6EnhancedPlayerInput");
static_assert(sizeof(UX6EnhancedPlayerInput) == 0x0009F0, "Wrong size on UX6EnhancedPlayerInput");
static_assert(offsetof(UX6EnhancedPlayerInput, AppliedInputContexts) == 0x000528, "Member 'UX6EnhancedPlayerInput::AppliedInputContexts' has a wrong offset!");
static_assert(offsetof(UX6EnhancedPlayerInput, EnhancedActionMappings) == 0x000578, "Member 'UX6EnhancedPlayerInput::EnhancedActionMappings' has a wrong offset!");
static_assert(offsetof(UX6EnhancedPlayerInput, ActionInstanceData) == 0x0005D8, "Member 'UX6EnhancedPlayerInput::ActionInstanceData' has a wrong offset!");

// Class X6EnhancedInput.X6InputAction
// 0x0058 (0x0088 - 0x0030)
class UX6InputAction final : public UDataAsset
{
public:
	bool                                          bTriggerWhenPaused;                                // 0x0030(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EX6InputActionValueType                       ValueType;                                         // 0x0031(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UX6InputTrigger*>                Triggers;                                          // 0x0038(0x0010)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UX6InputModifier*>               Modifiers;                                         // 0x0048(0x0010)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FString                                 ActionShowName;                                    // 0x0058(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanOverwrite;                                     // 0x0068(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanShowInUI;                                      // 0x0069(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UX6InputAction*>                 UIShowChildrenActions;                             // 0x0070(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bEffectedBySlomo;                                  // 0x0080(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasPriority;                                      // 0x0081(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_82[0x2];                                       // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ActionPriority;                                    // 0x0084(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"X6InputAction">();
	}
	static class UX6InputAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UX6InputAction>();
	}
};
static_assert(alignof(UX6InputAction) == 0x000008, "Wrong alignment on UX6InputAction");
static_assert(sizeof(UX6InputAction) == 0x000088, "Wrong size on UX6InputAction");
static_assert(offsetof(UX6InputAction, bTriggerWhenPaused) == 0x000030, "Member 'UX6InputAction::bTriggerWhenPaused' has a wrong offset!");
static_assert(offsetof(UX6InputAction, ValueType) == 0x000031, "Member 'UX6InputAction::ValueType' has a wrong offset!");
static_assert(offsetof(UX6InputAction, Triggers) == 0x000038, "Member 'UX6InputAction::Triggers' has a wrong offset!");
static_assert(offsetof(UX6InputAction, Modifiers) == 0x000048, "Member 'UX6InputAction::Modifiers' has a wrong offset!");
static_assert(offsetof(UX6InputAction, ActionShowName) == 0x000058, "Member 'UX6InputAction::ActionShowName' has a wrong offset!");
static_assert(offsetof(UX6InputAction, bCanOverwrite) == 0x000068, "Member 'UX6InputAction::bCanOverwrite' has a wrong offset!");
static_assert(offsetof(UX6InputAction, bCanShowInUI) == 0x000069, "Member 'UX6InputAction::bCanShowInUI' has a wrong offset!");
static_assert(offsetof(UX6InputAction, UIShowChildrenActions) == 0x000070, "Member 'UX6InputAction::UIShowChildrenActions' has a wrong offset!");
static_assert(offsetof(UX6InputAction, bEffectedBySlomo) == 0x000080, "Member 'UX6InputAction::bEffectedBySlomo' has a wrong offset!");
static_assert(offsetof(UX6InputAction, bHasPriority) == 0x000081, "Member 'UX6InputAction::bHasPriority' has a wrong offset!");
static_assert(offsetof(UX6InputAction, ActionPriority) == 0x000084, "Member 'UX6InputAction::ActionPriority' has a wrong offset!");

// Class X6EnhancedInput.X6InputMappingContext
// 0x0038 (0x0068 - 0x0030)
class UX6InputMappingContext final : public UDataAsset
{
public:
	TArray<struct FX6EnhancedActionKeyMapping>    Mappings;                                          // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UX6InputAction*>                 ActionShowSort;                                    // 0x0040(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class FText                                   ContextDescription;                                // 0x0050(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	EX6EnhancedInputType                          DefaultInputType;                                  // 0x0060(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ClearMappings();
	struct FX6EnhancedActionKeyMapping MapKey(const class UX6InputAction* Action);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"X6InputMappingContext">();
	}
	static class UX6InputMappingContext* GetDefaultObj()
	{
		return GetDefaultObjImpl<UX6InputMappingContext>();
	}
};
static_assert(alignof(UX6InputMappingContext) == 0x000008, "Wrong alignment on UX6InputMappingContext");
static_assert(sizeof(UX6InputMappingContext) == 0x000068, "Wrong size on UX6InputMappingContext");
static_assert(offsetof(UX6InputMappingContext, Mappings) == 0x000030, "Member 'UX6InputMappingContext::Mappings' has a wrong offset!");
static_assert(offsetof(UX6InputMappingContext, ActionShowSort) == 0x000040, "Member 'UX6InputMappingContext::ActionShowSort' has a wrong offset!");
static_assert(offsetof(UX6InputMappingContext, ContextDescription) == 0x000050, "Member 'UX6InputMappingContext::ContextDescription' has a wrong offset!");
static_assert(offsetof(UX6InputMappingContext, DefaultInputType) == 0x000060, "Member 'UX6InputMappingContext::DefaultInputType' has a wrong offset!");

// Class X6EnhancedInput.X6InputModifier
// 0x0000 (0x0028 - 0x0028)
class UX6InputModifier : public UObject
{
public:
	EX6ModifierExecutionPhase GetExecutionPhase() const;
	struct FLinearColor GetVisualizationColor(const struct FX6InputActionValue& SampleValue, const struct FX6InputActionValue& FinalValue) const;
	struct FX6InputActionValue ModifyRaw(const class UX6EnhancedPlayerInput* PlayerInput, const struct FX6InputActionValue& CurrentValue, float DeltaTime) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"X6InputModifier">();
	}
	static class UX6InputModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<UX6InputModifier>();
	}
};
static_assert(alignof(UX6InputModifier) == 0x000008, "Wrong alignment on UX6InputModifier");
static_assert(sizeof(UX6InputModifier) == 0x000028, "Wrong size on UX6InputModifier");

// Class X6EnhancedInput.X6InputModifierDeadZone
// 0x0010 (0x0038 - 0x0028)
class UX6InputModifierDeadZone final : public UX6InputModifier
{
public:
	float                                         LowerThreshold;                                    // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UpperThreshold;                                    // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EX6DeadZoneType                               Type;                                              // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"X6InputModifierDeadZone">();
	}
	static class UX6InputModifierDeadZone* GetDefaultObj()
	{
		return GetDefaultObjImpl<UX6InputModifierDeadZone>();
	}
};
static_assert(alignof(UX6InputModifierDeadZone) == 0x000008, "Wrong alignment on UX6InputModifierDeadZone");
static_assert(sizeof(UX6InputModifierDeadZone) == 0x000038, "Wrong size on UX6InputModifierDeadZone");
static_assert(offsetof(UX6InputModifierDeadZone, LowerThreshold) == 0x000028, "Member 'UX6InputModifierDeadZone::LowerThreshold' has a wrong offset!");
static_assert(offsetof(UX6InputModifierDeadZone, UpperThreshold) == 0x00002C, "Member 'UX6InputModifierDeadZone::UpperThreshold' has a wrong offset!");
static_assert(offsetof(UX6InputModifierDeadZone, Type) == 0x000030, "Member 'UX6InputModifierDeadZone::Type' has a wrong offset!");

// Class X6EnhancedInput.X6InputModifierScalar
// 0x0018 (0x0040 - 0x0028)
class UX6InputModifierScalar final : public UX6InputModifier
{
public:
	struct FVector                                Scalar;                                            // 0x0028(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"X6InputModifierScalar">();
	}
	static class UX6InputModifierScalar* GetDefaultObj()
	{
		return GetDefaultObjImpl<UX6InputModifierScalar>();
	}
};
static_assert(alignof(UX6InputModifierScalar) == 0x000008, "Wrong alignment on UX6InputModifierScalar");
static_assert(sizeof(UX6InputModifierScalar) == 0x000040, "Wrong size on UX6InputModifierScalar");
static_assert(offsetof(UX6InputModifierScalar, Scalar) == 0x000028, "Member 'UX6InputModifierScalar::Scalar' has a wrong offset!");

// Class X6EnhancedInput.X6InputModifierNegate
// 0x0008 (0x0030 - 0x0028)
class UX6InputModifierNegate final : public UX6InputModifier
{
public:
	bool                                          bX;                                                // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bY;                                                // 0x0029(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bZ;                                                // 0x002A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"X6InputModifierNegate">();
	}
	static class UX6InputModifierNegate* GetDefaultObj()
	{
		return GetDefaultObjImpl<UX6InputModifierNegate>();
	}
};
static_assert(alignof(UX6InputModifierNegate) == 0x000008, "Wrong alignment on UX6InputModifierNegate");
static_assert(sizeof(UX6InputModifierNegate) == 0x000030, "Wrong size on UX6InputModifierNegate");
static_assert(offsetof(UX6InputModifierNegate, bX) == 0x000028, "Member 'UX6InputModifierNegate::bX' has a wrong offset!");
static_assert(offsetof(UX6InputModifierNegate, bY) == 0x000029, "Member 'UX6InputModifierNegate::bY' has a wrong offset!");
static_assert(offsetof(UX6InputModifierNegate, bZ) == 0x00002A, "Member 'UX6InputModifierNegate::bZ' has a wrong offset!");

// Class X6EnhancedInput.X6InputModifierSmooth
// 0x0030 (0x0058 - 0x0028)
class UX6InputModifierSmooth final : public UX6InputModifier
{
public:
	uint8                                         Pad_28[0x30];                                      // 0x0028(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"X6InputModifierSmooth">();
	}
	static class UX6InputModifierSmooth* GetDefaultObj()
	{
		return GetDefaultObjImpl<UX6InputModifierSmooth>();
	}
};
static_assert(alignof(UX6InputModifierSmooth) == 0x000008, "Wrong alignment on UX6InputModifierSmooth");
static_assert(sizeof(UX6InputModifierSmooth) == 0x000058, "Wrong size on UX6InputModifierSmooth");

// Class X6EnhancedInput.X6InputModifierResponseCurveExponential
// 0x0018 (0x0040 - 0x0028)
class UX6InputModifierResponseCurveExponential final : public UX6InputModifier
{
public:
	struct FVector                                CurveExponent;                                     // 0x0028(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"X6InputModifierResponseCurveExponential">();
	}
	static class UX6InputModifierResponseCurveExponential* GetDefaultObj()
	{
		return GetDefaultObjImpl<UX6InputModifierResponseCurveExponential>();
	}
};
static_assert(alignof(UX6InputModifierResponseCurveExponential) == 0x000008, "Wrong alignment on UX6InputModifierResponseCurveExponential");
static_assert(sizeof(UX6InputModifierResponseCurveExponential) == 0x000040, "Wrong size on UX6InputModifierResponseCurveExponential");
static_assert(offsetof(UX6InputModifierResponseCurveExponential, CurveExponent) == 0x000028, "Member 'UX6InputModifierResponseCurveExponential::CurveExponent' has a wrong offset!");

// Class X6EnhancedInput.X6InputModifierResponseCurveUser
// 0x0018 (0x0040 - 0x0028)
class UX6InputModifierResponseCurveUser final : public UX6InputModifier
{
public:
	class UCurveFloat*                            ResponseX;                                         // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            ResponseY;                                         // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            ResponseZ;                                         // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"X6InputModifierResponseCurveUser">();
	}
	static class UX6InputModifierResponseCurveUser* GetDefaultObj()
	{
		return GetDefaultObjImpl<UX6InputModifierResponseCurveUser>();
	}
};
static_assert(alignof(UX6InputModifierResponseCurveUser) == 0x000008, "Wrong alignment on UX6InputModifierResponseCurveUser");
static_assert(sizeof(UX6InputModifierResponseCurveUser) == 0x000040, "Wrong size on UX6InputModifierResponseCurveUser");
static_assert(offsetof(UX6InputModifierResponseCurveUser, ResponseX) == 0x000028, "Member 'UX6InputModifierResponseCurveUser::ResponseX' has a wrong offset!");
static_assert(offsetof(UX6InputModifierResponseCurveUser, ResponseY) == 0x000030, "Member 'UX6InputModifierResponseCurveUser::ResponseY' has a wrong offset!");
static_assert(offsetof(UX6InputModifierResponseCurveUser, ResponseZ) == 0x000038, "Member 'UX6InputModifierResponseCurveUser::ResponseZ' has a wrong offset!");

// Class X6EnhancedInput.X6InputModifierFOVScaling
// 0x0008 (0x0030 - 0x0028)
class UX6InputModifierFOVScaling final : public UX6InputModifier
{
public:
	float                                         FOVScale;                                          // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EX6FOVScalingType                             FOVScalingType;                                    // 0x002C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"X6InputModifierFOVScaling">();
	}
	static class UX6InputModifierFOVScaling* GetDefaultObj()
	{
		return GetDefaultObjImpl<UX6InputModifierFOVScaling>();
	}
};
static_assert(alignof(UX6InputModifierFOVScaling) == 0x000008, "Wrong alignment on UX6InputModifierFOVScaling");
static_assert(sizeof(UX6InputModifierFOVScaling) == 0x000030, "Wrong size on UX6InputModifierFOVScaling");
static_assert(offsetof(UX6InputModifierFOVScaling, FOVScale) == 0x000028, "Member 'UX6InputModifierFOVScaling::FOVScale' has a wrong offset!");
static_assert(offsetof(UX6InputModifierFOVScaling, FOVScalingType) == 0x00002C, "Member 'UX6InputModifierFOVScaling::FOVScalingType' has a wrong offset!");

// Class X6EnhancedInput.X6InputModifierToWorldSpace
// 0x0000 (0x0028 - 0x0028)
class UX6InputModifierToWorldSpace final : public UX6InputModifier
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"X6InputModifierToWorldSpace">();
	}
	static class UX6InputModifierToWorldSpace* GetDefaultObj()
	{
		return GetDefaultObjImpl<UX6InputModifierToWorldSpace>();
	}
};
static_assert(alignof(UX6InputModifierToWorldSpace) == 0x000008, "Wrong alignment on UX6InputModifierToWorldSpace");
static_assert(sizeof(UX6InputModifierToWorldSpace) == 0x000028, "Wrong size on UX6InputModifierToWorldSpace");

// Class X6EnhancedInput.X6InputModifierSwizzleAxis
// 0x0008 (0x0030 - 0x0028)
class UX6InputModifierSwizzleAxis final : public UX6InputModifier
{
public:
	EX6InputAxisSwizzle                           Order;                                             // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"X6InputModifierSwizzleAxis">();
	}
	static class UX6InputModifierSwizzleAxis* GetDefaultObj()
	{
		return GetDefaultObjImpl<UX6InputModifierSwizzleAxis>();
	}
};
static_assert(alignof(UX6InputModifierSwizzleAxis) == 0x000008, "Wrong alignment on UX6InputModifierSwizzleAxis");
static_assert(sizeof(UX6InputModifierSwizzleAxis) == 0x000030, "Wrong size on UX6InputModifierSwizzleAxis");
static_assert(offsetof(UX6InputModifierSwizzleAxis, Order) == 0x000028, "Member 'UX6InputModifierSwizzleAxis::Order' has a wrong offset!");

// Class X6EnhancedInput.X6InputModifierCollection
// 0x0018 (0x0040 - 0x0028)
class UX6InputModifierCollection final : public UX6InputModifier
{
public:
	TArray<class UX6InputModifier*>               Modifiers;                                         // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	bool                                          bPermitValueTypeModification;                      // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"X6InputModifierCollection">();
	}
	static class UX6InputModifierCollection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UX6InputModifierCollection>();
	}
};
static_assert(alignof(UX6InputModifierCollection) == 0x000008, "Wrong alignment on UX6InputModifierCollection");
static_assert(sizeof(UX6InputModifierCollection) == 0x000040, "Wrong size on UX6InputModifierCollection");
static_assert(offsetof(UX6InputModifierCollection, Modifiers) == 0x000028, "Member 'UX6InputModifierCollection::Modifiers' has a wrong offset!");
static_assert(offsetof(UX6InputModifierCollection, bPermitValueTypeModification) == 0x000038, "Member 'UX6InputModifierCollection::bPermitValueTypeModification' has a wrong offset!");

// Class X6EnhancedInput.X6InputTrigger
// 0x0028 (0x0050 - 0x0028)
class UX6InputTrigger : public UObject
{
public:
	float                                         ActuationThreshold;                                // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FX6InputActionValue                    LastValue;                                         // 0x0030(0x0020)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)

public:
	EX6TriggerState UpdateState(const class UX6EnhancedPlayerInput* PlayerInput, const struct FX6InputActionValue& ModifiedValue, float DeltaTime);

	EX6TriggerType GetTriggerType() const;
	bool IsActuated(const struct FX6InputActionValue& ForValue) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"X6InputTrigger">();
	}
	static class UX6InputTrigger* GetDefaultObj()
	{
		return GetDefaultObjImpl<UX6InputTrigger>();
	}
};
static_assert(alignof(UX6InputTrigger) == 0x000008, "Wrong alignment on UX6InputTrigger");
static_assert(sizeof(UX6InputTrigger) == 0x000050, "Wrong size on UX6InputTrigger");
static_assert(offsetof(UX6InputTrigger, ActuationThreshold) == 0x000028, "Member 'UX6InputTrigger::ActuationThreshold' has a wrong offset!");
static_assert(offsetof(UX6InputTrigger, LastValue) == 0x000030, "Member 'UX6InputTrigger::LastValue' has a wrong offset!");

// Class X6EnhancedInput.X6InputTriggerTimedBase
// 0x0008 (0x0058 - 0x0050)
class UX6InputTriggerTimedBase : public UX6InputTrigger
{
public:
	float                                         HeldDuration;                                      // 0x0050(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"X6InputTriggerTimedBase">();
	}
	static class UX6InputTriggerTimedBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UX6InputTriggerTimedBase>();
	}
};
static_assert(alignof(UX6InputTriggerTimedBase) == 0x000008, "Wrong alignment on UX6InputTriggerTimedBase");
static_assert(sizeof(UX6InputTriggerTimedBase) == 0x000058, "Wrong size on UX6InputTriggerTimedBase");
static_assert(offsetof(UX6InputTriggerTimedBase, HeldDuration) == 0x000050, "Member 'UX6InputTriggerTimedBase::HeldDuration' has a wrong offset!");

// Class X6EnhancedInput.X6InputTriggerDown
// 0x0000 (0x0050 - 0x0050)
class UX6InputTriggerDown final : public UX6InputTrigger
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"X6InputTriggerDown">();
	}
	static class UX6InputTriggerDown* GetDefaultObj()
	{
		return GetDefaultObjImpl<UX6InputTriggerDown>();
	}
};
static_assert(alignof(UX6InputTriggerDown) == 0x000008, "Wrong alignment on UX6InputTriggerDown");
static_assert(sizeof(UX6InputTriggerDown) == 0x000050, "Wrong size on UX6InputTriggerDown");

// Class X6EnhancedInput.X6InputTriggerPressed
// 0x0000 (0x0050 - 0x0050)
class UX6InputTriggerPressed final : public UX6InputTrigger
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"X6InputTriggerPressed">();
	}
	static class UX6InputTriggerPressed* GetDefaultObj()
	{
		return GetDefaultObjImpl<UX6InputTriggerPressed>();
	}
};
static_assert(alignof(UX6InputTriggerPressed) == 0x000008, "Wrong alignment on UX6InputTriggerPressed");
static_assert(sizeof(UX6InputTriggerPressed) == 0x000050, "Wrong size on UX6InputTriggerPressed");

// Class X6EnhancedInput.X6InputTriggerReleased
// 0x0000 (0x0050 - 0x0050)
class UX6InputTriggerReleased final : public UX6InputTrigger
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"X6InputTriggerReleased">();
	}
	static class UX6InputTriggerReleased* GetDefaultObj()
	{
		return GetDefaultObjImpl<UX6InputTriggerReleased>();
	}
};
static_assert(alignof(UX6InputTriggerReleased) == 0x000008, "Wrong alignment on UX6InputTriggerReleased");
static_assert(sizeof(UX6InputTriggerReleased) == 0x000050, "Wrong size on UX6InputTriggerReleased");

// Class X6EnhancedInput.X6InputTriggerHold
// 0x0010 (0x0068 - 0x0058)
class UX6InputTriggerHold final : public UX6InputTriggerTimedBase
{
public:
	uint8                                         Pad_58[0x4];                                       // 0x0058(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HoldTimeThreshold;                                 // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsOneShot;                                        // 0x0060(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"X6InputTriggerHold">();
	}
	static class UX6InputTriggerHold* GetDefaultObj()
	{
		return GetDefaultObjImpl<UX6InputTriggerHold>();
	}
};
static_assert(alignof(UX6InputTriggerHold) == 0x000008, "Wrong alignment on UX6InputTriggerHold");
static_assert(sizeof(UX6InputTriggerHold) == 0x000068, "Wrong size on UX6InputTriggerHold");
static_assert(offsetof(UX6InputTriggerHold, HoldTimeThreshold) == 0x00005C, "Member 'UX6InputTriggerHold::HoldTimeThreshold' has a wrong offset!");
static_assert(offsetof(UX6InputTriggerHold, bIsOneShot) == 0x000060, "Member 'UX6InputTriggerHold::bIsOneShot' has a wrong offset!");

// Class X6EnhancedInput.X6InputTriggerHoldAndRelease
// 0x0008 (0x0060 - 0x0058)
class UX6InputTriggerHoldAndRelease final : public UX6InputTriggerTimedBase
{
public:
	float                                         HoldTimeThreshold;                                 // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"X6InputTriggerHoldAndRelease">();
	}
	static class UX6InputTriggerHoldAndRelease* GetDefaultObj()
	{
		return GetDefaultObjImpl<UX6InputTriggerHoldAndRelease>();
	}
};
static_assert(alignof(UX6InputTriggerHoldAndRelease) == 0x000008, "Wrong alignment on UX6InputTriggerHoldAndRelease");
static_assert(sizeof(UX6InputTriggerHoldAndRelease) == 0x000060, "Wrong size on UX6InputTriggerHoldAndRelease");
static_assert(offsetof(UX6InputTriggerHoldAndRelease, HoldTimeThreshold) == 0x000058, "Member 'UX6InputTriggerHoldAndRelease::HoldTimeThreshold' has a wrong offset!");

// Class X6EnhancedInput.X6InputTriggerTap
// 0x0008 (0x0060 - 0x0058)
class UX6InputTriggerTap final : public UX6InputTriggerTimedBase
{
public:
	float                                         TapReleaseTimeThreshold;                           // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"X6InputTriggerTap">();
	}
	static class UX6InputTriggerTap* GetDefaultObj()
	{
		return GetDefaultObjImpl<UX6InputTriggerTap>();
	}
};
static_assert(alignof(UX6InputTriggerTap) == 0x000008, "Wrong alignment on UX6InputTriggerTap");
static_assert(sizeof(UX6InputTriggerTap) == 0x000060, "Wrong size on UX6InputTriggerTap");
static_assert(offsetof(UX6InputTriggerTap, TapReleaseTimeThreshold) == 0x000058, "Member 'UX6InputTriggerTap::TapReleaseTimeThreshold' has a wrong offset!");

// Class X6EnhancedInput.X6InputTriggerChordAction
// 0x0008 (0x0058 - 0x0050)
class UX6InputTriggerChordAction : public UX6InputTrigger
{
public:
	class UX6InputAction*                         ChordAction;                                       // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"X6InputTriggerChordAction">();
	}
	static class UX6InputTriggerChordAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UX6InputTriggerChordAction>();
	}
};
static_assert(alignof(UX6InputTriggerChordAction) == 0x000008, "Wrong alignment on UX6InputTriggerChordAction");
static_assert(sizeof(UX6InputTriggerChordAction) == 0x000058, "Wrong size on UX6InputTriggerChordAction");
static_assert(offsetof(UX6InputTriggerChordAction, ChordAction) == 0x000050, "Member 'UX6InputTriggerChordAction::ChordAction' has a wrong offset!");

// Class X6EnhancedInput.X6InputTriggerChordBlocker
// 0x0000 (0x0058 - 0x0058)
class UX6InputTriggerChordBlocker final : public UX6InputTriggerChordAction
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"X6InputTriggerChordBlocker">();
	}
	static class UX6InputTriggerChordBlocker* GetDefaultObj()
	{
		return GetDefaultObjImpl<UX6InputTriggerChordBlocker>();
	}
};
static_assert(alignof(UX6InputTriggerChordBlocker) == 0x000008, "Wrong alignment on UX6InputTriggerChordBlocker");
static_assert(sizeof(UX6InputTriggerChordBlocker) == 0x000058, "Wrong size on UX6InputTriggerChordBlocker");

// Class X6EnhancedInput.InputTriggerDoubleTap
// 0x0018 (0x0068 - 0x0050)
class UInputTriggerDoubleTap final : public UX6InputTrigger
{
public:
	float                                         TapReleaseTimeThreshold;                           // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TapBettwenTimeThreshold;                           // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x10];                                      // 0x0058(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"InputTriggerDoubleTap">();
	}
	static class UInputTriggerDoubleTap* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInputTriggerDoubleTap>();
	}
};
static_assert(alignof(UInputTriggerDoubleTap) == 0x000008, "Wrong alignment on UInputTriggerDoubleTap");
static_assert(sizeof(UInputTriggerDoubleTap) == 0x000068, "Wrong size on UInputTriggerDoubleTap");
static_assert(offsetof(UInputTriggerDoubleTap, TapReleaseTimeThreshold) == 0x000050, "Member 'UInputTriggerDoubleTap::TapReleaseTimeThreshold' has a wrong offset!");
static_assert(offsetof(UInputTriggerDoubleTap, TapBettwenTimeThreshold) == 0x000054, "Member 'UInputTriggerDoubleTap::TapBettwenTimeThreshold' has a wrong offset!");

// Class X6EnhancedInput.InputTriggerEventFire
// 0x0000 (0x0050 - 0x0050)
class UInputTriggerEventFire final : public UX6InputTrigger
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"InputTriggerEventFire">();
	}
	static class UInputTriggerEventFire* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInputTriggerEventFire>();
	}
};
static_assert(alignof(UInputTriggerEventFire) == 0x000008, "Wrong alignment on UInputTriggerEventFire");
static_assert(sizeof(UInputTriggerEventFire) == 0x000050, "Wrong size on UInputTriggerEventFire");

}

