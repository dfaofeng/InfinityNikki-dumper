#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AmbientConfigCameraVolumeActor

#include "Basic.hpp"

#include "BP_AmbientConfigCameraVolumeActor_classes.hpp"
#include "BP_AmbientConfigCameraVolumeActor_parameters.hpp"


namespace SDK
{

// Function BP_AmbientConfigCameraVolumeActor.BP_AmbientConfigCameraVolumeActor_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_AmbientConfigCameraVolumeActor_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AmbientConfigCameraVolumeActor_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AmbientConfigCameraVolumeActor.BP_AmbientConfigCameraVolumeActor_C.ReceiveActorEndOverlap
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_AmbientConfigCameraVolumeActor_C::ReceiveActorEndOverlap(class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AmbientConfigCameraVolumeActor_C", "ReceiveActorEndOverlap");

	Params::BP_AmbientConfigCameraVolumeActor_C_ReceiveActorEndOverlap Parms{};

	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AmbientConfigCameraVolumeActor.BP_AmbientConfigCameraVolumeActor_C.ReceiveActorBeginOverlap
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_AmbientConfigCameraVolumeActor_C::ReceiveActorBeginOverlap(class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AmbientConfigCameraVolumeActor_C", "ReceiveActorBeginOverlap");

	Params::BP_AmbientConfigCameraVolumeActor_C_ReceiveActorBeginOverlap Parms{};

	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AmbientConfigCameraVolumeActor.BP_AmbientConfigCameraVolumeActor_C.OnTargetActorEndOverlap
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InActor                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_AmbientConfigCameraVolumeActor_C::OnTargetActorEndOverlap(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AmbientConfigCameraVolumeActor_C", "OnTargetActorEndOverlap");

	Params::BP_AmbientConfigCameraVolumeActor_C_OnTargetActorEndOverlap Parms{};

	Parms.InActor = InActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AmbientConfigCameraVolumeActor.BP_AmbientConfigCameraVolumeActor_C.OnTargetActorBeginOverlap
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InActor                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_AmbientConfigCameraVolumeActor_C::OnTargetActorBeginOverlap(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AmbientConfigCameraVolumeActor_C", "OnTargetActorBeginOverlap");

	Params::BP_AmbientConfigCameraVolumeActor_C_OnTargetActorBeginOverlap Parms{};

	Parms.InActor = InActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AmbientConfigCameraVolumeActor.BP_AmbientConfigCameraVolumeActor_C.ExecuteUbergraph_BP_AmbientConfigCameraVolumeActor
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AmbientConfigCameraVolumeActor_C::ExecuteUbergraph_BP_AmbientConfigCameraVolumeActor(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AmbientConfigCameraVolumeActor_C", "ExecuteUbergraph_BP_AmbientConfigCameraVolumeActor");

	Params::BP_AmbientConfigCameraVolumeActor_C_ExecuteUbergraph_BP_AmbientConfigCameraVolumeActor Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AmbientConfigCameraVolumeActor.BP_AmbientConfigCameraVolumeActor_C.BP_RemoveCameraConfig
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAdvancedCamera*                  AdvancedCamera                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AmbientConfigCameraVolumeActor_C::BP_RemoveCameraConfig(class UAdvancedCamera* AdvancedCamera, int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AmbientConfigCameraVolumeActor_C", "BP_RemoveCameraConfig");

	Params::BP_AmbientConfigCameraVolumeActor_C_BP_RemoveCameraConfig Parms{};

	Parms.AdvancedCamera = AdvancedCamera;
	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AmbientConfigCameraVolumeActor.BP_AmbientConfigCameraVolumeActor_C.GetModuleName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString ABP_AmbientConfigCameraVolumeActor_C::GetModuleName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AmbientConfigCameraVolumeActor_C", "GetModuleName");

	Params::BP_AmbientConfigCameraVolumeActor_C_GetModuleName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

