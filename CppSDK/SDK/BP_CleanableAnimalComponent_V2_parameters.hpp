#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CleanableAnimalComponent_V2

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "E_CleaningAbilityType_structs.hpp"


namespace SDK::Params
{

// Function BP_CleanableAnimalComponent_V2.BP_CleanableAnimalComponent_V2_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_CleanableAnimalComponent_V2_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CleanableAnimalComponent_V2_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_CleanableAnimalComponent_V2_C_ReceiveTick");
static_assert(sizeof(BP_CleanableAnimalComponent_V2_C_ReceiveTick) == 0x000004, "Wrong size on BP_CleanableAnimalComponent_V2_C_ReceiveTick");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_CleanableAnimalComponent_V2_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_CleanableAnimalComponent_V2.BP_CleanableAnimalComponent_V2_C.ExecuteUbergraph_BP_CleanableAnimalComponent_V2
// 0x0010 (0x0010 - 0x0000)
struct BP_CleanableAnimalComponent_V2_C_ExecuteUbergraph_BP_CleanableAnimalComponent_V2 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BP_EventTick_deltaSeconds_ImplicitCast;   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CleanableAnimalComponent_V2_C_ExecuteUbergraph_BP_CleanableAnimalComponent_V2) == 0x000008, "Wrong alignment on BP_CleanableAnimalComponent_V2_C_ExecuteUbergraph_BP_CleanableAnimalComponent_V2");
static_assert(sizeof(BP_CleanableAnimalComponent_V2_C_ExecuteUbergraph_BP_CleanableAnimalComponent_V2) == 0x000010, "Wrong size on BP_CleanableAnimalComponent_V2_C_ExecuteUbergraph_BP_CleanableAnimalComponent_V2");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_ExecuteUbergraph_BP_CleanableAnimalComponent_V2, EntryPoint) == 0x000000, "Member 'BP_CleanableAnimalComponent_V2_C_ExecuteUbergraph_BP_CleanableAnimalComponent_V2::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_ExecuteUbergraph_BP_CleanableAnimalComponent_V2, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_CleanableAnimalComponent_V2_C_ExecuteUbergraph_BP_CleanableAnimalComponent_V2::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_ExecuteUbergraph_BP_CleanableAnimalComponent_V2, CallFunc_BP_EventTick_deltaSeconds_ImplicitCast) == 0x000008, "Member 'BP_CleanableAnimalComponent_V2_C_ExecuteUbergraph_BP_CleanableAnimalComponent_V2::CallFunc_BP_EventTick_deltaSeconds_ImplicitCast' has a wrong offset!");

// Function BP_CleanableAnimalComponent_V2.BP_CleanableAnimalComponent_V2_C.BP_SetJewelryVisible
// 0x0001 (0x0001 - 0x0000)
struct BP_CleanableAnimalComponent_V2_C_BP_SetJewelryVisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CleanableAnimalComponent_V2_C_BP_SetJewelryVisible) == 0x000001, "Wrong alignment on BP_CleanableAnimalComponent_V2_C_BP_SetJewelryVisible");
static_assert(sizeof(BP_CleanableAnimalComponent_V2_C_BP_SetJewelryVisible) == 0x000001, "Wrong size on BP_CleanableAnimalComponent_V2_C_BP_SetJewelryVisible");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_SetJewelryVisible, Visible) == 0x000000, "Member 'BP_CleanableAnimalComponent_V2_C_BP_SetJewelryVisible::Visible' has a wrong offset!");

// Function BP_CleanableAnimalComponent_V2.BP_CleanableAnimalComponent_V2_C.BP_SetCleanEFXAlpha
// 0x0010 (0x0010 - 0x0000)
struct BP_CleanableAnimalComponent_V2_C_BP_SetCleanEFXAlpha final
{
public:
	bool                                          isNeedHide;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DeltaTime;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CleanableAnimalComponent_V2_C_BP_SetCleanEFXAlpha) == 0x000008, "Wrong alignment on BP_CleanableAnimalComponent_V2_C_BP_SetCleanEFXAlpha");
static_assert(sizeof(BP_CleanableAnimalComponent_V2_C_BP_SetCleanEFXAlpha) == 0x000010, "Wrong size on BP_CleanableAnimalComponent_V2_C_BP_SetCleanEFXAlpha");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_SetCleanEFXAlpha, isNeedHide) == 0x000000, "Member 'BP_CleanableAnimalComponent_V2_C_BP_SetCleanEFXAlpha::isNeedHide' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_SetCleanEFXAlpha, DeltaTime) == 0x000008, "Member 'BP_CleanableAnimalComponent_V2_C_BP_SetCleanEFXAlpha::DeltaTime' has a wrong offset!");

// Function BP_CleanableAnimalComponent_V2.BP_CleanableAnimalComponent_V2_C.BP_ServerSyncFakePosition
// 0x0018 (0x0018 - 0x0000)
struct BP_CleanableAnimalComponent_V2_C_BP_ServerSyncFakePosition final
{
public:
	struct FVector                                FakePosition;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CleanableAnimalComponent_V2_C_BP_ServerSyncFakePosition) == 0x000008, "Wrong alignment on BP_CleanableAnimalComponent_V2_C_BP_ServerSyncFakePosition");
static_assert(sizeof(BP_CleanableAnimalComponent_V2_C_BP_ServerSyncFakePosition) == 0x000018, "Wrong size on BP_CleanableAnimalComponent_V2_C_BP_ServerSyncFakePosition");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_ServerSyncFakePosition, FakePosition) == 0x000000, "Member 'BP_CleanableAnimalComponent_V2_C_BP_ServerSyncFakePosition::FakePosition' has a wrong offset!");

// Function BP_CleanableAnimalComponent_V2.BP_CleanableAnimalComponent_V2_C.BP_GetSlotRotation
// 0x0170 (0x0170 - 0x0000)
struct BP_CleanableAnimalComponent_V2_C_BP_GetSlotRotation final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                rotateForwardVector;                               // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0030(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x0090(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_TransformRotation_ReturnValue;            // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CleanableAnimalComponent_V2_C_BP_GetSlotRotation) == 0x000010, "Wrong alignment on BP_CleanableAnimalComponent_V2_C_BP_GetSlotRotation");
static_assert(sizeof(BP_CleanableAnimalComponent_V2_C_BP_GetSlotRotation) == 0x000170, "Wrong size on BP_CleanableAnimalComponent_V2_C_BP_GetSlotRotation");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetSlotRotation, SlotIndex) == 0x000000, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetSlotRotation::SlotIndex' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetSlotRotation, rotateForwardVector) == 0x000008, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetSlotRotation::rotateForwardVector' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetSlotRotation, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetSlotRotation::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetSlotRotation, CallFunc_GetTransform_ReturnValue) == 0x000030, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetSlotRotation::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetSlotRotation, CallFunc_Array_Get_Item) == 0x000090, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetSlotRotation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetSlotRotation, CallFunc_BreakTransform_Location) == 0x0000F0, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetSlotRotation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetSlotRotation, CallFunc_BreakTransform_Rotation) == 0x000108, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetSlotRotation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetSlotRotation, CallFunc_BreakTransform_Scale) == 0x000120, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetSlotRotation::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetSlotRotation, CallFunc_TransformRotation_ReturnValue) == 0x000138, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetSlotRotation::CallFunc_TransformRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetSlotRotation, CallFunc_GetForwardVector_ReturnValue) == 0x000150, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetSlotRotation::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");

// Function BP_CleanableAnimalComponent_V2.BP_CleanableAnimalComponent_V2_C.BP_GetSlotLS
// 0x0028 (0x0028 - 0x0000)
struct BP_CleanableAnimalComponent_V2_C_BP_GetSlotLS final
{
public:
	int32                                         NewParam;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 NewParam1;                                         // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CleanableAnimalComponent_V2_C_BP_GetSlotLS) == 0x000008, "Wrong alignment on BP_CleanableAnimalComponent_V2_C_BP_GetSlotLS");
static_assert(sizeof(BP_CleanableAnimalComponent_V2_C_BP_GetSlotLS) == 0x000028, "Wrong size on BP_CleanableAnimalComponent_V2_C_BP_GetSlotLS");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetSlotLS, NewParam) == 0x000000, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetSlotLS::NewParam' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetSlotLS, NewParam1) == 0x000008, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetSlotLS::NewParam1' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetSlotLS, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetSlotLS::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_CleanableAnimalComponent_V2.BP_CleanableAnimalComponent_V2_C.BP_GetSlotLocation
// 0x0150 (0x0150 - 0x0000)
struct BP_CleanableAnimalComponent_V2_C_BP_GetSlotLocation final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                slotLocation;                                      // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0030(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x0090(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CleanableAnimalComponent_V2_C_BP_GetSlotLocation) == 0x000010, "Wrong alignment on BP_CleanableAnimalComponent_V2_C_BP_GetSlotLocation");
static_assert(sizeof(BP_CleanableAnimalComponent_V2_C_BP_GetSlotLocation) == 0x000150, "Wrong size on BP_CleanableAnimalComponent_V2_C_BP_GetSlotLocation");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetSlotLocation, SlotIndex) == 0x000000, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetSlotLocation::SlotIndex' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetSlotLocation, slotLocation) == 0x000008, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetSlotLocation::slotLocation' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetSlotLocation, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetSlotLocation::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetSlotLocation, CallFunc_GetTransform_ReturnValue) == 0x000030, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetSlotLocation::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetSlotLocation, CallFunc_Array_Get_Item) == 0x000090, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetSlotLocation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetSlotLocation, CallFunc_BreakTransform_Location) == 0x0000F0, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetSlotLocation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetSlotLocation, CallFunc_BreakTransform_Rotation) == 0x000108, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetSlotLocation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetSlotLocation, CallFunc_BreakTransform_Scale) == 0x000120, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetSlotLocation::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetSlotLocation, CallFunc_TransformLocation_ReturnValue) == 0x000138, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetSlotLocation::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");

// Function BP_CleanableAnimalComponent_V2.BP_CleanableAnimalComponent_V2_C.BP_GetNearestSlotIndex
// 0x0240 (0x0240 - 0x0000)
struct BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex final
{
public:
	int32                                         nearestSlotIndex;                                  // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         nearSlotIndex;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NikkiLocation;                                     // 0x0008(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinDistance;                                       // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AX6NikkiPlayerController*               nikkiPC;                                           // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetLocalPlayerPawn_LocalPlayerPawn;       // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0050(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0100(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x0160(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex) == 0x000010, "Wrong alignment on BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex");
static_assert(sizeof(BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex) == 0x000240, "Wrong size on BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex, nearestSlotIndex) == 0x000000, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex::nearestSlotIndex' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex, nearSlotIndex) == 0x000004, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex::nearSlotIndex' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex, NikkiLocation) == 0x000008, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex::NikkiLocation' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex, MinDistance) == 0x000020, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex::MinDistance' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex, nikkiPC) == 0x000028, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex::nikkiPC' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex, CallFunc_GetLocalPlayerPawn_LocalPlayerPawn) == 0x000040, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex::CallFunc_GetLocalPlayerPawn_LocalPlayerPawn' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex, CallFunc_GetTransform_ReturnValue) == 0x000050, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex, CallFunc_GetOwner_ReturnValue) == 0x0000B0, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex, CallFunc_BreakTransform_Location) == 0x0000B8, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex, CallFunc_BreakTransform_Rotation) == 0x0000D0, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex, CallFunc_BreakTransform_Scale) == 0x0000E8, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex, CallFunc_GetTransform_ReturnValue_1) == 0x000100, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex, CallFunc_Array_Get_Item) == 0x000160, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex, CallFunc_Array_Length_ReturnValue) == 0x0001C0, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex, CallFunc_BreakTransform_Location_1) == 0x0001C8, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex, CallFunc_BreakTransform_Rotation_1) == 0x0001E0, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex, CallFunc_BreakTransform_Scale_1) == 0x0001F8, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex, CallFunc_Less_IntInt_ReturnValue) == 0x000210, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex, CallFunc_TransformLocation_ReturnValue) == 0x000218, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex, CallFunc_Vector_Distance_ReturnValue) == 0x000230, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000238, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetNearestSlotIndex::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_CleanableAnimalComponent_V2.BP_CleanableAnimalComponent_V2_C.BP_GetIsClean
// 0x0020 (0x0020 - 0x0000)
struct BP_CleanableAnimalComponent_V2_C_BP_GetIsClean final
{
public:
	bool                                          bClean;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                NikkiLocation;                                     // 0x0008(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CleanableAnimalComponent_V2_C_BP_GetIsClean) == 0x000008, "Wrong alignment on BP_CleanableAnimalComponent_V2_C_BP_GetIsClean");
static_assert(sizeof(BP_CleanableAnimalComponent_V2_C_BP_GetIsClean) == 0x000020, "Wrong size on BP_CleanableAnimalComponent_V2_C_BP_GetIsClean");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetIsClean, bClean) == 0x000000, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetIsClean::bClean' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetIsClean, NikkiLocation) == 0x000008, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetIsClean::NikkiLocation' has a wrong offset!");

// Function BP_CleanableAnimalComponent_V2.BP_CleanableAnimalComponent_V2_C.BP_GetAnimalConfigId
// 0x0004 (0x0004 - 0x0000)
struct BP_CleanableAnimalComponent_V2_C_BP_GetAnimalConfigId final
{
public:
	int32                                         animalCfgId;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CleanableAnimalComponent_V2_C_BP_GetAnimalConfigId) == 0x000004, "Wrong alignment on BP_CleanableAnimalComponent_V2_C_BP_GetAnimalConfigId");
static_assert(sizeof(BP_CleanableAnimalComponent_V2_C_BP_GetAnimalConfigId) == 0x000004, "Wrong size on BP_CleanableAnimalComponent_V2_C_BP_GetAnimalConfigId");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_GetAnimalConfigId, animalCfgId) == 0x000000, "Member 'BP_CleanableAnimalComponent_V2_C_BP_GetAnimalConfigId::animalCfgId' has a wrong offset!");

// Function BP_CleanableAnimalComponent_V2.BP_CleanableAnimalComponent_V2_C.BP_EventTick
// 0x0008 (0x0008 - 0x0000)
struct BP_CleanableAnimalComponent_V2_C_BP_EventTick final
{
public:
	double                                        DeltaSeconds;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CleanableAnimalComponent_V2_C_BP_EventTick) == 0x000008, "Wrong alignment on BP_CleanableAnimalComponent_V2_C_BP_EventTick");
static_assert(sizeof(BP_CleanableAnimalComponent_V2_C_BP_EventTick) == 0x000008, "Wrong size on BP_CleanableAnimalComponent_V2_C_BP_EventTick");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_EventTick, DeltaSeconds) == 0x000000, "Member 'BP_CleanableAnimalComponent_V2_C_BP_EventTick::DeltaSeconds' has a wrong offset!");

// Function BP_CleanableAnimalComponent_V2.BP_CleanableAnimalComponent_V2_C.BP_CheckInCleanRange
// 0x01A0 (0x01A0 - 0x0000)
struct BP_CleanableAnimalComponent_V2_C_BP_CheckInCleanRange final
{
public:
	bool                                          bInRange;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                NikkiLocation;                                     // 0x0008(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetLocalPlayerPawn_LocalPlayerPawn;       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0030(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x00E0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CleanableAnimalComponent_V2_C_BP_CheckInCleanRange) == 0x000010, "Wrong alignment on BP_CleanableAnimalComponent_V2_C_BP_CheckInCleanRange");
static_assert(sizeof(BP_CleanableAnimalComponent_V2_C_BP_CheckInCleanRange) == 0x0001A0, "Wrong size on BP_CleanableAnimalComponent_V2_C_BP_CheckInCleanRange");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_CheckInCleanRange, bInRange) == 0x000000, "Member 'BP_CleanableAnimalComponent_V2_C_BP_CheckInCleanRange::bInRange' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_CheckInCleanRange, NikkiLocation) == 0x000008, "Member 'BP_CleanableAnimalComponent_V2_C_BP_CheckInCleanRange::NikkiLocation' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_CheckInCleanRange, CallFunc_GetLocalPlayerPawn_LocalPlayerPawn) == 0x000020, "Member 'BP_CleanableAnimalComponent_V2_C_BP_CheckInCleanRange::CallFunc_GetLocalPlayerPawn_LocalPlayerPawn' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_CheckInCleanRange, CallFunc_GetTransform_ReturnValue) == 0x000030, "Member 'BP_CleanableAnimalComponent_V2_C_BP_CheckInCleanRange::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_CheckInCleanRange, CallFunc_BreakTransform_Location) == 0x000090, "Member 'BP_CleanableAnimalComponent_V2_C_BP_CheckInCleanRange::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_CheckInCleanRange, CallFunc_BreakTransform_Rotation) == 0x0000A8, "Member 'BP_CleanableAnimalComponent_V2_C_BP_CheckInCleanRange::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_CheckInCleanRange, CallFunc_BreakTransform_Scale) == 0x0000C0, "Member 'BP_CleanableAnimalComponent_V2_C_BP_CheckInCleanRange::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_CheckInCleanRange, CallFunc_GetOwner_ReturnValue) == 0x0000D8, "Member 'BP_CleanableAnimalComponent_V2_C_BP_CheckInCleanRange::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_CheckInCleanRange, CallFunc_GetTransform_ReturnValue_1) == 0x0000E0, "Member 'BP_CleanableAnimalComponent_V2_C_BP_CheckInCleanRange::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_CheckInCleanRange, CallFunc_BreakTransform_Location_1) == 0x000140, "Member 'BP_CleanableAnimalComponent_V2_C_BP_CheckInCleanRange::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_CheckInCleanRange, CallFunc_BreakTransform_Rotation_1) == 0x000158, "Member 'BP_CleanableAnimalComponent_V2_C_BP_CheckInCleanRange::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_CheckInCleanRange, CallFunc_BreakTransform_Scale_1) == 0x000170, "Member 'BP_CleanableAnimalComponent_V2_C_BP_CheckInCleanRange::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_CheckInCleanRange, CallFunc_Vector_Distance_ReturnValue) == 0x000188, "Member 'BP_CleanableAnimalComponent_V2_C_BP_CheckInCleanRange::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_BP_CheckInCleanRange, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000190, "Member 'BP_CleanableAnimalComponent_V2_C_BP_CheckInCleanRange::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_CleanableAnimalComponent_V2.BP_CleanableAnimalComponent_V2_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct BP_CleanableAnimalComponent_V2_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_CleanableAnimalComponent_V2_C_GetModuleName) == 0x000008, "Wrong alignment on BP_CleanableAnimalComponent_V2_C_GetModuleName");
static_assert(sizeof(BP_CleanableAnimalComponent_V2_C_GetModuleName) == 0x000010, "Wrong size on BP_CleanableAnimalComponent_V2_C_GetModuleName");
static_assert(offsetof(BP_CleanableAnimalComponent_V2_C_GetModuleName, ReturnValue) == 0x000000, "Member 'BP_CleanableAnimalComponent_V2_C_GetModuleName::ReturnValue' has a wrong offset!");

}

