#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_S0048D

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "EMantleType_structs.hpp"
#include "X6Game_structs.hpp"
#include "NikkiPhysics_structs.hpp"


namespace SDK::Params
{

// Function ABP_S0048D.ABP_S0048D_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_S0048D_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_S0048D_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_S0048D_C_AnimGraph");
static_assert(sizeof(ABP_S0048D_C_AnimGraph) == 0x000010, "Wrong size on ABP_S0048D_C_AnimGraph");
static_assert(offsetof(ABP_S0048D_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'ABP_S0048D_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function ABP_S0048D.ABP_S0048D_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_S0048D_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_S0048D_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_S0048D_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_S0048D_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_S0048D_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_S0048D_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_S0048D_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_S0048D.ABP_S0048D_C.CustomEvent
// 0x0002 (0x0002 - 0x0000)
struct ABP_S0048D_C_CustomEvent final
{
public:
	ERegularFloatingJumpStage                     NewStage;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERegularFloatingJumpStage                     OldStage;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_S0048D_C_CustomEvent) == 0x000001, "Wrong alignment on ABP_S0048D_C_CustomEvent");
static_assert(sizeof(ABP_S0048D_C_CustomEvent) == 0x000002, "Wrong size on ABP_S0048D_C_CustomEvent");
static_assert(offsetof(ABP_S0048D_C_CustomEvent, NewStage) == 0x000000, "Member 'ABP_S0048D_C_CustomEvent::NewStage' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_CustomEvent, OldStage) == 0x000001, "Member 'ABP_S0048D_C_CustomEvent::OldStage' has a wrong offset!");

// Function ABP_S0048D.ABP_S0048D_C.DetermineMantleSequence
// 0x0002 (0x0002 - 0x0000)
struct ABP_S0048D_C_DetermineMantleSequence final
{
public:
	EMantleType                                   CallFunc_BP_GetCurrentMantleType_MantleType;       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_S0048D_C_DetermineMantleSequence) == 0x000001, "Wrong alignment on ABP_S0048D_C_DetermineMantleSequence");
static_assert(sizeof(ABP_S0048D_C_DetermineMantleSequence) == 0x000002, "Wrong size on ABP_S0048D_C_DetermineMantleSequence");
static_assert(offsetof(ABP_S0048D_C_DetermineMantleSequence, CallFunc_BP_GetCurrentMantleType_MantleType) == 0x000000, "Member 'ABP_S0048D_C_DetermineMantleSequence::CallFunc_BP_GetCurrentMantleType_MantleType' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_DetermineMantleSequence, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'ABP_S0048D_C_DetermineMantleSequence::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ABP_S0048D.ABP_S0048D_C.ExecuteUbergraph_ABP_S0048D
// 0x00E0 (0x00E0 - 0x0000)
struct ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode)> K2Node_CreateDelegate_OutputDelegate; // 0x0038(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(ERegularFloatingJumpStage NewStage, ERegularFloatingJumpStage OldStage)> K2Node_CreateDelegate_OutputDelegate_1; // 0x004C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x005F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENikki_HeightFieldMethod                      K2Node_Select_Default;                             // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERegularFloatingJumpStage                     K2Node_CustomEvent_NewStage;                       // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERegularFloatingJumpStage                     K2Node_CustomEvent_OldStage;                       // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E[0x2];                                       // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_UpdateBlendAlphaWithPhysics_Output_Get;   // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Prepare_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Prepare_ReturnValue_1;                    // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_3;          // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_CustomEvent_Character;                      // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 K2Node_CustomEvent_PrevMovementMode;               // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_CustomEvent_PreviousCustomMode;             // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B[0x5];                                       // 0x009B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x2];                                       // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_1;                           // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_B_ImplicitCast;               // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_NikkiPhysicsAlpha_ImplicitCast; // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_1;    // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D) == 0x000008, "Wrong alignment on ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D");
static_assert(sizeof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D) == 0x0000E0, "Wrong size on ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, EntryPoint) == 0x000000, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000004, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, CallFunc_SelectFloat_ReturnValue_1) == 0x000018, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000020, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, CallFunc_BooleanAND_ReturnValue_1) == 0x000021, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000022, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000023, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, CallFunc_Not_PreBool_ReturnValue_1) == 0x000024, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, CallFunc_BooleanOR_ReturnValue) == 0x000025, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000026, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000027, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, CallFunc_BooleanAND_ReturnValue_2) == 0x000028, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x000029, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, Temp_real_Variable) == 0x00002C, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, Temp_real_Variable_1) == 0x000030, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, Temp_bool_Variable) == 0x000034, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, K2Node_CreateDelegate_OutputDelegate) == 0x000038, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000048, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, K2Node_CreateDelegate_OutputDelegate_1) == 0x00004C, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, CallFunc_Not_PreBool_ReturnValue_2) == 0x00005C, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, CallFunc_BooleanAND_ReturnValue_3) == 0x00005D, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, Temp_bool_Variable_1) == 0x00005E, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00005F, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, CallFunc_BooleanOR_ReturnValue_1) == 0x000060, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000061, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, CallFunc_MakeLiteralByte_ReturnValue) == 0x000062, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000063, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, K2Node_Select_Default) == 0x000064, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, K2Node_Event_DeltaTimeX) == 0x000068, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, K2Node_CustomEvent_NewStage) == 0x00006C, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::K2Node_CustomEvent_NewStage' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, K2Node_CustomEvent_OldStage) == 0x00006D, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::K2Node_CustomEvent_OldStage' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, CallFunc_UpdateBlendAlphaWithPhysics_Output_Get) == 0x000070, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::CallFunc_UpdateBlendAlphaWithPhysics_Output_Get' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, CallFunc_Prepare_ReturnValue) == 0x000078, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::CallFunc_Prepare_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, CallFunc_Prepare_ReturnValue_1) == 0x000079, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::CallFunc_Prepare_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000080, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, CallFunc_NotEqual_ByteByte_ReturnValue_3) == 0x000088, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::CallFunc_NotEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, K2Node_CustomEvent_Character) == 0x000090, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, K2Node_CustomEvent_PrevMovementMode) == 0x000098, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::K2Node_CustomEvent_PrevMovementMode' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, K2Node_CustomEvent_PreviousCustomMode) == 0x000099, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::K2Node_CustomEvent_PreviousCustomMode' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, CallFunc_IsValid_ReturnValue) == 0x00009A, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, CallFunc_GetOwner_ReturnValue) == 0x0000A0, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, K2Node_DynamicCast_AsCharacter) == 0x0000A8, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0000B1, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, K2Node_Select_Default_1) == 0x0000B4, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, CallFunc_SelectFloat_B_ImplicitCast) == 0x0000B8, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::CallFunc_SelectFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0000C0, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, K2Node_VariableSet_NikkiPhysicsAlpha_ImplicitCast) == 0x0000C8, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::K2Node_VariableSet_NikkiPhysicsAlpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x0000D0, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D, CallFunc_Greater_DoubleDouble_A_ImplicitCast_1) == 0x0000D8, "Member 'ABP_S0048D_C_ExecuteUbergraph_ABP_S0048D::CallFunc_Greater_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

// Function ABP_S0048D.ABP_S0048D_C.FloatingAnimationDetermine
// 0x0028 (0x0028 - 0x0000)
struct ABP_S0048D_C_FloatingAnimationDetermine final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Locomotion_FallState_C> CallFunc_BPI_Get_CurrentInAirStates_self_CastInput; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERegularFloatingJumpStage                     CallFunc_BPI_Get_CurrentInAirStates_FallStage;     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_CurrentInAirStates_IsInSpecialJumpAnim; // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERegularJumpMode                              CallFunc_BPI_Get_CurrentInAirStates_RegularJumpMode; // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_CurrentInAirStates_IsJumpingInAir; // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_S0048D_C_FloatingAnimationDetermine) == 0x000008, "Wrong alignment on ABP_S0048D_C_FloatingAnimationDetermine");
static_assert(sizeof(ABP_S0048D_C_FloatingAnimationDetermine) == 0x000028, "Wrong size on ABP_S0048D_C_FloatingAnimationDetermine");
static_assert(offsetof(ABP_S0048D_C_FloatingAnimationDetermine, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'ABP_S0048D_C_FloatingAnimationDetermine::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_FloatingAnimationDetermine, CallFunc_BPI_Get_CurrentInAirStates_self_CastInput) == 0x000008, "Member 'ABP_S0048D_C_FloatingAnimationDetermine::CallFunc_BPI_Get_CurrentInAirStates_self_CastInput' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_FloatingAnimationDetermine, CallFunc_BPI_Get_CurrentInAirStates_FallStage) == 0x000018, "Member 'ABP_S0048D_C_FloatingAnimationDetermine::CallFunc_BPI_Get_CurrentInAirStates_FallStage' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_FloatingAnimationDetermine, CallFunc_BPI_Get_CurrentInAirStates_IsInSpecialJumpAnim) == 0x000019, "Member 'ABP_S0048D_C_FloatingAnimationDetermine::CallFunc_BPI_Get_CurrentInAirStates_IsInSpecialJumpAnim' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_FloatingAnimationDetermine, CallFunc_BPI_Get_CurrentInAirStates_RegularJumpMode) == 0x00001A, "Member 'ABP_S0048D_C_FloatingAnimationDetermine::CallFunc_BPI_Get_CurrentInAirStates_RegularJumpMode' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_FloatingAnimationDetermine, CallFunc_BPI_Get_CurrentInAirStates_IsJumpingInAir) == 0x00001B, "Member 'ABP_S0048D_C_FloatingAnimationDetermine::CallFunc_BPI_Get_CurrentInAirStates_IsJumpingInAir' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_FloatingAnimationDetermine, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'ABP_S0048D_C_FloatingAnimationDetermine::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_FloatingAnimationDetermine, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00001D, "Member 'ABP_S0048D_C_FloatingAnimationDetermine::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_FloatingAnimationDetermine, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00001E, "Member 'ABP_S0048D_C_FloatingAnimationDetermine::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_FloatingAnimationDetermine, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00001F, "Member 'ABP_S0048D_C_FloatingAnimationDetermine::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_FloatingAnimationDetermine, CallFunc_BooleanAND_ReturnValue) == 0x000020, "Member 'ABP_S0048D_C_FloatingAnimationDetermine::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ABP_S0048D.ABP_S0048D_C.OnMovementModeChanged
// 0x0010 (0x0010 - 0x0000)
struct ABP_S0048D_C_OnMovementModeChanged final
{
public:
	class ACharacter*                             Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 PrevMovementMode;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         PreviousCustomMode;                                // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_S0048D_C_OnMovementModeChanged) == 0x000008, "Wrong alignment on ABP_S0048D_C_OnMovementModeChanged");
static_assert(sizeof(ABP_S0048D_C_OnMovementModeChanged) == 0x000010, "Wrong size on ABP_S0048D_C_OnMovementModeChanged");
static_assert(offsetof(ABP_S0048D_C_OnMovementModeChanged, Character) == 0x000000, "Member 'ABP_S0048D_C_OnMovementModeChanged::Character' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_OnMovementModeChanged, PrevMovementMode) == 0x000008, "Member 'ABP_S0048D_C_OnMovementModeChanged::PrevMovementMode' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_OnMovementModeChanged, PreviousCustomMode) == 0x000009, "Member 'ABP_S0048D_C_OnMovementModeChanged::PreviousCustomMode' has a wrong offset!");

// Function ABP_S0048D.ABP_S0048D_C.Prepare
// 0x0060 (0x0060 - 0x0000)
struct ABP_S0048D_C_Prepare final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerDressUp_C*                    K2Node_DynamicCast_AsBP_Player_Dress_Up;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_1;            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerRegularInAirMovementComp_C*   CallFunc_GetComponentByClass_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerMantleComponent_C*            CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetComponentByClass_ReturnValue_2;        // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInAirMoveableComponent_C*     CallFunc_GetComponentByClass_ReturnValue_3;        // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_S0048D_C_Prepare) == 0x000008, "Wrong alignment on ABP_S0048D_C_Prepare");
static_assert(sizeof(ABP_S0048D_C_Prepare) == 0x000060, "Wrong size on ABP_S0048D_C_Prepare");
static_assert(offsetof(ABP_S0048D_C_Prepare, ReturnValue) == 0x000000, "Member 'ABP_S0048D_C_Prepare::ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_Prepare, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000008, "Member 'ABP_S0048D_C_Prepare::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_Prepare, K2Node_DynamicCast_AsBP_Player_Dress_Up) == 0x000010, "Member 'ABP_S0048D_C_Prepare::K2Node_DynamicCast_AsBP_Player_Dress_Up' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_Prepare, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ABP_S0048D_C_Prepare::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_Prepare, CallFunc_TryGetPawnOwner_ReturnValue_1) == 0x000020, "Member 'ABP_S0048D_C_Prepare::CallFunc_TryGetPawnOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_Prepare, CallFunc_GetComponentByClass_ReturnValue) == 0x000028, "Member 'ABP_S0048D_C_Prepare::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_Prepare, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'ABP_S0048D_C_Prepare::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_Prepare, CallFunc_IsValid_ReturnValue_1) == 0x000031, "Member 'ABP_S0048D_C_Prepare::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_Prepare, CallFunc_IsValid_ReturnValue_2) == 0x000032, "Member 'ABP_S0048D_C_Prepare::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_Prepare, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000038, "Member 'ABP_S0048D_C_Prepare::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_Prepare, CallFunc_GetComponentByClass_ReturnValue_2) == 0x000040, "Member 'ABP_S0048D_C_Prepare::CallFunc_GetComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_Prepare, CallFunc_IsValid_ReturnValue_3) == 0x000048, "Member 'ABP_S0048D_C_Prepare::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_Prepare, CallFunc_IsValid_ReturnValue_4) == 0x000049, "Member 'ABP_S0048D_C_Prepare::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_Prepare, CallFunc_GetComponentByClass_ReturnValue_3) == 0x000050, "Member 'ABP_S0048D_C_Prepare::CallFunc_GetComponentByClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_Prepare, CallFunc_IsValid_ReturnValue_5) == 0x000058, "Member 'ABP_S0048D_C_Prepare::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_Prepare, CallFunc_BooleanAND_ReturnValue) == 0x000059, "Member 'ABP_S0048D_C_Prepare::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_Prepare, CallFunc_BooleanAND_ReturnValue_1) == 0x00005A, "Member 'ABP_S0048D_C_Prepare::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_Prepare, CallFunc_BooleanAND_ReturnValue_2) == 0x00005B, "Member 'ABP_S0048D_C_Prepare::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function ABP_S0048D.ABP_S0048D_C.UpdateBlendAlphaWithPhysics
// 0x0018 (0x0018 - 0x0000)
struct ABP_S0048D_C_UpdateBlendAlphaWithPhysics final
{
public:
	double                                        Output_Get;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_S0048D_C_UpdateBlendAlphaWithPhysics) == 0x000008, "Wrong alignment on ABP_S0048D_C_UpdateBlendAlphaWithPhysics");
static_assert(sizeof(ABP_S0048D_C_UpdateBlendAlphaWithPhysics) == 0x000018, "Wrong size on ABP_S0048D_C_UpdateBlendAlphaWithPhysics");
static_assert(offsetof(ABP_S0048D_C_UpdateBlendAlphaWithPhysics, Output_Get) == 0x000000, "Member 'ABP_S0048D_C_UpdateBlendAlphaWithPhysics::Output_Get' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_UpdateBlendAlphaWithPhysics, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'ABP_S0048D_C_UpdateBlendAlphaWithPhysics::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_UpdateBlendAlphaWithPhysics, CallFunc_FInterpTo_ReturnValue) == 0x000010, "Member 'ABP_S0048D_C_UpdateBlendAlphaWithPhysics::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");

// Function ABP_S0048D.ABP_S0048D_C.UpdateRejump
// 0x0003 (0x0003 - 0x0000)
struct ABP_S0048D_C_UpdateRejump final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_S0048D_C_UpdateRejump) == 0x000001, "Wrong alignment on ABP_S0048D_C_UpdateRejump");
static_assert(sizeof(ABP_S0048D_C_UpdateRejump) == 0x000003, "Wrong size on ABP_S0048D_C_UpdateRejump");
static_assert(offsetof(ABP_S0048D_C_UpdateRejump, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'ABP_S0048D_C_UpdateRejump::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_UpdateRejump, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000001, "Member 'ABP_S0048D_C_UpdateRejump::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_S0048D_C_UpdateRejump, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'ABP_S0048D_C_UpdateRejump::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

