#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RMStateInstructionContext

#include "Basic.hpp"

#include "BP_RMStateInstructionContext_classes.hpp"
#include "BP_RMStateInstructionContext_parameters.hpp"


namespace SDK
{

// Function BP_RMStateInstructionContext.BP_RMStateInstructionContext_C.BP_RemoveState
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   StateID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_RMStateInstructionContext_C::BP_RemoveState(int32 StateID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RMStateInstructionContext_C", "BP_RemoveState");

	Params::BP_RMStateInstructionContext_C_BP_RemoveState Parms{};

	Parms.StateID = StateID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RMStateInstructionContext.BP_RMStateInstructionContext_C.BP_DoAction
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ActionId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_RMStateInstructionContext_C::BP_DoAction(int32 ActionId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RMStateInstructionContext_C", "BP_DoAction");

	Params::BP_RMStateInstructionContext_C_BP_DoAction Parms{};

	Parms.ActionId = ActionId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RMStateInstructionContext.BP_RMStateInstructionContext_C.BP_AddState
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   StateID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_RMStateInstructionContext_C::BP_AddState(int32 StateID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RMStateInstructionContext_C", "BP_AddState");

	Params::BP_RMStateInstructionContext_C_BP_AddState Parms{};

	Parms.StateID = StateID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RMStateInstructionContext.BP_RMStateInstructionContext_C.BlueprintInit
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OwnerActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_RMStateInstructionContext_C::BlueprintInit(class AActor* OwnerActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RMStateInstructionContext_C", "BlueprintInit");

	Params::BP_RMStateInstructionContext_C_BlueprintInit Parms{};

	Parms.OwnerActor = OwnerActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RMStateInstructionContext.BP_RMStateInstructionContext_C.BlueprintDeinit
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_RMStateInstructionContext_C::BlueprintDeinit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RMStateInstructionContext_C", "BlueprintDeinit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RMStateInstructionContext.BP_RMStateInstructionContext_C.GetModuleName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UBP_RMStateInstructionContext_C::GetModuleName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RMStateInstructionContext_C", "GetModuleName");

	Params::BP_RMStateInstructionContext_C_GetModuleName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

