#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FluxDataComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Niagara_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_FluxDataComponent.BP_FluxDataComponent_C.Activation
// 0x0010 (0x0010 - 0x0000)
struct BP_FluxDataComponent_C_Activation final
{
public:
	class UActorComponent*                        Component;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bReset;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxDataComponent_C_Activation) == 0x000008, "Wrong alignment on BP_FluxDataComponent_C_Activation");
static_assert(sizeof(BP_FluxDataComponent_C_Activation) == 0x000010, "Wrong size on BP_FluxDataComponent_C_Activation");
static_assert(offsetof(BP_FluxDataComponent_C_Activation, Component) == 0x000000, "Member 'BP_FluxDataComponent_C_Activation::Component' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_Activation, bReset) == 0x000008, "Member 'BP_FluxDataComponent_C_Activation::bReset' has a wrong offset!");

// Function BP_FluxDataComponent.BP_FluxDataComponent_C.ApplyNiagaraParameters
// 0x0028 (0x0028 - 0x0000)
struct BP_FluxDataComponent_C_ApplyNiagaraParameters final
{
public:
	TScriptInterface<class IBPI_FluxSurface_C>    K2Node_DynamicCast_AsBPI_Flux_Surface;             // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxDataComponent_C_ApplyNiagaraParameters) == 0x000008, "Wrong alignment on BP_FluxDataComponent_C_ApplyNiagaraParameters");
static_assert(sizeof(BP_FluxDataComponent_C_ApplyNiagaraParameters) == 0x000028, "Wrong size on BP_FluxDataComponent_C_ApplyNiagaraParameters");
static_assert(offsetof(BP_FluxDataComponent_C_ApplyNiagaraParameters, K2Node_DynamicCast_AsBPI_Flux_Surface) == 0x000000, "Member 'BP_FluxDataComponent_C_ApplyNiagaraParameters::K2Node_DynamicCast_AsBPI_Flux_Surface' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_ApplyNiagaraParameters, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_FluxDataComponent_C_ApplyNiagaraParameters::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_ApplyNiagaraParameters, CallFunc_FMax_ReturnValue) == 0x000018, "Member 'BP_FluxDataComponent_C_ApplyNiagaraParameters::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_ApplyNiagaraParameters, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000020, "Member 'BP_FluxDataComponent_C_ApplyNiagaraParameters::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");

// Function BP_FluxDataComponent.BP_FluxDataComponent_C.Deactivation
// 0x0008 (0x0008 - 0x0000)
struct BP_FluxDataComponent_C_Deactivation final
{
public:
	class UActorComponent*                        Component;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxDataComponent_C_Deactivation) == 0x000008, "Wrong alignment on BP_FluxDataComponent_C_Deactivation");
static_assert(sizeof(BP_FluxDataComponent_C_Deactivation) == 0x000008, "Wrong size on BP_FluxDataComponent_C_Deactivation");
static_assert(offsetof(BP_FluxDataComponent_C_Deactivation, Component) == 0x000000, "Member 'BP_FluxDataComponent_C_Deactivation::Component' has a wrong offset!");

// Function BP_FluxDataComponent.BP_FluxDataComponent_C.ExecuteUbergraph_BP_FluxDataComponent
// 0x00A0 (0x00A0 - 0x0000)
struct BP_FluxDataComponent_C_ExecuteUbergraph_BP_FluxDataComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetWorldSurface_Output;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UActorComponent* Component)> K2Node_CreateDelegate_OutputDelegate;          // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FBasicParticleData>             K2Node_Event_Data;                                 // 0x0020(0x0010)(ConstParm, ReferenceParm)
	class UNiagaraSystem*                         K2Node_Event_NiagaraSystem;                        // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_SimulationPositionOffset;             // 0x0038(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        K2Node_CustomEvent_Component_1;                    // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bReset;                         // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        K2Node_CustomEvent_Component;                      // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FBasicParticleData>             K2Node_CustomEvent_data;                           // 0x0070(0x0010)(ConstParm, ReferenceParm)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ENetRole                                      CallFunc_GetLocalRole_ReturnValue;                 // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UActorComponent* Component, bool bReset)> K2Node_CreateDelegate_OutputDelegate_1; // 0x008C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxDataComponent_C_ExecuteUbergraph_BP_FluxDataComponent) == 0x000008, "Wrong alignment on BP_FluxDataComponent_C_ExecuteUbergraph_BP_FluxDataComponent");
static_assert(sizeof(BP_FluxDataComponent_C_ExecuteUbergraph_BP_FluxDataComponent) == 0x0000A0, "Wrong size on BP_FluxDataComponent_C_ExecuteUbergraph_BP_FluxDataComponent");
static_assert(offsetof(BP_FluxDataComponent_C_ExecuteUbergraph_BP_FluxDataComponent, EntryPoint) == 0x000000, "Member 'BP_FluxDataComponent_C_ExecuteUbergraph_BP_FluxDataComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_ExecuteUbergraph_BP_FluxDataComponent, CallFunc_GetWorldSurface_Output) == 0x000008, "Member 'BP_FluxDataComponent_C_ExecuteUbergraph_BP_FluxDataComponent::CallFunc_GetWorldSurface_Output' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_ExecuteUbergraph_BP_FluxDataComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_FluxDataComponent_C_ExecuteUbergraph_BP_FluxDataComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_ExecuteUbergraph_BP_FluxDataComponent, K2Node_Event_Data) == 0x000020, "Member 'BP_FluxDataComponent_C_ExecuteUbergraph_BP_FluxDataComponent::K2Node_Event_Data' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_ExecuteUbergraph_BP_FluxDataComponent, K2Node_Event_NiagaraSystem) == 0x000030, "Member 'BP_FluxDataComponent_C_ExecuteUbergraph_BP_FluxDataComponent::K2Node_Event_NiagaraSystem' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_ExecuteUbergraph_BP_FluxDataComponent, K2Node_Event_SimulationPositionOffset) == 0x000038, "Member 'BP_FluxDataComponent_C_ExecuteUbergraph_BP_FluxDataComponent::K2Node_Event_SimulationPositionOffset' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_ExecuteUbergraph_BP_FluxDataComponent, K2Node_Event_EndPlayReason) == 0x000050, "Member 'BP_FluxDataComponent_C_ExecuteUbergraph_BP_FluxDataComponent::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_ExecuteUbergraph_BP_FluxDataComponent, K2Node_CustomEvent_Component_1) == 0x000058, "Member 'BP_FluxDataComponent_C_ExecuteUbergraph_BP_FluxDataComponent::K2Node_CustomEvent_Component_1' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_ExecuteUbergraph_BP_FluxDataComponent, K2Node_CustomEvent_bReset) == 0x000060, "Member 'BP_FluxDataComponent_C_ExecuteUbergraph_BP_FluxDataComponent::K2Node_CustomEvent_bReset' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_ExecuteUbergraph_BP_FluxDataComponent, K2Node_CustomEvent_Component) == 0x000068, "Member 'BP_FluxDataComponent_C_ExecuteUbergraph_BP_FluxDataComponent::K2Node_CustomEvent_Component' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_ExecuteUbergraph_BP_FluxDataComponent, K2Node_CustomEvent_data) == 0x000070, "Member 'BP_FluxDataComponent_C_ExecuteUbergraph_BP_FluxDataComponent::K2Node_CustomEvent_data' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_ExecuteUbergraph_BP_FluxDataComponent, CallFunc_GetOwner_ReturnValue) == 0x000080, "Member 'BP_FluxDataComponent_C_ExecuteUbergraph_BP_FluxDataComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_ExecuteUbergraph_BP_FluxDataComponent, CallFunc_GetLocalRole_ReturnValue) == 0x000088, "Member 'BP_FluxDataComponent_C_ExecuteUbergraph_BP_FluxDataComponent::CallFunc_GetLocalRole_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_ExecuteUbergraph_BP_FluxDataComponent, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000089, "Member 'BP_FluxDataComponent_C_ExecuteUbergraph_BP_FluxDataComponent::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_ExecuteUbergraph_BP_FluxDataComponent, K2Node_CreateDelegate_OutputDelegate_1) == 0x00008C, "Member 'BP_FluxDataComponent_C_ExecuteUbergraph_BP_FluxDataComponent::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function BP_FluxDataComponent.BP_FluxDataComponent_C.Get Readback Indexed Position
// 0x0080 (0x0080 - 0x0000)
struct BP_FluxDataComponent_C_Get_Readback_Indexed_Position final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Velocity;                                          // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Height;                                            // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_Height_ImplicitCast;         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxDataComponent_C_Get_Readback_Indexed_Position) == 0x000008, "Wrong alignment on BP_FluxDataComponent_C_Get_Readback_Indexed_Position");
static_assert(sizeof(BP_FluxDataComponent_C_Get_Readback_Indexed_Position) == 0x000080, "Wrong size on BP_FluxDataComponent_C_Get_Readback_Indexed_Position");
static_assert(offsetof(BP_FluxDataComponent_C_Get_Readback_Indexed_Position, Index_0) == 0x000000, "Member 'BP_FluxDataComponent_C_Get_Readback_Indexed_Position::Index_0' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_Get_Readback_Indexed_Position, Location) == 0x000008, "Member 'BP_FluxDataComponent_C_Get_Readback_Indexed_Position::Location' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_Get_Readback_Indexed_Position, Velocity) == 0x000020, "Member 'BP_FluxDataComponent_C_Get_Readback_Indexed_Position::Velocity' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_Get_Readback_Indexed_Position, Height) == 0x000038, "Member 'BP_FluxDataComponent_C_Get_Readback_Indexed_Position::Height' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_Get_Readback_Indexed_Position, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_FluxDataComponent_C_Get_Readback_Indexed_Position::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_Get_Readback_Indexed_Position, CallFunc_Greater_IntInt_ReturnValue) == 0x000044, "Member 'BP_FluxDataComponent_C_Get_Readback_Indexed_Position::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_Get_Readback_Indexed_Position, CallFunc_BreakVector_X) == 0x000048, "Member 'BP_FluxDataComponent_C_Get_Readback_Indexed_Position::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_Get_Readback_Indexed_Position, CallFunc_BreakVector_Y) == 0x000050, "Member 'BP_FluxDataComponent_C_Get_Readback_Indexed_Position::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_Get_Readback_Indexed_Position, CallFunc_BreakVector_Z) == 0x000058, "Member 'BP_FluxDataComponent_C_Get_Readback_Indexed_Position::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_Get_Readback_Indexed_Position, CallFunc_MakeVector_ReturnValue) == 0x000060, "Member 'BP_FluxDataComponent_C_Get_Readback_Indexed_Position::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_Get_Readback_Indexed_Position, K2Node_FunctionResult_Height_ImplicitCast) == 0x000078, "Member 'BP_FluxDataComponent_C_Get_Readback_Indexed_Position::K2Node_FunctionResult_Height_ImplicitCast' has a wrong offset!");

// Function BP_FluxDataComponent.BP_FluxDataComponent_C.InitEventListener
// 0x0050 (0x0050 - 0x0000)
struct BP_FluxDataComponent_C_InitEventListener final
{
public:
	class UNiagaraSystem*                         Temp_object_Variable;                              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_GetOwnerComponent_SceneComponent;         // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         K2Node_Select_Default;                             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         K2Node_Select_Default_1;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxDataComponent_C_InitEventListener) == 0x000008, "Wrong alignment on BP_FluxDataComponent_C_InitEventListener");
static_assert(sizeof(BP_FluxDataComponent_C_InitEventListener) == 0x000050, "Wrong size on BP_FluxDataComponent_C_InitEventListener");
static_assert(offsetof(BP_FluxDataComponent_C_InitEventListener, Temp_object_Variable) == 0x000000, "Member 'BP_FluxDataComponent_C_InitEventListener::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_InitEventListener, Temp_bool_Variable) == 0x000008, "Member 'BP_FluxDataComponent_C_InitEventListener::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_InitEventListener, Temp_bool_Variable_1) == 0x000009, "Member 'BP_FluxDataComponent_C_InitEventListener::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_InitEventListener, Temp_object_Variable_1) == 0x000010, "Member 'BP_FluxDataComponent_C_InitEventListener::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_InitEventListener, CallFunc_GetOwnerComponent_SceneComponent) == 0x000018, "Member 'BP_FluxDataComponent_C_InitEventListener::CallFunc_GetOwnerComponent_SceneComponent' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_InitEventListener, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_FluxDataComponent_C_InitEventListener::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_InitEventListener, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000021, "Member 'BP_FluxDataComponent_C_InitEventListener::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_InitEventListener, K2Node_Select_Default) == 0x000028, "Member 'BP_FluxDataComponent_C_InitEventListener::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_InitEventListener, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'BP_FluxDataComponent_C_InitEventListener::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_InitEventListener, K2Node_Select_Default_1) == 0x000038, "Member 'BP_FluxDataComponent_C_InitEventListener::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_InitEventListener, CallFunc_SpawnSystemAttached_ReturnValue) == 0x000040, "Member 'BP_FluxDataComponent_C_InitEventListener::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_InitEventListener, CallFunc_IsValid_ReturnValue_2) == 0x000048, "Member 'BP_FluxDataComponent_C_InitEventListener::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_InitEventListener, CallFunc_IsValid_ReturnValue_3) == 0x000049, "Member 'BP_FluxDataComponent_C_InitEventListener::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function BP_FluxDataComponent.BP_FluxDataComponent_C.ReadParticleData
// 0x0020 (0x0020 - 0x0000)
struct BP_FluxDataComponent_C_ReadParticleData final
{
public:
	TArray<struct FBasicParticleData>             Data;                                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UNiagaraSystem*                         NiagaraSystem;                                     // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxDataComponent_C_ReadParticleData) == 0x000008, "Wrong alignment on BP_FluxDataComponent_C_ReadParticleData");
static_assert(sizeof(BP_FluxDataComponent_C_ReadParticleData) == 0x000020, "Wrong size on BP_FluxDataComponent_C_ReadParticleData");
static_assert(offsetof(BP_FluxDataComponent_C_ReadParticleData, Data) == 0x000000, "Member 'BP_FluxDataComponent_C_ReadParticleData::Data' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_ReadParticleData, NiagaraSystem) == 0x000010, "Member 'BP_FluxDataComponent_C_ReadParticleData::NiagaraSystem' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_ReadParticleData, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_FluxDataComponent_C_ReadParticleData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_ReadParticleData, K2Node_SwitchInteger_CmpSuccess) == 0x00001C, "Member 'BP_FluxDataComponent_C_ReadParticleData::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function BP_FluxDataComponent.BP_FluxDataComponent_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_FluxDataComponent_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxDataComponent_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_FluxDataComponent_C_ReceiveEndPlay");
static_assert(sizeof(BP_FluxDataComponent_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_FluxDataComponent_C_ReceiveEndPlay");
static_assert(offsetof(BP_FluxDataComponent_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_FluxDataComponent_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_FluxDataComponent.BP_FluxDataComponent_C.ReceiveParticleData
// 0x0030 (0x0030 - 0x0000)
struct BP_FluxDataComponent_C_ReceiveParticleData final
{
public:
	TArray<struct FBasicParticleData>             Data;                                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UNiagaraSystem*                         NiagaraSystem;                                     // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SimulationPositionOffset;                          // 0x0018(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxDataComponent_C_ReceiveParticleData) == 0x000008, "Wrong alignment on BP_FluxDataComponent_C_ReceiveParticleData");
static_assert(sizeof(BP_FluxDataComponent_C_ReceiveParticleData) == 0x000030, "Wrong size on BP_FluxDataComponent_C_ReceiveParticleData");
static_assert(offsetof(BP_FluxDataComponent_C_ReceiveParticleData, Data) == 0x000000, "Member 'BP_FluxDataComponent_C_ReceiveParticleData::Data' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_ReceiveParticleData, NiagaraSystem) == 0x000010, "Member 'BP_FluxDataComponent_C_ReceiveParticleData::NiagaraSystem' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_ReceiveParticleData, SimulationPositionOffset) == 0x000018, "Member 'BP_FluxDataComponent_C_ReceiveParticleData::SimulationPositionOffset' has a wrong offset!");

// Function BP_FluxDataComponent.BP_FluxDataComponent_C.ReceiveReadData
// 0x0010 (0x0010 - 0x0000)
struct BP_FluxDataComponent_C_ReceiveReadData final
{
public:
	TArray<struct FBasicParticleData>             Data;                                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_FluxDataComponent_C_ReceiveReadData) == 0x000008, "Wrong alignment on BP_FluxDataComponent_C_ReceiveReadData");
static_assert(sizeof(BP_FluxDataComponent_C_ReceiveReadData) == 0x000010, "Wrong size on BP_FluxDataComponent_C_ReceiveReadData");
static_assert(offsetof(BP_FluxDataComponent_C_ReceiveReadData, Data) == 0x000000, "Member 'BP_FluxDataComponent_C_ReceiveReadData::Data' has a wrong offset!");

// Function BP_FluxDataComponent.BP_FluxDataComponent_C.RemoveEventListener
// 0x0001 (0x0001 - 0x0000)
struct BP_FluxDataComponent_C_RemoveEventListener final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxDataComponent_C_RemoveEventListener) == 0x000001, "Wrong alignment on BP_FluxDataComponent_C_RemoveEventListener");
static_assert(sizeof(BP_FluxDataComponent_C_RemoveEventListener) == 0x000001, "Wrong size on BP_FluxDataComponent_C_RemoveEventListener");
static_assert(offsetof(BP_FluxDataComponent_C_RemoveEventListener, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_FluxDataComponent_C_RemoveEventListener::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_FluxDataComponent.BP_FluxDataComponent_C.SetPointData
// 0x01C8 (0x01C8 - 0x0000)
struct BP_FluxDataComponent_C_SetPointData final
{
public:
	struct FBasicParticleData                     ParticleDataStructure;                             // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	double                                        VeticalVelocity;                                   // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PrevZLocation;                                     // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetTimeSeconds_ReturnValue;               // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetTimeSeconds_ReturnValue_1;             // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_FluxFluidHeight_ImplicitCast;   // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DrawDebugArrow_Duration_ImplicitCast;     // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DrawDebugBox_Duration_ImplicitCast;       // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxDataComponent_C_SetPointData) == 0x000008, "Wrong alignment on BP_FluxDataComponent_C_SetPointData");
static_assert(sizeof(BP_FluxDataComponent_C_SetPointData) == 0x0001C8, "Wrong size on BP_FluxDataComponent_C_SetPointData");
static_assert(offsetof(BP_FluxDataComponent_C_SetPointData, ParticleDataStructure) == 0x000000, "Member 'BP_FluxDataComponent_C_SetPointData::ParticleDataStructure' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetPointData, VeticalVelocity) == 0x000038, "Member 'BP_FluxDataComponent_C_SetPointData::VeticalVelocity' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetPointData, PrevZLocation) == 0x000040, "Member 'BP_FluxDataComponent_C_SetPointData::PrevZLocation' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetPointData, CallFunc_BreakVector_X) == 0x000048, "Member 'BP_FluxDataComponent_C_SetPointData::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetPointData, CallFunc_BreakVector_Y) == 0x000050, "Member 'BP_FluxDataComponent_C_SetPointData::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetPointData, CallFunc_BreakVector_Z) == 0x000058, "Member 'BP_FluxDataComponent_C_SetPointData::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetPointData, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000060, "Member 'BP_FluxDataComponent_C_SetPointData::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetPointData, CallFunc_Abs_ReturnValue) == 0x000068, "Member 'BP_FluxDataComponent_C_SetPointData::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetPointData, CallFunc_MakeVector_ReturnValue) == 0x000070, "Member 'BP_FluxDataComponent_C_SetPointData::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetPointData, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000088, "Member 'BP_FluxDataComponent_C_SetPointData::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetPointData, CallFunc_BooleanOR_ReturnValue) == 0x000089, "Member 'BP_FluxDataComponent_C_SetPointData::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetPointData, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000090, "Member 'BP_FluxDataComponent_C_SetPointData::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetPointData, CallFunc_MakeVector_ReturnValue_1) == 0x000098, "Member 'BP_FluxDataComponent_C_SetPointData::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetPointData, CallFunc_BreakVector_X_1) == 0x0000B0, "Member 'BP_FluxDataComponent_C_SetPointData::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetPointData, CallFunc_BreakVector_Y_1) == 0x0000B8, "Member 'BP_FluxDataComponent_C_SetPointData::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetPointData, CallFunc_BreakVector_Z_1) == 0x0000C0, "Member 'BP_FluxDataComponent_C_SetPointData::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetPointData, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000C8, "Member 'BP_FluxDataComponent_C_SetPointData::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetPointData, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000D0, "Member 'BP_FluxDataComponent_C_SetPointData::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetPointData, CallFunc_GetTimeSeconds_ReturnValue) == 0x0000D8, "Member 'BP_FluxDataComponent_C_SetPointData::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetPointData, CallFunc_MakeVector_ReturnValue_2) == 0x0000E0, "Member 'BP_FluxDataComponent_C_SetPointData::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetPointData, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000F8, "Member 'BP_FluxDataComponent_C_SetPointData::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetPointData, CallFunc_FMax_ReturnValue) == 0x000100, "Member 'BP_FluxDataComponent_C_SetPointData::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetPointData, CallFunc_BreakVector_X_2) == 0x000108, "Member 'BP_FluxDataComponent_C_SetPointData::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetPointData, CallFunc_BreakVector_Y_2) == 0x000110, "Member 'BP_FluxDataComponent_C_SetPointData::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetPointData, CallFunc_BreakVector_Z_2) == 0x000118, "Member 'BP_FluxDataComponent_C_SetPointData::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetPointData, CallFunc_BreakVector_X_3) == 0x000120, "Member 'BP_FluxDataComponent_C_SetPointData::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetPointData, CallFunc_BreakVector_Y_3) == 0x000128, "Member 'BP_FluxDataComponent_C_SetPointData::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetPointData, CallFunc_BreakVector_Z_3) == 0x000130, "Member 'BP_FluxDataComponent_C_SetPointData::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetPointData, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000138, "Member 'BP_FluxDataComponent_C_SetPointData::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetPointData, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000140, "Member 'BP_FluxDataComponent_C_SetPointData::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetPointData, CallFunc_GetTimeSeconds_ReturnValue_1) == 0x000148, "Member 'BP_FluxDataComponent_C_SetPointData::CallFunc_GetTimeSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetPointData, CallFunc_Lerp_ReturnValue) == 0x000150, "Member 'BP_FluxDataComponent_C_SetPointData::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetPointData, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000158, "Member 'BP_FluxDataComponent_C_SetPointData::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetPointData, CallFunc_Add_VectorVector_ReturnValue) == 0x000170, "Member 'BP_FluxDataComponent_C_SetPointData::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetPointData, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000188, "Member 'BP_FluxDataComponent_C_SetPointData::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetPointData, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0001A0, "Member 'BP_FluxDataComponent_C_SetPointData::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetPointData, K2Node_VariableSet_FluxFluidHeight_ImplicitCast) == 0x0001B8, "Member 'BP_FluxDataComponent_C_SetPointData::K2Node_VariableSet_FluxFluidHeight_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetPointData, CallFunc_DrawDebugArrow_Duration_ImplicitCast) == 0x0001C0, "Member 'BP_FluxDataComponent_C_SetPointData::CallFunc_DrawDebugArrow_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetPointData, CallFunc_DrawDebugBox_Duration_ImplicitCast) == 0x0001C4, "Member 'BP_FluxDataComponent_C_SetPointData::CallFunc_DrawDebugBox_Duration_ImplicitCast' has a wrong offset!");

// Function BP_FluxDataComponent.BP_FluxDataComponent_C.SetQuadData
// 0x01C8 (0x01C8 - 0x0000)
struct BP_FluxDataComponent_C_SetQuadData final
{
public:
	TArray<struct FBasicParticleData>             ParticleDataStructure;                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_5;           // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBasicParticleData                     CallFunc_Array_Get_Item;                           // 0x0158(0x0038)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x3];                                      // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast_1;        // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_1;        // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DrawDebugSphere_Duration_ImplicitCast;    // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxDataComponent_C_SetQuadData) == 0x000008, "Wrong alignment on BP_FluxDataComponent_C_SetQuadData");
static_assert(sizeof(BP_FluxDataComponent_C_SetQuadData) == 0x0001C8, "Wrong size on BP_FluxDataComponent_C_SetQuadData");
static_assert(offsetof(BP_FluxDataComponent_C_SetQuadData, ParticleDataStructure) == 0x000000, "Member 'BP_FluxDataComponent_C_SetQuadData::ParticleDataStructure' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetQuadData, CallFunc_Add_VectorVector_ReturnValue) == 0x000010, "Member 'BP_FluxDataComponent_C_SetQuadData::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetQuadData, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_FluxDataComponent_C_SetQuadData::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetQuadData, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000030, "Member 'BP_FluxDataComponent_C_SetQuadData::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetQuadData, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000048, "Member 'BP_FluxDataComponent_C_SetQuadData::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetQuadData, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000060, "Member 'BP_FluxDataComponent_C_SetQuadData::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetQuadData, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000078, "Member 'BP_FluxDataComponent_C_SetQuadData::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetQuadData, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000080, "Member 'BP_FluxDataComponent_C_SetQuadData::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetQuadData, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000098, "Member 'BP_FluxDataComponent_C_SetQuadData::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetQuadData, CallFunc_BreakVector_X) == 0x0000A0, "Member 'BP_FluxDataComponent_C_SetQuadData::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetQuadData, CallFunc_BreakVector_Y) == 0x0000A8, "Member 'BP_FluxDataComponent_C_SetQuadData::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetQuadData, CallFunc_BreakVector_Z) == 0x0000B0, "Member 'BP_FluxDataComponent_C_SetQuadData::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetQuadData, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'BP_FluxDataComponent_C_SetQuadData::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetQuadData, CallFunc_MakeVector_ReturnValue) == 0x0000C0, "Member 'BP_FluxDataComponent_C_SetQuadData::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetQuadData, CallFunc_BreakVector_X_1) == 0x0000D8, "Member 'BP_FluxDataComponent_C_SetQuadData::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetQuadData, CallFunc_BreakVector_Y_1) == 0x0000E0, "Member 'BP_FluxDataComponent_C_SetQuadData::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetQuadData, CallFunc_BreakVector_Z_1) == 0x0000E8, "Member 'BP_FluxDataComponent_C_SetQuadData::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetQuadData, CallFunc_Add_VectorVector_ReturnValue_4) == 0x0000F0, "Member 'BP_FluxDataComponent_C_SetQuadData::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetQuadData, CallFunc_MakeVector_ReturnValue_1) == 0x000108, "Member 'BP_FluxDataComponent_C_SetQuadData::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetQuadData, CallFunc_Add_VectorVector_ReturnValue_5) == 0x000120, "Member 'BP_FluxDataComponent_C_SetQuadData::CallFunc_Add_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetQuadData, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000138, "Member 'BP_FluxDataComponent_C_SetQuadData::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetQuadData, Temp_int_Array_Index_Variable) == 0x000150, "Member 'BP_FluxDataComponent_C_SetQuadData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetQuadData, CallFunc_Array_Get_Item) == 0x000158, "Member 'BP_FluxDataComponent_C_SetQuadData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetQuadData, CallFunc_Array_Length_ReturnValue) == 0x000190, "Member 'BP_FluxDataComponent_C_SetQuadData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetQuadData, Temp_int_Loop_Counter_Variable) == 0x000194, "Member 'BP_FluxDataComponent_C_SetQuadData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetQuadData, CallFunc_Less_IntInt_ReturnValue) == 0x000198, "Member 'BP_FluxDataComponent_C_SetQuadData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetQuadData, CallFunc_Add_IntInt_ReturnValue) == 0x00019C, "Member 'BP_FluxDataComponent_C_SetQuadData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetQuadData, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x0001A0, "Member 'BP_FluxDataComponent_C_SetQuadData::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetQuadData, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0001A8, "Member 'BP_FluxDataComponent_C_SetQuadData::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetQuadData, CallFunc_Add_DoubleDouble_B_ImplicitCast_1) == 0x0001B0, "Member 'BP_FluxDataComponent_C_SetQuadData::CallFunc_Add_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetQuadData, CallFunc_Add_DoubleDouble_A_ImplicitCast_1) == 0x0001B8, "Member 'BP_FluxDataComponent_C_SetQuadData::CallFunc_Add_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetQuadData, CallFunc_DrawDebugSphere_Duration_ImplicitCast) == 0x0001C0, "Member 'BP_FluxDataComponent_C_SetQuadData::CallFunc_DrawDebugSphere_Duration_ImplicitCast' has a wrong offset!");

// Function BP_FluxDataComponent.BP_FluxDataComponent_C.SetRelativeSamplePoints
// 0x0020 (0x0020 - 0x0000)
struct BP_FluxDataComponent_C_SetRelativeSamplePoints final
{
public:
	TArray<struct FVector>                        Points;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxDataComponent_C_SetRelativeSamplePoints) == 0x000008, "Wrong alignment on BP_FluxDataComponent_C_SetRelativeSamplePoints");
static_assert(sizeof(BP_FluxDataComponent_C_SetRelativeSamplePoints) == 0x000020, "Wrong size on BP_FluxDataComponent_C_SetRelativeSamplePoints");
static_assert(offsetof(BP_FluxDataComponent_C_SetRelativeSamplePoints, Points) == 0x000000, "Member 'BP_FluxDataComponent_C_SetRelativeSamplePoints::Points' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetRelativeSamplePoints, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_FluxDataComponent_C_SetRelativeSamplePoints::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetRelativeSamplePoints, CallFunc_Greater_IntInt_ReturnValue) == 0x000014, "Member 'BP_FluxDataComponent_C_SetRelativeSamplePoints::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetRelativeSamplePoints, CallFunc_Array_Length_ReturnValue_1) == 0x000018, "Member 'BP_FluxDataComponent_C_SetRelativeSamplePoints::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetRelativeSamplePoints, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_FluxDataComponent_C_SetRelativeSamplePoints::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetRelativeSamplePoints, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00001D, "Member 'BP_FluxDataComponent_C_SetRelativeSamplePoints::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_FluxDataComponent.BP_FluxDataComponent_C.SetSurfaceActor
// 0x0010 (0x0010 - 0x0000)
struct BP_FluxDataComponent_C_SetSurfaceActor final
{
public:
	const class AActor*                           Interface;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxDataComponent_C_SetSurfaceActor) == 0x000008, "Wrong alignment on BP_FluxDataComponent_C_SetSurfaceActor");
static_assert(sizeof(BP_FluxDataComponent_C_SetSurfaceActor) == 0x000010, "Wrong size on BP_FluxDataComponent_C_SetSurfaceActor");
static_assert(offsetof(BP_FluxDataComponent_C_SetSurfaceActor, Interface) == 0x000000, "Member 'BP_FluxDataComponent_C_SetSurfaceActor::Interface' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_SetSurfaceActor, CallFunc_IsActive_ReturnValue) == 0x000008, "Member 'BP_FluxDataComponent_C_SetSurfaceActor::CallFunc_IsActive_ReturnValue' has a wrong offset!");

// Function BP_FluxDataComponent.BP_FluxDataComponent_C.GetOwnerComponent
// 0x0070 (0x0070 - 0x0000)
struct BP_FluxDataComponent_C_GetOwnerComponent final
{
public:
	class USceneComponent*                        SceneComponent;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                OwnerSceneTagComponents;                           // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                CallFunc_GetComponentsByTag_ReturnValue;           // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue_1;        // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxDataComponent_C_GetOwnerComponent) == 0x000008, "Wrong alignment on BP_FluxDataComponent_C_GetOwnerComponent");
static_assert(sizeof(BP_FluxDataComponent_C_GetOwnerComponent) == 0x000070, "Wrong size on BP_FluxDataComponent_C_GetOwnerComponent");
static_assert(offsetof(BP_FluxDataComponent_C_GetOwnerComponent, SceneComponent) == 0x000000, "Member 'BP_FluxDataComponent_C_GetOwnerComponent::SceneComponent' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_GetOwnerComponent, OwnerSceneTagComponents) == 0x000008, "Member 'BP_FluxDataComponent_C_GetOwnerComponent::OwnerSceneTagComponents' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_GetOwnerComponent, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'BP_FluxDataComponent_C_GetOwnerComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_GetOwnerComponent, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_FluxDataComponent_C_GetOwnerComponent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_GetOwnerComponent, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000028, "Member 'BP_FluxDataComponent_C_GetOwnerComponent::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_GetOwnerComponent, CallFunc_Greater_IntInt_ReturnValue) == 0x000030, "Member 'BP_FluxDataComponent_C_GetOwnerComponent::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_GetOwnerComponent, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_FluxDataComponent_C_GetOwnerComponent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_GetOwnerComponent, CallFunc_GetOwner_ReturnValue_1) == 0x000040, "Member 'BP_FluxDataComponent_C_GetOwnerComponent::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_GetOwnerComponent, CallFunc_GetComponentsByTag_ReturnValue) == 0x000048, "Member 'BP_FluxDataComponent_C_GetOwnerComponent::CallFunc_GetComponentsByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_GetOwnerComponent, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000058, "Member 'BP_FluxDataComponent_C_GetOwnerComponent::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_GetOwnerComponent, CallFunc_GetOwner_ReturnValue_2) == 0x000060, "Member 'BP_FluxDataComponent_C_GetOwnerComponent::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_GetOwnerComponent, CallFunc_K2_GetRootComponent_ReturnValue_1) == 0x000068, "Member 'BP_FluxDataComponent_C_GetOwnerComponent::CallFunc_K2_GetRootComponent_ReturnValue_1' has a wrong offset!");

// Function BP_FluxDataComponent.BP_FluxDataComponent_C.GetWorldSurface
// 0x01D8 (0x01D8 - 0x0000)
struct BP_FluxDataComponent_C_GetWorldSurface final
{
public:
	class AActor*                                 Output;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_GetOwnerComponent_SceneComponent;         // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors;      // 0x0048(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_FluxSurface_C>    K2Node_DynamicCast_AsBPI_Flux_Surface;             // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_GetVolumeCollision_Volume;                // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_SphereOverlapComponent_HitLocation;    // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_SphereOverlapComponent_HitNormal;      // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_K2_SphereOverlapComponent_BoneName;       // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SphereOverlapComponent_OutHit;         // 0x00C8(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SphereOverlapComponent_ReturnValue;    // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOverlappingActor_ReturnValue;           // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C2[0x2];                                      // 0x01C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxDataComponent_C_GetWorldSurface) == 0x000008, "Wrong alignment on BP_FluxDataComponent_C_GetWorldSurface");
static_assert(sizeof(BP_FluxDataComponent_C_GetWorldSurface) == 0x0001D8, "Wrong size on BP_FluxDataComponent_C_GetWorldSurface");
static_assert(offsetof(BP_FluxDataComponent_C_GetWorldSurface, Output) == 0x000000, "Member 'BP_FluxDataComponent_C_GetWorldSurface::Output' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_GetWorldSurface, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_FluxDataComponent_C_GetWorldSurface::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_GetWorldSurface, CallFunc_GetOwnerComponent_SceneComponent) == 0x000010, "Member 'BP_FluxDataComponent_C_GetWorldSurface::CallFunc_GetOwnerComponent_SceneComponent' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_GetWorldSurface, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'BP_FluxDataComponent_C_GetWorldSurface::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_GetWorldSurface, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_FluxDataComponent_C_GetWorldSurface::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_GetWorldSurface, CallFunc_GetOwner_ReturnValue) == 0x000038, "Member 'BP_FluxDataComponent_C_GetWorldSurface::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_GetWorldSurface, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_FluxDataComponent_C_GetWorldSurface::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_GetWorldSurface, CallFunc_GetAllActorsWithInterface_OutActors) == 0x000048, "Member 'BP_FluxDataComponent_C_GetWorldSurface::CallFunc_GetAllActorsWithInterface_OutActors' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_GetWorldSurface, CallFunc_GetOwner_ReturnValue_1) == 0x000058, "Member 'BP_FluxDataComponent_C_GetWorldSurface::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_GetWorldSurface, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_FluxDataComponent_C_GetWorldSurface::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_GetWorldSurface, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_FluxDataComponent_C_GetWorldSurface::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_GetWorldSurface, K2Node_DynamicCast_AsBPI_Flux_Surface) == 0x000070, "Member 'BP_FluxDataComponent_C_GetWorldSurface::K2Node_DynamicCast_AsBPI_Flux_Surface' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_GetWorldSurface, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'BP_FluxDataComponent_C_GetWorldSurface::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_GetWorldSurface, CallFunc_Less_IntInt_ReturnValue) == 0x000081, "Member 'BP_FluxDataComponent_C_GetWorldSurface::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_GetWorldSurface, CallFunc_GetVolumeCollision_Volume) == 0x000088, "Member 'BP_FluxDataComponent_C_GetWorldSurface::CallFunc_GetVolumeCollision_Volume' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_GetWorldSurface, CallFunc_K2_SphereOverlapComponent_HitLocation) == 0x000090, "Member 'BP_FluxDataComponent_C_GetWorldSurface::CallFunc_K2_SphereOverlapComponent_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_GetWorldSurface, CallFunc_K2_SphereOverlapComponent_HitNormal) == 0x0000A8, "Member 'BP_FluxDataComponent_C_GetWorldSurface::CallFunc_K2_SphereOverlapComponent_HitNormal' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_GetWorldSurface, CallFunc_K2_SphereOverlapComponent_BoneName) == 0x0000C0, "Member 'BP_FluxDataComponent_C_GetWorldSurface::CallFunc_K2_SphereOverlapComponent_BoneName' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_GetWorldSurface, CallFunc_K2_SphereOverlapComponent_OutHit) == 0x0000C8, "Member 'BP_FluxDataComponent_C_GetWorldSurface::CallFunc_K2_SphereOverlapComponent_OutHit' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_GetWorldSurface, CallFunc_K2_SphereOverlapComponent_ReturnValue) == 0x0001C0, "Member 'BP_FluxDataComponent_C_GetWorldSurface::CallFunc_K2_SphereOverlapComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_GetWorldSurface, CallFunc_IsOverlappingActor_ReturnValue) == 0x0001C1, "Member 'BP_FluxDataComponent_C_GetWorldSurface::CallFunc_IsOverlappingActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_GetWorldSurface, CallFunc_Array_Length_ReturnValue_1) == 0x0001C4, "Member 'BP_FluxDataComponent_C_GetWorldSurface::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_GetWorldSurface, CallFunc_GetOwner_ReturnValue_2) == 0x0001C8, "Member 'BP_FluxDataComponent_C_GetWorldSurface::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_GetWorldSurface, CallFunc_Greater_IntInt_ReturnValue) == 0x0001D0, "Member 'BP_FluxDataComponent_C_GetWorldSurface::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxDataComponent_C_GetWorldSurface, CallFunc_DoesImplementInterface_ReturnValue) == 0x0001D1, "Member 'BP_FluxDataComponent_C_GetWorldSurface::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");

}

