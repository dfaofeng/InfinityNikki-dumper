#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: X6CustomizableSequencerTracks

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "MovieScene_structs.hpp"
#include "X6CustomizableSequencerTracks_structs.hpp"


namespace SDK::Params
{

// Function X6CustomizableSequencerTracks.X6SequencerBlueprintFunctionLibrary.CheckIfTargetSectionOwnerActorContainsActivePropertySectionByName
// 0x0018 (0x0018 - 0x0000)
struct X6SequencerBlueprintFunctionLibrary_CheckIfTargetSectionOwnerActorContainsActivePropertySectionByName final
{
public:
	class UMovieSceneSection*                     InSection;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   InCheckPropertyName;                               // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(X6SequencerBlueprintFunctionLibrary_CheckIfTargetSectionOwnerActorContainsActivePropertySectionByName) == 0x000008, "Wrong alignment on X6SequencerBlueprintFunctionLibrary_CheckIfTargetSectionOwnerActorContainsActivePropertySectionByName");
static_assert(sizeof(X6SequencerBlueprintFunctionLibrary_CheckIfTargetSectionOwnerActorContainsActivePropertySectionByName) == 0x000018, "Wrong size on X6SequencerBlueprintFunctionLibrary_CheckIfTargetSectionOwnerActorContainsActivePropertySectionByName");
static_assert(offsetof(X6SequencerBlueprintFunctionLibrary_CheckIfTargetSectionOwnerActorContainsActivePropertySectionByName, InSection) == 0x000000, "Member 'X6SequencerBlueprintFunctionLibrary_CheckIfTargetSectionOwnerActorContainsActivePropertySectionByName::InSection' has a wrong offset!");
static_assert(offsetof(X6SequencerBlueprintFunctionLibrary_CheckIfTargetSectionOwnerActorContainsActivePropertySectionByName, InCheckPropertyName) == 0x000008, "Member 'X6SequencerBlueprintFunctionLibrary_CheckIfTargetSectionOwnerActorContainsActivePropertySectionByName::InCheckPropertyName' has a wrong offset!");
static_assert(offsetof(X6SequencerBlueprintFunctionLibrary_CheckIfTargetSectionOwnerActorContainsActivePropertySectionByName, ReturnValue) == 0x000010, "Member 'X6SequencerBlueprintFunctionLibrary_CheckIfTargetSectionOwnerActorContainsActivePropertySectionByName::ReturnValue' has a wrong offset!");

// Function X6CustomizableSequencerTracks.X6SequencerBlueprintFunctionLibrary.GetBoolValueFromPreviewConfig
// 0x000C (0x000C - 0x0000)
struct X6SequencerBlueprintFunctionLibrary_GetBoolValueFromPreviewConfig final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(X6SequencerBlueprintFunctionLibrary_GetBoolValueFromPreviewConfig) == 0x000004, "Wrong alignment on X6SequencerBlueprintFunctionLibrary_GetBoolValueFromPreviewConfig");
static_assert(sizeof(X6SequencerBlueprintFunctionLibrary_GetBoolValueFromPreviewConfig) == 0x00000C, "Wrong size on X6SequencerBlueprintFunctionLibrary_GetBoolValueFromPreviewConfig");
static_assert(offsetof(X6SequencerBlueprintFunctionLibrary_GetBoolValueFromPreviewConfig, Name_0) == 0x000000, "Member 'X6SequencerBlueprintFunctionLibrary_GetBoolValueFromPreviewConfig::Name_0' has a wrong offset!");
static_assert(offsetof(X6SequencerBlueprintFunctionLibrary_GetBoolValueFromPreviewConfig, ReturnValue) == 0x000008, "Member 'X6SequencerBlueprintFunctionLibrary_GetBoolValueFromPreviewConfig::ReturnValue' has a wrong offset!");

// Function X6CustomizableSequencerTracks.X6SequencerBlueprintFunctionLibrary.GetByteValueFromPreviewConfig
// 0x000C (0x000C - 0x0000)
struct X6SequencerBlueprintFunctionLibrary_GetByteValueFromPreviewConfig final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(X6SequencerBlueprintFunctionLibrary_GetByteValueFromPreviewConfig) == 0x000004, "Wrong alignment on X6SequencerBlueprintFunctionLibrary_GetByteValueFromPreviewConfig");
static_assert(sizeof(X6SequencerBlueprintFunctionLibrary_GetByteValueFromPreviewConfig) == 0x00000C, "Wrong size on X6SequencerBlueprintFunctionLibrary_GetByteValueFromPreviewConfig");
static_assert(offsetof(X6SequencerBlueprintFunctionLibrary_GetByteValueFromPreviewConfig, Name_0) == 0x000000, "Member 'X6SequencerBlueprintFunctionLibrary_GetByteValueFromPreviewConfig::Name_0' has a wrong offset!");
static_assert(offsetof(X6SequencerBlueprintFunctionLibrary_GetByteValueFromPreviewConfig, ReturnValue) == 0x000008, "Member 'X6SequencerBlueprintFunctionLibrary_GetByteValueFromPreviewConfig::ReturnValue' has a wrong offset!");

// Function X6CustomizableSequencerTracks.X6SequencerBlueprintFunctionLibrary.GetCustomUserAsset
// 0x0010 (0x0010 - 0x0000)
struct X6SequencerBlueprintFunctionLibrary_GetCustomUserAsset final
{
public:
	class ULevelSequence*                         LevelSequence;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UX6LevelSequenceAssetUserData*          ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(X6SequencerBlueprintFunctionLibrary_GetCustomUserAsset) == 0x000008, "Wrong alignment on X6SequencerBlueprintFunctionLibrary_GetCustomUserAsset");
static_assert(sizeof(X6SequencerBlueprintFunctionLibrary_GetCustomUserAsset) == 0x000010, "Wrong size on X6SequencerBlueprintFunctionLibrary_GetCustomUserAsset");
static_assert(offsetof(X6SequencerBlueprintFunctionLibrary_GetCustomUserAsset, LevelSequence) == 0x000000, "Member 'X6SequencerBlueprintFunctionLibrary_GetCustomUserAsset::LevelSequence' has a wrong offset!");
static_assert(offsetof(X6SequencerBlueprintFunctionLibrary_GetCustomUserAsset, ReturnValue) == 0x000008, "Member 'X6SequencerBlueprintFunctionLibrary_GetCustomUserAsset::ReturnValue' has a wrong offset!");

// Function X6CustomizableSequencerTracks.X6SequencerBlueprintFunctionLibrary.GetDoubleValueFromPreviewConfig
// 0x0010 (0x0010 - 0x0000)
struct X6SequencerBlueprintFunctionLibrary_GetDoubleValueFromPreviewConfig final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(X6SequencerBlueprintFunctionLibrary_GetDoubleValueFromPreviewConfig) == 0x000008, "Wrong alignment on X6SequencerBlueprintFunctionLibrary_GetDoubleValueFromPreviewConfig");
static_assert(sizeof(X6SequencerBlueprintFunctionLibrary_GetDoubleValueFromPreviewConfig) == 0x000010, "Wrong size on X6SequencerBlueprintFunctionLibrary_GetDoubleValueFromPreviewConfig");
static_assert(offsetof(X6SequencerBlueprintFunctionLibrary_GetDoubleValueFromPreviewConfig, Name_0) == 0x000000, "Member 'X6SequencerBlueprintFunctionLibrary_GetDoubleValueFromPreviewConfig::Name_0' has a wrong offset!");
static_assert(offsetof(X6SequencerBlueprintFunctionLibrary_GetDoubleValueFromPreviewConfig, ReturnValue) == 0x000008, "Member 'X6SequencerBlueprintFunctionLibrary_GetDoubleValueFromPreviewConfig::ReturnValue' has a wrong offset!");

// Function X6CustomizableSequencerTracks.X6SequencerBlueprintFunctionLibrary.GetIntValueFromPreviewConfig
// 0x000C (0x000C - 0x0000)
struct X6SequencerBlueprintFunctionLibrary_GetIntValueFromPreviewConfig final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(X6SequencerBlueprintFunctionLibrary_GetIntValueFromPreviewConfig) == 0x000004, "Wrong alignment on X6SequencerBlueprintFunctionLibrary_GetIntValueFromPreviewConfig");
static_assert(sizeof(X6SequencerBlueprintFunctionLibrary_GetIntValueFromPreviewConfig) == 0x00000C, "Wrong size on X6SequencerBlueprintFunctionLibrary_GetIntValueFromPreviewConfig");
static_assert(offsetof(X6SequencerBlueprintFunctionLibrary_GetIntValueFromPreviewConfig, Name_0) == 0x000000, "Member 'X6SequencerBlueprintFunctionLibrary_GetIntValueFromPreviewConfig::Name_0' has a wrong offset!");
static_assert(offsetof(X6SequencerBlueprintFunctionLibrary_GetIntValueFromPreviewConfig, ReturnValue) == 0x000008, "Member 'X6SequencerBlueprintFunctionLibrary_GetIntValueFromPreviewConfig::ReturnValue' has a wrong offset!");

// Function X6CustomizableSequencerTracks.X6SequencerSectionBP.FindBindingObject
// 0x0020 (0x0020 - 0x0000)
struct X6SequencerSectionBP_FindBindingObject final
{
public:
	struct FMovieSceneObjectBindingID             MovieSceneObjectBindingID;                         // 0x0000(0x0018)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(X6SequencerSectionBP_FindBindingObject) == 0x000008, "Wrong alignment on X6SequencerSectionBP_FindBindingObject");
static_assert(sizeof(X6SequencerSectionBP_FindBindingObject) == 0x000020, "Wrong size on X6SequencerSectionBP_FindBindingObject");
static_assert(offsetof(X6SequencerSectionBP_FindBindingObject, MovieSceneObjectBindingID) == 0x000000, "Member 'X6SequencerSectionBP_FindBindingObject::MovieSceneObjectBindingID' has a wrong offset!");
static_assert(offsetof(X6SequencerSectionBP_FindBindingObject, ReturnValue) == 0x000018, "Member 'X6SequencerSectionBP_FindBindingObject::ReturnValue' has a wrong offset!");

// Function X6CustomizableSequencerTracks.X6SequencerSectionBP.FindProxyActor
// 0x0008 (0x0008 - 0x0000)
struct X6SequencerSectionBP_FindProxyActor final
{
public:
	class AActor*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(X6SequencerSectionBP_FindProxyActor) == 0x000008, "Wrong alignment on X6SequencerSectionBP_FindProxyActor");
static_assert(sizeof(X6SequencerSectionBP_FindProxyActor) == 0x000008, "Wrong size on X6SequencerSectionBP_FindProxyActor");
static_assert(offsetof(X6SequencerSectionBP_FindProxyActor, ReturnValue) == 0x000000, "Member 'X6SequencerSectionBP_FindProxyActor::ReturnValue' has a wrong offset!");

// Function X6CustomizableSequencerTracks.X6SequencerSectionBP.GetBeginFrame
// 0x0004 (0x0004 - 0x0000)
struct X6SequencerSectionBP_GetBeginFrame final
{
public:
	struct FFrameNumber                           ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(X6SequencerSectionBP_GetBeginFrame) == 0x000004, "Wrong alignment on X6SequencerSectionBP_GetBeginFrame");
static_assert(sizeof(X6SequencerSectionBP_GetBeginFrame) == 0x000004, "Wrong size on X6SequencerSectionBP_GetBeginFrame");
static_assert(offsetof(X6SequencerSectionBP_GetBeginFrame, ReturnValue) == 0x000000, "Member 'X6SequencerSectionBP_GetBeginFrame::ReturnValue' has a wrong offset!");

// Function X6CustomizableSequencerTracks.X6SequencerSectionBP.GetBeginFrameSeconds
// 0x0004 (0x0004 - 0x0000)
struct X6SequencerSectionBP_GetBeginFrameSeconds final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(X6SequencerSectionBP_GetBeginFrameSeconds) == 0x000004, "Wrong alignment on X6SequencerSectionBP_GetBeginFrameSeconds");
static_assert(sizeof(X6SequencerSectionBP_GetBeginFrameSeconds) == 0x000004, "Wrong size on X6SequencerSectionBP_GetBeginFrameSeconds");
static_assert(offsetof(X6SequencerSectionBP_GetBeginFrameSeconds, ReturnValue) == 0x000000, "Member 'X6SequencerSectionBP_GetBeginFrameSeconds::ReturnValue' has a wrong offset!");

// Function X6CustomizableSequencerTracks.X6SequencerSectionBP.GetBindingObject
// 0x0008 (0x0008 - 0x0000)
struct X6SequencerSectionBP_GetBindingObject final
{
public:
	class UObject*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(X6SequencerSectionBP_GetBindingObject) == 0x000008, "Wrong alignment on X6SequencerSectionBP_GetBindingObject");
static_assert(sizeof(X6SequencerSectionBP_GetBindingObject) == 0x000008, "Wrong size on X6SequencerSectionBP_GetBindingObject");
static_assert(offsetof(X6SequencerSectionBP_GetBindingObject, ReturnValue) == 0x000000, "Member 'X6SequencerSectionBP_GetBindingObject::ReturnValue' has a wrong offset!");

// Function X6CustomizableSequencerTracks.X6SequencerSectionBP.GetEndFrame
// 0x0004 (0x0004 - 0x0000)
struct X6SequencerSectionBP_GetEndFrame final
{
public:
	struct FFrameNumber                           ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(X6SequencerSectionBP_GetEndFrame) == 0x000004, "Wrong alignment on X6SequencerSectionBP_GetEndFrame");
static_assert(sizeof(X6SequencerSectionBP_GetEndFrame) == 0x000004, "Wrong size on X6SequencerSectionBP_GetEndFrame");
static_assert(offsetof(X6SequencerSectionBP_GetEndFrame, ReturnValue) == 0x000000, "Member 'X6SequencerSectionBP_GetEndFrame::ReturnValue' has a wrong offset!");

// Function X6CustomizableSequencerTracks.X6SequencerSectionBP.GetEndFrameSeconds
// 0x0004 (0x0004 - 0x0000)
struct X6SequencerSectionBP_GetEndFrameSeconds final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(X6SequencerSectionBP_GetEndFrameSeconds) == 0x000004, "Wrong alignment on X6SequencerSectionBP_GetEndFrameSeconds");
static_assert(sizeof(X6SequencerSectionBP_GetEndFrameSeconds) == 0x000004, "Wrong size on X6SequencerSectionBP_GetEndFrameSeconds");
static_assert(offsetof(X6SequencerSectionBP_GetEndFrameSeconds, ReturnValue) == 0x000000, "Member 'X6SequencerSectionBP_GetEndFrameSeconds::ReturnValue' has a wrong offset!");

// Function X6CustomizableSequencerTracks.X6SequencerSectionBP.GetMovieSceneSequencePlayer
// 0x0008 (0x0008 - 0x0000)
struct X6SequencerSectionBP_GetMovieSceneSequencePlayer final
{
public:
	class UMovieSceneSequencePlayer*              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(X6SequencerSectionBP_GetMovieSceneSequencePlayer) == 0x000008, "Wrong alignment on X6SequencerSectionBP_GetMovieSceneSequencePlayer");
static_assert(sizeof(X6SequencerSectionBP_GetMovieSceneSequencePlayer) == 0x000008, "Wrong size on X6SequencerSectionBP_GetMovieSceneSequencePlayer");
static_assert(offsetof(X6SequencerSectionBP_GetMovieSceneSequencePlayer, ReturnValue) == 0x000000, "Member 'X6SequencerSectionBP_GetMovieSceneSequencePlayer::ReturnValue' has a wrong offset!");

// Function X6CustomizableSequencerTracks.X6SequencerSectionBP.K2_OnSectionBegin_WithBindingObject
// 0x0008 (0x0008 - 0x0000)
struct X6SequencerSectionBP_K2_OnSectionBegin_WithBindingObject final
{
public:
	class UObject*                                BindingObject;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(X6SequencerSectionBP_K2_OnSectionBegin_WithBindingObject) == 0x000008, "Wrong alignment on X6SequencerSectionBP_K2_OnSectionBegin_WithBindingObject");
static_assert(sizeof(X6SequencerSectionBP_K2_OnSectionBegin_WithBindingObject) == 0x000008, "Wrong size on X6SequencerSectionBP_K2_OnSectionBegin_WithBindingObject");
static_assert(offsetof(X6SequencerSectionBP_K2_OnSectionBegin_WithBindingObject, BindingObject) == 0x000000, "Member 'X6SequencerSectionBP_K2_OnSectionBegin_WithBindingObject::BindingObject' has a wrong offset!");

// Function X6CustomizableSequencerTracks.X6SequencerSectionBP.K2_OnSectionEnd_WithBindingObject
// 0x0008 (0x0008 - 0x0000)
struct X6SequencerSectionBP_K2_OnSectionEnd_WithBindingObject final
{
public:
	class UObject*                                BindingObject;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(X6SequencerSectionBP_K2_OnSectionEnd_WithBindingObject) == 0x000008, "Wrong alignment on X6SequencerSectionBP_K2_OnSectionEnd_WithBindingObject");
static_assert(sizeof(X6SequencerSectionBP_K2_OnSectionEnd_WithBindingObject) == 0x000008, "Wrong size on X6SequencerSectionBP_K2_OnSectionEnd_WithBindingObject");
static_assert(offsetof(X6SequencerSectionBP_K2_OnSectionEnd_WithBindingObject, BindingObject) == 0x000000, "Member 'X6SequencerSectionBP_K2_OnSectionEnd_WithBindingObject::BindingObject' has a wrong offset!");

// Function X6CustomizableSequencerTracks.X6SequencerSectionBP.K2_OnSectionUpdate_WithBindingObject
// 0x0008 (0x0008 - 0x0000)
struct X6SequencerSectionBP_K2_OnSectionUpdate_WithBindingObject final
{
public:
	class UObject*                                BindingObject;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(X6SequencerSectionBP_K2_OnSectionUpdate_WithBindingObject) == 0x000008, "Wrong alignment on X6SequencerSectionBP_K2_OnSectionUpdate_WithBindingObject");
static_assert(sizeof(X6SequencerSectionBP_K2_OnSectionUpdate_WithBindingObject) == 0x000008, "Wrong size on X6SequencerSectionBP_K2_OnSectionUpdate_WithBindingObject");
static_assert(offsetof(X6SequencerSectionBP_K2_OnSectionUpdate_WithBindingObject, BindingObject) == 0x000000, "Member 'X6SequencerSectionBP_K2_OnSectionUpdate_WithBindingObject::BindingObject' has a wrong offset!");

// Function X6CustomizableSequencerTracks.X6SequencerParameterSectionBP.AddBoolParameterKey
// 0x0010 (0x0010 - 0x0000)
struct X6SequencerParameterSectionBP_AddBoolParameterKey final
{
public:
	class FName                                   InParameterName;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFrameNumber                           InTime;                                            // 0x0008(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          InValue;                                           // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(X6SequencerParameterSectionBP_AddBoolParameterKey) == 0x000004, "Wrong alignment on X6SequencerParameterSectionBP_AddBoolParameterKey");
static_assert(sizeof(X6SequencerParameterSectionBP_AddBoolParameterKey) == 0x000010, "Wrong size on X6SequencerParameterSectionBP_AddBoolParameterKey");
static_assert(offsetof(X6SequencerParameterSectionBP_AddBoolParameterKey, InParameterName) == 0x000000, "Member 'X6SequencerParameterSectionBP_AddBoolParameterKey::InParameterName' has a wrong offset!");
static_assert(offsetof(X6SequencerParameterSectionBP_AddBoolParameterKey, InTime) == 0x000008, "Member 'X6SequencerParameterSectionBP_AddBoolParameterKey::InTime' has a wrong offset!");
static_assert(offsetof(X6SequencerParameterSectionBP_AddBoolParameterKey, InValue) == 0x00000C, "Member 'X6SequencerParameterSectionBP_AddBoolParameterKey::InValue' has a wrong offset!");

// Function X6CustomizableSequencerTracks.X6SequencerParameterSectionBP.AddByteParameterKey
// 0x0010 (0x0010 - 0x0000)
struct X6SequencerParameterSectionBP_AddByteParameterKey final
{
public:
	class FName                                   InParameterName;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEnum*                                  Enum;                                              // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(X6SequencerParameterSectionBP_AddByteParameterKey) == 0x000008, "Wrong alignment on X6SequencerParameterSectionBP_AddByteParameterKey");
static_assert(sizeof(X6SequencerParameterSectionBP_AddByteParameterKey) == 0x000010, "Wrong size on X6SequencerParameterSectionBP_AddByteParameterKey");
static_assert(offsetof(X6SequencerParameterSectionBP_AddByteParameterKey, InParameterName) == 0x000000, "Member 'X6SequencerParameterSectionBP_AddByteParameterKey::InParameterName' has a wrong offset!");
static_assert(offsetof(X6SequencerParameterSectionBP_AddByteParameterKey, Enum) == 0x000008, "Member 'X6SequencerParameterSectionBP_AddByteParameterKey::Enum' has a wrong offset!");

// Function X6CustomizableSequencerTracks.X6SequencerParameterSectionBP.AddIntegerParameterKey
// 0x0010 (0x0010 - 0x0000)
struct X6SequencerParameterSectionBP_AddIntegerParameterKey final
{
public:
	class FName                                   InParameterName;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFrameNumber                           InTime;                                            // 0x0008(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InValue;                                           // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(X6SequencerParameterSectionBP_AddIntegerParameterKey) == 0x000004, "Wrong alignment on X6SequencerParameterSectionBP_AddIntegerParameterKey");
static_assert(sizeof(X6SequencerParameterSectionBP_AddIntegerParameterKey) == 0x000010, "Wrong size on X6SequencerParameterSectionBP_AddIntegerParameterKey");
static_assert(offsetof(X6SequencerParameterSectionBP_AddIntegerParameterKey, InParameterName) == 0x000000, "Member 'X6SequencerParameterSectionBP_AddIntegerParameterKey::InParameterName' has a wrong offset!");
static_assert(offsetof(X6SequencerParameterSectionBP_AddIntegerParameterKey, InTime) == 0x000008, "Member 'X6SequencerParameterSectionBP_AddIntegerParameterKey::InTime' has a wrong offset!");
static_assert(offsetof(X6SequencerParameterSectionBP_AddIntegerParameterKey, InValue) == 0x00000C, "Member 'X6SequencerParameterSectionBP_AddIntegerParameterKey::InValue' has a wrong offset!");

// Function X6CustomizableSequencerTracks.X6SequencerParameterSectionBP.AddLinearColorParameterKey
// 0x001C (0x001C - 0x0000)
struct X6SequencerParameterSectionBP_AddLinearColorParameterKey final
{
public:
	class FName                                   InParameterName;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFrameNumber                           InTime;                                            // 0x0008(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           InValue;                                           // 0x000C(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(X6SequencerParameterSectionBP_AddLinearColorParameterKey) == 0x000004, "Wrong alignment on X6SequencerParameterSectionBP_AddLinearColorParameterKey");
static_assert(sizeof(X6SequencerParameterSectionBP_AddLinearColorParameterKey) == 0x00001C, "Wrong size on X6SequencerParameterSectionBP_AddLinearColorParameterKey");
static_assert(offsetof(X6SequencerParameterSectionBP_AddLinearColorParameterKey, InParameterName) == 0x000000, "Member 'X6SequencerParameterSectionBP_AddLinearColorParameterKey::InParameterName' has a wrong offset!");
static_assert(offsetof(X6SequencerParameterSectionBP_AddLinearColorParameterKey, InTime) == 0x000008, "Member 'X6SequencerParameterSectionBP_AddLinearColorParameterKey::InTime' has a wrong offset!");
static_assert(offsetof(X6SequencerParameterSectionBP_AddLinearColorParameterKey, InValue) == 0x00000C, "Member 'X6SequencerParameterSectionBP_AddLinearColorParameterKey::InValue' has a wrong offset!");

// Function X6CustomizableSequencerTracks.X6SequencerParameterSectionBP.AddObjectParameterKey
// 0x0010 (0x0010 - 0x0000)
struct X6SequencerParameterSectionBP_AddObjectParameterKey final
{
public:
	class FName                                   InParameterName;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                 Class_0;                                           // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(X6SequencerParameterSectionBP_AddObjectParameterKey) == 0x000008, "Wrong alignment on X6SequencerParameterSectionBP_AddObjectParameterKey");
static_assert(sizeof(X6SequencerParameterSectionBP_AddObjectParameterKey) == 0x000010, "Wrong size on X6SequencerParameterSectionBP_AddObjectParameterKey");
static_assert(offsetof(X6SequencerParameterSectionBP_AddObjectParameterKey, InParameterName) == 0x000000, "Member 'X6SequencerParameterSectionBP_AddObjectParameterKey::InParameterName' has a wrong offset!");
static_assert(offsetof(X6SequencerParameterSectionBP_AddObjectParameterKey, Class_0) == 0x000008, "Member 'X6SequencerParameterSectionBP_AddObjectParameterKey::Class_0' has a wrong offset!");

// Function X6CustomizableSequencerTracks.X6SequencerParameterSectionBP.AddScalarParameterKey
// 0x0018 (0x0018 - 0x0000)
struct X6SequencerParameterSectionBP_AddScalarParameterKey final
{
public:
	class FName                                   InParameterName;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFrameNumber                           InTime;                                            // 0x0008(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        InValue;                                           // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(X6SequencerParameterSectionBP_AddScalarParameterKey) == 0x000008, "Wrong alignment on X6SequencerParameterSectionBP_AddScalarParameterKey");
static_assert(sizeof(X6SequencerParameterSectionBP_AddScalarParameterKey) == 0x000018, "Wrong size on X6SequencerParameterSectionBP_AddScalarParameterKey");
static_assert(offsetof(X6SequencerParameterSectionBP_AddScalarParameterKey, InParameterName) == 0x000000, "Member 'X6SequencerParameterSectionBP_AddScalarParameterKey::InParameterName' has a wrong offset!");
static_assert(offsetof(X6SequencerParameterSectionBP_AddScalarParameterKey, InTime) == 0x000008, "Member 'X6SequencerParameterSectionBP_AddScalarParameterKey::InTime' has a wrong offset!");
static_assert(offsetof(X6SequencerParameterSectionBP_AddScalarParameterKey, InValue) == 0x000010, "Member 'X6SequencerParameterSectionBP_AddScalarParameterKey::InValue' has a wrong offset!");

// Function X6CustomizableSequencerTracks.X6SequencerParameterSectionBP.AddTransformParameterKey
// 0x0070 (0x0070 - 0x0000)
struct X6SequencerParameterSectionBP_AddTransformParameterKey final
{
public:
	class FName                                   InParameterName;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFrameNumber                           InTime;                                            // 0x0008(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             InValue;                                           // 0x0010(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(X6SequencerParameterSectionBP_AddTransformParameterKey) == 0x000010, "Wrong alignment on X6SequencerParameterSectionBP_AddTransformParameterKey");
static_assert(sizeof(X6SequencerParameterSectionBP_AddTransformParameterKey) == 0x000070, "Wrong size on X6SequencerParameterSectionBP_AddTransformParameterKey");
static_assert(offsetof(X6SequencerParameterSectionBP_AddTransformParameterKey, InParameterName) == 0x000000, "Member 'X6SequencerParameterSectionBP_AddTransformParameterKey::InParameterName' has a wrong offset!");
static_assert(offsetof(X6SequencerParameterSectionBP_AddTransformParameterKey, InTime) == 0x000008, "Member 'X6SequencerParameterSectionBP_AddTransformParameterKey::InTime' has a wrong offset!");
static_assert(offsetof(X6SequencerParameterSectionBP_AddTransformParameterKey, InValue) == 0x000010, "Member 'X6SequencerParameterSectionBP_AddTransformParameterKey::InValue' has a wrong offset!");

// Function X6CustomizableSequencerTracks.X6SequencerParameterSectionBP.AddVectorParameterKey
// 0x0028 (0x0028 - 0x0000)
struct X6SequencerParameterSectionBP_AddVectorParameterKey final
{
public:
	class FName                                   InParameterName;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFrameNumber                           InTime;                                            // 0x0008(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                InValue;                                           // 0x0010(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(X6SequencerParameterSectionBP_AddVectorParameterKey) == 0x000008, "Wrong alignment on X6SequencerParameterSectionBP_AddVectorParameterKey");
static_assert(sizeof(X6SequencerParameterSectionBP_AddVectorParameterKey) == 0x000028, "Wrong size on X6SequencerParameterSectionBP_AddVectorParameterKey");
static_assert(offsetof(X6SequencerParameterSectionBP_AddVectorParameterKey, InParameterName) == 0x000000, "Member 'X6SequencerParameterSectionBP_AddVectorParameterKey::InParameterName' has a wrong offset!");
static_assert(offsetof(X6SequencerParameterSectionBP_AddVectorParameterKey, InTime) == 0x000008, "Member 'X6SequencerParameterSectionBP_AddVectorParameterKey::InTime' has a wrong offset!");
static_assert(offsetof(X6SequencerParameterSectionBP_AddVectorParameterKey, InValue) == 0x000010, "Member 'X6SequencerParameterSectionBP_AddVectorParameterKey::InValue' has a wrong offset!");

// Function X6CustomizableSequencerTracks.X6SequencerParameterSectionBP.CanAddParameter
// 0x000C (0x000C - 0x0000)
struct X6SequencerParameterSectionBP_CanAddParameter final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(X6SequencerParameterSectionBP_CanAddParameter) == 0x000004, "Wrong alignment on X6SequencerParameterSectionBP_CanAddParameter");
static_assert(sizeof(X6SequencerParameterSectionBP_CanAddParameter) == 0x00000C, "Wrong size on X6SequencerParameterSectionBP_CanAddParameter");
static_assert(offsetof(X6SequencerParameterSectionBP_CanAddParameter, Name_0) == 0x000000, "Member 'X6SequencerParameterSectionBP_CanAddParameter::Name_0' has a wrong offset!");
static_assert(offsetof(X6SequencerParameterSectionBP_CanAddParameter, ReturnValue) == 0x000008, "Member 'X6SequencerParameterSectionBP_CanAddParameter::ReturnValue' has a wrong offset!");

// Function X6CustomizableSequencerTracks.X6SequencerParameterSectionBP.GetObjectParameterContent
// 0x0010 (0x0010 - 0x0000)
struct X6SequencerParameterSectionBP_GetObjectParameterContent final
{
public:
	TArray<struct FX6ObjectParameterContent>      ObjectParameterContents;                           // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(X6SequencerParameterSectionBP_GetObjectParameterContent) == 0x000008, "Wrong alignment on X6SequencerParameterSectionBP_GetObjectParameterContent");
static_assert(sizeof(X6SequencerParameterSectionBP_GetObjectParameterContent) == 0x000010, "Wrong size on X6SequencerParameterSectionBP_GetObjectParameterContent");
static_assert(offsetof(X6SequencerParameterSectionBP_GetObjectParameterContent, ObjectParameterContents) == 0x000000, "Member 'X6SequencerParameterSectionBP_GetObjectParameterContent::ObjectParameterContents' has a wrong offset!");

// Function X6CustomizableSequencerTracks.X6SequencerParameterSectionBP.K2_OnSetParameter
// 0x0500 (0x0500 - 0x0000)
struct X6SequencerParameterSectionBP_K2_OnSetParameter final
{
public:
	struct FX6ParameterEvaluateValues             EvaluateValues;                                    // 0x0000(0x0280)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FX6ParameterEvaluateValues             ChangedValues;                                     // 0x0280(0x0280)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(X6SequencerParameterSectionBP_K2_OnSetParameter) == 0x000008, "Wrong alignment on X6SequencerParameterSectionBP_K2_OnSetParameter");
static_assert(sizeof(X6SequencerParameterSectionBP_K2_OnSetParameter) == 0x000500, "Wrong size on X6SequencerParameterSectionBP_K2_OnSetParameter");
static_assert(offsetof(X6SequencerParameterSectionBP_K2_OnSetParameter, EvaluateValues) == 0x000000, "Member 'X6SequencerParameterSectionBP_K2_OnSetParameter::EvaluateValues' has a wrong offset!");
static_assert(offsetof(X6SequencerParameterSectionBP_K2_OnSetParameter, ChangedValues) == 0x000280, "Member 'X6SequencerParameterSectionBP_K2_OnSetParameter::ChangedValues' has a wrong offset!");

// Function X6CustomizableSequencerTracks.X6SequencerParameterSectionBP.K2_OnSetParameter_WithBindingObject
// 0x0508 (0x0508 - 0x0000)
struct X6SequencerParameterSectionBP_K2_OnSetParameter_WithBindingObject final
{
public:
	struct FX6ParameterEvaluateValues             EvaluateValues;                                    // 0x0000(0x0280)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FX6ParameterEvaluateValues             ChangedValues;                                     // 0x0280(0x0280)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UObject*                                Object;                                            // 0x0500(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(X6SequencerParameterSectionBP_K2_OnSetParameter_WithBindingObject) == 0x000008, "Wrong alignment on X6SequencerParameterSectionBP_K2_OnSetParameter_WithBindingObject");
static_assert(sizeof(X6SequencerParameterSectionBP_K2_OnSetParameter_WithBindingObject) == 0x000508, "Wrong size on X6SequencerParameterSectionBP_K2_OnSetParameter_WithBindingObject");
static_assert(offsetof(X6SequencerParameterSectionBP_K2_OnSetParameter_WithBindingObject, EvaluateValues) == 0x000000, "Member 'X6SequencerParameterSectionBP_K2_OnSetParameter_WithBindingObject::EvaluateValues' has a wrong offset!");
static_assert(offsetof(X6SequencerParameterSectionBP_K2_OnSetParameter_WithBindingObject, ChangedValues) == 0x000280, "Member 'X6SequencerParameterSectionBP_K2_OnSetParameter_WithBindingObject::ChangedValues' has a wrong offset!");
static_assert(offsetof(X6SequencerParameterSectionBP_K2_OnSetParameter_WithBindingObject, Object) == 0x000500, "Member 'X6SequencerParameterSectionBP_K2_OnSetParameter_WithBindingObject::Object' has a wrong offset!");

// Function X6CustomizableSequencerTracks.X6SequencerParameterSectionBP.RemoveBoolParameter
// 0x000C (0x000C - 0x0000)
struct X6SequencerParameterSectionBP_RemoveBoolParameter final
{
public:
	class FName                                   InParameterName;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(X6SequencerParameterSectionBP_RemoveBoolParameter) == 0x000004, "Wrong alignment on X6SequencerParameterSectionBP_RemoveBoolParameter");
static_assert(sizeof(X6SequencerParameterSectionBP_RemoveBoolParameter) == 0x00000C, "Wrong size on X6SequencerParameterSectionBP_RemoveBoolParameter");
static_assert(offsetof(X6SequencerParameterSectionBP_RemoveBoolParameter, InParameterName) == 0x000000, "Member 'X6SequencerParameterSectionBP_RemoveBoolParameter::InParameterName' has a wrong offset!");
static_assert(offsetof(X6SequencerParameterSectionBP_RemoveBoolParameter, ReturnValue) == 0x000008, "Member 'X6SequencerParameterSectionBP_RemoveBoolParameter::ReturnValue' has a wrong offset!");

// Function X6CustomizableSequencerTracks.X6SequencerParameterSectionBP.RemoveByteParameter
// 0x000C (0x000C - 0x0000)
struct X6SequencerParameterSectionBP_RemoveByteParameter final
{
public:
	class FName                                   InParameterName;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(X6SequencerParameterSectionBP_RemoveByteParameter) == 0x000004, "Wrong alignment on X6SequencerParameterSectionBP_RemoveByteParameter");
static_assert(sizeof(X6SequencerParameterSectionBP_RemoveByteParameter) == 0x00000C, "Wrong size on X6SequencerParameterSectionBP_RemoveByteParameter");
static_assert(offsetof(X6SequencerParameterSectionBP_RemoveByteParameter, InParameterName) == 0x000000, "Member 'X6SequencerParameterSectionBP_RemoveByteParameter::InParameterName' has a wrong offset!");
static_assert(offsetof(X6SequencerParameterSectionBP_RemoveByteParameter, ReturnValue) == 0x000008, "Member 'X6SequencerParameterSectionBP_RemoveByteParameter::ReturnValue' has a wrong offset!");

// Function X6CustomizableSequencerTracks.X6SequencerParameterSectionBP.RemoveIntegerParameter
// 0x000C (0x000C - 0x0000)
struct X6SequencerParameterSectionBP_RemoveIntegerParameter final
{
public:
	class FName                                   InParameterName;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(X6SequencerParameterSectionBP_RemoveIntegerParameter) == 0x000004, "Wrong alignment on X6SequencerParameterSectionBP_RemoveIntegerParameter");
static_assert(sizeof(X6SequencerParameterSectionBP_RemoveIntegerParameter) == 0x00000C, "Wrong size on X6SequencerParameterSectionBP_RemoveIntegerParameter");
static_assert(offsetof(X6SequencerParameterSectionBP_RemoveIntegerParameter, InParameterName) == 0x000000, "Member 'X6SequencerParameterSectionBP_RemoveIntegerParameter::InParameterName' has a wrong offset!");
static_assert(offsetof(X6SequencerParameterSectionBP_RemoveIntegerParameter, ReturnValue) == 0x000008, "Member 'X6SequencerParameterSectionBP_RemoveIntegerParameter::ReturnValue' has a wrong offset!");

// Function X6CustomizableSequencerTracks.X6SequencerParameterSectionBP.RemoveLinearColorParameter
// 0x000C (0x000C - 0x0000)
struct X6SequencerParameterSectionBP_RemoveLinearColorParameter final
{
public:
	class FName                                   InParameterName;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(X6SequencerParameterSectionBP_RemoveLinearColorParameter) == 0x000004, "Wrong alignment on X6SequencerParameterSectionBP_RemoveLinearColorParameter");
static_assert(sizeof(X6SequencerParameterSectionBP_RemoveLinearColorParameter) == 0x00000C, "Wrong size on X6SequencerParameterSectionBP_RemoveLinearColorParameter");
static_assert(offsetof(X6SequencerParameterSectionBP_RemoveLinearColorParameter, InParameterName) == 0x000000, "Member 'X6SequencerParameterSectionBP_RemoveLinearColorParameter::InParameterName' has a wrong offset!");
static_assert(offsetof(X6SequencerParameterSectionBP_RemoveLinearColorParameter, ReturnValue) == 0x000008, "Member 'X6SequencerParameterSectionBP_RemoveLinearColorParameter::ReturnValue' has a wrong offset!");

// Function X6CustomizableSequencerTracks.X6SequencerParameterSectionBP.RemoveObjectParameter
// 0x000C (0x000C - 0x0000)
struct X6SequencerParameterSectionBP_RemoveObjectParameter final
{
public:
	class FName                                   InParameterName;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(X6SequencerParameterSectionBP_RemoveObjectParameter) == 0x000004, "Wrong alignment on X6SequencerParameterSectionBP_RemoveObjectParameter");
static_assert(sizeof(X6SequencerParameterSectionBP_RemoveObjectParameter) == 0x00000C, "Wrong size on X6SequencerParameterSectionBP_RemoveObjectParameter");
static_assert(offsetof(X6SequencerParameterSectionBP_RemoveObjectParameter, InParameterName) == 0x000000, "Member 'X6SequencerParameterSectionBP_RemoveObjectParameter::InParameterName' has a wrong offset!");
static_assert(offsetof(X6SequencerParameterSectionBP_RemoveObjectParameter, ReturnValue) == 0x000008, "Member 'X6SequencerParameterSectionBP_RemoveObjectParameter::ReturnValue' has a wrong offset!");

// Function X6CustomizableSequencerTracks.X6SequencerParameterSectionBP.RemoveScalarParameter
// 0x000C (0x000C - 0x0000)
struct X6SequencerParameterSectionBP_RemoveScalarParameter final
{
public:
	class FName                                   InParameterName;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(X6SequencerParameterSectionBP_RemoveScalarParameter) == 0x000004, "Wrong alignment on X6SequencerParameterSectionBP_RemoveScalarParameter");
static_assert(sizeof(X6SequencerParameterSectionBP_RemoveScalarParameter) == 0x00000C, "Wrong size on X6SequencerParameterSectionBP_RemoveScalarParameter");
static_assert(offsetof(X6SequencerParameterSectionBP_RemoveScalarParameter, InParameterName) == 0x000000, "Member 'X6SequencerParameterSectionBP_RemoveScalarParameter::InParameterName' has a wrong offset!");
static_assert(offsetof(X6SequencerParameterSectionBP_RemoveScalarParameter, ReturnValue) == 0x000008, "Member 'X6SequencerParameterSectionBP_RemoveScalarParameter::ReturnValue' has a wrong offset!");

// Function X6CustomizableSequencerTracks.X6SequencerParameterSectionBP.RemoveTransformParameter
// 0x000C (0x000C - 0x0000)
struct X6SequencerParameterSectionBP_RemoveTransformParameter final
{
public:
	class FName                                   InParameterName;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(X6SequencerParameterSectionBP_RemoveTransformParameter) == 0x000004, "Wrong alignment on X6SequencerParameterSectionBP_RemoveTransformParameter");
static_assert(sizeof(X6SequencerParameterSectionBP_RemoveTransformParameter) == 0x00000C, "Wrong size on X6SequencerParameterSectionBP_RemoveTransformParameter");
static_assert(offsetof(X6SequencerParameterSectionBP_RemoveTransformParameter, InParameterName) == 0x000000, "Member 'X6SequencerParameterSectionBP_RemoveTransformParameter::InParameterName' has a wrong offset!");
static_assert(offsetof(X6SequencerParameterSectionBP_RemoveTransformParameter, ReturnValue) == 0x000008, "Member 'X6SequencerParameterSectionBP_RemoveTransformParameter::ReturnValue' has a wrong offset!");

// Function X6CustomizableSequencerTracks.X6SequencerParameterSectionBP.RemoveVectorParameter
// 0x000C (0x000C - 0x0000)
struct X6SequencerParameterSectionBP_RemoveVectorParameter final
{
public:
	class FName                                   InParameterName;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(X6SequencerParameterSectionBP_RemoveVectorParameter) == 0x000004, "Wrong alignment on X6SequencerParameterSectionBP_RemoveVectorParameter");
static_assert(sizeof(X6SequencerParameterSectionBP_RemoveVectorParameter) == 0x00000C, "Wrong size on X6SequencerParameterSectionBP_RemoveVectorParameter");
static_assert(offsetof(X6SequencerParameterSectionBP_RemoveVectorParameter, InParameterName) == 0x000000, "Member 'X6SequencerParameterSectionBP_RemoveVectorParameter::InParameterName' has a wrong offset!");
static_assert(offsetof(X6SequencerParameterSectionBP_RemoveVectorParameter, ReturnValue) == 0x000008, "Member 'X6SequencerParameterSectionBP_RemoveVectorParameter::ReturnValue' has a wrong offset!");

// Function X6CustomizableSequencerTracks.X6SequencerTrackInstanceBP.K2_OnInputAdded
// 0x0070 (0x0070 - 0x0000)
struct X6SequencerTrackInstanceBP_K2_OnInputAdded final
{
public:
	struct FX6SequencerTrackInstanceInput         Input;                                             // 0x0000(0x0070)(Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(X6SequencerTrackInstanceBP_K2_OnInputAdded) == 0x000008, "Wrong alignment on X6SequencerTrackInstanceBP_K2_OnInputAdded");
static_assert(sizeof(X6SequencerTrackInstanceBP_K2_OnInputAdded) == 0x000070, "Wrong size on X6SequencerTrackInstanceBP_K2_OnInputAdded");
static_assert(offsetof(X6SequencerTrackInstanceBP_K2_OnInputAdded, Input) == 0x000000, "Member 'X6SequencerTrackInstanceBP_K2_OnInputAdded::Input' has a wrong offset!");

// Function X6CustomizableSequencerTracks.X6SequencerTrackInstanceBP.K2_OnInputRemoved
// 0x0070 (0x0070 - 0x0000)
struct X6SequencerTrackInstanceBP_K2_OnInputRemoved final
{
public:
	struct FX6SequencerTrackInstanceInput         Input;                                             // 0x0000(0x0070)(Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(X6SequencerTrackInstanceBP_K2_OnInputRemoved) == 0x000008, "Wrong alignment on X6SequencerTrackInstanceBP_K2_OnInputRemoved");
static_assert(sizeof(X6SequencerTrackInstanceBP_K2_OnInputRemoved) == 0x000070, "Wrong size on X6SequencerTrackInstanceBP_K2_OnInputRemoved");
static_assert(offsetof(X6SequencerTrackInstanceBP_K2_OnInputRemoved, Input) == 0x000000, "Member 'X6SequencerTrackInstanceBP_K2_OnInputRemoved::Input' has a wrong offset!");

// Function X6CustomizableSequencerTracks.X6SequencerTrackInstanceBP.GetAnimatedObject
// 0x0008 (0x0008 - 0x0000)
struct X6SequencerTrackInstanceBP_GetAnimatedObject final
{
public:
	class UObject*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(X6SequencerTrackInstanceBP_GetAnimatedObject) == 0x000008, "Wrong alignment on X6SequencerTrackInstanceBP_GetAnimatedObject");
static_assert(sizeof(X6SequencerTrackInstanceBP_GetAnimatedObject) == 0x000008, "Wrong size on X6SequencerTrackInstanceBP_GetAnimatedObject");
static_assert(offsetof(X6SequencerTrackInstanceBP_GetAnimatedObject, ReturnValue) == 0x000000, "Member 'X6SequencerTrackInstanceBP_GetAnimatedObject::ReturnValue' has a wrong offset!");

// Function X6CustomizableSequencerTracks.X6SequencerTrackInstanceBP.GetInput
// 0x0078 (0x0078 - 0x0000)
struct X6SequencerTrackInstanceBP_GetInput final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FX6SequencerTrackInstanceInput         ReturnValue;                                       // 0x0008(0x0070)(Parm, OutParm, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(X6SequencerTrackInstanceBP_GetInput) == 0x000008, "Wrong alignment on X6SequencerTrackInstanceBP_GetInput");
static_assert(sizeof(X6SequencerTrackInstanceBP_GetInput) == 0x000078, "Wrong size on X6SequencerTrackInstanceBP_GetInput");
static_assert(offsetof(X6SequencerTrackInstanceBP_GetInput, Index_0) == 0x000000, "Member 'X6SequencerTrackInstanceBP_GetInput::Index_0' has a wrong offset!");
static_assert(offsetof(X6SequencerTrackInstanceBP_GetInput, ReturnValue) == 0x000008, "Member 'X6SequencerTrackInstanceBP_GetInput::ReturnValue' has a wrong offset!");

// Function X6CustomizableSequencerTracks.X6SequencerTrackInstanceBP.GetInputs
// 0x0010 (0x0010 - 0x0000)
struct X6SequencerTrackInstanceBP_GetInputs final
{
public:
	TArray<struct FX6SequencerTrackInstanceInput> ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(X6SequencerTrackInstanceBP_GetInputs) == 0x000008, "Wrong alignment on X6SequencerTrackInstanceBP_GetInputs");
static_assert(sizeof(X6SequencerTrackInstanceBP_GetInputs) == 0x000010, "Wrong size on X6SequencerTrackInstanceBP_GetInputs");
static_assert(offsetof(X6SequencerTrackInstanceBP_GetInputs, ReturnValue) == 0x000000, "Member 'X6SequencerTrackInstanceBP_GetInputs::ReturnValue' has a wrong offset!");

// Function X6CustomizableSequencerTracks.X6SequencerTrackInstanceBP.GetNumInputs
// 0x0004 (0x0004 - 0x0000)
struct X6SequencerTrackInstanceBP_GetNumInputs final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(X6SequencerTrackInstanceBP_GetNumInputs) == 0x000004, "Wrong alignment on X6SequencerTrackInstanceBP_GetNumInputs");
static_assert(sizeof(X6SequencerTrackInstanceBP_GetNumInputs) == 0x000004, "Wrong size on X6SequencerTrackInstanceBP_GetNumInputs");
static_assert(offsetof(X6SequencerTrackInstanceBP_GetNumInputs, ReturnValue) == 0x000000, "Member 'X6SequencerTrackInstanceBP_GetNumInputs::ReturnValue' has a wrong offset!");

}

