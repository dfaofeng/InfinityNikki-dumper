#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ForcedLODSection

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "X6CustomizableSequencerTracks_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ForcedLODSection.ForcedLODSection_C
// 0x0060 (0x01A0 - 0x0140)
class UForcedLODSection_C final : public UX6SequencerSectionBP
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0140(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	int32                                         ForcedLodModel;                                    // 0x0148(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UMeshComponent*, int32>            MeshComponents2ForcedLODModel;                     // 0x0150(0x0050)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, ContainsInstancedReference, AdvancedDisplay)

public:
	void ExecuteUbergraph_ForcedLODSection(int32 EntryPoint);
	void K2_OnSectionBegin_WithBindingObject(class UObject* BindingObject);
	void K2_OnSectionEnd_WithBindingObject(class UObject* BindingObject);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ForcedLODSection_C">();
	}
	static class UForcedLODSection_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UForcedLODSection_C>();
	}
};
static_assert(alignof(UForcedLODSection_C) == 0x000008, "Wrong alignment on UForcedLODSection_C");
static_assert(sizeof(UForcedLODSection_C) == 0x0001A0, "Wrong size on UForcedLODSection_C");
static_assert(offsetof(UForcedLODSection_C, UberGraphFrame) == 0x000140, "Member 'UForcedLODSection_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UForcedLODSection_C, ForcedLodModel) == 0x000148, "Member 'UForcedLODSection_C::ForcedLodModel' has a wrong offset!");
static_assert(offsetof(UForcedLODSection_C, MeshComponents2ForcedLODModel) == 0x000150, "Member 'UForcedLODSection_C::MeshComponents2ForcedLODModel' has a wrong offset!");

}

