#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EffectWindZone

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_EffectWindZone.BP_EffectWindZone_C.SetIntensity
// 0x0008 (0x0008 - 0x0000)
struct BP_EffectWindZone_C_SetIntensity final
{
public:
	double                                        Intensity;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EffectWindZone_C_SetIntensity) == 0x000008, "Wrong alignment on BP_EffectWindZone_C_SetIntensity");
static_assert(sizeof(BP_EffectWindZone_C_SetIntensity) == 0x000008, "Wrong size on BP_EffectWindZone_C_SetIntensity");
static_assert(offsetof(BP_EffectWindZone_C_SetIntensity, Intensity) == 0x000000, "Member 'BP_EffectWindZone_C_SetIntensity::Intensity' has a wrong offset!");

// Function BP_EffectWindZone.BP_EffectWindZone_C.SetIsStatic
// 0x0001 (0x0001 - 0x0000)
struct BP_EffectWindZone_C_SetIsStatic final
{
public:
	bool                                          bStatic;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EffectWindZone_C_SetIsStatic) == 0x000001, "Wrong alignment on BP_EffectWindZone_C_SetIsStatic");
static_assert(sizeof(BP_EffectWindZone_C_SetIsStatic) == 0x000001, "Wrong size on BP_EffectWindZone_C_SetIsStatic");
static_assert(offsetof(BP_EffectWindZone_C_SetIsStatic, bStatic) == 0x000000, "Member 'BP_EffectWindZone_C_SetIsStatic::bStatic' has a wrong offset!");

// Function BP_EffectWindZone.BP_EffectWindZone_C.SetRadius
// 0x0008 (0x0008 - 0x0000)
struct BP_EffectWindZone_C_SetRadius final
{
public:
	double                                        Radius_0;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EffectWindZone_C_SetRadius) == 0x000008, "Wrong alignment on BP_EffectWindZone_C_SetRadius");
static_assert(sizeof(BP_EffectWindZone_C_SetRadius) == 0x000008, "Wrong size on BP_EffectWindZone_C_SetRadius");
static_assert(offsetof(BP_EffectWindZone_C_SetRadius, Radius_0) == 0x000000, "Member 'BP_EffectWindZone_C_SetRadius::Radius_0' has a wrong offset!");

// Function BP_EffectWindZone.BP_EffectWindZone_C.SetSize
// 0x0008 (0x0008 - 0x0000)
struct BP_EffectWindZone_C_SetSize final
{
public:
	double                                        Size;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EffectWindZone_C_SetSize) == 0x000008, "Wrong alignment on BP_EffectWindZone_C_SetSize");
static_assert(sizeof(BP_EffectWindZone_C_SetSize) == 0x000008, "Wrong size on BP_EffectWindZone_C_SetSize");
static_assert(offsetof(BP_EffectWindZone_C_SetSize, Size) == 0x000000, "Member 'BP_EffectWindZone_C_SetSize::Size' has a wrong offset!");

// Function BP_EffectWindZone.BP_EffectWindZone_C.SetStaticSpeed
// 0x0008 (0x0008 - 0x0000)
struct BP_EffectWindZone_C_SetStaticSpeed final
{
public:
	double                                        Speed;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EffectWindZone_C_SetStaticSpeed) == 0x000008, "Wrong alignment on BP_EffectWindZone_C_SetStaticSpeed");
static_assert(sizeof(BP_EffectWindZone_C_SetStaticSpeed) == 0x000008, "Wrong size on BP_EffectWindZone_C_SetStaticSpeed");
static_assert(offsetof(BP_EffectWindZone_C_SetStaticSpeed, Speed) == 0x000000, "Member 'BP_EffectWindZone_C_SetStaticSpeed::Speed' has a wrong offset!");

// Function BP_EffectWindZone.BP_EffectWindZone_C.SetWaterEffectVelocity
// 0x0018 (0x0018 - 0x0000)
struct BP_EffectWindZone_C_SetWaterEffectVelocity final
{
public:
	struct FVector                                Velocity;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EffectWindZone_C_SetWaterEffectVelocity) == 0x000008, "Wrong alignment on BP_EffectWindZone_C_SetWaterEffectVelocity");
static_assert(sizeof(BP_EffectWindZone_C_SetWaterEffectVelocity) == 0x000018, "Wrong size on BP_EffectWindZone_C_SetWaterEffectVelocity");
static_assert(offsetof(BP_EffectWindZone_C_SetWaterEffectVelocity, Velocity) == 0x000000, "Member 'BP_EffectWindZone_C_SetWaterEffectVelocity::Velocity' has a wrong offset!");

// Function BP_EffectWindZone.BP_EffectWindZone_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct BP_EffectWindZone_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_EffectWindZone_C_GetModuleName) == 0x000008, "Wrong alignment on BP_EffectWindZone_C_GetModuleName");
static_assert(sizeof(BP_EffectWindZone_C_GetModuleName) == 0x000010, "Wrong size on BP_EffectWindZone_C_GetModuleName");
static_assert(offsetof(BP_EffectWindZone_C_GetModuleName, ReturnValue) == 0x000000, "Member 'BP_EffectWindZone_C_GetModuleName::ReturnValue' has a wrong offset!");

}

