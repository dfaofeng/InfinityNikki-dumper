#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AmbientConfigCameraVolumeActor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Enum_AmbientCamera_structs.hpp"
#include "BP_CameraVolumeActorBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AmbientConfigCameraVolumeActor.BP_AmbientConfigCameraVolumeActor_C
// 0x00B0 (0x06B0 - 0x0600)
class ABP_AmbientConfigCameraVolumeActor_C final : public ABP_CameraVolumeActorBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AmbientConfigCameraVolumeActor_C; // 0x05F8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TMap<Enum_AmbientCamera, class FName>         CameraAmbientMap;                                  // 0x0600(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	Enum_AmbientCamera                            CameraAmbientType;                                 // 0x0650(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_651[0x7];                                      // 0x0651(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UAdvancedCamera*, int32>           CameraIndexMap;                                    // 0x0658(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void ReceiveBeginPlay();
	void ReceiveActorEndOverlap(class AActor* OtherActor);
	void ReceiveActorBeginOverlap(class AActor* OtherActor);
	void OnTargetActorEndOverlap(class AActor* InActor);
	void OnTargetActorBeginOverlap(class AActor* InActor);
	void ExecuteUbergraph_BP_AmbientConfigCameraVolumeActor(int32 EntryPoint);
	void BP_RemoveCameraConfig(class UAdvancedCamera* AdvancedCamera, int32 Index_0);

	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AmbientConfigCameraVolumeActor_C">();
	}
	static class ABP_AmbientConfigCameraVolumeActor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AmbientConfigCameraVolumeActor_C>();
	}
};
static_assert(alignof(ABP_AmbientConfigCameraVolumeActor_C) == 0x000010, "Wrong alignment on ABP_AmbientConfigCameraVolumeActor_C");
static_assert(sizeof(ABP_AmbientConfigCameraVolumeActor_C) == 0x0006B0, "Wrong size on ABP_AmbientConfigCameraVolumeActor_C");
static_assert(offsetof(ABP_AmbientConfigCameraVolumeActor_C, UberGraphFrame_BP_AmbientConfigCameraVolumeActor_C) == 0x0005F8, "Member 'ABP_AmbientConfigCameraVolumeActor_C::UberGraphFrame_BP_AmbientConfigCameraVolumeActor_C' has a wrong offset!");
static_assert(offsetof(ABP_AmbientConfigCameraVolumeActor_C, CameraAmbientMap) == 0x000600, "Member 'ABP_AmbientConfigCameraVolumeActor_C::CameraAmbientMap' has a wrong offset!");
static_assert(offsetof(ABP_AmbientConfigCameraVolumeActor_C, CameraAmbientType) == 0x000650, "Member 'ABP_AmbientConfigCameraVolumeActor_C::CameraAmbientType' has a wrong offset!");
static_assert(offsetof(ABP_AmbientConfigCameraVolumeActor_C, CameraIndexMap) == 0x000658, "Member 'ABP_AmbientConfigCameraVolumeActor_C::CameraIndexMap' has a wrong offset!");

}

