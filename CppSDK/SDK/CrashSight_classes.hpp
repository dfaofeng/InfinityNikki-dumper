#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CrashSight

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class CrashSight.CrashSightProjectSettings
// 0x0048 (0x0070 - 0x0028)
class UCrashSightProjectSettings final : public UObject
{
public:
	class FString                                 AppID;                                             // 0x0028(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AppKey;                                            // 0x0038(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 URL;                                               // 0x0048(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Area;                                              // 0x0058(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsDebug;                                           // 0x0068(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseEncryptLog;                                    // 0x0069(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CrashSightProjectSettings">();
	}
	static class UCrashSightProjectSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCrashSightProjectSettings>();
	}
};
static_assert(alignof(UCrashSightProjectSettings) == 0x000008, "Wrong alignment on UCrashSightProjectSettings");
static_assert(sizeof(UCrashSightProjectSettings) == 0x000070, "Wrong size on UCrashSightProjectSettings");
static_assert(offsetof(UCrashSightProjectSettings, AppID) == 0x000028, "Member 'UCrashSightProjectSettings::AppID' has a wrong offset!");
static_assert(offsetof(UCrashSightProjectSettings, AppKey) == 0x000038, "Member 'UCrashSightProjectSettings::AppKey' has a wrong offset!");
static_assert(offsetof(UCrashSightProjectSettings, URL) == 0x000048, "Member 'UCrashSightProjectSettings::URL' has a wrong offset!");
static_assert(offsetof(UCrashSightProjectSettings, Area) == 0x000058, "Member 'UCrashSightProjectSettings::Area' has a wrong offset!");
static_assert(offsetof(UCrashSightProjectSettings, IsDebug) == 0x000068, "Member 'UCrashSightProjectSettings::IsDebug' has a wrong offset!");
static_assert(offsetof(UCrashSightProjectSettings, bUseEncryptLog) == 0x000069, "Member 'UCrashSightProjectSettings::bUseEncryptLog' has a wrong offset!");

// Class CrashSight.PaperCrashSightLibrary
// 0x0000 (0x0028 - 0x0028)
class UPaperCrashSightLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void AddSceneData(const class FString& Key, const class FString& Value);
	static void ConfigDebugMode(bool Enable);
	static bool IsInitialized();
	static void PrintLog(int32 Level, const class FString& LogStr);
	static void ReportException(int32 Type, const class FString& Name_0, const class FString& Reason, const class FString& StackTrace, const class FString& Extras, bool quit, int32 dumpNativeType);
	static void ReportLogInfo(const class FString& MsgType, const class FString& msg);
	static void SetAppVersion(const class FString& appVersion);
	static void SetDeviceId(const class FString& DeviceID);
	static void SetLogPath(const class FString& LogPath);
	static void SetScene(int32 sceneId);
	static void SetUserId(const class FString& UserId);
	static void SetUserValue(const class FString& Key, const class FString& Value);
	static void TestJavaCrash();
	static void TestNativeCrash();
	static void TestOcCrash();
	static void TestOomCrash();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PaperCrashSightLibrary">();
	}
	static class UPaperCrashSightLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPaperCrashSightLibrary>();
	}
};
static_assert(alignof(UPaperCrashSightLibrary) == 0x000008, "Wrong alignment on UPaperCrashSightLibrary");
static_assert(sizeof(UPaperCrashSightLibrary) == 0x000028, "Wrong size on UPaperCrashSightLibrary");

}

