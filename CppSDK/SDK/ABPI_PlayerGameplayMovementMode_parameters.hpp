#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABPI_PlayerGameplayMovementMode

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ABPI_PlayerGameplayMovementMode.ABPI_PlayerGameplayMovementMode_C.AnimLayer_AimOffset
// 0x0020 (0x0020 - 0x0000)
struct ABPI_PlayerGameplayMovementMode_C_AnimLayer_AimOffset final
{
public:
	struct FPoseLink                              InPoseForAimOffset;                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              AnimLayer_AimOffset_0;                             // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_AimOffset) == 0x000008, "Wrong alignment on ABPI_PlayerGameplayMovementMode_C_AnimLayer_AimOffset");
static_assert(sizeof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_AimOffset) == 0x000020, "Wrong size on ABPI_PlayerGameplayMovementMode_C_AnimLayer_AimOffset");
static_assert(offsetof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_AimOffset, InPoseForAimOffset) == 0x000000, "Member 'ABPI_PlayerGameplayMovementMode_C_AnimLayer_AimOffset::InPoseForAimOffset' has a wrong offset!");
static_assert(offsetof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_AimOffset, AnimLayer_AimOffset_0) == 0x000010, "Member 'ABPI_PlayerGameplayMovementMode_C_AnimLayer_AimOffset::AnimLayer_AimOffset_0' has a wrong offset!");

// Function ABPI_PlayerGameplayMovementMode.ABPI_PlayerGameplayMovementMode_C.AnimLayer_BehaviorAdditiveMode
// 0x0020 (0x0020 - 0x0000)
struct ABPI_PlayerGameplayMovementMode_C_AnimLayer_BehaviorAdditiveMode final
{
public:
	struct FPoseLink                              InPoseForPlayerBehavior;                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              AnimLayer_BehaviorAdditiveMode_0;                  // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_BehaviorAdditiveMode) == 0x000008, "Wrong alignment on ABPI_PlayerGameplayMovementMode_C_AnimLayer_BehaviorAdditiveMode");
static_assert(sizeof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_BehaviorAdditiveMode) == 0x000020, "Wrong size on ABPI_PlayerGameplayMovementMode_C_AnimLayer_BehaviorAdditiveMode");
static_assert(offsetof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_BehaviorAdditiveMode, InPoseForPlayerBehavior) == 0x000000, "Member 'ABPI_PlayerGameplayMovementMode_C_AnimLayer_BehaviorAdditiveMode::InPoseForPlayerBehavior' has a wrong offset!");
static_assert(offsetof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_BehaviorAdditiveMode, AnimLayer_BehaviorAdditiveMode_0) == 0x000010, "Member 'ABPI_PlayerGameplayMovementMode_C_AnimLayer_BehaviorAdditiveMode::AnimLayer_BehaviorAdditiveMode_0' has a wrong offset!");

// Function ABPI_PlayerGameplayMovementMode.ABPI_PlayerGameplayMovementMode_C.AnimLayer_BehaviorConnectionMode
// 0x0020 (0x0020 - 0x0000)
struct ABPI_PlayerGameplayMovementMode_C_AnimLayer_BehaviorConnectionMode final
{
public:
	struct FPoseLink                              InPoseToConnectionMode;                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              AnimLayer_BehaviorConnectionMode_0;                // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_BehaviorConnectionMode) == 0x000008, "Wrong alignment on ABPI_PlayerGameplayMovementMode_C_AnimLayer_BehaviorConnectionMode");
static_assert(sizeof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_BehaviorConnectionMode) == 0x000020, "Wrong size on ABPI_PlayerGameplayMovementMode_C_AnimLayer_BehaviorConnectionMode");
static_assert(offsetof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_BehaviorConnectionMode, InPoseToConnectionMode) == 0x000000, "Member 'ABPI_PlayerGameplayMovementMode_C_AnimLayer_BehaviorConnectionMode::InPoseToConnectionMode' has a wrong offset!");
static_assert(offsetof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_BehaviorConnectionMode, AnimLayer_BehaviorConnectionMode_0) == 0x000010, "Member 'ABPI_PlayerGameplayMovementMode_C_AnimLayer_BehaviorConnectionMode::AnimLayer_BehaviorConnectionMode_0' has a wrong offset!");

// Function ABPI_PlayerGameplayMovementMode.ABPI_PlayerGameplayMovementMode_C.AnimLayer_CombatMovement
// 0x0010 (0x0010 - 0x0000)
struct ABPI_PlayerGameplayMovementMode_C_AnimLayer_CombatMovement final
{
public:
	struct FPoseLink                              AnimLayer_CombatMovement_0;                        // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_CombatMovement) == 0x000008, "Wrong alignment on ABPI_PlayerGameplayMovementMode_C_AnimLayer_CombatMovement");
static_assert(sizeof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_CombatMovement) == 0x000010, "Wrong size on ABPI_PlayerGameplayMovementMode_C_AnimLayer_CombatMovement");
static_assert(offsetof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_CombatMovement, AnimLayer_CombatMovement_0) == 0x000000, "Member 'ABPI_PlayerGameplayMovementMode_C_AnimLayer_CombatMovement::AnimLayer_CombatMovement_0' has a wrong offset!");

// Function ABPI_PlayerGameplayMovementMode.ABPI_PlayerGameplayMovementMode_C.AnimLayer_EquipmentAdditiveMode
// 0x0020 (0x0020 - 0x0000)
struct ABPI_PlayerGameplayMovementMode_C_AnimLayer_EquipmentAdditiveMode final
{
public:
	struct FPoseLink                              InPoseForEquipment;                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              AnimLayer_EquipmentAdditiveMode_0;                 // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_EquipmentAdditiveMode) == 0x000008, "Wrong alignment on ABPI_PlayerGameplayMovementMode_C_AnimLayer_EquipmentAdditiveMode");
static_assert(sizeof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_EquipmentAdditiveMode) == 0x000020, "Wrong size on ABPI_PlayerGameplayMovementMode_C_AnimLayer_EquipmentAdditiveMode");
static_assert(offsetof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_EquipmentAdditiveMode, InPoseForEquipment) == 0x000000, "Member 'ABPI_PlayerGameplayMovementMode_C_AnimLayer_EquipmentAdditiveMode::InPoseForEquipment' has a wrong offset!");
static_assert(offsetof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_EquipmentAdditiveMode, AnimLayer_EquipmentAdditiveMode_0) == 0x000010, "Member 'ABPI_PlayerGameplayMovementMode_C_AnimLayer_EquipmentAdditiveMode::AnimLayer_EquipmentAdditiveMode_0' has a wrong offset!");

// Function ABPI_PlayerGameplayMovementMode.ABPI_PlayerGameplayMovementMode_C.AnimLayer_Jump
// 0x0010 (0x0010 - 0x0000)
struct ABPI_PlayerGameplayMovementMode_C_AnimLayer_Jump final
{
public:
	struct FPoseLink                              AnimLayer_Jump_0;                                  // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_Jump) == 0x000008, "Wrong alignment on ABPI_PlayerGameplayMovementMode_C_AnimLayer_Jump");
static_assert(sizeof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_Jump) == 0x000010, "Wrong size on ABPI_PlayerGameplayMovementMode_C_AnimLayer_Jump");
static_assert(offsetof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_Jump, AnimLayer_Jump_0) == 0x000000, "Member 'ABPI_PlayerGameplayMovementMode_C_AnimLayer_Jump::AnimLayer_Jump_0' has a wrong offset!");

// Function ABPI_PlayerGameplayMovementMode.ABPI_PlayerGameplayMovementMode_C.AnimLayer_Land
// 0x0010 (0x0010 - 0x0000)
struct ABPI_PlayerGameplayMovementMode_C_AnimLayer_Land final
{
public:
	struct FPoseLink                              AnimLayer_Land_0;                                  // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_Land) == 0x000008, "Wrong alignment on ABPI_PlayerGameplayMovementMode_C_AnimLayer_Land");
static_assert(sizeof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_Land) == 0x000010, "Wrong size on ABPI_PlayerGameplayMovementMode_C_AnimLayer_Land");
static_assert(offsetof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_Land, AnimLayer_Land_0) == 0x000000, "Member 'ABPI_PlayerGameplayMovementMode_C_AnimLayer_Land::AnimLayer_Land_0' has a wrong offset!");

// Function ABPI_PlayerGameplayMovementMode.ABPI_PlayerGameplayMovementMode_C.AnimLayer_MovementDependObject
// 0x0010 (0x0010 - 0x0000)
struct ABPI_PlayerGameplayMovementMode_C_AnimLayer_MovementDependObject final
{
public:
	struct FPoseLink                              AnimLayer_MovementDependObject_0;                  // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_MovementDependObject) == 0x000008, "Wrong alignment on ABPI_PlayerGameplayMovementMode_C_AnimLayer_MovementDependObject");
static_assert(sizeof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_MovementDependObject) == 0x000010, "Wrong size on ABPI_PlayerGameplayMovementMode_C_AnimLayer_MovementDependObject");
static_assert(offsetof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_MovementDependObject, AnimLayer_MovementDependObject_0) == 0x000000, "Member 'ABPI_PlayerGameplayMovementMode_C_AnimLayer_MovementDependObject::AnimLayer_MovementDependObject_0' has a wrong offset!");

// Function ABPI_PlayerGameplayMovementMode.ABPI_PlayerGameplayMovementMode_C.AnimLayer_NPCAdditiveBehavior
// 0x0020 (0x0020 - 0x0000)
struct ABPI_PlayerGameplayMovementMode_C_AnimLayer_NPCAdditiveBehavior final
{
public:
	struct FPoseLink                              InPose;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              AnimLayer_NPCAdditiveBehavior_0;                   // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_NPCAdditiveBehavior) == 0x000008, "Wrong alignment on ABPI_PlayerGameplayMovementMode_C_AnimLayer_NPCAdditiveBehavior");
static_assert(sizeof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_NPCAdditiveBehavior) == 0x000020, "Wrong size on ABPI_PlayerGameplayMovementMode_C_AnimLayer_NPCAdditiveBehavior");
static_assert(offsetof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_NPCAdditiveBehavior, InPose) == 0x000000, "Member 'ABPI_PlayerGameplayMovementMode_C_AnimLayer_NPCAdditiveBehavior::InPose' has a wrong offset!");
static_assert(offsetof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_NPCAdditiveBehavior, AnimLayer_NPCAdditiveBehavior_0) == 0x000010, "Member 'ABPI_PlayerGameplayMovementMode_C_AnimLayer_NPCAdditiveBehavior::AnimLayer_NPCAdditiveBehavior_0' has a wrong offset!");

// Function ABPI_PlayerGameplayMovementMode.ABPI_PlayerGameplayMovementMode_C.AnimLayer_NPCBehavior
// 0x0020 (0x0020 - 0x0000)
struct ABPI_PlayerGameplayMovementMode_C_AnimLayer_NPCBehavior final
{
public:
	struct FPoseLink                              InPose_0;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              AnimLayer_NPCBehavior_0;                           // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_NPCBehavior) == 0x000008, "Wrong alignment on ABPI_PlayerGameplayMovementMode_C_AnimLayer_NPCBehavior");
static_assert(sizeof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_NPCBehavior) == 0x000020, "Wrong size on ABPI_PlayerGameplayMovementMode_C_AnimLayer_NPCBehavior");
static_assert(offsetof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_NPCBehavior, InPose_0) == 0x000000, "Member 'ABPI_PlayerGameplayMovementMode_C_AnimLayer_NPCBehavior::InPose_0' has a wrong offset!");
static_assert(offsetof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_NPCBehavior, AnimLayer_NPCBehavior_0) == 0x000010, "Member 'ABPI_PlayerGameplayMovementMode_C_AnimLayer_NPCBehavior::AnimLayer_NPCBehavior_0' has a wrong offset!");

// Function ABPI_PlayerGameplayMovementMode.ABPI_PlayerGameplayMovementMode_C.AnimLayer_PlayerControllingTool
// 0x0010 (0x0010 - 0x0000)
struct ABPI_PlayerGameplayMovementMode_C_AnimLayer_PlayerControllingTool final
{
public:
	struct FPoseLink                              AnimLayer_PlayerControllingTool_0;                 // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_PlayerControllingTool) == 0x000008, "Wrong alignment on ABPI_PlayerGameplayMovementMode_C_AnimLayer_PlayerControllingTool");
static_assert(sizeof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_PlayerControllingTool) == 0x000010, "Wrong size on ABPI_PlayerGameplayMovementMode_C_AnimLayer_PlayerControllingTool");
static_assert(offsetof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_PlayerControllingTool, AnimLayer_PlayerControllingTool_0) == 0x000000, "Member 'ABPI_PlayerGameplayMovementMode_C_AnimLayer_PlayerControllingTool::AnimLayer_PlayerControllingTool_0' has a wrong offset!");

// Function ABPI_PlayerGameplayMovementMode.ABPI_PlayerGameplayMovementMode_C.AnimLayer_PlayerRegularMovement
// 0x0010 (0x0010 - 0x0000)
struct ABPI_PlayerGameplayMovementMode_C_AnimLayer_PlayerRegularMovement final
{
public:
	struct FPoseLink                              AnimLayer_PlayerRegularMovement_0;                 // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_PlayerRegularMovement) == 0x000008, "Wrong alignment on ABPI_PlayerGameplayMovementMode_C_AnimLayer_PlayerRegularMovement");
static_assert(sizeof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_PlayerRegularMovement) == 0x000010, "Wrong size on ABPI_PlayerGameplayMovementMode_C_AnimLayer_PlayerRegularMovement");
static_assert(offsetof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_PlayerRegularMovement, AnimLayer_PlayerRegularMovement_0) == 0x000000, "Member 'ABPI_PlayerGameplayMovementMode_C_AnimLayer_PlayerRegularMovement::AnimLayer_PlayerRegularMovement_0' has a wrong offset!");

// Function ABPI_PlayerGameplayMovementMode.ABPI_PlayerGameplayMovementMode_C.AnimLayer_SpecialSurfaceMovement
// 0x0010 (0x0010 - 0x0000)
struct ABPI_PlayerGameplayMovementMode_C_AnimLayer_SpecialSurfaceMovement final
{
public:
	struct FPoseLink                              AnimLayer_SpecialSurfaceMovement_0;                // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_SpecialSurfaceMovement) == 0x000008, "Wrong alignment on ABPI_PlayerGameplayMovementMode_C_AnimLayer_SpecialSurfaceMovement");
static_assert(sizeof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_SpecialSurfaceMovement) == 0x000010, "Wrong size on ABPI_PlayerGameplayMovementMode_C_AnimLayer_SpecialSurfaceMovement");
static_assert(offsetof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_SpecialSurfaceMovement, AnimLayer_SpecialSurfaceMovement_0) == 0x000000, "Member 'ABPI_PlayerGameplayMovementMode_C_AnimLayer_SpecialSurfaceMovement::AnimLayer_SpecialSurfaceMovement_0' has a wrong offset!");

// Function ABPI_PlayerGameplayMovementMode.ABPI_PlayerGameplayMovementMode_C.AnimLayer_StrafeMovement
// 0x0010 (0x0010 - 0x0000)
struct ABPI_PlayerGameplayMovementMode_C_AnimLayer_StrafeMovement final
{
public:
	struct FPoseLink                              AnimLayer_StrafeMovement_0;                        // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_StrafeMovement) == 0x000008, "Wrong alignment on ABPI_PlayerGameplayMovementMode_C_AnimLayer_StrafeMovement");
static_assert(sizeof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_StrafeMovement) == 0x000010, "Wrong size on ABPI_PlayerGameplayMovementMode_C_AnimLayer_StrafeMovement");
static_assert(offsetof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_StrafeMovement, AnimLayer_StrafeMovement_0) == 0x000000, "Member 'ABPI_PlayerGameplayMovementMode_C_AnimLayer_StrafeMovement::AnimLayer_StrafeMovement_0' has a wrong offset!");

// Function ABPI_PlayerGameplayMovementMode.ABPI_PlayerGameplayMovementMode_C.AnimLayer_UsingCarrierMovement
// 0x0010 (0x0010 - 0x0000)
struct ABPI_PlayerGameplayMovementMode_C_AnimLayer_UsingCarrierMovement final
{
public:
	struct FPoseLink                              AnimLayer_UsingCarrierMovement_0;                  // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_UsingCarrierMovement) == 0x000008, "Wrong alignment on ABPI_PlayerGameplayMovementMode_C_AnimLayer_UsingCarrierMovement");
static_assert(sizeof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_UsingCarrierMovement) == 0x000010, "Wrong size on ABPI_PlayerGameplayMovementMode_C_AnimLayer_UsingCarrierMovement");
static_assert(offsetof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_UsingCarrierMovement, AnimLayer_UsingCarrierMovement_0) == 0x000000, "Member 'ABPI_PlayerGameplayMovementMode_C_AnimLayer_UsingCarrierMovement::AnimLayer_UsingCarrierMovement_0' has a wrong offset!");

// Function ABPI_PlayerGameplayMovementMode.ABPI_PlayerGameplayMovementMode_C.AnimLayer_WhiteBoxMovement
// 0x0010 (0x0010 - 0x0000)
struct ABPI_PlayerGameplayMovementMode_C_AnimLayer_WhiteBoxMovement final
{
public:
	struct FPoseLink                              AnimLayer_WhiteBoxMovement_0;                      // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_WhiteBoxMovement) == 0x000008, "Wrong alignment on ABPI_PlayerGameplayMovementMode_C_AnimLayer_WhiteBoxMovement");
static_assert(sizeof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_WhiteBoxMovement) == 0x000010, "Wrong size on ABPI_PlayerGameplayMovementMode_C_AnimLayer_WhiteBoxMovement");
static_assert(offsetof(ABPI_PlayerGameplayMovementMode_C_AnimLayer_WhiteBoxMovement, AnimLayer_WhiteBoxMovement_0) == 0x000000, "Member 'ABPI_PlayerGameplayMovementMode_C_AnimLayer_WhiteBoxMovement::AnimLayer_WhiteBoxMovement_0' has a wrong offset!");

}

