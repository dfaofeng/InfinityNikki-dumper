#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MultiplayerMovePlatform_Base

#include "Basic.hpp"

#include "BP_MultiplayerMovePlatform_Base_classes.hpp"
#include "BP_MultiplayerMovePlatform_Base_parameters.hpp"


namespace SDK
{

// Function BP_MultiplayerMovePlatform_Base.BP_MultiplayerMovePlatform_Base_C.AdjustRotation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MultiplayerMovePlatform_Base_C::AdjustRotation(double DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiplayerMovePlatform_Base_C", "AdjustRotation");

	Params::BP_MultiplayerMovePlatform_Base_C_AdjustRotation Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MultiplayerMovePlatform_Base.BP_MultiplayerMovePlatform_Base_C.BndEvt__BP_MultiplayerMovePlatform_Base_BP_SplineTrackComponent_K2Node_ComponentBoundEvent_1_OnReacheEnd__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    bForward                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   PointIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MultiplayerMovePlatform_Base_C::BndEvt__BP_MultiplayerMovePlatform_Base_BP_SplineTrackComponent_K2Node_ComponentBoundEvent_1_OnReacheEnd__DelegateSignature(bool bForward, int32 PointIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiplayerMovePlatform_Base_C", "BndEvt__BP_MultiplayerMovePlatform_Base_BP_SplineTrackComponent_K2Node_ComponentBoundEvent_1_OnReacheEnd__DelegateSignature");

	Params::BP_MultiplayerMovePlatform_Base_C_BndEvt__BP_MultiplayerMovePlatform_Base_BP_SplineTrackComponent_K2Node_ComponentBoundEvent_1_OnReacheEnd__DelegateSignature Parms{};

	Parms.bForward = bForward;
	Parms.PointIndex = PointIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MultiplayerMovePlatform_Base.BP_MultiplayerMovePlatform_Base_C.BndEvt__BP_MultiplayerMovePlatform_Base_LeaveTriggerVolume_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MultiplayerMovePlatform_Base_C::BndEvt__BP_MultiplayerMovePlatform_Base_LeaveTriggerVolume_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiplayerMovePlatform_Base_C", "BndEvt__BP_MultiplayerMovePlatform_Base_LeaveTriggerVolume_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature");

	Params::BP_MultiplayerMovePlatform_Base_C_BndEvt__BP_MultiplayerMovePlatform_Base_LeaveTriggerVolume_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MultiplayerMovePlatform_Base.BP_MultiplayerMovePlatform_Base_C.BP_EnableLocalChairs
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MultiplayerMovePlatform_Base_C::BP_EnableLocalChairs(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiplayerMovePlatform_Base_C", "BP_EnableLocalChairs");

	Params::BP_MultiplayerMovePlatform_Base_C_BP_EnableLocalChairs Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MultiplayerMovePlatform_Base.BP_MultiplayerMovePlatform_Base_C.BP_Init
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MultiplayerMovePlatform_Base_C::BP_Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiplayerMovePlatform_Base_C", "BP_Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MultiplayerMovePlatform_Base.BP_MultiplayerMovePlatform_Base_C.BP_OnEndInteract
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCompleted                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MultiplayerMovePlatform_Base_C::BP_OnEndInteract(bool bCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiplayerMovePlatform_Base_C", "BP_OnEndInteract");

	Params::BP_MultiplayerMovePlatform_Base_C_BP_OnEndInteract Parms{};

	Parms.bCompleted = bCompleted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MultiplayerMovePlatform_Base.BP_MultiplayerMovePlatform_Base_C.BP_OnReachEnd
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MultiplayerMovePlatform_Base_C::BP_OnReachEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiplayerMovePlatform_Base_C", "BP_OnReachEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MultiplayerMovePlatform_Base.BP_MultiplayerMovePlatform_Base_C.BP_PlayerGetOff
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCompleted                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MultiplayerMovePlatform_Base_C::BP_PlayerGetOff(bool bCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiplayerMovePlatform_Base_C", "BP_PlayerGetOff");

	Params::BP_MultiplayerMovePlatform_Base_C_BP_PlayerGetOff Parms{};

	Parms.bCompleted = bCompleted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MultiplayerMovePlatform_Base.BP_MultiplayerMovePlatform_Base_C.BP_PlayerGetOn
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MultiplayerMovePlatform_Base_C::BP_PlayerGetOn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiplayerMovePlatform_Base_C", "BP_PlayerGetOn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MultiplayerMovePlatform_Base.BP_MultiplayerMovePlatform_Base_C.BP_ResetRotation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MultiplayerMovePlatform_Base_C::BP_ResetRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiplayerMovePlatform_Base_C", "BP_ResetRotation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MultiplayerMovePlatform_Base.BP_MultiplayerMovePlatform_Base_C.BP_StartMove
// (BlueprintCallable, BlueprintEvent)

void ABP_MultiplayerMovePlatform_Base_C::BP_StartMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiplayerMovePlatform_Base_C", "BP_StartMove");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MultiplayerMovePlatform_Base.BP_MultiplayerMovePlatform_Base_C.BP_StopMove
// (BlueprintCallable, BlueprintEvent)

void ABP_MultiplayerMovePlatform_Base_C::BP_StopMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiplayerMovePlatform_Base_C", "BP_StopMove");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MultiplayerMovePlatform_Base.BP_MultiplayerMovePlatform_Base_C.ExecuteUbergraph_BP_MultiplayerMovePlatform_Base
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MultiplayerMovePlatform_Base_C::ExecuteUbergraph_BP_MultiplayerMovePlatform_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiplayerMovePlatform_Base_C", "ExecuteUbergraph_BP_MultiplayerMovePlatform_Base");

	Params::BP_MultiplayerMovePlatform_Base_C_ExecuteUbergraph_BP_MultiplayerMovePlatform_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MultiplayerMovePlatform_Base.BP_MultiplayerMovePlatform_Base_C.On_Multi_ActiveSuccess
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Other_player_actor                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// E_EInteractSuccRet                      Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MultiplayerMovePlatform_Base_C::On_Multi_ActiveSuccess(class AActor* Other_player_actor, E_EInteractSuccRet Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiplayerMovePlatform_Base_C", "On_Multi_ActiveSuccess");

	Params::BP_MultiplayerMovePlatform_Base_C_On_Multi_ActiveSuccess Parms{};

	Parms.Other_player_actor = Other_player_actor;
	Parms.Result = Result;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MultiplayerMovePlatform_Base.BP_MultiplayerMovePlatform_Base_C.On_Multi_InteractiveObjActive
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Data                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class AActor*                           Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_MultiplayerMovePlatform_Base_C::On_Multi_InteractiveObjActive(const class FString& Data, class AActor* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiplayerMovePlatform_Base_C", "On_Multi_InteractiveObjActive");

	Params::BP_MultiplayerMovePlatform_Base_C_On_Multi_InteractiveObjActive Parms{};

	Parms.Data = std::move(Data);
	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MultiplayerMovePlatform_Base.BP_MultiplayerMovePlatform_Base_C.OnBlendOut_3FA2443E4959FA0322D075B4FEA0A8E3
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MultiplayerMovePlatform_Base_C::OnBlendOut_3FA2443E4959FA0322D075B4FEA0A8E3(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiplayerMovePlatform_Base_C", "OnBlendOut_3FA2443E4959FA0322D075B4FEA0A8E3");

	Params::BP_MultiplayerMovePlatform_Base_C_OnBlendOut_3FA2443E4959FA0322D075B4FEA0A8E3 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MultiplayerMovePlatform_Base.BP_MultiplayerMovePlatform_Base_C.OnCompleted_3FA2443E4959FA0322D075B4FEA0A8E3
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MultiplayerMovePlatform_Base_C::OnCompleted_3FA2443E4959FA0322D075B4FEA0A8E3(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiplayerMovePlatform_Base_C", "OnCompleted_3FA2443E4959FA0322D075B4FEA0A8E3");

	Params::BP_MultiplayerMovePlatform_Base_C_OnCompleted_3FA2443E4959FA0322D075B4FEA0A8E3 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MultiplayerMovePlatform_Base.BP_MultiplayerMovePlatform_Base_C.OnInterrupted_3FA2443E4959FA0322D075B4FEA0A8E3
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MultiplayerMovePlatform_Base_C::OnInterrupted_3FA2443E4959FA0322D075B4FEA0A8E3(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiplayerMovePlatform_Base_C", "OnInterrupted_3FA2443E4959FA0322D075B4FEA0A8E3");

	Params::BP_MultiplayerMovePlatform_Base_C_OnInterrupted_3FA2443E4959FA0322D075B4FEA0A8E3 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MultiplayerMovePlatform_Base.BP_MultiplayerMovePlatform_Base_C.OnLoaded_CB2FFBC84F62675EA25EA897832EDF4D
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_MultiplayerMovePlatform_Base_C::OnLoaded_CB2FFBC84F62675EA25EA897832EDF4D(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiplayerMovePlatform_Base_C", "OnLoaded_CB2FFBC84F62675EA25EA897832EDF4D");

	Params::BP_MultiplayerMovePlatform_Base_C_OnLoaded_CB2FFBC84F62675EA25EA897832EDF4D Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MultiplayerMovePlatform_Base.BP_MultiplayerMovePlatform_Base_C.OnNotifyBegin_3FA2443E4959FA0322D075B4FEA0A8E3
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MultiplayerMovePlatform_Base_C::OnNotifyBegin_3FA2443E4959FA0322D075B4FEA0A8E3(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiplayerMovePlatform_Base_C", "OnNotifyBegin_3FA2443E4959FA0322D075B4FEA0A8E3");

	Params::BP_MultiplayerMovePlatform_Base_C_OnNotifyBegin_3FA2443E4959FA0322D075B4FEA0A8E3 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MultiplayerMovePlatform_Base.BP_MultiplayerMovePlatform_Base_C.OnNotifyEnd_3FA2443E4959FA0322D075B4FEA0A8E3
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MultiplayerMovePlatform_Base_C::OnNotifyEnd_3FA2443E4959FA0322D075B4FEA0A8E3(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiplayerMovePlatform_Base_C", "OnNotifyEnd_3FA2443E4959FA0322D075B4FEA0A8E3");

	Params::BP_MultiplayerMovePlatform_Base_C_OnNotifyEnd_3FA2443E4959FA0322D075B4FEA0A8E3 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MultiplayerMovePlatform_Base.BP_MultiplayerMovePlatform_Base_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MultiplayerMovePlatform_Base_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiplayerMovePlatform_Base_C", "ReceiveTick");

	Params::BP_MultiplayerMovePlatform_Base_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MultiplayerMovePlatform_Base.BP_MultiplayerMovePlatform_Base_C.SetInvisibleWall
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MultiplayerMovePlatform_Base_C::SetInvisibleWall(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiplayerMovePlatform_Base_C", "SetInvisibleWall");

	Params::BP_MultiplayerMovePlatform_Base_C_SetInvisibleWall Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MultiplayerMovePlatform_Base.BP_MultiplayerMovePlatform_Base_C.GetModuleName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString ABP_MultiplayerMovePlatform_Base_C::GetModuleName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiplayerMovePlatform_Base_C", "GetModuleName");

	Params::BP_MultiplayerMovePlatform_Base_C_GetModuleName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

