#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MiniGame

#include "Basic.hpp"

#include "BP_MiniGame_classes.hpp"
#include "BP_MiniGame_parameters.hpp"


namespace SDK
{

// Function BP_MiniGame.BP_MiniGame_C.SyncLocation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MiniGame_C::SyncLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_C", "SyncLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MiniGame.BP_MiniGame_C.SpawnUnnecessary
// (BlueprintCallable, BlueprintEvent)

void ABP_MiniGame_C::SpawnUnnecessary()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_C", "SpawnUnnecessary");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MiniGame.BP_MiniGame_C.SetInRestart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MiniGame_C::SetInRestart(bool State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_C", "SetInRestart");

	Params::BP_MiniGame_C_SetInRestart Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MiniGame.BP_MiniGame_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MiniGame_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_C", "ReceiveTick");

	Params::BP_MiniGame_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MiniGame.BP_MiniGame_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MiniGame_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_C", "ReceiveEndPlay");

	Params::BP_MiniGame_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MiniGame.BP_MiniGame_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_MiniGame_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MiniGame.BP_MiniGame_C.PrintFail
// (BlueprintCallable, BlueprintEvent)

void ABP_MiniGame_C::PrintFail()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_C", "PrintFail");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MiniGame.BP_MiniGame_C.OnStart
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MiniGame_C::OnStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_C", "OnStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MiniGame.BP_MiniGame_C.OnSpawnFinished_A54188144860CD3130B1879F6F97432E
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AActor*>&                  ReturnActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int64                                   SpawnerGroupID                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MiniGame_C::OnSpawnFinished_A54188144860CD3130B1879F6F97432E(TArray<class AActor*>& ReturnActor, int64 SpawnerGroupID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_C", "OnSpawnFinished_A54188144860CD3130B1879F6F97432E");

	Params::BP_MiniGame_C_OnSpawnFinished_A54188144860CD3130B1879F6F97432E Parms{};

	Parms.ReturnActor = std::move(ReturnActor);
	Parms.SpawnerGroupID = SpawnerGroupID;

	UObject::ProcessEvent(Func, &Parms);

	ReturnActor = std::move(Parms.ReturnActor);
}


// Function BP_MiniGame.BP_MiniGame_C.OnResume
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MiniGame_C::OnResume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_C", "OnResume");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MiniGame.BP_MiniGame_C.OnRestart
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MiniGame_C::OnRestart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_C", "OnRestart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MiniGame.BP_MiniGame_C.OnPause
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MiniGame_C::OnPause()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_C", "OnPause");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MiniGame.BP_MiniGame_C.OnInitUnnecessarySpawnerGroup
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MiniGame_C::OnInitUnnecessarySpawnerGroup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_C", "OnInitUnnecessarySpawnerGroup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MiniGame.BP_MiniGame_C.OnInit
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MiniGame_C::OnInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_C", "OnInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MiniGame.BP_MiniGame_C.OnEnd
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MiniGame_C::OnEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_C", "OnEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MiniGame.BP_MiniGame_C.OnDestroy
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MiniGame_C::OnDestroy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_C", "OnDestroy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MiniGame.BP_MiniGame_C.OnDeInit
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MiniGame_C::OnDeInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_C", "OnDeInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MiniGame.BP_MiniGame_C.OnDeactiveSpawnerGroup_FB03D3184DD49DD6237125A20B652FE2
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSuccess                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int64                                   SpawnerGroupID                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MiniGame_C::OnDeactiveSpawnerGroup_FB03D3184DD49DD6237125A20B652FE2(bool IsSuccess, int64 SpawnerGroupID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_C", "OnDeactiveSpawnerGroup_FB03D3184DD49DD6237125A20B652FE2");

	Params::BP_MiniGame_C_OnDeactiveSpawnerGroup_FB03D3184DD49DD6237125A20B652FE2 Parms{};

	Parms.IsSuccess = IsSuccess;
	Parms.SpawnerGroupID = SpawnerGroupID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MiniGame.BP_MiniGame_C.OnDeactiveSpawnerGroup_33B6663B49CC633B7D787981678F6280
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSuccess                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int64                                   SpawnerGroupID                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MiniGame_C::OnDeactiveSpawnerGroup_33B6663B49CC633B7D787981678F6280(bool IsSuccess, int64 SpawnerGroupID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_C", "OnDeactiveSpawnerGroup_33B6663B49CC633B7D787981678F6280");

	Params::BP_MiniGame_C_OnDeactiveSpawnerGroup_33B6663B49CC633B7D787981678F6280 Parms{};

	Parms.IsSuccess = IsSuccess;
	Parms.SpawnerGroupID = SpawnerGroupID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MiniGame.BP_MiniGame_C.OnDeactiveSpawner_79F168B54B47C7613B7F1A80A40E52F7
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSuccess                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MiniGame_C::OnDeactiveSpawner_79F168B54B47C7613B7F1A80A40E52F7(bool IsSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_C", "OnDeactiveSpawner_79F168B54B47C7613B7F1A80A40E52F7");

	Params::BP_MiniGame_C_OnDeactiveSpawner_79F168B54B47C7613B7F1A80A40E52F7 Parms{};

	Parms.IsSuccess = IsSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MiniGame.BP_MiniGame_C.OnCreate
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MiniGame_C::OnCreate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_C", "OnCreate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MiniGame.BP_MiniGame_C.IsComplete
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsComplete_0                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MiniGame_C::IsComplete(bool* IsComplete_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_C", "IsComplete");

	Params::BP_MiniGame_C_IsComplete Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsComplete_0 != nullptr)
		*IsComplete_0 = Parms.IsComplete_0;
}


// Function BP_MiniGame.BP_MiniGame_C.InitGroupInfo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   GroupID_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MiniGame_C::InitGroupInfo(int64 GroupID_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_C", "InitGroupInfo");

	Params::BP_MiniGame_C_InitGroupInfo Parms{};

	Parms.GroupID_0 = GroupID_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MiniGame.BP_MiniGame_C.GetInRestart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   State                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MiniGame_C::GetInRestart(bool* State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_C", "GetInRestart");

	Params::BP_MiniGame_C_GetInRestart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (State != nullptr)
		*State = Parms.State;
}


// Function BP_MiniGame.BP_MiniGame_C.ExecuteUbergraph_BP_MiniGame
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MiniGame_C::ExecuteUbergraph_BP_MiniGame(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_C", "ExecuteUbergraph_BP_MiniGame");

	Params::BP_MiniGame_C_ExecuteUbergraph_BP_MiniGame Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MiniGame.BP_MiniGame_C.DestroyUnnecessary
// (BlueprintCallable, BlueprintEvent)

void ABP_MiniGame_C::DestroyUnnecessary()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_C", "DestroyUnnecessary");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MiniGame.BP_MiniGame_C.DestorySelf
// (BlueprintCallable, BlueprintEvent)

void ABP_MiniGame_C::DestorySelf()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_C", "DestorySelf");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MiniGame.BP_MiniGame_C.Complete
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MiniGame_C::Complete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_C", "Complete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MiniGame.BP_MiniGame_C.CanStartGame
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   CanStart                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MiniGame_C::CanStartGame(bool* CanStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_C", "CanStartGame");

	Params::BP_MiniGame_C_CanStartGame Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CanStart != nullptr)
		*CanStart = Parms.CanStart;
}


// Function BP_MiniGame.BP_MiniGame_C.BP_PopTip
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    customStr                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    autoHide                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MiniGame_C::BP_PopTip(int32 Type, const class FString& customStr, bool autoHide, int32 Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_C", "BP_PopTip");

	Params::BP_MiniGame_C_BP_PopTip Parms{};

	Parms.Type = Type;
	Parms.customStr = std::move(customStr);
	Parms.autoHide = autoHide;
	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MiniGame.BP_MiniGame_C.BP_OnPlayerOutBoundaryTopDown
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MiniGame_C::BP_OnPlayerOutBoundaryTopDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_C", "BP_OnPlayerOutBoundaryTopDown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MiniGame.BP_MiniGame_C.BP_OnPlayerOutBoundary
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MiniGame_C::BP_OnPlayerOutBoundary()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_C", "BP_OnPlayerOutBoundary");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MiniGame.BP_MiniGame_C.BP_MiniGameChangeScore
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ChangeScore                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MiniGame_C::BP_MiniGameChangeScore(int32 ChangeScore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_C", "BP_MiniGameChangeScore");

	Params::BP_MiniGame_C_BP_MiniGameChangeScore Parms{};

	Parms.ChangeScore = ChangeScore;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MiniGame.BP_MiniGame_C.BP_MiniGameChangeGameTime
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ChangeGameTime                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MiniGame_C::BP_MiniGameChangeGameTime(int32 ChangeGameTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_C", "BP_MiniGameChangeGameTime");

	Params::BP_MiniGame_C_BP_MiniGameChangeGameTime Parms{};

	Parms.ChangeGameTime = ChangeGameTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MiniGame.BP_MiniGame_C.BP_GetGameCostTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double*                                 CostTime                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MiniGame_C::BP_GetGameCostTime(double* CostTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_C", "BP_GetGameCostTime");

	Params::BP_MiniGame_C_BP_GetGameCostTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CostTime != nullptr)
		*CostTime = Parms.CostTime;
}


// Function BP_MiniGame.BP_MiniGame_C.BP_GetBuriedData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32*                                  OutNumber                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MiniGame_C::BP_GetBuriedData(int32* OutNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_C", "BP_GetBuriedData");

	Params::BP_MiniGame_C_BP_GetBuriedData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutNumber != nullptr)
		*OutNumber = Parms.OutNumber;
}


// Function BP_MiniGame.BP_MiniGame_C.BP_EnableMarkerWhiteList
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UBP_Marker_C*>&            markerCfgIDArray                                       (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_MiniGame_C::BP_EnableMarkerWhiteList(TArray<class UBP_Marker_C*>& markerCfgIDArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_C", "BP_EnableMarkerWhiteList");

	Params::BP_MiniGame_C_BP_EnableMarkerWhiteList Parms{};

	Parms.markerCfgIDArray = std::move(markerCfgIDArray);

	UObject::ProcessEvent(Func, &Parms);

	markerCfgIDArray = std::move(Parms.markerCfgIDArray);
}


// Function BP_MiniGame.BP_MiniGame_C.BP_DisableMarkerWhiteList
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MiniGame_C::BP_DisableMarkerWhiteList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_C", "BP_DisableMarkerWhiteList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MiniGame.BP_MiniGame_C.GetModuleName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FString                           ReturnValue_0                                          (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString ABP_MiniGame_C::GetModuleName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_C", "GetModuleName");

	Params::BP_MiniGame_C_GetModuleName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

