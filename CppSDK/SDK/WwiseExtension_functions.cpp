#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WwiseExtension

#include "Basic.hpp"

#include "WwiseExtension_classes.hpp"
#include "WwiseExtension_parameters.hpp"


namespace SDK
{

// Function WwiseExtension.NiagaraDataInterfaceAkEvent.HandleEndOfEvent
// (Final, Native, Protected)
// Parameters:
// EAkCallbackType                         CallbackType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAkCallbackInfo*                  CallbackInfo                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNiagaraDataInterfaceAkEvent::HandleEndOfEvent(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NiagaraDataInterfaceAkEvent", "HandleEndOfEvent");

	Params::NiagaraDataInterfaceAkEvent_HandleEndOfEvent Parms{};

	Parms.CallbackType = CallbackType;
	Parms.CallbackInfo = CallbackInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseExtension.X6AkAmbientSound.X6StartAmbientSound
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)

void AX6AkAmbientSound::X6StartAmbientSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AkAmbientSound", "X6StartAmbientSound");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function WwiseExtension.AkEventProxy.GetDurationTime
// (Final, Native, Public)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAkEventProxy::GetDurationTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AkEventProxy", "GetDurationTime");

	Params::AkEventProxy_GetDurationTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WwiseExtension.AkEventProxy.GetProxyID
// (Final, Native, Public)
// Parameters:
// uint32                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint32 UAkEventProxy::GetProxyID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AkEventProxy", "GetProxyID");

	Params::AkEventProxy_GetProxyID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WwiseExtension.AkEventProxy.GetStartTime
// (Final, Native, Public)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAkEventProxy::GetStartTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AkEventProxy", "GetStartTime");

	Params::AkEventProxy_GetStartTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WwiseExtension.AkEventProxy.OnPostEventCallback
// (Native, Public)
// Parameters:
// EAkCallbackType                         CallbackType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAkCallbackInfo*                  CallbackInfo                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAkEventProxy::OnPostEventCallback(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AkEventProxy", "OnPostEventCallback");

	Params::AkEventProxy_OnPostEventCallback Parms{};

	Parms.CallbackType = CallbackType;
	Parms.CallbackInfo = CallbackInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseExtension.AkEventProxy.OnPostEventCompleted
// (Native, Public)
// Parameters:
// int32                                   InLinkID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAkEventProxy::OnPostEventCompleted(int32 InLinkID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AkEventProxy", "OnPostEventCompleted");

	Params::AkEventProxy_OnPostEventCompleted Parms{};

	Parms.InLinkID = InLinkID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseExtension.AkEventProxy.PostEventCompletedTimer
// (Final, Native, Public)

void UAkEventProxy::PostEventCompletedTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AkEventProxy", "PostEventCompletedTimer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function WwiseExtension.X6AkBlueprintLibrary.CreatePostEventProxyObject
// (Final, Native, Static, Public)
// Parameters:
// class UAkAudioEvent*                    AkEvent                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           EventActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CallbackMask                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsAsync                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAutoDestory                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EX6AkAudioContext                       AudioContext                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAkEventProxy*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAkEventProxy* UX6AkBlueprintLibrary::CreatePostEventProxyObject(class UAkAudioEvent* AkEvent, class AActor* EventActor, int32 CallbackMask, bool bIsAsync, bool bAutoDestory, EX6AkAudioContext AudioContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "CreatePostEventProxyObject");

	Params::X6AkBlueprintLibrary_CreatePostEventProxyObject Parms{};

	Parms.AkEvent = AkEvent;
	Parms.EventActor = EventActor;
	Parms.CallbackMask = CallbackMask;
	Parms.bIsAsync = bIsAsync;
	Parms.bAutoDestory = bAutoDestory;
	Parms.AudioContext = AudioContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WwiseExtension.X6AkBlueprintLibrary.CreatePostEventProxyObjectAtLocation
// (Final, Native, Static, Public, HasDefaults)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAkAudioEvent*                    AkEvent                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CallbackMask                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  Orientation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bIsAsync                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EX6AkAudioContext                       AudioContext                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAkEventProxy*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAkEventProxy* UX6AkBlueprintLibrary::CreatePostEventProxyObjectAtLocation(class UObject* WorldContextObject, class UAkAudioEvent* AkEvent, int32 CallbackMask, const struct FVector& Location, const struct FRotator& Orientation, bool bIsAsync, EX6AkAudioContext AudioContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "CreatePostEventProxyObjectAtLocation");

	Params::X6AkBlueprintLibrary_CreatePostEventProxyObjectAtLocation Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.AkEvent = AkEvent;
	Parms.CallbackMask = CallbackMask;
	Parms.Location = std::move(Location);
	Parms.Orientation = std::move(Orientation);
	Parms.bIsAsync = bIsAsync;
	Parms.AudioContext = AudioContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WwiseExtension.X6AkBlueprintLibrary.CreatePostEventProxyObjectWithComponent
// (Final, Native, Static, Public)
// Parameters:
// class UAkAudioEvent*                    AkEvent                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAkComponent*                     AkComponent                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CallbackMask                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsAsync                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EX6AkAudioContext                       AudioContext                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAkEventProxy*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAkEventProxy* UX6AkBlueprintLibrary::CreatePostEventProxyObjectWithComponent(class UAkAudioEvent* AkEvent, class UAkComponent* AkComponent, int32 CallbackMask, bool bIsAsync, EX6AkAudioContext AudioContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "CreatePostEventProxyObjectWithComponent");

	Params::X6AkBlueprintLibrary_CreatePostEventProxyObjectWithComponent Parms{};

	Parms.AkEvent = AkEvent;
	Parms.AkComponent = AkComponent;
	Parms.CallbackMask = CallbackMask;
	Parms.bIsAsync = bIsAsync;
	Parms.AudioContext = AudioContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WwiseExtension.X6AkBlueprintLibrary.GetSurfaceTypeSwitchValue
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPhysicalSurface                        InSurfaceType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UAkSwitchValue>    ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UAkSwitchValue> UX6AkBlueprintLibrary::GetSurfaceTypeSwitchValue(class UObject* WorldContextObject, EPhysicalSurface InSurfaceType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "GetSurfaceTypeSwitchValue");

	Params::X6AkBlueprintLibrary_GetSurfaceTypeSwitchValue Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InSurfaceType = InSurfaceType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WwiseExtension.X6AkBlueprintLibrary.PlayRunStepSoundEffectWithSwitch
// (Final, BlueprintCosmetic, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class UAkAudioEvent>     AkEventSoftRef                                         (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  AttachToComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName&                      AttachName                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<TSoftObjectPtr<class UObject>>&InSwitchSoftRefs                                       (Parm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
// bool                                    bAllowAutoDestory                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AkBlueprintLibrary::PlayRunStepSoundEffectWithSwitch(TSoftObjectPtr<class UAkAudioEvent> AkEventSoftRef, class USceneComponent* AttachToComponent, const class FName& AttachName, const TArray<TSoftObjectPtr<class UObject>>& InSwitchSoftRefs, bool bAllowAutoDestory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "PlayRunStepSoundEffectWithSwitch");

	Params::X6AkBlueprintLibrary_PlayRunStepSoundEffectWithSwitch Parms{};

	Parms.AkEventSoftRef = AkEventSoftRef;
	Parms.AttachToComponent = AttachToComponent;
	Parms.AttachName = AttachName;
	Parms.InSwitchSoftRefs = std::move(InSwitchSoftRefs);
	Parms.bAllowAutoDestory = bAllowAutoDestory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseExtension.X6AkBlueprintLibrary.SetJobMgrMaxActiveWorkers
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// EAkJobType                              JobType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   MaxNumActiveWorkers                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AkBlueprintLibrary::SetJobMgrMaxActiveWorkers(EAkJobType JobType, int64 MaxNumActiveWorkers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "SetJobMgrMaxActiveWorkers");

	Params::X6AkBlueprintLibrary_SetJobMgrMaxActiveWorkers Parms{};

	Parms.JobType = JobType;
	Parms.MaxNumActiveWorkers = MaxNumActiveWorkers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WwiseExtension.X6AkBlueprintLibrary.SetMaxNumVoicesLimit
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   MaxNumberVoices                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AkBlueprintLibrary::SetMaxNumVoicesLimit(int32 MaxNumberVoices)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "SetMaxNumVoicesLimit");

	Params::X6AkBlueprintLibrary_SetMaxNumVoicesLimit Parms{};

	Parms.MaxNumberVoices = MaxNumberVoices;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WwiseExtension.X6AkBlueprintLibrary.StopSoundByLocation
// (Final, BlueprintCosmetic, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AkBlueprintLibrary::StopSoundByLocation(class UObject* WorldContextObject, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "StopSoundByLocation");

	Params::X6AkBlueprintLibrary_StopSoundByLocation Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseExtension.X6AkBlueprintLibrary.X6ExecuteActionOnEvent
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UAkAudioEvent*                    InAkEvent                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAkActionOnEventType                    InActionType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InTransitionDuration                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAkCurveInterpolation                   InFadeCurve                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPlayingID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AkBlueprintLibrary::X6ExecuteActionOnEvent(class UAkAudioEvent* InAkEvent, EAkActionOnEventType InActionType, class AActor* InActor, int32 InTransitionDuration, EAkCurveInterpolation InFadeCurve, int32 InPlayingID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "X6ExecuteActionOnEvent");

	Params::X6AkBlueprintLibrary_X6ExecuteActionOnEvent Parms{};

	Parms.InAkEvent = InAkEvent;
	Parms.InActionType = InActionType;
	Parms.InActor = InActor;
	Parms.InTransitionDuration = InTransitionDuration;
	Parms.InFadeCurve = InFadeCurve;
	Parms.InPlayingID = InPlayingID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WwiseExtension.X6AkBlueprintLibrary.X6ExecuteActionOnPlayingID
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// EAkActionOnEventType                    InActionType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPlayingID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InTransitionDuration                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAkCurveInterpolation                   InFadeCurve                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AkBlueprintLibrary::X6ExecuteActionOnPlayingID(EAkActionOnEventType InActionType, int32 InPlayingID, int32 InTransitionDuration, EAkCurveInterpolation InFadeCurve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "X6ExecuteActionOnPlayingID");

	Params::X6AkBlueprintLibrary_X6ExecuteActionOnPlayingID Parms{};

	Parms.InActionType = InActionType;
	Parms.InPlayingID = InPlayingID;
	Parms.InTransitionDuration = InTransitionDuration;
	Parms.InFadeCurve = InFadeCurve;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WwiseExtension.X6AkBlueprintLibrary.X6GetAkComponent
// (Final, BlueprintCosmetic, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class USceneComponent*                  AttachToComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   ComponentCreated                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAllowAutoDestory                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             AttachPointName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAttachmentRule                         AttachmentRule                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAkComponent*                     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAkComponent* UX6AkBlueprintLibrary::X6GetAkComponent(class USceneComponent* AttachToComponent, bool* ComponentCreated, bool bAllowAutoDestory, class FName AttachPointName, EAttachmentRule AttachmentRule)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "X6GetAkComponent");

	Params::X6AkBlueprintLibrary_X6GetAkComponent Parms{};

	Parms.AttachToComponent = AttachToComponent;
	Parms.bAllowAutoDestory = bAllowAutoDestory;
	Parms.AttachPointName = AttachPointName;
	Parms.AttachmentRule = AttachmentRule;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ComponentCreated != nullptr)
		*ComponentCreated = Parms.ComponentCreated;

	return Parms.ReturnValue;
}


// Function WwiseExtension.X6AkBlueprintLibrary.X6PostEvent
// (Final, BlueprintCosmetic, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UAkAudioEvent*                    AkEvent                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           EventActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  PlayingID                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CallbackMask                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)>&PostEventCallback                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FAkExternalSourceInfo>&ExternalSources                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bAutoDestory                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EX6AkAudioContext                       AudioContext                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AkBlueprintLibrary::X6PostEvent(class UAkAudioEvent* AkEvent, class AActor* EventActor, int32* PlayingID, int32 CallbackMask, const TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)>& PostEventCallback, const TArray<struct FAkExternalSourceInfo>& ExternalSources, bool bAutoDestory, EX6AkAudioContext AudioContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "X6PostEvent");

	Params::X6AkBlueprintLibrary_X6PostEvent Parms{};

	Parms.AkEvent = AkEvent;
	Parms.EventActor = EventActor;
	Parms.CallbackMask = CallbackMask;
	Parms.PostEventCallback = PostEventCallback;
	Parms.ExternalSources = std::move(ExternalSources);
	Parms.bAutoDestory = bAutoDestory;
	Parms.AudioContext = AudioContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PlayingID != nullptr)
		*PlayingID = Parms.PlayingID;
}


// Function WwiseExtension.X6AkBlueprintLibrary.X6PostEvent2D
// (Final, BlueprintCosmetic, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UAkAudioEvent*                    AkEvent                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  PlayingID                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CallbackMask                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)>&PostEventCallback                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FAkExternalSourceInfo>&ExternalSources                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UX6AkBlueprintLibrary::X6PostEvent2D(class UAkAudioEvent* AkEvent, int32* PlayingID, int32 CallbackMask, const TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)>& PostEventCallback, const TArray<struct FAkExternalSourceInfo>& ExternalSources)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "X6PostEvent2D");

	Params::X6AkBlueprintLibrary_X6PostEvent2D Parms{};

	Parms.AkEvent = AkEvent;
	Parms.CallbackMask = CallbackMask;
	Parms.PostEventCallback = PostEventCallback;
	Parms.ExternalSources = std::move(ExternalSources);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PlayingID != nullptr)
		*PlayingID = Parms.PlayingID;
}


// Function WwiseExtension.X6AkBlueprintLibrary.X6PostEventAsync
// (Final, BlueprintCosmetic, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UAkAudioEvent*                    AkEvent                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           EventActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  PlayingID                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CallbackMask                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)>&PostEventCallback                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FAkExternalSourceInfo>&ExternalSources                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bAutoDestory                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EX6AkAudioContext                       AudioContext                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AkBlueprintLibrary::X6PostEventAsync(class UAkAudioEvent* AkEvent, class AActor* EventActor, int32* PlayingID, int32 CallbackMask, const TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)>& PostEventCallback, const TArray<struct FAkExternalSourceInfo>& ExternalSources, const struct FLatentActionInfo& LatentInfo, bool bAutoDestory, EX6AkAudioContext AudioContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "X6PostEventAsync");

	Params::X6AkBlueprintLibrary_X6PostEventAsync Parms{};

	Parms.AkEvent = AkEvent;
	Parms.EventActor = EventActor;
	Parms.CallbackMask = CallbackMask;
	Parms.PostEventCallback = PostEventCallback;
	Parms.ExternalSources = std::move(ExternalSources);
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.bAutoDestory = bAutoDestory;
	Parms.AudioContext = AudioContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PlayingID != nullptr)
		*PlayingID = Parms.PlayingID;
}


// Function WwiseExtension.X6AkBlueprintLibrary.X6PostEventAsync2D
// (Final, BlueprintCosmetic, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UAkAudioEvent*                    AkEvent                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  PlayingID                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CallbackMask                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)>&PostEventCallback                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FAkExternalSourceInfo>&ExternalSources                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UX6AkBlueprintLibrary::X6PostEventAsync2D(class UAkAudioEvent* AkEvent, int32* PlayingID, int32 CallbackMask, const TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)>& PostEventCallback, const TArray<struct FAkExternalSourceInfo>& ExternalSources, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "X6PostEventAsync2D");

	Params::X6AkBlueprintLibrary_X6PostEventAsync2D Parms{};

	Parms.AkEvent = AkEvent;
	Parms.CallbackMask = CallbackMask;
	Parms.PostEventCallback = PostEventCallback;
	Parms.ExternalSources = std::move(ExternalSources);
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PlayingID != nullptr)
		*PlayingID = Parms.PlayingID;
}


// Function WwiseExtension.X6AkBlueprintLibrary.X6PostEventAsyncAtLocation
// (Final, BlueprintCosmetic, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAkAudioEvent*                    AkEvent                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  PlayingID                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  Orientation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// EX6AkAudioContext                       AudioContext                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AkBlueprintLibrary::X6PostEventAsyncAtLocation(class UObject* WorldContextObject, class UAkAudioEvent* AkEvent, int32* PlayingID, const struct FVector& Location, const struct FRotator& Orientation, const struct FLatentActionInfo& LatentInfo, EX6AkAudioContext AudioContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "X6PostEventAsyncAtLocation");

	Params::X6AkBlueprintLibrary_X6PostEventAsyncAtLocation Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.AkEvent = AkEvent;
	Parms.Location = std::move(Location);
	Parms.Orientation = std::move(Orientation);
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.AudioContext = AudioContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PlayingID != nullptr)
		*PlayingID = Parms.PlayingID;
}


// Function WwiseExtension.X6AkBlueprintLibrary.X6PostEventAsyncWithComponent
// (Final, BlueprintCosmetic, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UAkAudioEvent*                    AkEvent                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAkComponent*                     AkComponent                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  PlayingID                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CallbackMask                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)>&PostEventCallback                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FAkExternalSourceInfo>&ExternalSources                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// EX6AkAudioContext                       AudioContext                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AkBlueprintLibrary::X6PostEventAsyncWithComponent(class UAkAudioEvent* AkEvent, class UAkComponent* AkComponent, int32* PlayingID, int32 CallbackMask, const TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)>& PostEventCallback, const TArray<struct FAkExternalSourceInfo>& ExternalSources, const struct FLatentActionInfo& LatentInfo, EX6AkAudioContext AudioContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "X6PostEventAsyncWithComponent");

	Params::X6AkBlueprintLibrary_X6PostEventAsyncWithComponent Parms{};

	Parms.AkEvent = AkEvent;
	Parms.AkComponent = AkComponent;
	Parms.CallbackMask = CallbackMask;
	Parms.PostEventCallback = PostEventCallback;
	Parms.ExternalSources = std::move(ExternalSources);
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.AudioContext = AudioContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PlayingID != nullptr)
		*PlayingID = Parms.PlayingID;
}


// Function WwiseExtension.X6AkBlueprintLibrary.X6PostEventAtLocation
// (Final, BlueprintCosmetic, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAkAudioEvent*                    AkEvent                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  PlayingID                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  Orientation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// EX6AkAudioContext                       AudioContext                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AkBlueprintLibrary::X6PostEventAtLocation(class UObject* WorldContextObject, class UAkAudioEvent* AkEvent, int32* PlayingID, const struct FVector& Location, const struct FRotator& Orientation, EX6AkAudioContext AudioContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "X6PostEventAtLocation");

	Params::X6AkBlueprintLibrary_X6PostEventAtLocation Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.AkEvent = AkEvent;
	Parms.Location = std::move(Location);
	Parms.Orientation = std::move(Orientation);
	Parms.AudioContext = AudioContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PlayingID != nullptr)
		*PlayingID = Parms.PlayingID;
}


// Function WwiseExtension.X6AkBlueprintLibrary.X6PostEventSoftRef
// (Final, BlueprintCosmetic, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class UAkAudioEvent>     AkEventSoftRef                                         (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           EventActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  PlayingID                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CallbackMask                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)>&PostEventCallback                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FAkExternalSourceInfo>&ExternalSources                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bAutoDestory                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EX6AkAudioContext                       AudioContext                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AkBlueprintLibrary::X6PostEventSoftRef(TSoftObjectPtr<class UAkAudioEvent> AkEventSoftRef, class AActor* EventActor, int32* PlayingID, int32 CallbackMask, const TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)>& PostEventCallback, const TArray<struct FAkExternalSourceInfo>& ExternalSources, const struct FLatentActionInfo& LatentInfo, bool bAutoDestory, EX6AkAudioContext AudioContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "X6PostEventSoftRef");

	Params::X6AkBlueprintLibrary_X6PostEventSoftRef Parms{};

	Parms.AkEventSoftRef = AkEventSoftRef;
	Parms.EventActor = EventActor;
	Parms.CallbackMask = CallbackMask;
	Parms.PostEventCallback = PostEventCallback;
	Parms.ExternalSources = std::move(ExternalSources);
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.bAutoDestory = bAutoDestory;
	Parms.AudioContext = AudioContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PlayingID != nullptr)
		*PlayingID = Parms.PlayingID;
}


// Function WwiseExtension.X6AkBlueprintLibrary.X6PostEventSoftRef2D
// (Final, BlueprintCosmetic, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class UAkAudioEvent>     AkEventSoftRef                                         (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  PlayingID                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CallbackMask                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)>&PostEventCallback                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FAkExternalSourceInfo>&ExternalSources                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UX6AkBlueprintLibrary::X6PostEventSoftRef2D(TSoftObjectPtr<class UAkAudioEvent> AkEventSoftRef, int32* PlayingID, int32 CallbackMask, const TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)>& PostEventCallback, const TArray<struct FAkExternalSourceInfo>& ExternalSources, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "X6PostEventSoftRef2D");

	Params::X6AkBlueprintLibrary_X6PostEventSoftRef2D Parms{};

	Parms.AkEventSoftRef = AkEventSoftRef;
	Parms.CallbackMask = CallbackMask;
	Parms.PostEventCallback = PostEventCallback;
	Parms.ExternalSources = std::move(ExternalSources);
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PlayingID != nullptr)
		*PlayingID = Parms.PlayingID;
}


// Function WwiseExtension.X6AkBlueprintLibrary.X6PostEventSoftRefAsync
// (Final, BlueprintCosmetic, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class UAkAudioEvent>     AkEventSoftRef                                         (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           EventActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  PlayingID                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CallbackMask                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)>&PostEventCallback                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FAkExternalSourceInfo>&ExternalSources                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bAutoDestory                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EX6AkAudioContext                       AudioContext                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AkBlueprintLibrary::X6PostEventSoftRefAsync(TSoftObjectPtr<class UAkAudioEvent> AkEventSoftRef, class AActor* EventActor, int32* PlayingID, int32 CallbackMask, const TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)>& PostEventCallback, const TArray<struct FAkExternalSourceInfo>& ExternalSources, const struct FLatentActionInfo& LatentInfo, bool bAutoDestory, EX6AkAudioContext AudioContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "X6PostEventSoftRefAsync");

	Params::X6AkBlueprintLibrary_X6PostEventSoftRefAsync Parms{};

	Parms.AkEventSoftRef = AkEventSoftRef;
	Parms.EventActor = EventActor;
	Parms.CallbackMask = CallbackMask;
	Parms.PostEventCallback = PostEventCallback;
	Parms.ExternalSources = std::move(ExternalSources);
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.bAutoDestory = bAutoDestory;
	Parms.AudioContext = AudioContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PlayingID != nullptr)
		*PlayingID = Parms.PlayingID;
}


// Function WwiseExtension.X6AkBlueprintLibrary.X6PostEventSoftRefAsync2D
// (Final, BlueprintCosmetic, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class UAkAudioEvent>     AkEventSoftRef                                         (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  PlayingID                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CallbackMask                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)>&PostEventCallback                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FAkExternalSourceInfo>&ExternalSources                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UX6AkBlueprintLibrary::X6PostEventSoftRefAsync2D(TSoftObjectPtr<class UAkAudioEvent> AkEventSoftRef, int32* PlayingID, int32 CallbackMask, const TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)>& PostEventCallback, const TArray<struct FAkExternalSourceInfo>& ExternalSources, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "X6PostEventSoftRefAsync2D");

	Params::X6AkBlueprintLibrary_X6PostEventSoftRefAsync2D Parms{};

	Parms.AkEventSoftRef = AkEventSoftRef;
	Parms.CallbackMask = CallbackMask;
	Parms.PostEventCallback = PostEventCallback;
	Parms.ExternalSources = std::move(ExternalSources);
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PlayingID != nullptr)
		*PlayingID = Parms.PlayingID;
}


// Function WwiseExtension.X6AkBlueprintLibrary.X6PostEventSoftRefAsyncAtLocation
// (Final, BlueprintCosmetic, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UAkAudioEvent>     AkEventSoftRef                                         (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  PlayingID                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  Orientation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// EX6AkAudioContext                       AudioContext                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AkBlueprintLibrary::X6PostEventSoftRefAsyncAtLocation(class UObject* WorldContextObject, TSoftObjectPtr<class UAkAudioEvent> AkEventSoftRef, int32* PlayingID, const struct FVector& Location, const struct FRotator& Orientation, const struct FLatentActionInfo& LatentInfo, EX6AkAudioContext AudioContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "X6PostEventSoftRefAsyncAtLocation");

	Params::X6AkBlueprintLibrary_X6PostEventSoftRefAsyncAtLocation Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.AkEventSoftRef = AkEventSoftRef;
	Parms.Location = std::move(Location);
	Parms.Orientation = std::move(Orientation);
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.AudioContext = AudioContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PlayingID != nullptr)
		*PlayingID = Parms.PlayingID;
}


// Function WwiseExtension.X6AkBlueprintLibrary.X6PostEventSoftRefAsyncWithComponent
// (Final, BlueprintCosmetic, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class UAkAudioEvent>     AkEventSoftRef                                         (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAkComponent*                     AkComponent                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  PlayingID                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CallbackMask                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)>&PostEventCallback                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FAkExternalSourceInfo>&ExternalSources                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// EX6AkAudioContext                       AudioContext                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AkBlueprintLibrary::X6PostEventSoftRefAsyncWithComponent(TSoftObjectPtr<class UAkAudioEvent> AkEventSoftRef, class UAkComponent* AkComponent, int32* PlayingID, int32 CallbackMask, const TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)>& PostEventCallback, const TArray<struct FAkExternalSourceInfo>& ExternalSources, const struct FLatentActionInfo& LatentInfo, EX6AkAudioContext AudioContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "X6PostEventSoftRefAsyncWithComponent");

	Params::X6AkBlueprintLibrary_X6PostEventSoftRefAsyncWithComponent Parms{};

	Parms.AkEventSoftRef = AkEventSoftRef;
	Parms.AkComponent = AkComponent;
	Parms.CallbackMask = CallbackMask;
	Parms.PostEventCallback = PostEventCallback;
	Parms.ExternalSources = std::move(ExternalSources);
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.AudioContext = AudioContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PlayingID != nullptr)
		*PlayingID = Parms.PlayingID;
}


// Function WwiseExtension.X6AkBlueprintLibrary.X6PostEventSoftRefAtLocation
// (Final, BlueprintCosmetic, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UAkAudioEvent>     AkEventSoftRef                                         (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  PlayingID                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  Orientation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// EX6AkAudioContext                       AudioContext                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AkBlueprintLibrary::X6PostEventSoftRefAtLocation(class UObject* WorldContextObject, TSoftObjectPtr<class UAkAudioEvent> AkEventSoftRef, int32* PlayingID, const struct FVector& Location, const struct FRotator& Orientation, const struct FLatentActionInfo& LatentInfo, EX6AkAudioContext AudioContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "X6PostEventSoftRefAtLocation");

	Params::X6AkBlueprintLibrary_X6PostEventSoftRefAtLocation Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.AkEventSoftRef = AkEventSoftRef;
	Parms.Location = std::move(Location);
	Parms.Orientation = std::move(Orientation);
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.AudioContext = AudioContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PlayingID != nullptr)
		*PlayingID = Parms.PlayingID;
}


// Function WwiseExtension.X6AkBlueprintLibrary.X6PostEventSoftRefWithComponent
// (Final, BlueprintCosmetic, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class UAkAudioEvent>     AkEventSoftRef                                         (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAkComponent*                     AkComponent                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  PlayingID                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CallbackMask                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)>&PostEventCallback                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FAkExternalSourceInfo>&ExternalSources                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// EX6AkAudioContext                       AudioContext                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AkBlueprintLibrary::X6PostEventSoftRefWithComponent(TSoftObjectPtr<class UAkAudioEvent> AkEventSoftRef, class UAkComponent* AkComponent, int32* PlayingID, int32 CallbackMask, const TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)>& PostEventCallback, const TArray<struct FAkExternalSourceInfo>& ExternalSources, const struct FLatentActionInfo& LatentInfo, EX6AkAudioContext AudioContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "X6PostEventSoftRefWithComponent");

	Params::X6AkBlueprintLibrary_X6PostEventSoftRefWithComponent Parms{};

	Parms.AkEventSoftRef = AkEventSoftRef;
	Parms.AkComponent = AkComponent;
	Parms.CallbackMask = CallbackMask;
	Parms.PostEventCallback = PostEventCallback;
	Parms.ExternalSources = std::move(ExternalSources);
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.AudioContext = AudioContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PlayingID != nullptr)
		*PlayingID = Parms.PlayingID;
}


// Function WwiseExtension.X6AkBlueprintLibrary.X6PostEventWithComponent
// (Final, BlueprintCosmetic, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UAkAudioEvent*                    AkEvent                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAkComponent*                     AkComponent                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  PlayingID                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CallbackMask                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)>&PostEventCallback                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FAkExternalSourceInfo>&ExternalSources                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// EX6AkAudioContext                       AudioContext                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AkBlueprintLibrary::X6PostEventWithComponent(class UAkAudioEvent* AkEvent, class UAkComponent* AkComponent, int32* PlayingID, int32 CallbackMask, const TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)>& PostEventCallback, const TArray<struct FAkExternalSourceInfo>& ExternalSources, EX6AkAudioContext AudioContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "X6PostEventWithComponent");

	Params::X6AkBlueprintLibrary_X6PostEventWithComponent Parms{};

	Parms.AkEvent = AkEvent;
	Parms.AkComponent = AkComponent;
	Parms.CallbackMask = CallbackMask;
	Parms.PostEventCallback = PostEventCallback;
	Parms.ExternalSources = std::move(ExternalSources);
	Parms.AudioContext = AudioContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PlayingID != nullptr)
		*PlayingID = Parms.PlayingID;
}


// Function WwiseExtension.X6AkBlueprintLibrary.X6SeekEvent
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UAkAudioEvent*                    InAkEvent                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InSeekPercent                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPlayingID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AkBlueprintLibrary::X6SeekEvent(class UAkAudioEvent* InAkEvent, class AActor* InActor, float InSeekPercent, int32 InPlayingID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "X6SeekEvent");

	Params::X6AkBlueprintLibrary_X6SeekEvent Parms{};

	Parms.InAkEvent = InAkEvent;
	Parms.InActor = InActor;
	Parms.InSeekPercent = InSeekPercent;
	Parms.InPlayingID = InPlayingID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WwiseExtension.X6AkBlueprintLibrary.X6SeekEventWithComponent
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UAkAudioEvent*                    InAkEvent                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAkComponent*                     InAkComponent                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InSeekPercent                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPlayingID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AkBlueprintLibrary::X6SeekEventWithComponent(class UAkAudioEvent* InAkEvent, class UAkComponent* InAkComponent, float InSeekPercent, int32 InPlayingID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "X6SeekEventWithComponent");

	Params::X6AkBlueprintLibrary_X6SeekEventWithComponent Parms{};

	Parms.InAkEvent = InAkEvent;
	Parms.InAkComponent = InAkComponent;
	Parms.InSeekPercent = InSeekPercent;
	Parms.InPlayingID = InPlayingID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WwiseExtension.X6AkBlueprintLibrary.X6SetAkAudioSession
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// EAkAudioSessionCategory                 AudioSessionCategory                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAkAudioSessionBehaviorOption           AudioSessionBehavior                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AkBlueprintLibrary::X6SetAkAudioSession(EAkAudioSessionCategory AudioSessionCategory, EAkAudioSessionBehaviorOption AudioSessionBehavior)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "X6SetAkAudioSession");

	Params::X6AkBlueprintLibrary_X6SetAkAudioSession Parms{};

	Parms.AudioSessionCategory = AudioSessionCategory;
	Parms.AudioSessionBehavior = AudioSessionBehavior;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseExtension.X6AkBlueprintLibrary.X6SetAkAudioSessionCategory
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// EAkAudioSessionCategory                 AudioSessionCategory                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AkBlueprintLibrary::X6SetAkAudioSessionCategory(EAkAudioSessionCategory AudioSessionCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "X6SetAkAudioSessionCategory");

	Params::X6AkBlueprintLibrary_X6SetAkAudioSessionCategory Parms{};

	Parms.AudioSessionCategory = AudioSessionCategory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseExtension.X6AkBlueprintLibrary.X6SetAudioListenerOverride
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InListenerOffset                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDebugListenerTransform                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AkBlueprintLibrary::X6SetAudioListenerOverride(class UObject* WorldContextObject, float InListenerOffset, bool bDebugListenerTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "X6SetAudioListenerOverride");

	Params::X6AkBlueprintLibrary_X6SetAudioListenerOverride Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InListenerOffset = InListenerOffset;
	Parms.bDebugListenerTransform = bDebugListenerTransform;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseExtension.X6AkBlueprintLibrary.X6SetImageSource
// (Final, BlueprintCosmetic, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   InSrcId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FAkImageSourceSettings&    InInfo                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FString&                    InName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAkAuxBus*                        InAuxBus                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UX6AkBlueprintLibrary::X6SetImageSource(int64 InSrcId, const struct FAkImageSourceSettings& InInfo, const class FString& InName, class UAkAuxBus* InAuxBus, class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "X6SetImageSource");

	Params::X6AkBlueprintLibrary_X6SetImageSource Parms{};

	Parms.InSrcId = InSrcId;
	Parms.InInfo = std::move(InInfo);
	Parms.InName = std::move(InName);
	Parms.InAuxBus = InAuxBus;
	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WwiseExtension.X6AkBlueprintLibrary.X6SetOfflineRendering
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AkBlueprintLibrary::X6SetOfflineRendering(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "X6SetOfflineRendering");

	Params::X6AkBlueprintLibrary_X6SetOfflineRendering Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseExtension.X6AkBlueprintLibrary.X6SetState
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UAkStateValue*                    StateValue                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AkBlueprintLibrary::X6SetState(class UAkStateValue* StateValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "X6SetState");

	Params::X6AkBlueprintLibrary_X6SetState Parms{};

	Parms.StateValue = StateValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseExtension.X6AkBlueprintLibrary.X6SetStateSoftRef
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class UAkStateValue>     AkStateSoftRef                                         (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AkBlueprintLibrary::X6SetStateSoftRef(TSoftObjectPtr<class UAkStateValue> AkStateSoftRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "X6SetStateSoftRef");

	Params::X6AkBlueprintLibrary_X6SetStateSoftRef Parms{};

	Parms.AkStateSoftRef = AkStateSoftRef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseExtension.X6AkBlueprintLibrary.X6SetSwitch
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UAkSwitchValue*                   SwitchValue                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AkBlueprintLibrary::X6SetSwitch(class UAkSwitchValue* SwitchValue, class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "X6SetSwitch");

	Params::X6AkBlueprintLibrary_X6SetSwitch Parms{};

	Parms.SwitchValue = SwitchValue;
	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseExtension.X6AkBlueprintLibrary.X6SetSwitchSoftRef
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class UAkSwitchValue>    AkSwitchSoftRef                                        (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AkBlueprintLibrary::X6SetSwitchSoftRef(TSoftObjectPtr<class UAkSwitchValue> AkSwitchSoftRef, class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "X6SetSwitchSoftRef");

	Params::X6AkBlueprintLibrary_X6SetSwitchSoftRef Parms{};

	Parms.AkSwitchSoftRef = AkSwitchSoftRef;
	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseExtension.X6AkBlueprintLibrary.X6SetSwitchWithComponent
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UAkSwitchValue*                   SwitchValue                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAkComponent*                     AkComponent                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AkBlueprintLibrary::X6SetSwitchWithComponent(class UAkSwitchValue* SwitchValue, class UAkComponent* AkComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "X6SetSwitchWithComponent");

	Params::X6AkBlueprintLibrary_X6SetSwitchWithComponent Parms{};

	Parms.SwitchValue = SwitchValue;
	Parms.AkComponent = AkComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseExtension.X6AkBlueprintLibrary.X6SimplePostEventSoftRef
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class UAkAudioEvent>     AkEventSoftRef                                         (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           EventActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAutoDestory                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EX6AkAudioContext                       AudioContext                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AkBlueprintLibrary::X6SimplePostEventSoftRef(TSoftObjectPtr<class UAkAudioEvent> AkEventSoftRef, class AActor* EventActor, bool bAutoDestory, EX6AkAudioContext AudioContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "X6SimplePostEventSoftRef");

	Params::X6AkBlueprintLibrary_X6SimplePostEventSoftRef Parms{};

	Parms.AkEventSoftRef = AkEventSoftRef;
	Parms.EventActor = EventActor;
	Parms.bAutoDestory = bAutoDestory;
	Parms.AudioContext = AudioContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseExtension.X6AkBlueprintLibrary.X6SimplePostEventSoftRef2D
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class UAkAudioEvent>     AkEventSoftRef                                         (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AkBlueprintLibrary::X6SimplePostEventSoftRef2D(TSoftObjectPtr<class UAkAudioEvent> AkEventSoftRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "X6SimplePostEventSoftRef2D");

	Params::X6AkBlueprintLibrary_X6SimplePostEventSoftRef2D Parms{};

	Parms.AkEventSoftRef = AkEventSoftRef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseExtension.X6AkBlueprintLibrary.X6SimplePostEventSoftRefAsync
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class UAkAudioEvent>     AkEventSoftRef                                         (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           EventActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAutoDestory                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EX6AkAudioContext                       AudioContext                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AkBlueprintLibrary::X6SimplePostEventSoftRefAsync(TSoftObjectPtr<class UAkAudioEvent> AkEventSoftRef, class AActor* EventActor, bool bAutoDestory, EX6AkAudioContext AudioContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "X6SimplePostEventSoftRefAsync");

	Params::X6AkBlueprintLibrary_X6SimplePostEventSoftRefAsync Parms{};

	Parms.AkEventSoftRef = AkEventSoftRef;
	Parms.EventActor = EventActor;
	Parms.bAutoDestory = bAutoDestory;
	Parms.AudioContext = AudioContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseExtension.X6AkBlueprintLibrary.X6SimplePostEventSoftRefAsync2D
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class UAkAudioEvent>     AkEventSoftRef                                         (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AkBlueprintLibrary::X6SimplePostEventSoftRefAsync2D(TSoftObjectPtr<class UAkAudioEvent> AkEventSoftRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "X6SimplePostEventSoftRefAsync2D");

	Params::X6AkBlueprintLibrary_X6SimplePostEventSoftRefAsync2D Parms{};

	Parms.AkEventSoftRef = AkEventSoftRef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseExtension.X6AkBlueprintLibrary.X6SimplePostEventSoftRefAsyncAtLocation
// (Final, BlueprintCosmetic, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UAkAudioEvent>     AkEventSoftRef                                         (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  Orientation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// EX6AkAudioContext                       AudioContext                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AkBlueprintLibrary::X6SimplePostEventSoftRefAsyncAtLocation(class UObject* WorldContextObject, TSoftObjectPtr<class UAkAudioEvent> AkEventSoftRef, const struct FVector& Location, const struct FRotator& Orientation, EX6AkAudioContext AudioContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "X6SimplePostEventSoftRefAsyncAtLocation");

	Params::X6AkBlueprintLibrary_X6SimplePostEventSoftRefAsyncAtLocation Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.AkEventSoftRef = AkEventSoftRef;
	Parms.Location = std::move(Location);
	Parms.Orientation = std::move(Orientation);
	Parms.AudioContext = AudioContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseExtension.X6AkBlueprintLibrary.X6SimplePostEventSoftRefAsyncWithComponent
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class UAkAudioEvent>     AkEventSoftRef                                         (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAkComponent*                     AkComponent                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EX6AkAudioContext                       AudioContext                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AkBlueprintLibrary::X6SimplePostEventSoftRefAsyncWithComponent(TSoftObjectPtr<class UAkAudioEvent> AkEventSoftRef, class UAkComponent* AkComponent, EX6AkAudioContext AudioContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "X6SimplePostEventSoftRefAsyncWithComponent");

	Params::X6AkBlueprintLibrary_X6SimplePostEventSoftRefAsyncWithComponent Parms{};

	Parms.AkEventSoftRef = AkEventSoftRef;
	Parms.AkComponent = AkComponent;
	Parms.AudioContext = AudioContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseExtension.X6AkBlueprintLibrary.X6SimplePostEventSoftRefAtLocation
// (Final, BlueprintCosmetic, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UAkAudioEvent>     AkEventSoftRef                                         (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  Orientation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// EX6AkAudioContext                       AudioContext                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AkBlueprintLibrary::X6SimplePostEventSoftRefAtLocation(class UObject* WorldContextObject, TSoftObjectPtr<class UAkAudioEvent> AkEventSoftRef, const struct FVector& Location, const struct FRotator& Orientation, EX6AkAudioContext AudioContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "X6SimplePostEventSoftRefAtLocation");

	Params::X6AkBlueprintLibrary_X6SimplePostEventSoftRefAtLocation Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.AkEventSoftRef = AkEventSoftRef;
	Parms.Location = std::move(Location);
	Parms.Orientation = std::move(Orientation);
	Parms.AudioContext = AudioContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseExtension.X6AkBlueprintLibrary.X6SimplePostEventSoftRefWithComponent
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class UAkAudioEvent>     AkEventSoftRef                                         (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAkComponent*                     AkComponent                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EX6AkAudioContext                       AudioContext                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AkBlueprintLibrary::X6SimplePostEventSoftRefWithComponent(TSoftObjectPtr<class UAkAudioEvent> AkEventSoftRef, class UAkComponent* AkComponent, EX6AkAudioContext AudioContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "X6SimplePostEventSoftRefWithComponent");

	Params::X6AkBlueprintLibrary_X6SimplePostEventSoftRefWithComponent Parms{};

	Parms.AkEventSoftRef = AkEventSoftRef;
	Parms.AkComponent = AkComponent;
	Parms.AudioContext = AudioContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseExtension.X6AkBlueprintLibrary.X6StopSound
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AkBlueprintLibrary::X6StopSound(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "X6StopSound");

	Params::X6AkBlueprintLibrary_X6StopSound Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseExtension.X6AkBlueprintLibrary.X6Suspend
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bRenderAnyway                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AkBlueprintLibrary::X6Suspend(bool bRenderAnyway)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "X6Suspend");

	Params::X6AkBlueprintLibrary_X6Suspend Parms{};

	Parms.bRenderAnyway = bRenderAnyway;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseExtension.X6AkBlueprintLibrary.X6WakeupFromSuspend
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)

void UX6AkBlueprintLibrary::X6WakeupFromSuspend()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("X6AkBlueprintLibrary", "X6WakeupFromSuspend");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function WwiseExtension.X6AkManager.AkErrorOutput
// (Final, Native, Public)
// Parameters:
// const class FString&                    InErrorString                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint32                                  InPlayingID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                                  InGameObjectID                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AkManager::AkErrorOutput(const class FString& InErrorString, uint32 InPlayingID, uint64 InGameObjectID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AkManager", "AkErrorOutput");

	Params::X6AkManager_AkErrorOutput Parms{};

	Parms.InErrorString = std::move(InErrorString);
	Parms.InPlayingID = InPlayingID;
	Parms.InGameObjectID = InGameObjectID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseExtension.X6AkManager.DeinitializeFootstepSoundConfig
// (Final, Native, Public)

void UX6AkManager::DeinitializeFootstepSoundConfig()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AkManager", "DeinitializeFootstepSoundConfig");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function WwiseExtension.X6AkManager.GetAllAkEventDebugInfos
// (Final, Native, Public)
// Parameters:
// TArray<struct FAkEventDebugInfo>        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FAkEventDebugInfo> UX6AkManager::GetAllAkEventDebugInfos()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AkManager", "GetAllAkEventDebugInfos");

	Params::X6AkManager_GetAllAkEventDebugInfos Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WwiseExtension.X6AkManager.InitializeFootstepSoundConfig
// (Final, Native, Public)
// Parameters:
// const class UDataTable*                 InDataTable                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UX6AkManager::InitializeFootstepSoundConfig(const class UDataTable* InDataTable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("X6AkManager", "InitializeFootstepSoundConfig");

	Params::X6AkManager_InitializeFootstepSoundConfig Parms{};

	Parms.InDataTable = InDataTable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

