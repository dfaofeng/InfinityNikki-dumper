#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MainCharacterRPCHelperComponent

#include "Basic.hpp"

#include "EAthenaShowState_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "EPowerFrogStage_structs.hpp"
#include "EShepherdessAnimState_structs.hpp"
#include "F_MulticastDamageContext_structs.hpp"
#include "F_CameraParamsForRpc_structs.hpp"
#include "ECastPhantomStage_structs.hpp"
#include "F_MulticastTriggerContext_structs.hpp"
#include "ECastGuardStage_structs.hpp"
#include "EImaginationFireworkAnimState_structs.hpp"
#include "FInteractionIkSlots_structs.hpp"
#include "EAbilityMultiPlayerHelperType_structs.hpp"
#include "F_MulticastHitFrameContext_structs.hpp"
#include "Enum_InstrumentType_structs.hpp"
#include "F_WoolenHeartInfoCache_structs.hpp"
#include "F_AdjustTransformRPCParam_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_Multi_InterObjActive
// 0x0020 (0x0020 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_Multi_InterObjActive final
{
public:
	int64                                         EntityID;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Data;                                              // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int64                                         playerEntityID;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_Multi_InterObjActive) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_Multi_InterObjActive");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_Multi_InterObjActive) == 0x000020, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_Multi_InterObjActive");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_Multi_InterObjActive, EntityID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_Multi_InterObjActive::EntityID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_Multi_InterObjActive, Data) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_Multi_InterObjActive::Data' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_Multi_InterObjActive, playerEntityID) == 0x000018, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_Multi_InterObjActive::playerEntityID' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulti_SitOnBubbleCableCar
// 0x0028 (0x0028 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulti_SitOnBubbleCableCar final
{
public:
	int64                                         EntityID;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         playerEntityID;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Action;                                            // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         extraInfo;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         extraInfo2;                                        // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulti_SitOnBubbleCableCar) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulti_SitOnBubbleCableCar");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulti_SitOnBubbleCableCar) == 0x000028, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulti_SitOnBubbleCableCar");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulti_SitOnBubbleCableCar, EntityID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulti_SitOnBubbleCableCar::EntityID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulti_SitOnBubbleCableCar, playerEntityID) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulti_SitOnBubbleCableCar::playerEntityID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulti_SitOnBubbleCableCar, Action) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulti_SitOnBubbleCableCar::Action' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulti_SitOnBubbleCableCar, extraInfo) == 0x000018, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulti_SitOnBubbleCableCar::extraInfo' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulti_SitOnBubbleCableCar, extraInfo2) == 0x000020, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulti_SitOnBubbleCableCar::extraInfo2' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_AbilityBegin
// 0x0001 (0x0001 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityBegin final
{
public:
	uint8                                         HelperType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityBegin) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityBegin");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityBegin) == 0x000001, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityBegin");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityBegin, HelperType) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityBegin::HelperType' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_AbilityClearActor
// 0x0001 (0x0001 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityClearActor final
{
public:
	EAbilityMultiPlayerHelperType                 NewParam5;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityClearActor) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityClearActor");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityClearActor) == 0x000001, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityClearActor");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityClearActor, NewParam5) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityClearActor::NewParam5' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_AbilityClearNS
// 0x0001 (0x0001 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityClearNS final
{
public:
	EAbilityMultiPlayerHelperType                 NewParam5;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityClearNS) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityClearNS");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityClearNS) == 0x000001, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityClearNS");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityClearNS, NewParam5) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityClearNS::NewParam5' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_AbilityDestroyActor
// 0x0018 (0x0018 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityDestroyActor final
{
public:
	EAbilityMultiPlayerHelperType                 NewParam5;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 NewParam;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityDestroyActor) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityDestroyActor");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityDestroyActor) == 0x000018, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityDestroyActor");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityDestroyActor, NewParam5) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityDestroyActor::NewParam5' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityDestroyActor, NewParam) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityDestroyActor::NewParam' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_AbilityDestroyNS
// 0x0018 (0x0018 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityDestroyNS final
{
public:
	EAbilityMultiPlayerHelperType                 NewParam5;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 NewParam;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityDestroyNS) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityDestroyNS");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityDestroyNS) == 0x000018, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityDestroyNS");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityDestroyNS, NewParam5) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityDestroyNS::NewParam5' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityDestroyNS, NewParam) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityDestroyNS::NewParam' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_AbilityEnd
// 0x0001 (0x0001 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityEnd final
{
public:
	uint8                                         HelperType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityEnd) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityEnd");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityEnd) == 0x000001, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityEnd");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityEnd, HelperType) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityEnd::HelperType' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_AbilityPostEvent
// 0x0018 (0x0018 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityPostEvent final
{
public:
	EAbilityMultiPlayerHelperType                 NewParam5;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 NewParam;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityPostEvent) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityPostEvent");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityPostEvent) == 0x000018, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityPostEvent");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityPostEvent, NewParam5) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityPostEvent::NewParam5' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityPostEvent, NewParam) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilityPostEvent::NewParam' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_AbilitySetActorMeshLocation
// 0x0020 (0x0020 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilitySetActorMeshLocation final
{
public:
	EAbilityMultiPlayerHelperType                 NewParam;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                NewParam1;                                         // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilitySetActorMeshLocation) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilitySetActorMeshLocation");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilitySetActorMeshLocation) == 0x000020, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilitySetActorMeshLocation");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilitySetActorMeshLocation, NewParam) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilitySetActorMeshLocation::NewParam' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilitySetActorMeshLocation, NewParam1) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilitySetActorMeshLocation::NewParam1' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_AbilitySpawnActor
// 0x0090 (0x0090 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilitySpawnActor final
{
public:
	EAbilityMultiPlayerHelperType                 NewParam5;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 NewParam;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             NewParam1;                                         // 0x0020(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 NewParam2;                                         // 0x0080(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilitySpawnActor) == 0x000010, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilitySpawnActor");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilitySpawnActor) == 0x000090, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilitySpawnActor");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilitySpawnActor, NewParam5) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilitySpawnActor::NewParam5' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilitySpawnActor, NewParam) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilitySpawnActor::NewParam' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilitySpawnActor, NewParam1) == 0x000020, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilitySpawnActor::NewParam1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilitySpawnActor, NewParam2) == 0x000080, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilitySpawnActor::NewParam2' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_AbilitySpawnNS
// 0x00A0 (0x00A0 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilitySpawnNS final
{
public:
	EAbilityMultiPlayerHelperType                 NewParam5;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 NewParam;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             NewParam1;                                         // 0x0020(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 NewParam2;                                         // 0x0080(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          NewParam3;                                         // 0x0090(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam4;                                         // 0x0091(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilitySpawnNS) == 0x000010, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilitySpawnNS");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilitySpawnNS) == 0x0000A0, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilitySpawnNS");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilitySpawnNS, NewParam5) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilitySpawnNS::NewParam5' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilitySpawnNS, NewParam) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilitySpawnNS::NewParam' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilitySpawnNS, NewParam1) == 0x000020, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilitySpawnNS::NewParam1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilitySpawnNS, NewParam2) == 0x000080, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilitySpawnNS::NewParam2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilitySpawnNS, NewParam3) == 0x000090, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilitySpawnNS::NewParam3' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilitySpawnNS, NewParam4) == 0x000091, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AbilitySpawnNS::NewParam4' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_AdjustTransform
// 0x00D0 (0x00D0 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AdjustTransform final
{
public:
	struct FF_AdjustTransformRPCParam             AdjustParam;                                       // 0x0000(0x00D0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AdjustTransform) == 0x000010, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AdjustTransform");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AdjustTransform) == 0x0000D0, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AdjustTransform");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AdjustTransform, AdjustParam) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AdjustTransform::AdjustParam' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_AfkIdle
// 0x0002 (0x0002 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AfkIdle final
{
public:
	bool                                          inAfk;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bImmediatelyStop;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AfkIdle) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AfkIdle");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AfkIdle) == 0x000002, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AfkIdle");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AfkIdle, inAfk) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AfkIdle::inAfk' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AfkIdle, bImmediatelyStop) == 0x000001, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AfkIdle::bImmediatelyStop' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_AthenaAbilityBegin
// 0x0050 (0x0050 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AthenaAbilityBegin final
{
public:
	class FString                                 ABPPath;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 SeatAniPath;                                       // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                SeatOffset;                                        // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SeatRotation;                                      // 0x0038(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AthenaAbilityBegin) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AthenaAbilityBegin");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AthenaAbilityBegin) == 0x000050, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AthenaAbilityBegin");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AthenaAbilityBegin, ABPPath) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AthenaAbilityBegin::ABPPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AthenaAbilityBegin, SeatAniPath) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AthenaAbilityBegin::SeatAniPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AthenaAbilityBegin, SeatOffset) == 0x000020, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AthenaAbilityBegin::SeatOffset' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AthenaAbilityBegin, SeatRotation) == 0x000038, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AthenaAbilityBegin::SeatRotation' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_AthenaSwitchAnimStage
// 0x0001 (0x0001 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AthenaSwitchAnimStage final
{
public:
	EAthenaShowState                              AniStage;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AthenaSwitchAnimStage) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AthenaSwitchAnimStage");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AthenaSwitchAnimStage) == 0x000001, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AthenaSwitchAnimStage");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AthenaSwitchAnimStage, AniStage) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AthenaSwitchAnimStage::AniStage' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_AttachRibbonFishMesh
// 0x0020 (0x0020 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AttachRibbonFishMesh final
{
public:
	class FString                                 MeshAssetPath;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CurveAssetPath;                                    // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AttachRibbonFishMesh) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AttachRibbonFishMesh");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AttachRibbonFishMesh) == 0x000020, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AttachRibbonFishMesh");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AttachRibbonFishMesh, MeshAssetPath) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AttachRibbonFishMesh::MeshAssetPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AttachRibbonFishMesh, CurveAssetPath) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_AttachRibbonFishMesh::CurveAssetPath' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_BallonDuckAttachToCarrier
// 0x0018 (0x0018 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BallonDuckAttachToCarrier final
{
public:
	class FString                                 NewParam;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         NewParam1;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewParam2;                                         // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BallonDuckAttachToCarrier) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BallonDuckAttachToCarrier");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BallonDuckAttachToCarrier) == 0x000018, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BallonDuckAttachToCarrier");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BallonDuckAttachToCarrier, NewParam) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BallonDuckAttachToCarrier::NewParam' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BallonDuckAttachToCarrier, NewParam1) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BallonDuckAttachToCarrier::NewParam1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BallonDuckAttachToCarrier, NewParam2) == 0x000014, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BallonDuckAttachToCarrier::NewParam2' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_BallonDuckDetachFromCarrier
// 0x0010 (0x0010 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BallonDuckDetachFromCarrier final
{
public:
	class FString                                 NewParam;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BallonDuckDetachFromCarrier) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BallonDuckDetachFromCarrier");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BallonDuckDetachFromCarrier) == 0x000010, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BallonDuckDetachFromCarrier");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BallonDuckDetachFromCarrier, NewParam) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BallonDuckDetachFromCarrier::NewParam' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_BallonDuckRefreshWeapon
// 0x0004 (0x0004 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BallonDuckRefreshWeapon final
{
public:
	int32                                         NewParam;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BallonDuckRefreshWeapon) == 0x000004, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BallonDuckRefreshWeapon");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BallonDuckRefreshWeapon) == 0x000004, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BallonDuckRefreshWeapon");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BallonDuckRefreshWeapon, NewParam) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BallonDuckRefreshWeapon::NewParam' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_BallonDuckTrigger
// 0x0004 (0x0004 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BallonDuckTrigger final
{
public:
	int32                                         NewParam;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BallonDuckTrigger) == 0x000004, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BallonDuckTrigger");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BallonDuckTrigger) == 0x000004, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BallonDuckTrigger");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BallonDuckTrigger, NewParam) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BallonDuckTrigger::NewParam' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_BeginCleaningAnimal
// 0x0018 (0x0018 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BeginCleaningAnimal final
{
public:
	int64                                         AnimalEntityID;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         AbilityEffectID;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LookAtAnimRotYaw;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BeginCleaningAnimal) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BeginCleaningAnimal");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BeginCleaningAnimal) == 0x000018, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BeginCleaningAnimal");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BeginCleaningAnimal, AnimalEntityID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BeginCleaningAnimal::AnimalEntityID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BeginCleaningAnimal, AbilityEffectID) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BeginCleaningAnimal::AbilityEffectID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BeginCleaningAnimal, LookAtAnimRotYaw) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BeginCleaningAnimal::LookAtAnimRotYaw' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_BeginFishing
// 0x0020 (0x0020 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BeginFishing final
{
public:
	struct FVector                                FishFloatLocation;                                 // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInPrepare;                                       // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BeginFishing) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BeginFishing");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BeginFishing) == 0x000020, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BeginFishing");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BeginFishing, FishFloatLocation) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BeginFishing::FishFloatLocation' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BeginFishing, IsInPrepare) == 0x000018, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BeginFishing::IsInPrepare' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_BeginGetWoolenHeart
// 0x0050 (0x0050 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BeginGetWoolenHeart final
{
public:
	int64                                         WoolenHeartEntityID;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_WoolenHeartInfoCache                WoolenHeartInfoCache;                              // 0x0008(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BeginGetWoolenHeart) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BeginGetWoolenHeart");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BeginGetWoolenHeart) == 0x000050, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BeginGetWoolenHeart");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BeginGetWoolenHeart, WoolenHeartEntityID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BeginGetWoolenHeart::WoolenHeartEntityID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BeginGetWoolenHeart, WoolenHeartInfoCache) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BeginGetWoolenHeart::WoolenHeartInfoCache' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_BlowBubbleSpawnNS
// 0x0040 (0x0040 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BlowBubbleSpawnNS final
{
public:
	class FString                                 AssetPath;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BlowBubbleSpawnNS) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BlowBubbleSpawnNS");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BlowBubbleSpawnNS) == 0x000040, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BlowBubbleSpawnNS");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BlowBubbleSpawnNS, AssetPath) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BlowBubbleSpawnNS::AssetPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BlowBubbleSpawnNS, Location) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BlowBubbleSpawnNS::Location' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BlowBubbleSpawnNS, Rotation) == 0x000028, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BlowBubbleSpawnNS::Rotation' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_BlueberryPicnicRefreshWeapon
// 0x0010 (0x0010 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BlueberryPicnicRefreshWeapon final
{
public:
	class FString                                 NewParam;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BlueberryPicnicRefreshWeapon) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BlueberryPicnicRefreshWeapon");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BlueberryPicnicRefreshWeapon) == 0x000010, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BlueberryPicnicRefreshWeapon");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BlueberryPicnicRefreshWeapon, NewParam) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BlueberryPicnicRefreshWeapon::NewParam' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_BlueberryPicnicTrigger
// 0x0030 (0x0030 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BlueberryPicnicTrigger final
{
public:
	class FString                                 NewParam1;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 NewParam2;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 NewParam3;                                         // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BlueberryPicnicTrigger) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BlueberryPicnicTrigger");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BlueberryPicnicTrigger) == 0x000030, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BlueberryPicnicTrigger");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BlueberryPicnicTrigger, NewParam1) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BlueberryPicnicTrigger::NewParam1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BlueberryPicnicTrigger, NewParam2) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BlueberryPicnicTrigger::NewParam2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BlueberryPicnicTrigger, NewParam3) == 0x000020, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BlueberryPicnicTrigger::NewParam3' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_BoxStopPhysics
// 0x0070 (0x0070 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BoxStopPhysics final
{
public:
	int64                                         BoxID;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             FinalTrans;                                        // 0x0010(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BoxStopPhysics) == 0x000010, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BoxStopPhysics");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BoxStopPhysics) == 0x000070, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BoxStopPhysics");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BoxStopPhysics, BoxID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BoxStopPhysics::BoxID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BoxStopPhysics, FinalTrans) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_BoxStopPhysics::FinalTrans' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_Buff
// 0x0020 (0x0020 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_Buff final
{
public:
	int64                                         EntityID;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 BuffDAPath;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bRemove;                                           // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_Buff) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_Buff");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_Buff) == 0x000020, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_Buff");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_Buff, EntityID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_Buff::EntityID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_Buff, BuffDAPath) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_Buff::BuffDAPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_Buff, bRemove) == 0x000018, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_Buff::bRemove' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_Bullet
// 0x00F0 (0x00F0 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_Bullet final
{
public:
	class FString                                 BulletDAPath;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FF_MulticastTriggerContext             BP_TriggerContext;                                 // 0x0010(0x00E0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_Bullet) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_Bullet");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_Bullet) == 0x0000F0, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_Bullet");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_Bullet, BulletDAPath) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_Bullet::BulletDAPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_Bullet, BP_TriggerContext) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_Bullet::BP_TriggerContext' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_CatchInsectSuccess
// 0x0008 (0x0008 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CatchInsectSuccess final
{
public:
	int64                                         InsectEntityID;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CatchInsectSuccess) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CatchInsectSuccess");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CatchInsectSuccess) == 0x000008, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CatchInsectSuccess");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CatchInsectSuccess, InsectEntityID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CatchInsectSuccess::InsectEntityID' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_CelebrationGuardBegin
// 0x0010 (0x0010 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CelebrationGuardBegin final
{
public:
	class FString                                 NewParam;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CelebrationGuardBegin) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CelebrationGuardBegin");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CelebrationGuardBegin) == 0x000010, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CelebrationGuardBegin");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CelebrationGuardBegin, NewParam) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CelebrationGuardBegin::NewParam' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_CelebrationGuardSwitchAnimStage
// 0x0003 (0x0003 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CelebrationGuardSwitchAnimStage final
{
public:
	ECastGuardStage                               NewParam;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam1;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam2;                                         // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CelebrationGuardSwitchAnimStage) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CelebrationGuardSwitchAnimStage");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CelebrationGuardSwitchAnimStage) == 0x000003, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CelebrationGuardSwitchAnimStage");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CelebrationGuardSwitchAnimStage, NewParam) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CelebrationGuardSwitchAnimStage::NewParam' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CelebrationGuardSwitchAnimStage, NewParam1) == 0x000001, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CelebrationGuardSwitchAnimStage::NewParam1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CelebrationGuardSwitchAnimStage, NewParam2) == 0x000002, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CelebrationGuardSwitchAnimStage::NewParam2' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_CelebrationPhantomBegin
// 0x0010 (0x0010 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CelebrationPhantomBegin final
{
public:
	class FString                                 NewParam;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CelebrationPhantomBegin) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CelebrationPhantomBegin");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CelebrationPhantomBegin) == 0x000010, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CelebrationPhantomBegin");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CelebrationPhantomBegin, NewParam) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CelebrationPhantomBegin::NewParam' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_CelebrationPhantomSwitchAnimStage
// 0x0001 (0x0001 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CelebrationPhantomSwitchAnimStage final
{
public:
	ECastPhantomStage                             NewParam;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CelebrationPhantomSwitchAnimStage) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CelebrationPhantomSwitchAnimStage");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CelebrationPhantomSwitchAnimStage) == 0x000001, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CelebrationPhantomSwitchAnimStage");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CelebrationPhantomSwitchAnimStage, NewParam) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CelebrationPhantomSwitchAnimStage::NewParam' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_ChangeInstArticulation
// 0x0001 (0x0001 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ChangeInstArticulation final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ChangeInstArticulation) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ChangeInstArticulation");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ChangeInstArticulation) == 0x000001, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ChangeInstArticulation");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ChangeInstArticulation, Value) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ChangeInstArticulation::Value' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_ClaretStateChange
// 0x0004 (0x0004 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ClaretStateChange final
{
public:
	int32                                         State;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ClaretStateChange) == 0x000004, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ClaretStateChange");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ClaretStateChange) == 0x000004, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ClaretStateChange");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ClaretStateChange, State) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ClaretStateChange::State' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_CreateFlyEffect
// 0x0048 (0x0048 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CreateFlyEffect final
{
public:
	class FString                                 NiagaraPath;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                StartLoc;                                          // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndLoc;                                            // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         targetSpawnerID;                                   // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CreateFlyEffect) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CreateFlyEffect");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CreateFlyEffect) == 0x000048, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CreateFlyEffect");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CreateFlyEffect, NiagaraPath) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CreateFlyEffect::NiagaraPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CreateFlyEffect, StartLoc) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CreateFlyEffect::StartLoc' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CreateFlyEffect, EndLoc) == 0x000028, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CreateFlyEffect::EndLoc' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CreateFlyEffect, targetSpawnerID) == 0x000040, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_CreateFlyEffect::targetSpawnerID' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_DamiaoPerformStart
// 0x0050 (0x0050 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DamiaoPerformStart final
{
public:
	class FString                                 NewParam;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                NewParam1;                                         // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               NewParam2;                                         // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int32>                                 NewParam3;                                         // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DamiaoPerformStart) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DamiaoPerformStart");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DamiaoPerformStart) == 0x000050, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DamiaoPerformStart");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DamiaoPerformStart, NewParam) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DamiaoPerformStart::NewParam' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DamiaoPerformStart, NewParam1) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DamiaoPerformStart::NewParam1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DamiaoPerformStart, NewParam2) == 0x000028, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DamiaoPerformStart::NewParam2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DamiaoPerformStart, NewParam3) == 0x000040, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DamiaoPerformStart::NewParam3' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_DayDreamBegin
// 0x0004 (0x0004 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DayDreamBegin final
{
public:
	int32                                         NewParam;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DayDreamBegin) == 0x000004, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DayDreamBegin");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DayDreamBegin) == 0x000004, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DayDreamBegin");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DayDreamBegin, NewParam) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DayDreamBegin::NewParam' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_DeadWoodBadPerformance
// 0x0004 (0x0004 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DeadWoodBadPerformance final
{
public:
	int32                                         PhaseIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DeadWoodBadPerformance) == 0x000004, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DeadWoodBadPerformance");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DeadWoodBadPerformance) == 0x000004, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DeadWoodBadPerformance");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DeadWoodBadPerformance, PhaseIndex) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DeadWoodBadPerformance::PhaseIndex' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_DeadWoodGoodPerformance
// 0x0004 (0x0004 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DeadWoodGoodPerformance final
{
public:
	int32                                         PhaseIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DeadWoodGoodPerformance) == 0x000004, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DeadWoodGoodPerformance");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DeadWoodGoodPerformance) == 0x000004, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DeadWoodGoodPerformance");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DeadWoodGoodPerformance, PhaseIndex) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DeadWoodGoodPerformance::PhaseIndex' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_DeadWoodPerformaceState
// 0x0001 (0x0001 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DeadWoodPerformaceState final
{
public:
	bool                                          IsContinue;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DeadWoodPerformaceState) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DeadWoodPerformaceState");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DeadWoodPerformaceState) == 0x000001, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DeadWoodPerformaceState");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DeadWoodPerformaceState, IsContinue) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DeadWoodPerformaceState::IsContinue' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_DoDamage_Hitframe
// 0x0180 (0x0180 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DoDamage_Hitframe final
{
public:
	class FString                                 DamageDAPath;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FF_MulticastHitFrameContext            MulticastHitframeContext;                          // 0x0010(0x0170)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DoDamage_Hitframe) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DoDamage_Hitframe");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DoDamage_Hitframe) == 0x000180, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DoDamage_Hitframe");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DoDamage_Hitframe, DamageDAPath) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DoDamage_Hitframe::DamageDAPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DoDamage_Hitframe, MulticastHitframeContext) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DoDamage_Hitframe::MulticastHitframeContext' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_DoRelive
// 0x0008 (0x0008 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DoRelive final
{
public:
	int64                                         EntityID;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DoRelive) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DoRelive");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DoRelive) == 0x000008, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DoRelive");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DoRelive, EntityID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_DoRelive::EntityID' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_EndCleaningAnimal
// 0x0010 (0x0010 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EndCleaningAnimal final
{
public:
	int64                                         AnimalEntityID;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         AbilityEffectID;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EndCleaningAnimal) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EndCleaningAnimal");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EndCleaningAnimal) == 0x000010, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EndCleaningAnimal");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EndCleaningAnimal, AnimalEntityID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EndCleaningAnimal::AnimalEntityID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EndCleaningAnimal, AbilityEffectID) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EndCleaningAnimal::AbilityEffectID' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_EndFishing
// 0x0008 (0x0008 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EndFishing final
{
public:
	int64                                         FishEntityID;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EndFishing) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EndFishing");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EndFishing) == 0x000008, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EndFishing");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EndFishing, FishEntityID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EndFishing::FishEntityID' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_EnterFishingProcess
// 0x0008 (0x0008 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EnterFishingProcess final
{
public:
	int64                                         FishEntityID;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EnterFishingProcess) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EnterFishingProcess");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EnterFishingProcess) == 0x000008, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EnterFishingProcess");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EnterFishingProcess, FishEntityID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EnterFishingProcess::FishEntityID' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_EnterInstrument
// 0x0001 (0x0001 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EnterInstrument final
{
public:
	Enum_InstrumentType                           NewParam;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EnterInstrument) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EnterInstrument");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EnterInstrument) == 0x000001, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EnterInstrument");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EnterInstrument, NewParam) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EnterInstrument::NewParam' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_EquipWeaponByConfigPath
// 0x0028 (0x0028 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EquipWeaponByConfigPath final
{
public:
	class FString                                 WeaponConfigPath;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 SlotType;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bImmediateRequest;                                 // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInSync;                                           // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EquipWeaponByConfigPath) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EquipWeaponByConfigPath");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EquipWeaponByConfigPath) == 0x000028, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EquipWeaponByConfigPath");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EquipWeaponByConfigPath, WeaponConfigPath) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EquipWeaponByConfigPath::WeaponConfigPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EquipWeaponByConfigPath, SlotType) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EquipWeaponByConfigPath::SlotType' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EquipWeaponByConfigPath, bImmediateRequest) == 0x000020, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EquipWeaponByConfigPath::bImmediateRequest' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EquipWeaponByConfigPath, bInSync) == 0x000021, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EquipWeaponByConfigPath::bInSync' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_EquipWeaponByID
// 0x0028 (0x0028 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EquipWeaponByID final
{
public:
	int32                                         WeaponID;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SlotType;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bImmediateRequest;                                 // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInSync;                                           // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CustomWeaponState;                                 // 0x001C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EquipWeaponByID) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EquipWeaponByID");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EquipWeaponByID) == 0x000028, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EquipWeaponByID");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EquipWeaponByID, WeaponID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EquipWeaponByID::WeaponID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EquipWeaponByID, SlotType) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EquipWeaponByID::SlotType' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EquipWeaponByID, bImmediateRequest) == 0x000018, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EquipWeaponByID::bImmediateRequest' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EquipWeaponByID, bInSync) == 0x000019, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EquipWeaponByID::bInSync' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EquipWeaponByID, CustomWeaponState) == 0x00001C, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_EquipWeaponByID::CustomWeaponState' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_ExitFishingProcess
// 0x0018 (0x0018 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ExitFishingProcess final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Reason;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ExitFishingProcess) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ExitFishingProcess");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ExitFishingProcess) == 0x000018, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ExitFishingProcess");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ExitFishingProcess, Success) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ExitFishingProcess::Success' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ExitFishingProcess, Reason) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ExitFishingProcess::Reason' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_FastUnequipWeapon
// 0x0002 (0x0002 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_FastUnequipWeapon final
{
public:
	bool                                          bImmediateRequest;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInSync;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_FastUnequipWeapon) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_FastUnequipWeapon");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_FastUnequipWeapon) == 0x000002, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_FastUnequipWeapon");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_FastUnequipWeapon, bImmediateRequest) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_FastUnequipWeapon::bImmediateRequest' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_FastUnequipWeapon, bInSync) == 0x000001, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_FastUnequipWeapon::bInSync' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_FishingUpdateParams
// 0x0010 (0x0010 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_FishingUpdateParams final
{
public:
	int64                                         FishEntityID;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsReelIn;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLeft;                                            // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_FishingUpdateParams) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_FishingUpdateParams");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_FishingUpdateParams) == 0x000010, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_FishingUpdateParams");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_FishingUpdateParams, FishEntityID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_FishingUpdateParams::FishEntityID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_FishingUpdateParams, IsReelIn) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_FishingUpdateParams::IsReelIn' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_FishingUpdateParams, IsLeft) == 0x000009, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_FishingUpdateParams::IsLeft' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_GlowInsectNet
// 0x0001 (0x0001 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_GlowInsectNet final
{
public:
	bool                                          bGlow;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_GlowInsectNet) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_GlowInsectNet");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_GlowInsectNet) == 0x000001, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_GlowInsectNet");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_GlowInsectNet, bGlow) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_GlowInsectNet::bGlow' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_ImaginationFireworkBegin
// 0x0060 (0x0060 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ImaginationFireworkBegin final
{
public:
	class FString                                 NewParam;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 NewParam1;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                NewParam2;                                         // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               NewParam3;                                         // 0x0038(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 NewParam4;                                         // 0x0050(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ImaginationFireworkBegin) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ImaginationFireworkBegin");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ImaginationFireworkBegin) == 0x000060, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ImaginationFireworkBegin");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ImaginationFireworkBegin, NewParam) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ImaginationFireworkBegin::NewParam' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ImaginationFireworkBegin, NewParam1) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ImaginationFireworkBegin::NewParam1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ImaginationFireworkBegin, NewParam2) == 0x000020, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ImaginationFireworkBegin::NewParam2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ImaginationFireworkBegin, NewParam3) == 0x000038, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ImaginationFireworkBegin::NewParam3' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ImaginationFireworkBegin, NewParam4) == 0x000050, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ImaginationFireworkBegin::NewParam4' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_ImaginationFireworkSwitchStage
// 0x0003 (0x0003 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ImaginationFireworkSwitchStage final
{
public:
	EImaginationFireworkAnimState                 NewParam;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam1;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam2;                                         // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ImaginationFireworkSwitchStage) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ImaginationFireworkSwitchStage");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ImaginationFireworkSwitchStage) == 0x000003, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ImaginationFireworkSwitchStage");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ImaginationFireworkSwitchStage, NewParam) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ImaginationFireworkSwitchStage::NewParam' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ImaginationFireworkSwitchStage, NewParam1) == 0x000001, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ImaginationFireworkSwitchStage::NewParam1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ImaginationFireworkSwitchStage, NewParam2) == 0x000002, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ImaginationFireworkSwitchStage::NewParam2' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_InstrumentDestroyActor
// 0x0010 (0x0010 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_InstrumentDestroyActor final
{
public:
	class FString                                 Handle;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_InstrumentDestroyActor) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_InstrumentDestroyActor");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_InstrumentDestroyActor) == 0x000010, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_InstrumentDestroyActor");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_InstrumentDestroyActor, Handle) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_InstrumentDestroyActor::Handle' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_InstrumentDestroyNS
// 0x0010 (0x0010 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_InstrumentDestroyNS final
{
public:
	class FString                                 NewParam;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_InstrumentDestroyNS) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_InstrumentDestroyNS");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_InstrumentDestroyNS) == 0x000010, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_InstrumentDestroyNS");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_InstrumentDestroyNS, NewParam) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_InstrumentDestroyNS::NewParam' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_InstrumentSpawnActor
// 0x0080 (0x0080 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_InstrumentSpawnActor final
{
public:
	class FString                                 ActorClassPath;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FTransform                             Transform;                                         // 0x0010(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Handle;                                            // 0x0070(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_InstrumentSpawnActor) == 0x000010, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_InstrumentSpawnActor");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_InstrumentSpawnActor) == 0x000080, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_InstrumentSpawnActor");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_InstrumentSpawnActor, ActorClassPath) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_InstrumentSpawnActor::ActorClassPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_InstrumentSpawnActor, Transform) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_InstrumentSpawnActor::Transform' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_InstrumentSpawnActor, Handle) == 0x000070, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_InstrumentSpawnActor::Handle' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_InstrumentSpawnNS
// 0x0090 (0x0090 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_InstrumentSpawnNS final
{
public:
	class FString                                 NewParam;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FTransform                             NewParam1;                                         // 0x0010(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 NewParam2;                                         // 0x0070(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          NewParam3;                                         // 0x0080(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam4;                                         // 0x0081(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_InstrumentSpawnNS) == 0x000010, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_InstrumentSpawnNS");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_InstrumentSpawnNS) == 0x000090, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_InstrumentSpawnNS");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_InstrumentSpawnNS, NewParam) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_InstrumentSpawnNS::NewParam' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_InstrumentSpawnNS, NewParam1) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_InstrumentSpawnNS::NewParam1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_InstrumentSpawnNS, NewParam2) == 0x000070, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_InstrumentSpawnNS::NewParam2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_InstrumentSpawnNS, NewParam3) == 0x000080, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_InstrumentSpawnNS::NewParam3' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_InstrumentSpawnNS, NewParam4) == 0x000081, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_InstrumentSpawnNS::NewParam4' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_MagicBanquetSpawnTable
// 0x0004 (0x0004 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MagicBanquetSpawnTable final
{
public:
	int32                                         NewParam;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MagicBanquetSpawnTable) == 0x000004, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MagicBanquetSpawnTable");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MagicBanquetSpawnTable) == 0x000004, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MagicBanquetSpawnTable");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MagicBanquetSpawnTable, NewParam) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MagicBanquetSpawnTable::NewParam' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_MapleLeavesChangeTree
// 0x0018 (0x0018 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MapleLeavesChangeTree final
{
public:
	TArray<class FString>                         NewParam;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          NewParam1;                                         // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MapleLeavesChangeTree) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MapleLeavesChangeTree");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MapleLeavesChangeTree) == 0x000018, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MapleLeavesChangeTree");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MapleLeavesChangeTree, NewParam) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MapleLeavesChangeTree::NewParam' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MapleLeavesChangeTree, NewParam1) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MapleLeavesChangeTree::NewParam1' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_MidnightPromShowGhost
// 0x0030 (0x0030 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MidnightPromShowGhost final
{
public:
	class FString                                 NewParam;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                NewParam1;                                         // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NewParam2;                                         // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MidnightPromShowGhost) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MidnightPromShowGhost");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MidnightPromShowGhost) == 0x000030, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MidnightPromShowGhost");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MidnightPromShowGhost, NewParam) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MidnightPromShowGhost::NewParam' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MidnightPromShowGhost, NewParam1) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MidnightPromShowGhost::NewParam1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MidnightPromShowGhost, NewParam2) == 0x000028, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MidnightPromShowGhost::NewParam2' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_MultiCallVehicleFunction
// 0x0010 (0x0010 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiCallVehicleFunction final
{
public:
	int64                                         VehicleEntityId;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         FuncId;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiCallVehicleFunction) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiCallVehicleFunction");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiCallVehicleFunction) == 0x000010, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiCallVehicleFunction");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiCallVehicleFunction, VehicleEntityId) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiCallVehicleFunction::VehicleEntityId' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiCallVehicleFunction, FuncId) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiCallVehicleFunction::FuncId' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_MultiPassengerBindEntity
// 0x0010 (0x0010 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPassengerBindEntity final
{
public:
	int64                                         VehicleEntityId;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         PassenegerID;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPassengerBindEntity) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPassengerBindEntity");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPassengerBindEntity) == 0x000010, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPassengerBindEntity");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPassengerBindEntity, VehicleEntityId) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPassengerBindEntity::VehicleEntityId' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPassengerBindEntity, PassenegerID) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPassengerBindEntity::PassenegerID' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_MultiPhotographConfirmInvite
// 0x0010 (0x0010 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographConfirmInvite final
{
public:
	int64                                         FromRoleID;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BAccept;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographConfirmInvite) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographConfirmInvite");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographConfirmInvite) == 0x000010, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographConfirmInvite");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographConfirmInvite, FromRoleID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographConfirmInvite::FromRoleID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographConfirmInvite, BAccept) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographConfirmInvite::BAccept' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_MultiPhotographConfirmTransfer
// 0x0010 (0x0010 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographConfirmTransfer final
{
public:
	bool                                          BAccept;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         PlyaerRoleID;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographConfirmTransfer) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographConfirmTransfer");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographConfirmTransfer) == 0x000010, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographConfirmTransfer");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographConfirmTransfer, BAccept) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographConfirmTransfer::BAccept' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographConfirmTransfer, PlyaerRoleID) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographConfirmTransfer::PlyaerRoleID' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_MultiPhotographEnter
// 0x0008 (0x0008 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographEnter final
{
public:
	int64                                         PlayerRoleID;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographEnter) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographEnter");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographEnter) == 0x000008, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographEnter");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographEnter, PlayerRoleID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographEnter::PlayerRoleID' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_MultiPhotographExit
// 0x0018 (0x0018 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographExit final
{
public:
	bool                                          bController;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 UserName;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographExit) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographExit");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographExit) == 0x000018, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographExit");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographExit, bController) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographExit::bController' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographExit, UserName) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographExit::UserName' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_MultiPhotographInvite
// 0x0008 (0x0008 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographInvite final
{
public:
	int64                                         PlayerRoleID;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographInvite) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographInvite");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographInvite) == 0x000008, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographInvite");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographInvite, PlayerRoleID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographInvite::PlayerRoleID' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_MultiPhotographInviteeReadyToInviter
// 0x0008 (0x0008 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographInviteeReadyToInviter final
{
public:
	int64                                         InviterRid;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographInviteeReadyToInviter) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographInviteeReadyToInviter");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographInviteeReadyToInviter) == 0x000008, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographInviteeReadyToInviter");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographInviteeReadyToInviter, InviterRid) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographInviteeReadyToInviter::InviterRid' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_MultiPhotographLookAt
// 0x0001 (0x0001 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographLookAt final
{
public:
	bool                                          EnableLookAt;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographLookAt) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographLookAt");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographLookAt) == 0x000001, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographLookAt");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographLookAt, EnableLookAt) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographLookAt::EnableLookAt' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_MultiPhotographNikkiRelativeRotation
// 0x0020 (0x0020 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographNikkiRelativeRotation final
{
public:
	struct FRotator                               RelativeRotation;                                  // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          BCatDoll;                                          // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BAnimal;                                           // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographNikkiRelativeRotation) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographNikkiRelativeRotation");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographNikkiRelativeRotation) == 0x000020, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographNikkiRelativeRotation");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographNikkiRelativeRotation, RelativeRotation) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographNikkiRelativeRotation::RelativeRotation' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographNikkiRelativeRotation, BCatDoll) == 0x000018, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographNikkiRelativeRotation::BCatDoll' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographNikkiRelativeRotation, BAnimal) == 0x000019, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographNikkiRelativeRotation::BAnimal' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_MultiPhotographNikkiState
// 0x0018 (0x0018 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographNikkiState final
{
public:
	bool                                          BInSpecial3CState;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InitPoseID;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 InitalStanceTag;                                   // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographNikkiState) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographNikkiState");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographNikkiState) == 0x000018, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographNikkiState");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographNikkiState, BInSpecial3CState) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographNikkiState::BInSpecial3CState' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographNikkiState, InitPoseID) == 0x000004, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographNikkiState::InitPoseID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographNikkiState, InitalStanceTag) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographNikkiState::InitalStanceTag' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_MultiPhotographNormalMsg
// 0x0010 (0x0010 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographNormalMsg final
{
public:
	class FString                                 MsgStr;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographNormalMsg) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographNormalMsg");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographNormalMsg) == 0x000010, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographNormalMsg");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographNormalMsg, MsgStr) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographNormalMsg::MsgStr' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_MultiPhotographPlayAnim
// 0x0004 (0x0004 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographPlayAnim final
{
public:
	int32                                         PoseID;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographPlayAnim) == 0x000004, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographPlayAnim");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographPlayAnim) == 0x000004, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographPlayAnim");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographPlayAnim, PoseID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographPlayAnim::PoseID' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_MultiPhotographRemove
// 0x0008 (0x0008 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographRemove final
{
public:
	int64                                         PlayerRoleID;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographRemove) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographRemove");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographRemove) == 0x000008, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographRemove");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographRemove, PlayerRoleID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographRemove::PlayerRoleID' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_MultiPhotographRestoreAnim
// 0x0001 (0x0001 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographRestoreAnim final
{
public:
	bool                                          BFromPhotographExit;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographRestoreAnim) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographRestoreAnim");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographRestoreAnim) == 0x000001, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographRestoreAnim");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographRestoreAnim, BFromPhotographExit) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographRestoreAnim::BFromPhotographExit' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_MultiPhotographSetAnim
// 0x0008 (0x0008 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographSetAnim final
{
public:
	double                                        Percent;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographSetAnim) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographSetAnim");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographSetAnim) == 0x000008, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographSetAnim");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographSetAnim, Percent) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographSetAnim::Percent' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_MultiPhotographTakePhoto
// 0x0108 (0x0108 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographTakePhoto final
{
public:
	struct FVector                                NikkiLoc;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CameraActorLoc;                                    // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LookAtRealCenterLoc;                               // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CameraRelativeLoc;                                 // 0x0048(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_CameraParamsForRpc                  Params_0;                                          // 0x0060(0x00A8)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographTakePhoto) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographTakePhoto");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographTakePhoto) == 0x000108, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographTakePhoto");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographTakePhoto, NikkiLoc) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographTakePhoto::NikkiLoc' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographTakePhoto, CameraActorLoc) == 0x000018, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographTakePhoto::CameraActorLoc' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographTakePhoto, LookAtRealCenterLoc) == 0x000030, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographTakePhoto::LookAtRealCenterLoc' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographTakePhoto, CameraRelativeLoc) == 0x000048, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographTakePhoto::CameraRelativeLoc' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographTakePhoto, Params_0) == 0x000060, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographTakePhoto::Params_0' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_MultiPhotographTransfer
// 0x0010 (0x0010 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographTransfer final
{
public:
	int64                                         PlayerRoleID;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BFromController;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographTransfer) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographTransfer");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographTransfer) == 0x000010, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographTransfer");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographTransfer, PlayerRoleID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographTransfer::PlayerRoleID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographTransfer, BFromController) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographTransfer::BFromController' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_MultiPhotographUpdateCameraParams
// 0x00A8 (0x00A8 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographUpdateCameraParams final
{
public:
	struct FF_CameraParamsForRpc                  Params_0;                                          // 0x0000(0x00A8)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographUpdateCameraParams) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographUpdateCameraParams");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographUpdateCameraParams) == 0x0000A8, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographUpdateCameraParams");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographUpdateCameraParams, Params_0) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographUpdateCameraParams::Params_0' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_MultiPhotographUpdateCameraPos
// 0x0060 (0x0060 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographUpdateCameraPos final
{
public:
	struct FVector                                NikkiLoc;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CameraActorLoc;                                    // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LookAtRealCenterLoc;                               // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CameraRelativeLoc;                                 // 0x0048(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographUpdateCameraPos) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographUpdateCameraPos");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographUpdateCameraPos) == 0x000060, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographUpdateCameraPos");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographUpdateCameraPos, NikkiLoc) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographUpdateCameraPos::NikkiLoc' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographUpdateCameraPos, CameraActorLoc) == 0x000018, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographUpdateCameraPos::CameraActorLoc' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographUpdateCameraPos, LookAtRealCenterLoc) == 0x000030, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographUpdateCameraPos::LookAtRealCenterLoc' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographUpdateCameraPos, CameraRelativeLoc) == 0x000048, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MultiPhotographUpdateCameraPos::CameraRelativeLoc' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_MusicBoxCombatHypnosis
// 0x0020 (0x0020 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MusicBoxCombatHypnosis final
{
public:
	TArray<int64>                                 RemoveList;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int64>                                 AddList;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MusicBoxCombatHypnosis) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MusicBoxCombatHypnosis");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MusicBoxCombatHypnosis) == 0x000020, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MusicBoxCombatHypnosis");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MusicBoxCombatHypnosis, RemoveList) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MusicBoxCombatHypnosis::RemoveList' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MusicBoxCombatHypnosis, AddList) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MusicBoxCombatHypnosis::AddList' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_MusicBoxUpdateBaseRing
// 0x0008 (0x0008 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MusicBoxUpdateBaseRing final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Level;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MusicBoxUpdateBaseRing) == 0x000004, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MusicBoxUpdateBaseRing");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MusicBoxUpdateBaseRing) == 0x000008, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MusicBoxUpdateBaseRing");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MusicBoxUpdateBaseRing, bVisible) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MusicBoxUpdateBaseRing::bVisible' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MusicBoxUpdateBaseRing, Level) == 0x000004, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_MusicBoxUpdateBaseRing::Level' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_NetSyncGlide
// 0x0004 (0x0004 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NetSyncGlide final
{
public:
	int32                                         GlideState;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NetSyncGlide) == 0x000004, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NetSyncGlide");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NetSyncGlide) == 0x000004, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NetSyncGlide");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NetSyncGlide, GlideState) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NetSyncGlide::GlideState' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_NetSyncWeapon
// 0x0038 (0x0038 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NetSyncWeapon final
{
public:
	int64                                         RoleId;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WeaponID;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SlotType;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         OverlayState;                                      // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CustomState;                                       // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NetSyncWeapon) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NetSyncWeapon");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NetSyncWeapon) == 0x000038, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NetSyncWeapon");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NetSyncWeapon, RoleId) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NetSyncWeapon::RoleId' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NetSyncWeapon, WeaponID) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NetSyncWeapon::WeaponID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NetSyncWeapon, SlotType) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NetSyncWeapon::SlotType' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NetSyncWeapon, OverlayState) == 0x000020, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NetSyncWeapon::OverlayState' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NetSyncWeapon, CustomState) == 0x000028, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NetSyncWeapon::CustomState' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_NotifyClothesChanged
// 0x0030 (0x0030 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NotifyClothesChanged final
{
public:
	TArray<int32>                                 inDressup;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 inUndress;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         inChangeType;                                      // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          inNeedCover;                                       // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         inAbilityEffectID;                                 // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NotifyClothesChanged) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NotifyClothesChanged");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NotifyClothesChanged) == 0x000030, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NotifyClothesChanged");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NotifyClothesChanged, inDressup) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NotifyClothesChanged::inDressup' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NotifyClothesChanged, inUndress) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NotifyClothesChanged::inUndress' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NotifyClothesChanged, inChangeType) == 0x000020, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NotifyClothesChanged::inChangeType' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NotifyClothesChanged, inNeedCover) == 0x000024, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NotifyClothesChanged::inNeedCover' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NotifyClothesChanged, inAbilityEffectID) == 0x000028, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NotifyClothesChanged::inAbilityEffectID' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_NotifySuitConfigChanged
// 0x0004 (0x0004 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NotifySuitConfigChanged final
{
public:
	int32                                         SuitId;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NotifySuitConfigChanged) == 0x000004, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NotifySuitConfigChanged");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NotifySuitConfigChanged) == 0x000004, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NotifySuitConfigChanged");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NotifySuitConfigChanged, SuitId) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NotifySuitConfigChanged::SuitId' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_NotifyTransformDaMiaoMsg
// 0x0018 (0x0018 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NotifyTransformDaMiaoMsg final
{
public:
	int32                                         MsgID;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 msg;                                               // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NotifyTransformDaMiaoMsg) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NotifyTransformDaMiaoMsg");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NotifyTransformDaMiaoMsg) == 0x000018, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NotifyTransformDaMiaoMsg");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NotifyTransformDaMiaoMsg, MsgID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NotifyTransformDaMiaoMsg::MsgID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NotifyTransformDaMiaoMsg, msg) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NotifyTransformDaMiaoMsg::msg' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_NotifyWeaponOverlayStateChanged
// 0x0008 (0x0008 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NotifyWeaponOverlayStateChanged final
{
public:
	int32                                         UpdatedState;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAdded;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NotifyWeaponOverlayStateChanged) == 0x000004, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NotifyWeaponOverlayStateChanged");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NotifyWeaponOverlayStateChanged) == 0x000008, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NotifyWeaponOverlayStateChanged");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NotifyWeaponOverlayStateChanged, UpdatedState) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NotifyWeaponOverlayStateChanged::UpdatedState' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NotifyWeaponOverlayStateChanged, bAdded) == 0x000004, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NotifyWeaponOverlayStateChanged::bAdded' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_NovelistCreateNS
// 0x0040 (0x0040 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NovelistCreateNS final
{
public:
	class FString                                 MontageAssetPath;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                NewParam;                                          // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               NewParam1;                                         // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NovelistCreateNS) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NovelistCreateNS");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NovelistCreateNS) == 0x000040, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NovelistCreateNS");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NovelistCreateNS, MontageAssetPath) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NovelistCreateNS::MontageAssetPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NovelistCreateNS, NewParam) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NovelistCreateNS::NewParam' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NovelistCreateNS, NewParam1) == 0x000028, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NovelistCreateNS::NewParam1' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_NovelistDestroyNS
// 0x0001 (0x0001 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NovelistDestroyNS final
{
public:
	bool                                          AssetPath;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NovelistDestroyNS) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NovelistDestroyNS");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NovelistDestroyNS) == 0x000001, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NovelistDestroyNS");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NovelistDestroyNS, AssetPath) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_NovelistDestroyNS::AssetPath' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_PainterDestroyNS
// 0x0001 (0x0001 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PainterDestroyNS final
{
public:
	bool                                          bImmediately;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PainterDestroyNS) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PainterDestroyNS");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PainterDestroyNS) == 0x000001, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PainterDestroyNS");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PainterDestroyNS, bImmediately) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PainterDestroyNS::bImmediately' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_PainterStartPainting
// 0x0020 (0x0020 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PainterStartPainting final
{
public:
	class FString                                 MontageAssetPath;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 NSAssetPath;                                       // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PainterStartPainting) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PainterStartPainting");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PainterStartPainting) == 0x000020, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PainterStartPainting");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PainterStartPainting, MontageAssetPath) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PainterStartPainting::MontageAssetPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PainterStartPainting, NSAssetPath) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PainterStartPainting::NSAssetPath' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_PhxFloatFeedback
// 0x0058 (0x0058 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PhxFloatFeedback final
{
public:
	int32                                         Type;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_MulticastDamageContext              DamageContext;                                     // 0x0008(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PhxFloatFeedback) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PhxFloatFeedback");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PhxFloatFeedback) == 0x000058, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PhxFloatFeedback");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PhxFloatFeedback, Type) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PhxFloatFeedback::Type' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PhxFloatFeedback, DamageContext) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PhxFloatFeedback::DamageContext' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_PicnicBouequetRefreshWeapon
// 0x0020 (0x0020 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PicnicBouequetRefreshWeapon final
{
public:
	class FString                                 NewParam;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         NewParam1;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PicnicBouequetRefreshWeapon) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PicnicBouequetRefreshWeapon");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PicnicBouequetRefreshWeapon) == 0x000020, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PicnicBouequetRefreshWeapon");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PicnicBouequetRefreshWeapon, NewParam) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PicnicBouequetRefreshWeapon::NewParam' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PicnicBouequetRefreshWeapon, NewParam1) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PicnicBouequetRefreshWeapon::NewParam1' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_PicnicBouequetTrigger
// 0x0058 (0x0058 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PicnicBouequetTrigger final
{
public:
	class FString                                 NewParam1;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 NewParam2;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 NewParam3;                                         // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         NewParam4;                                         // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FRotator                               NewParam5;                                         // 0x0040(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PicnicBouequetTrigger) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PicnicBouequetTrigger");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PicnicBouequetTrigger) == 0x000058, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PicnicBouequetTrigger");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PicnicBouequetTrigger, NewParam1) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PicnicBouequetTrigger::NewParam1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PicnicBouequetTrigger, NewParam2) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PicnicBouequetTrigger::NewParam2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PicnicBouequetTrigger, NewParam3) == 0x000020, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PicnicBouequetTrigger::NewParam3' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PicnicBouequetTrigger, NewParam4) == 0x000030, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PicnicBouequetTrigger::NewParam4' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PicnicBouequetTrigger, NewParam5) == 0x000040, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PicnicBouequetTrigger::NewParam5' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_PillowStateChange
// 0x0004 (0x0004 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PillowStateChange final
{
public:
	int32                                         State;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PillowStateChange) == 0x000004, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PillowStateChange");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PillowStateChange) == 0x000004, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PillowStateChange");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PillowStateChange, State) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PillowStateChange::State' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_PlayEmoteMontage
// 0x0020 (0x0020 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayEmoteMontage final
{
public:
	int64                                         playerId;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PoseID;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 MontageName;                                       // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayEmoteMontage) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayEmoteMontage");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayEmoteMontage) == 0x000020, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayEmoteMontage");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayEmoteMontage, playerId) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayEmoteMontage::playerId' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayEmoteMontage, PoseID) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayEmoteMontage::PoseID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayEmoteMontage, MontageName) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayEmoteMontage::MontageName' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_PlayFeatureSequence
// 0x0010 (0x0010 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayFeatureSequence final
{
public:
	class FString                                 LSPath;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayFeatureSequence) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayFeatureSequence");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayFeatureSequence) == 0x000010, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayFeatureSequence");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayFeatureSequence, LSPath) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayFeatureSequence::LSPath' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_PlayHighAltitudeFireworks
// 0x0080 (0x0080 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayHighAltitudeFireworks final
{
public:
	class FString                                 NiagaraPath;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                EffectLocation;                                    // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               EffectRotator;                                     // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                EffectScale;                                       // 0x0040(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 NSVariableName;                                    // 0x0058(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                currentEffectLocation;                             // 0x0068(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayHighAltitudeFireworks) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayHighAltitudeFireworks");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayHighAltitudeFireworks) == 0x000080, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayHighAltitudeFireworks");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayHighAltitudeFireworks, NiagaraPath) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayHighAltitudeFireworks::NiagaraPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayHighAltitudeFireworks, EffectLocation) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayHighAltitudeFireworks::EffectLocation' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayHighAltitudeFireworks, EffectRotator) == 0x000028, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayHighAltitudeFireworks::EffectRotator' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayHighAltitudeFireworks, EffectScale) == 0x000040, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayHighAltitudeFireworks::EffectScale' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayHighAltitudeFireworks, NSVariableName) == 0x000058, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayHighAltitudeFireworks::NSVariableName' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayHighAltitudeFireworks, currentEffectLocation) == 0x000068, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayHighAltitudeFireworks::currentEffectLocation' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_PlayLowAltitudeFireworks
// 0x0058 (0x0058 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayLowAltitudeFireworks final
{
public:
	class FString                                 NiagaraPath;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                EffectLocation;                                    // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               EffectRotator;                                     // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                EffectScale;                                       // 0x0040(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayLowAltitudeFireworks) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayLowAltitudeFireworks");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayLowAltitudeFireworks) == 0x000058, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayLowAltitudeFireworks");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayLowAltitudeFireworks, NiagaraPath) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayLowAltitudeFireworks::NiagaraPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayLowAltitudeFireworks, EffectLocation) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayLowAltitudeFireworks::EffectLocation' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayLowAltitudeFireworks, EffectRotator) == 0x000028, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayLowAltitudeFireworks::EffectRotator' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayLowAltitudeFireworks, EffectScale) == 0x000040, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayLowAltitudeFireworks::EffectScale' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_PlayWeaponAction
// 0x0008 (0x0008 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayWeaponAction final
{
public:
	struct FGameplayTag                           ActionTag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayWeaponAction) == 0x000004, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayWeaponAction");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayWeaponAction) == 0x000008, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayWeaponAction");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayWeaponAction, ActionTag) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PlayWeaponAction::ActionTag' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_PortableBubbleMachine
// 0x0010 (0x0010 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PortableBubbleMachine final
{
public:
	bool                                          bUse;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PortableBubblueMachineItemID;                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         NikkiEntityID;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PortableBubbleMachine) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PortableBubbleMachine");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PortableBubbleMachine) == 0x000010, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PortableBubbleMachine");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PortableBubbleMachine, bUse) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PortableBubbleMachine::bUse' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PortableBubbleMachine, PortableBubblueMachineItemID) == 0x000004, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PortableBubbleMachine::PortableBubblueMachineItemID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PortableBubbleMachine, NikkiEntityID) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PortableBubbleMachine::NikkiEntityID' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_PowerFrogBegin
// 0x0020 (0x0020 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PowerFrogBegin final
{
public:
	class FString                                 NewParam;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 NewParam1;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PowerFrogBegin) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PowerFrogBegin");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PowerFrogBegin) == 0x000020, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PowerFrogBegin");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PowerFrogBegin, NewParam) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PowerFrogBegin::NewParam' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PowerFrogBegin, NewParam1) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PowerFrogBegin::NewParam1' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_PowerFrogSpawnFrog
// 0x0080 (0x0080 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PowerFrogSpawnFrog final
{
public:
	class FString                                 NewParam;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FTransform                             NewParam1;                                         // 0x0010(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewParam2;                                         // 0x0070(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewParam3;                                         // 0x0074(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PowerFrogSpawnFrog) == 0x000010, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PowerFrogSpawnFrog");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PowerFrogSpawnFrog) == 0x000080, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PowerFrogSpawnFrog");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PowerFrogSpawnFrog, NewParam) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PowerFrogSpawnFrog::NewParam' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PowerFrogSpawnFrog, NewParam1) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PowerFrogSpawnFrog::NewParam1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PowerFrogSpawnFrog, NewParam2) == 0x000070, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PowerFrogSpawnFrog::NewParam2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PowerFrogSpawnFrog, NewParam3) == 0x000074, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PowerFrogSpawnFrog::NewParam3' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_PowerFrogSwitchStage
// 0x0001 (0x0001 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PowerFrogSwitchStage final
{
public:
	EPowerFrogStage                               NewParam;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PowerFrogSwitchStage) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PowerFrogSwitchStage");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PowerFrogSwitchStage) == 0x000001, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PowerFrogSwitchStage");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PowerFrogSwitchStage, NewParam) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PowerFrogSwitchStage::NewParam' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_PressSyllable
// 0x0008 (0x0008 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PressSyllable final
{
public:
	Enum_InstrumentType                           InstrumentType;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Octace;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PressSyllable) == 0x000004, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PressSyllable");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PressSyllable) == 0x000008, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PressSyllable");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PressSyllable, InstrumentType) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PressSyllable::InstrumentType' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PressSyllable, Octace) == 0x000004, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_PressSyllable::Octace' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_QuickRelive
// 0x0060 (0x0060 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_QuickRelive final
{
public:
	struct FTransform                             ReliveTransfom;                                    // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_QuickRelive) == 0x000010, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_QuickRelive");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_QuickRelive) == 0x000060, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_QuickRelive");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_QuickRelive, ReliveTransfom) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_QuickRelive::ReliveTransfom' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_ReleaseSyllable
// 0x0008 (0x0008 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ReleaseSyllable final
{
public:
	Enum_InstrumentType                           InstrumentType;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Octace;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ReleaseSyllable) == 0x000004, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ReleaseSyllable");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ReleaseSyllable) == 0x000008, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ReleaseSyllable");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ReleaseSyllable, InstrumentType) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ReleaseSyllable::InstrumentType' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ReleaseSyllable, Octace) == 0x000004, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ReleaseSyllable::Octace' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_RemoveSlotWeapon
// 0x0018 (0x0018 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RemoveSlotWeapon final
{
public:
	class FString                                 SlotType;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bImmediateRequest;                                 // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInSync;                                           // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RemoveSlotWeapon) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RemoveSlotWeapon");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RemoveSlotWeapon) == 0x000018, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RemoveSlotWeapon");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RemoveSlotWeapon, SlotType) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RemoveSlotWeapon::SlotType' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RemoveSlotWeapon, bImmediateRequest) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RemoveSlotWeapon::bImmediateRequest' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RemoveSlotWeapon, bInSync) == 0x000011, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RemoveSlotWeapon::bInSync' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_RequestStartGesture
// 0x0030 (0x0030 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RequestStartGesture final
{
public:
	class FString                                 ActivePerformanceGestureTagName;                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bFullBodyGesture;                                  // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTrimGesture;                                      // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TrimStartTimeForGesture;                           // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TrimEndTimeForGesture;                             // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bExpectedAdditive;                                 // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RequestStartGesture) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RequestStartGesture");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RequestStartGesture) == 0x000030, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RequestStartGesture");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RequestStartGesture, ActivePerformanceGestureTagName) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RequestStartGesture::ActivePerformanceGestureTagName' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RequestStartGesture, bFullBodyGesture) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RequestStartGesture::bFullBodyGesture' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RequestStartGesture, bTrimGesture) == 0x000011, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RequestStartGesture::bTrimGesture' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RequestStartGesture, TrimStartTimeForGesture) == 0x000018, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RequestStartGesture::TrimStartTimeForGesture' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RequestStartGesture, TrimEndTimeForGesture) == 0x000020, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RequestStartGesture::TrimEndTimeForGesture' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RequestStartGesture, bExpectedAdditive) == 0x000028, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RequestStartGesture::bExpectedAdditive' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_RequestStartPerformance
// 0x0018 (0x0018 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RequestStartPerformance final
{
public:
	class FString                                 StanceTag;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bAllowFlag;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bNeedFireEvent;                                    // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFastTransition;                                   // 0x0012(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSkipTransition;                                   // 0x0013(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFullBodyStance;                                   // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RequestStartPerformance) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RequestStartPerformance");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RequestStartPerformance) == 0x000018, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RequestStartPerformance");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RequestStartPerformance, StanceTag) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RequestStartPerformance::StanceTag' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RequestStartPerformance, bAllowFlag) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RequestStartPerformance::bAllowFlag' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RequestStartPerformance, bNeedFireEvent) == 0x000011, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RequestStartPerformance::bNeedFireEvent' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RequestStartPerformance, bFastTransition) == 0x000012, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RequestStartPerformance::bFastTransition' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RequestStartPerformance, bSkipTransition) == 0x000013, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RequestStartPerformance::bSkipTransition' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RequestStartPerformance, bFullBodyStance) == 0x000014, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RequestStartPerformance::bFullBodyStance' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_RequestStopPerformance
// 0x0003 (0x0003 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RequestStopPerformance final
{
public:
	bool                                          bNeedFireEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFastTransition;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSkipTransition;                                   // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RequestStopPerformance) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RequestStopPerformance");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RequestStopPerformance) == 0x000003, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RequestStopPerformance");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RequestStopPerformance, bNeedFireEvent) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RequestStopPerformance::bNeedFireEvent' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RequestStopPerformance, bFastTransition) == 0x000001, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RequestStopPerformance::bFastTransition' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RequestStopPerformance, bSkipTransition) == 0x000002, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_RequestStopPerformance::bSkipTransition' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_SeaOfStarsBegin
// 0x0030 (0x0030 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SeaOfStarsBegin final
{
public:
	class FString                                 NikkiActionAnimPath;                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 StarAnimPath;                                      // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 StarClassRefPath;                                  // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SeaOfStarsBegin) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SeaOfStarsBegin");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SeaOfStarsBegin) == 0x000030, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SeaOfStarsBegin");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SeaOfStarsBegin, NikkiActionAnimPath) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SeaOfStarsBegin::NikkiActionAnimPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SeaOfStarsBegin, StarAnimPath) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SeaOfStarsBegin::StarAnimPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SeaOfStarsBegin, StarClassRefPath) == 0x000020, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SeaOfStarsBegin::StarClassRefPath' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_SetAnimLocomotionState
// 0x0001 (0x0001 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetAnimLocomotionState final
{
public:
	bool                                          bEnter;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetAnimLocomotionState) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetAnimLocomotionState");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetAnimLocomotionState) == 0x000001, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetAnimLocomotionState");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetAnimLocomotionState, bEnter) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetAnimLocomotionState::bEnter' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_SetDoorLightSlot
// 0x0010 (0x0010 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetDoorLightSlot final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInit;                                             // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         DoorSpawnerID;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetDoorLightSlot) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetDoorLightSlot");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetDoorLightSlot) == 0x000010, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetDoorLightSlot");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetDoorLightSlot, Index_0) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetDoorLightSlot::Index_0' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetDoorLightSlot, bInit) == 0x000004, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetDoorLightSlot::bInit' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetDoorLightSlot, DoorSpawnerID) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetDoorLightSlot::DoorSpawnerID' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_SetPerformanceInviteId
// 0x0010 (0x0010 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetPerformanceInviteId final
{
public:
	int64                                         playerId;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         InvitePlayerId;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetPerformanceInviteId) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetPerformanceInviteId");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetPerformanceInviteId) == 0x000010, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetPerformanceInviteId");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetPerformanceInviteId, playerId) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetPerformanceInviteId::playerId' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetPerformanceInviteId, InvitePlayerId) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetPerformanceInviteId::InvitePlayerId' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_SetPerformanceRespondCount
// 0x0018 (0x0018 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetPerformanceRespondCount final
{
public:
	int64                                         playerId;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         RespondPlayerId;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetPerformanceRespondCount) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetPerformanceRespondCount");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetPerformanceRespondCount) == 0x000018, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetPerformanceRespondCount");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetPerformanceRespondCount, playerId) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetPerformanceRespondCount::playerId' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetPerformanceRespondCount, Count) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetPerformanceRespondCount::Count' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetPerformanceRespondCount, RespondPlayerId) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetPerformanceRespondCount::RespondPlayerId' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_SetPerformanceState
// 0x0010 (0x0010 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetPerformanceState final
{
public:
	int64                                         playerId;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         State;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PoseID;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetPerformanceState) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetPerformanceState");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetPerformanceState) == 0x000010, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetPerformanceState");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetPerformanceState, playerId) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetPerformanceState::playerId' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetPerformanceState, State) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetPerformanceState::State' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetPerformanceState, PoseID) == 0x00000C, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetPerformanceState::PoseID' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_SetPlaceableObjHidden
// 0x0020 (0x0020 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetPlaceableObjHidden final
{
public:
	TArray<int64>                                 PlaceableObjEntityID;                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bHidden;                                           // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         RequestPlayerEntityID;                             // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetPlaceableObjHidden) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetPlaceableObjHidden");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetPlaceableObjHidden) == 0x000020, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetPlaceableObjHidden");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetPlaceableObjHidden, PlaceableObjEntityID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetPlaceableObjHidden::PlaceableObjEntityID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetPlaceableObjHidden, bHidden) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetPlaceableObjHidden::bHidden' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetPlaceableObjHidden, RequestPlayerEntityID) == 0x000018, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetPlaceableObjHidden::RequestPlayerEntityID' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_SetWeaponAppearanceDisabled
// 0x0018 (0x0018 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetWeaponAppearanceDisabled final
{
public:
	bool                                          bDisabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bImmediateRequest;                                 // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 InModuleTag;                                       // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetWeaponAppearanceDisabled) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetWeaponAppearanceDisabled");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetWeaponAppearanceDisabled) == 0x000018, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetWeaponAppearanceDisabled");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetWeaponAppearanceDisabled, bDisabled) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetWeaponAppearanceDisabled::bDisabled' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetWeaponAppearanceDisabled, bImmediateRequest) == 0x000001, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetWeaponAppearanceDisabled::bImmediateRequest' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetWeaponAppearanceDisabled, InModuleTag) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SetWeaponAppearanceDisabled::InModuleTag' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_ShepherdessEnterPhotograph
// 0x0001 (0x0001 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ShepherdessEnterPhotograph final
{
public:
	bool                                          NewParam;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ShepherdessEnterPhotograph) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ShepherdessEnterPhotograph");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ShepherdessEnterPhotograph) == 0x000001, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ShepherdessEnterPhotograph");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ShepherdessEnterPhotograph, NewParam) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ShepherdessEnterPhotograph::NewParam' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_ShepherdessSwitchStage
// 0x0001 (0x0001 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ShepherdessSwitchStage final
{
public:
	EShepherdessAnimState                         NewParam1;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ShepherdessSwitchStage) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ShepherdessSwitchStage");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ShepherdessSwitchStage) == 0x000001, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ShepherdessSwitchStage");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ShepherdessSwitchStage, NewParam1) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ShepherdessSwitchStage::NewParam1' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_ShinyMothChangeLamp
// 0x0018 (0x0018 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ShinyMothChangeLamp final
{
public:
	int32                                         MothID;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 State;                                             // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ShinyMothChangeLamp) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ShinyMothChangeLamp");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ShinyMothChangeLamp) == 0x000018, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ShinyMothChangeLamp");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ShinyMothChangeLamp, MothID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ShinyMothChangeLamp::MothID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ShinyMothChangeLamp, State) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_ShinyMothChangeLamp::State' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_SitOnInteractiveChair
// 0x0090 (0x0090 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SitOnInteractiveChair final
{
public:
	int32                                         ParamType;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSit;                                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsAttached;                                       // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ChairIdentifier;                                   // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 ParentCompName;                                    // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RelativeTransform;                                 // 0x0030(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SitOnInteractiveChair) == 0x000010, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SitOnInteractiveChair");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SitOnInteractiveChair) == 0x000090, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SitOnInteractiveChair");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SitOnInteractiveChair, ParamType) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SitOnInteractiveChair::ParamType' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SitOnInteractiveChair, bSit) == 0x000004, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SitOnInteractiveChair::bSit' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SitOnInteractiveChair, bIsAttached) == 0x000005, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SitOnInteractiveChair::bIsAttached' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SitOnInteractiveChair, ChairIdentifier) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SitOnInteractiveChair::ChairIdentifier' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SitOnInteractiveChair, ParentCompName) == 0x000018, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SitOnInteractiveChair::ParentCompName' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SitOnInteractiveChair, RelativeTransform) == 0x000030, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SitOnInteractiveChair::RelativeTransform' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_StopBlowBubble
// 0x0001 (0x0001 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_StopBlowBubble final
{
public:
	bool                                          bImmediately;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_StopBlowBubble) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_StopBlowBubble");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_StopBlowBubble) == 0x000001, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_StopBlowBubble");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_StopBlowBubble, bImmediately) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_StopBlowBubble::bImmediately' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_StopEmoteMontage
// 0x0008 (0x0008 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_StopEmoteMontage final
{
public:
	int64                                         playerId;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_StopEmoteMontage) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_StopEmoteMontage");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_StopEmoteMontage) == 0x000008, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_StopEmoteMontage");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_StopEmoteMontage, playerId) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_StopEmoteMontage::playerId' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_SuonaToningChange
// 0x0001 (0x0001 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SuonaToningChange final
{
public:
	bool                                          bIsToning;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SuonaToningChange) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SuonaToningChange");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SuonaToningChange) == 0x000001, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SuonaToningChange");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SuonaToningChange, bIsToning) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_SuonaToningChange::bIsToning' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_TriggerPlaceableObjInteracted
// 0x0028 (0x0028 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_TriggerPlaceableObjInteracted final
{
public:
	int64                                         PlaceableEntityID;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         FromPlayerEntityID;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         ToPlayerEntityID;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 String;                                            // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_TriggerPlaceableObjInteracted) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_TriggerPlaceableObjInteracted");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_TriggerPlaceableObjInteracted) == 0x000028, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_TriggerPlaceableObjInteracted");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_TriggerPlaceableObjInteracted, PlaceableEntityID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_TriggerPlaceableObjInteracted::PlaceableEntityID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_TriggerPlaceableObjInteracted, FromPlayerEntityID) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_TriggerPlaceableObjInteracted::FromPlayerEntityID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_TriggerPlaceableObjInteracted, ToPlayerEntityID) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_TriggerPlaceableObjInteracted::ToPlayerEntityID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_TriggerPlaceableObjInteracted, String) == 0x000018, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_TriggerPlaceableObjInteracted::String' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_UIDisableMovement
// 0x0010 (0x0010 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_UIDisableMovement final
{
public:
	int64                                         EntityID;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDisable;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_UIDisableMovement) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_UIDisableMovement");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_UIDisableMovement) == 0x000010, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_UIDisableMovement");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_UIDisableMovement, EntityID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_UIDisableMovement::EntityID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_UIDisableMovement, bDisable) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_UIDisableMovement::bDisable' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_UnequipWeapon
// 0x0002 (0x0002 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_UnequipWeapon final
{
public:
	bool                                          bImmediateRequest;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInSync;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_UnequipWeapon) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_UnequipWeapon");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_UnequipWeapon) == 0x000002, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_UnequipWeapon");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_UnequipWeapon, bImmediateRequest) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_UnequipWeapon::bImmediateRequest' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_UnequipWeapon, bInSync) == 0x000001, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_UnequipWeapon::bInSync' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_UpdateInstrumentRTPCValue
// 0x0008 (0x0008 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_UpdateInstrumentRTPCValue final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_UpdateInstrumentRTPCValue) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_UpdateInstrumentRTPCValue");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_UpdateInstrumentRTPCValue) == 0x000008, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_UpdateInstrumentRTPCValue");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_UpdateInstrumentRTPCValue, Value) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_UpdateInstrumentRTPCValue::Value' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_UpdateInteractionIK
// 0x0018 (0x0018 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_UpdateInteractionIK final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFInteractionIkSlots>           IkSlots;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_UpdateInteractionIK) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_UpdateInteractionIK");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_UpdateInteractionIK) == 0x000018, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_UpdateInteractionIK");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_UpdateInteractionIK, bEnable) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_UpdateInteractionIK::bEnable' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_UpdateInteractionIK, IkSlots) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_UpdateInteractionIK::IkSlots' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.BP_OnMulticast_UpdateNikkiStylizedOverlayData
// 0x000C (0x000C - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_UpdateNikkiStylizedOverlayData final
{
public:
	int32                                         PawnAnimState;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         UpdatedState;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAdded;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_UpdateNikkiStylizedOverlayData) == 0x000004, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_UpdateNikkiStylizedOverlayData");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_UpdateNikkiStylizedOverlayData) == 0x00000C, "Wrong size on BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_UpdateNikkiStylizedOverlayData");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_UpdateNikkiStylizedOverlayData, PawnAnimState) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_UpdateNikkiStylizedOverlayData::PawnAnimState' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_UpdateNikkiStylizedOverlayData, UpdatedState) == 0x000004, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_UpdateNikkiStylizedOverlayData::UpdatedState' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_UpdateNikkiStylizedOverlayData, bAdded) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_BP_OnMulticast_UpdateNikkiStylizedOverlayData::bAdded' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.ExecuteUbergraph_BP_MainCharacterRPCHelperComponent
// 0x1420 (0x1420 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsToning;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Value_1;                        // 0x0008(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Handle_7;                       // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_ABPAssetPath;                   // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_NSTailPath;                     // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_TailLocation;                   // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_TailRotation;                   // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 K2Node_CustomEvent_NSHandheldPath;                 // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EImaginationFireworkAnimState                 K2Node_CustomEvent_Stage_1;                        // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bMoveState_1;                   // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bRelaxState;                    // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_83[0x5];                                       // 0x0083(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_ABPPath_2;                      // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ECastGuardStage                               K2Node_CustomEvent_AnimStage_1;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bMoveState;                     // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_RandomBool;                     // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B[0x5];                                       // 0x009B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_NSPath_2;                       // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTransform                             K2Node_CustomEvent_Transform_3;                    // 0x00B0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Handle_6;                       // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bAutoDestroy_1;                 // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bAutoActive_1;                  // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_122[0x6];                                      // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_ABPPath_1;                      // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EAbilityMultiPlayerHelperType                 K2Node_CustomEvent_HelperType_9;                   // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_RelativeLocation_2;             // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_MeshPath_3;                     // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_NSPath_1;                       // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_AnimPath_1;                     // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         K2Node_CustomEvent_MatPathList_1;                  // 0x0188(0x0010)(ConstParm, ReferenceParm)
	struct FRotator                               K2Node_CustomEvent_NSRotator;                      // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 K2Node_CustomEvent_ActorClassPath_1;               // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location_1;                     // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_Rotation_1;                     // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int32>                                 K2Node_CustomEvent_CloakID;                        // 0x01F0(0x0010)(ConstParm, ReferenceParm)
	class FString                                 K2Node_CustomEvent_MeshPath_2;                     // 0x0200(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         K2Node_CustomEvent_MatPathList;                    // 0x0210(0x0010)(ConstParm, ReferenceParm)
	bool                                          K2Node_CustomEvent_Value;                          // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_NikkiActionAnimPath;            // 0x0228(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_StarAnimPath;                   // 0x0238(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_StarClassRefPath;               // 0x0248(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_MeshPath_1;                     // 0x0258(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_NSPath;                         // 0x0268(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_AnimPath;                       // 0x0278(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_MeshPath;                       // 0x0288(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EAbilityMultiPlayerHelperType                 K2Node_CustomEvent_HelperType_8;                   // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_AssetPath_5;                    // 0x02A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTransform                             K2Node_CustomEvent_Transform_2;                    // 0x02B0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Handle_5;                       // 0x0310(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EAbilityMultiPlayerHelperType                 K2Node_CustomEvent_HelperType_7;                   // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Handle_4;                       // 0x0328(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EAbilityMultiPlayerHelperType                 K2Node_CustomEvent_HelperType_6;                   // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_AssetPath_4;                    // 0x0340(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_RelativeLocation_1;             // 0x0350(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_DissolveTime;                   // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_InstrumentType                           K2Node_CustomEvent_InstrumentType_2;               // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371[0x3];                                      // 0x0371(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Octace_1;                       // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_InstrumentType                           K2Node_CustomEvent_InstrumentType_1;               // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_379[0x3];                                      // 0x0379(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Octace;                         // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_AssetPath_3;                    // 0x0380(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_RelativeLocation;               // 0x0390(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_RelativeRotation_1;             // 0x03A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bImmediately_2;                 // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C1[0x3];                                      // 0x03C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Index_1;                        // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Handle_3;                       // 0x03C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bEnter;                         // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EShepherdessAnimState                         K2Node_CustomEvent_NewParam_9;                     // 0x03D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DA[0x6];                                      // 0x03DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_ActorClassPath;                 // 0x03E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTransform                             K2Node_CustomEvent_Transform_1;                    // 0x03F0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Handle_2;                       // 0x0450(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_State_3;                        // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_464[0x4];                                      // 0x0464(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_NiagaraPath_2;                  // 0x0468(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_StartLoc;                       // 0x0478(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_EndLoc;                         // 0x0490(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         K2Node_CustomEvent_targetSpawnerID;                // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_NiagaraPath_1;                  // 0x04B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_EffectLocation_1;               // 0x04C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_EffectRotator_1;                // 0x04D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                K2Node_CustomEvent_EffectScale_1;                  // 0x04F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_NSVariableName;                 // 0x0508(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_currentEffectLocation;          // 0x0518(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_NiagaraPath;                    // 0x0530(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_EffectLocation;                 // 0x0540(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_EffectRotator;                  // 0x0558(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                K2Node_CustomEvent_EffectScale;                    // 0x0570(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Index;                          // 0x0588(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bInit;                          // 0x058C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58D[0x3];                                      // 0x058D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         K2Node_CustomEvent_DoorSpawnerID;                  // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_State_2;                        // 0x0598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewParam_8;                     // 0x059C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59D[0x3];                                      // 0x059D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int64>                                 K2Node_CustomEvent_RemoveList;                     // 0x05A0(0x0010)(ConstParm, ReferenceParm)
	TArray<int64>                                 K2Node_CustomEvent_AddList;                        // 0x05B0(0x0010)(ConstParm, ReferenceParm)
	EAthenaShowState                              K2Node_CustomEvent_AnimStage;                      // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C1[0x7];                                      // 0x05C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_ABPPath;                        // 0x05C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_SeatAniPath;                    // 0x05D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_SeatOffset;                     // 0x05E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_SeatRotation;                   // 0x0600(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         K2Node_CustomEvent_NewParam_7;                     // 0x0618(0x0010)(ConstParm, ReferenceParm)
	bool                                          K2Node_CustomEvent_NewParam2_3;                    // 0x0628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_InstrumentType                           K2Node_CustomEvent_InstrumentType;                 // 0x0629(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPowerFrogStage                               K2Node_CustomEvent_Stage;                          // 0x062A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62B[0x5];                                      // 0x062B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_NewParam_6;                     // 0x0630(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_NewParam2_2;                    // 0x0640(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_NewParam_5;                     // 0x0650(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTransform                             K2Node_CustomEvent_NewParam2_1;                    // 0x0660(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NewParam3_1;                    // 0x06C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NewParam4;                      // 0x06C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NewParam_4;                     // 0x06C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NewParam_3;                     // 0x06CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_NewParam_2;                     // 0x06D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NewParam2;                      // 0x06E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NewParam3;                      // 0x06E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_NewParam_1;                     // 0x06E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NewParam;                       // 0x06F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_MothID;                         // 0x06FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_State_1;                        // 0x0700(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PhaseIndex_1;                   // 0x0710(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PhaseIndex;                     // 0x0714(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_MeshAssetPath;                  // 0x0718(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_CurveAssetPath;                 // 0x0728(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsContinue;                     // 0x0738(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_739[0x7];                                      // 0x0739(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         K2Node_CustomEvent_PlayerId_4;                     // 0x0740(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PoseID_2;                       // 0x0748(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74C[0x4];                                      // 0x074C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_MontageName;                    // 0x0750(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int64                                         K2Node_CustomEvent_PlayerId_3;                     // 0x0760(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         K2Node_CustomEvent_PlayerId_2;                     // 0x0768(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_State;                          // 0x0770(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PoseID_1;                       // 0x0774(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         K2Node_CustomEvent_PlayerId_1;                     // 0x0778(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Count;                          // 0x0780(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_784[0x4];                                      // 0x0784(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         K2Node_CustomEvent_RespondPlayerId;                // 0x0788(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         K2Node_CustomEvent_PlayerId;                       // 0x0790(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         K2Node_CustomEvent_InvitePlayerId;                 // 0x0798(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         K2Node_CustomEvent_PlayerRoleID_3;                 // 0x07A0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bController;                    // 0x07A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A9[0x7];                                      // 0x07A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_UserName;                       // 0x07B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FF_CameraParamsForRpc                  K2Node_CustomEvent_Params_1;                       // 0x07C0(0x00A8)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_NikkiLoc_1;                     // 0x0868(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_CameraActorLoc_1;               // 0x0880(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_LookAtRealCenterLoc_1;          // 0x0898(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_CameraRelativeLoc_1;            // 0x08B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_NikkiLoc;                       // 0x08C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_CameraActorLoc;                 // 0x08E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_LookAtRealCenterLoc;            // 0x08F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_CameraRelativeLoc;              // 0x0910(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_CameraParamsForRpc                  K2Node_CustomEvent_Params;                         // 0x0928(0x00A8)(ZeroConstructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_RelativeRotation;               // 0x09D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_BCatDoll;                       // 0x09E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_BAnimal;                        // 0x09E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_BInSpecial3CState;              // 0x09EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9EB[0x1];                                      // 0x09EB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_InitPoseID;                     // 0x09EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_InitalStanceTag;                // 0x09F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PoseID;                         // 0x0A00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A04[0x4];                                      // 0x0A04(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_percent;                        // 0x0A08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_BFromPhotographExit;            // 0x0A10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A11[0x7];                                      // 0x0A11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         K2Node_CustomEvent_PlayerRoleID_2;                 // 0x0A18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         K2Node_CustomEvent_PlayerRoleID_1;                 // 0x0A20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_BFromController;                // 0x0A28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A29[0x7];                                      // 0x0A29(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         K2Node_CustomEvent_FromRoleID;                     // 0x0A30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_BAccept_1;                      // 0x0A38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_BAccept;                        // 0x0A39(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A3A[0x6];                                      // 0x0A3A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         K2Node_CustomEvent_PlyaerRoleID;                   // 0x0A40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         K2Node_CustomEvent_PlayerRoleID;                   // 0x0A48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_MsgStr;                         // 0x0A50(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_EnableLookAt;                   // 0x0A60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A61[0x7];                                      // 0x0A61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         K2Node_CustomEvent_InviterRid;                     // 0x0A68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_MsgID;                          // 0x0A70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A74[0x4];                                      // 0x0A74(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Msg;                            // 0x0A78(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int64                                         K2Node_CustomEvent_WoolenHeartEntityID;            // 0x0A88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_WoolenHeartInfoCache                K2Node_CustomEvent_WoolenHeartInfoCache;           // 0x0A90(0x0048)(ZeroConstructor, HasGetValueTypeHash)
	int64                                         K2Node_CustomEvent_AnimalEntityID_1;               // 0x0AD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         K2Node_CustomEvent_AbilityEffectID_1;              // 0x0AE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_LookAtAnimRotYaw;               // 0x0AE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         K2Node_CustomEvent_AnimalEntityID;                 // 0x0AF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         K2Node_CustomEvent_AbilityEffectID;                // 0x0AF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_FishFloatLocation;              // 0x0B00(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsInPrepare;                    // 0x0B18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B19[0x7];                                      // 0x0B19(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         K2Node_CustomEvent_FishEntityID_2;                 // 0x0B20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         K2Node_CustomEvent_FishEntityID_1;                 // 0x0B28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Success;                        // 0x0B30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B31[0x7];                                      // 0x0B31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Reason;                         // 0x0B38(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EAbilityMultiPlayerHelperType                 K2Node_CustomEvent_HelperType_5;                   // 0x0B48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B49[0x7];                                      // 0x0B49(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_AssetPath_2;                    // 0x0B50(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int64                                         K2Node_CustomEvent_FishEntityID;                   // 0x0B60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsReelIn;                       // 0x0B68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsLeft;                         // 0x0B69(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B6A[0x6];                                      // 0x0B6A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         K2Node_CustomEvent_BoxId;                          // 0x0B70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B78[0x8];                                      // 0x0B78(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_CustomEvent_FinalTrans;                     // 0x0B80(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         K2Node_CustomEvent_EntityID_4;                     // 0x0BE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_data;                           // 0x0BE8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int64                                         K2Node_CustomEvent_playerEntityID_1;               // 0x0BF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         K2Node_CustomEvent_EntityID_3;                     // 0x0C00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         K2Node_CustomEvent_playerEntityID;                 // 0x0C08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_action;                         // 0x0C10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C14[0x4];                                      // 0x0C14(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         K2Node_CustomEvent_extraInfo;                      // 0x0C18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         K2Node_CustomEvent_extraInfo2;                     // 0x0C20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAbilityMultiPlayerHelperType                 K2Node_CustomEvent_HelperType_4;                   // 0x0C28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bUse;                           // 0x0C29(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2A[0x2];                                      // 0x0C2A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_PortableBubblueMachineItemID;   // 0x0C2C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         K2Node_CustomEvent_NikkiEntityID;                  // 0x0C30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAbilityMultiPlayerHelperType                 K2Node_CustomEvent_HelperType_3;                   // 0x0C38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C39[0x7];                                      // 0x0C39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Handle_1;                       // 0x0C40(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int64                                         K2Node_CustomEvent_InsectEntityID;                 // 0x0C50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bGlow;                          // 0x0C58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C59[0x3];                                      // 0x0C59(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_ParamType;                      // 0x0C5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bSit;                           // 0x0C60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsAttached;                    // 0x0C61(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C62[0x6];                                      // 0x0C62(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_ChairIdentifier;                // 0x0C68(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_ParentCompName;                 // 0x0C78(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_C88[0x8];                                      // 0x0C88(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_CustomEvent_RelativeTransfrom;              // 0x0C90(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAbilityMultiPlayerHelperType                 K2Node_CustomEvent_HelperType_2;                   // 0x0CF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CF1[0x7];                                      // 0x0CF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_AssetPath_1;                    // 0x0CF8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_D08[0x8];                                      // 0x0D08(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_CustomEvent_Transform;                      // 0x0D10(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Handle;                         // 0x0D70(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bAutoDestroy;                   // 0x0D80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bAutoActive;                    // 0x0D81(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0D82(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D83[0x5];                                      // 0x0D83(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_BulletDAPath;                   // 0x0D88(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FF_MulticastTriggerContext             K2Node_CustomEvent_BP_TriggerContext;              // 0x0D98(0x00E0)(HasGetValueTypeHash)
	uint8                                         Pad_E78[0x8];                                      // 0x0E78(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_AdjustTransformRPCParam             K2Node_CustomEvent_AdjustParam;                    // 0x0E80(0x00D0)(HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_WeaponConfigPath;               // 0x0F50(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_SlotType_3;                     // 0x0F60(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bImmediateRequest_5;            // 0x0F70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bInSync_4;                      // 0x0F71(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F72[0x6];                                      // 0x0F72(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_AssetPath;                      // 0x0F78(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x0F88(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_Rotation;                       // 0x0FA0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bImmediateRequest_4;            // 0x0FB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bInSync_3;                      // 0x0FB9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FBA[0x6];                                      // 0x0FBA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_SlotType_2;                     // 0x0FC0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bImmediateRequest_3;            // 0x0FD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bInSync_2;                      // 0x0FD1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bImmediateRequest_2;            // 0x0FD2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bInSync_1;                      // 0x0FD3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_UpdatedState_1;                 // 0x0FD4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bAdded_1;                       // 0x0FD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bDisabled;                      // 0x0FD9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bImmediateRequest_1;            // 0x0FDA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FDB[0x5];                                      // 0x0FDB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_InModuleTag;                    // 0x0FE0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PawnAnimState;                  // 0x0FF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_UpdatedState;                   // 0x0FF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bAdded;                         // 0x0FF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FF9[0x7];                                      // 0x0FF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_CustomEvent_inDressup;                      // 0x1000(0x0010)(ConstParm, ReferenceParm)
	TArray<int32>                                 K2Node_CustomEvent_inUndress;                      // 0x1010(0x0010)(ReferenceParm)
	int32                                         K2Node_CustomEvent_inChangeType;                   // 0x1020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_inNeedCover;                    // 0x1024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1025[0x3];                                     // 0x1025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_inAbilityEffectID;              // 0x1028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102C[0x4];                                     // 0x102C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_StanceTag;                      // 0x1030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bAllowFlag;                     // 0x1040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bNeedFireEvent_1;               // 0x1041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFastTransition_1;              // 0x1042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bSkipTransition_1;              // 0x1043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFullBodyStance;                // 0x1044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bNeedFireEvent;                 // 0x1045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFastTransition;                // 0x1046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bSkipTransition;                // 0x1047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_ActivePerformanceGestureTagName; // 0x1048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFullBodyGesture;               // 0x1058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bTrimGesture;                   // 0x1059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_105A[0x6];                                     // 0x105A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_TrimStartTimeForGesture;        // 0x1060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_TrimEndTimeForGesture;          // 0x1068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bExpectedAdditive;              // 0x1070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1071[0x3];                                     // 0x1071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_SuitID;                         // 0x1074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bImmediately_1;                 // 0x1078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1079[0x3];                                     // 0x1079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_WeaponID_1;                     // 0x107C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_SlotType_1;                     // 0x1080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bImmediateRequest;              // 0x1090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bInSync;                        // 0x1091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1092[0x2];                                     // 0x1092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_CustomWeaponState;              // 0x1094(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109C[0x4];                                     // 0x109C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_CustomEvent_ReliveTransform;                // 0x10A0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         K2Node_CustomEvent_EntityID_2;                     // 0x1100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_BuffDAPath;                     // 0x1108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bRemove;                        // 0x1118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1119[0x7];                                     // 0x1119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_LSPath;                         // 0x1120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_DamageDAPath;                   // 0x1130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FF_MulticastHitFrameContext            K2Node_CustomEvent_MulticastHitframeContext;       // 0x1140(0x0170)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bDisplay;                       // 0x12B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12B1[0x3];                                     // 0x12B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_CurChargeLevel;                 // 0x12B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bImmediately;                   // 0x12B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12B9[0x7];                                     // 0x12B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int64>                                 K2Node_CustomEvent_PlaceableObjEntityID;           // 0x12C0(0x0010)(ConstParm, ReferenceParm)
	bool                                          K2Node_CustomEvent_bHidden;                        // 0x12D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12D1[0x7];                                     // 0x12D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         K2Node_CustomEvent_RequestPlayerEntityID;          // 0x12D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_MontageAssetPath;               // 0x12E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_NSAssetPath;                    // 0x12F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_inAfk;                          // 0x1300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bImmediatelyStop;               // 0x1301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bEnable;                        // 0x1302(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1303[0x5];                                     // 0x1303(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFInteractionIkSlots>           K2Node_CustomEvent_IkSlots;                        // 0x1308(0x0010)(ConstParm, ReferenceParm)
	uint8                                         K2Node_CustomEvent_HelperType_1;                   // 0x1318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1319[0x7];                                     // 0x1319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         K2Node_CustomEvent_VehicleEntityId_1;              // 0x1320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         K2Node_CustomEvent_FuncId;                         // 0x1328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         K2Node_CustomEvent_VehicleEntityId;                // 0x1330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         K2Node_CustomEvent_PassenegerID;                   // 0x1338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         K2Node_CustomEvent_PlaceableEntityID;              // 0x1340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         K2Node_CustomEvent_FromPlayerEntityID;             // 0x1348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         K2Node_CustomEvent_ToPlayerEntityID;               // 0x1350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_String;                         // 0x1358(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_GlideState;                     // 0x1368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_ActionTag;                      // 0x136C(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Type;                           // 0x1374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_MulticastDamageContext              K2Node_CustomEvent_DamageContext;                  // 0x1378(0x0050)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	uint8                                         K2Node_CustomEvent_HelperType;                     // 0x13C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C9[0x7];                                     // 0x13C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         K2Node_CustomEvent_RoleID;                         // 0x13D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_WeaponID;                       // 0x13D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13DC[0x4];                                     // 0x13DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_SlotType;                       // 0x13E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OverlayState;                   // 0x13F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13F4[0x4];                                     // 0x13F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_CustomState;                    // 0x13F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int64                                         K2Node_CustomEvent_EntityID_1;                     // 0x1408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         K2Node_CustomEvent_EntityID;                       // 0x1410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bDisable;                       // 0x1418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent) == 0x000010, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent) == 0x001420, "Wrong size on BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, EntryPoint) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bIsToning) == 0x000004, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bIsToning' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_Value_1) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_Value_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_Handle_7) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_Handle_7' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_ABPAssetPath) == 0x000020, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_ABPAssetPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_NSTailPath) == 0x000030, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_NSTailPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_TailLocation) == 0x000040, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_TailLocation' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_TailRotation) == 0x000058, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_TailRotation' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_NSHandheldPath) == 0x000070, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_NSHandheldPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_Stage_1) == 0x000080, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_Stage_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bMoveState_1) == 0x000081, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bMoveState_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bRelaxState) == 0x000082, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bRelaxState' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_ABPPath_2) == 0x000088, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_ABPPath_2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_AnimStage_1) == 0x000098, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_AnimStage_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bMoveState) == 0x000099, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bMoveState' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_RandomBool) == 0x00009A, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_RandomBool' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_NSPath_2) == 0x0000A0, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_NSPath_2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_Transform_3) == 0x0000B0, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_Transform_3' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_Handle_6) == 0x000110, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_Handle_6' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bAutoDestroy_1) == 0x000120, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bAutoDestroy_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bAutoActive_1) == 0x000121, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bAutoActive_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_ABPPath_1) == 0x000128, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_ABPPath_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_HelperType_9) == 0x000138, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_HelperType_9' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_RelativeLocation_2) == 0x000140, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_RelativeLocation_2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_MeshPath_3) == 0x000158, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_MeshPath_3' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_NSPath_1) == 0x000168, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_NSPath_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_AnimPath_1) == 0x000178, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_AnimPath_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_MatPathList_1) == 0x000188, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_MatPathList_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_NSRotator) == 0x000198, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_NSRotator' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_ActorClassPath_1) == 0x0001B0, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_ActorClassPath_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_Location_1) == 0x0001C0, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_Location_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_Rotation_1) == 0x0001D8, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_CloakID) == 0x0001F0, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_CloakID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_MeshPath_2) == 0x000200, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_MeshPath_2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_MatPathList) == 0x000210, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_MatPathList' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_Value) == 0x000220, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_NikkiActionAnimPath) == 0x000228, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_NikkiActionAnimPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_StarAnimPath) == 0x000238, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_StarAnimPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_StarClassRefPath) == 0x000248, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_StarClassRefPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_MeshPath_1) == 0x000258, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_MeshPath_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_NSPath) == 0x000268, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_NSPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_AnimPath) == 0x000278, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_AnimPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_MeshPath) == 0x000288, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_MeshPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_HelperType_8) == 0x000298, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_HelperType_8' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_AssetPath_5) == 0x0002A0, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_AssetPath_5' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_Transform_2) == 0x0002B0, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_Transform_2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_Handle_5) == 0x000310, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_Handle_5' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_HelperType_7) == 0x000320, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_HelperType_7' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_Handle_4) == 0x000328, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_Handle_4' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_HelperType_6) == 0x000338, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_HelperType_6' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_AssetPath_4) == 0x000340, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_AssetPath_4' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_RelativeLocation_1) == 0x000350, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_RelativeLocation_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_DissolveTime) == 0x000368, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_DissolveTime' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_InstrumentType_2) == 0x000370, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_InstrumentType_2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_Octace_1) == 0x000374, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_Octace_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_InstrumentType_1) == 0x000378, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_InstrumentType_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_Octace) == 0x00037C, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_Octace' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_AssetPath_3) == 0x000380, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_AssetPath_3' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_RelativeLocation) == 0x000390, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_RelativeLocation' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_RelativeRotation_1) == 0x0003A8, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_RelativeRotation_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bImmediately_2) == 0x0003C0, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bImmediately_2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_Index_1) == 0x0003C4, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_Index_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_Handle_3) == 0x0003C8, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_Handle_3' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bEnter) == 0x0003D8, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bEnter' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_NewParam_9) == 0x0003D9, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_NewParam_9' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_ActorClassPath) == 0x0003E0, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_ActorClassPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_Transform_1) == 0x0003F0, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_Transform_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_Handle_2) == 0x000450, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_Handle_2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_State_3) == 0x000460, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_State_3' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_NiagaraPath_2) == 0x000468, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_NiagaraPath_2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_StartLoc) == 0x000478, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_StartLoc' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_EndLoc) == 0x000490, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_EndLoc' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_targetSpawnerID) == 0x0004A8, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_targetSpawnerID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_NiagaraPath_1) == 0x0004B0, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_NiagaraPath_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_EffectLocation_1) == 0x0004C0, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_EffectLocation_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_EffectRotator_1) == 0x0004D8, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_EffectRotator_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_EffectScale_1) == 0x0004F0, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_EffectScale_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_NSVariableName) == 0x000508, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_NSVariableName' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_currentEffectLocation) == 0x000518, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_currentEffectLocation' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_NiagaraPath) == 0x000530, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_NiagaraPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_EffectLocation) == 0x000540, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_EffectLocation' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_EffectRotator) == 0x000558, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_EffectRotator' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_EffectScale) == 0x000570, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_EffectScale' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_Index) == 0x000588, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_Index' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bInit) == 0x00058C, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bInit' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_DoorSpawnerID) == 0x000590, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_DoorSpawnerID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_State_2) == 0x000598, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_State_2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_NewParam_8) == 0x00059C, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_NewParam_8' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_RemoveList) == 0x0005A0, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_RemoveList' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_AddList) == 0x0005B0, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_AddList' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_AnimStage) == 0x0005C0, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_AnimStage' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_ABPPath) == 0x0005C8, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_ABPPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_SeatAniPath) == 0x0005D8, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_SeatAniPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_SeatOffset) == 0x0005E8, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_SeatOffset' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_SeatRotation) == 0x000600, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_SeatRotation' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_NewParam_7) == 0x000618, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_NewParam_7' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_NewParam2_3) == 0x000628, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_NewParam2_3' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_InstrumentType) == 0x000629, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_InstrumentType' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_Stage) == 0x00062A, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_Stage' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_NewParam_6) == 0x000630, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_NewParam_6' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_NewParam2_2) == 0x000640, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_NewParam2_2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_NewParam_5) == 0x000650, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_NewParam_5' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_NewParam2_1) == 0x000660, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_NewParam2_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_NewParam3_1) == 0x0006C0, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_NewParam3_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_NewParam4) == 0x0006C4, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_NewParam4' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_NewParam_4) == 0x0006C8, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_NewParam_4' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_NewParam_3) == 0x0006CC, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_NewParam_3' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_NewParam_2) == 0x0006D0, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_NewParam_2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_NewParam2) == 0x0006E0, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_NewParam2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_NewParam3) == 0x0006E4, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_NewParam3' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_NewParam_1) == 0x0006E8, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_NewParam_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_NewParam) == 0x0006F8, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_NewParam' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_MothID) == 0x0006FC, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_MothID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_State_1) == 0x000700, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_State_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_PhaseIndex_1) == 0x000710, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_PhaseIndex_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_PhaseIndex) == 0x000714, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_PhaseIndex' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_MeshAssetPath) == 0x000718, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_MeshAssetPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_CurveAssetPath) == 0x000728, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_CurveAssetPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_IsContinue) == 0x000738, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_IsContinue' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_PlayerId_4) == 0x000740, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_PlayerId_4' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_PoseID_2) == 0x000748, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_PoseID_2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_MontageName) == 0x000750, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_MontageName' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_PlayerId_3) == 0x000760, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_PlayerId_3' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_PlayerId_2) == 0x000768, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_PlayerId_2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_State) == 0x000770, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_State' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_PoseID_1) == 0x000774, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_PoseID_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_PlayerId_1) == 0x000778, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_PlayerId_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_Count) == 0x000780, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_Count' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_RespondPlayerId) == 0x000788, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_RespondPlayerId' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_PlayerId) == 0x000790, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_PlayerId' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_InvitePlayerId) == 0x000798, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_InvitePlayerId' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_PlayerRoleID_3) == 0x0007A0, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_PlayerRoleID_3' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bController) == 0x0007A8, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bController' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_UserName) == 0x0007B0, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_UserName' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_Params_1) == 0x0007C0, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_Params_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_NikkiLoc_1) == 0x000868, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_NikkiLoc_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_CameraActorLoc_1) == 0x000880, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_CameraActorLoc_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_LookAtRealCenterLoc_1) == 0x000898, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_LookAtRealCenterLoc_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_CameraRelativeLoc_1) == 0x0008B0, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_CameraRelativeLoc_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_NikkiLoc) == 0x0008C8, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_NikkiLoc' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_CameraActorLoc) == 0x0008E0, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_CameraActorLoc' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_LookAtRealCenterLoc) == 0x0008F8, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_LookAtRealCenterLoc' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_CameraRelativeLoc) == 0x000910, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_CameraRelativeLoc' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_Params) == 0x000928, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_Params' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_RelativeRotation) == 0x0009D0, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_RelativeRotation' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_BCatDoll) == 0x0009E8, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_BCatDoll' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_BAnimal) == 0x0009E9, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_BAnimal' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_BInSpecial3CState) == 0x0009EA, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_BInSpecial3CState' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_InitPoseID) == 0x0009EC, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_InitPoseID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_InitalStanceTag) == 0x0009F0, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_InitalStanceTag' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_PoseID) == 0x000A00, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_PoseID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_percent) == 0x000A08, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_percent' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_BFromPhotographExit) == 0x000A10, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_BFromPhotographExit' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_PlayerRoleID_2) == 0x000A18, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_PlayerRoleID_2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_PlayerRoleID_1) == 0x000A20, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_PlayerRoleID_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_BFromController) == 0x000A28, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_BFromController' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_FromRoleID) == 0x000A30, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_FromRoleID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_BAccept_1) == 0x000A38, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_BAccept_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_BAccept) == 0x000A39, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_BAccept' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_PlyaerRoleID) == 0x000A40, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_PlyaerRoleID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_PlayerRoleID) == 0x000A48, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_PlayerRoleID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_MsgStr) == 0x000A50, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_MsgStr' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_EnableLookAt) == 0x000A60, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_EnableLookAt' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_InviterRid) == 0x000A68, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_InviterRid' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_MsgID) == 0x000A70, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_MsgID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_Msg) == 0x000A78, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_Msg' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_WoolenHeartEntityID) == 0x000A88, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_WoolenHeartEntityID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_WoolenHeartInfoCache) == 0x000A90, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_WoolenHeartInfoCache' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_AnimalEntityID_1) == 0x000AD8, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_AnimalEntityID_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_AbilityEffectID_1) == 0x000AE0, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_AbilityEffectID_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_LookAtAnimRotYaw) == 0x000AE8, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_LookAtAnimRotYaw' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_AnimalEntityID) == 0x000AF0, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_AnimalEntityID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_AbilityEffectID) == 0x000AF8, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_AbilityEffectID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_FishFloatLocation) == 0x000B00, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_FishFloatLocation' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_IsInPrepare) == 0x000B18, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_IsInPrepare' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_FishEntityID_2) == 0x000B20, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_FishEntityID_2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_FishEntityID_1) == 0x000B28, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_FishEntityID_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_Success) == 0x000B30, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_Success' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_Reason) == 0x000B38, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_Reason' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_HelperType_5) == 0x000B48, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_HelperType_5' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_AssetPath_2) == 0x000B50, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_AssetPath_2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_FishEntityID) == 0x000B60, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_FishEntityID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_IsReelIn) == 0x000B68, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_IsReelIn' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_IsLeft) == 0x000B69, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_IsLeft' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_BoxId) == 0x000B70, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_BoxId' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_FinalTrans) == 0x000B80, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_FinalTrans' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_EntityID_4) == 0x000BE0, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_EntityID_4' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_data) == 0x000BE8, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_data' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_playerEntityID_1) == 0x000BF8, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_playerEntityID_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_EntityID_3) == 0x000C00, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_EntityID_3' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_playerEntityID) == 0x000C08, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_playerEntityID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_action) == 0x000C10, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_action' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_extraInfo) == 0x000C18, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_extraInfo' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_extraInfo2) == 0x000C20, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_extraInfo2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_HelperType_4) == 0x000C28, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_HelperType_4' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bUse) == 0x000C29, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bUse' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_PortableBubblueMachineItemID) == 0x000C2C, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_PortableBubblueMachineItemID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_NikkiEntityID) == 0x000C30, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_NikkiEntityID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_HelperType_3) == 0x000C38, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_HelperType_3' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_Handle_1) == 0x000C40, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_Handle_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_InsectEntityID) == 0x000C50, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_InsectEntityID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bGlow) == 0x000C58, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bGlow' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_ParamType) == 0x000C5C, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_ParamType' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bSit) == 0x000C60, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bSit' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bIsAttached) == 0x000C61, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bIsAttached' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_ChairIdentifier) == 0x000C68, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_ChairIdentifier' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_ParentCompName) == 0x000C78, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_ParentCompName' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_RelativeTransfrom) == 0x000C90, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_RelativeTransfrom' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_HelperType_2) == 0x000CF0, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_HelperType_2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_AssetPath_1) == 0x000CF8, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_AssetPath_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_Transform) == 0x000D10, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_Transform' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_Handle) == 0x000D70, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_Handle' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bAutoDestroy) == 0x000D80, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bAutoDestroy' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bAutoActive) == 0x000D81, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bAutoActive' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_Event_EndPlayReason) == 0x000D82, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_BulletDAPath) == 0x000D88, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_BulletDAPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_BP_TriggerContext) == 0x000D98, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_BP_TriggerContext' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_AdjustParam) == 0x000E80, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_AdjustParam' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_WeaponConfigPath) == 0x000F50, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_WeaponConfigPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_SlotType_3) == 0x000F60, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_SlotType_3' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bImmediateRequest_5) == 0x000F70, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bImmediateRequest_5' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bInSync_4) == 0x000F71, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bInSync_4' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_AssetPath) == 0x000F78, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_AssetPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_Location) == 0x000F88, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_Rotation) == 0x000FA0, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_Rotation' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bImmediateRequest_4) == 0x000FB8, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bImmediateRequest_4' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bInSync_3) == 0x000FB9, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bInSync_3' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_SlotType_2) == 0x000FC0, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_SlotType_2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bImmediateRequest_3) == 0x000FD0, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bImmediateRequest_3' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bInSync_2) == 0x000FD1, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bInSync_2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bImmediateRequest_2) == 0x000FD2, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bImmediateRequest_2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bInSync_1) == 0x000FD3, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bInSync_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_UpdatedState_1) == 0x000FD4, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_UpdatedState_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bAdded_1) == 0x000FD8, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bAdded_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bDisabled) == 0x000FD9, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bDisabled' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bImmediateRequest_1) == 0x000FDA, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bImmediateRequest_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_InModuleTag) == 0x000FE0, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_InModuleTag' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_PawnAnimState) == 0x000FF0, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_PawnAnimState' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_UpdatedState) == 0x000FF4, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_UpdatedState' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bAdded) == 0x000FF8, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bAdded' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_inDressup) == 0x001000, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_inDressup' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_inUndress) == 0x001010, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_inUndress' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_inChangeType) == 0x001020, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_inChangeType' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_inNeedCover) == 0x001024, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_inNeedCover' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_inAbilityEffectID) == 0x001028, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_inAbilityEffectID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_StanceTag) == 0x001030, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_StanceTag' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bAllowFlag) == 0x001040, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bAllowFlag' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bNeedFireEvent_1) == 0x001041, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bNeedFireEvent_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bFastTransition_1) == 0x001042, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bFastTransition_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bSkipTransition_1) == 0x001043, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bSkipTransition_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bFullBodyStance) == 0x001044, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bFullBodyStance' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bNeedFireEvent) == 0x001045, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bNeedFireEvent' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bFastTransition) == 0x001046, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bFastTransition' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bSkipTransition) == 0x001047, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bSkipTransition' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_ActivePerformanceGestureTagName) == 0x001048, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_ActivePerformanceGestureTagName' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bFullBodyGesture) == 0x001058, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bFullBodyGesture' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bTrimGesture) == 0x001059, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bTrimGesture' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_TrimStartTimeForGesture) == 0x001060, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_TrimStartTimeForGesture' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_TrimEndTimeForGesture) == 0x001068, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_TrimEndTimeForGesture' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bExpectedAdditive) == 0x001070, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bExpectedAdditive' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_SuitID) == 0x001074, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_SuitID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bImmediately_1) == 0x001078, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bImmediately_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_WeaponID_1) == 0x00107C, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_WeaponID_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_SlotType_1) == 0x001080, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_SlotType_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bImmediateRequest) == 0x001090, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bImmediateRequest' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bInSync) == 0x001091, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bInSync' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_CustomWeaponState) == 0x001094, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_CustomWeaponState' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_ReliveTransform) == 0x0010A0, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_ReliveTransform' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_EntityID_2) == 0x001100, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_EntityID_2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_BuffDAPath) == 0x001108, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_BuffDAPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bRemove) == 0x001118, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bRemove' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_LSPath) == 0x001120, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_LSPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_DamageDAPath) == 0x001130, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_DamageDAPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_MulticastHitframeContext) == 0x001140, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_MulticastHitframeContext' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bDisplay) == 0x0012B0, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bDisplay' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_CurChargeLevel) == 0x0012B4, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_CurChargeLevel' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bImmediately) == 0x0012B8, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bImmediately' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_PlaceableObjEntityID) == 0x0012C0, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_PlaceableObjEntityID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bHidden) == 0x0012D0, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bHidden' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_RequestPlayerEntityID) == 0x0012D8, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_RequestPlayerEntityID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_MontageAssetPath) == 0x0012E0, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_MontageAssetPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_NSAssetPath) == 0x0012F0, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_NSAssetPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_inAfk) == 0x001300, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_inAfk' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bImmediatelyStop) == 0x001301, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bImmediatelyStop' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bEnable) == 0x001302, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bEnable' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_IkSlots) == 0x001308, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_IkSlots' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_HelperType_1) == 0x001318, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_HelperType_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_VehicleEntityId_1) == 0x001320, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_VehicleEntityId_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_FuncId) == 0x001328, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_FuncId' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_VehicleEntityId) == 0x001330, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_VehicleEntityId' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_PassenegerID) == 0x001338, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_PassenegerID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_PlaceableEntityID) == 0x001340, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_PlaceableEntityID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_FromPlayerEntityID) == 0x001348, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_FromPlayerEntityID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_ToPlayerEntityID) == 0x001350, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_ToPlayerEntityID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_String) == 0x001358, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_String' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_GlideState) == 0x001368, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_GlideState' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_ActionTag) == 0x00136C, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_ActionTag' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_Type) == 0x001374, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_Type' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_DamageContext) == 0x001378, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_DamageContext' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_HelperType) == 0x0013C8, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_HelperType' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_RoleID) == 0x0013D0, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_RoleID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_WeaponID) == 0x0013D8, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_WeaponID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_SlotType) == 0x0013E0, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_SlotType' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_OverlayState) == 0x0013F0, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_OverlayState' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_CustomState) == 0x0013F8, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_CustomState' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_EntityID_1) == 0x001408, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_EntityID_1' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_EntityID) == 0x001410, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_EntityID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent, K2Node_CustomEvent_bDisable) == 0x001418, "Member 'BP_MainCharacterRPCHelperComponent_C_ExecuteUbergraph_BP_MainCharacterRPCHelperComponent::K2Node_CustomEvent_bDisable' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multi_InterObjActive
// 0x0020 (0x0020 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multi_InterObjActive final
{
public:
	int64                                         EntityID;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Data;                                              // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int64                                         playerEntityID;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multi_InterObjActive) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multi_InterObjActive");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multi_InterObjActive) == 0x000020, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multi_InterObjActive");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multi_InterObjActive, EntityID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multi_InterObjActive::EntityID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multi_InterObjActive, Data) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_Multi_InterObjActive::Data' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multi_InterObjActive, playerEntityID) == 0x000018, "Member 'BP_MainCharacterRPCHelperComponent_C_Multi_InterObjActive::playerEntityID' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_AbilityBegin
// 0x0001 (0x0001 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityBegin final
{
public:
	uint8                                         HelperType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityBegin) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityBegin");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityBegin) == 0x000001, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityBegin");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityBegin, HelperType) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityBegin::HelperType' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_AbilityClearActor
// 0x0001 (0x0001 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityClearActor final
{
public:
	EAbilityMultiPlayerHelperType                 HelperType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityClearActor) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityClearActor");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityClearActor) == 0x000001, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityClearActor");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityClearActor, HelperType) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityClearActor::HelperType' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_AbilityClearNS
// 0x0001 (0x0001 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityClearNS final
{
public:
	EAbilityMultiPlayerHelperType                 HelperType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityClearNS) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityClearNS");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityClearNS) == 0x000001, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityClearNS");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityClearNS, HelperType) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityClearNS::HelperType' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_AbilityDestroyActor
// 0x0018 (0x0018 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityDestroyActor final
{
public:
	EAbilityMultiPlayerHelperType                 HelperType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Handle;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityDestroyActor) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityDestroyActor");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityDestroyActor) == 0x000018, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityDestroyActor");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityDestroyActor, HelperType) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityDestroyActor::HelperType' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityDestroyActor, Handle) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityDestroyActor::Handle' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_AbilityDestroyNS
// 0x0018 (0x0018 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityDestroyNS final
{
public:
	EAbilityMultiPlayerHelperType                 HelperType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Handle;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityDestroyNS) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityDestroyNS");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityDestroyNS) == 0x000018, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityDestroyNS");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityDestroyNS, HelperType) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityDestroyNS::HelperType' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityDestroyNS, Handle) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityDestroyNS::Handle' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_AbilityEnd
// 0x0001 (0x0001 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityEnd final
{
public:
	uint8                                         HelperType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityEnd) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityEnd");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityEnd) == 0x000001, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityEnd");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityEnd, HelperType) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityEnd::HelperType' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_AbilityPostEvent
// 0x0018 (0x0018 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityPostEvent final
{
public:
	EAbilityMultiPlayerHelperType                 HelperType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 AssetPath;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityPostEvent) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityPostEvent");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityPostEvent) == 0x000018, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityPostEvent");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityPostEvent, HelperType) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityPostEvent::HelperType' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityPostEvent, AssetPath) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_AbilityPostEvent::AssetPath' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_AbilitySetActorMeshLocation
// 0x0020 (0x0020 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_AbilitySetActorMeshLocation final
{
public:
	EAbilityMultiPlayerHelperType                 HelperType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RelativeLocation;                                  // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_AbilitySetActorMeshLocation) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_AbilitySetActorMeshLocation");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_AbilitySetActorMeshLocation) == 0x000020, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_AbilitySetActorMeshLocation");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_AbilitySetActorMeshLocation, HelperType) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_AbilitySetActorMeshLocation::HelperType' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_AbilitySetActorMeshLocation, RelativeLocation) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_AbilitySetActorMeshLocation::RelativeLocation' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_AbilitySpawnActor
// 0x0090 (0x0090 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_AbilitySpawnActor final
{
public:
	EAbilityMultiPlayerHelperType                 HelperType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 AssetPath;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0020(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Handle;                                            // 0x0080(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_AbilitySpawnActor) == 0x000010, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_AbilitySpawnActor");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_AbilitySpawnActor) == 0x000090, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_AbilitySpawnActor");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_AbilitySpawnActor, HelperType) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_AbilitySpawnActor::HelperType' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_AbilitySpawnActor, AssetPath) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_AbilitySpawnActor::AssetPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_AbilitySpawnActor, Transform) == 0x000020, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_AbilitySpawnActor::Transform' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_AbilitySpawnActor, Handle) == 0x000080, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_AbilitySpawnActor::Handle' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_AbilitySpawnNS
// 0x00A0 (0x00A0 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_AbilitySpawnNS final
{
public:
	EAbilityMultiPlayerHelperType                 HelperType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 AssetPath;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0020(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Handle;                                            // 0x0080(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bAutoDestroy;                                      // 0x0090(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAutoActive;                                       // 0x0091(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_AbilitySpawnNS) == 0x000010, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_AbilitySpawnNS");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_AbilitySpawnNS) == 0x0000A0, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_AbilitySpawnNS");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_AbilitySpawnNS, HelperType) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_AbilitySpawnNS::HelperType' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_AbilitySpawnNS, AssetPath) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_AbilitySpawnNS::AssetPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_AbilitySpawnNS, Transform) == 0x000020, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_AbilitySpawnNS::Transform' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_AbilitySpawnNS, Handle) == 0x000080, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_AbilitySpawnNS::Handle' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_AbilitySpawnNS, bAutoDestroy) == 0x000090, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_AbilitySpawnNS::bAutoDestroy' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_AbilitySpawnNS, bAutoActive) == 0x000091, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_AbilitySpawnNS::bAutoActive' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_AdjustTransform
// 0x00D0 (0x00D0 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_AdjustTransform final
{
public:
	struct FF_AdjustTransformRPCParam             AdjustParam;                                       // 0x0000(0x00D0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_AdjustTransform) == 0x000010, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_AdjustTransform");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_AdjustTransform) == 0x0000D0, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_AdjustTransform");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_AdjustTransform, AdjustParam) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_AdjustTransform::AdjustParam' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_AfkIdle
// 0x0002 (0x0002 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_AfkIdle final
{
public:
	bool                                          inAfk;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bImmediatelyStop;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_AfkIdle) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_AfkIdle");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_AfkIdle) == 0x000002, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_AfkIdle");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_AfkIdle, inAfk) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_AfkIdle::inAfk' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_AfkIdle, bImmediatelyStop) == 0x000001, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_AfkIdle::bImmediatelyStop' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_AthenaAbilityBegin
// 0x0050 (0x0050 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_AthenaAbilityBegin final
{
public:
	class FString                                 ABPPath;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 SeatAniPath;                                       // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                SeatOffset;                                        // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SeatRotation;                                      // 0x0038(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_AthenaAbilityBegin) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_AthenaAbilityBegin");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_AthenaAbilityBegin) == 0x000050, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_AthenaAbilityBegin");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_AthenaAbilityBegin, ABPPath) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_AthenaAbilityBegin::ABPPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_AthenaAbilityBegin, SeatAniPath) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_AthenaAbilityBegin::SeatAniPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_AthenaAbilityBegin, SeatOffset) == 0x000020, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_AthenaAbilityBegin::SeatOffset' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_AthenaAbilityBegin, SeatRotation) == 0x000038, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_AthenaAbilityBegin::SeatRotation' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_AthenaSwitchAnimStage
// 0x0001 (0x0001 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_AthenaSwitchAnimStage final
{
public:
	EAthenaShowState                              AnimStage;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_AthenaSwitchAnimStage) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_AthenaSwitchAnimStage");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_AthenaSwitchAnimStage) == 0x000001, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_AthenaSwitchAnimStage");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_AthenaSwitchAnimStage, AnimStage) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_AthenaSwitchAnimStage::AnimStage' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_AttachRibbonFishMesh
// 0x0020 (0x0020 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_AttachRibbonFishMesh final
{
public:
	class FString                                 MeshAssetPath;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CurveAssetPath;                                    // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_AttachRibbonFishMesh) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_AttachRibbonFishMesh");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_AttachRibbonFishMesh) == 0x000020, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_AttachRibbonFishMesh");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_AttachRibbonFishMesh, MeshAssetPath) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_AttachRibbonFishMesh::MeshAssetPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_AttachRibbonFishMesh, CurveAssetPath) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_AttachRibbonFishMesh::CurveAssetPath' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_BallonDuckAttachToCarrier
// 0x0018 (0x0018 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_BallonDuckAttachToCarrier final
{
public:
	class FString                                 NewParam;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         NewParam2;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewParam3;                                         // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_BallonDuckAttachToCarrier) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_BallonDuckAttachToCarrier");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_BallonDuckAttachToCarrier) == 0x000018, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_BallonDuckAttachToCarrier");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_BallonDuckAttachToCarrier, NewParam) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_BallonDuckAttachToCarrier::NewParam' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_BallonDuckAttachToCarrier, NewParam2) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_BallonDuckAttachToCarrier::NewParam2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_BallonDuckAttachToCarrier, NewParam3) == 0x000014, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_BallonDuckAttachToCarrier::NewParam3' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_BallonDuckDetachFromCarrier
// 0x0010 (0x0010 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_BallonDuckDetachFromCarrier final
{
public:
	class FString                                 NewParam;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_BallonDuckDetachFromCarrier) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_BallonDuckDetachFromCarrier");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_BallonDuckDetachFromCarrier) == 0x000010, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_BallonDuckDetachFromCarrier");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_BallonDuckDetachFromCarrier, NewParam) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_BallonDuckDetachFromCarrier::NewParam' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_BallonDuckRefreshWeapon
// 0x0004 (0x0004 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_BallonDuckRefreshWeapon final
{
public:
	int32                                         NewParam;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_BallonDuckRefreshWeapon) == 0x000004, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_BallonDuckRefreshWeapon");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_BallonDuckRefreshWeapon) == 0x000004, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_BallonDuckRefreshWeapon");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_BallonDuckRefreshWeapon, NewParam) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_BallonDuckRefreshWeapon::NewParam' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_BallonDuckTrigger
// 0x0004 (0x0004 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_BallonDuckTrigger final
{
public:
	int32                                         NewParam;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_BallonDuckTrigger) == 0x000004, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_BallonDuckTrigger");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_BallonDuckTrigger) == 0x000004, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_BallonDuckTrigger");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_BallonDuckTrigger, NewParam) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_BallonDuckTrigger::NewParam' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_BeginCleaningAnimal
// 0x0018 (0x0018 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_BeginCleaningAnimal final
{
public:
	int64                                         AnimalEntityID;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         AbilityEffectID;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LookAtAnimRotYaw;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_BeginCleaningAnimal) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_BeginCleaningAnimal");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_BeginCleaningAnimal) == 0x000018, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_BeginCleaningAnimal");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_BeginCleaningAnimal, AnimalEntityID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_BeginCleaningAnimal::AnimalEntityID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_BeginCleaningAnimal, AbilityEffectID) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_BeginCleaningAnimal::AbilityEffectID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_BeginCleaningAnimal, LookAtAnimRotYaw) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_BeginCleaningAnimal::LookAtAnimRotYaw' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_BeginFishing
// 0x0020 (0x0020 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_BeginFishing final
{
public:
	struct FVector                                FishFloatLocation;                                 // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInPrepare;                                       // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_BeginFishing) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_BeginFishing");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_BeginFishing) == 0x000020, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_BeginFishing");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_BeginFishing, FishFloatLocation) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_BeginFishing::FishFloatLocation' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_BeginFishing, IsInPrepare) == 0x000018, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_BeginFishing::IsInPrepare' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_BeginGetWoolenHeart
// 0x0050 (0x0050 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_BeginGetWoolenHeart final
{
public:
	int64                                         WoolenHeartEntityID;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_WoolenHeartInfoCache                WoolenHeartInfoCache;                              // 0x0008(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_BeginGetWoolenHeart) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_BeginGetWoolenHeart");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_BeginGetWoolenHeart) == 0x000050, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_BeginGetWoolenHeart");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_BeginGetWoolenHeart, WoolenHeartEntityID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_BeginGetWoolenHeart::WoolenHeartEntityID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_BeginGetWoolenHeart, WoolenHeartInfoCache) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_BeginGetWoolenHeart::WoolenHeartInfoCache' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_BlowBubbleSpawnNS
// 0x0040 (0x0040 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_BlowBubbleSpawnNS final
{
public:
	class FString                                 AssetPath;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_BlowBubbleSpawnNS) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_BlowBubbleSpawnNS");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_BlowBubbleSpawnNS) == 0x000040, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_BlowBubbleSpawnNS");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_BlowBubbleSpawnNS, AssetPath) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_BlowBubbleSpawnNS::AssetPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_BlowBubbleSpawnNS, Location) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_BlowBubbleSpawnNS::Location' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_BlowBubbleSpawnNS, Rotation) == 0x000028, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_BlowBubbleSpawnNS::Rotation' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_BlueberryPicnicRefreshWeapon
// 0x0010 (0x0010 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_BlueberryPicnicRefreshWeapon final
{
public:
	class FString                                 MeshPath;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_BlueberryPicnicRefreshWeapon) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_BlueberryPicnicRefreshWeapon");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_BlueberryPicnicRefreshWeapon) == 0x000010, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_BlueberryPicnicRefreshWeapon");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_BlueberryPicnicRefreshWeapon, MeshPath) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_BlueberryPicnicRefreshWeapon::MeshPath' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_BlueberryPicnicTrigger
// 0x0030 (0x0030 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_BlueberryPicnicTrigger final
{
public:
	class FString                                 MeshPath;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 NSPath;                                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 AnimPath;                                          // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_BlueberryPicnicTrigger) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_BlueberryPicnicTrigger");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_BlueberryPicnicTrigger) == 0x000030, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_BlueberryPicnicTrigger");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_BlueberryPicnicTrigger, MeshPath) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_BlueberryPicnicTrigger::MeshPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_BlueberryPicnicTrigger, NSPath) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_BlueberryPicnicTrigger::NSPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_BlueberryPicnicTrigger, AnimPath) == 0x000020, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_BlueberryPicnicTrigger::AnimPath' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_Buff
// 0x0020 (0x0020 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_Buff final
{
public:
	int64                                         EntityID;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 BuffDAPath;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bRemove;                                           // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_Buff) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_Buff");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_Buff) == 0x000020, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_Buff");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_Buff, EntityID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_Buff::EntityID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_Buff, BuffDAPath) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_Buff::BuffDAPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_Buff, bRemove) == 0x000018, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_Buff::bRemove' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_Bullet
// 0x00F0 (0x00F0 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_Bullet final
{
public:
	class FString                                 BulletDAPath;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FF_MulticastTriggerContext             BP_TriggerContext;                                 // 0x0010(0x00E0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_Bullet) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_Bullet");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_Bullet) == 0x0000F0, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_Bullet");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_Bullet, BulletDAPath) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_Bullet::BulletDAPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_Bullet, BP_TriggerContext) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_Bullet::BP_TriggerContext' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_CatchInsectSuccess
// 0x0008 (0x0008 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_CatchInsectSuccess final
{
public:
	int64                                         InsectEntityID;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_CatchInsectSuccess) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_CatchInsectSuccess");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_CatchInsectSuccess) == 0x000008, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_CatchInsectSuccess");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_CatchInsectSuccess, InsectEntityID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_CatchInsectSuccess::InsectEntityID' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_CelebrationGuardBegin
// 0x0010 (0x0010 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_CelebrationGuardBegin final
{
public:
	class FString                                 ABPPath;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_CelebrationGuardBegin) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_CelebrationGuardBegin");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_CelebrationGuardBegin) == 0x000010, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_CelebrationGuardBegin");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_CelebrationGuardBegin, ABPPath) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_CelebrationGuardBegin::ABPPath' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_CelebrationGuardSwitchAnimStage
// 0x0003 (0x0003 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_CelebrationGuardSwitchAnimStage final
{
public:
	ECastGuardStage                               AnimStage;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bMoveState;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RandomBool;                                        // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_CelebrationGuardSwitchAnimStage) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_CelebrationGuardSwitchAnimStage");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_CelebrationGuardSwitchAnimStage) == 0x000003, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_CelebrationGuardSwitchAnimStage");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_CelebrationGuardSwitchAnimStage, AnimStage) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_CelebrationGuardSwitchAnimStage::AnimStage' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_CelebrationGuardSwitchAnimStage, bMoveState) == 0x000001, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_CelebrationGuardSwitchAnimStage::bMoveState' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_CelebrationGuardSwitchAnimStage, RandomBool) == 0x000002, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_CelebrationGuardSwitchAnimStage::RandomBool' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_CelebrationPhantomBegin
// 0x0010 (0x0010 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_CelebrationPhantomBegin final
{
public:
	class FString                                 ABPPath;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_CelebrationPhantomBegin) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_CelebrationPhantomBegin");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_CelebrationPhantomBegin) == 0x000010, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_CelebrationPhantomBegin");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_CelebrationPhantomBegin, ABPPath) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_CelebrationPhantomBegin::ABPPath' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_ChangeInstArticulation
// 0x0001 (0x0001 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_ChangeInstArticulation final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_ChangeInstArticulation) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_ChangeInstArticulation");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_ChangeInstArticulation) == 0x000001, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_ChangeInstArticulation");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_ChangeInstArticulation, Value) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_ChangeInstArticulation::Value' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_ClaretStateChange
// 0x0004 (0x0004 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_ClaretStateChange final
{
public:
	int32                                         State;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_ClaretStateChange) == 0x000004, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_ClaretStateChange");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_ClaretStateChange) == 0x000004, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_ClaretStateChange");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_ClaretStateChange, State) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_ClaretStateChange::State' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_CreateFlyEffect
// 0x0048 (0x0048 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_CreateFlyEffect final
{
public:
	class FString                                 NiagaraPath;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                StartLoc;                                          // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndLoc;                                            // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         targetSpawnerID;                                   // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_CreateFlyEffect) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_CreateFlyEffect");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_CreateFlyEffect) == 0x000048, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_CreateFlyEffect");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_CreateFlyEffect, NiagaraPath) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_CreateFlyEffect::NiagaraPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_CreateFlyEffect, StartLoc) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_CreateFlyEffect::StartLoc' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_CreateFlyEffect, EndLoc) == 0x000028, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_CreateFlyEffect::EndLoc' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_CreateFlyEffect, targetSpawnerID) == 0x000040, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_CreateFlyEffect::targetSpawnerID' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_DamiaoPerformStart
// 0x0050 (0x0050 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_DamiaoPerformStart final
{
public:
	class FString                                 ActorClassPath;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int32>                                 CloakID;                                           // 0x0040(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_DamiaoPerformStart) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_DamiaoPerformStart");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_DamiaoPerformStart) == 0x000050, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_DamiaoPerformStart");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_DamiaoPerformStart, ActorClassPath) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_DamiaoPerformStart::ActorClassPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_DamiaoPerformStart, Location) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_DamiaoPerformStart::Location' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_DamiaoPerformStart, Rotation) == 0x000028, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_DamiaoPerformStart::Rotation' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_DamiaoPerformStart, CloakID) == 0x000040, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_DamiaoPerformStart::CloakID' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_DayDreamBegin
// 0x0004 (0x0004 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_DayDreamBegin final
{
public:
	int32                                         NewParam;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_DayDreamBegin) == 0x000004, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_DayDreamBegin");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_DayDreamBegin) == 0x000004, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_DayDreamBegin");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_DayDreamBegin, NewParam) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_DayDreamBegin::NewParam' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_DeadWoodBadPerformance
// 0x0004 (0x0004 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_DeadWoodBadPerformance final
{
public:
	int32                                         PhaseIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_DeadWoodBadPerformance) == 0x000004, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_DeadWoodBadPerformance");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_DeadWoodBadPerformance) == 0x000004, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_DeadWoodBadPerformance");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_DeadWoodBadPerformance, PhaseIndex) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_DeadWoodBadPerformance::PhaseIndex' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_DeadWoodGoodPerformance
// 0x0004 (0x0004 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_DeadWoodGoodPerformance final
{
public:
	int32                                         PhaseIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_DeadWoodGoodPerformance) == 0x000004, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_DeadWoodGoodPerformance");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_DeadWoodGoodPerformance) == 0x000004, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_DeadWoodGoodPerformance");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_DeadWoodGoodPerformance, PhaseIndex) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_DeadWoodGoodPerformance::PhaseIndex' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_DeadWoodPerformaceState
// 0x0001 (0x0001 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_DeadWoodPerformaceState final
{
public:
	bool                                          IsContinue;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_DeadWoodPerformaceState) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_DeadWoodPerformaceState");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_DeadWoodPerformaceState) == 0x000001, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_DeadWoodPerformaceState");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_DeadWoodPerformaceState, IsContinue) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_DeadWoodPerformaceState::IsContinue' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_DoDamage_Hitframe
// 0x0180 (0x0180 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_DoDamage_Hitframe final
{
public:
	class FString                                 DamageDAPath;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FF_MulticastHitFrameContext            MulticastHitframeContext;                          // 0x0010(0x0170)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_DoDamage_Hitframe) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_DoDamage_Hitframe");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_DoDamage_Hitframe) == 0x000180, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_DoDamage_Hitframe");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_DoDamage_Hitframe, DamageDAPath) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_DoDamage_Hitframe::DamageDAPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_DoDamage_Hitframe, MulticastHitframeContext) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_DoDamage_Hitframe::MulticastHitframeContext' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_EndCleaningAnimal
// 0x0010 (0x0010 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_EndCleaningAnimal final
{
public:
	int64                                         AnimalEntityID;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         AbilityEffectID;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_EndCleaningAnimal) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_EndCleaningAnimal");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_EndCleaningAnimal) == 0x000010, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_EndCleaningAnimal");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_EndCleaningAnimal, AnimalEntityID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_EndCleaningAnimal::AnimalEntityID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_EndCleaningAnimal, AbilityEffectID) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_EndCleaningAnimal::AbilityEffectID' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_EndFishing
// 0x0008 (0x0008 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_EndFishing final
{
public:
	int64                                         FishEntityID;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_EndFishing) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_EndFishing");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_EndFishing) == 0x000008, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_EndFishing");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_EndFishing, FishEntityID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_EndFishing::FishEntityID' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_EnterFishingProcess
// 0x0008 (0x0008 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_EnterFishingProcess final
{
public:
	int64                                         FishEntityID;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_EnterFishingProcess) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_EnterFishingProcess");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_EnterFishingProcess) == 0x000008, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_EnterFishingProcess");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_EnterFishingProcess, FishEntityID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_EnterFishingProcess::FishEntityID' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_EnterInstrument
// 0x0001 (0x0001 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_EnterInstrument final
{
public:
	Enum_InstrumentType                           InstrumentType;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_EnterInstrument) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_EnterInstrument");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_EnterInstrument) == 0x000001, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_EnterInstrument");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_EnterInstrument, InstrumentType) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_EnterInstrument::InstrumentType' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_EquipWeaponByConfigPath
// 0x0028 (0x0028 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_EquipWeaponByConfigPath final
{
public:
	class FString                                 WeaponConfigPath;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 SlotType;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bImmediateRequest;                                 // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInSync;                                           // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_EquipWeaponByConfigPath) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_EquipWeaponByConfigPath");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_EquipWeaponByConfigPath) == 0x000028, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_EquipWeaponByConfigPath");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_EquipWeaponByConfigPath, WeaponConfigPath) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_EquipWeaponByConfigPath::WeaponConfigPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_EquipWeaponByConfigPath, SlotType) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_EquipWeaponByConfigPath::SlotType' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_EquipWeaponByConfigPath, bImmediateRequest) == 0x000020, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_EquipWeaponByConfigPath::bImmediateRequest' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_EquipWeaponByConfigPath, bInSync) == 0x000021, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_EquipWeaponByConfigPath::bInSync' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_EquipWeaponByID
// 0x0028 (0x0028 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_EquipWeaponByID final
{
public:
	int32                                         WeaponID;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SlotType;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bImmediateRequest;                                 // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInSync;                                           // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CustomWeaponState;                                 // 0x001C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_EquipWeaponByID) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_EquipWeaponByID");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_EquipWeaponByID) == 0x000028, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_EquipWeaponByID");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_EquipWeaponByID, WeaponID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_EquipWeaponByID::WeaponID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_EquipWeaponByID, SlotType) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_EquipWeaponByID::SlotType' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_EquipWeaponByID, bImmediateRequest) == 0x000018, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_EquipWeaponByID::bImmediateRequest' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_EquipWeaponByID, bInSync) == 0x000019, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_EquipWeaponByID::bInSync' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_EquipWeaponByID, CustomWeaponState) == 0x00001C, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_EquipWeaponByID::CustomWeaponState' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_ExitFishingProcess
// 0x0018 (0x0018 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_ExitFishingProcess final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Reason;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_ExitFishingProcess) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_ExitFishingProcess");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_ExitFishingProcess) == 0x000018, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_ExitFishingProcess");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_ExitFishingProcess, Success) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_ExitFishingProcess::Success' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_ExitFishingProcess, Reason) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_ExitFishingProcess::Reason' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_FastUnequipWeapon
// 0x0002 (0x0002 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_FastUnequipWeapon final
{
public:
	bool                                          bImmediateRequest;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInSync;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_FastUnequipWeapon) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_FastUnequipWeapon");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_FastUnequipWeapon) == 0x000002, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_FastUnequipWeapon");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_FastUnequipWeapon, bImmediateRequest) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_FastUnequipWeapon::bImmediateRequest' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_FastUnequipWeapon, bInSync) == 0x000001, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_FastUnequipWeapon::bInSync' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_FishingUpdateParams
// 0x0010 (0x0010 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_FishingUpdateParams final
{
public:
	int64                                         FishEntityID;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsReelIn;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLeft;                                            // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_FishingUpdateParams) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_FishingUpdateParams");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_FishingUpdateParams) == 0x000010, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_FishingUpdateParams");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_FishingUpdateParams, FishEntityID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_FishingUpdateParams::FishEntityID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_FishingUpdateParams, IsReelIn) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_FishingUpdateParams::IsReelIn' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_FishingUpdateParams, IsLeft) == 0x000009, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_FishingUpdateParams::IsLeft' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_GlowInsectNet
// 0x0001 (0x0001 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_GlowInsectNet final
{
public:
	bool                                          bGlow;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_GlowInsectNet) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_GlowInsectNet");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_GlowInsectNet) == 0x000001, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_GlowInsectNet");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_GlowInsectNet, bGlow) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_GlowInsectNet::bGlow' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_ImaginationFireworkBegin
// 0x0060 (0x0060 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_ImaginationFireworkBegin final
{
public:
	class FString                                 ABPAssetPath;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 NSTailPath;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                TailLocation;                                      // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               TailRotation;                                      // 0x0038(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 NSHandheldPath;                                    // 0x0050(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_ImaginationFireworkBegin) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_ImaginationFireworkBegin");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_ImaginationFireworkBegin) == 0x000060, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_ImaginationFireworkBegin");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_ImaginationFireworkBegin, ABPAssetPath) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_ImaginationFireworkBegin::ABPAssetPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_ImaginationFireworkBegin, NSTailPath) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_ImaginationFireworkBegin::NSTailPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_ImaginationFireworkBegin, TailLocation) == 0x000020, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_ImaginationFireworkBegin::TailLocation' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_ImaginationFireworkBegin, TailRotation) == 0x000038, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_ImaginationFireworkBegin::TailRotation' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_ImaginationFireworkBegin, NSHandheldPath) == 0x000050, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_ImaginationFireworkBegin::NSHandheldPath' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_ImaginationFireworkSwitchStage
// 0x0003 (0x0003 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_ImaginationFireworkSwitchStage final
{
public:
	EImaginationFireworkAnimState                 Stage;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bMoveState;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRelaxState;                                       // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_ImaginationFireworkSwitchStage) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_ImaginationFireworkSwitchStage");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_ImaginationFireworkSwitchStage) == 0x000003, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_ImaginationFireworkSwitchStage");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_ImaginationFireworkSwitchStage, Stage) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_ImaginationFireworkSwitchStage::Stage' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_ImaginationFireworkSwitchStage, bMoveState) == 0x000001, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_ImaginationFireworkSwitchStage::bMoveState' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_ImaginationFireworkSwitchStage, bRelaxState) == 0x000002, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_ImaginationFireworkSwitchStage::bRelaxState' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_InstrumentDestroyActor
// 0x0010 (0x0010 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_InstrumentDestroyActor final
{
public:
	class FString                                 Handle;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_InstrumentDestroyActor) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_InstrumentDestroyActor");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_InstrumentDestroyActor) == 0x000010, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_InstrumentDestroyActor");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_InstrumentDestroyActor, Handle) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_InstrumentDestroyActor::Handle' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_InstrumentDestroyNS
// 0x0010 (0x0010 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_InstrumentDestroyNS final
{
public:
	class FString                                 Handle;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_InstrumentDestroyNS) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_InstrumentDestroyNS");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_InstrumentDestroyNS) == 0x000010, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_InstrumentDestroyNS");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_InstrumentDestroyNS, Handle) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_InstrumentDestroyNS::Handle' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_InstrumentSpawnActor
// 0x0080 (0x0080 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_InstrumentSpawnActor final
{
public:
	class FString                                 ActorClassPath;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FTransform                             Transform;                                         // 0x0010(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Handle;                                            // 0x0070(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_InstrumentSpawnActor) == 0x000010, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_InstrumentSpawnActor");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_InstrumentSpawnActor) == 0x000080, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_InstrumentSpawnActor");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_InstrumentSpawnActor, ActorClassPath) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_InstrumentSpawnActor::ActorClassPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_InstrumentSpawnActor, Transform) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_InstrumentSpawnActor::Transform' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_InstrumentSpawnActor, Handle) == 0x000070, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_InstrumentSpawnActor::Handle' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_InstrumentSpawnNS
// 0x0090 (0x0090 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_InstrumentSpawnNS final
{
public:
	class FString                                 NSPath;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FTransform                             Transform;                                         // 0x0010(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Handle;                                            // 0x0070(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bAutoDestroy;                                      // 0x0080(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAutoActive;                                       // 0x0081(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_InstrumentSpawnNS) == 0x000010, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_InstrumentSpawnNS");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_InstrumentSpawnNS) == 0x000090, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_InstrumentSpawnNS");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_InstrumentSpawnNS, NSPath) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_InstrumentSpawnNS::NSPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_InstrumentSpawnNS, Transform) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_InstrumentSpawnNS::Transform' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_InstrumentSpawnNS, Handle) == 0x000070, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_InstrumentSpawnNS::Handle' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_InstrumentSpawnNS, bAutoDestroy) == 0x000080, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_InstrumentSpawnNS::bAutoDestroy' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_InstrumentSpawnNS, bAutoActive) == 0x000081, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_InstrumentSpawnNS::bAutoActive' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_MagicBanquetSpawnTable
// 0x0004 (0x0004 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_MagicBanquetSpawnTable final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_MagicBanquetSpawnTable) == 0x000004, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_MagicBanquetSpawnTable");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_MagicBanquetSpawnTable) == 0x000004, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_MagicBanquetSpawnTable");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MagicBanquetSpawnTable, Index_0) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MagicBanquetSpawnTable::Index_0' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_MapleLeavesChangeTree
// 0x0018 (0x0018 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_MapleLeavesChangeTree final
{
public:
	TArray<class FString>                         NewParam;                                          // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          NewParam2;                                         // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_MapleLeavesChangeTree) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_MapleLeavesChangeTree");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_MapleLeavesChangeTree) == 0x000018, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_MapleLeavesChangeTree");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MapleLeavesChangeTree, NewParam) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MapleLeavesChangeTree::NewParam' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MapleLeavesChangeTree, NewParam2) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MapleLeavesChangeTree::NewParam2' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_MidnightPromShowGhost
// 0x0030 (0x0030 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_MidnightPromShowGhost final
{
public:
	class FString                                 AssetPath;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                RelativeLocation;                                  // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DissolveTime;                                      // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_MidnightPromShowGhost) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_MidnightPromShowGhost");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_MidnightPromShowGhost) == 0x000030, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_MidnightPromShowGhost");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MidnightPromShowGhost, AssetPath) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MidnightPromShowGhost::AssetPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MidnightPromShowGhost, RelativeLocation) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MidnightPromShowGhost::RelativeLocation' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MidnightPromShowGhost, DissolveTime) == 0x000028, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MidnightPromShowGhost::DissolveTime' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_MultiCallVehicleFunction
// 0x0010 (0x0010 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_MultiCallVehicleFunction final
{
public:
	int64                                         VehicleEntityId;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         FuncId;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiCallVehicleFunction) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_MultiCallVehicleFunction");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiCallVehicleFunction) == 0x000010, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_MultiCallVehicleFunction");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiCallVehicleFunction, VehicleEntityId) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MultiCallVehicleFunction::VehicleEntityId' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiCallVehicleFunction, FuncId) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MultiCallVehicleFunction::FuncId' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_MultiPassengerBindEntity
// 0x0010 (0x0010 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPassengerBindEntity final
{
public:
	int64                                         VehicleEntityId;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         PassenegerID;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPassengerBindEntity) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPassengerBindEntity");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPassengerBindEntity) == 0x000010, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPassengerBindEntity");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPassengerBindEntity, VehicleEntityId) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPassengerBindEntity::VehicleEntityId' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPassengerBindEntity, PassenegerID) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPassengerBindEntity::PassenegerID' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_MultiPhotographConfirmInvite
// 0x0010 (0x0010 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographConfirmInvite final
{
public:
	int64                                         FromRoleID;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BAccept;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographConfirmInvite) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographConfirmInvite");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographConfirmInvite) == 0x000010, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographConfirmInvite");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographConfirmInvite, FromRoleID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographConfirmInvite::FromRoleID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographConfirmInvite, BAccept) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographConfirmInvite::BAccept' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_MultiPhotographConfirmTransfer
// 0x0010 (0x0010 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographConfirmTransfer final
{
public:
	bool                                          BAccept;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         PlyaerRoleID;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographConfirmTransfer) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographConfirmTransfer");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographConfirmTransfer) == 0x000010, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographConfirmTransfer");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographConfirmTransfer, BAccept) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographConfirmTransfer::BAccept' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographConfirmTransfer, PlyaerRoleID) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographConfirmTransfer::PlyaerRoleID' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_MultiPhotographEnter
// 0x0008 (0x0008 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographEnter final
{
public:
	int64                                         PlayerRoleID;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographEnter) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographEnter");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographEnter) == 0x000008, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographEnter");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographEnter, PlayerRoleID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographEnter::PlayerRoleID' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_MultiPhotographExit
// 0x0018 (0x0018 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographExit final
{
public:
	bool                                          bController;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 UserName;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographExit) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographExit");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographExit) == 0x000018, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographExit");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographExit, bController) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographExit::bController' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographExit, UserName) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographExit::UserName' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_MultiPhotographInvite
// 0x0008 (0x0008 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographInvite final
{
public:
	int64                                         PlayerRoleID;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographInvite) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographInvite");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographInvite) == 0x000008, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographInvite");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographInvite, PlayerRoleID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographInvite::PlayerRoleID' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_MultiPhotographInviteeReadyToInviter
// 0x0008 (0x0008 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographInviteeReadyToInviter final
{
public:
	int64                                         InviterRid;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographInviteeReadyToInviter) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographInviteeReadyToInviter");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographInviteeReadyToInviter) == 0x000008, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographInviteeReadyToInviter");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographInviteeReadyToInviter, InviterRid) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographInviteeReadyToInviter::InviterRid' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_MultiPhotographLookAt
// 0x0001 (0x0001 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographLookAt final
{
public:
	bool                                          EnableLookAt;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographLookAt) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographLookAt");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographLookAt) == 0x000001, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographLookAt");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographLookAt, EnableLookAt) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographLookAt::EnableLookAt' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_MultiPhotographNikkiRelativeRotation
// 0x0020 (0x0020 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographNikkiRelativeRotation final
{
public:
	struct FRotator                               RelativeRotation;                                  // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          BCatDoll;                                          // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BAnimal;                                           // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographNikkiRelativeRotation) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographNikkiRelativeRotation");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographNikkiRelativeRotation) == 0x000020, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographNikkiRelativeRotation");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographNikkiRelativeRotation, RelativeRotation) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographNikkiRelativeRotation::RelativeRotation' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographNikkiRelativeRotation, BCatDoll) == 0x000018, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographNikkiRelativeRotation::BCatDoll' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographNikkiRelativeRotation, BAnimal) == 0x000019, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographNikkiRelativeRotation::BAnimal' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_MultiPhotographNikkiState
// 0x0018 (0x0018 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographNikkiState final
{
public:
	bool                                          BInSpecial3CState;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InitPoseID;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 InitalStanceTag;                                   // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographNikkiState) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographNikkiState");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographNikkiState) == 0x000018, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographNikkiState");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographNikkiState, BInSpecial3CState) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographNikkiState::BInSpecial3CState' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographNikkiState, InitPoseID) == 0x000004, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographNikkiState::InitPoseID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographNikkiState, InitalStanceTag) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographNikkiState::InitalStanceTag' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_MultiPhotographNormalMsg
// 0x0010 (0x0010 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographNormalMsg final
{
public:
	class FString                                 MsgStr;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographNormalMsg) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographNormalMsg");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographNormalMsg) == 0x000010, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographNormalMsg");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographNormalMsg, MsgStr) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographNormalMsg::MsgStr' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_MultiPhotographPlayAnim
// 0x0004 (0x0004 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographPlayAnim final
{
public:
	int32                                         PoseID;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographPlayAnim) == 0x000004, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographPlayAnim");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographPlayAnim) == 0x000004, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographPlayAnim");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographPlayAnim, PoseID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographPlayAnim::PoseID' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_MultiPhotographRemove
// 0x0008 (0x0008 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographRemove final
{
public:
	int64                                         PlayerRoleID;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographRemove) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographRemove");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographRemove) == 0x000008, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographRemove");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographRemove, PlayerRoleID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographRemove::PlayerRoleID' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_MultiPhotographRestoreAnim
// 0x0001 (0x0001 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographRestoreAnim final
{
public:
	bool                                          BFromPhotographExit;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographRestoreAnim) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographRestoreAnim");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographRestoreAnim) == 0x000001, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographRestoreAnim");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographRestoreAnim, BFromPhotographExit) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographRestoreAnim::BFromPhotographExit' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_MultiPhotographSetAnim
// 0x0008 (0x0008 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographSetAnim final
{
public:
	double                                        Percent;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographSetAnim) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographSetAnim");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographSetAnim) == 0x000008, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographSetAnim");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographSetAnim, Percent) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographSetAnim::Percent' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_MultiPhotographTakePhoto
// 0x0108 (0x0108 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographTakePhoto final
{
public:
	struct FVector                                NikkiLoc;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CameraActorLoc;                                    // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LookAtRealCenterLoc;                               // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CameraRelativeLoc;                                 // 0x0048(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_CameraParamsForRpc                  Params_0;                                          // 0x0060(0x00A8)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographTakePhoto) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographTakePhoto");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographTakePhoto) == 0x000108, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographTakePhoto");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographTakePhoto, NikkiLoc) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographTakePhoto::NikkiLoc' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographTakePhoto, CameraActorLoc) == 0x000018, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographTakePhoto::CameraActorLoc' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographTakePhoto, LookAtRealCenterLoc) == 0x000030, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographTakePhoto::LookAtRealCenterLoc' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographTakePhoto, CameraRelativeLoc) == 0x000048, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographTakePhoto::CameraRelativeLoc' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographTakePhoto, Params_0) == 0x000060, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographTakePhoto::Params_0' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_MultiPhotographTransfer
// 0x0010 (0x0010 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographTransfer final
{
public:
	int64                                         PlayerRoleID;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BFromController;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographTransfer) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographTransfer");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographTransfer) == 0x000010, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographTransfer");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographTransfer, PlayerRoleID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographTransfer::PlayerRoleID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographTransfer, BFromController) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographTransfer::BFromController' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_MultiPhotographUpdateCameraParams
// 0x00A8 (0x00A8 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographUpdateCameraParams final
{
public:
	struct FF_CameraParamsForRpc                  Params_0;                                          // 0x0000(0x00A8)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographUpdateCameraParams) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographUpdateCameraParams");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographUpdateCameraParams) == 0x0000A8, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographUpdateCameraParams");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographUpdateCameraParams, Params_0) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographUpdateCameraParams::Params_0' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_MultiPhotographUpdateCameraPos
// 0x0060 (0x0060 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographUpdateCameraPos final
{
public:
	struct FVector                                NikkiLoc;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CameraActorLoc;                                    // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LookAtRealCenterLoc;                               // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CameraRelativeLoc;                                 // 0x0048(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographUpdateCameraPos) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographUpdateCameraPos");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographUpdateCameraPos) == 0x000060, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographUpdateCameraPos");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographUpdateCameraPos, NikkiLoc) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographUpdateCameraPos::NikkiLoc' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographUpdateCameraPos, CameraActorLoc) == 0x000018, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographUpdateCameraPos::CameraActorLoc' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographUpdateCameraPos, LookAtRealCenterLoc) == 0x000030, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographUpdateCameraPos::LookAtRealCenterLoc' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographUpdateCameraPos, CameraRelativeLoc) == 0x000048, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MultiPhotographUpdateCameraPos::CameraRelativeLoc' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_MusicBox_UpdateBaseRing
// 0x0008 (0x0008 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_MusicBox_UpdateBaseRing final
{
public:
	bool                                          bDisplay;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurChargeLevel;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_MusicBox_UpdateBaseRing) == 0x000004, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_MusicBox_UpdateBaseRing");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_MusicBox_UpdateBaseRing) == 0x000008, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_MusicBox_UpdateBaseRing");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MusicBox_UpdateBaseRing, bDisplay) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MusicBox_UpdateBaseRing::bDisplay' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MusicBox_UpdateBaseRing, CurChargeLevel) == 0x000004, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MusicBox_UpdateBaseRing::CurChargeLevel' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_MusicBoxCombatHypnosis
// 0x0020 (0x0020 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_MusicBoxCombatHypnosis final
{
public:
	TArray<int64>                                 RemoveList;                                        // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int64>                                 AddList;                                           // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_MusicBoxCombatHypnosis) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_MusicBoxCombatHypnosis");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_MusicBoxCombatHypnosis) == 0x000020, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_MusicBoxCombatHypnosis");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MusicBoxCombatHypnosis, RemoveList) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MusicBoxCombatHypnosis::RemoveList' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_MusicBoxCombatHypnosis, AddList) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_MusicBoxCombatHypnosis::AddList' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_NetSyncGlide
// 0x0004 (0x0004 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_NetSyncGlide final
{
public:
	int32                                         GlideState;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_NetSyncGlide) == 0x000004, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_NetSyncGlide");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_NetSyncGlide) == 0x000004, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_NetSyncGlide");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_NetSyncGlide, GlideState) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_NetSyncGlide::GlideState' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_NetSyncWeapon
// 0x0038 (0x0038 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_NetSyncWeapon final
{
public:
	int64                                         RoleId;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WeaponID;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SlotType;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         OverlayState;                                      // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CustomState;                                       // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_NetSyncWeapon) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_NetSyncWeapon");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_NetSyncWeapon) == 0x000038, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_NetSyncWeapon");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_NetSyncWeapon, RoleId) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_NetSyncWeapon::RoleId' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_NetSyncWeapon, WeaponID) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_NetSyncWeapon::WeaponID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_NetSyncWeapon, SlotType) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_NetSyncWeapon::SlotType' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_NetSyncWeapon, OverlayState) == 0x000020, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_NetSyncWeapon::OverlayState' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_NetSyncWeapon, CustomState) == 0x000028, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_NetSyncWeapon::CustomState' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_NikkiUpdateOverlayData
// 0x000C (0x000C - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_NikkiUpdateOverlayData final
{
public:
	int32                                         PawnAnimState;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         UpdatedState;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAdded;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_NikkiUpdateOverlayData) == 0x000004, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_NikkiUpdateOverlayData");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_NikkiUpdateOverlayData) == 0x00000C, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_NikkiUpdateOverlayData");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_NikkiUpdateOverlayData, PawnAnimState) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_NikkiUpdateOverlayData::PawnAnimState' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_NikkiUpdateOverlayData, UpdatedState) == 0x000004, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_NikkiUpdateOverlayData::UpdatedState' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_NikkiUpdateOverlayData, bAdded) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_NikkiUpdateOverlayData::bAdded' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_NotifyClothesChanged
// 0x0030 (0x0030 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_NotifyClothesChanged final
{
public:
	TArray<int32>                                 inDressup;                                         // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 inUndress;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         inChangeType;                                      // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          inNeedCover;                                       // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         inAbilityEffectID;                                 // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_NotifyClothesChanged) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_NotifyClothesChanged");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_NotifyClothesChanged) == 0x000030, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_NotifyClothesChanged");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_NotifyClothesChanged, inDressup) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_NotifyClothesChanged::inDressup' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_NotifyClothesChanged, inUndress) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_NotifyClothesChanged::inUndress' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_NotifyClothesChanged, inChangeType) == 0x000020, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_NotifyClothesChanged::inChangeType' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_NotifyClothesChanged, inNeedCover) == 0x000024, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_NotifyClothesChanged::inNeedCover' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_NotifyClothesChanged, inAbilityEffectID) == 0x000028, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_NotifyClothesChanged::inAbilityEffectID' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_NotifySuitConfigChanged
// 0x0004 (0x0004 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_NotifySuitConfigChanged final
{
public:
	int32                                         SuitId;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_NotifySuitConfigChanged) == 0x000004, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_NotifySuitConfigChanged");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_NotifySuitConfigChanged) == 0x000004, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_NotifySuitConfigChanged");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_NotifySuitConfigChanged, SuitId) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_NotifySuitConfigChanged::SuitId' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_NotifyTransformDaMiaoMsg
// 0x0018 (0x0018 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_NotifyTransformDaMiaoMsg final
{
public:
	int32                                         MsgID;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 msg;                                               // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_NotifyTransformDaMiaoMsg) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_NotifyTransformDaMiaoMsg");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_NotifyTransformDaMiaoMsg) == 0x000018, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_NotifyTransformDaMiaoMsg");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_NotifyTransformDaMiaoMsg, MsgID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_NotifyTransformDaMiaoMsg::MsgID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_NotifyTransformDaMiaoMsg, msg) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_NotifyTransformDaMiaoMsg::msg' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_NotifyWeaponOverlayStateChanged
// 0x0008 (0x0008 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_NotifyWeaponOverlayStateChanged final
{
public:
	int32                                         UpdatedState;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAdded;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_NotifyWeaponOverlayStateChanged) == 0x000004, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_NotifyWeaponOverlayStateChanged");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_NotifyWeaponOverlayStateChanged) == 0x000008, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_NotifyWeaponOverlayStateChanged");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_NotifyWeaponOverlayStateChanged, UpdatedState) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_NotifyWeaponOverlayStateChanged::UpdatedState' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_NotifyWeaponOverlayStateChanged, bAdded) == 0x000004, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_NotifyWeaponOverlayStateChanged::bAdded' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_NovelistCreateNS
// 0x0040 (0x0040 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_NovelistCreateNS final
{
public:
	class FString                                 AssetPath;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                RelativeLocation;                                  // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RelativeRotation;                                  // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_NovelistCreateNS) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_NovelistCreateNS");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_NovelistCreateNS) == 0x000040, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_NovelistCreateNS");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_NovelistCreateNS, AssetPath) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_NovelistCreateNS::AssetPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_NovelistCreateNS, RelativeLocation) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_NovelistCreateNS::RelativeLocation' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_NovelistCreateNS, RelativeRotation) == 0x000028, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_NovelistCreateNS::RelativeRotation' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_NovelistDestroyNS
// 0x0001 (0x0001 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_NovelistDestroyNS final
{
public:
	bool                                          bImmediately;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_NovelistDestroyNS) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_NovelistDestroyNS");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_NovelistDestroyNS) == 0x000001, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_NovelistDestroyNS");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_NovelistDestroyNS, bImmediately) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_NovelistDestroyNS::bImmediately' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_PainterDestroyNS
// 0x0001 (0x0001 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_PainterDestroyNS final
{
public:
	bool                                          bImmediately;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_PainterDestroyNS) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_PainterDestroyNS");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_PainterDestroyNS) == 0x000001, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_PainterDestroyNS");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_PainterDestroyNS, bImmediately) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_PainterDestroyNS::bImmediately' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_PainterStartPainting
// 0x0020 (0x0020 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_PainterStartPainting final
{
public:
	class FString                                 MontageAssetPath;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 NSAssetPath;                                       // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_PainterStartPainting) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_PainterStartPainting");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_PainterStartPainting) == 0x000020, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_PainterStartPainting");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_PainterStartPainting, MontageAssetPath) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_PainterStartPainting::MontageAssetPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_PainterStartPainting, NSAssetPath) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_PainterStartPainting::NSAssetPath' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_PhxFloatFeedback
// 0x0058 (0x0058 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_PhxFloatFeedback final
{
public:
	int32                                         Type;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_MulticastDamageContext              DamageContext;                                     // 0x0008(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_PhxFloatFeedback) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_PhxFloatFeedback");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_PhxFloatFeedback) == 0x000058, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_PhxFloatFeedback");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_PhxFloatFeedback, Type) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_PhxFloatFeedback::Type' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_PhxFloatFeedback, DamageContext) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_PhxFloatFeedback::DamageContext' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_PicnicBouequetRefreshWeapon
// 0x0020 (0x0020 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_PicnicBouequetRefreshWeapon final
{
public:
	class FString                                 MeshPath;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         MatPathList;                                       // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_PicnicBouequetRefreshWeapon) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_PicnicBouequetRefreshWeapon");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_PicnicBouequetRefreshWeapon) == 0x000020, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_PicnicBouequetRefreshWeapon");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_PicnicBouequetRefreshWeapon, MeshPath) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_PicnicBouequetRefreshWeapon::MeshPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_PicnicBouequetRefreshWeapon, MatPathList) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_PicnicBouequetRefreshWeapon::MatPathList' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_PicnicBouequetTrigger
// 0x0058 (0x0058 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_PicnicBouequetTrigger final
{
public:
	class FString                                 MeshPath;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 NSPath;                                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 AnimPath;                                          // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         MatPathList;                                       // 0x0030(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FRotator                               NSRotator;                                         // 0x0040(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_PicnicBouequetTrigger) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_PicnicBouequetTrigger");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_PicnicBouequetTrigger) == 0x000058, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_PicnicBouequetTrigger");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_PicnicBouequetTrigger, MeshPath) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_PicnicBouequetTrigger::MeshPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_PicnicBouequetTrigger, NSPath) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_PicnicBouequetTrigger::NSPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_PicnicBouequetTrigger, AnimPath) == 0x000020, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_PicnicBouequetTrigger::AnimPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_PicnicBouequetTrigger, MatPathList) == 0x000030, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_PicnicBouequetTrigger::MatPathList' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_PicnicBouequetTrigger, NSRotator) == 0x000040, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_PicnicBouequetTrigger::NSRotator' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_PillowStateChange
// 0x0004 (0x0004 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_PillowStateChange final
{
public:
	int32                                         State;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_PillowStateChange) == 0x000004, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_PillowStateChange");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_PillowStateChange) == 0x000004, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_PillowStateChange");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_PillowStateChange, State) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_PillowStateChange::State' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_PlayEmoteMontage
// 0x0020 (0x0020 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_PlayEmoteMontage final
{
public:
	int64                                         playerId;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PoseID;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 MontageName;                                       // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_PlayEmoteMontage) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_PlayEmoteMontage");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_PlayEmoteMontage) == 0x000020, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_PlayEmoteMontage");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_PlayEmoteMontage, playerId) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_PlayEmoteMontage::playerId' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_PlayEmoteMontage, PoseID) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_PlayEmoteMontage::PoseID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_PlayEmoteMontage, MontageName) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_PlayEmoteMontage::MontageName' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_PlayFeatureSequence
// 0x0010 (0x0010 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_PlayFeatureSequence final
{
public:
	class FString                                 LSPath;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_PlayFeatureSequence) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_PlayFeatureSequence");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_PlayFeatureSequence) == 0x000010, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_PlayFeatureSequence");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_PlayFeatureSequence, LSPath) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_PlayFeatureSequence::LSPath' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_PlayHighAltitudeFireworks
// 0x0080 (0x0080 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_PlayHighAltitudeFireworks final
{
public:
	class FString                                 NiagaraPath;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                EffectLocation;                                    // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               EffectRotator;                                     // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                EffectScale;                                       // 0x0040(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 NSVariableName;                                    // 0x0058(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                currentEffectLocation;                             // 0x0068(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_PlayHighAltitudeFireworks) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_PlayHighAltitudeFireworks");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_PlayHighAltitudeFireworks) == 0x000080, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_PlayHighAltitudeFireworks");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_PlayHighAltitudeFireworks, NiagaraPath) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_PlayHighAltitudeFireworks::NiagaraPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_PlayHighAltitudeFireworks, EffectLocation) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_PlayHighAltitudeFireworks::EffectLocation' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_PlayHighAltitudeFireworks, EffectRotator) == 0x000028, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_PlayHighAltitudeFireworks::EffectRotator' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_PlayHighAltitudeFireworks, EffectScale) == 0x000040, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_PlayHighAltitudeFireworks::EffectScale' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_PlayHighAltitudeFireworks, NSVariableName) == 0x000058, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_PlayHighAltitudeFireworks::NSVariableName' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_PlayHighAltitudeFireworks, currentEffectLocation) == 0x000068, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_PlayHighAltitudeFireworks::currentEffectLocation' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_PlayLowAltitudeFireworks
// 0x0058 (0x0058 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_PlayLowAltitudeFireworks final
{
public:
	class FString                                 NiagaraPath;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                EffectLocation;                                    // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               EffectRotator;                                     // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                EffectScale;                                       // 0x0040(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_PlayLowAltitudeFireworks) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_PlayLowAltitudeFireworks");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_PlayLowAltitudeFireworks) == 0x000058, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_PlayLowAltitudeFireworks");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_PlayLowAltitudeFireworks, NiagaraPath) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_PlayLowAltitudeFireworks::NiagaraPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_PlayLowAltitudeFireworks, EffectLocation) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_PlayLowAltitudeFireworks::EffectLocation' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_PlayLowAltitudeFireworks, EffectRotator) == 0x000028, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_PlayLowAltitudeFireworks::EffectRotator' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_PlayLowAltitudeFireworks, EffectScale) == 0x000040, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_PlayLowAltitudeFireworks::EffectScale' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_PlayWeaponAction
// 0x0008 (0x0008 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_PlayWeaponAction final
{
public:
	struct FGameplayTag                           ActionTag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_PlayWeaponAction) == 0x000004, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_PlayWeaponAction");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_PlayWeaponAction) == 0x000008, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_PlayWeaponAction");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_PlayWeaponAction, ActionTag) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_PlayWeaponAction::ActionTag' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_PortableBubble
// 0x0010 (0x0010 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_PortableBubble final
{
public:
	bool                                          bUse;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PortableBubblueMachineItemID;                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         NikkiEntityID;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_PortableBubble) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_PortableBubble");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_PortableBubble) == 0x000010, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_PortableBubble");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_PortableBubble, bUse) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_PortableBubble::bUse' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_PortableBubble, PortableBubblueMachineItemID) == 0x000004, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_PortableBubble::PortableBubblueMachineItemID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_PortableBubble, NikkiEntityID) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_PortableBubble::NikkiEntityID' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_PowerFrogBegin
// 0x0020 (0x0020 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_PowerFrogBegin final
{
public:
	class FString                                 NewParam;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 NewParam2;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_PowerFrogBegin) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_PowerFrogBegin");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_PowerFrogBegin) == 0x000020, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_PowerFrogBegin");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_PowerFrogBegin, NewParam) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_PowerFrogBegin::NewParam' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_PowerFrogBegin, NewParam2) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_PowerFrogBegin::NewParam2' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_PowerFrogSpawnFrog
// 0x0080 (0x0080 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_PowerFrogSpawnFrog final
{
public:
	class FString                                 NewParam;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FTransform                             NewParam2;                                         // 0x0010(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewParam3;                                         // 0x0070(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewParam4;                                         // 0x0074(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_PowerFrogSpawnFrog) == 0x000010, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_PowerFrogSpawnFrog");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_PowerFrogSpawnFrog) == 0x000080, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_PowerFrogSpawnFrog");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_PowerFrogSpawnFrog, NewParam) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_PowerFrogSpawnFrog::NewParam' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_PowerFrogSpawnFrog, NewParam2) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_PowerFrogSpawnFrog::NewParam2' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_PowerFrogSpawnFrog, NewParam3) == 0x000070, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_PowerFrogSpawnFrog::NewParam3' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_PowerFrogSpawnFrog, NewParam4) == 0x000074, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_PowerFrogSpawnFrog::NewParam4' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_PowerFrogSwitchStage
// 0x0001 (0x0001 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_PowerFrogSwitchStage final
{
public:
	EPowerFrogStage                               Stage;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_PowerFrogSwitchStage) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_PowerFrogSwitchStage");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_PowerFrogSwitchStage) == 0x000001, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_PowerFrogSwitchStage");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_PowerFrogSwitchStage, Stage) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_PowerFrogSwitchStage::Stage' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_PressSyllable
// 0x0008 (0x0008 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_PressSyllable final
{
public:
	Enum_InstrumentType                           InstrumentType;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Octace;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_PressSyllable) == 0x000004, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_PressSyllable");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_PressSyllable) == 0x000008, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_PressSyllable");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_PressSyllable, InstrumentType) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_PressSyllable::InstrumentType' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_PressSyllable, Octace) == 0x000004, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_PressSyllable::Octace' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_QuickRelive
// 0x0060 (0x0060 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_QuickRelive final
{
public:
	struct FTransform                             ReliveTransform;                                   // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_QuickRelive) == 0x000010, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_QuickRelive");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_QuickRelive) == 0x000060, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_QuickRelive");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_QuickRelive, ReliveTransform) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_QuickRelive::ReliveTransform' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_ReleaseSyllable
// 0x0008 (0x0008 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_ReleaseSyllable final
{
public:
	Enum_InstrumentType                           InstrumentType;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Octace;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_ReleaseSyllable) == 0x000004, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_ReleaseSyllable");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_ReleaseSyllable) == 0x000008, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_ReleaseSyllable");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_ReleaseSyllable, InstrumentType) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_ReleaseSyllable::InstrumentType' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_ReleaseSyllable, Octace) == 0x000004, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_ReleaseSyllable::Octace' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_RemoveSlotWeapon
// 0x0018 (0x0018 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_RemoveSlotWeapon final
{
public:
	class FString                                 SlotType;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bImmediateRequest;                                 // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInSync;                                           // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_RemoveSlotWeapon) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_RemoveSlotWeapon");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_RemoveSlotWeapon) == 0x000018, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_RemoveSlotWeapon");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_RemoveSlotWeapon, SlotType) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_RemoveSlotWeapon::SlotType' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_RemoveSlotWeapon, bImmediateRequest) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_RemoveSlotWeapon::bImmediateRequest' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_RemoveSlotWeapon, bInSync) == 0x000011, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_RemoveSlotWeapon::bInSync' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_RequestStartGesture
// 0x0030 (0x0030 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_RequestStartGesture final
{
public:
	class FString                                 ActivePerformanceGestureTagName;                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bFullBodyGesture;                                  // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTrimGesture;                                      // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TrimStartTimeForGesture;                           // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TrimEndTimeForGesture;                             // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bExpectedAdditive;                                 // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_RequestStartGesture) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_RequestStartGesture");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_RequestStartGesture) == 0x000030, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_RequestStartGesture");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_RequestStartGesture, ActivePerformanceGestureTagName) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_RequestStartGesture::ActivePerformanceGestureTagName' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_RequestStartGesture, bFullBodyGesture) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_RequestStartGesture::bFullBodyGesture' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_RequestStartGesture, bTrimGesture) == 0x000011, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_RequestStartGesture::bTrimGesture' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_RequestStartGesture, TrimStartTimeForGesture) == 0x000018, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_RequestStartGesture::TrimStartTimeForGesture' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_RequestStartGesture, TrimEndTimeForGesture) == 0x000020, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_RequestStartGesture::TrimEndTimeForGesture' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_RequestStartGesture, bExpectedAdditive) == 0x000028, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_RequestStartGesture::bExpectedAdditive' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_RequestStartPerformance
// 0x0018 (0x0018 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_RequestStartPerformance final
{
public:
	class FString                                 StanceTag;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bAllowFlag;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bNeedFireEvent;                                    // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFastTransition;                                   // 0x0012(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSkipTransition;                                   // 0x0013(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFullBodyStance;                                   // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_RequestStartPerformance) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_RequestStartPerformance");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_RequestStartPerformance) == 0x000018, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_RequestStartPerformance");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_RequestStartPerformance, StanceTag) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_RequestStartPerformance::StanceTag' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_RequestStartPerformance, bAllowFlag) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_RequestStartPerformance::bAllowFlag' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_RequestStartPerformance, bNeedFireEvent) == 0x000011, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_RequestStartPerformance::bNeedFireEvent' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_RequestStartPerformance, bFastTransition) == 0x000012, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_RequestStartPerformance::bFastTransition' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_RequestStartPerformance, bSkipTransition) == 0x000013, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_RequestStartPerformance::bSkipTransition' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_RequestStartPerformance, bFullBodyStance) == 0x000014, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_RequestStartPerformance::bFullBodyStance' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_RequestStopPerformance
// 0x0003 (0x0003 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_RequestStopPerformance final
{
public:
	bool                                          bNeedFireEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFastTransition;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSkipTransition;                                   // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_RequestStopPerformance) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_RequestStopPerformance");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_RequestStopPerformance) == 0x000003, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_RequestStopPerformance");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_RequestStopPerformance, bNeedFireEvent) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_RequestStopPerformance::bNeedFireEvent' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_RequestStopPerformance, bFastTransition) == 0x000001, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_RequestStopPerformance::bFastTransition' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_RequestStopPerformance, bSkipTransition) == 0x000002, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_RequestStopPerformance::bSkipTransition' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_SeaOfStarsBegin
// 0x0030 (0x0030 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_SeaOfStarsBegin final
{
public:
	class FString                                 NikkiActionAnimPath;                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 StarAnimPath;                                      // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 StarClassRefPath;                                  // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_SeaOfStarsBegin) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_SeaOfStarsBegin");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_SeaOfStarsBegin) == 0x000030, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_SeaOfStarsBegin");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_SeaOfStarsBegin, NikkiActionAnimPath) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_SeaOfStarsBegin::NikkiActionAnimPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_SeaOfStarsBegin, StarAnimPath) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_SeaOfStarsBegin::StarAnimPath' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_SeaOfStarsBegin, StarClassRefPath) == 0x000020, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_SeaOfStarsBegin::StarClassRefPath' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_SetAnimLocomotionState
// 0x0001 (0x0001 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_SetAnimLocomotionState final
{
public:
	bool                                          bEnter;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_SetAnimLocomotionState) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_SetAnimLocomotionState");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_SetAnimLocomotionState) == 0x000001, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_SetAnimLocomotionState");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_SetAnimLocomotionState, bEnter) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_SetAnimLocomotionState::bEnter' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_SetDoorLightSlot
// 0x0010 (0x0010 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_SetDoorLightSlot final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInit;                                             // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         DoorSpawnerID;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_SetDoorLightSlot) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_SetDoorLightSlot");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_SetDoorLightSlot) == 0x000010, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_SetDoorLightSlot");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_SetDoorLightSlot, Index_0) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_SetDoorLightSlot::Index_0' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_SetDoorLightSlot, bInit) == 0x000004, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_SetDoorLightSlot::bInit' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_SetDoorLightSlot, DoorSpawnerID) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_SetDoorLightSlot::DoorSpawnerID' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_SetPerformanceInviteId
// 0x0010 (0x0010 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_SetPerformanceInviteId final
{
public:
	int64                                         playerId;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         InvitePlayerId;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_SetPerformanceInviteId) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_SetPerformanceInviteId");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_SetPerformanceInviteId) == 0x000010, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_SetPerformanceInviteId");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_SetPerformanceInviteId, playerId) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_SetPerformanceInviteId::playerId' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_SetPerformanceInviteId, InvitePlayerId) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_SetPerformanceInviteId::InvitePlayerId' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_SetPerformanceRespondCount
// 0x0018 (0x0018 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_SetPerformanceRespondCount final
{
public:
	int64                                         playerId;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         RespondPlayerId;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_SetPerformanceRespondCount) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_SetPerformanceRespondCount");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_SetPerformanceRespondCount) == 0x000018, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_SetPerformanceRespondCount");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_SetPerformanceRespondCount, playerId) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_SetPerformanceRespondCount::playerId' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_SetPerformanceRespondCount, Count) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_SetPerformanceRespondCount::Count' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_SetPerformanceRespondCount, RespondPlayerId) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_SetPerformanceRespondCount::RespondPlayerId' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_SetPerformanceState
// 0x0010 (0x0010 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_SetPerformanceState final
{
public:
	int64                                         playerId;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         State;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PoseID;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_SetPerformanceState) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_SetPerformanceState");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_SetPerformanceState) == 0x000010, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_SetPerformanceState");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_SetPerformanceState, playerId) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_SetPerformanceState::playerId' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_SetPerformanceState, State) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_SetPerformanceState::State' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_SetPerformanceState, PoseID) == 0x00000C, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_SetPerformanceState::PoseID' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_SetPlaceableObjHidden
// 0x0020 (0x0020 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_SetPlaceableObjHidden final
{
public:
	TArray<int64>                                 PlaceableObjEntityID;                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bHidden;                                           // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         RequestPlayerEntityID;                             // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_SetPlaceableObjHidden) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_SetPlaceableObjHidden");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_SetPlaceableObjHidden) == 0x000020, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_SetPlaceableObjHidden");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_SetPlaceableObjHidden, PlaceableObjEntityID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_SetPlaceableObjHidden::PlaceableObjEntityID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_SetPlaceableObjHidden, bHidden) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_SetPlaceableObjHidden::bHidden' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_SetPlaceableObjHidden, RequestPlayerEntityID) == 0x000018, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_SetPlaceableObjHidden::RequestPlayerEntityID' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_SetWeaponAppearanceDisabled
// 0x0018 (0x0018 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_SetWeaponAppearanceDisabled final
{
public:
	bool                                          bDisabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bImmediateRequest;                                 // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 InModuleTag;                                       // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_SetWeaponAppearanceDisabled) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_SetWeaponAppearanceDisabled");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_SetWeaponAppearanceDisabled) == 0x000018, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_SetWeaponAppearanceDisabled");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_SetWeaponAppearanceDisabled, bDisabled) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_SetWeaponAppearanceDisabled::bDisabled' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_SetWeaponAppearanceDisabled, bImmediateRequest) == 0x000001, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_SetWeaponAppearanceDisabled::bImmediateRequest' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_SetWeaponAppearanceDisabled, InModuleTag) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_SetWeaponAppearanceDisabled::InModuleTag' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_ShepherdessEnterPhotograph
// 0x0001 (0x0001 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_ShepherdessEnterPhotograph final
{
public:
	bool                                          NewParam;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_ShepherdessEnterPhotograph) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_ShepherdessEnterPhotograph");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_ShepherdessEnterPhotograph) == 0x000001, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_ShepherdessEnterPhotograph");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_ShepherdessEnterPhotograph, NewParam) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_ShepherdessEnterPhotograph::NewParam' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_ShepherdessSwitchStage
// 0x0001 (0x0001 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_ShepherdessSwitchStage final
{
public:
	EShepherdessAnimState                         NewParam;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_ShepherdessSwitchStage) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_ShepherdessSwitchStage");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_ShepherdessSwitchStage) == 0x000001, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_ShepherdessSwitchStage");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_ShepherdessSwitchStage, NewParam) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_ShepherdessSwitchStage::NewParam' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_ShinyMothChangeLamp
// 0x0018 (0x0018 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_ShinyMothChangeLamp final
{
public:
	int32                                         MothID;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 State;                                             // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_ShinyMothChangeLamp) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_ShinyMothChangeLamp");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_ShinyMothChangeLamp) == 0x000018, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_ShinyMothChangeLamp");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_ShinyMothChangeLamp, MothID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_ShinyMothChangeLamp::MothID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_ShinyMothChangeLamp, State) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_ShinyMothChangeLamp::State' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_SitOnBubbleCableCar
// 0x0028 (0x0028 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_SitOnBubbleCableCar final
{
public:
	int64                                         EntityID;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         playerEntityID;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Action;                                            // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         extraInfo;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         extraInfo2;                                        // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_SitOnBubbleCableCar) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_SitOnBubbleCableCar");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_SitOnBubbleCableCar) == 0x000028, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_SitOnBubbleCableCar");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_SitOnBubbleCableCar, EntityID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_SitOnBubbleCableCar::EntityID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_SitOnBubbleCableCar, playerEntityID) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_SitOnBubbleCableCar::playerEntityID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_SitOnBubbleCableCar, Action) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_SitOnBubbleCableCar::Action' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_SitOnBubbleCableCar, extraInfo) == 0x000018, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_SitOnBubbleCableCar::extraInfo' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_SitOnBubbleCableCar, extraInfo2) == 0x000020, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_SitOnBubbleCableCar::extraInfo2' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_SitOnInteractiveChair
// 0x0090 (0x0090 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_SitOnInteractiveChair final
{
public:
	int32                                         ParamType;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSit;                                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsAttached;                                       // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ChairIdentifier;                                   // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 ParentCompName;                                    // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RelativeTransfrom;                                 // 0x0030(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_SitOnInteractiveChair) == 0x000010, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_SitOnInteractiveChair");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_SitOnInteractiveChair) == 0x000090, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_SitOnInteractiveChair");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_SitOnInteractiveChair, ParamType) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_SitOnInteractiveChair::ParamType' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_SitOnInteractiveChair, bSit) == 0x000004, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_SitOnInteractiveChair::bSit' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_SitOnInteractiveChair, bIsAttached) == 0x000005, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_SitOnInteractiveChair::bIsAttached' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_SitOnInteractiveChair, ChairIdentifier) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_SitOnInteractiveChair::ChairIdentifier' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_SitOnInteractiveChair, ParentCompName) == 0x000018, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_SitOnInteractiveChair::ParentCompName' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_SitOnInteractiveChair, RelativeTransfrom) == 0x000030, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_SitOnInteractiveChair::RelativeTransfrom' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_StopBlowBubble
// 0x0001 (0x0001 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_StopBlowBubble final
{
public:
	bool                                          bImmediately;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_StopBlowBubble) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_StopBlowBubble");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_StopBlowBubble) == 0x000001, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_StopBlowBubble");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_StopBlowBubble, bImmediately) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_StopBlowBubble::bImmediately' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_StopBoxPhysics
// 0x0070 (0x0070 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_StopBoxPhysics final
{
public:
	int64                                         BoxID;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             FinalTrans;                                        // 0x0010(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_StopBoxPhysics) == 0x000010, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_StopBoxPhysics");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_StopBoxPhysics) == 0x000070, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_StopBoxPhysics");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_StopBoxPhysics, BoxID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_StopBoxPhysics::BoxID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_StopBoxPhysics, FinalTrans) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_StopBoxPhysics::FinalTrans' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_StopEmoteMontage
// 0x0008 (0x0008 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_StopEmoteMontage final
{
public:
	int64                                         playerId;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_StopEmoteMontage) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_StopEmoteMontage");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_StopEmoteMontage) == 0x000008, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_StopEmoteMontage");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_StopEmoteMontage, playerId) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_StopEmoteMontage::playerId' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_SuonaToningChange
// 0x0001 (0x0001 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_SuonaToningChange final
{
public:
	bool                                          bIsToning;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_SuonaToningChange) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_SuonaToningChange");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_SuonaToningChange) == 0x000001, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_SuonaToningChange");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_SuonaToningChange, bIsToning) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_SuonaToningChange::bIsToning' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_TriggerPlaceableObjInteracted
// 0x0028 (0x0028 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_TriggerPlaceableObjInteracted final
{
public:
	int64                                         PlaceableEntityID;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         FromPlayerEntityID;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         ToPlayerEntityID;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 String;                                            // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_TriggerPlaceableObjInteracted) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_TriggerPlaceableObjInteracted");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_TriggerPlaceableObjInteracted) == 0x000028, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_TriggerPlaceableObjInteracted");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_TriggerPlaceableObjInteracted, PlaceableEntityID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_TriggerPlaceableObjInteracted::PlaceableEntityID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_TriggerPlaceableObjInteracted, FromPlayerEntityID) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_TriggerPlaceableObjInteracted::FromPlayerEntityID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_TriggerPlaceableObjInteracted, ToPlayerEntityID) == 0x000010, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_TriggerPlaceableObjInteracted::ToPlayerEntityID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_TriggerPlaceableObjInteracted, String) == 0x000018, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_TriggerPlaceableObjInteracted::String' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_UIDisableMovement
// 0x0010 (0x0010 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_UIDisableMovement final
{
public:
	int64                                         EntityID;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDisable;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_UIDisableMovement) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_UIDisableMovement");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_UIDisableMovement) == 0x000010, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_UIDisableMovement");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_UIDisableMovement, EntityID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_UIDisableMovement::EntityID' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_UIDisableMovement, bDisable) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_UIDisableMovement::bDisable' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_UnequipWeapon
// 0x0002 (0x0002 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_UnequipWeapon final
{
public:
	bool                                          bImmediateRequest;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInSync;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_UnequipWeapon) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_UnequipWeapon");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_UnequipWeapon) == 0x000002, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_UnequipWeapon");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_UnequipWeapon, bImmediateRequest) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_UnequipWeapon::bImmediateRequest' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_UnequipWeapon, bInSync) == 0x000001, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_UnequipWeapon::bInSync' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_UpdateInstrumentRTPCValue
// 0x0008 (0x0008 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_UpdateInstrumentRTPCValue final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_UpdateInstrumentRTPCValue) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_UpdateInstrumentRTPCValue");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_UpdateInstrumentRTPCValue) == 0x000008, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_UpdateInstrumentRTPCValue");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_UpdateInstrumentRTPCValue, Value) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_UpdateInstrumentRTPCValue::Value' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicast_UpdateInteractionIK
// 0x0018 (0x0018 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicast_UpdateInteractionIK final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFInteractionIkSlots>           IkSlots;                                           // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicast_UpdateInteractionIK) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicast_UpdateInteractionIK");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicast_UpdateInteractionIK) == 0x000018, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicast_UpdateInteractionIK");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_UpdateInteractionIK, bEnable) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_UpdateInteractionIK::bEnable' has a wrong offset!");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicast_UpdateInteractionIK, IkSlots) == 0x000008, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicast_UpdateInteractionIK::IkSlots' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.Multicst_DoRelive
// 0x0008 (0x0008 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_Multicst_DoRelive final
{
public:
	int64                                         EntityID;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_Multicst_DoRelive) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_Multicst_DoRelive");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_Multicst_DoRelive) == 0x000008, "Wrong size on BP_MainCharacterRPCHelperComponent_C_Multicst_DoRelive");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_Multicst_DoRelive, EntityID) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_Multicst_DoRelive::EntityID' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_ReceiveEndPlay");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_MainCharacterRPCHelperComponent_C_ReceiveEndPlay");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_MainCharacterRPCHelperComponent.BP_MainCharacterRPCHelperComponent_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct BP_MainCharacterRPCHelperComponent_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_MainCharacterRPCHelperComponent_C_GetModuleName) == 0x000008, "Wrong alignment on BP_MainCharacterRPCHelperComponent_C_GetModuleName");
static_assert(sizeof(BP_MainCharacterRPCHelperComponent_C_GetModuleName) == 0x000010, "Wrong size on BP_MainCharacterRPCHelperComponent_C_GetModuleName");
static_assert(offsetof(BP_MainCharacterRPCHelperComponent_C_GetModuleName, ReturnValue) == 0x000000, "Member 'BP_MainCharacterRPCHelperComponent_C_GetModuleName::ReturnValue' has a wrong offset!");

}

