#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MiniMap

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_MiniMap.WBP_MiniMap_C
// 0x0130 (0x0420 - 0x02F0)
class UWBP_MiniMap_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCanvasPanel*                           CanvasPanel_Shape;                                 // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           RetainerBox_0;                                     // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           RetainerBox_1;                                     // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_FollowMapHud_C*                    WBP_FollowMapHud;                                  // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_FollowMapHud_HighLayer_C*          WBP_FollowMapHud_HighLayer;                        // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_MapHud_C*                          WBP_MapHud;                                        // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 RenderTargetMap;                                   // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 RenderTargetFollow;                                // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_338[0x8];                                      // 0x0338(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CachedBrush;                                       // 0x0340(0x00D0)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UMaterialInstanceDynamic*               CachedMat;                                         // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ClearRenderTarget();
	void CreateMapTerrainCell(class UWBP_MapTerrainCell_C** Cell);
	void ExecuteUbergraph_WBP_MiniMap(int32 EntryPoint);
	void InitRenderTarget(const struct FVector2D& Size);

	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_MiniMap_C">();
	}
	static class UWBP_MiniMap_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_MiniMap_C>();
	}
};
static_assert(alignof(UWBP_MiniMap_C) == 0x000010, "Wrong alignment on UWBP_MiniMap_C");
static_assert(sizeof(UWBP_MiniMap_C) == 0x000420, "Wrong size on UWBP_MiniMap_C");
static_assert(offsetof(UWBP_MiniMap_C, UberGraphFrame) == 0x0002F0, "Member 'UWBP_MiniMap_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_MiniMap_C, CanvasPanel_Shape) == 0x0002F8, "Member 'UWBP_MiniMap_C::CanvasPanel_Shape' has a wrong offset!");
static_assert(offsetof(UWBP_MiniMap_C, RetainerBox_0) == 0x000300, "Member 'UWBP_MiniMap_C::RetainerBox_0' has a wrong offset!");
static_assert(offsetof(UWBP_MiniMap_C, RetainerBox_1) == 0x000308, "Member 'UWBP_MiniMap_C::RetainerBox_1' has a wrong offset!");
static_assert(offsetof(UWBP_MiniMap_C, WBP_FollowMapHud) == 0x000310, "Member 'UWBP_MiniMap_C::WBP_FollowMapHud' has a wrong offset!");
static_assert(offsetof(UWBP_MiniMap_C, WBP_FollowMapHud_HighLayer) == 0x000318, "Member 'UWBP_MiniMap_C::WBP_FollowMapHud_HighLayer' has a wrong offset!");
static_assert(offsetof(UWBP_MiniMap_C, WBP_MapHud) == 0x000320, "Member 'UWBP_MiniMap_C::WBP_MapHud' has a wrong offset!");
static_assert(offsetof(UWBP_MiniMap_C, RenderTargetMap) == 0x000328, "Member 'UWBP_MiniMap_C::RenderTargetMap' has a wrong offset!");
static_assert(offsetof(UWBP_MiniMap_C, RenderTargetFollow) == 0x000330, "Member 'UWBP_MiniMap_C::RenderTargetFollow' has a wrong offset!");
static_assert(offsetof(UWBP_MiniMap_C, CachedBrush) == 0x000340, "Member 'UWBP_MiniMap_C::CachedBrush' has a wrong offset!");
static_assert(offsetof(UWBP_MiniMap_C, CachedMat) == 0x000410, "Member 'UWBP_MiniMap_C::CachedMat' has a wrong offset!");

}

