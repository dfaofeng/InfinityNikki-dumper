#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AbilityBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "X6Game_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AbilityBase.BP_AbilityBase_C
// 0x0040 (0x00E8 - 0x00A8)
class UBP_AbilityBase_C : public UX6ActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTexture2D*                             Icon;                                              // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        cd;                                                // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GroupID;                                           // 0x00C0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   AbilityName;                                       // 0x00C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   AbilityDescription;                                // 0x00D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveBeginPlay();
	void GetGroupID(int32* GroupID_0);
	void GetAbilityIcon(class UTexture2D** Icon_0);
	void GetAbilityCD(double* cd_0);
	void ExecuteUbergraph_BP_AbilityBase(int32 EntryPoint);

	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AbilityBase_C">();
	}
	static class UBP_AbilityBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AbilityBase_C>();
	}
};
static_assert(alignof(UBP_AbilityBase_C) == 0x000008, "Wrong alignment on UBP_AbilityBase_C");
static_assert(sizeof(UBP_AbilityBase_C) == 0x0000E8, "Wrong size on UBP_AbilityBase_C");
static_assert(offsetof(UBP_AbilityBase_C, UberGraphFrame) == 0x0000A8, "Member 'UBP_AbilityBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_AbilityBase_C, Icon) == 0x0000B0, "Member 'UBP_AbilityBase_C::Icon' has a wrong offset!");
static_assert(offsetof(UBP_AbilityBase_C, cd) == 0x0000B8, "Member 'UBP_AbilityBase_C::cd' has a wrong offset!");
static_assert(offsetof(UBP_AbilityBase_C, GroupID) == 0x0000C0, "Member 'UBP_AbilityBase_C::GroupID' has a wrong offset!");
static_assert(offsetof(UBP_AbilityBase_C, AbilityName) == 0x0000C8, "Member 'UBP_AbilityBase_C::AbilityName' has a wrong offset!");
static_assert(offsetof(UBP_AbilityBase_C, AbilityDescription) == 0x0000D8, "Member 'UBP_AbilityBase_C::AbilityDescription' has a wrong offset!");

}

