#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SignificanceManager

#include "Basic.hpp"


namespace SDK::Params
{

// Function SignificanceManager.SignificanceUserWidget.BP_OnChangeRPF
// 0x0004 (0x0004 - 0x0000)
struct SignificanceUserWidget_BP_OnChangeRPF final
{
public:
	int32                                         newRPF;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SignificanceUserWidget_BP_OnChangeRPF) == 0x000004, "Wrong alignment on SignificanceUserWidget_BP_OnChangeRPF");
static_assert(sizeof(SignificanceUserWidget_BP_OnChangeRPF) == 0x000004, "Wrong size on SignificanceUserWidget_BP_OnChangeRPF");
static_assert(offsetof(SignificanceUserWidget_BP_OnChangeRPF, newRPF) == 0x000000, "Member 'SignificanceUserWidget_BP_OnChangeRPF::newRPF' has a wrong offset!");

// Function SignificanceManager.SignificanceUserWidget.BP_OnRegisterActor
// 0x0010 (0x0010 - 0x0000)
struct SignificanceUserWidget_BP_OnRegisterActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Significance;                                      // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OtherActor;                                        // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SignificanceUserWidget_BP_OnRegisterActor) == 0x000008, "Wrong alignment on SignificanceUserWidget_BP_OnRegisterActor");
static_assert(sizeof(SignificanceUserWidget_BP_OnRegisterActor) == 0x000010, "Wrong size on SignificanceUserWidget_BP_OnRegisterActor");
static_assert(offsetof(SignificanceUserWidget_BP_OnRegisterActor, Actor) == 0x000000, "Member 'SignificanceUserWidget_BP_OnRegisterActor::Actor' has a wrong offset!");
static_assert(offsetof(SignificanceUserWidget_BP_OnRegisterActor, Significance) == 0x000008, "Member 'SignificanceUserWidget_BP_OnRegisterActor::Significance' has a wrong offset!");
static_assert(offsetof(SignificanceUserWidget_BP_OnRegisterActor, OtherActor) == 0x00000C, "Member 'SignificanceUserWidget_BP_OnRegisterActor::OtherActor' has a wrong offset!");

// Function SignificanceManager.SignificanceUserWidget.BP_OnSignificanceChangeDramatically
// 0x0010 (0x0010 - 0x0000)
struct SignificanceUserWidget_BP_OnSignificanceChangeDramatically final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Significance;                                      // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SignificanceUserWidget_BP_OnSignificanceChangeDramatically) == 0x000008, "Wrong alignment on SignificanceUserWidget_BP_OnSignificanceChangeDramatically");
static_assert(sizeof(SignificanceUserWidget_BP_OnSignificanceChangeDramatically) == 0x000010, "Wrong size on SignificanceUserWidget_BP_OnSignificanceChangeDramatically");
static_assert(offsetof(SignificanceUserWidget_BP_OnSignificanceChangeDramatically, Actor) == 0x000000, "Member 'SignificanceUserWidget_BP_OnSignificanceChangeDramatically::Actor' has a wrong offset!");
static_assert(offsetof(SignificanceUserWidget_BP_OnSignificanceChangeDramatically, Significance) == 0x000008, "Member 'SignificanceUserWidget_BP_OnSignificanceChangeDramatically::Significance' has a wrong offset!");

// Function SignificanceManager.SignificanceUserWidget.BP_OnUnRegisterActor
// 0x0008 (0x0008 - 0x0000)
struct SignificanceUserWidget_BP_OnUnRegisterActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SignificanceUserWidget_BP_OnUnRegisterActor) == 0x000008, "Wrong alignment on SignificanceUserWidget_BP_OnUnRegisterActor");
static_assert(sizeof(SignificanceUserWidget_BP_OnUnRegisterActor) == 0x000008, "Wrong size on SignificanceUserWidget_BP_OnUnRegisterActor");
static_assert(offsetof(SignificanceUserWidget_BP_OnUnRegisterActor, Actor) == 0x000000, "Member 'SignificanceUserWidget_BP_OnUnRegisterActor::Actor' has a wrong offset!");

// Function SignificanceManager.SignificanceUserWidget.GetCameraYaw
// 0x0004 (0x0004 - 0x0000)
struct SignificanceUserWidget_GetCameraYaw final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SignificanceUserWidget_GetCameraYaw) == 0x000004, "Wrong alignment on SignificanceUserWidget_GetCameraYaw");
static_assert(sizeof(SignificanceUserWidget_GetCameraYaw) == 0x000004, "Wrong size on SignificanceUserWidget_GetCameraYaw");
static_assert(offsetof(SignificanceUserWidget_GetCameraYaw, ReturnValue) == 0x000000, "Member 'SignificanceUserWidget_GetCameraYaw::ReturnValue' has a wrong offset!");

// Function SignificanceManager.SignificanceUserWidget.GetComponentsTickCount
// 0x0010 (0x0010 - 0x0000)
struct SignificanceUserWidget_GetComponentsTickCount final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SignificanceUserWidget_GetComponentsTickCount) == 0x000008, "Wrong alignment on SignificanceUserWidget_GetComponentsTickCount");
static_assert(sizeof(SignificanceUserWidget_GetComponentsTickCount) == 0x000010, "Wrong size on SignificanceUserWidget_GetComponentsTickCount");
static_assert(offsetof(SignificanceUserWidget_GetComponentsTickCount, Actor) == 0x000000, "Member 'SignificanceUserWidget_GetComponentsTickCount::Actor' has a wrong offset!");
static_assert(offsetof(SignificanceUserWidget_GetComponentsTickCount, ReturnValue) == 0x000008, "Member 'SignificanceUserWidget_GetComponentsTickCount::ReturnValue' has a wrong offset!");

// Function SignificanceManager.SignificanceUserWidget.GetLastTickGameTime
// 0x0010 (0x0010 - 0x0000)
struct SignificanceUserWidget_GetLastTickGameTime final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SignificanceUserWidget_GetLastTickGameTime) == 0x000008, "Wrong alignment on SignificanceUserWidget_GetLastTickGameTime");
static_assert(sizeof(SignificanceUserWidget_GetLastTickGameTime) == 0x000010, "Wrong size on SignificanceUserWidget_GetLastTickGameTime");
static_assert(offsetof(SignificanceUserWidget_GetLastTickGameTime, Actor) == 0x000000, "Member 'SignificanceUserWidget_GetLastTickGameTime::Actor' has a wrong offset!");
static_assert(offsetof(SignificanceUserWidget_GetLastTickGameTime, ReturnValue) == 0x000008, "Member 'SignificanceUserWidget_GetLastTickGameTime::ReturnValue' has a wrong offset!");

// Function SignificanceManager.SignificanceUserWidget.GetLife
// 0x0010 (0x0010 - 0x0000)
struct SignificanceUserWidget_GetLife final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SignificanceUserWidget_GetLife) == 0x000008, "Wrong alignment on SignificanceUserWidget_GetLife");
static_assert(sizeof(SignificanceUserWidget_GetLife) == 0x000010, "Wrong size on SignificanceUserWidget_GetLife");
static_assert(offsetof(SignificanceUserWidget_GetLife, Actor) == 0x000000, "Member 'SignificanceUserWidget_GetLife::Actor' has a wrong offset!");
static_assert(offsetof(SignificanceUserWidget_GetLife, ReturnValue) == 0x000008, "Member 'SignificanceUserWidget_GetLife::ReturnValue' has a wrong offset!");

// Function SignificanceManager.SignificanceUserWidget.GetSignificance
// 0x0010 (0x0010 - 0x0000)
struct SignificanceUserWidget_GetSignificance final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SignificanceUserWidget_GetSignificance) == 0x000008, "Wrong alignment on SignificanceUserWidget_GetSignificance");
static_assert(sizeof(SignificanceUserWidget_GetSignificance) == 0x000010, "Wrong size on SignificanceUserWidget_GetSignificance");
static_assert(offsetof(SignificanceUserWidget_GetSignificance, Actor) == 0x000000, "Member 'SignificanceUserWidget_GetSignificance::Actor' has a wrong offset!");
static_assert(offsetof(SignificanceUserWidget_GetSignificance, ReturnValue) == 0x000008, "Member 'SignificanceUserWidget_GetSignificance::ReturnValue' has a wrong offset!");

// Function SignificanceManager.SignificanceUserWidget.GetSignificanceFar
// 0x0004 (0x0004 - 0x0000)
struct SignificanceUserWidget_GetSignificanceFar final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SignificanceUserWidget_GetSignificanceFar) == 0x000004, "Wrong alignment on SignificanceUserWidget_GetSignificanceFar");
static_assert(sizeof(SignificanceUserWidget_GetSignificanceFar) == 0x000004, "Wrong size on SignificanceUserWidget_GetSignificanceFar");
static_assert(offsetof(SignificanceUserWidget_GetSignificanceFar, ReturnValue) == 0x000000, "Member 'SignificanceUserWidget_GetSignificanceFar::ReturnValue' has a wrong offset!");

// Function SignificanceManager.SignificanceUserWidget.GetSignificanceFurther
// 0x0004 (0x0004 - 0x0000)
struct SignificanceUserWidget_GetSignificanceFurther final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SignificanceUserWidget_GetSignificanceFurther) == 0x000004, "Wrong alignment on SignificanceUserWidget_GetSignificanceFurther");
static_assert(sizeof(SignificanceUserWidget_GetSignificanceFurther) == 0x000004, "Wrong size on SignificanceUserWidget_GetSignificanceFurther");
static_assert(offsetof(SignificanceUserWidget_GetSignificanceFurther, ReturnValue) == 0x000000, "Member 'SignificanceUserWidget_GetSignificanceFurther::ReturnValue' has a wrong offset!");

// Function SignificanceManager.SignificanceUserWidget.GetSignificanceMedium
// 0x0004 (0x0004 - 0x0000)
struct SignificanceUserWidget_GetSignificanceMedium final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SignificanceUserWidget_GetSignificanceMedium) == 0x000004, "Wrong alignment on SignificanceUserWidget_GetSignificanceMedium");
static_assert(sizeof(SignificanceUserWidget_GetSignificanceMedium) == 0x000004, "Wrong size on SignificanceUserWidget_GetSignificanceMedium");
static_assert(offsetof(SignificanceUserWidget_GetSignificanceMedium, ReturnValue) == 0x000000, "Member 'SignificanceUserWidget_GetSignificanceMedium::ReturnValue' has a wrong offset!");

// Function SignificanceManager.SignificanceUserWidget.GetSignificanceNear
// 0x0004 (0x0004 - 0x0000)
struct SignificanceUserWidget_GetSignificanceNear final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SignificanceUserWidget_GetSignificanceNear) == 0x000004, "Wrong alignment on SignificanceUserWidget_GetSignificanceNear");
static_assert(sizeof(SignificanceUserWidget_GetSignificanceNear) == 0x000004, "Wrong size on SignificanceUserWidget_GetSignificanceNear");
static_assert(offsetof(SignificanceUserWidget_GetSignificanceNear, ReturnValue) == 0x000000, "Member 'SignificanceUserWidget_GetSignificanceNear::ReturnValue' has a wrong offset!");

// Function SignificanceManager.SignificanceUserWidget.IsSignificanceSystem
// 0x0010 (0x0010 - 0x0000)
struct SignificanceUserWidget_IsSignificanceSystem final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SignificanceUserWidget_IsSignificanceSystem) == 0x000008, "Wrong alignment on SignificanceUserWidget_IsSignificanceSystem");
static_assert(sizeof(SignificanceUserWidget_IsSignificanceSystem) == 0x000010, "Wrong size on SignificanceUserWidget_IsSignificanceSystem");
static_assert(offsetof(SignificanceUserWidget_IsSignificanceSystem, Actor) == 0x000000, "Member 'SignificanceUserWidget_IsSignificanceSystem::Actor' has a wrong offset!");
static_assert(offsetof(SignificanceUserWidget_IsSignificanceSystem, ReturnValue) == 0x000008, "Member 'SignificanceUserWidget_IsSignificanceSystem::ReturnValue' has a wrong offset!");

// Function SignificanceManager.SignificanceUserWidget.OnRegisterActor
// 0x0010 (0x0010 - 0x0000)
struct SignificanceUserWidget_OnRegisterActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OtherActor;                                        // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SignificanceUserWidget_OnRegisterActor) == 0x000008, "Wrong alignment on SignificanceUserWidget_OnRegisterActor");
static_assert(sizeof(SignificanceUserWidget_OnRegisterActor) == 0x000010, "Wrong size on SignificanceUserWidget_OnRegisterActor");
static_assert(offsetof(SignificanceUserWidget_OnRegisterActor, Actor) == 0x000000, "Member 'SignificanceUserWidget_OnRegisterActor::Actor' has a wrong offset!");
static_assert(offsetof(SignificanceUserWidget_OnRegisterActor, OtherActor) == 0x000008, "Member 'SignificanceUserWidget_OnRegisterActor::OtherActor' has a wrong offset!");

// Function SignificanceManager.SignificanceUserWidget.OnUnRegisterActor
// 0x0008 (0x0008 - 0x0000)
struct SignificanceUserWidget_OnUnRegisterActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SignificanceUserWidget_OnUnRegisterActor) == 0x000008, "Wrong alignment on SignificanceUserWidget_OnUnRegisterActor");
static_assert(sizeof(SignificanceUserWidget_OnUnRegisterActor) == 0x000008, "Wrong size on SignificanceUserWidget_OnUnRegisterActor");
static_assert(offsetof(SignificanceUserWidget_OnUnRegisterActor, Actor) == 0x000000, "Member 'SignificanceUserWidget_OnUnRegisterActor::Actor' has a wrong offset!");

// Function SignificanceManager.SignificanceUserWidget.SetCamera
// 0x0008 (0x0008 - 0x0000)
struct SignificanceUserWidget_SetCamera final
{
public:
	class USceneComponent*                        inCamera;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SignificanceUserWidget_SetCamera) == 0x000008, "Wrong alignment on SignificanceUserWidget_SetCamera");
static_assert(sizeof(SignificanceUserWidget_SetCamera) == 0x000008, "Wrong size on SignificanceUserWidget_SetCamera");
static_assert(offsetof(SignificanceUserWidget_SetCamera, inCamera) == 0x000000, "Member 'SignificanceUserWidget_SetCamera::inCamera' has a wrong offset!");

}

