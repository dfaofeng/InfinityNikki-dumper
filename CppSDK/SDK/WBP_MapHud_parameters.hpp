#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MapHud

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_MapHud.WBP_MapHud_C.AddFollowMapHud
// 0x0018 (0x0018 - 0x0000)
struct WBP_MapHud_C_AddFollowMapHud final
{
public:
	TScriptInterface<class IBP_MapFollower_C>     HUD;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_AddFollowMapHud) == 0x000008, "Wrong alignment on WBP_MapHud_C_AddFollowMapHud");
static_assert(sizeof(WBP_MapHud_C_AddFollowMapHud) == 0x000018, "Wrong size on WBP_MapHud_C_AddFollowMapHud");
static_assert(offsetof(WBP_MapHud_C_AddFollowMapHud, HUD) == 0x000000, "Member 'WBP_MapHud_C_AddFollowMapHud::HUD' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_AddFollowMapHud, CallFunc_Array_AddUnique_ReturnValue) == 0x000010, "Member 'WBP_MapHud_C_AddFollowMapHud::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.BeginInertiaMove
// 0x0040 (0x0040 - 0x0000)
struct WBP_MapHud_C_BeginInertiaMove final
{
public:
	struct FVector2D                              inertiaForce_0;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Normal2D_ReturnValue;                     // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Distance2D_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_BeginInertiaMove) == 0x000008, "Wrong alignment on WBP_MapHud_C_BeginInertiaMove");
static_assert(sizeof(WBP_MapHud_C_BeginInertiaMove) == 0x000040, "Wrong size on WBP_MapHud_C_BeginInertiaMove");
static_assert(offsetof(WBP_MapHud_C_BeginInertiaMove, inertiaForce_0) == 0x000000, "Member 'WBP_MapHud_C_BeginInertiaMove::inertiaForce_0' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_BeginInertiaMove, CallFunc_Normal2D_ReturnValue) == 0x000010, "Member 'WBP_MapHud_C_BeginInertiaMove::CallFunc_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_BeginInertiaMove, CallFunc_Distance2D_ReturnValue) == 0x000020, "Member 'WBP_MapHud_C_BeginInertiaMove::CallFunc_Distance2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_BeginInertiaMove, CallFunc_FMin_ReturnValue) == 0x000028, "Member 'WBP_MapHud_C_BeginInertiaMove::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_BeginInertiaMove, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000030, "Member 'WBP_MapHud_C_BeginInertiaMove::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.CalculateTime
// 0x0010 (0x0010 - 0x0000)
struct WBP_MapHud_C_CalculateTime final
{
public:
	double                                        CallFunc_GetRealTimeSeconds_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_CalculateTime) == 0x000008, "Wrong alignment on WBP_MapHud_C_CalculateTime");
static_assert(sizeof(WBP_MapHud_C_CalculateTime) == 0x000010, "Wrong size on WBP_MapHud_C_CalculateTime");
static_assert(offsetof(WBP_MapHud_C_CalculateTime, CallFunc_GetRealTimeSeconds_ReturnValue) == 0x000000, "Member 'WBP_MapHud_C_CalculateTime::CallFunc_GetRealTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_CalculateTime, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000008, "Member 'WBP_MapHud_C_CalculateTime::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.CheckIfClick
// 0x00F8 (0x00F8 - 0x0000)
struct WBP_MapHud_C_CheckIfClick final
{
public:
	struct FPointerEvent                          Event;                                             // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FKey                                   CallFunc_PointerEvent_GetEffectingButton_ReturnValue; // 0x0078(0x0018)(HasGetValueTypeHash)
	struct FVector2D                              CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue; // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x00A0(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_ConvertScreenPosToWidgetPos_widgetPos;    // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_NT_ConvertWindowPosToMapPos_ReturnValue;  // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_CheckIfClick) == 0x000008, "Wrong alignment on WBP_MapHud_C_CheckIfClick");
static_assert(sizeof(WBP_MapHud_C_CheckIfClick) == 0x0000F8, "Wrong size on WBP_MapHud_C_CheckIfClick");
static_assert(offsetof(WBP_MapHud_C_CheckIfClick, Event) == 0x000000, "Member 'WBP_MapHud_C_CheckIfClick::Event' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_CheckIfClick, CallFunc_PointerEvent_GetEffectingButton_ReturnValue) == 0x000078, "Member 'WBP_MapHud_C_CheckIfClick::CallFunc_PointerEvent_GetEffectingButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_CheckIfClick, CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue) == 0x000090, "Member 'WBP_MapHud_C_CheckIfClick::CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_CheckIfClick, CallFunc_GetCachedGeometry_ReturnValue) == 0x0000A0, "Member 'WBP_MapHud_C_CheckIfClick::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_CheckIfClick, CallFunc_ConvertScreenPosToWidgetPos_widgetPos) == 0x0000D8, "Member 'WBP_MapHud_C_CheckIfClick::CallFunc_ConvertScreenPosToWidgetPos_widgetPos' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_CheckIfClick, CallFunc_NT_ConvertWindowPosToMapPos_ReturnValue) == 0x0000E8, "Member 'WBP_MapHud_C_CheckIfClick::CallFunc_NT_ConvertWindowPosToMapPos_ReturnValue' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.ConstraintMoveRootPos
// 0x0050 (0x0050 - 0x0000)
struct WBP_MapHud_C_ConstraintMoveRootPos final
{
public:
	struct FVector2D                              originPos;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Pos;                                               // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_ConstraintMoveRootPos) == 0x000008, "Wrong alignment on WBP_MapHud_C_ConstraintMoveRootPos");
static_assert(sizeof(WBP_MapHud_C_ConstraintMoveRootPos) == 0x000050, "Wrong size on WBP_MapHud_C_ConstraintMoveRootPos");
static_assert(offsetof(WBP_MapHud_C_ConstraintMoveRootPos, originPos) == 0x000000, "Member 'WBP_MapHud_C_ConstraintMoveRootPos::originPos' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ConstraintMoveRootPos, Pos) == 0x000010, "Member 'WBP_MapHud_C_ConstraintMoveRootPos::Pos' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ConstraintMoveRootPos, CallFunc_BreakVector2D_X) == 0x000020, "Member 'WBP_MapHud_C_ConstraintMoveRootPos::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ConstraintMoveRootPos, CallFunc_BreakVector2D_Y) == 0x000028, "Member 'WBP_MapHud_C_ConstraintMoveRootPos::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ConstraintMoveRootPos, CallFunc_FClamp_ReturnValue) == 0x000030, "Member 'WBP_MapHud_C_ConstraintMoveRootPos::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ConstraintMoveRootPos, CallFunc_FClamp_ReturnValue_1) == 0x000038, "Member 'WBP_MapHud_C_ConstraintMoveRootPos::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ConstraintMoveRootPos, CallFunc_MakeVector2D_ReturnValue) == 0x000040, "Member 'WBP_MapHud_C_ConstraintMoveRootPos::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.ConvertMapPosToWindowPos
// 0x0030 (0x0030 - 0x0000)
struct WBP_MapHud_C_ConvertMapPosToWindowPos final
{
public:
	struct FVector2D                              mapPos;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              windowPos;                                         // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_NT_ConvertMapPosToWindowPos_ReturnValue;  // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_ConvertMapPosToWindowPos) == 0x000008, "Wrong alignment on WBP_MapHud_C_ConvertMapPosToWindowPos");
static_assert(sizeof(WBP_MapHud_C_ConvertMapPosToWindowPos) == 0x000030, "Wrong size on WBP_MapHud_C_ConvertMapPosToWindowPos");
static_assert(offsetof(WBP_MapHud_C_ConvertMapPosToWindowPos, mapPos) == 0x000000, "Member 'WBP_MapHud_C_ConvertMapPosToWindowPos::mapPos' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ConvertMapPosToWindowPos, windowPos) == 0x000010, "Member 'WBP_MapHud_C_ConvertMapPosToWindowPos::windowPos' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ConvertMapPosToWindowPos, CallFunc_NT_ConvertMapPosToWindowPos_ReturnValue) == 0x000020, "Member 'WBP_MapHud_C_ConvertMapPosToWindowPos::CallFunc_NT_ConvertMapPosToWindowPos_ReturnValue' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.ConvertScreenPosToWidgetPos
// 0x0068 (0x0068 - 0x0000)
struct WBP_MapHud_C_ConvertScreenPosToWidgetPos final
{
public:
	struct FVector2D                              screenPos;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              widgetGeometry;                                    // 0x0010(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FVector2D                              widgetPos;                                         // 0x0048(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_AbsoluteToLocal_ReturnValue;              // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_ConvertScreenPosToWidgetPos) == 0x000008, "Wrong alignment on WBP_MapHud_C_ConvertScreenPosToWidgetPos");
static_assert(sizeof(WBP_MapHud_C_ConvertScreenPosToWidgetPos) == 0x000068, "Wrong size on WBP_MapHud_C_ConvertScreenPosToWidgetPos");
static_assert(offsetof(WBP_MapHud_C_ConvertScreenPosToWidgetPos, screenPos) == 0x000000, "Member 'WBP_MapHud_C_ConvertScreenPosToWidgetPos::screenPos' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ConvertScreenPosToWidgetPos, widgetGeometry) == 0x000010, "Member 'WBP_MapHud_C_ConvertScreenPosToWidgetPos::widgetGeometry' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ConvertScreenPosToWidgetPos, widgetPos) == 0x000048, "Member 'WBP_MapHud_C_ConvertScreenPosToWidgetPos::widgetPos' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ConvertScreenPosToWidgetPos, CallFunc_AbsoluteToLocal_ReturnValue) == 0x000058, "Member 'WBP_MapHud_C_ConvertScreenPosToWidgetPos::CallFunc_AbsoluteToLocal_ReturnValue' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.ConvertWidgetPosToScreenPos
// 0x0068 (0x0068 - 0x0000)
struct WBP_MapHud_C_ConvertWidgetPosToScreenPos final
{
public:
	struct FGeometry                              widgetGeometry;                                    // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FVector2D                              widgetPos;                                         // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              screenPos;                                         // 0x0048(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_LocalToAbsolute_ReturnValue;              // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_ConvertWidgetPosToScreenPos) == 0x000008, "Wrong alignment on WBP_MapHud_C_ConvertWidgetPosToScreenPos");
static_assert(sizeof(WBP_MapHud_C_ConvertWidgetPosToScreenPos) == 0x000068, "Wrong size on WBP_MapHud_C_ConvertWidgetPosToScreenPos");
static_assert(offsetof(WBP_MapHud_C_ConvertWidgetPosToScreenPos, widgetGeometry) == 0x000000, "Member 'WBP_MapHud_C_ConvertWidgetPosToScreenPos::widgetGeometry' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ConvertWidgetPosToScreenPos, widgetPos) == 0x000038, "Member 'WBP_MapHud_C_ConvertWidgetPosToScreenPos::widgetPos' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ConvertWidgetPosToScreenPos, screenPos) == 0x000048, "Member 'WBP_MapHud_C_ConvertWidgetPosToScreenPos::screenPos' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ConvertWidgetPosToScreenPos, CallFunc_LocalToAbsolute_ReturnValue) == 0x000058, "Member 'WBP_MapHud_C_ConvertWidgetPosToScreenPos::CallFunc_LocalToAbsolute_ReturnValue' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.ConvertWindowPosToMapPos
// 0x0030 (0x0030 - 0x0000)
struct WBP_MapHud_C_ConvertWindowPosToMapPos final
{
public:
	struct FVector2D                              windowPos;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              mapPos;                                            // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_NT_ConvertWindowPosToMapPos_ReturnValue;  // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_ConvertWindowPosToMapPos) == 0x000008, "Wrong alignment on WBP_MapHud_C_ConvertWindowPosToMapPos");
static_assert(sizeof(WBP_MapHud_C_ConvertWindowPosToMapPos) == 0x000030, "Wrong size on WBP_MapHud_C_ConvertWindowPosToMapPos");
static_assert(offsetof(WBP_MapHud_C_ConvertWindowPosToMapPos, windowPos) == 0x000000, "Member 'WBP_MapHud_C_ConvertWindowPosToMapPos::windowPos' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ConvertWindowPosToMapPos, mapPos) == 0x000010, "Member 'WBP_MapHud_C_ConvertWindowPosToMapPos::mapPos' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ConvertWindowPosToMapPos, CallFunc_NT_ConvertWindowPosToMapPos_ReturnValue) == 0x000020, "Member 'WBP_MapHud_C_ConvertWindowPosToMapPos::CallFunc_NT_ConvertWindowPosToMapPos_ReturnValue' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.EndDrag
// 0x00C8 (0x00C8 - 0x0000)
struct WBP_MapHud_C_EndDrag final
{
public:
	double                                        totalDistance;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Normal2D_ReturnValue;                     // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Array_Get_Item;                           // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DistanceSquared2D_ReturnValue;            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_Vector2dToString_ReturnValue;        // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_EndDrag) == 0x000008, "Wrong alignment on WBP_MapHud_C_EndDrag");
static_assert(sizeof(WBP_MapHud_C_EndDrag) == 0x0000C8, "Wrong size on WBP_MapHud_C_EndDrag");
static_assert(offsetof(WBP_MapHud_C_EndDrag, totalDistance) == 0x000000, "Member 'WBP_MapHud_C_EndDrag::totalDistance' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_EndDrag, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_MapHud_C_EndDrag::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_EndDrag, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000010, "Member 'WBP_MapHud_C_EndDrag::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_EndDrag, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'WBP_MapHud_C_EndDrag::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_EndDrag, CallFunc_Greater_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_MapHud_C_EndDrag::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_EndDrag, CallFunc_Normal2D_ReturnValue) == 0x000020, "Member 'WBP_MapHud_C_EndDrag::CallFunc_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_EndDrag, CallFunc_Array_Length_ReturnValue_1) == 0x000030, "Member 'WBP_MapHud_C_EndDrag::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_EndDrag, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000038, "Member 'WBP_MapHud_C_EndDrag::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_EndDrag, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'WBP_MapHud_C_EndDrag::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_EndDrag, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'WBP_MapHud_C_EndDrag::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_EndDrag, CallFunc_Array_Get_Item) == 0x000050, "Member 'WBP_MapHud_C_EndDrag::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_EndDrag, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000060, "Member 'WBP_MapHud_C_EndDrag::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_EndDrag, CallFunc_DistanceSquared2D_ReturnValue) == 0x000070, "Member 'WBP_MapHud_C_EndDrag::CallFunc_DistanceSquared2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_EndDrag, CallFunc_Conv_Vector2dToString_ReturnValue) == 0x000078, "Member 'WBP_MapHud_C_EndDrag::CallFunc_Conv_Vector2dToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_EndDrag, CallFunc_Array_Length_ReturnValue_2) == 0x000088, "Member 'WBP_MapHud_C_EndDrag::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_EndDrag, CallFunc_Array_Length_ReturnValue_3) == 0x00008C, "Member 'WBP_MapHud_C_EndDrag::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_EndDrag, Temp_int_Loop_Counter_Variable) == 0x000090, "Member 'WBP_MapHud_C_EndDrag::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_EndDrag, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000098, "Member 'WBP_MapHud_C_EndDrag::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_EndDrag, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000A0, "Member 'WBP_MapHud_C_EndDrag::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_EndDrag, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'WBP_MapHud_C_EndDrag::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_EndDrag, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000B0, "Member 'WBP_MapHud_C_EndDrag::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_EndDrag, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'WBP_MapHud_C_EndDrag::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_EndDrag, CallFunc_Add_IntInt_ReturnValue) == 0x0000C0, "Member 'WBP_MapHud_C_EndDrag::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.ExecuteUbergraph_WBP_MapHud
// 0x00C8 (0x00C8 - 0x0000)
struct WBP_MapHud_C_ExecuteUbergraph_WBP_MapHud final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0038(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B[0x5];                                       // 0x007B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetRealTimeSeconds_ReturnValue;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0090(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UX6GameInstance*                        CallFunc_GetX6GameInstance_ReturnValue;            // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UX6InputProcessorHelper*                CallFunc_GetInputProcessorHelper_ReturnValue;      // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FPointerEvent& MouseEvent)> K2Node_CreateDelegate_OutputDelegate;    // 0x00B8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_ExecuteUbergraph_WBP_MapHud) == 0x000008, "Wrong alignment on WBP_MapHud_C_ExecuteUbergraph_WBP_MapHud");
static_assert(sizeof(WBP_MapHud_C_ExecuteUbergraph_WBP_MapHud) == 0x0000C8, "Wrong size on WBP_MapHud_C_ExecuteUbergraph_WBP_MapHud");
static_assert(offsetof(WBP_MapHud_C_ExecuteUbergraph_WBP_MapHud, EntryPoint) == 0x000000, "Member 'WBP_MapHud_C_ExecuteUbergraph_WBP_MapHud::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ExecuteUbergraph_WBP_MapHud, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000008, "Member 'WBP_MapHud_C_ExecuteUbergraph_WBP_MapHud::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ExecuteUbergraph_WBP_MapHud, CallFunc_GetPosition_ReturnValue) == 0x000010, "Member 'WBP_MapHud_C_ExecuteUbergraph_WBP_MapHud::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ExecuteUbergraph_WBP_MapHud, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000020, "Member 'WBP_MapHud_C_ExecuteUbergraph_WBP_MapHud::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ExecuteUbergraph_WBP_MapHud, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'WBP_MapHud_C_ExecuteUbergraph_WBP_MapHud::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ExecuteUbergraph_WBP_MapHud, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000034, "Member 'WBP_MapHud_C_ExecuteUbergraph_WBP_MapHud::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ExecuteUbergraph_WBP_MapHud, K2Node_Event_MyGeometry) == 0x000038, "Member 'WBP_MapHud_C_ExecuteUbergraph_WBP_MapHud::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ExecuteUbergraph_WBP_MapHud, K2Node_Event_InDeltaTime) == 0x000070, "Member 'WBP_MapHud_C_ExecuteUbergraph_WBP_MapHud::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ExecuteUbergraph_WBP_MapHud, CallFunc_Array_Length_ReturnValue) == 0x000074, "Member 'WBP_MapHud_C_ExecuteUbergraph_WBP_MapHud::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ExecuteUbergraph_WBP_MapHud, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000078, "Member 'WBP_MapHud_C_ExecuteUbergraph_WBP_MapHud::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ExecuteUbergraph_WBP_MapHud, CallFunc_Not_PreBool_ReturnValue) == 0x000079, "Member 'WBP_MapHud_C_ExecuteUbergraph_WBP_MapHud::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ExecuteUbergraph_WBP_MapHud, CallFunc_BooleanAND_ReturnValue) == 0x00007A, "Member 'WBP_MapHud_C_ExecuteUbergraph_WBP_MapHud::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ExecuteUbergraph_WBP_MapHud, CallFunc_GetRealTimeSeconds_ReturnValue) == 0x000080, "Member 'WBP_MapHud_C_ExecuteUbergraph_WBP_MapHud::CallFunc_GetRealTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ExecuteUbergraph_WBP_MapHud, CallFunc_Not_PreBool_ReturnValue_1) == 0x000088, "Member 'WBP_MapHud_C_ExecuteUbergraph_WBP_MapHud::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ExecuteUbergraph_WBP_MapHud, CallFunc_BooleanOR_ReturnValue) == 0x000089, "Member 'WBP_MapHud_C_ExecuteUbergraph_WBP_MapHud::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ExecuteUbergraph_WBP_MapHud, Temp_struct_Variable) == 0x000090, "Member 'WBP_MapHud_C_ExecuteUbergraph_WBP_MapHud::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ExecuteUbergraph_WBP_MapHud, CallFunc_GetX6GameInstance_ReturnValue) == 0x0000A0, "Member 'WBP_MapHud_C_ExecuteUbergraph_WBP_MapHud::CallFunc_GetX6GameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ExecuteUbergraph_WBP_MapHud, CallFunc_Array_Add_ReturnValue) == 0x0000A8, "Member 'WBP_MapHud_C_ExecuteUbergraph_WBP_MapHud::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ExecuteUbergraph_WBP_MapHud, CallFunc_GetInputProcessorHelper_ReturnValue) == 0x0000B0, "Member 'WBP_MapHud_C_ExecuteUbergraph_WBP_MapHud::CallFunc_GetInputProcessorHelper_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ExecuteUbergraph_WBP_MapHud, K2Node_CreateDelegate_OutputDelegate) == 0x0000B8, "Member 'WBP_MapHud_C_ExecuteUbergraph_WBP_MapHud::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.GetIsDragging
// 0x0001 (0x0001 - 0x0000)
struct WBP_MapHud_C_GetIsDragging final
{
public:
	bool                                          isDragging_0;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_GetIsDragging) == 0x000001, "Wrong alignment on WBP_MapHud_C_GetIsDragging");
static_assert(sizeof(WBP_MapHud_C_GetIsDragging) == 0x000001, "Wrong size on WBP_MapHud_C_GetIsDragging");
static_assert(offsetof(WBP_MapHud_C_GetIsDragging, isDragging_0) == 0x000000, "Member 'WBP_MapHud_C_GetIsDragging::isDragging_0' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.GetMapPos
// 0x0040 (0x0040 - 0x0000)
struct WBP_MapHud_C_GetMapPos final
{
public:
	struct FVector2D                              Pos;                                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetWindowSize_size;                       // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_NT_ConvertWindowPosToMapPos_ReturnValue;  // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_GetMapPos) == 0x000008, "Wrong alignment on WBP_MapHud_C_GetMapPos");
static_assert(sizeof(WBP_MapHud_C_GetMapPos) == 0x000040, "Wrong size on WBP_MapHud_C_GetMapPos");
static_assert(offsetof(WBP_MapHud_C_GetMapPos, Pos) == 0x000000, "Member 'WBP_MapHud_C_GetMapPos::Pos' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_GetMapPos, CallFunc_GetWindowSize_size) == 0x000010, "Member 'WBP_MapHud_C_GetMapPos::CallFunc_GetWindowSize_size' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_GetMapPos, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000020, "Member 'WBP_MapHud_C_GetMapPos::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_GetMapPos, CallFunc_NT_ConvertWindowPosToMapPos_ReturnValue) == 0x000030, "Member 'WBP_MapHud_C_GetMapPos::CallFunc_NT_ConvertWindowPosToMapPos_ReturnValue' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.GetMapScale
// 0x0018 (0x0018 - 0x0000)
struct WBP_MapHud_C_GetMapScale final
{
public:
	double                                        Scale;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_GetMapScale) == 0x000008, "Wrong alignment on WBP_MapHud_C_GetMapScale");
static_assert(sizeof(WBP_MapHud_C_GetMapScale) == 0x000018, "Wrong size on WBP_MapHud_C_GetMapScale");
static_assert(offsetof(WBP_MapHud_C_GetMapScale, Scale) == 0x000000, "Member 'WBP_MapHud_C_GetMapScale::Scale' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_GetMapScale, CallFunc_BreakVector2D_X) == 0x000008, "Member 'WBP_MapHud_C_GetMapScale::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_GetMapScale, CallFunc_BreakVector2D_Y) == 0x000010, "Member 'WBP_MapHud_C_GetMapScale::CallFunc_BreakVector2D_Y' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.GetMovePos
// 0x0028 (0x0028 - 0x0000)
struct WBP_MapHud_C_GetMovePos final
{
public:
	struct FVector2D                              Pos;                                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_GetMovePos) == 0x000008, "Wrong alignment on WBP_MapHud_C_GetMovePos");
static_assert(sizeof(WBP_MapHud_C_GetMovePos) == 0x000028, "Wrong size on WBP_MapHud_C_GetMovePos");
static_assert(offsetof(WBP_MapHud_C_GetMovePos, Pos) == 0x000000, "Member 'WBP_MapHud_C_GetMovePos::Pos' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_GetMovePos, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000010, "Member 'WBP_MapHud_C_GetMovePos::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_GetMovePos, CallFunc_GetPosition_ReturnValue) == 0x000018, "Member 'WBP_MapHud_C_GetMovePos::CallFunc_GetPosition_ReturnValue' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.GetWindowSize
// 0x0058 (0x0058 - 0x0000)
struct WBP_MapHud_C_GetWindowSize final
{
public:
	struct FVector2D                              Size;                                              // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0010(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_GetWindowSize) == 0x000008, "Wrong alignment on WBP_MapHud_C_GetWindowSize");
static_assert(sizeof(WBP_MapHud_C_GetWindowSize) == 0x000058, "Wrong size on WBP_MapHud_C_GetWindowSize");
static_assert(offsetof(WBP_MapHud_C_GetWindowSize, Size) == 0x000000, "Member 'WBP_MapHud_C_GetWindowSize::Size' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_GetWindowSize, CallFunc_GetCachedGeometry_ReturnValue) == 0x000010, "Member 'WBP_MapHud_C_GetWindowSize::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_GetWindowSize, CallFunc_GetLocalSize_ReturnValue) == 0x000048, "Member 'WBP_MapHud_C_GetWindowSize::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.HandleMouseButtonUp
// 0x0080 (0x0080 - 0x0000)
struct WBP_MapHud_C_HandleMouseButtonUp final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0078(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_HandleMouseButtonUp) == 0x000008, "Wrong alignment on WBP_MapHud_C_HandleMouseButtonUp");
static_assert(sizeof(WBP_MapHud_C_HandleMouseButtonUp) == 0x000080, "Wrong size on WBP_MapHud_C_HandleMouseButtonUp");
static_assert(offsetof(WBP_MapHud_C_HandleMouseButtonUp, MouseEvent) == 0x000000, "Member 'WBP_MapHud_C_HandleMouseButtonUp::MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_HandleMouseButtonUp, ReturnValue) == 0x000078, "Member 'WBP_MapHud_C_HandleMouseButtonUp::ReturnValue' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.HandleMouseMove
// 0x0170 (0x0170 - 0x0000)
struct WBP_MapHud_C_HandleMouseMove final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0078(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x007C(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_OnMouseMoveCustom_ReturnValue;            // 0x00B8(0x00B8)()
};
static_assert(alignof(WBP_MapHud_C_HandleMouseMove) == 0x000008, "Wrong alignment on WBP_MapHud_C_HandleMouseMove");
static_assert(sizeof(WBP_MapHud_C_HandleMouseMove) == 0x000170, "Wrong size on WBP_MapHud_C_HandleMouseMove");
static_assert(offsetof(WBP_MapHud_C_HandleMouseMove, MouseEvent) == 0x000000, "Member 'WBP_MapHud_C_HandleMouseMove::MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_HandleMouseMove, ReturnValue) == 0x000078, "Member 'WBP_MapHud_C_HandleMouseMove::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_HandleMouseMove, CallFunc_GetCachedGeometry_ReturnValue) == 0x00007C, "Member 'WBP_MapHud_C_HandleMouseMove::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_HandleMouseMove, CallFunc_OnMouseMoveCustom_ReturnValue) == 0x0000B8, "Member 'WBP_MapHud_C_HandleMouseMove::CallFunc_OnMouseMoveCustom_ReturnValue' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.HandlePinchRelease
// 0x0080 (0x0080 - 0x0000)
struct WBP_MapHud_C_HandlePinchRelease final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0078(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_HandlePinchRelease) == 0x000008, "Wrong alignment on WBP_MapHud_C_HandlePinchRelease");
static_assert(sizeof(WBP_MapHud_C_HandlePinchRelease) == 0x000080, "Wrong size on WBP_MapHud_C_HandlePinchRelease");
static_assert(offsetof(WBP_MapHud_C_HandlePinchRelease, MouseEvent) == 0x000000, "Member 'WBP_MapHud_C_HandlePinchRelease::MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_HandlePinchRelease, ReturnValue) == 0x000078, "Member 'WBP_MapHud_C_HandlePinchRelease::ReturnValue' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.InitPinch
// 0x0038 (0x0038 - 0x0000)
struct WBP_MapHud_C_InitPinch final
{
public:
	TDelegate<void(const struct FPointerEvent& MouseEvent)> K2Node_CreateDelegate_OutputDelegate;    // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UX6GameInstance*                        CallFunc_GetX6GameInstance_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UX6InputProcessorHelper*                CallFunc_GetInputProcessorHelper_ReturnValue;      // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_UIPinchHelper_C*                    CallFunc_SpawnObject_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(double ScaleStep)>             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_InitPinch) == 0x000008, "Wrong alignment on WBP_MapHud_C_InitPinch");
static_assert(sizeof(WBP_MapHud_C_InitPinch) == 0x000038, "Wrong size on WBP_MapHud_C_InitPinch");
static_assert(offsetof(WBP_MapHud_C_InitPinch, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WBP_MapHud_C_InitPinch::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_InitPinch, CallFunc_GetX6GameInstance_ReturnValue) == 0x000010, "Member 'WBP_MapHud_C_InitPinch::CallFunc_GetX6GameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_InitPinch, CallFunc_GetInputProcessorHelper_ReturnValue) == 0x000018, "Member 'WBP_MapHud_C_InitPinch::CallFunc_GetInputProcessorHelper_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_InitPinch, CallFunc_SpawnObject_ReturnValue) == 0x000020, "Member 'WBP_MapHud_C_InitPinch::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_InitPinch, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'WBP_MapHud_C_InitPinch::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.IsMousePointer
// 0x0088 (0x0088 - 0x0000)
struct WBP_MapHud_C_IsMousePointer final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          IsMouse;                                           // 0x0078(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PointerEvent_GetPointerIndex_ReturnValue; // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_32ByteByte_ReturnValue;        // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_IsMousePointer) == 0x000008, "Wrong alignment on WBP_MapHud_C_IsMousePointer");
static_assert(sizeof(WBP_MapHud_C_IsMousePointer) == 0x000088, "Wrong size on WBP_MapHud_C_IsMousePointer");
static_assert(offsetof(WBP_MapHud_C_IsMousePointer, MouseEvent) == 0x000000, "Member 'WBP_MapHud_C_IsMousePointer::MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_IsMousePointer, IsMouse) == 0x000078, "Member 'WBP_MapHud_C_IsMousePointer::IsMouse' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_IsMousePointer, CallFunc_PointerEvent_GetPointerIndex_ReturnValue) == 0x00007C, "Member 'WBP_MapHud_C_IsMousePointer::CallFunc_PointerEvent_GetPointerIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_IsMousePointer, CallFunc_EqualEqual_32ByteByte_ReturnValue) == 0x000080, "Member 'WBP_MapHud_C_IsMousePointer::CallFunc_EqualEqual_32ByteByte_ReturnValue' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.IsMoveRootPosOutOfRange
// 0x0030 (0x0030 - 0x0000)
struct WBP_MapHud_C_IsMoveRootPosOutOfRange final
{
public:
	struct FVector2D                              Pos;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isOut;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isOutMinX;                                         // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isOutMaxX;                                         // 0x0012(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isOutMinY;                                         // 0x0013(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isOutMaxY;                                         // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_IsMoveRootPosOutOfRange) == 0x000008, "Wrong alignment on WBP_MapHud_C_IsMoveRootPosOutOfRange");
static_assert(sizeof(WBP_MapHud_C_IsMoveRootPosOutOfRange) == 0x000030, "Wrong size on WBP_MapHud_C_IsMoveRootPosOutOfRange");
static_assert(offsetof(WBP_MapHud_C_IsMoveRootPosOutOfRange, Pos) == 0x000000, "Member 'WBP_MapHud_C_IsMoveRootPosOutOfRange::Pos' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_IsMoveRootPosOutOfRange, isOut) == 0x000010, "Member 'WBP_MapHud_C_IsMoveRootPosOutOfRange::isOut' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_IsMoveRootPosOutOfRange, isOutMinX) == 0x000011, "Member 'WBP_MapHud_C_IsMoveRootPosOutOfRange::isOutMinX' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_IsMoveRootPosOutOfRange, isOutMaxX) == 0x000012, "Member 'WBP_MapHud_C_IsMoveRootPosOutOfRange::isOutMaxX' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_IsMoveRootPosOutOfRange, isOutMinY) == 0x000013, "Member 'WBP_MapHud_C_IsMoveRootPosOutOfRange::isOutMinY' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_IsMoveRootPosOutOfRange, isOutMaxY) == 0x000014, "Member 'WBP_MapHud_C_IsMoveRootPosOutOfRange::isOutMaxY' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_IsMoveRootPosOutOfRange, CallFunc_BreakVector2D_X) == 0x000018, "Member 'WBP_MapHud_C_IsMoveRootPosOutOfRange::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_IsMoveRootPosOutOfRange, CallFunc_BreakVector2D_Y) == 0x000020, "Member 'WBP_MapHud_C_IsMoveRootPosOutOfRange::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_IsMoveRootPosOutOfRange, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000028, "Member 'WBP_MapHud_C_IsMoveRootPosOutOfRange::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_IsMoveRootPosOutOfRange, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000029, "Member 'WBP_MapHud_C_IsMoveRootPosOutOfRange::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_IsMoveRootPosOutOfRange, CallFunc_BooleanOR_ReturnValue) == 0x00002A, "Member 'WBP_MapHud_C_IsMoveRootPosOutOfRange::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_IsMoveRootPosOutOfRange, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x00002B, "Member 'WBP_MapHud_C_IsMoveRootPosOutOfRange::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_IsMoveRootPosOutOfRange, CallFunc_BooleanOR_ReturnValue_1) == 0x00002C, "Member 'WBP_MapHud_C_IsMoveRootPosOutOfRange::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_IsMoveRootPosOutOfRange, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x00002D, "Member 'WBP_MapHud_C_IsMoveRootPosOutOfRange::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_IsMoveRootPosOutOfRange, CallFunc_BooleanOR_ReturnValue_2) == 0x00002E, "Member 'WBP_MapHud_C_IsMoveRootPosOutOfRange::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.NT_OnPostMoveContentPosition
// 0x0010 (0x0010 - 0x0000)
struct WBP_MapHud_C_NT_OnPostMoveContentPosition final
{
public:
	struct FVector2D                              Pos;                                               // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_NT_OnPostMoveContentPosition) == 0x000008, "Wrong alignment on WBP_MapHud_C_NT_OnPostMoveContentPosition");
static_assert(sizeof(WBP_MapHud_C_NT_OnPostMoveContentPosition) == 0x000010, "Wrong size on WBP_MapHud_C_NT_OnPostMoveContentPosition");
static_assert(offsetof(WBP_MapHud_C_NT_OnPostMoveContentPosition, Pos) == 0x000000, "Member 'WBP_MapHud_C_NT_OnPostMoveContentPosition::Pos' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.OnDragDetected
// 0x00D8 (0x00D8 - 0x0000)
struct WBP_MapHud_C_OnDragDetected final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          PointerEvent;                                      // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UDragDropOperation*                     Operation;                                         // 0x00B0(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue; // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ConvertScreenPosToWidgetPos_widgetPos;    // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_OnDragDetected) == 0x000008, "Wrong alignment on WBP_MapHud_C_OnDragDetected");
static_assert(sizeof(WBP_MapHud_C_OnDragDetected) == 0x0000D8, "Wrong size on WBP_MapHud_C_OnDragDetected");
static_assert(offsetof(WBP_MapHud_C_OnDragDetected, MyGeometry) == 0x000000, "Member 'WBP_MapHud_C_OnDragDetected::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnDragDetected, PointerEvent) == 0x000038, "Member 'WBP_MapHud_C_OnDragDetected::PointerEvent' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnDragDetected, Operation) == 0x0000B0, "Member 'WBP_MapHud_C_OnDragDetected::Operation' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnDragDetected, CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue) == 0x0000B8, "Member 'WBP_MapHud_C_OnDragDetected::CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnDragDetected, CallFunc_ConvertScreenPosToWidgetPos_widgetPos) == 0x0000C8, "Member 'WBP_MapHud_C_OnDragDetected::CallFunc_ConvertScreenPosToWidgetPos_widgetPos' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.OnKeyUp
// 0x02C8 (0x02C8 - 0x0000)
struct WBP_MapHud_C_OnKeyUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0130(0x00B8)()
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x01E8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0208(0x00B8)()
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_OnKeyUp) == 0x000008, "Wrong alignment on WBP_MapHud_C_OnKeyUp");
static_assert(sizeof(WBP_MapHud_C_OnKeyUp) == 0x0002C8, "Wrong size on WBP_MapHud_C_OnKeyUp");
static_assert(offsetof(WBP_MapHud_C_OnKeyUp, MyGeometry) == 0x000000, "Member 'WBP_MapHud_C_OnKeyUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnKeyUp, InKeyEvent) == 0x000038, "Member 'WBP_MapHud_C_OnKeyUp::InKeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnKeyUp, ReturnValue) == 0x000078, "Member 'WBP_MapHud_C_OnKeyUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnKeyUp, CallFunc_Unhandled_ReturnValue) == 0x000130, "Member 'WBP_MapHud_C_OnKeyUp::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnKeyUp, CallFunc_GetKey_ReturnValue) == 0x0001E8, "Member 'WBP_MapHud_C_OnKeyUp::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnKeyUp, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000200, "Member 'WBP_MapHud_C_OnKeyUp::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnKeyUp, CallFunc_Handled_ReturnValue) == 0x000208, "Member 'WBP_MapHud_C_OnKeyUp::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnKeyUp, CallFunc_BooleanAND_ReturnValue) == 0x0002C0, "Member 'WBP_MapHud_C_OnKeyUp::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.OnMapClick
// 0x0028 (0x0028 - 0x0000)
struct WBP_MapHud_C_OnMapClick final
{
public:
	struct FVector2D                              mapPos;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Key;                                               // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_OnMapClick) == 0x000008, "Wrong alignment on WBP_MapHud_C_OnMapClick");
static_assert(sizeof(WBP_MapHud_C_OnMapClick) == 0x000028, "Wrong size on WBP_MapHud_C_OnMapClick");
static_assert(offsetof(WBP_MapHud_C_OnMapClick, mapPos) == 0x000000, "Member 'WBP_MapHud_C_OnMapClick::mapPos' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMapClick, Key) == 0x000010, "Member 'WBP_MapHud_C_OnMapClick::Key' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.OnMapPinchZoom
// 0x0018 (0x0018 - 0x0000)
struct WBP_MapHud_C_OnMapPinchZoom final
{
public:
	double                                        scaleDelta;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_OnMapPinchZoom) == 0x000008, "Wrong alignment on WBP_MapHud_C_OnMapPinchZoom");
static_assert(sizeof(WBP_MapHud_C_OnMapPinchZoom) == 0x000018, "Wrong size on WBP_MapHud_C_OnMapPinchZoom");
static_assert(offsetof(WBP_MapHud_C_OnMapPinchZoom, scaleDelta) == 0x000000, "Member 'WBP_MapHud_C_OnMapPinchZoom::scaleDelta' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMapPinchZoom, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000008, "Member 'WBP_MapHud_C_OnMapPinchZoom::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.OnMapWheel
// 0x0018 (0x0018 - 0x0000)
struct WBP_MapHud_C_OnMapWheel final
{
public:
	double                                        Step;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              screenPos;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_OnMapWheel) == 0x000008, "Wrong alignment on WBP_MapHud_C_OnMapWheel");
static_assert(sizeof(WBP_MapHud_C_OnMapWheel) == 0x000018, "Wrong size on WBP_MapHud_C_OnMapWheel");
static_assert(offsetof(WBP_MapHud_C_OnMapWheel, Step) == 0x000000, "Member 'WBP_MapHud_C_OnMapWheel::Step' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMapWheel, screenPos) == 0x000008, "Member 'WBP_MapHud_C_OnMapWheel::screenPos' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.OnMapWindowChanged
// 0x0030 (0x0030 - 0x0000)
struct WBP_MapHud_C_OnMapWindowChanged final
{
public:
	double                                        mapMinX;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        mapMaxX;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        mapMnY;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        mapMaxY;                                           // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              MoveDiff;                                          // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_OnMapWindowChanged) == 0x000008, "Wrong alignment on WBP_MapHud_C_OnMapWindowChanged");
static_assert(sizeof(WBP_MapHud_C_OnMapWindowChanged) == 0x000030, "Wrong size on WBP_MapHud_C_OnMapWindowChanged");
static_assert(offsetof(WBP_MapHud_C_OnMapWindowChanged, mapMinX) == 0x000000, "Member 'WBP_MapHud_C_OnMapWindowChanged::mapMinX' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMapWindowChanged, mapMaxX) == 0x000008, "Member 'WBP_MapHud_C_OnMapWindowChanged::mapMaxX' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMapWindowChanged, mapMnY) == 0x000010, "Member 'WBP_MapHud_C_OnMapWindowChanged::mapMnY' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMapWindowChanged, mapMaxY) == 0x000018, "Member 'WBP_MapHud_C_OnMapWindowChanged::mapMaxY' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMapWindowChanged, MoveDiff) == 0x000020, "Member 'WBP_MapHud_C_OnMapWindowChanged::MoveDiff' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.OnMouseButtonDown
// 0x0520 (0x0520 - 0x0000)
struct WBP_MapHud_C_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_IsMousePointer_IsMouse;                   // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_DetectDragIfPressed_ReturnValue;          // 0x0170(0x00B8)()
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_CaptureMouse_ReturnValue;                 // 0x0230(0x00B8)()
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x02E8(0x00B8)()
	int32                                         CallFunc_PointerEvent_GetPointerIndex_ReturnValue; // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4[0x4];                                      // 0x03A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue_1;                  // 0x03A8(0x00B8)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_461[0x7];                                      // 0x0461(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue_2;                  // 0x0468(0x00B8)()
};
static_assert(alignof(WBP_MapHud_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on WBP_MapHud_C_OnMouseButtonDown");
static_assert(sizeof(WBP_MapHud_C_OnMouseButtonDown) == 0x000520, "Wrong size on WBP_MapHud_C_OnMouseButtonDown");
static_assert(offsetof(WBP_MapHud_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'WBP_MapHud_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'WBP_MapHud_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseButtonDown, ReturnValue) == 0x0000B0, "Member 'WBP_MapHud_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseButtonDown, CallFunc_IsMousePointer_IsMouse) == 0x000168, "Member 'WBP_MapHud_C_OnMouseButtonDown::CallFunc_IsMousePointer_IsMouse' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseButtonDown, CallFunc_DetectDragIfPressed_ReturnValue) == 0x000170, "Member 'WBP_MapHud_C_OnMouseButtonDown::CallFunc_DetectDragIfPressed_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseButtonDown, CallFunc_BooleanAND_ReturnValue) == 0x000228, "Member 'WBP_MapHud_C_OnMouseButtonDown::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseButtonDown, CallFunc_CaptureMouse_ReturnValue) == 0x000230, "Member 'WBP_MapHud_C_OnMouseButtonDown::CallFunc_CaptureMouse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseButtonDown, CallFunc_Unhandled_ReturnValue) == 0x0002E8, "Member 'WBP_MapHud_C_OnMouseButtonDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseButtonDown, CallFunc_PointerEvent_GetPointerIndex_ReturnValue) == 0x0003A0, "Member 'WBP_MapHud_C_OnMouseButtonDown::CallFunc_PointerEvent_GetPointerIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseButtonDown, CallFunc_Unhandled_ReturnValue_1) == 0x0003A8, "Member 'WBP_MapHud_C_OnMouseButtonDown::CallFunc_Unhandled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseButtonDown, CallFunc_Less_IntInt_ReturnValue) == 0x000460, "Member 'WBP_MapHud_C_OnMouseButtonDown::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseButtonDown, CallFunc_Unhandled_ReturnValue_2) == 0x000468, "Member 'WBP_MapHud_C_OnMouseButtonDown::CallFunc_Unhandled_ReturnValue_2' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.OnMouseButtonUp
// 0x0458 (0x0458 - 0x0000)
struct WBP_MapHud_C_OnMouseButtonUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_IsMousePointer_IsMouse;                   // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HandleMouseButtonUp_ReturnValue;          // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16A[0x2];                                      // 0x016A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PointerEvent_GetPointerIndex_ReturnValue; // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0170(0x00B8)()
	bool                                          CallFunc_EqualEqual_32ByteByte_ReturnValue;        // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22A[0x6];                                      // 0x022A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue_1;                  // 0x0230(0x00B8)()
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x02E8(0x00B8)()
	struct FEventReply                            CallFunc_ReleaseMouseCapture_ReturnValue;          // 0x03A0(0x00B8)()
};
static_assert(alignof(WBP_MapHud_C_OnMouseButtonUp) == 0x000008, "Wrong alignment on WBP_MapHud_C_OnMouseButtonUp");
static_assert(sizeof(WBP_MapHud_C_OnMouseButtonUp) == 0x000458, "Wrong size on WBP_MapHud_C_OnMouseButtonUp");
static_assert(offsetof(WBP_MapHud_C_OnMouseButtonUp, MyGeometry) == 0x000000, "Member 'WBP_MapHud_C_OnMouseButtonUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseButtonUp, MouseEvent) == 0x000038, "Member 'WBP_MapHud_C_OnMouseButtonUp::MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseButtonUp, ReturnValue) == 0x0000B0, "Member 'WBP_MapHud_C_OnMouseButtonUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseButtonUp, CallFunc_IsMousePointer_IsMouse) == 0x000168, "Member 'WBP_MapHud_C_OnMouseButtonUp::CallFunc_IsMousePointer_IsMouse' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseButtonUp, CallFunc_HandleMouseButtonUp_ReturnValue) == 0x000169, "Member 'WBP_MapHud_C_OnMouseButtonUp::CallFunc_HandleMouseButtonUp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseButtonUp, CallFunc_PointerEvent_GetPointerIndex_ReturnValue) == 0x00016C, "Member 'WBP_MapHud_C_OnMouseButtonUp::CallFunc_PointerEvent_GetPointerIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseButtonUp, CallFunc_Unhandled_ReturnValue) == 0x000170, "Member 'WBP_MapHud_C_OnMouseButtonUp::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseButtonUp, CallFunc_EqualEqual_32ByteByte_ReturnValue) == 0x000228, "Member 'WBP_MapHud_C_OnMouseButtonUp::CallFunc_EqualEqual_32ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseButtonUp, CallFunc_BooleanAND_ReturnValue) == 0x000229, "Member 'WBP_MapHud_C_OnMouseButtonUp::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseButtonUp, CallFunc_Unhandled_ReturnValue_1) == 0x000230, "Member 'WBP_MapHud_C_OnMouseButtonUp::CallFunc_Unhandled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseButtonUp, CallFunc_Handled_ReturnValue) == 0x0002E8, "Member 'WBP_MapHud_C_OnMouseButtonUp::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseButtonUp, CallFunc_ReleaseMouseCapture_ReturnValue) == 0x0003A0, "Member 'WBP_MapHud_C_OnMouseButtonUp::CallFunc_ReleaseMouseCapture_ReturnValue' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.OnMouseButtonUpCustom
// 0x0220 (0x0220 - 0x0000)
struct WBP_MapHud_C_OnMouseButtonUpCustom final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0168(0x00B8)()
};
static_assert(alignof(WBP_MapHud_C_OnMouseButtonUpCustom) == 0x000008, "Wrong alignment on WBP_MapHud_C_OnMouseButtonUpCustom");
static_assert(sizeof(WBP_MapHud_C_OnMouseButtonUpCustom) == 0x000220, "Wrong size on WBP_MapHud_C_OnMouseButtonUpCustom");
static_assert(offsetof(WBP_MapHud_C_OnMouseButtonUpCustom, MyGeometry) == 0x000000, "Member 'WBP_MapHud_C_OnMouseButtonUpCustom::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseButtonUpCustom, MouseEvent) == 0x000038, "Member 'WBP_MapHud_C_OnMouseButtonUpCustom::MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseButtonUpCustom, ReturnValue) == 0x0000B0, "Member 'WBP_MapHud_C_OnMouseButtonUpCustom::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseButtonUpCustom, CallFunc_Handled_ReturnValue) == 0x000168, "Member 'WBP_MapHud_C_OnMouseButtonUpCustom::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.OnMouseMove
// 0x03B8 (0x03B8 - 0x0000)
struct WBP_MapHud_C_OnMouseMove final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FVector2D                              currentMouseWidgetPos;                             // 0x0168(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMousePointer_IsMouse;                   // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PointerEvent_GetPointerIndex_ReturnValue; // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_OnMouseMoveCustom_ReturnValue;            // 0x0180(0x00B8)()
	bool                                          CallFunc_EqualEqual_32ByteByte_ReturnValue;        // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0240(0x00B8)()
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue_1;                  // 0x0300(0x00B8)()
};
static_assert(alignof(WBP_MapHud_C_OnMouseMove) == 0x000008, "Wrong alignment on WBP_MapHud_C_OnMouseMove");
static_assert(sizeof(WBP_MapHud_C_OnMouseMove) == 0x0003B8, "Wrong size on WBP_MapHud_C_OnMouseMove");
static_assert(offsetof(WBP_MapHud_C_OnMouseMove, MyGeometry) == 0x000000, "Member 'WBP_MapHud_C_OnMouseMove::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMove, MouseEvent) == 0x000038, "Member 'WBP_MapHud_C_OnMouseMove::MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMove, ReturnValue) == 0x0000B0, "Member 'WBP_MapHud_C_OnMouseMove::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMove, currentMouseWidgetPos) == 0x000168, "Member 'WBP_MapHud_C_OnMouseMove::currentMouseWidgetPos' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMove, CallFunc_IsMousePointer_IsMouse) == 0x000178, "Member 'WBP_MapHud_C_OnMouseMove::CallFunc_IsMousePointer_IsMouse' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMove, CallFunc_PointerEvent_GetPointerIndex_ReturnValue) == 0x00017C, "Member 'WBP_MapHud_C_OnMouseMove::CallFunc_PointerEvent_GetPointerIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMove, CallFunc_OnMouseMoveCustom_ReturnValue) == 0x000180, "Member 'WBP_MapHud_C_OnMouseMove::CallFunc_OnMouseMoveCustom_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMove, CallFunc_EqualEqual_32ByteByte_ReturnValue) == 0x000238, "Member 'WBP_MapHud_C_OnMouseMove::CallFunc_EqualEqual_32ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMove, CallFunc_Unhandled_ReturnValue) == 0x000240, "Member 'WBP_MapHud_C_OnMouseMove::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMove, CallFunc_BooleanAND_ReturnValue) == 0x0002F8, "Member 'WBP_MapHud_C_OnMouseMove::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMove, CallFunc_Unhandled_ReturnValue_1) == 0x000300, "Member 'WBP_MapHud_C_OnMouseMove::CallFunc_Unhandled_ReturnValue_1' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.OnMouseMoveCustom
// 0x03F8 (0x03F8 - 0x0000)
struct WBP_MapHud_C_OnMouseMoveCustom final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FVector2D                              currentMouseWidgetPos;                             // 0x0168(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue; // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ConvertScreenPosToWidgetPos_widgetPos;    // 0x0190(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x01D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMoveRootPosOutOfRange_isOut;            // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMoveRootPosOutOfRange_isOutMinX;        // 0x01E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMoveRootPosOutOfRange_isOutMaxX;        // 0x01E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMoveRootPosOutOfRange_isOutMinY;        // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMoveRootPosOutOfRange_isOutMaxY;        // 0x01E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x01E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x01EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EC[0x4];                                      // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20A[0x6];                                      // 0x020A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue_1;  // 0x0210(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0228(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0248(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue_1;       // 0x0258(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue_2;  // 0x0270(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0288(0x00B8)()
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0340(0x00B8)()
};
static_assert(alignof(WBP_MapHud_C_OnMouseMoveCustom) == 0x000008, "Wrong alignment on WBP_MapHud_C_OnMouseMoveCustom");
static_assert(sizeof(WBP_MapHud_C_OnMouseMoveCustom) == 0x0003F8, "Wrong size on WBP_MapHud_C_OnMouseMoveCustom");
static_assert(offsetof(WBP_MapHud_C_OnMouseMoveCustom, MyGeometry) == 0x000000, "Member 'WBP_MapHud_C_OnMouseMoveCustom::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMoveCustom, MouseEvent) == 0x000038, "Member 'WBP_MapHud_C_OnMouseMoveCustom::MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMoveCustom, ReturnValue) == 0x0000B0, "Member 'WBP_MapHud_C_OnMouseMoveCustom::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMoveCustom, currentMouseWidgetPos) == 0x000168, "Member 'WBP_MapHud_C_OnMouseMoveCustom::currentMouseWidgetPos' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMoveCustom, CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue) == 0x000178, "Member 'WBP_MapHud_C_OnMouseMoveCustom::CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMoveCustom, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000188, "Member 'WBP_MapHud_C_OnMouseMoveCustom::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMoveCustom, CallFunc_ConvertScreenPosToWidgetPos_widgetPos) == 0x000190, "Member 'WBP_MapHud_C_OnMouseMoveCustom::CallFunc_ConvertScreenPosToWidgetPos_widgetPos' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMoveCustom, CallFunc_GetPosition_ReturnValue) == 0x0001A0, "Member 'WBP_MapHud_C_OnMouseMoveCustom::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMoveCustom, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0001B0, "Member 'WBP_MapHud_C_OnMouseMoveCustom::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMoveCustom, CallFunc_BreakVector2D_X) == 0x0001C0, "Member 'WBP_MapHud_C_OnMouseMoveCustom::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMoveCustom, CallFunc_BreakVector2D_Y) == 0x0001C8, "Member 'WBP_MapHud_C_OnMouseMoveCustom::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMoveCustom, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x0001D0, "Member 'WBP_MapHud_C_OnMouseMoveCustom::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMoveCustom, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0001E0, "Member 'WBP_MapHud_C_OnMouseMoveCustom::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMoveCustom, CallFunc_IsMoveRootPosOutOfRange_isOut) == 0x0001E1, "Member 'WBP_MapHud_C_OnMouseMoveCustom::CallFunc_IsMoveRootPosOutOfRange_isOut' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMoveCustom, CallFunc_IsMoveRootPosOutOfRange_isOutMinX) == 0x0001E2, "Member 'WBP_MapHud_C_OnMouseMoveCustom::CallFunc_IsMoveRootPosOutOfRange_isOutMinX' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMoveCustom, CallFunc_IsMoveRootPosOutOfRange_isOutMaxX) == 0x0001E3, "Member 'WBP_MapHud_C_OnMouseMoveCustom::CallFunc_IsMoveRootPosOutOfRange_isOutMaxX' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMoveCustom, CallFunc_IsMoveRootPosOutOfRange_isOutMinY) == 0x0001E4, "Member 'WBP_MapHud_C_OnMouseMoveCustom::CallFunc_IsMoveRootPosOutOfRange_isOutMinY' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMoveCustom, CallFunc_IsMoveRootPosOutOfRange_isOutMaxY) == 0x0001E5, "Member 'WBP_MapHud_C_OnMouseMoveCustom::CallFunc_IsMoveRootPosOutOfRange_isOutMaxY' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMoveCustom, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0001E6, "Member 'WBP_MapHud_C_OnMouseMoveCustom::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMoveCustom, CallFunc_BooleanAND_ReturnValue) == 0x0001E7, "Member 'WBP_MapHud_C_OnMouseMoveCustom::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMoveCustom, CallFunc_BooleanAND_ReturnValue_1) == 0x0001E8, "Member 'WBP_MapHud_C_OnMouseMoveCustom::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMoveCustom, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0001E9, "Member 'WBP_MapHud_C_OnMouseMoveCustom::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMoveCustom, CallFunc_BooleanOR_ReturnValue) == 0x0001EA, "Member 'WBP_MapHud_C_OnMouseMoveCustom::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMoveCustom, CallFunc_BooleanAND_ReturnValue_2) == 0x0001EB, "Member 'WBP_MapHud_C_OnMouseMoveCustom::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMoveCustom, CallFunc_SelectFloat_ReturnValue) == 0x0001F0, "Member 'WBP_MapHud_C_OnMouseMoveCustom::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMoveCustom, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x0001F8, "Member 'WBP_MapHud_C_OnMouseMoveCustom::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMoveCustom, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000200, "Member 'WBP_MapHud_C_OnMouseMoveCustom::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMoveCustom, CallFunc_BooleanAND_ReturnValue_3) == 0x000208, "Member 'WBP_MapHud_C_OnMouseMoveCustom::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMoveCustom, CallFunc_BooleanOR_ReturnValue_1) == 0x000209, "Member 'WBP_MapHud_C_OnMouseMoveCustom::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMoveCustom, CallFunc_Subtract_Vector2DVector2D_ReturnValue_1) == 0x000210, "Member 'WBP_MapHud_C_OnMouseMoveCustom::CallFunc_Subtract_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMoveCustom, CallFunc_SelectFloat_ReturnValue_1) == 0x000220, "Member 'WBP_MapHud_C_OnMouseMoveCustom::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMoveCustom, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000228, "Member 'WBP_MapHud_C_OnMouseMoveCustom::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMoveCustom, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000238, "Member 'WBP_MapHud_C_OnMouseMoveCustom::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMoveCustom, CallFunc_Array_Add_ReturnValue) == 0x000240, "Member 'WBP_MapHud_C_OnMouseMoveCustom::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMoveCustom, CallFunc_MakeVector2D_ReturnValue) == 0x000248, "Member 'WBP_MapHud_C_OnMouseMoveCustom::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMoveCustom, CallFunc_Add_Vector2DVector2D_ReturnValue_1) == 0x000258, "Member 'WBP_MapHud_C_OnMouseMoveCustom::CallFunc_Add_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMoveCustom, CallFunc_Array_Length_ReturnValue) == 0x000268, "Member 'WBP_MapHud_C_OnMouseMoveCustom::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMoveCustom, CallFunc_Subtract_Vector2DVector2D_ReturnValue_2) == 0x000270, "Member 'WBP_MapHud_C_OnMouseMoveCustom::CallFunc_Subtract_Vector2DVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMoveCustom, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000280, "Member 'WBP_MapHud_C_OnMouseMoveCustom::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMoveCustom, CallFunc_Handled_ReturnValue) == 0x000288, "Member 'WBP_MapHud_C_OnMouseMoveCustom::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseMoveCustom, CallFunc_Unhandled_ReturnValue) == 0x000340, "Member 'WBP_MapHud_C_OnMouseMoveCustom::CallFunc_Unhandled_ReturnValue' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.OnMouseWheel
// 0x0240 (0x0240 - 0x0000)
struct WBP_MapHud_C_OnMouseWheel final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0168(0x00B8)()
	struct FVector2D                              CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue; // 0x0220(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PointerEvent_GetWheelDelta_ReturnValue;   // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_234[0x4];                                      // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_OnMapWheel_step_ImplicitCast;             // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_OnMouseWheel) == 0x000008, "Wrong alignment on WBP_MapHud_C_OnMouseWheel");
static_assert(sizeof(WBP_MapHud_C_OnMouseWheel) == 0x000240, "Wrong size on WBP_MapHud_C_OnMouseWheel");
static_assert(offsetof(WBP_MapHud_C_OnMouseWheel, MyGeometry) == 0x000000, "Member 'WBP_MapHud_C_OnMouseWheel::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseWheel, MouseEvent) == 0x000038, "Member 'WBP_MapHud_C_OnMouseWheel::MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseWheel, ReturnValue) == 0x0000B0, "Member 'WBP_MapHud_C_OnMouseWheel::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseWheel, CallFunc_Handled_ReturnValue) == 0x000168, "Member 'WBP_MapHud_C_OnMouseWheel::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseWheel, CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue) == 0x000220, "Member 'WBP_MapHud_C_OnMouseWheel::CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseWheel, CallFunc_PointerEvent_GetWheelDelta_ReturnValue) == 0x000230, "Member 'WBP_MapHud_C_OnMouseWheel::CallFunc_PointerEvent_GetWheelDelta_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_OnMouseWheel, CallFunc_OnMapWheel_step_ImplicitCast) == 0x000238, "Member 'WBP_MapHud_C_OnMouseWheel::CallFunc_OnMapWheel_step_ImplicitCast' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.PostProcessMapMove
// 0x0110 (0x0110 - 0x0000)
struct WBP_MapHud_C_PostProcessMapMove final
{
public:
	double                                        moveY;                                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        moveX;                                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        diffY;                                             // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        diffX;                                             // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_Vector2DVector2D_ReturnValue;    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue_1;                // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_2;          // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2[0x6];                                       // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_3;          // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_PostProcessMapMove) == 0x000008, "Wrong alignment on WBP_MapHud_C_PostProcessMapMove");
static_assert(sizeof(WBP_MapHud_C_PostProcessMapMove) == 0x000110, "Wrong size on WBP_MapHud_C_PostProcessMapMove");
static_assert(offsetof(WBP_MapHud_C_PostProcessMapMove, moveY) == 0x000000, "Member 'WBP_MapHud_C_PostProcessMapMove::moveY' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_PostProcessMapMove, moveX) == 0x000008, "Member 'WBP_MapHud_C_PostProcessMapMove::moveX' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_PostProcessMapMove, diffY) == 0x000010, "Member 'WBP_MapHud_C_PostProcessMapMove::diffY' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_PostProcessMapMove, diffX) == 0x000018, "Member 'WBP_MapHud_C_PostProcessMapMove::diffX' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_PostProcessMapMove, CallFunc_MakeVector2D_ReturnValue) == 0x000020, "Member 'WBP_MapHud_C_PostProcessMapMove::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_PostProcessMapMove, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000030, "Member 'WBP_MapHud_C_PostProcessMapMove::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_PostProcessMapMove, CallFunc_NotEqual_Vector2DVector2D_ReturnValue) == 0x000038, "Member 'WBP_MapHud_C_PostProcessMapMove::CallFunc_NotEqual_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_PostProcessMapMove, CallFunc_GetPosition_ReturnValue) == 0x000040, "Member 'WBP_MapHud_C_PostProcessMapMove::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_PostProcessMapMove, CallFunc_BreakVector2D_X) == 0x000050, "Member 'WBP_MapHud_C_PostProcessMapMove::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_PostProcessMapMove, CallFunc_BreakVector2D_Y) == 0x000058, "Member 'WBP_MapHud_C_PostProcessMapMove::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_PostProcessMapMove, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000060, "Member 'WBP_MapHud_C_PostProcessMapMove::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_PostProcessMapMove, CallFunc_FClamp_ReturnValue) == 0x000068, "Member 'WBP_MapHud_C_PostProcessMapMove::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_PostProcessMapMove, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000070, "Member 'WBP_MapHud_C_PostProcessMapMove::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_PostProcessMapMove, CallFunc_Abs_ReturnValue) == 0x000078, "Member 'WBP_MapHud_C_PostProcessMapMove::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_PostProcessMapMove, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000080, "Member 'WBP_MapHud_C_PostProcessMapMove::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_PostProcessMapMove, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000088, "Member 'WBP_MapHud_C_PostProcessMapMove::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_PostProcessMapMove, CallFunc_Abs_ReturnValue_1) == 0x000090, "Member 'WBP_MapHud_C_PostProcessMapMove::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_PostProcessMapMove, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000098, "Member 'WBP_MapHud_C_PostProcessMapMove::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_PostProcessMapMove, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x0000A0, "Member 'WBP_MapHud_C_PostProcessMapMove::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_PostProcessMapMove, CallFunc_FClamp_ReturnValue_1) == 0x0000A8, "Member 'WBP_MapHud_C_PostProcessMapMove::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_PostProcessMapMove, CallFunc_BooleanOR_ReturnValue) == 0x0000B0, "Member 'WBP_MapHud_C_PostProcessMapMove::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_PostProcessMapMove, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x0000B8, "Member 'WBP_MapHud_C_PostProcessMapMove::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_PostProcessMapMove, CallFunc_GetPosition_ReturnValue_1) == 0x0000C0, "Member 'WBP_MapHud_C_PostProcessMapMove::CallFunc_GetPosition_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_PostProcessMapMove, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x0000D0, "Member 'WBP_MapHud_C_PostProcessMapMove::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_PostProcessMapMove, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000E0, "Member 'WBP_MapHud_C_PostProcessMapMove::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_PostProcessMapMove, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0000E8, "Member 'WBP_MapHud_C_PostProcessMapMove::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_PostProcessMapMove, CallFunc_Less_DoubleDouble_ReturnValue_2) == 0x0000F0, "Member 'WBP_MapHud_C_PostProcessMapMove::CallFunc_Less_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_PostProcessMapMove, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000F1, "Member 'WBP_MapHud_C_PostProcessMapMove::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_PostProcessMapMove, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x0000F8, "Member 'WBP_MapHud_C_PostProcessMapMove::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_PostProcessMapMove, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x000100, "Member 'WBP_MapHud_C_PostProcessMapMove::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_PostProcessMapMove, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000108, "Member 'WBP_MapHud_C_PostProcessMapMove::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_PostProcessMapMove, CallFunc_Less_DoubleDouble_ReturnValue_3) == 0x000109, "Member 'WBP_MapHud_C_PostProcessMapMove::CallFunc_Less_DoubleDouble_ReturnValue_3' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.ScrollToMapPos
// 0x00C8 (0x00C8 - 0x0000)
struct WBP_MapHud_C_ScrollToMapPos final
{
public:
	struct FVector2D                              mapPos;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Speed;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_NT_ConvertMapPosToWindowPos_ReturnValue;  // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetWindowSize_size;                       // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetWindowSize_size_1;                     // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_1;     // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_NT_ConvertWindowPosToMapPos_ReturnValue;  // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_NT_ConstraintMoveRootPos_ReturnValue;     // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_ScrollToMapPos) == 0x000008, "Wrong alignment on WBP_MapHud_C_ScrollToMapPos");
static_assert(sizeof(WBP_MapHud_C_ScrollToMapPos) == 0x0000C8, "Wrong size on WBP_MapHud_C_ScrollToMapPos");
static_assert(offsetof(WBP_MapHud_C_ScrollToMapPos, mapPos) == 0x000000, "Member 'WBP_MapHud_C_ScrollToMapPos::mapPos' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ScrollToMapPos, Speed) == 0x000010, "Member 'WBP_MapHud_C_ScrollToMapPos::Speed' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ScrollToMapPos, CallFunc_NT_ConvertMapPosToWindowPos_ReturnValue) == 0x000018, "Member 'WBP_MapHud_C_ScrollToMapPos::CallFunc_NT_ConvertMapPosToWindowPos_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ScrollToMapPos, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000028, "Member 'WBP_MapHud_C_ScrollToMapPos::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ScrollToMapPos, CallFunc_GetWindowSize_size) == 0x000030, "Member 'WBP_MapHud_C_ScrollToMapPos::CallFunc_GetWindowSize_size' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ScrollToMapPos, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000040, "Member 'WBP_MapHud_C_ScrollToMapPos::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ScrollToMapPos, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000050, "Member 'WBP_MapHud_C_ScrollToMapPos::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ScrollToMapPos, CallFunc_GetWindowSize_size_1) == 0x000060, "Member 'WBP_MapHud_C_ScrollToMapPos::CallFunc_GetWindowSize_size_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ScrollToMapPos, CallFunc_Multiply_Vector2DFloat_ReturnValue_1) == 0x000070, "Member 'WBP_MapHud_C_ScrollToMapPos::CallFunc_Multiply_Vector2DFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ScrollToMapPos, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000080, "Member 'WBP_MapHud_C_ScrollToMapPos::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ScrollToMapPos, CallFunc_NT_ConvertWindowPosToMapPos_ReturnValue) == 0x000088, "Member 'WBP_MapHud_C_ScrollToMapPos::CallFunc_NT_ConvertWindowPosToMapPos_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ScrollToMapPos, CallFunc_GetPosition_ReturnValue) == 0x000098, "Member 'WBP_MapHud_C_ScrollToMapPos::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ScrollToMapPos, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x0000A8, "Member 'WBP_MapHud_C_ScrollToMapPos::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ScrollToMapPos, CallFunc_NT_ConstraintMoveRootPos_ReturnValue) == 0x0000B8, "Member 'WBP_MapHud_C_ScrollToMapPos::CallFunc_NT_ConstraintMoveRootPos_ReturnValue' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.SetClipRange
// 0x0018 (0x0018 - 0x0000)
struct WBP_MapHud_C_SetClipRange final
{
public:
	struct FVector2D                              Size;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_SetClipRange) == 0x000008, "Wrong alignment on WBP_MapHud_C_SetClipRange");
static_assert(sizeof(WBP_MapHud_C_SetClipRange) == 0x000018, "Wrong size on WBP_MapHud_C_SetClipRange");
static_assert(offsetof(WBP_MapHud_C_SetClipRange, Size) == 0x000000, "Member 'WBP_MapHud_C_SetClipRange::Size' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_SetClipRange, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000010, "Member 'WBP_MapHud_C_SetClipRange::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.SetContentSize
// 0x0010 (0x0010 - 0x0000)
struct WBP_MapHud_C_SetContentSize final
{
public:
	struct FVector2D                              NewSize;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_SetContentSize) == 0x000008, "Wrong alignment on WBP_MapHud_C_SetContentSize");
static_assert(sizeof(WBP_MapHud_C_SetContentSize) == 0x000010, "Wrong size on WBP_MapHud_C_SetContentSize");
static_assert(offsetof(WBP_MapHud_C_SetContentSize, NewSize) == 0x000000, "Member 'WBP_MapHud_C_SetContentSize::NewSize' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.SetCustomConstrain
// 0x0020 (0x0020 - 0x0000)
struct WBP_MapHud_C_SetCustomConstrain final
{
public:
	double                                        Left;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Top;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Right;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Bottom;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_SetCustomConstrain) == 0x000008, "Wrong alignment on WBP_MapHud_C_SetCustomConstrain");
static_assert(sizeof(WBP_MapHud_C_SetCustomConstrain) == 0x000020, "Wrong size on WBP_MapHud_C_SetCustomConstrain");
static_assert(offsetof(WBP_MapHud_C_SetCustomConstrain, Left) == 0x000000, "Member 'WBP_MapHud_C_SetCustomConstrain::Left' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_SetCustomConstrain, Top) == 0x000008, "Member 'WBP_MapHud_C_SetCustomConstrain::Top' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_SetCustomConstrain, Right) == 0x000010, "Member 'WBP_MapHud_C_SetCustomConstrain::Right' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_SetCustomConstrain, Bottom) == 0x000018, "Member 'WBP_MapHud_C_SetCustomConstrain::Bottom' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.SetFollowMapClipRange
// 0x0038 (0x0038 - 0x0000)
struct WBP_MapHud_C_SetFollowMapClipRange final
{
public:
	struct FVector2D                              Size;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_MapFollower_C>     CallFunc_Array_Get_Item;                           // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_SetFollowMapClipRange) == 0x000008, "Wrong alignment on WBP_MapHud_C_SetFollowMapClipRange");
static_assert(sizeof(WBP_MapHud_C_SetFollowMapClipRange) == 0x000038, "Wrong size on WBP_MapHud_C_SetFollowMapClipRange");
static_assert(offsetof(WBP_MapHud_C_SetFollowMapClipRange, Size) == 0x000000, "Member 'WBP_MapHud_C_SetFollowMapClipRange::Size' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_SetFollowMapClipRange, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WBP_MapHud_C_SetFollowMapClipRange::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_SetFollowMapClipRange, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'WBP_MapHud_C_SetFollowMapClipRange::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_SetFollowMapClipRange, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'WBP_MapHud_C_SetFollowMapClipRange::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_SetFollowMapClipRange, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'WBP_MapHud_C_SetFollowMapClipRange::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_SetFollowMapClipRange, CallFunc_Array_Get_Item) == 0x000020, "Member 'WBP_MapHud_C_SetFollowMapClipRange::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_SetFollowMapClipRange, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'WBP_MapHud_C_SetFollowMapClipRange::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.SetFollowMapContentPosition
// 0x0038 (0x0038 - 0x0000)
struct WBP_MapHud_C_SetFollowMapContentPosition final
{
public:
	struct FVector2D                              Pos;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_MapFollower_C>     CallFunc_Array_Get_Item;                           // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_SetFollowMapContentPosition) == 0x000008, "Wrong alignment on WBP_MapHud_C_SetFollowMapContentPosition");
static_assert(sizeof(WBP_MapHud_C_SetFollowMapContentPosition) == 0x000038, "Wrong size on WBP_MapHud_C_SetFollowMapContentPosition");
static_assert(offsetof(WBP_MapHud_C_SetFollowMapContentPosition, Pos) == 0x000000, "Member 'WBP_MapHud_C_SetFollowMapContentPosition::Pos' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_SetFollowMapContentPosition, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WBP_MapHud_C_SetFollowMapContentPosition::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_SetFollowMapContentPosition, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'WBP_MapHud_C_SetFollowMapContentPosition::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_SetFollowMapContentPosition, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'WBP_MapHud_C_SetFollowMapContentPosition::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_SetFollowMapContentPosition, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'WBP_MapHud_C_SetFollowMapContentPosition::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_SetFollowMapContentPosition, CallFunc_Array_Get_Item) == 0x000020, "Member 'WBP_MapHud_C_SetFollowMapContentPosition::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_SetFollowMapContentPosition, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'WBP_MapHud_C_SetFollowMapContentPosition::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.SetFollowMapContentScale
// 0x0038 (0x0038 - 0x0000)
struct WBP_MapHud_C_SetFollowMapContentScale final
{
public:
	struct FVector2D                              Scale;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_MapFollower_C>     CallFunc_Array_Get_Item;                           // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_SetFollowMapContentScale) == 0x000008, "Wrong alignment on WBP_MapHud_C_SetFollowMapContentScale");
static_assert(sizeof(WBP_MapHud_C_SetFollowMapContentScale) == 0x000038, "Wrong size on WBP_MapHud_C_SetFollowMapContentScale");
static_assert(offsetof(WBP_MapHud_C_SetFollowMapContentScale, Scale) == 0x000000, "Member 'WBP_MapHud_C_SetFollowMapContentScale::Scale' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_SetFollowMapContentScale, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WBP_MapHud_C_SetFollowMapContentScale::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_SetFollowMapContentScale, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'WBP_MapHud_C_SetFollowMapContentScale::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_SetFollowMapContentScale, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'WBP_MapHud_C_SetFollowMapContentScale::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_SetFollowMapContentScale, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'WBP_MapHud_C_SetFollowMapContentScale::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_SetFollowMapContentScale, CallFunc_Array_Get_Item) == 0x000020, "Member 'WBP_MapHud_C_SetFollowMapContentScale::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_SetFollowMapContentScale, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'WBP_MapHud_C_SetFollowMapContentScale::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.SetFollowMapContentSize
// 0x0038 (0x0038 - 0x0000)
struct WBP_MapHud_C_SetFollowMapContentSize final
{
public:
	struct FVector2D                              Size;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_MapFollower_C>     CallFunc_Array_Get_Item;                           // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_SetFollowMapContentSize) == 0x000008, "Wrong alignment on WBP_MapHud_C_SetFollowMapContentSize");
static_assert(sizeof(WBP_MapHud_C_SetFollowMapContentSize) == 0x000038, "Wrong size on WBP_MapHud_C_SetFollowMapContentSize");
static_assert(offsetof(WBP_MapHud_C_SetFollowMapContentSize, Size) == 0x000000, "Member 'WBP_MapHud_C_SetFollowMapContentSize::Size' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_SetFollowMapContentSize, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WBP_MapHud_C_SetFollowMapContentSize::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_SetFollowMapContentSize, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'WBP_MapHud_C_SetFollowMapContentSize::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_SetFollowMapContentSize, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'WBP_MapHud_C_SetFollowMapContentSize::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_SetFollowMapContentSize, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'WBP_MapHud_C_SetFollowMapContentSize::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_SetFollowMapContentSize, CallFunc_Array_Get_Item) == 0x000020, "Member 'WBP_MapHud_C_SetFollowMapContentSize::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_SetFollowMapContentSize, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'WBP_MapHud_C_SetFollowMapContentSize::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.SetMoveContentPosition
// 0x0018 (0x0018 - 0x0000)
struct WBP_MapHud_C_SetMoveContentPosition final
{
public:
	struct FVector2D                              Pos;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_SetMoveContentPosition) == 0x000008, "Wrong alignment on WBP_MapHud_C_SetMoveContentPosition");
static_assert(sizeof(WBP_MapHud_C_SetMoveContentPosition) == 0x000018, "Wrong size on WBP_MapHud_C_SetMoveContentPosition");
static_assert(offsetof(WBP_MapHud_C_SetMoveContentPosition, Pos) == 0x000000, "Member 'WBP_MapHud_C_SetMoveContentPosition::Pos' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_SetMoveContentPosition, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000010, "Member 'WBP_MapHud_C_SetMoveContentPosition::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_MapHud_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_Tick) == 0x000004, "Wrong alignment on WBP_MapHud_C_Tick");
static_assert(sizeof(WBP_MapHud_C_Tick) == 0x00003C, "Wrong size on WBP_MapHud_C_Tick");
static_assert(offsetof(WBP_MapHud_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_MapHud_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_MapHud_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.ToggleTick
// 0x0001 (0x0001 - 0x0000)
struct WBP_MapHud_C_ToggleTick final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_ToggleTick) == 0x000001, "Wrong alignment on WBP_MapHud_C_ToggleTick");
static_assert(sizeof(WBP_MapHud_C_ToggleTick) == 0x000001, "Wrong size on WBP_MapHud_C_ToggleTick");
static_assert(offsetof(WBP_MapHud_C_ToggleTick, Enable) == 0x000000, "Member 'WBP_MapHud_C_ToggleTick::Enable' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.UpdateContentSize
// 0x0008 (0x0008 - 0x0000)
struct WBP_MapHud_C_UpdateContentSize final
{
public:
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_UpdateContentSize) == 0x000008, "Wrong alignment on WBP_MapHud_C_UpdateContentSize");
static_assert(sizeof(WBP_MapHud_C_UpdateContentSize) == 0x000008, "Wrong size on WBP_MapHud_C_UpdateContentSize");
static_assert(offsetof(WBP_MapHud_C_UpdateContentSize, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000000, "Member 'WBP_MapHud_C_UpdateContentSize::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.UpdateInertiaMoving
// 0x0078 (0x0078 - 0x0000)
struct WBP_MapHud_C_UpdateInertiaMoving final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DistanceSquared2D_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMoveRootPosOutOfRange_isOut;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMoveRootPosOutOfRange_isOutMinX;        // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMoveRootPosOutOfRange_isOutMaxX;        // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMoveRootPosOutOfRange_isOutMinY;        // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMoveRootPosOutOfRange_isOutMaxY;        // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_1;     // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_UpdateInertiaMoving) == 0x000008, "Wrong alignment on WBP_MapHud_C_UpdateInertiaMoving");
static_assert(sizeof(WBP_MapHud_C_UpdateInertiaMoving) == 0x000078, "Wrong size on WBP_MapHud_C_UpdateInertiaMoving");
static_assert(offsetof(WBP_MapHud_C_UpdateInertiaMoving, DeltaTime) == 0x000000, "Member 'WBP_MapHud_C_UpdateInertiaMoving::DeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateInertiaMoving, CallFunc_DistanceSquared2D_ReturnValue) == 0x000008, "Member 'WBP_MapHud_C_UpdateInertiaMoving::CallFunc_DistanceSquared2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateInertiaMoving, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000010, "Member 'WBP_MapHud_C_UpdateInertiaMoving::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateInertiaMoving, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000018, "Member 'WBP_MapHud_C_UpdateInertiaMoving::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateInertiaMoving, CallFunc_GetPosition_ReturnValue) == 0x000020, "Member 'WBP_MapHud_C_UpdateInertiaMoving::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateInertiaMoving, CallFunc_IsMoveRootPosOutOfRange_isOut) == 0x000030, "Member 'WBP_MapHud_C_UpdateInertiaMoving::CallFunc_IsMoveRootPosOutOfRange_isOut' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateInertiaMoving, CallFunc_IsMoveRootPosOutOfRange_isOutMinX) == 0x000031, "Member 'WBP_MapHud_C_UpdateInertiaMoving::CallFunc_IsMoveRootPosOutOfRange_isOutMinX' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateInertiaMoving, CallFunc_IsMoveRootPosOutOfRange_isOutMaxX) == 0x000032, "Member 'WBP_MapHud_C_UpdateInertiaMoving::CallFunc_IsMoveRootPosOutOfRange_isOutMaxX' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateInertiaMoving, CallFunc_IsMoveRootPosOutOfRange_isOutMinY) == 0x000033, "Member 'WBP_MapHud_C_UpdateInertiaMoving::CallFunc_IsMoveRootPosOutOfRange_isOutMinY' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateInertiaMoving, CallFunc_IsMoveRootPosOutOfRange_isOutMaxY) == 0x000034, "Member 'WBP_MapHud_C_UpdateInertiaMoving::CallFunc_IsMoveRootPosOutOfRange_isOutMaxY' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateInertiaMoving, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'WBP_MapHud_C_UpdateInertiaMoving::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateInertiaMoving, CallFunc_SelectFloat_ReturnValue) == 0x000040, "Member 'WBP_MapHud_C_UpdateInertiaMoving::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateInertiaMoving, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000048, "Member 'WBP_MapHud_C_UpdateInertiaMoving::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateInertiaMoving, CallFunc_Multiply_Vector2DFloat_ReturnValue_1) == 0x000058, "Member 'WBP_MapHud_C_UpdateInertiaMoving::CallFunc_Multiply_Vector2DFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateInertiaMoving, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000068, "Member 'WBP_MapHud_C_UpdateInertiaMoving::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.UpdateMapRootConstraintInfo
// 0x0100 (0x0100 - 0x0000)
struct WBP_MapHud_C_UpdateMapRootConstraintInfo final
{
public:
	struct FGeometry                              Geometry;                                          // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue_1;                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSize_ReturnValue;                      // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue_2;                       // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue_3;                       // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_UpdateMapRootConstraintInfo) == 0x000008, "Wrong alignment on WBP_MapHud_C_UpdateMapRootConstraintInfo");
static_assert(sizeof(WBP_MapHud_C_UpdateMapRootConstraintInfo) == 0x000100, "Wrong size on WBP_MapHud_C_UpdateMapRootConstraintInfo");
static_assert(offsetof(WBP_MapHud_C_UpdateMapRootConstraintInfo, Geometry) == 0x000000, "Member 'WBP_MapHud_C_UpdateMapRootConstraintInfo::Geometry' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateMapRootConstraintInfo, CallFunc_FMin_ReturnValue) == 0x000038, "Member 'WBP_MapHud_C_UpdateMapRootConstraintInfo::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateMapRootConstraintInfo, CallFunc_FMin_ReturnValue_1) == 0x000040, "Member 'WBP_MapHud_C_UpdateMapRootConstraintInfo::CallFunc_FMin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateMapRootConstraintInfo, CallFunc_GetLocalSize_ReturnValue) == 0x000048, "Member 'WBP_MapHud_C_UpdateMapRootConstraintInfo::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateMapRootConstraintInfo, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000058, "Member 'WBP_MapHud_C_UpdateMapRootConstraintInfo::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateMapRootConstraintInfo, CallFunc_GetSize_ReturnValue) == 0x000060, "Member 'WBP_MapHud_C_UpdateMapRootConstraintInfo::CallFunc_GetSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateMapRootConstraintInfo, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x000070, "Member 'WBP_MapHud_C_UpdateMapRootConstraintInfo::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateMapRootConstraintInfo, CallFunc_BreakVector2D_X) == 0x000080, "Member 'WBP_MapHud_C_UpdateMapRootConstraintInfo::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateMapRootConstraintInfo, CallFunc_BreakVector2D_Y) == 0x000088, "Member 'WBP_MapHud_C_UpdateMapRootConstraintInfo::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateMapRootConstraintInfo, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000090, "Member 'WBP_MapHud_C_UpdateMapRootConstraintInfo::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateMapRootConstraintInfo, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'WBP_MapHud_C_UpdateMapRootConstraintInfo::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateMapRootConstraintInfo, CallFunc_BreakVector2D_X_1) == 0x0000A8, "Member 'WBP_MapHud_C_UpdateMapRootConstraintInfo::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateMapRootConstraintInfo, CallFunc_BreakVector2D_Y_1) == 0x0000B0, "Member 'WBP_MapHud_C_UpdateMapRootConstraintInfo::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateMapRootConstraintInfo, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'WBP_MapHud_C_UpdateMapRootConstraintInfo::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateMapRootConstraintInfo, CallFunc_FMin_ReturnValue_2) == 0x0000C0, "Member 'WBP_MapHud_C_UpdateMapRootConstraintInfo::CallFunc_FMin_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateMapRootConstraintInfo, CallFunc_FMin_ReturnValue_3) == 0x0000C8, "Member 'WBP_MapHud_C_UpdateMapRootConstraintInfo::CallFunc_FMin_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateMapRootConstraintInfo, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000D0, "Member 'WBP_MapHud_C_UpdateMapRootConstraintInfo::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateMapRootConstraintInfo, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000D8, "Member 'WBP_MapHud_C_UpdateMapRootConstraintInfo::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateMapRootConstraintInfo, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000E0, "Member 'WBP_MapHud_C_UpdateMapRootConstraintInfo::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateMapRootConstraintInfo, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0000E8, "Member 'WBP_MapHud_C_UpdateMapRootConstraintInfo::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateMapRootConstraintInfo, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000F0, "Member 'WBP_MapHud_C_UpdateMapRootConstraintInfo::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateMapRootConstraintInfo, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000F8, "Member 'WBP_MapHud_C_UpdateMapRootConstraintInfo::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.UpdateMapWindowRange
// 0x00A8 (0x00A8 - 0x0000)
struct WBP_MapHud_C_UpdateMapWindowRange final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FVector2D                              MoveDiff;                                          // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_NT_ConvertWindowPosToMapPos_ReturnValue;  // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_NT_ConvertWindowPosToMapPos_ReturnValue_1; // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_UpdateMapWindowRange) == 0x000008, "Wrong alignment on WBP_MapHud_C_UpdateMapWindowRange");
static_assert(sizeof(WBP_MapHud_C_UpdateMapWindowRange) == 0x0000A8, "Wrong size on WBP_MapHud_C_UpdateMapWindowRange");
static_assert(offsetof(WBP_MapHud_C_UpdateMapWindowRange, MyGeometry) == 0x000000, "Member 'WBP_MapHud_C_UpdateMapWindowRange::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateMapWindowRange, MoveDiff) == 0x000038, "Member 'WBP_MapHud_C_UpdateMapWindowRange::MoveDiff' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateMapWindowRange, CallFunc_MakeVector2D_ReturnValue) == 0x000048, "Member 'WBP_MapHud_C_UpdateMapWindowRange::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateMapWindowRange, CallFunc_GetLocalSize_ReturnValue) == 0x000058, "Member 'WBP_MapHud_C_UpdateMapWindowRange::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateMapWindowRange, CallFunc_NT_ConvertWindowPosToMapPos_ReturnValue) == 0x000068, "Member 'WBP_MapHud_C_UpdateMapWindowRange::CallFunc_NT_ConvertWindowPosToMapPos_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateMapWindowRange, CallFunc_NT_ConvertWindowPosToMapPos_ReturnValue_1) == 0x000078, "Member 'WBP_MapHud_C_UpdateMapWindowRange::CallFunc_NT_ConvertWindowPosToMapPos_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateMapWindowRange, CallFunc_BreakVector2D_X) == 0x000088, "Member 'WBP_MapHud_C_UpdateMapWindowRange::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateMapWindowRange, CallFunc_BreakVector2D_Y) == 0x000090, "Member 'WBP_MapHud_C_UpdateMapWindowRange::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateMapWindowRange, CallFunc_BreakVector2D_X_1) == 0x000098, "Member 'WBP_MapHud_C_UpdateMapWindowRange::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateMapWindowRange, CallFunc_BreakVector2D_Y_1) == 0x0000A0, "Member 'WBP_MapHud_C_UpdateMapWindowRange::CallFunc_BreakVector2D_Y_1' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.UpdateScrollToTarget
// 0x0168 (0x0168 - 0x0000)
struct WBP_MapHud_C_UpdateScrollToTarget final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Progress;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_NT_ConvertMapPosToWindowPos_ReturnValue;  // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_NT_ConvertMapPosToWindowPos_ReturnValue_1; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetWindowSize_size;                       // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_NT_ConstraintMoveRootPos_ReturnValue;     // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue_1;                // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetWindowSize_size_1;                     // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_1;     // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue_1;  // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue_1;       // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_NT_ConstraintMoveRootPos_ReturnValue_1;   // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue_1;                       // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue_2;  // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Ease_ReturnValue;                         // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_2;     // 0x0148(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue_2;       // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_UpdateScrollToTarget) == 0x000008, "Wrong alignment on WBP_MapHud_C_UpdateScrollToTarget");
static_assert(sizeof(WBP_MapHud_C_UpdateScrollToTarget) == 0x000168, "Wrong size on WBP_MapHud_C_UpdateScrollToTarget");
static_assert(offsetof(WBP_MapHud_C_UpdateScrollToTarget, DeltaTime) == 0x000000, "Member 'WBP_MapHud_C_UpdateScrollToTarget::DeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateScrollToTarget, Progress) == 0x000008, "Member 'WBP_MapHud_C_UpdateScrollToTarget::Progress' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateScrollToTarget, CallFunc_NT_ConvertMapPosToWindowPos_ReturnValue) == 0x000010, "Member 'WBP_MapHud_C_UpdateScrollToTarget::CallFunc_NT_ConvertMapPosToWindowPos_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateScrollToTarget, CallFunc_NT_ConvertMapPosToWindowPos_ReturnValue_1) == 0x000020, "Member 'WBP_MapHud_C_UpdateScrollToTarget::CallFunc_NT_ConvertMapPosToWindowPos_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateScrollToTarget, CallFunc_GetWindowSize_size) == 0x000030, "Member 'WBP_MapHud_C_UpdateScrollToTarget::CallFunc_GetWindowSize_size' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateScrollToTarget, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000040, "Member 'WBP_MapHud_C_UpdateScrollToTarget::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateScrollToTarget, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000048, "Member 'WBP_MapHud_C_UpdateScrollToTarget::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateScrollToTarget, CallFunc_GetPosition_ReturnValue) == 0x000058, "Member 'WBP_MapHud_C_UpdateScrollToTarget::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateScrollToTarget, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000068, "Member 'WBP_MapHud_C_UpdateScrollToTarget::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateScrollToTarget, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000078, "Member 'WBP_MapHud_C_UpdateScrollToTarget::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateScrollToTarget, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000088, "Member 'WBP_MapHud_C_UpdateScrollToTarget::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateScrollToTarget, CallFunc_NT_ConstraintMoveRootPos_ReturnValue) == 0x000090, "Member 'WBP_MapHud_C_UpdateScrollToTarget::CallFunc_NT_ConstraintMoveRootPos_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateScrollToTarget, CallFunc_GetPosition_ReturnValue_1) == 0x0000A0, "Member 'WBP_MapHud_C_UpdateScrollToTarget::CallFunc_GetPosition_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateScrollToTarget, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'WBP_MapHud_C_UpdateScrollToTarget::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateScrollToTarget, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'WBP_MapHud_C_UpdateScrollToTarget::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateScrollToTarget, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'WBP_MapHud_C_UpdateScrollToTarget::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateScrollToTarget, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'WBP_MapHud_C_UpdateScrollToTarget::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateScrollToTarget, CallFunc_GetWindowSize_size_1) == 0x0000D0, "Member 'WBP_MapHud_C_UpdateScrollToTarget::CallFunc_GetWindowSize_size_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateScrollToTarget, CallFunc_Multiply_Vector2DFloat_ReturnValue_1) == 0x0000E0, "Member 'WBP_MapHud_C_UpdateScrollToTarget::CallFunc_Multiply_Vector2DFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateScrollToTarget, CallFunc_Subtract_Vector2DVector2D_ReturnValue_1) == 0x0000F0, "Member 'WBP_MapHud_C_UpdateScrollToTarget::CallFunc_Subtract_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateScrollToTarget, CallFunc_FMin_ReturnValue) == 0x000100, "Member 'WBP_MapHud_C_UpdateScrollToTarget::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateScrollToTarget, CallFunc_Add_Vector2DVector2D_ReturnValue_1) == 0x000108, "Member 'WBP_MapHud_C_UpdateScrollToTarget::CallFunc_Add_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateScrollToTarget, CallFunc_NT_ConstraintMoveRootPos_ReturnValue_1) == 0x000118, "Member 'WBP_MapHud_C_UpdateScrollToTarget::CallFunc_NT_ConstraintMoveRootPos_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateScrollToTarget, CallFunc_FMin_ReturnValue_1) == 0x000128, "Member 'WBP_MapHud_C_UpdateScrollToTarget::CallFunc_FMin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateScrollToTarget, CallFunc_Subtract_Vector2DVector2D_ReturnValue_2) == 0x000130, "Member 'WBP_MapHud_C_UpdateScrollToTarget::CallFunc_Subtract_Vector2DVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateScrollToTarget, CallFunc_Ease_ReturnValue) == 0x000140, "Member 'WBP_MapHud_C_UpdateScrollToTarget::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateScrollToTarget, CallFunc_Multiply_Vector2DFloat_ReturnValue_2) == 0x000148, "Member 'WBP_MapHud_C_UpdateScrollToTarget::CallFunc_Multiply_Vector2DFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_UpdateScrollToTarget, CallFunc_Add_Vector2DVector2D_ReturnValue_2) == 0x000158, "Member 'WBP_MapHud_C_UpdateScrollToTarget::CallFunc_Add_Vector2DVector2D_ReturnValue_2' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.ZoomMap
// 0x00D8 (0x00D8 - 0x0000)
struct WBP_MapHud_C_ZoomMap final
{
public:
	double                                        Scale;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              windowPos;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              absolutePos;                                       // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              prevMapPos;                                        // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_NT_ConvertWindowPosToMapPos_ReturnValue;  // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0048(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_NT_ConvertMapPosToWindowPos_ReturnValue;  // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_ZoomMap) == 0x000008, "Wrong alignment on WBP_MapHud_C_ZoomMap");
static_assert(sizeof(WBP_MapHud_C_ZoomMap) == 0x0000D8, "Wrong size on WBP_MapHud_C_ZoomMap");
static_assert(offsetof(WBP_MapHud_C_ZoomMap, Scale) == 0x000000, "Member 'WBP_MapHud_C_ZoomMap::Scale' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ZoomMap, windowPos) == 0x000008, "Member 'WBP_MapHud_C_ZoomMap::windowPos' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ZoomMap, absolutePos) == 0x000018, "Member 'WBP_MapHud_C_ZoomMap::absolutePos' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ZoomMap, prevMapPos) == 0x000028, "Member 'WBP_MapHud_C_ZoomMap::prevMapPos' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ZoomMap, CallFunc_NT_ConvertWindowPosToMapPos_ReturnValue) == 0x000038, "Member 'WBP_MapHud_C_ZoomMap::CallFunc_NT_ConvertWindowPosToMapPos_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ZoomMap, CallFunc_GetCachedGeometry_ReturnValue) == 0x000048, "Member 'WBP_MapHud_C_ZoomMap::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ZoomMap, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000080, "Member 'WBP_MapHud_C_ZoomMap::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ZoomMap, CallFunc_GetPosition_ReturnValue) == 0x000088, "Member 'WBP_MapHud_C_ZoomMap::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ZoomMap, CallFunc_NT_ConvertMapPosToWindowPos_ReturnValue) == 0x000098, "Member 'WBP_MapHud_C_ZoomMap::CallFunc_NT_ConvertMapPosToWindowPos_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ZoomMap, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0000A8, "Member 'WBP_MapHud_C_ZoomMap::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ZoomMap, CallFunc_MakeVector2D_ReturnValue) == 0x0000B8, "Member 'WBP_MapHud_C_ZoomMap::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapHud_C_ZoomMap, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x0000C8, "Member 'WBP_MapHud_C_ZoomMap::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");

// Function WBP_MapHud.WBP_MapHud_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct WBP_MapHud_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapHud_C_GetModuleName) == 0x000008, "Wrong alignment on WBP_MapHud_C_GetModuleName");
static_assert(sizeof(WBP_MapHud_C_GetModuleName) == 0x000010, "Wrong size on WBP_MapHud_C_GetModuleName");
static_assert(offsetof(WBP_MapHud_C_GetModuleName, ReturnValue) == 0x000000, "Member 'WBP_MapHud_C_GetModuleName::ReturnValue' has a wrong offset!");

}

