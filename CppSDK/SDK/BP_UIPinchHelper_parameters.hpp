#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UIPinchHelper

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_UIPinchHelper.BP_UIPinchHelper_C.CalculateDistance
// 0x0048 (0x0048 - 0x0000)
struct BP_UIPinchHelper_C_CalculateDistance final
{
public:
	double                                        Distance;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Map_Find_Value;                           // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Map_Find_Value_1;                         // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Distance2D_ReturnValue;                   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIPinchHelper_C_CalculateDistance) == 0x000008, "Wrong alignment on BP_UIPinchHelper_C_CalculateDistance");
static_assert(sizeof(BP_UIPinchHelper_C_CalculateDistance) == 0x000048, "Wrong size on BP_UIPinchHelper_C_CalculateDistance");
static_assert(offsetof(BP_UIPinchHelper_C_CalculateDistance, Distance) == 0x000000, "Member 'BP_UIPinchHelper_C_CalculateDistance::Distance' has a wrong offset!");
static_assert(offsetof(BP_UIPinchHelper_C_CalculateDistance, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'BP_UIPinchHelper_C_CalculateDistance::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIPinchHelper_C_CalculateDistance, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00000C, "Member 'BP_UIPinchHelper_C_CalculateDistance::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIPinchHelper_C_CalculateDistance, CallFunc_Map_Find_Value) == 0x000010, "Member 'BP_UIPinchHelper_C_CalculateDistance::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_UIPinchHelper_C_CalculateDistance, CallFunc_Map_Find_ReturnValue) == 0x000020, "Member 'BP_UIPinchHelper_C_CalculateDistance::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIPinchHelper_C_CalculateDistance, CallFunc_Map_Find_Value_1) == 0x000028, "Member 'BP_UIPinchHelper_C_CalculateDistance::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_UIPinchHelper_C_CalculateDistance, CallFunc_Map_Find_ReturnValue_1) == 0x000038, "Member 'BP_UIPinchHelper_C_CalculateDistance::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UIPinchHelper_C_CalculateDistance, CallFunc_Distance2D_ReturnValue) == 0x000040, "Member 'BP_UIPinchHelper_C_CalculateDistance::CallFunc_Distance2D_ReturnValue' has a wrong offset!");

// Function BP_UIPinchHelper.BP_UIPinchHelper_C.HandleMouseMove
// 0x00C0 (0x00C0 - 0x0000)
struct BP_UIPinchHelper_C_HandleMouseMove final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm)
	double                                        NewLocalVar;                                       // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        distanceDelta;                                     // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue; // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PointerEvent_GetPointerIndex_ReturnValue; // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasOnePointerPressed_bHas;                // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldBanPointer_shouldBan;               // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPointerIndexInArray_bContain;           // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x009F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_CalculateDistance_distance;               // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTwoPointerPressed_bHas;                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIPinchHelper_C_HandleMouseMove) == 0x000008, "Wrong alignment on BP_UIPinchHelper_C_HandleMouseMove");
static_assert(sizeof(BP_UIPinchHelper_C_HandleMouseMove) == 0x0000C0, "Wrong size on BP_UIPinchHelper_C_HandleMouseMove");
static_assert(offsetof(BP_UIPinchHelper_C_HandleMouseMove, MouseEvent) == 0x000000, "Member 'BP_UIPinchHelper_C_HandleMouseMove::MouseEvent' has a wrong offset!");
static_assert(offsetof(BP_UIPinchHelper_C_HandleMouseMove, NewLocalVar) == 0x000078, "Member 'BP_UIPinchHelper_C_HandleMouseMove::NewLocalVar' has a wrong offset!");
static_assert(offsetof(BP_UIPinchHelper_C_HandleMouseMove, distanceDelta) == 0x000080, "Member 'BP_UIPinchHelper_C_HandleMouseMove::distanceDelta' has a wrong offset!");
static_assert(offsetof(BP_UIPinchHelper_C_HandleMouseMove, CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue) == 0x000088, "Member 'BP_UIPinchHelper_C_HandleMouseMove::CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIPinchHelper_C_HandleMouseMove, CallFunc_PointerEvent_GetPointerIndex_ReturnValue) == 0x000098, "Member 'BP_UIPinchHelper_C_HandleMouseMove::CallFunc_PointerEvent_GetPointerIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIPinchHelper_C_HandleMouseMove, CallFunc_HasOnePointerPressed_bHas) == 0x00009C, "Member 'BP_UIPinchHelper_C_HandleMouseMove::CallFunc_HasOnePointerPressed_bHas' has a wrong offset!");
static_assert(offsetof(BP_UIPinchHelper_C_HandleMouseMove, CallFunc_ShouldBanPointer_shouldBan) == 0x00009D, "Member 'BP_UIPinchHelper_C_HandleMouseMove::CallFunc_ShouldBanPointer_shouldBan' has a wrong offset!");
static_assert(offsetof(BP_UIPinchHelper_C_HandleMouseMove, CallFunc_IsPointerIndexInArray_bContain) == 0x00009E, "Member 'BP_UIPinchHelper_C_HandleMouseMove::CallFunc_IsPointerIndexInArray_bContain' has a wrong offset!");
static_assert(offsetof(BP_UIPinchHelper_C_HandleMouseMove, CallFunc_BooleanAND_ReturnValue) == 0x00009F, "Member 'BP_UIPinchHelper_C_HandleMouseMove::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIPinchHelper_C_HandleMouseMove, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'BP_UIPinchHelper_C_HandleMouseMove::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIPinchHelper_C_HandleMouseMove, CallFunc_CalculateDistance_distance) == 0x0000A8, "Member 'BP_UIPinchHelper_C_HandleMouseMove::CallFunc_CalculateDistance_distance' has a wrong offset!");
static_assert(offsetof(BP_UIPinchHelper_C_HandleMouseMove, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'BP_UIPinchHelper_C_HandleMouseMove::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIPinchHelper_C_HandleMouseMove, CallFunc_HasTwoPointerPressed_bHas) == 0x0000B8, "Member 'BP_UIPinchHelper_C_HandleMouseMove::CallFunc_HasTwoPointerPressed_bHas' has a wrong offset!");
static_assert(offsetof(BP_UIPinchHelper_C_HandleMouseMove, CallFunc_BooleanAND_ReturnValue_1) == 0x0000B9, "Member 'BP_UIPinchHelper_C_HandleMouseMove::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_UIPinchHelper.BP_UIPinchHelper_C.HandleMousePress
// 0x00B0 (0x00B0 - 0x0000)
struct BP_UIPinchHelper_C_HandleMousePress final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FVector2D                              CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue; // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PointerEvent_GetPointerIndex_ReturnValue; // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_CalculateDistance_distance;               // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldBanPointer_shouldBan;               // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_32ByteByte_ReturnValue;        // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIPinchHelper_C_HandleMousePress) == 0x000008, "Wrong alignment on BP_UIPinchHelper_C_HandleMousePress");
static_assert(sizeof(BP_UIPinchHelper_C_HandleMousePress) == 0x0000B0, "Wrong size on BP_UIPinchHelper_C_HandleMousePress");
static_assert(offsetof(BP_UIPinchHelper_C_HandleMousePress, MouseEvent) == 0x000000, "Member 'BP_UIPinchHelper_C_HandleMousePress::MouseEvent' has a wrong offset!");
static_assert(offsetof(BP_UIPinchHelper_C_HandleMousePress, CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue) == 0x000078, "Member 'BP_UIPinchHelper_C_HandleMousePress::CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIPinchHelper_C_HandleMousePress, CallFunc_PointerEvent_GetPointerIndex_ReturnValue) == 0x000088, "Member 'BP_UIPinchHelper_C_HandleMousePress::CallFunc_PointerEvent_GetPointerIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIPinchHelper_C_HandleMousePress, CallFunc_CalculateDistance_distance) == 0x000090, "Member 'BP_UIPinchHelper_C_HandleMousePress::CallFunc_CalculateDistance_distance' has a wrong offset!");
static_assert(offsetof(BP_UIPinchHelper_C_HandleMousePress, CallFunc_ShouldBanPointer_shouldBan) == 0x000098, "Member 'BP_UIPinchHelper_C_HandleMousePress::CallFunc_ShouldBanPointer_shouldBan' has a wrong offset!");
static_assert(offsetof(BP_UIPinchHelper_C_HandleMousePress, CallFunc_Array_Length_ReturnValue) == 0x00009C, "Member 'BP_UIPinchHelper_C_HandleMousePress::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIPinchHelper_C_HandleMousePress, CallFunc_EqualEqual_32ByteByte_ReturnValue) == 0x0000A0, "Member 'BP_UIPinchHelper_C_HandleMousePress::CallFunc_EqualEqual_32ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIPinchHelper_C_HandleMousePress, CallFunc_Array_AddUnique_ReturnValue) == 0x0000A4, "Member 'BP_UIPinchHelper_C_HandleMousePress::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIPinchHelper_C_HandleMousePress, CallFunc_Array_Length_ReturnValue_1) == 0x0000A8, "Member 'BP_UIPinchHelper_C_HandleMousePress::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UIPinchHelper_C_HandleMousePress, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000AC, "Member 'BP_UIPinchHelper_C_HandleMousePress::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_UIPinchHelper.BP_UIPinchHelper_C.HandleMouseRelease
// 0x0080 (0x0080 - 0x0000)
struct BP_UIPinchHelper_C_HandleMouseRelease final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         CallFunc_PointerEvent_GetPointerIndex_ReturnValue; // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldBanPointer_shouldBan;               // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x007F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIPinchHelper_C_HandleMouseRelease) == 0x000008, "Wrong alignment on BP_UIPinchHelper_C_HandleMouseRelease");
static_assert(sizeof(BP_UIPinchHelper_C_HandleMouseRelease) == 0x000080, "Wrong size on BP_UIPinchHelper_C_HandleMouseRelease");
static_assert(offsetof(BP_UIPinchHelper_C_HandleMouseRelease, MouseEvent) == 0x000000, "Member 'BP_UIPinchHelper_C_HandleMouseRelease::MouseEvent' has a wrong offset!");
static_assert(offsetof(BP_UIPinchHelper_C_HandleMouseRelease, CallFunc_PointerEvent_GetPointerIndex_ReturnValue) == 0x000078, "Member 'BP_UIPinchHelper_C_HandleMouseRelease::CallFunc_PointerEvent_GetPointerIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIPinchHelper_C_HandleMouseRelease, CallFunc_ShouldBanPointer_shouldBan) == 0x00007C, "Member 'BP_UIPinchHelper_C_HandleMouseRelease::CallFunc_ShouldBanPointer_shouldBan' has a wrong offset!");
static_assert(offsetof(BP_UIPinchHelper_C_HandleMouseRelease, CallFunc_Array_RemoveItem_ReturnValue) == 0x00007D, "Member 'BP_UIPinchHelper_C_HandleMouseRelease::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIPinchHelper_C_HandleMouseRelease, CallFunc_Array_Contains_ReturnValue) == 0x00007E, "Member 'BP_UIPinchHelper_C_HandleMouseRelease::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIPinchHelper_C_HandleMouseRelease, CallFunc_Map_Remove_ReturnValue) == 0x00007F, "Member 'BP_UIPinchHelper_C_HandleMouseRelease::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");

// Function BP_UIPinchHelper.BP_UIPinchHelper_C.HasOnePointerPressed
// 0x000C (0x000C - 0x0000)
struct BP_UIPinchHelper_C_HasOnePointerPressed final
{
public:
	bool                                          bHas;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_32ByteByte_ReturnValue;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIPinchHelper_C_HasOnePointerPressed) == 0x000004, "Wrong alignment on BP_UIPinchHelper_C_HasOnePointerPressed");
static_assert(sizeof(BP_UIPinchHelper_C_HasOnePointerPressed) == 0x00000C, "Wrong size on BP_UIPinchHelper_C_HasOnePointerPressed");
static_assert(offsetof(BP_UIPinchHelper_C_HasOnePointerPressed, bHas) == 0x000000, "Member 'BP_UIPinchHelper_C_HasOnePointerPressed::bHas' has a wrong offset!");
static_assert(offsetof(BP_UIPinchHelper_C_HasOnePointerPressed, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BP_UIPinchHelper_C_HasOnePointerPressed::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIPinchHelper_C_HasOnePointerPressed, CallFunc_EqualEqual_32ByteByte_ReturnValue) == 0x000008, "Member 'BP_UIPinchHelper_C_HasOnePointerPressed::CallFunc_EqualEqual_32ByteByte_ReturnValue' has a wrong offset!");

// Function BP_UIPinchHelper.BP_UIPinchHelper_C.HasTwoPointerPressed
// 0x000C (0x000C - 0x0000)
struct BP_UIPinchHelper_C_HasTwoPointerPressed final
{
public:
	bool                                          bHas;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_32ByteByte_ReturnValue;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIPinchHelper_C_HasTwoPointerPressed) == 0x000004, "Wrong alignment on BP_UIPinchHelper_C_HasTwoPointerPressed");
static_assert(sizeof(BP_UIPinchHelper_C_HasTwoPointerPressed) == 0x00000C, "Wrong size on BP_UIPinchHelper_C_HasTwoPointerPressed");
static_assert(offsetof(BP_UIPinchHelper_C_HasTwoPointerPressed, bHas) == 0x000000, "Member 'BP_UIPinchHelper_C_HasTwoPointerPressed::bHas' has a wrong offset!");
static_assert(offsetof(BP_UIPinchHelper_C_HasTwoPointerPressed, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BP_UIPinchHelper_C_HasTwoPointerPressed::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIPinchHelper_C_HasTwoPointerPressed, CallFunc_EqualEqual_32ByteByte_ReturnValue) == 0x000008, "Member 'BP_UIPinchHelper_C_HasTwoPointerPressed::CallFunc_EqualEqual_32ByteByte_ReturnValue' has a wrong offset!");

// Function BP_UIPinchHelper.BP_UIPinchHelper_C.IsPointerIndexInArray
// 0x0008 (0x0008 - 0x0000)
struct BP_UIPinchHelper_C_IsPointerIndexInArray final
{
public:
	int32                                         PointerIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bContain;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIPinchHelper_C_IsPointerIndexInArray) == 0x000004, "Wrong alignment on BP_UIPinchHelper_C_IsPointerIndexInArray");
static_assert(sizeof(BP_UIPinchHelper_C_IsPointerIndexInArray) == 0x000008, "Wrong size on BP_UIPinchHelper_C_IsPointerIndexInArray");
static_assert(offsetof(BP_UIPinchHelper_C_IsPointerIndexInArray, PointerIndex) == 0x000000, "Member 'BP_UIPinchHelper_C_IsPointerIndexInArray::PointerIndex' has a wrong offset!");
static_assert(offsetof(BP_UIPinchHelper_C_IsPointerIndexInArray, bContain) == 0x000004, "Member 'BP_UIPinchHelper_C_IsPointerIndexInArray::bContain' has a wrong offset!");
static_assert(offsetof(BP_UIPinchHelper_C_IsPointerIndexInArray, CallFunc_Array_Contains_ReturnValue) == 0x000005, "Member 'BP_UIPinchHelper_C_IsPointerIndexInArray::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function BP_UIPinchHelper.BP_UIPinchHelper_C.SetBanMouse
// 0x0001 (0x0001 - 0x0000)
struct BP_UIPinchHelper_C_SetBanMouse final
{
public:
	bool                                          bBanMouse;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIPinchHelper_C_SetBanMouse) == 0x000001, "Wrong alignment on BP_UIPinchHelper_C_SetBanMouse");
static_assert(sizeof(BP_UIPinchHelper_C_SetBanMouse) == 0x000001, "Wrong size on BP_UIPinchHelper_C_SetBanMouse");
static_assert(offsetof(BP_UIPinchHelper_C_SetBanMouse, bBanMouse) == 0x000000, "Member 'BP_UIPinchHelper_C_SetBanMouse::bBanMouse' has a wrong offset!");

// Function BP_UIPinchHelper.BP_UIPinchHelper_C.ShouldBanPointer
// 0x0008 (0x0008 - 0x0000)
struct BP_UIPinchHelper_C_ShouldBanPointer final
{
public:
	int32                                         PointerIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          shouldBan;                                         // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_32ByteByte_ReturnValue;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIPinchHelper_C_ShouldBanPointer) == 0x000004, "Wrong alignment on BP_UIPinchHelper_C_ShouldBanPointer");
static_assert(sizeof(BP_UIPinchHelper_C_ShouldBanPointer) == 0x000008, "Wrong size on BP_UIPinchHelper_C_ShouldBanPointer");
static_assert(offsetof(BP_UIPinchHelper_C_ShouldBanPointer, PointerIndex) == 0x000000, "Member 'BP_UIPinchHelper_C_ShouldBanPointer::PointerIndex' has a wrong offset!");
static_assert(offsetof(BP_UIPinchHelper_C_ShouldBanPointer, shouldBan) == 0x000004, "Member 'BP_UIPinchHelper_C_ShouldBanPointer::shouldBan' has a wrong offset!");
static_assert(offsetof(BP_UIPinchHelper_C_ShouldBanPointer, CallFunc_EqualEqual_32ByteByte_ReturnValue) == 0x000005, "Member 'BP_UIPinchHelper_C_ShouldBanPointer::CallFunc_EqualEqual_32ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIPinchHelper_C_ShouldBanPointer, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'BP_UIPinchHelper_C_ShouldBanPointer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

