#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Nikki_HighHeel_CtrlRig

#include "Basic.hpp"

#include "ControlRig_classes.hpp"


namespace SDK
{

// ControlRigBlueprintGeneratedClass Nikki_HighHeel_CtrlRig.Nikki_HighHeel_CtrlRig_C
// 0x0020 (0x0AC8 - 0x0AA8)
class UNikki_HighHeel_CtrlRig_C final : public UControlRig
{
public:
	double                                        HighHeel_Ankle_Angle;                              // 0x0AA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HighHeel_Toe_Angle;                                // 0x0AB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HighHeel_Height;                                   // 0x0AB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DebugMode;                                         // 0x0AC0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableMaxAnkleAngleLimit;                          // 0x0AC1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Nikki_HighHeel_CtrlRig_C">();
	}
	static class UNikki_HighHeel_CtrlRig_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNikki_HighHeel_CtrlRig_C>();
	}
};
static_assert(alignof(UNikki_HighHeel_CtrlRig_C) == 0x000008, "Wrong alignment on UNikki_HighHeel_CtrlRig_C");
static_assert(sizeof(UNikki_HighHeel_CtrlRig_C) == 0x000AC8, "Wrong size on UNikki_HighHeel_CtrlRig_C");
static_assert(offsetof(UNikki_HighHeel_CtrlRig_C, HighHeel_Ankle_Angle) == 0x000AA8, "Member 'UNikki_HighHeel_CtrlRig_C::HighHeel_Ankle_Angle' has a wrong offset!");
static_assert(offsetof(UNikki_HighHeel_CtrlRig_C, HighHeel_Toe_Angle) == 0x000AB0, "Member 'UNikki_HighHeel_CtrlRig_C::HighHeel_Toe_Angle' has a wrong offset!");
static_assert(offsetof(UNikki_HighHeel_CtrlRig_C, HighHeel_Height) == 0x000AB8, "Member 'UNikki_HighHeel_CtrlRig_C::HighHeel_Height' has a wrong offset!");
static_assert(offsetof(UNikki_HighHeel_CtrlRig_C, DebugMode) == 0x000AC0, "Member 'UNikki_HighHeel_CtrlRig_C::DebugMode' has a wrong offset!");
static_assert(offsetof(UNikki_HighHeel_CtrlRig_C, EnableMaxAnkleAngleLimit) == 0x000AC1, "Member 'UNikki_HighHeel_CtrlRig_C::EnableMaxAnkleAngleLimit' has a wrong offset!");

}

