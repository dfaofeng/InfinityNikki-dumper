#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Challenge_AimList

#include "Basic.hpp"

#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Challenge_AimList.WBP_Challenge_AimList_C
// 0x0058 (0x0348 - 0x02F0)
class UWBP_Challenge_AimList_C final : public UUserWidget
{
public:
	class UWidgetAnimation*                       FadeOut;                                           // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Ani_Change;                                        // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeIn;                                            // 0x0300(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Icon_AimType;                                      // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Effect_Glow;                                 // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Effect_Start;                                // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInvalidationBox*                       InvalidationBox_0;                                 // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Name_0;                                            // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNiagaraSystemWidget*                   UI_NS_Item_Change;                                 // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNiagaraSystemWidget*                   UI_NS_Start;                                       // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Challenge_Aim_Item_C*              WBP_Challenge_Aim_Item;                            // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Challenge_AimList_C">();
	}
	static class UWBP_Challenge_AimList_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Challenge_AimList_C>();
	}
};
static_assert(alignof(UWBP_Challenge_AimList_C) == 0x000008, "Wrong alignment on UWBP_Challenge_AimList_C");
static_assert(sizeof(UWBP_Challenge_AimList_C) == 0x000348, "Wrong size on UWBP_Challenge_AimList_C");
static_assert(offsetof(UWBP_Challenge_AimList_C, FadeOut) == 0x0002F0, "Member 'UWBP_Challenge_AimList_C::FadeOut' has a wrong offset!");
static_assert(offsetof(UWBP_Challenge_AimList_C, Ani_Change) == 0x0002F8, "Member 'UWBP_Challenge_AimList_C::Ani_Change' has a wrong offset!");
static_assert(offsetof(UWBP_Challenge_AimList_C, FadeIn) == 0x000300, "Member 'UWBP_Challenge_AimList_C::FadeIn' has a wrong offset!");
static_assert(offsetof(UWBP_Challenge_AimList_C, Icon_AimType) == 0x000308, "Member 'UWBP_Challenge_AimList_C::Icon_AimType' has a wrong offset!");
static_assert(offsetof(UWBP_Challenge_AimList_C, Image_Effect_Glow) == 0x000310, "Member 'UWBP_Challenge_AimList_C::Image_Effect_Glow' has a wrong offset!");
static_assert(offsetof(UWBP_Challenge_AimList_C, Image_Effect_Start) == 0x000318, "Member 'UWBP_Challenge_AimList_C::Image_Effect_Start' has a wrong offset!");
static_assert(offsetof(UWBP_Challenge_AimList_C, InvalidationBox_0) == 0x000320, "Member 'UWBP_Challenge_AimList_C::InvalidationBox_0' has a wrong offset!");
static_assert(offsetof(UWBP_Challenge_AimList_C, Name_0) == 0x000328, "Member 'UWBP_Challenge_AimList_C::Name_0' has a wrong offset!");
static_assert(offsetof(UWBP_Challenge_AimList_C, UI_NS_Item_Change) == 0x000330, "Member 'UWBP_Challenge_AimList_C::UI_NS_Item_Change' has a wrong offset!");
static_assert(offsetof(UWBP_Challenge_AimList_C, UI_NS_Start) == 0x000338, "Member 'UWBP_Challenge_AimList_C::UI_NS_Start' has a wrong offset!");
static_assert(offsetof(UWBP_Challenge_AimList_C, WBP_Challenge_Aim_Item) == 0x000340, "Member 'UWBP_Challenge_AimList_C::WBP_Challenge_Aim_Item' has a wrong offset!");

}

