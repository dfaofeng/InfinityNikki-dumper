#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerUTCInputComponent

#include "Basic.hpp"

#include "BP_PlayerUTCInputComponent_classes.hpp"
#include "BP_PlayerUTCInputComponent_parameters.hpp"


namespace SDK
{

// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.UTCTouch Input Manager
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EX6InputTouchEvent                      X6InputTouchEvent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETouchIndex                             FingerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerUTCInputComponent_C::UTCTouch_Input_Manager(EX6InputTouchEvent X6InputTouchEvent, ETouchIndex FingerIndex, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerUTCInputComponent_C", "UTCTouch Input Manager");

	Params::BP_PlayerUTCInputComponent_C_UTCTouch_Input_Manager Parms{};

	Parms.X6InputTouchEvent = X6InputTouchEvent;
	Parms.FingerIndex = FingerIndex;
	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.UpdateSwipeToMoveComponent
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUTCSwipeToMoveComponent_C*       SwipeToMoveComponent                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// EUTCControlTypeEnum                     ControlType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 InteractionOrigin                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 InteractionSize                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerUTCInputComponent_C::UpdateSwipeToMoveComponent(class UUTCSwipeToMoveComponent_C* SwipeToMoveComponent, EUTCControlTypeEnum ControlType, const struct FVector2D& InteractionOrigin, const struct FVector2D& InteractionSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerUTCInputComponent_C", "UpdateSwipeToMoveComponent");

	Params::BP_PlayerUTCInputComponent_C_UpdateSwipeToMoveComponent Parms{};

	Parms.SwipeToMoveComponent = SwipeToMoveComponent;
	Parms.ControlType = ControlType;
	Parms.InteractionOrigin = std::move(InteractionOrigin);
	Parms.InteractionSize = std::move(InteractionSize);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.UpdateJoystickComponent
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUTCJoystickComponent_C*          joystickComponent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// EUTCControlTypeEnum                     ControlType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 CenterPos                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 VisualSize                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 ThumbSize                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 InteractionOrigin                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 InteractionSize                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    LockPos                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    UseFloat                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 EdgeGapSize                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 PosOffset                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerUTCInputComponent_C::UpdateJoystickComponent(class UUTCJoystickComponent_C* joystickComponent, EUTCControlTypeEnum ControlType, const struct FVector2D& CenterPos, const struct FVector2D& VisualSize, const struct FVector2D& ThumbSize, const struct FVector2D& InteractionOrigin, const struct FVector2D& InteractionSize, bool LockPos, bool UseFloat, const struct FVector2D& EdgeGapSize, const struct FVector2D& PosOffset, double Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerUTCInputComponent_C", "UpdateJoystickComponent");

	Params::BP_PlayerUTCInputComponent_C_UpdateJoystickComponent Parms{};

	Parms.joystickComponent = joystickComponent;
	Parms.ControlType = ControlType;
	Parms.CenterPos = std::move(CenterPos);
	Parms.VisualSize = std::move(VisualSize);
	Parms.ThumbSize = std::move(ThumbSize);
	Parms.InteractionOrigin = std::move(InteractionOrigin);
	Parms.InteractionSize = std::move(InteractionSize);
	Parms.LockPos = LockPos;
	Parms.UseFloat = UseFloat;
	Parms.EdgeGapSize = std::move(EdgeGapSize);
	Parms.PosOffset = std::move(PosOffset);
	Parms.Scale = Scale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.UpdateComponentByControlType
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// EUTCControlTypeEnum                     ControlType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EUTCJoystickMode                        JoystickMode_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerUTCInputComponent_C::UpdateComponentByControlType(EUTCControlTypeEnum ControlType, EUTCJoystickMode JoystickMode_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerUTCInputComponent_C", "UpdateComponentByControlType");

	Params::BP_PlayerUTCInputComponent_C_UpdateComponentByControlType Parms{};

	Parms.ControlType = ControlType;
	Parms.JoystickMode_0 = JoystickMode_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.SetTouchEnable
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// EUTCControlTypeEnum                     ControlType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerUTCInputComponent_C::SetTouchEnable(EUTCControlTypeEnum ControlType, bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerUTCInputComponent_C", "SetTouchEnable");

	Params::BP_PlayerUTCInputComponent_C_SetTouchEnable Parms{};

	Parms.ControlType = ControlType;
	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.RightToLeft
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  InX                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bInPercent                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bLogicSize                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 OutX                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerUTCInputComponent_C::RightToLeft(double InX, bool bInPercent, bool bLogicSize, double* OutX)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerUTCInputComponent_C", "RightToLeft");

	Params::BP_PlayerUTCInputComponent_C_RightToLeft Parms{};

	Parms.InX = InX;
	Parms.bInPercent = bInPercent;
	Parms.bLogicSize = bLogicSize;

	UObject::ProcessEvent(Func, &Parms);

	if (OutX != nullptr)
		*OutX = Parms.OutX;
}


// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerUTCInputComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerUTCInputComponent_C", "ReceiveTick");

	Params::BP_PlayerUTCInputComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerUTCInputComponent_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerUTCInputComponent_C", "ReceiveEndPlay");

	Params::BP_PlayerUTCInputComponent_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_PlayerUTCInputComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerUTCInputComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.OnViewportSizeChanged
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector2D&                 Previous_Size                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 Updated_Size                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerUTCInputComponent_C::OnViewportSizeChanged(const struct FVector2D& Previous_Size, const struct FVector2D& Updated_Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerUTCInputComponent_C", "OnViewportSizeChanged");

	Params::BP_PlayerUTCInputComponent_C_OnViewportSizeChanged Parms{};

	Parms.Previous_Size = std::move(Previous_Size);
	Parms.Updated_Size = std::move(Updated_Size);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.InitUTCConfig
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PlayerUTCInputComponent_C::InitUTCConfig()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerUTCInputComponent_C", "InitUTCConfig");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.InitUTCComponents
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_PlayerUTCInputComponent_C::InitUTCComponents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerUTCInputComponent_C", "InitUTCComponents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.HandleTouchEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// EX6InputTouchEvent                      X6InputTouchEvent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETouchIndex                             FingerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerUTCInputComponent_C::HandleTouchEvent(EX6InputTouchEvent X6InputTouchEvent, ETouchIndex FingerIndex, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerUTCInputComponent_C", "HandleTouchEvent");

	Params::BP_PlayerUTCInputComponent_C_HandleTouchEvent Parms{};

	Parms.X6InputTouchEvent = X6InputTouchEvent;
	Parms.FingerIndex = FingerIndex;
	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.HandleExtraMouseRelease
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_PlayerUTCInputComponent_C::HandleExtraMouseRelease(const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerUTCInputComponent_C", "HandleExtraMouseRelease");

	Params::BP_PlayerUTCInputComponent_C_HandleExtraMouseRelease Parms{};

	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.GetVectorBySTR
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector2D&                 standardVec                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       realVec                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerUTCInputComponent_C::GetVectorBySTR(const struct FVector2D& standardVec, struct FVector2D* realVec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerUTCInputComponent_C", "GetVectorBySTR");

	Params::BP_PlayerUTCInputComponent_C_GetVectorBySTR Parms{};

	Parms.standardVec = std::move(standardVec);

	UObject::ProcessEvent(Func, &Parms);

	if (realVec != nullptr)
		*realVec = std::move(Parms.realVec);
}


// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.GetVector2DInPercent
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector2D&                 InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       OutValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerUTCInputComponent_C::GetVector2DInPercent(const struct FVector2D& InValue, struct FVector2D* OutValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerUTCInputComponent_C", "GetVector2DInPercent");

	Params::BP_PlayerUTCInputComponent_C_GetVector2DInPercent Parms{};

	Parms.InValue = std::move(InValue);

	UObject::ProcessEvent(Func, &Parms);

	if (OutValue != nullptr)
		*OutValue = std::move(Parms.OutValue);
}


// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.GetVector2dInAbsolute
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector2D&                 InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       OutValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerUTCInputComponent_C::GetVector2dInAbsolute(const struct FVector2D& InValue, struct FVector2D* OutValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerUTCInputComponent_C", "GetVector2dInAbsolute");

	Params::BP_PlayerUTCInputComponent_C_GetVector2dInAbsolute Parms{};

	Parms.InValue = std::move(InValue);

	UObject::ProcessEvent(Func, &Parms);

	if (OutValue != nullptr)
		*OutValue = std::move(Parms.OutValue);
}


// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.GetSwipeToMoveConfig
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EUTCControlTypeEnum                     ControlType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       InteractionOrigin                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       InteractionSize                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerUTCInputComponent_C::GetSwipeToMoveConfig(EUTCControlTypeEnum ControlType, struct FVector2D* InteractionOrigin, struct FVector2D* InteractionSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerUTCInputComponent_C", "GetSwipeToMoveConfig");

	Params::BP_PlayerUTCInputComponent_C_GetSwipeToMoveConfig Parms{};

	Parms.ControlType = ControlType;

	UObject::ProcessEvent(Func, &Parms);

	if (InteractionOrigin != nullptr)
		*InteractionOrigin = std::move(Parms.InteractionOrigin);

	if (InteractionSize != nullptr)
		*InteractionSize = std::move(Parms.InteractionSize);
}


// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.GetSwipeToMoveComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUTCSwipeToMoveComponent_C**      Comp                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerUTCInputComponent_C::GetSwipeToMoveComponent(class UUTCSwipeToMoveComponent_C** Comp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerUTCInputComponent_C", "GetSwipeToMoveComponent");

	Params::BP_PlayerUTCInputComponent_C_GetSwipeToMoveComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Comp != nullptr)
		*Comp = Parms.Comp;
}


// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.GetJoystickConfig
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EUTCControlTypeEnum                     ControlType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EUTCJoystickMode                        JoystickMode_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       CenterPos                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       VisualSize                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       ThumbSize                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       InteractionOrigin                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       InteractionSize                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   LockPos                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   UseFloat                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       EdgeGapSize                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerUTCInputComponent_C::GetJoystickConfig(EUTCControlTypeEnum ControlType, EUTCJoystickMode JoystickMode_0, struct FVector2D* CenterPos, struct FVector2D* VisualSize, struct FVector2D* ThumbSize, struct FVector2D* InteractionOrigin, struct FVector2D* InteractionSize, bool* LockPos, bool* UseFloat, struct FVector2D* EdgeGapSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerUTCInputComponent_C", "GetJoystickConfig");

	Params::BP_PlayerUTCInputComponent_C_GetJoystickConfig Parms{};

	Parms.ControlType = ControlType;
	Parms.JoystickMode_0 = JoystickMode_0;

	UObject::ProcessEvent(Func, &Parms);

	if (CenterPos != nullptr)
		*CenterPos = std::move(Parms.CenterPos);

	if (VisualSize != nullptr)
		*VisualSize = std::move(Parms.VisualSize);

	if (ThumbSize != nullptr)
		*ThumbSize = std::move(Parms.ThumbSize);

	if (InteractionOrigin != nullptr)
		*InteractionOrigin = std::move(Parms.InteractionOrigin);

	if (InteractionSize != nullptr)
		*InteractionSize = std::move(Parms.InteractionSize);

	if (LockPos != nullptr)
		*LockPos = Parms.LockPos;

	if (UseFloat != nullptr)
		*UseFloat = Parms.UseFloat;

	if (EdgeGapSize != nullptr)
		*EdgeGapSize = std::move(Parms.EdgeGapSize);
}


// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.GetComponentByControlType
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EUTCControlTypeEnum                     ControlType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UUTCComponent_C**                 OutComponent                                           (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerUTCInputComponent_C::GetComponentByControlType(EUTCControlTypeEnum ControlType, class UUTCComponent_C** OutComponent, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerUTCInputComponent_C", "GetComponentByControlType");

	Params::BP_PlayerUTCInputComponent_C_GetComponentByControlType Parms{};

	Parms.ControlType = ControlType;

	UObject::ProcessEvent(Func, &Parms);

	if (OutComponent != nullptr)
		*OutComponent = Parms.OutComponent;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;
}


// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.ExecuteUbergraph_BP_PlayerUTCInputComponent
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerUTCInputComponent_C::ExecuteUbergraph_BP_PlayerUTCInputComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerUTCInputComponent_C", "ExecuteUbergraph_BP_PlayerUTCInputComponent");

	Params::BP_PlayerUTCInputComponent_C_ExecuteUbergraph_BP_PlayerUTCInputComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.DownToTop
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  InY                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bInPercent                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bLogicSize                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 OutY                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerUTCInputComponent_C::DownToTop(double InY, bool bInPercent, bool bLogicSize, double* OutY)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerUTCInputComponent_C", "DownToTop");

	Params::BP_PlayerUTCInputComponent_C_DownToTop Parms{};

	Parms.InY = InY;
	Parms.bInPercent = bInPercent;
	Parms.bLogicSize = bLogicSize;

	UObject::ProcessEvent(Func, &Parms);

	if (OutY != nullptr)
		*OutY = Parms.OutY;
}


// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.DeInitUTCComponents
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PlayerUTCInputComponent_C::DeInitUTCComponents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerUTCInputComponent_C", "DeInitUTCComponents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.CreateUTCComponent
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EUTCControlTypeEnum                     ControlType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerUTCInputComponent_C::CreateUTCComponent(EUTCControlTypeEnum ControlType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerUTCInputComponent_C", "CreateUTCComponent");

	Params::BP_PlayerUTCInputComponent_C_CreateUTCComponent Parms{};

	Parms.ControlType = ControlType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.BP_UpdateJoystickComponent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EUTCControlTypeEnum                     ControlType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 CenterPos                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 VisualSize                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 ThumbSize                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 InteractionOrigin                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 InteractionSize                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    LockPos                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    UseFloat                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 EdgeGapSize                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerUTCInputComponent_C::BP_UpdateJoystickComponent(EUTCControlTypeEnum ControlType, const struct FVector2D& CenterPos, const struct FVector2D& VisualSize, const struct FVector2D& ThumbSize, const struct FVector2D& InteractionOrigin, const struct FVector2D& InteractionSize, bool LockPos, bool UseFloat, const struct FVector2D& EdgeGapSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerUTCInputComponent_C", "BP_UpdateJoystickComponent");

	Params::BP_PlayerUTCInputComponent_C_BP_UpdateJoystickComponent Parms{};

	Parms.ControlType = ControlType;
	Parms.CenterPos = std::move(CenterPos);
	Parms.VisualSize = std::move(VisualSize);
	Parms.ThumbSize = std::move(ThumbSize);
	Parms.InteractionOrigin = std::move(InteractionOrigin);
	Parms.InteractionSize = std::move(InteractionSize);
	Parms.LockPos = LockPos;
	Parms.UseFloat = UseFloat;
	Parms.EdgeGapSize = std::move(EdgeGapSize);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.BP_SetUTCComponentsTickEnabled
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnabled                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerUTCInputComponent_C::BP_SetUTCComponentsTickEnabled(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerUTCInputComponent_C", "BP_SetUTCComponentsTickEnabled");

	Params::BP_PlayerUTCInputComponent_C_BP_SetUTCComponentsTickEnabled Parms{};

	Parms.bEnabled = bEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.BP_SetTouchEnable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnableControlCamera                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnableControlMove                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerUTCInputComponent_C::BP_SetTouchEnable(bool bEnableControlCamera, bool bEnableControlMove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerUTCInputComponent_C", "BP_SetTouchEnable");

	Params::BP_PlayerUTCInputComponent_C_BP_SetTouchEnable Parms{};

	Parms.bEnableControlCamera = bEnableControlCamera;
	Parms.bEnableControlMove = bEnableControlMove;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.BP_ResetJoystickAxis
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PlayerUTCInputComponent_C::BP_ResetJoystickAxis()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerUTCInputComponent_C", "BP_ResetJoystickAxis");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.BP_ResetByConfig
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EUTCControlTypeEnum                     ControlType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EUTCJoystickMode                        JoystickMode_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerUTCInputComponent_C::BP_ResetByConfig(EUTCControlTypeEnum ControlType, EUTCJoystickMode JoystickMode_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerUTCInputComponent_C", "BP_ResetByConfig");

	Params::BP_PlayerUTCInputComponent_C_BP_ResetByConfig Parms{};

	Parms.ControlType = ControlType;
	Parms.JoystickMode_0 = JoystickMode_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.BP_InitTouchEventBinding
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerUTCInputComponent_C::BP_InitTouchEventBinding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerUTCInputComponent_C", "BP_InitTouchEventBinding");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.BP_InitTouch
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget*                      JoystickWidget                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// EUTCControlTypeEnum                     ControlType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerUTCInputComponent_C::BP_InitTouch(class UUserWidget* JoystickWidget, EUTCControlTypeEnum ControlType, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerUTCInputComponent_C", "BP_InitTouch");

	Params::BP_PlayerUTCInputComponent_C_BP_InitTouch Parms{};

	Parms.JoystickWidget = JoystickWidget;
	Parms.ControlType = ControlType;

	UObject::ProcessEvent(Func, &Parms);

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;
}


// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.BP_GetJoysitckDefaultInfo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EUTCJoystickMode                        Mode                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       Pos                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 Size                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerUTCInputComponent_C::BP_GetJoysitckDefaultInfo(EUTCJoystickMode Mode, struct FVector2D* Pos, double* Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerUTCInputComponent_C", "BP_GetJoysitckDefaultInfo");

	Params::BP_PlayerUTCInputComponent_C_BP_GetJoysitckDefaultInfo Parms{};

	Parms.Mode = Mode;

	UObject::ProcessEvent(Func, &Parms);

	if (Pos != nullptr)
		*Pos = std::move(Parms.Pos);

	if (Size != nullptr)
		*Size = Parms.Size;
}


// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.AdjustWidgetInitPos
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector2D&                 InVector2D                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 InSize                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EUTCControlTypeEnum                     ControlType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       OutVector2D                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerUTCInputComponent_C::AdjustWidgetInitPos(const struct FVector2D& InVector2D, const struct FVector2D& InSize, EUTCControlTypeEnum ControlType, struct FVector2D* OutVector2D)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerUTCInputComponent_C", "AdjustWidgetInitPos");

	Params::BP_PlayerUTCInputComponent_C_AdjustWidgetInitPos Parms{};

	Parms.InVector2D = std::move(InVector2D);
	Parms.InSize = std::move(InSize);
	Parms.ControlType = ControlType;

	UObject::ProcessEvent(Func, &Parms);

	if (OutVector2D != nullptr)
		*OutVector2D = std::move(Parms.OutVector2D);
}


// Function BP_PlayerUTCInputComponent.BP_PlayerUTCInputComponent_C.AdjustBoundOrigin
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector2D&                 InOrigin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 InSize                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EUTCControlTypeEnum                     ControlType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       OutOrigin                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerUTCInputComponent_C::AdjustBoundOrigin(const struct FVector2D& InOrigin, const struct FVector2D& InSize, EUTCControlTypeEnum ControlType, struct FVector2D* OutOrigin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerUTCInputComponent_C", "AdjustBoundOrigin");

	Params::BP_PlayerUTCInputComponent_C_AdjustBoundOrigin Parms{};

	Parms.InOrigin = std::move(InOrigin);
	Parms.InSize = std::move(InSize);
	Parms.ControlType = ControlType;

	UObject::ProcessEvent(Func, &Parms);

	if (OutOrigin != nullptr)
		*OutOrigin = std::move(Parms.OutOrigin);
}

}

