#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimNotifyState_TimedRejumpEffect

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass AnimNotifyState_TimedRejumpEffect.AnimNotifyState_TimedRejumpEffect_C
// 0x0048 (0x0078 - 0x0030)
class UAnimNotifyState_TimedRejumpEffect_C final : public UAnimNotifyState
{
public:
	struct FGameplayTag                           CharacterEffectTag;                                // 0x0030(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	class FName                                   SocketName;                                        // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocationOffset;                                    // 0x0040(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RotationOffset;                                    // 0x0058(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDestroyAtEnd;                                     // 0x0070(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	class FString GetNotifyName() const;
	bool Received_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration, const struct FAnimNotifyEventReference& EventReference) const;
	bool Received_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, const struct FAnimNotifyEventReference& EventReference) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AnimNotifyState_TimedRejumpEffect_C">();
	}
	static class UAnimNotifyState_TimedRejumpEffect_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotifyState_TimedRejumpEffect_C>();
	}
};
static_assert(alignof(UAnimNotifyState_TimedRejumpEffect_C) == 0x000008, "Wrong alignment on UAnimNotifyState_TimedRejumpEffect_C");
static_assert(sizeof(UAnimNotifyState_TimedRejumpEffect_C) == 0x000078, "Wrong size on UAnimNotifyState_TimedRejumpEffect_C");
static_assert(offsetof(UAnimNotifyState_TimedRejumpEffect_C, CharacterEffectTag) == 0x000030, "Member 'UAnimNotifyState_TimedRejumpEffect_C::CharacterEffectTag' has a wrong offset!");
static_assert(offsetof(UAnimNotifyState_TimedRejumpEffect_C, SocketName) == 0x000038, "Member 'UAnimNotifyState_TimedRejumpEffect_C::SocketName' has a wrong offset!");
static_assert(offsetof(UAnimNotifyState_TimedRejumpEffect_C, LocationOffset) == 0x000040, "Member 'UAnimNotifyState_TimedRejumpEffect_C::LocationOffset' has a wrong offset!");
static_assert(offsetof(UAnimNotifyState_TimedRejumpEffect_C, RotationOffset) == 0x000058, "Member 'UAnimNotifyState_TimedRejumpEffect_C::RotationOffset' has a wrong offset!");
static_assert(offsetof(UAnimNotifyState_TimedRejumpEffect_C, bDestroyAtEnd) == 0x000070, "Member 'UAnimNotifyState_TimedRejumpEffect_C::bDestroyAtEnd' has a wrong offset!");

}

