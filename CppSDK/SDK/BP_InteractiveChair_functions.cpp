#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InteractiveChair

#include "Basic.hpp"

#include "BP_InteractiveChair_classes.hpp"
#include "BP_InteractiveChair_parameters.hpp"


namespace SDK
{

// Function BP_InteractiveChair.BP_InteractiveChair_C.ExecuteUbergraph_BP_InteractiveChair
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InteractiveChair_C::ExecuteUbergraph_BP_InteractiveChair(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveChair_C", "ExecuteUbergraph_BP_InteractiveChair");

	Params::BP_InteractiveChair_C_ExecuteUbergraph_BP_InteractiveChair Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractiveChair.BP_InteractiveChair_C.On_Multi_ActiveSuccess
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Other_player_actor                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// E_EInteractSuccRet                      Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InteractiveChair_C::On_Multi_ActiveSuccess(class AActor* Other_player_actor, E_EInteractSuccRet Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveChair_C", "On_Multi_ActiveSuccess");

	Params::BP_InteractiveChair_C_On_Multi_ActiveSuccess Parms{};

	Parms.Other_player_actor = Other_player_actor;
	Parms.Result = Result;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractiveChair.BP_InteractiveChair_C.On_Multi_InteractiveObjActive
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Data                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class AActor*                           Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_InteractiveChair_C::On_Multi_InteractiveObjActive(const class FString& Data, class AActor* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveChair_C", "On_Multi_InteractiveObjActive");

	Params::BP_InteractiveChair_C_On_Multi_InteractiveObjActive Parms{};

	Parms.Data = std::move(Data);
	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractiveChair.BP_InteractiveChair_C.OnWeatherSensitiveActorChange
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_WeatherSensitiveActorManager_C*manager                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// Enum_WeatherType                        WeatherType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InteractiveChair_C::OnWeatherSensitiveActorChange(class ABP_WeatherSensitiveActorManager_C* manager, Enum_WeatherType WeatherType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveChair_C", "OnWeatherSensitiveActorChange");

	Params::BP_InteractiveChair_C_OnWeatherSensitiveActorChange Parms{};

	Parms.manager = manager;
	Parms.WeatherType = WeatherType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractiveChair.BP_InteractiveChair_C.ServerInit
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bServer                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InteractiveChair_C::ServerInit(bool bServer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveChair_C", "ServerInit");

	Params::BP_InteractiveChair_C_ServerInit Parms{};

	Parms.bServer = bServer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractiveChair.BP_InteractiveChair_C.GetModuleName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString ABP_InteractiveChair_C::GetModuleName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveChair_C", "GetModuleName");

	Params::BP_InteractiveChair_C_GetModuleName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

