#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_AbilityMontageSelector

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "F_AbilityMontageSelector_structs.hpp"
#include "GA_AbilityMontageBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_AbilityMontageSelector.GA_AbilityMontageSelector_C
// 0x0060 (0x05F8 - 0x0598)
class UGA_AbilityMontageSelector_C : public UGA_AbilityMontageBase_C
{
public:
	class UAnimMontage*                           FallbackMontage;                                   // 0x0598(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CurBlockedTags;                                    // 0x05A0(0x0020)(Edit, BlueprintVisible, Transient, DisableEditOnInstance)
	struct FGameplayTagContainer                  CurRequiredTags;                                   // 0x05C0(0x0020)(Edit, BlueprintVisible, Transient, DisableEditOnInstance)
	TArray<struct FF_AbilityMontageSelector>      MontageSelector;                                   // 0x05E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bPlayWithShadow;                                   // 0x05F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void GetCurBlockedTags(struct FGameplayTagContainer* Result);
	void GetCurRequiredTags(struct FGameplayTagContainer* Result);

	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_AbilityMontageSelector_C">();
	}
	static class UGA_AbilityMontageSelector_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_AbilityMontageSelector_C>();
	}
};
static_assert(alignof(UGA_AbilityMontageSelector_C) == 0x000008, "Wrong alignment on UGA_AbilityMontageSelector_C");
static_assert(sizeof(UGA_AbilityMontageSelector_C) == 0x0005F8, "Wrong size on UGA_AbilityMontageSelector_C");
static_assert(offsetof(UGA_AbilityMontageSelector_C, FallbackMontage) == 0x000598, "Member 'UGA_AbilityMontageSelector_C::FallbackMontage' has a wrong offset!");
static_assert(offsetof(UGA_AbilityMontageSelector_C, CurBlockedTags) == 0x0005A0, "Member 'UGA_AbilityMontageSelector_C::CurBlockedTags' has a wrong offset!");
static_assert(offsetof(UGA_AbilityMontageSelector_C, CurRequiredTags) == 0x0005C0, "Member 'UGA_AbilityMontageSelector_C::CurRequiredTags' has a wrong offset!");
static_assert(offsetof(UGA_AbilityMontageSelector_C, MontageSelector) == 0x0005E0, "Member 'UGA_AbilityMontageSelector_C::MontageSelector' has a wrong offset!");
static_assert(offsetof(UGA_AbilityMontageSelector_C, bPlayWithShadow) == 0x0005F0, "Member 'UGA_AbilityMontageSelector_C::bPlayWithShadow' has a wrong offset!");

}

