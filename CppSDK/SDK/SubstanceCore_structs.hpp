#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SubstanceCore

#include "Basic.hpp"


namespace SDK
{

// Enum SubstanceCore.ESubstanceInputType
// NumValues: 0x000C
enum class ESubstanceInputType : uint8
{
	SIT_Float                                = 0,
	SIT_Float2                               = 1,
	SIT_Float3                               = 2,
	SIT_Float4                               = 3,
	SIT_Integer                              = 4,
	SIT_Image                                = 5,
	SIT_Unused_6                             = 6,
	SIT_Unused_7                             = 7,
	SIT_Integer2                             = 8,
	SIT_Integer3                             = 9,
	SIT_Integer4                             = 10,
	SIT_MAX                                  = 11,
};

// Enum SubstanceCore.ESubstanceGenerationMode
// NumValues: 0x0007
enum class ESubstanceGenerationMode : uint8
{
	SGM_PlatformDefault                      = 0,
	SGM_Baked                                = 1,
	SGM_OnLoadSync                           = 2,
	SGM_OnLoadSyncAndCache                   = 3,
	SGM_OnLoadAsync                          = 4,
	SGM_OnLoadAsyncAndCache                  = 5,
	SGM_MAX                                  = 6,
};

// Enum SubstanceCore.ESubstanceEngineType
// NumValues: 0x0003
enum class ESubstanceEngineType : uint8
{
	SET_CPU                                  = 0,
	SET_GPU                                  = 1,
	SET_MAX                                  = 2,
};

// Enum SubstanceCore.EDefaultSubstanceTextureSize
// NumValues: 0x000B
enum class EDefaultSubstanceTextureSize : uint8
{
	Size_0                                   = 0,
	Size_16                                  = 4,
	Size_32                                  = 5,
	Size_64                                  = 6,
	Size_128                                 = 7,
	Size_256                                 = 8,
	Size_512                                 = 9,
	Size_1024                                = 10,
	Size_2048                                = 11,
	Size_4096                                = 12,
	Size_MAX                                 = 13,
};

// Enum SubstanceCore.ESubstanceTextureSize
// NumValues: 0x000B
enum class ESubstanceTextureSize : uint8
{
	ERL_16                                   = 0,
	ERL_32                                   = 1,
	ERL_64                                   = 2,
	ERL_128                                  = 3,
	ERL_256                                  = 4,
	ERL_512                                  = 5,
	ERL_1024                                 = 6,
	ERL_2048                                 = 7,
	ERL_4096                                 = 8,
	ERL_8192                                 = 9,
	ERL_MAX                                  = 10,
};

// ScriptStruct SubstanceCore.SubstanceInputDesc
// 0x0018 (0x0018 - 0x0000)
struct FSubstanceInputDesc
{
public:
	class FString                                 Name;                                              // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESubstanceInputType                           Type;                                              // 0x0010(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FSubstanceInputDesc) == 0x000008, "Wrong alignment on FSubstanceInputDesc");
static_assert(sizeof(FSubstanceInputDesc) == 0x000018, "Wrong size on FSubstanceInputDesc");
static_assert(offsetof(FSubstanceInputDesc, Name) == 0x000000, "Member 'FSubstanceInputDesc::Name' has a wrong offset!");
static_assert(offsetof(FSubstanceInputDesc, Type) == 0x000010, "Member 'FSubstanceInputDesc::Type' has a wrong offset!");

// ScriptStruct SubstanceCore.SubstanceIntInputDesc
// 0x0030 (0x0048 - 0x0018)
struct FSubstanceIntInputDesc final : public FSubstanceInputDesc
{
public:
	TArray<int32>                                 Min;                                               // 0x0018(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<int32>                                 Max;                                               // 0x0028(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<int32>                                 Default;                                           // 0x0038(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSubstanceIntInputDesc) == 0x000008, "Wrong alignment on FSubstanceIntInputDesc");
static_assert(sizeof(FSubstanceIntInputDesc) == 0x000048, "Wrong size on FSubstanceIntInputDesc");
static_assert(offsetof(FSubstanceIntInputDesc, Min) == 0x000018, "Member 'FSubstanceIntInputDesc::Min' has a wrong offset!");
static_assert(offsetof(FSubstanceIntInputDesc, Max) == 0x000028, "Member 'FSubstanceIntInputDesc::Max' has a wrong offset!");
static_assert(offsetof(FSubstanceIntInputDesc, Default) == 0x000038, "Member 'FSubstanceIntInputDesc::Default' has a wrong offset!");

// ScriptStruct SubstanceCore.SubstanceFloatInputDesc
// 0x0030 (0x0048 - 0x0018)
struct FSubstanceFloatInputDesc final : public FSubstanceInputDesc
{
public:
	TArray<float>                                 Min;                                               // 0x0018(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<float>                                 Max;                                               // 0x0028(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<float>                                 Default;                                           // 0x0038(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSubstanceFloatInputDesc) == 0x000008, "Wrong alignment on FSubstanceFloatInputDesc");
static_assert(sizeof(FSubstanceFloatInputDesc) == 0x000048, "Wrong size on FSubstanceFloatInputDesc");
static_assert(offsetof(FSubstanceFloatInputDesc, Min) == 0x000018, "Member 'FSubstanceFloatInputDesc::Min' has a wrong offset!");
static_assert(offsetof(FSubstanceFloatInputDesc, Max) == 0x000028, "Member 'FSubstanceFloatInputDesc::Max' has a wrong offset!");
static_assert(offsetof(FSubstanceFloatInputDesc, Default) == 0x000038, "Member 'FSubstanceFloatInputDesc::Default' has a wrong offset!");

// ScriptStruct SubstanceCore.SubstanceInstanceDesc
// 0x0020 (0x0020 - 0x0000)
struct FSubstanceInstanceDesc final
{
public:
	class FString                                 Name;                                              // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSubstanceInputDesc>            Inputs;                                            // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSubstanceInstanceDesc) == 0x000008, "Wrong alignment on FSubstanceInstanceDesc");
static_assert(sizeof(FSubstanceInstanceDesc) == 0x000020, "Wrong size on FSubstanceInstanceDesc");
static_assert(offsetof(FSubstanceInstanceDesc, Name) == 0x000000, "Member 'FSubstanceInstanceDesc::Name' has a wrong offset!");
static_assert(offsetof(FSubstanceInstanceDesc, Inputs) == 0x000010, "Member 'FSubstanceInstanceDesc::Inputs' has a wrong offset!");

// ScriptStruct SubstanceCore.SubstanceGraphDesc
// 0x0078 (0x0078 - 0x0000)
struct FSubstanceGraphDesc final
{
public:
	int32                                         Index;                                             // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Label;                                             // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Description;                                       // 0x0018(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Category;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Keywords;                                          // 0x0038(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Author;                                            // 0x0048(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AuthorUrl;                                         // 0x0058(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UserTag;                                           // 0x0068(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSubstanceGraphDesc) == 0x000008, "Wrong alignment on FSubstanceGraphDesc");
static_assert(sizeof(FSubstanceGraphDesc) == 0x000078, "Wrong size on FSubstanceGraphDesc");
static_assert(offsetof(FSubstanceGraphDesc, Index) == 0x000000, "Member 'FSubstanceGraphDesc::Index' has a wrong offset!");
static_assert(offsetof(FSubstanceGraphDesc, Label) == 0x000008, "Member 'FSubstanceGraphDesc::Label' has a wrong offset!");
static_assert(offsetof(FSubstanceGraphDesc, Description) == 0x000018, "Member 'FSubstanceGraphDesc::Description' has a wrong offset!");
static_assert(offsetof(FSubstanceGraphDesc, Category) == 0x000028, "Member 'FSubstanceGraphDesc::Category' has a wrong offset!");
static_assert(offsetof(FSubstanceGraphDesc, Keywords) == 0x000038, "Member 'FSubstanceGraphDesc::Keywords' has a wrong offset!");
static_assert(offsetof(FSubstanceGraphDesc, Author) == 0x000048, "Member 'FSubstanceGraphDesc::Author' has a wrong offset!");
static_assert(offsetof(FSubstanceGraphDesc, AuthorUrl) == 0x000058, "Member 'FSubstanceGraphDesc::AuthorUrl' has a wrong offset!");
static_assert(offsetof(FSubstanceGraphDesc, UserTag) == 0x000068, "Member 'FSubstanceGraphDesc::UserTag' has a wrong offset!");

// ScriptStruct SubstanceCore.SubstancePreset
// 0x0088 (0x0088 - 0x0000)
struct FSubstancePreset final
{
public:
	uint8                                         Pad_0[0x78];                                       // 0x0000(0x0078)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SavedPresetString;                                 // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
static_assert(alignof(FSubstancePreset) == 0x000008, "Wrong alignment on FSubstancePreset");
static_assert(sizeof(FSubstancePreset) == 0x000088, "Wrong size on FSubstancePreset");
static_assert(offsetof(FSubstancePreset, SavedPresetString) == 0x000078, "Member 'FSubstancePreset::SavedPresetString' has a wrong offset!");

// ScriptStruct SubstanceCore.SubstanceConnection
// 0x0020 (0x0020 - 0x0000)
struct FSubstanceConnection final
{
public:
	class FString                                 OutputIdentifier;                                  // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InputImageIdentifier;                              // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSubstanceConnection) == 0x000008, "Wrong alignment on FSubstanceConnection");
static_assert(sizeof(FSubstanceConnection) == 0x000020, "Wrong size on FSubstanceConnection");
static_assert(offsetof(FSubstanceConnection, OutputIdentifier) == 0x000000, "Member 'FSubstanceConnection::OutputIdentifier' has a wrong offset!");
static_assert(offsetof(FSubstanceConnection, InputImageIdentifier) == 0x000010, "Member 'FSubstanceConnection::InputImageIdentifier' has a wrong offset!");

}

