#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PaperRipples

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "PaperRipples_structs.hpp"


namespace SDK
{

// Class PaperRipples.MaterialExpressionRipplesRandomNormal
// 0x0028 (0x00E8 - 0x00C0)
class UMaterialExpressionRipplesRandomNormal final : public UMaterialExpression
{
public:
	struct FExpressionInput                       Input;                                             // 0x00C0(0x0028)(NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MaterialExpressionRipplesRandomNormal">();
	}
	static class UMaterialExpressionRipplesRandomNormal* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMaterialExpressionRipplesRandomNormal>();
	}
};
static_assert(alignof(UMaterialExpressionRipplesRandomNormal) == 0x000008, "Wrong alignment on UMaterialExpressionRipplesRandomNormal");
static_assert(sizeof(UMaterialExpressionRipplesRandomNormal) == 0x0000E8, "Wrong size on UMaterialExpressionRipplesRandomNormal");
static_assert(offsetof(UMaterialExpressionRipplesRandomNormal, Input) == 0x0000C0, "Member 'UMaterialExpressionRipplesRandomNormal::Input' has a wrong offset!");

// Class PaperRipples.RainRipples
// 0x0008 (0x03B0 - 0x03A8)
class ARainRipples final : public AInfo
{
public:
	class URainRipplesComponent*                  RainRipplesComponent;                              // 0x03A8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RainRipples">();
	}
	static class ARainRipples* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARainRipples>();
	}
};
static_assert(alignof(ARainRipples) == 0x000008, "Wrong alignment on ARainRipples");
static_assert(sizeof(ARainRipples) == 0x0003B0, "Wrong size on ARainRipples");
static_assert(offsetof(ARainRipples, RainRipplesComponent) == 0x0003A8, "Member 'ARainRipples::RainRipplesComponent' has a wrong offset!");

// Class PaperRipples.RainRipplesComponent
// 0x0020 (0x0250 - 0x0230)
class URainRipplesComponent final : public USceneComponent
{
public:
	struct FRipplesConfigParameters               RipplesParams;                                     // 0x0230(0x0018)(Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_248[0x8];                                      // 0x0248(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetRippleCount(float NewValue);
	void UpdateRipplesConfig(const struct FRipplesConfigParameters& NewRipples);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RainRipplesComponent">();
	}
	static class URainRipplesComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<URainRipplesComponent>();
	}
};
static_assert(alignof(URainRipplesComponent) == 0x000010, "Wrong alignment on URainRipplesComponent");
static_assert(sizeof(URainRipplesComponent) == 0x000250, "Wrong size on URainRipplesComponent");
static_assert(offsetof(URainRipplesComponent, RipplesParams) == 0x000230, "Member 'URainRipplesComponent::RipplesParams' has a wrong offset!");

}

