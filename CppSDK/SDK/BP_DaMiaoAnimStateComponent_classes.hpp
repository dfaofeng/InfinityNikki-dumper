#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DaMiaoAnimStateComponent

#include "Basic.hpp"

#include "EDaMiaoStateType_structs.hpp"
#include "X6Game_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DaMiaoAnimStateComponent.BP_DaMiaoAnimStateComponent_C
// 0x0020 (0x00C8 - 0x00A8)
class UBP_DaMiaoAnimStateComponent_C final : public UX6ActorComponent
{
public:
	bool                                          BP_InAir;                                          // 0x00A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_IsControlByAI;                                  // 0x00A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDaMiaoStateType                              BP_CurrentDaMiaoMoveType;                          // 0x00AA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_InMoving;                                       // 0x00AB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDaMiaoStateType                              BP_PreviousDaMiaoMoveType;                         // 0x00AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_IsMoveLoopLeftFootOnLand;                       // 0x00AD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_IsJumpFailingLeftFootOnLand;                    // 0x00AE(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_IsRequireJump;                                  // 0x00AF(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_IsEndJumpLeftFootOnLand;                        // 0x00B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_IsDangerousFall;                                // 0x00B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDaMiaoStateType                              BP_BeforeStopMoveType;                             // 0x00B2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDaMiaoStateType                              BP_CurrentTypeMoveLoop;                            // 0x00B3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDaMiaoStateType                              BP_CurDaMiaoMoveType;                              // 0x00B4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDaMiaoStateType                              BP_PreDaMiaoMoveType;                              // 0x00B5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDaMiaoStateType                              BP_CurTypeMoveLoop;                                // 0x00B6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_LogicInAir;                                     // 0x00B7(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_LogicInMoving;                                  // 0x00B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_IsCurLeftOnLand;                                // 0x00B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_IsFallDangerous;                                // 0x00BA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_RequireJump;                                    // 0x00BB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_ConfigEnableMovementFeatureV2;                  // 0x00BC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_IsCurLeftOnLandForMoveLoop;                     // 0x00BD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_IsCurLeftOnLandForMoveJump;                     // 0x00BE(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDaMiaoStateType                              BP_IsCurrentMoveTypeForMoveJump;                   // 0x00BF(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_IsCurLeftOnLandForMoveJumpOnLand;               // 0x00C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BP_AnimNotify_OnEnableDaMiaoJump(bool IsLeftOnLand, bool EnableJump);
	void BP_AnimNotify_OnEnterMoveLoop();
	void BP_AnimNotify_OnExitMoveLoop();
	void BP_EnterDangerousFallToIdle();
	void BP_ExitDangerousFallToIdle();

	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DaMiaoAnimStateComponent_C">();
	}
	static class UBP_DaMiaoAnimStateComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_DaMiaoAnimStateComponent_C>();
	}
};
static_assert(alignof(UBP_DaMiaoAnimStateComponent_C) == 0x000008, "Wrong alignment on UBP_DaMiaoAnimStateComponent_C");
static_assert(sizeof(UBP_DaMiaoAnimStateComponent_C) == 0x0000C8, "Wrong size on UBP_DaMiaoAnimStateComponent_C");
static_assert(offsetof(UBP_DaMiaoAnimStateComponent_C, BP_InAir) == 0x0000A8, "Member 'UBP_DaMiaoAnimStateComponent_C::BP_InAir' has a wrong offset!");
static_assert(offsetof(UBP_DaMiaoAnimStateComponent_C, BP_IsControlByAI) == 0x0000A9, "Member 'UBP_DaMiaoAnimStateComponent_C::BP_IsControlByAI' has a wrong offset!");
static_assert(offsetof(UBP_DaMiaoAnimStateComponent_C, BP_CurrentDaMiaoMoveType) == 0x0000AA, "Member 'UBP_DaMiaoAnimStateComponent_C::BP_CurrentDaMiaoMoveType' has a wrong offset!");
static_assert(offsetof(UBP_DaMiaoAnimStateComponent_C, BP_InMoving) == 0x0000AB, "Member 'UBP_DaMiaoAnimStateComponent_C::BP_InMoving' has a wrong offset!");
static_assert(offsetof(UBP_DaMiaoAnimStateComponent_C, BP_PreviousDaMiaoMoveType) == 0x0000AC, "Member 'UBP_DaMiaoAnimStateComponent_C::BP_PreviousDaMiaoMoveType' has a wrong offset!");
static_assert(offsetof(UBP_DaMiaoAnimStateComponent_C, BP_IsMoveLoopLeftFootOnLand) == 0x0000AD, "Member 'UBP_DaMiaoAnimStateComponent_C::BP_IsMoveLoopLeftFootOnLand' has a wrong offset!");
static_assert(offsetof(UBP_DaMiaoAnimStateComponent_C, BP_IsJumpFailingLeftFootOnLand) == 0x0000AE, "Member 'UBP_DaMiaoAnimStateComponent_C::BP_IsJumpFailingLeftFootOnLand' has a wrong offset!");
static_assert(offsetof(UBP_DaMiaoAnimStateComponent_C, BP_IsRequireJump) == 0x0000AF, "Member 'UBP_DaMiaoAnimStateComponent_C::BP_IsRequireJump' has a wrong offset!");
static_assert(offsetof(UBP_DaMiaoAnimStateComponent_C, BP_IsEndJumpLeftFootOnLand) == 0x0000B0, "Member 'UBP_DaMiaoAnimStateComponent_C::BP_IsEndJumpLeftFootOnLand' has a wrong offset!");
static_assert(offsetof(UBP_DaMiaoAnimStateComponent_C, BP_IsDangerousFall) == 0x0000B1, "Member 'UBP_DaMiaoAnimStateComponent_C::BP_IsDangerousFall' has a wrong offset!");
static_assert(offsetof(UBP_DaMiaoAnimStateComponent_C, BP_BeforeStopMoveType) == 0x0000B2, "Member 'UBP_DaMiaoAnimStateComponent_C::BP_BeforeStopMoveType' has a wrong offset!");
static_assert(offsetof(UBP_DaMiaoAnimStateComponent_C, BP_CurrentTypeMoveLoop) == 0x0000B3, "Member 'UBP_DaMiaoAnimStateComponent_C::BP_CurrentTypeMoveLoop' has a wrong offset!");
static_assert(offsetof(UBP_DaMiaoAnimStateComponent_C, BP_CurDaMiaoMoveType) == 0x0000B4, "Member 'UBP_DaMiaoAnimStateComponent_C::BP_CurDaMiaoMoveType' has a wrong offset!");
static_assert(offsetof(UBP_DaMiaoAnimStateComponent_C, BP_PreDaMiaoMoveType) == 0x0000B5, "Member 'UBP_DaMiaoAnimStateComponent_C::BP_PreDaMiaoMoveType' has a wrong offset!");
static_assert(offsetof(UBP_DaMiaoAnimStateComponent_C, BP_CurTypeMoveLoop) == 0x0000B6, "Member 'UBP_DaMiaoAnimStateComponent_C::BP_CurTypeMoveLoop' has a wrong offset!");
static_assert(offsetof(UBP_DaMiaoAnimStateComponent_C, BP_LogicInAir) == 0x0000B7, "Member 'UBP_DaMiaoAnimStateComponent_C::BP_LogicInAir' has a wrong offset!");
static_assert(offsetof(UBP_DaMiaoAnimStateComponent_C, BP_LogicInMoving) == 0x0000B8, "Member 'UBP_DaMiaoAnimStateComponent_C::BP_LogicInMoving' has a wrong offset!");
static_assert(offsetof(UBP_DaMiaoAnimStateComponent_C, BP_IsCurLeftOnLand) == 0x0000B9, "Member 'UBP_DaMiaoAnimStateComponent_C::BP_IsCurLeftOnLand' has a wrong offset!");
static_assert(offsetof(UBP_DaMiaoAnimStateComponent_C, BP_IsFallDangerous) == 0x0000BA, "Member 'UBP_DaMiaoAnimStateComponent_C::BP_IsFallDangerous' has a wrong offset!");
static_assert(offsetof(UBP_DaMiaoAnimStateComponent_C, BP_RequireJump) == 0x0000BB, "Member 'UBP_DaMiaoAnimStateComponent_C::BP_RequireJump' has a wrong offset!");
static_assert(offsetof(UBP_DaMiaoAnimStateComponent_C, BP_ConfigEnableMovementFeatureV2) == 0x0000BC, "Member 'UBP_DaMiaoAnimStateComponent_C::BP_ConfigEnableMovementFeatureV2' has a wrong offset!");
static_assert(offsetof(UBP_DaMiaoAnimStateComponent_C, BP_IsCurLeftOnLandForMoveLoop) == 0x0000BD, "Member 'UBP_DaMiaoAnimStateComponent_C::BP_IsCurLeftOnLandForMoveLoop' has a wrong offset!");
static_assert(offsetof(UBP_DaMiaoAnimStateComponent_C, BP_IsCurLeftOnLandForMoveJump) == 0x0000BE, "Member 'UBP_DaMiaoAnimStateComponent_C::BP_IsCurLeftOnLandForMoveJump' has a wrong offset!");
static_assert(offsetof(UBP_DaMiaoAnimStateComponent_C, BP_IsCurrentMoveTypeForMoveJump) == 0x0000BF, "Member 'UBP_DaMiaoAnimStateComponent_C::BP_IsCurrentMoveTypeForMoveJump' has a wrong offset!");
static_assert(offsetof(UBP_DaMiaoAnimStateComponent_C, BP_IsCurLeftOnLandForMoveJumpOnLand) == 0x0000C0, "Member 'UBP_DaMiaoAnimStateComponent_C::BP_IsCurLeftOnLandForMoveJumpOnLand' has a wrong offset!");

}

