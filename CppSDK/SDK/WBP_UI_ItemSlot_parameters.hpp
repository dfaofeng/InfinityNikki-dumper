#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_ItemSlot

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_UI_ItemSlot.WBP_UI_ItemSlot_C.BP_ClearItem
// 0x01A0 (0x01A0 - 0x0000)
struct WBP_UI_ItemSlot_C_BP_ClearItem final
{
public:
	struct FSlateBrush                            CallFunc_X6MakeBrushFromTexture_ReturnValue;       // 0x0000(0x00D0)()
	struct FSlateBrush                            CallFunc_X6MakeBrushFromTexture_ReturnValue_1;     // 0x00D0(0x00D0)()
};
static_assert(alignof(WBP_UI_ItemSlot_C_BP_ClearItem) == 0x000010, "Wrong alignment on WBP_UI_ItemSlot_C_BP_ClearItem");
static_assert(sizeof(WBP_UI_ItemSlot_C_BP_ClearItem) == 0x0001A0, "Wrong size on WBP_UI_ItemSlot_C_BP_ClearItem");
static_assert(offsetof(WBP_UI_ItemSlot_C_BP_ClearItem, CallFunc_X6MakeBrushFromTexture_ReturnValue) == 0x000000, "Member 'WBP_UI_ItemSlot_C_BP_ClearItem::CallFunc_X6MakeBrushFromTexture_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_ItemSlot_C_BP_ClearItem, CallFunc_X6MakeBrushFromTexture_ReturnValue_1) == 0x0000D0, "Member 'WBP_UI_ItemSlot_C_BP_ClearItem::CallFunc_X6MakeBrushFromTexture_ReturnValue_1' has a wrong offset!");

// Function WBP_UI_ItemSlot.WBP_UI_ItemSlot_C.BP_OnItemExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_ItemSlot_C_BP_OnItemExpansionChanged final
{
public:
	bool                                          bIsExpanded;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_ItemSlot_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong alignment on WBP_UI_ItemSlot_C_BP_OnItemExpansionChanged");
static_assert(sizeof(WBP_UI_ItemSlot_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong size on WBP_UI_ItemSlot_C_BP_OnItemExpansionChanged");
static_assert(offsetof(WBP_UI_ItemSlot_C_BP_OnItemExpansionChanged, bIsExpanded) == 0x000000, "Member 'WBP_UI_ItemSlot_C_BP_OnItemExpansionChanged::bIsExpanded' has a wrong offset!");

// Function WBP_UI_ItemSlot.WBP_UI_ItemSlot_C.BP_OnItemSelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_ItemSlot_C_BP_OnItemSelectionChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_ItemSlot_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong alignment on WBP_UI_ItemSlot_C_BP_OnItemSelectionChanged");
static_assert(sizeof(WBP_UI_ItemSlot_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong size on WBP_UI_ItemSlot_C_BP_OnItemSelectionChanged");
static_assert(offsetof(WBP_UI_ItemSlot_C_BP_OnItemSelectionChanged, bIsSelected) == 0x000000, "Member 'WBP_UI_ItemSlot_C_BP_OnItemSelectionChanged::bIsSelected' has a wrong offset!");

// Function WBP_UI_ItemSlot.WBP_UI_ItemSlot_C.BP_Private_SetTextureByItemId
// 0x0008 (0x0008 - 0x0000)
struct WBP_UI_ItemSlot_C_BP_Private_SetTextureByItemId final
{
public:
	int64                                         ItemId;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_ItemSlot_C_BP_Private_SetTextureByItemId) == 0x000008, "Wrong alignment on WBP_UI_ItemSlot_C_BP_Private_SetTextureByItemId");
static_assert(sizeof(WBP_UI_ItemSlot_C_BP_Private_SetTextureByItemId) == 0x000008, "Wrong size on WBP_UI_ItemSlot_C_BP_Private_SetTextureByItemId");
static_assert(offsetof(WBP_UI_ItemSlot_C_BP_Private_SetTextureByItemId, ItemId) == 0x000000, "Member 'WBP_UI_ItemSlot_C_BP_Private_SetTextureByItemId::ItemId' has a wrong offset!");

// Function WBP_UI_ItemSlot.WBP_UI_ItemSlot_C.ClearTipsData
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_ItemSlot_C_ClearTipsData final
{
public:
	bool                                          IsClearData;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_ItemSlot_C_ClearTipsData) == 0x000001, "Wrong alignment on WBP_UI_ItemSlot_C_ClearTipsData");
static_assert(sizeof(WBP_UI_ItemSlot_C_ClearTipsData) == 0x000001, "Wrong size on WBP_UI_ItemSlot_C_ClearTipsData");
static_assert(offsetof(WBP_UI_ItemSlot_C_ClearTipsData, IsClearData) == 0x000000, "Member 'WBP_UI_ItemSlot_C_ClearTipsData::IsClearData' has a wrong offset!");

// Function WBP_UI_ItemSlot.WBP_UI_ItemSlot_C.ExecuteUbergraph_WBP_UI_ItemSlot
// 0x0010 (0x0010 - 0x0000)
struct WBP_UI_ItemSlot_C_ExecuteUbergraph_WBP_UI_ItemSlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsExpanded;                          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsSelected;                          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_index_1;                              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_index;                                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_ItemSlot_C_ExecuteUbergraph_WBP_UI_ItemSlot) == 0x000004, "Wrong alignment on WBP_UI_ItemSlot_C_ExecuteUbergraph_WBP_UI_ItemSlot");
static_assert(sizeof(WBP_UI_ItemSlot_C_ExecuteUbergraph_WBP_UI_ItemSlot) == 0x000010, "Wrong size on WBP_UI_ItemSlot_C_ExecuteUbergraph_WBP_UI_ItemSlot");
static_assert(offsetof(WBP_UI_ItemSlot_C_ExecuteUbergraph_WBP_UI_ItemSlot, EntryPoint) == 0x000000, "Member 'WBP_UI_ItemSlot_C_ExecuteUbergraph_WBP_UI_ItemSlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UI_ItemSlot_C_ExecuteUbergraph_WBP_UI_ItemSlot, K2Node_Event_bIsExpanded) == 0x000004, "Member 'WBP_UI_ItemSlot_C_ExecuteUbergraph_WBP_UI_ItemSlot::K2Node_Event_bIsExpanded' has a wrong offset!");
static_assert(offsetof(WBP_UI_ItemSlot_C_ExecuteUbergraph_WBP_UI_ItemSlot, K2Node_Event_bIsSelected) == 0x000005, "Member 'WBP_UI_ItemSlot_C_ExecuteUbergraph_WBP_UI_ItemSlot::K2Node_Event_bIsSelected' has a wrong offset!");
static_assert(offsetof(WBP_UI_ItemSlot_C_ExecuteUbergraph_WBP_UI_ItemSlot, K2Node_Event_index_1) == 0x000008, "Member 'WBP_UI_ItemSlot_C_ExecuteUbergraph_WBP_UI_ItemSlot::K2Node_Event_index_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_ItemSlot_C_ExecuteUbergraph_WBP_UI_ItemSlot, K2Node_Event_index) == 0x00000C, "Member 'WBP_UI_ItemSlot_C_ExecuteUbergraph_WBP_UI_ItemSlot::K2Node_Event_index' has a wrong offset!");

// Function WBP_UI_ItemSlot.WBP_UI_ItemSlot_C.GetTips
// 0x0008 (0x0008 - 0x0000)
struct WBP_UI_ItemSlot_C_GetTips final
{
public:
	class UTipsEvent_C*                           Data;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_ItemSlot_C_GetTips) == 0x000008, "Wrong alignment on WBP_UI_ItemSlot_C_GetTips");
static_assert(sizeof(WBP_UI_ItemSlot_C_GetTips) == 0x000008, "Wrong size on WBP_UI_ItemSlot_C_GetTips");
static_assert(offsetof(WBP_UI_ItemSlot_C_GetTips, Data) == 0x000000, "Member 'WBP_UI_ItemSlot_C_GetTips::Data' has a wrong offset!");

// Function WBP_UI_ItemSlot.WBP_UI_ItemSlot_C.HideBlankSlotIcon
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_ItemSlot_C_HideBlankSlotIcon final
{
public:
	bool                                          Hide;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_ItemSlot_C_HideBlankSlotIcon) == 0x000001, "Wrong alignment on WBP_UI_ItemSlot_C_HideBlankSlotIcon");
static_assert(sizeof(WBP_UI_ItemSlot_C_HideBlankSlotIcon) == 0x000001, "Wrong size on WBP_UI_ItemSlot_C_HideBlankSlotIcon");
static_assert(offsetof(WBP_UI_ItemSlot_C_HideBlankSlotIcon, Hide) == 0x000000, "Member 'WBP_UI_ItemSlot_C_HideBlankSlotIcon::Hide' has a wrong offset!");

// Function WBP_UI_ItemSlot.WBP_UI_ItemSlot_C.OnListItemObjectSetViaIndex
// 0x0004 (0x0004 - 0x0000)
struct WBP_UI_ItemSlot_C_OnListItemObjectSetViaIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_ItemSlot_C_OnListItemObjectSetViaIndex) == 0x000004, "Wrong alignment on WBP_UI_ItemSlot_C_OnListItemObjectSetViaIndex");
static_assert(sizeof(WBP_UI_ItemSlot_C_OnListItemObjectSetViaIndex) == 0x000004, "Wrong size on WBP_UI_ItemSlot_C_OnListItemObjectSetViaIndex");
static_assert(offsetof(WBP_UI_ItemSlot_C_OnListItemObjectSetViaIndex, Index_0) == 0x000000, "Member 'WBP_UI_ItemSlot_C_OnListItemObjectSetViaIndex::Index_0' has a wrong offset!");

// Function WBP_UI_ItemSlot.WBP_UI_ItemSlot_C.OnListItemValueChangedViaIndex
// 0x0004 (0x0004 - 0x0000)
struct WBP_UI_ItemSlot_C_OnListItemValueChangedViaIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_ItemSlot_C_OnListItemValueChangedViaIndex) == 0x000004, "Wrong alignment on WBP_UI_ItemSlot_C_OnListItemValueChangedViaIndex");
static_assert(sizeof(WBP_UI_ItemSlot_C_OnListItemValueChangedViaIndex) == 0x000004, "Wrong size on WBP_UI_ItemSlot_C_OnListItemValueChangedViaIndex");
static_assert(offsetof(WBP_UI_ItemSlot_C_OnListItemValueChangedViaIndex, Index_0) == 0x000000, "Member 'WBP_UI_ItemSlot_C_OnListItemValueChangedViaIndex::Index_0' has a wrong offset!");

// Function WBP_UI_ItemSlot.WBP_UI_ItemSlot_C.OnMouseButtonDoubleClick
// 0x0220 (0x0220 - 0x0000)
struct WBP_UI_ItemSlot_C_OnMouseButtonDoubleClick final
{
public:
	struct FGeometry                              InMyGeometry;                                      // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          InMouseEvent;                                      // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0168(0x00B8)()
};
static_assert(alignof(WBP_UI_ItemSlot_C_OnMouseButtonDoubleClick) == 0x000008, "Wrong alignment on WBP_UI_ItemSlot_C_OnMouseButtonDoubleClick");
static_assert(sizeof(WBP_UI_ItemSlot_C_OnMouseButtonDoubleClick) == 0x000220, "Wrong size on WBP_UI_ItemSlot_C_OnMouseButtonDoubleClick");
static_assert(offsetof(WBP_UI_ItemSlot_C_OnMouseButtonDoubleClick, InMyGeometry) == 0x000000, "Member 'WBP_UI_ItemSlot_C_OnMouseButtonDoubleClick::InMyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_UI_ItemSlot_C_OnMouseButtonDoubleClick, InMouseEvent) == 0x000038, "Member 'WBP_UI_ItemSlot_C_OnMouseButtonDoubleClick::InMouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_UI_ItemSlot_C_OnMouseButtonDoubleClick, ReturnValue) == 0x0000B0, "Member 'WBP_UI_ItemSlot_C_OnMouseButtonDoubleClick::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_ItemSlot_C_OnMouseButtonDoubleClick, CallFunc_Handled_ReturnValue) == 0x000168, "Member 'WBP_UI_ItemSlot_C_OnMouseButtonDoubleClick::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WBP_UI_ItemSlot.WBP_UI_ItemSlot_C.OnTouchEnded
// 0x0220 (0x0220 - 0x0000)
struct WBP_UI_ItemSlot_C_OnTouchEnded final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          InTouchEvent;                                      // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0168(0x00B8)()
};
static_assert(alignof(WBP_UI_ItemSlot_C_OnTouchEnded) == 0x000008, "Wrong alignment on WBP_UI_ItemSlot_C_OnTouchEnded");
static_assert(sizeof(WBP_UI_ItemSlot_C_OnTouchEnded) == 0x000220, "Wrong size on WBP_UI_ItemSlot_C_OnTouchEnded");
static_assert(offsetof(WBP_UI_ItemSlot_C_OnTouchEnded, MyGeometry) == 0x000000, "Member 'WBP_UI_ItemSlot_C_OnTouchEnded::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_UI_ItemSlot_C_OnTouchEnded, InTouchEvent) == 0x000038, "Member 'WBP_UI_ItemSlot_C_OnTouchEnded::InTouchEvent' has a wrong offset!");
static_assert(offsetof(WBP_UI_ItemSlot_C_OnTouchEnded, ReturnValue) == 0x0000B0, "Member 'WBP_UI_ItemSlot_C_OnTouchEnded::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_ItemSlot_C_OnTouchEnded, CallFunc_Handled_ReturnValue) == 0x000168, "Member 'WBP_UI_ItemSlot_C_OnTouchEnded::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WBP_UI_ItemSlot.WBP_UI_ItemSlot_C.OnTouchGesture
// 0x01A0 (0x01A0 - 0x0000)
struct WBP_UI_ItemSlot_C_OnTouchGesture final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          GestureEvent;                                      // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FGeometry                              NewLocalVar_0;                                     // 0x0168(0x0038)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_ItemSlot_C_OnTouchGesture) == 0x000008, "Wrong alignment on WBP_UI_ItemSlot_C_OnTouchGesture");
static_assert(sizeof(WBP_UI_ItemSlot_C_OnTouchGesture) == 0x0001A0, "Wrong size on WBP_UI_ItemSlot_C_OnTouchGesture");
static_assert(offsetof(WBP_UI_ItemSlot_C_OnTouchGesture, MyGeometry) == 0x000000, "Member 'WBP_UI_ItemSlot_C_OnTouchGesture::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_UI_ItemSlot_C_OnTouchGesture, GestureEvent) == 0x000038, "Member 'WBP_UI_ItemSlot_C_OnTouchGesture::GestureEvent' has a wrong offset!");
static_assert(offsetof(WBP_UI_ItemSlot_C_OnTouchGesture, ReturnValue) == 0x0000B0, "Member 'WBP_UI_ItemSlot_C_OnTouchGesture::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_ItemSlot_C_OnTouchGesture, NewLocalVar_0) == 0x000168, "Member 'WBP_UI_ItemSlot_C_OnTouchGesture::NewLocalVar_0' has a wrong offset!");

// Function WBP_UI_ItemSlot.WBP_UI_ItemSlot_C.OnTouchMoved
// 0x0168 (0x0168 - 0x0000)
struct WBP_UI_ItemSlot_C_OnTouchMoved final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          InTouchEvent;                                      // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(WBP_UI_ItemSlot_C_OnTouchMoved) == 0x000008, "Wrong alignment on WBP_UI_ItemSlot_C_OnTouchMoved");
static_assert(sizeof(WBP_UI_ItemSlot_C_OnTouchMoved) == 0x000168, "Wrong size on WBP_UI_ItemSlot_C_OnTouchMoved");
static_assert(offsetof(WBP_UI_ItemSlot_C_OnTouchMoved, MyGeometry) == 0x000000, "Member 'WBP_UI_ItemSlot_C_OnTouchMoved::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_UI_ItemSlot_C_OnTouchMoved, InTouchEvent) == 0x000038, "Member 'WBP_UI_ItemSlot_C_OnTouchMoved::InTouchEvent' has a wrong offset!");
static_assert(offsetof(WBP_UI_ItemSlot_C_OnTouchMoved, ReturnValue) == 0x0000B0, "Member 'WBP_UI_ItemSlot_C_OnTouchMoved::ReturnValue' has a wrong offset!");

// Function WBP_UI_ItemSlot.WBP_UI_ItemSlot_C.SetDressDisplayInfo
// 0x0008 (0x0008 - 0x0000)
struct WBP_UI_ItemSlot_C_SetDressDisplayInfo final
{
public:
	class USlotItemData_C*                        Data;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_ItemSlot_C_SetDressDisplayInfo) == 0x000008, "Wrong alignment on WBP_UI_ItemSlot_C_SetDressDisplayInfo");
static_assert(sizeof(WBP_UI_ItemSlot_C_SetDressDisplayInfo) == 0x000008, "Wrong size on WBP_UI_ItemSlot_C_SetDressDisplayInfo");
static_assert(offsetof(WBP_UI_ItemSlot_C_SetDressDisplayInfo, Data) == 0x000000, "Member 'WBP_UI_ItemSlot_C_SetDressDisplayInfo::Data' has a wrong offset!");

// Function WBP_UI_ItemSlot.WBP_UI_ItemSlot_C.SetQuality
// 0x0004 (0x0004 - 0x0000)
struct WBP_UI_ItemSlot_C_SetQuality final
{
public:
	int32                                         Quality;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_ItemSlot_C_SetQuality) == 0x000004, "Wrong alignment on WBP_UI_ItemSlot_C_SetQuality");
static_assert(sizeof(WBP_UI_ItemSlot_C_SetQuality) == 0x000004, "Wrong size on WBP_UI_ItemSlot_C_SetQuality");
static_assert(offsetof(WBP_UI_ItemSlot_C_SetQuality, Quality) == 0x000000, "Member 'WBP_UI_ItemSlot_C_SetQuality::Quality' has a wrong offset!");

// Function WBP_UI_ItemSlot.WBP_UI_ItemSlot_C.Update on Mark Point Collect
// 0x0020 (0x0020 - 0x0000)
struct WBP_UI_ItemSlot_C_Update_on_Mark_Point_Collect final
{
public:
	class USlotItemData_C*                        ItemData;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0010)()
	bool                                          CallFunc_Greater_Int64Int64_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_ItemSlot_C_Update_on_Mark_Point_Collect) == 0x000008, "Wrong alignment on WBP_UI_ItemSlot_C_Update_on_Mark_Point_Collect");
static_assert(sizeof(WBP_UI_ItemSlot_C_Update_on_Mark_Point_Collect) == 0x000020, "Wrong size on WBP_UI_ItemSlot_C_Update_on_Mark_Point_Collect");
static_assert(offsetof(WBP_UI_ItemSlot_C_Update_on_Mark_Point_Collect, ItemData) == 0x000000, "Member 'WBP_UI_ItemSlot_C_Update_on_Mark_Point_Collect::ItemData' has a wrong offset!");
static_assert(offsetof(WBP_UI_ItemSlot_C_Update_on_Mark_Point_Collect, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'WBP_UI_ItemSlot_C_Update_on_Mark_Point_Collect::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_ItemSlot_C_Update_on_Mark_Point_Collect, CallFunc_Greater_Int64Int64_ReturnValue) == 0x000018, "Member 'WBP_UI_ItemSlot_C_Update_on_Mark_Point_Collect::CallFunc_Greater_Int64Int64_ReturnValue' has a wrong offset!");

// Function WBP_UI_ItemSlot.WBP_UI_ItemSlot_C.UpdateData
// 0x0008 (0x0008 - 0x0000)
struct WBP_UI_ItemSlot_C_UpdateData final
{
public:
	class USlotItemData_C*                        data_;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_ItemSlot_C_UpdateData) == 0x000008, "Wrong alignment on WBP_UI_ItemSlot_C_UpdateData");
static_assert(sizeof(WBP_UI_ItemSlot_C_UpdateData) == 0x000008, "Wrong size on WBP_UI_ItemSlot_C_UpdateData");
static_assert(offsetof(WBP_UI_ItemSlot_C_UpdateData, data_) == 0x000000, "Member 'WBP_UI_ItemSlot_C_UpdateData::data_' has a wrong offset!");

// Function WBP_UI_ItemSlot.WBP_UI_ItemSlot_C.UpdateIcon
// 0x0008 (0x0008 - 0x0000)
struct WBP_UI_ItemSlot_C_UpdateIcon final
{
public:
	class USlotItemData_C*                        NewData;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_ItemSlot_C_UpdateIcon) == 0x000008, "Wrong alignment on WBP_UI_ItemSlot_C_UpdateIcon");
static_assert(sizeof(WBP_UI_ItemSlot_C_UpdateIcon) == 0x000008, "Wrong size on WBP_UI_ItemSlot_C_UpdateIcon");
static_assert(offsetof(WBP_UI_ItemSlot_C_UpdateIcon, NewData) == 0x000000, "Member 'WBP_UI_ItemSlot_C_UpdateIcon::NewData' has a wrong offset!");

// Function WBP_UI_ItemSlot.WBP_UI_ItemSlot_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct WBP_UI_ItemSlot_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_ItemSlot_C_GetModuleName) == 0x000008, "Wrong alignment on WBP_UI_ItemSlot_C_GetModuleName");
static_assert(sizeof(WBP_UI_ItemSlot_C_GetModuleName) == 0x000010, "Wrong size on WBP_UI_ItemSlot_C_GetModuleName");
static_assert(offsetof(WBP_UI_ItemSlot_C_GetModuleName, ReturnValue) == 0x000000, "Member 'WBP_UI_ItemSlot_C_GetModuleName::ReturnValue' has a wrong offset!");

}

