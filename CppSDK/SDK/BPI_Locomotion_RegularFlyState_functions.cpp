#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_Locomotion_RegularFlyState

#include "Basic.hpp"

#include "BPI_Locomotion_RegularFlyState_classes.hpp"
#include "BPI_Locomotion_RegularFlyState_parameters.hpp"


namespace SDK
{

// Function BPI_Locomotion_RegularFlyState.BPI_Locomotion_RegularFlyState_C.BPI_Get_RegularFlyingConfigData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double*                                 LowFlyingSpeed                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 NormalFlyingSpeed                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 TopFlyingSpeed                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_Locomotion_RegularFlyState_C::BPI_Get_RegularFlyingConfigData(double* LowFlyingSpeed, double* NormalFlyingSpeed, double* TopFlyingSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_Locomotion_RegularFlyState_C", "BPI_Get_RegularFlyingConfigData");

	Params::BPI_Locomotion_RegularFlyState_C_BPI_Get_RegularFlyingConfigData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (LowFlyingSpeed != nullptr)
		*LowFlyingSpeed = Parms.LowFlyingSpeed;

	if (NormalFlyingSpeed != nullptr)
		*NormalFlyingSpeed = Parms.NormalFlyingSpeed;

	if (TopFlyingSpeed != nullptr)
		*TopFlyingSpeed = Parms.TopFlyingSpeed;
}

}

