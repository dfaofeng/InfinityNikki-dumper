#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharacterGeneratorNetwork

#include "Basic.hpp"

#include "CharacterGeneratorNetwork_classes.hpp"
#include "CharacterGeneratorNetwork_parameters.hpp"


namespace SDK
{

// Function CharacterGeneratorNetwork.CharacterNetworkHelper.ConvertPixelArrayToTexture2D
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<struct FPicturePixel>&     Picture                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UCharacterNetworkHelper::ConvertPixelArrayToTexture2D(const TArray<struct FPicturePixel>& Picture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterNetworkHelper", "ConvertPixelArrayToTexture2D");

	Params::CharacterNetworkHelper_ConvertPixelArrayToTexture2D Parms{};

	Parms.Picture = std::move(Picture);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterGeneratorNetwork.CharacterNetworkHelper.ConvertTexture2DToPixelArray
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2D*                       Texture                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FPicturePixel>            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FPicturePixel> UCharacterNetworkHelper::ConvertTexture2DToPixelArray(class UTexture2D* Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterNetworkHelper", "ConvertTexture2DToPixelArray");

	Params::CharacterNetworkHelper_ConvertTexture2DToPixelArray Parms{};

	Parms.Texture = Texture;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterGeneratorNetwork.CharacterNetworkHelper.LoadImageAsTexture2D
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    ImagePath                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UCharacterNetworkHelper::LoadImageAsTexture2D(const class FString& ImagePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterNetworkHelper", "LoadImageAsTexture2D");

	Params::CharacterNetworkHelper_LoadImageAsTexture2D Parms{};

	Parms.ImagePath = std::move(ImagePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterGeneratorNetwork.CharacterNetworkHelper.MakeHttpRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    RequestLink                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    RequestVerb                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    RequestContent                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCharacterNetworkHelper::MakeHttpRequest(const class FString& RequestLink, const class FString& RequestVerb, const class FString& RequestContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterNetworkHelper", "MakeHttpRequest");

	Params::CharacterNetworkHelper_MakeHttpRequest Parms{};

	Parms.RequestLink = std::move(RequestLink);
	Parms.RequestVerb = std::move(RequestVerb);
	Parms.RequestContent = std::move(RequestContent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CharacterGeneratorNetwork.CharacterNetworkHelper.OnHttpResponseFailure
// (Event, Public, BlueprintEvent)
// Parameters:
// const class FString&                    Content                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ResponseCode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCharacterNetworkHelper::OnHttpResponseFailure(const class FString& Content, int32 ResponseCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterNetworkHelper", "OnHttpResponseFailure");

	Params::CharacterNetworkHelper_OnHttpResponseFailure Parms{};

	Parms.Content = std::move(Content);
	Parms.ResponseCode = ResponseCode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharacterGeneratorNetwork.CharacterNetworkHelper.OnHttpResponseSuccess
// (Event, Public, BlueprintEvent)
// Parameters:
// const class FString&                    Content                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ResponseCode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCharacterNetworkHelper::OnHttpResponseSuccess(const class FString& Content, int32 ResponseCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterNetworkHelper", "OnHttpResponseSuccess");

	Params::CharacterNetworkHelper_OnHttpResponseSuccess Parms{};

	Parms.Content = std::move(Content);
	Parms.ResponseCode = ResponseCode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharacterGeneratorNetwork.CharacterNetworkHelper.SaveTextureAsAsset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2D*                       Texture                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    AssetPath                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    AssetName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCharacterNetworkHelper::SaveTextureAsAsset(class UTexture2D* Texture, const class FString& AssetPath, const class FString& AssetName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterNetworkHelper", "SaveTextureAsAsset");

	Params::CharacterNetworkHelper_SaveTextureAsAsset Parms{};

	Parms.Texture = Texture;
	Parms.AssetPath = std::move(AssetPath);
	Parms.AssetName = std::move(AssetName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

