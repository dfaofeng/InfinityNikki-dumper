#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PDA_FluxCoastlineState

#include "Basic.hpp"

#include "PDA_FluxCoastlineState_classes.hpp"
#include "PDA_FluxCoastlineState_parameters.hpp"


namespace SDK
{

// Function PDA_FluxCoastlineState.PDA_FluxCoastlineState_C.ApplyNiagaraData
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UNiagaraComponent*                NiagaraSystem                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    UseGround                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPDA_FluxCoastlineState_C::ApplyNiagaraData(class UNiagaraComponent* NiagaraSystem, bool UseGround)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PDA_FluxCoastlineState_C", "ApplyNiagaraData");

	Params::PDA_FluxCoastlineState_C_ApplyNiagaraData Parms{};

	Parms.NiagaraSystem = NiagaraSystem;
	Parms.UseGround = UseGround;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PDA_FluxCoastlineState.PDA_FluxCoastlineState_C.ClearExternalReferences
// (Public, BlueprintCallable, BlueprintEvent)

void UPDA_FluxCoastlineState_C::ClearExternalReferences()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PDA_FluxCoastlineState_C", "ClearExternalReferences");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PDA_FluxCoastlineState.PDA_FluxCoastlineState_C.CopyPropertiesToObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Destination                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Done                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPDA_FluxCoastlineState_C::CopyPropertiesToObject(class UObject* Destination, bool* Done)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PDA_FluxCoastlineState_C", "CopyPropertiesToObject");

	Params::PDA_FluxCoastlineState_C_CopyPropertiesToObject Parms{};

	Parms.Destination = Destination;

	UObject::ProcessEvent(Func, &Parms);

	if (Done != nullptr)
		*Done = Parms.Done;
}


// Function PDA_FluxCoastlineState.PDA_FluxCoastlineState_C.ExecuteUbergraph_PDA_FluxCoastlineState
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPDA_FluxCoastlineState_C::ExecuteUbergraph_PDA_FluxCoastlineState(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PDA_FluxCoastlineState_C", "ExecuteUbergraph_PDA_FluxCoastlineState");

	Params::PDA_FluxCoastlineState_C_ExecuteUbergraph_PDA_FluxCoastlineState Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PDA_FluxCoastlineState.PDA_FluxCoastlineState_C.GetExternalReferences
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UTexture*>*                Objects                                                (Parm, OutParm)

void UPDA_FluxCoastlineState_C::GetExternalReferences(TArray<class UTexture*>* Objects)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PDA_FluxCoastlineState_C", "GetExternalReferences");

	Params::PDA_FluxCoastlineState_C_GetExternalReferences Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Objects != nullptr)
		*Objects = std::move(Parms.Objects);
}


// Function PDA_FluxCoastlineState.PDA_FluxCoastlineState_C.GetVolumeTransform
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector&                   ExtraSize                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ZOffsetScale                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform*                      NewParam                                               (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPDA_FluxCoastlineState_C::GetVolumeTransform(const struct FVector& ExtraSize, const struct FVector& Scale, double ZOffsetScale, struct FTransform* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PDA_FluxCoastlineState_C", "GetVolumeTransform");

	Params::PDA_FluxCoastlineState_C_GetVolumeTransform Parms{};

	Parms.ExtraSize = std::move(ExtraSize);
	Parms.Scale = std::move(Scale);
	Parms.ZOffsetScale = ZOffsetScale;

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = std::move(Parms.NewParam);
}


// Function PDA_FluxCoastlineState.PDA_FluxCoastlineState_C.SetDomain
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Size                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FIntPoint&                 Resolution                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  PixelSize                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CaptureOffset_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Width                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPDA_FluxCoastlineState_C::SetDomain(const struct FVector& Location, const struct FVector& Size, const struct FIntPoint& Resolution, double PixelSize, double CaptureOffset_0, double Width)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PDA_FluxCoastlineState_C", "SetDomain");

	Params::PDA_FluxCoastlineState_C_SetDomain Parms{};

	Parms.Location = std::move(Location);
	Parms.Size = std::move(Size);
	Parms.Resolution = std::move(Resolution);
	Parms.PixelSize = PixelSize;
	Parms.CaptureOffset_0 = CaptureOffset_0;
	Parms.Width = Width;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PDA_FluxCoastlineState.PDA_FluxCoastlineState_C.SetTextures
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture*                         WorldCoastline                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UTexture*                         WorldGround                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UPDA_FluxCoastlineState_C::SetTextures(class UTexture* WorldCoastline, class UTexture* WorldGround)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PDA_FluxCoastlineState_C", "SetTextures");

	Params::PDA_FluxCoastlineState_C_SetTextures Parms{};

	Parms.WorldCoastline = WorldCoastline;
	Parms.WorldGround = WorldGround;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PDA_FluxCoastlineState.PDA_FluxCoastlineState_C.ApplyMaterialData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// TArray<class UMaterialInstanceDynamic*>&MaterialInstances                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UPDA_FluxCoastlineState_C::ApplyMaterialData(TArray<class UMaterialInstanceDynamic*>& MaterialInstances) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PDA_FluxCoastlineState_C", "ApplyMaterialData");

	Params::PDA_FluxCoastlineState_C_ApplyMaterialData Parms{};

	Parms.MaterialInstances = std::move(MaterialInstances);

	UObject::ProcessEvent(Func, &Parms);

	MaterialInstances = std::move(Parms.MaterialInstances);
}


// Function PDA_FluxCoastlineState.PDA_FluxCoastlineState_C.GetPixelSize
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FLinearColor*                    WorldToSimulationUV                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPDA_FluxCoastlineState_C::GetPixelSize(struct FLinearColor* WorldToSimulationUV) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PDA_FluxCoastlineState_C", "GetPixelSize");

	Params::PDA_FluxCoastlineState_C_GetPixelSize Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (WorldToSimulationUV != nullptr)
		*WorldToSimulationUV = std::move(Parms.WorldToSimulationUV);
}


// Function PDA_FluxCoastlineState.PDA_FluxCoastlineState_C.GetSurfaceHeight
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// double*                                 SurfaceHeight                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPDA_FluxCoastlineState_C::GetSurfaceHeight(double* SurfaceHeight) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PDA_FluxCoastlineState_C", "GetSurfaceHeight");

	Params::PDA_FluxCoastlineState_C_GetSurfaceHeight Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SurfaceHeight != nullptr)
		*SurfaceHeight = Parms.SurfaceHeight;
}


// Function PDA_FluxCoastlineState.PDA_FluxCoastlineState_C.GetTextureSize
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FIntPoint*                       Resolution                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPDA_FluxCoastlineState_C::GetTextureSize(struct FIntPoint* Resolution) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PDA_FluxCoastlineState_C", "GetTextureSize");

	Params::PDA_FluxCoastlineState_C_GetTextureSize Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Resolution != nullptr)
		*Resolution = std::move(Parms.Resolution);
}


// Function PDA_FluxCoastlineState.PDA_FluxCoastlineState_C.GetWorldToTextureUV
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FLinearColor*                    WorldToTextureUV                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPDA_FluxCoastlineState_C::GetWorldToTextureUV(struct FLinearColor* WorldToTextureUV) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PDA_FluxCoastlineState_C", "GetWorldToTextureUV");

	Params::PDA_FluxCoastlineState_C_GetWorldToTextureUV Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (WorldToTextureUV != nullptr)
		*WorldToTextureUV = std::move(Parms.WorldToTextureUV);
}

}

