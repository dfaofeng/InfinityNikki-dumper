#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AreaVolume

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AreaVolume.BP_AreaVolume_C
// 0x0010 (0x03C8 - 0x03B8)
class ABP_AreaVolume_C final : public AStaticMeshActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	int32                                         MeshType;                                          // 0x03C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void DisableOverlap();
	void EnableOverlap();
	void ExecuteUbergraph_BP_AreaVolume(int32 EntryPoint);
	void OnOverlapBegin(class AActor* Actor);
	void OnOverlapEnd(class AActor* Actor);
	void ReceiveActorBeginOverlap(class AActor* OtherActor);
	void ReceiveActorEndOverlap(class AActor* OtherActor);
	void ReceiveBeginPlay();
	void ReceiveDestroyed();
	void SetMeshType(int32 MeshType_0);
	void SetTransform(const struct FVector& Location, const struct FRotator& Rotation, const struct FVector& Scale);
	void ShowVolume(bool CanShow);

	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AreaVolume_C">();
	}
	static class ABP_AreaVolume_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AreaVolume_C>();
	}
};
static_assert(alignof(ABP_AreaVolume_C) == 0x000008, "Wrong alignment on ABP_AreaVolume_C");
static_assert(sizeof(ABP_AreaVolume_C) == 0x0003C8, "Wrong size on ABP_AreaVolume_C");
static_assert(offsetof(ABP_AreaVolume_C, UberGraphFrame) == 0x0003B8, "Member 'ABP_AreaVolume_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_AreaVolume_C, MeshType) == 0x0003C0, "Member 'ABP_AreaVolume_C::MeshType' has a wrong offset!");

}

