#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_Common_KeyTips

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_UI_Common_KeyTips.WBP_UI_Common_KeyTips_C.SetKeyByInputAction
// 0x0010 (0x0010 - 0x0000)
struct WBP_UI_Common_KeyTips_C_SetKeyByInputAction final
{
public:
	class FString                                 ActionPath;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Common_KeyTips_C_SetKeyByInputAction) == 0x000008, "Wrong alignment on WBP_UI_Common_KeyTips_C_SetKeyByInputAction");
static_assert(sizeof(WBP_UI_Common_KeyTips_C_SetKeyByInputAction) == 0x000010, "Wrong size on WBP_UI_Common_KeyTips_C_SetKeyByInputAction");
static_assert(offsetof(WBP_UI_Common_KeyTips_C_SetKeyByInputAction, ActionPath) == 0x000000, "Member 'WBP_UI_Common_KeyTips_C_SetKeyByInputAction::ActionPath' has a wrong offset!");

// Function WBP_UI_Common_KeyTips.WBP_UI_Common_KeyTips_C.SetKey
// 0x0018 (0x0018 - 0x0000)
struct WBP_UI_Common_KeyTips_C_SetKey final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Common_KeyTips_C_SetKey) == 0x000008, "Wrong alignment on WBP_UI_Common_KeyTips_C_SetKey");
static_assert(sizeof(WBP_UI_Common_KeyTips_C_SetKey) == 0x000018, "Wrong size on WBP_UI_Common_KeyTips_C_SetKey");
static_assert(offsetof(WBP_UI_Common_KeyTips_C_SetKey, Key) == 0x000000, "Member 'WBP_UI_Common_KeyTips_C_SetKey::Key' has a wrong offset!");

// Function WBP_UI_Common_KeyTips.WBP_UI_Common_KeyTips_C.RefreshTextTips
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_Common_KeyTips_C_RefreshTextTips final
{
public:
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Common_KeyTips_C_RefreshTextTips) == 0x000001, "Wrong alignment on WBP_UI_Common_KeyTips_C_RefreshTextTips");
static_assert(sizeof(WBP_UI_Common_KeyTips_C_RefreshTextTips) == 0x000001, "Wrong size on WBP_UI_Common_KeyTips_C_RefreshTextTips");
static_assert(offsetof(WBP_UI_Common_KeyTips_C_RefreshTextTips, CallFunc_TextIsEmpty_ReturnValue) == 0x000000, "Member 'WBP_UI_Common_KeyTips_C_RefreshTextTips::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");

// Function WBP_UI_Common_KeyTips.WBP_UI_Common_KeyTips_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_Common_KeyTips_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Common_KeyTips_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_UI_Common_KeyTips_C_PreConstruct");
static_assert(sizeof(WBP_UI_Common_KeyTips_C_PreConstruct) == 0x000001, "Wrong size on WBP_UI_Common_KeyTips_C_PreConstruct");
static_assert(offsetof(WBP_UI_Common_KeyTips_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_UI_Common_KeyTips_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_UI_Common_KeyTips.WBP_UI_Common_KeyTips_C.ExecuteUbergraph_WBP_UI_Common_KeyTips
// 0x0028 (0x0028 - 0x0000)
struct WBP_UI_Common_KeyTips_C_ExecuteUbergraph_WBP_UI_Common_KeyTips final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_SoftObjectReferenceToString_ReturnValue; // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsValid_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Common_KeyTips_C_ExecuteUbergraph_WBP_UI_Common_KeyTips) == 0x000008, "Wrong alignment on WBP_UI_Common_KeyTips_C_ExecuteUbergraph_WBP_UI_Common_KeyTips");
static_assert(sizeof(WBP_UI_Common_KeyTips_C_ExecuteUbergraph_WBP_UI_Common_KeyTips) == 0x000028, "Wrong size on WBP_UI_Common_KeyTips_C_ExecuteUbergraph_WBP_UI_Common_KeyTips");
static_assert(offsetof(WBP_UI_Common_KeyTips_C_ExecuteUbergraph_WBP_UI_Common_KeyTips, EntryPoint) == 0x000000, "Member 'WBP_UI_Common_KeyTips_C_ExecuteUbergraph_WBP_UI_Common_KeyTips::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UI_Common_KeyTips_C_ExecuteUbergraph_WBP_UI_Common_KeyTips, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'WBP_UI_Common_KeyTips_C_ExecuteUbergraph_WBP_UI_Common_KeyTips::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Common_KeyTips_C_ExecuteUbergraph_WBP_UI_Common_KeyTips, K2Node_Event_IsDesignTime) == 0x000005, "Member 'WBP_UI_Common_KeyTips_C_ExecuteUbergraph_WBP_UI_Common_KeyTips::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_UI_Common_KeyTips_C_ExecuteUbergraph_WBP_UI_Common_KeyTips, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000008, "Member 'WBP_UI_Common_KeyTips_C_ExecuteUbergraph_WBP_UI_Common_KeyTips::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Common_KeyTips_C_ExecuteUbergraph_WBP_UI_Common_KeyTips, CallFunc_Conv_SoftObjectReferenceToString_ReturnValue) == 0x000010, "Member 'WBP_UI_Common_KeyTips_C_ExecuteUbergraph_WBP_UI_Common_KeyTips::CallFunc_Conv_SoftObjectReferenceToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Common_KeyTips_C_ExecuteUbergraph_WBP_UI_Common_KeyTips, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000020, "Member 'WBP_UI_Common_KeyTips_C_ExecuteUbergraph_WBP_UI_Common_KeyTips::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Common_KeyTips_C_ExecuteUbergraph_WBP_UI_Common_KeyTips, CallFunc_Key_IsValid_ReturnValue) == 0x000021, "Member 'WBP_UI_Common_KeyTips_C_ExecuteUbergraph_WBP_UI_Common_KeyTips::CallFunc_Key_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Common_KeyTips_C_ExecuteUbergraph_WBP_UI_Common_KeyTips, CallFunc_TextIsEmpty_ReturnValue) == 0x000022, "Member 'WBP_UI_Common_KeyTips_C_ExecuteUbergraph_WBP_UI_Common_KeyTips::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");

// Function WBP_UI_Common_KeyTips.WBP_UI_Common_KeyTips_C.BP_SetTips
// 0x0010 (0x0010 - 0x0000)
struct WBP_UI_Common_KeyTips_C_BP_SetTips final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_UI_Common_KeyTips_C_BP_SetTips) == 0x000008, "Wrong alignment on WBP_UI_Common_KeyTips_C_BP_SetTips");
static_assert(sizeof(WBP_UI_Common_KeyTips_C_BP_SetTips) == 0x000010, "Wrong size on WBP_UI_Common_KeyTips_C_BP_SetTips");
static_assert(offsetof(WBP_UI_Common_KeyTips_C_BP_SetTips, Text) == 0x000000, "Member 'WBP_UI_Common_KeyTips_C_BP_SetTips::Text' has a wrong offset!");

// Function WBP_UI_Common_KeyTips.WBP_UI_Common_KeyTips_C.BP_SetJoinDark
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_Common_KeyTips_C_BP_SetJoinDark final
{
public:
	bool                                          bJoinDark;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Common_KeyTips_C_BP_SetJoinDark) == 0x000001, "Wrong alignment on WBP_UI_Common_KeyTips_C_BP_SetJoinDark");
static_assert(sizeof(WBP_UI_Common_KeyTips_C_BP_SetJoinDark) == 0x000001, "Wrong size on WBP_UI_Common_KeyTips_C_BP_SetJoinDark");
static_assert(offsetof(WBP_UI_Common_KeyTips_C_BP_SetJoinDark, bJoinDark) == 0x000000, "Member 'WBP_UI_Common_KeyTips_C_BP_SetJoinDark::bJoinDark' has a wrong offset!");

// Function WBP_UI_Common_KeyTips.WBP_UI_Common_KeyTips_C.BP_SetInputAction
// 0x0010 (0x0010 - 0x0000)
struct WBP_UI_Common_KeyTips_C_BP_SetInputAction final
{
public:
	class UX6InputAction*                         Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bForceSimple;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Common_KeyTips_C_BP_SetInputAction) == 0x000008, "Wrong alignment on WBP_UI_Common_KeyTips_C_BP_SetInputAction");
static_assert(sizeof(WBP_UI_Common_KeyTips_C_BP_SetInputAction) == 0x000010, "Wrong size on WBP_UI_Common_KeyTips_C_BP_SetInputAction");
static_assert(offsetof(WBP_UI_Common_KeyTips_C_BP_SetInputAction, Action) == 0x000000, "Member 'WBP_UI_Common_KeyTips_C_BP_SetInputAction::Action' has a wrong offset!");
static_assert(offsetof(WBP_UI_Common_KeyTips_C_BP_SetInputAction, bForceSimple) == 0x000008, "Member 'WBP_UI_Common_KeyTips_C_BP_SetInputAction::bForceSimple' has a wrong offset!");

// Function WBP_UI_Common_KeyTips.WBP_UI_Common_KeyTips_C.BP_SetEnableState
// 0x0024 (0x0024 - 0x0000)
struct WBP_UI_Common_KeyTips_C_BP_SetEnableState final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Common_KeyTips_C_BP_SetEnableState) == 0x000004, "Wrong alignment on WBP_UI_Common_KeyTips_C_BP_SetEnableState");
static_assert(sizeof(WBP_UI_Common_KeyTips_C_BP_SetEnableState) == 0x000024, "Wrong size on WBP_UI_Common_KeyTips_C_BP_SetEnableState");
static_assert(offsetof(WBP_UI_Common_KeyTips_C_BP_SetEnableState, bEnable) == 0x000000, "Member 'WBP_UI_Common_KeyTips_C_BP_SetEnableState::bEnable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Common_KeyTips_C_BP_SetEnableState, K2Node_MakeStruct_LinearColor) == 0x000004, "Member 'WBP_UI_Common_KeyTips_C_BP_SetEnableState::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(WBP_UI_Common_KeyTips_C_BP_SetEnableState, K2Node_MakeStruct_LinearColor_1) == 0x000014, "Member 'WBP_UI_Common_KeyTips_C_BP_SetEnableState::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");

// Function WBP_UI_Common_KeyTips.WBP_UI_Common_KeyTips_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct WBP_UI_Common_KeyTips_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Common_KeyTips_C_GetModuleName) == 0x000008, "Wrong alignment on WBP_UI_Common_KeyTips_C_GetModuleName");
static_assert(sizeof(WBP_UI_Common_KeyTips_C_GetModuleName) == 0x000010, "Wrong size on WBP_UI_Common_KeyTips_C_GetModuleName");
static_assert(offsetof(WBP_UI_Common_KeyTips_C_GetModuleName, ReturnValue) == 0x000000, "Member 'WBP_UI_Common_KeyTips_C_GetModuleName::ReturnValue' has a wrong offset!");

}

