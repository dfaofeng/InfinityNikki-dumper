#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: X6EventMap

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "X6EventMap_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class X6EventMap.X6EventMapSubsystem
// 0x00E8 (0x0118 - 0x0030)
class UX6EventMapSubsystem final : public UEngineSubsystem
{
public:
	class FName                                   EditorPreviewGameVersion;                          // 0x0030(0x0008)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FSoftObjectPath                        ProjectTagEnumPath;                                // 0x0038(0x0020)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<int32, class FName>                      EditorPreviewLocation2SeasonProjectTagAlias;       // 0x0058(0x0050)(Config, NativeAccessSpecifierPrivate)
	TArray<class FName>                           EditorPreviewEventMapProjectTagAliases;            // 0x00A8(0x0010)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	TMap<int32, struct FProjectTagEnumInfo>       EditorPreviewLocation2SeasonProjectTag;            // 0x00B8(0x0050)(NativeAccessSpecifierPrivate)
	TArray<struct FProjectTagEnumInfo>            EditorPreviewEventMapProjectTags;                  // 0x0108(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)

public:
	TArray<struct FProjectTagEnumInfo> GetEditorPreviewEventMapProjectTags();
	class FName GetEditorPreviewGameVersion();
	TMap<int32, struct FProjectTagEnumInfo> GetEditorPreviewLocation2SeasonProjectTagMap();
	struct FProjectTagEnumInfo GetEditorPreviewSeasonProjectTagByLocationID(int32 LocationID);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"X6EventMapSubsystem">();
	}
	static class UX6EventMapSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UX6EventMapSubsystem>();
	}
};
static_assert(alignof(UX6EventMapSubsystem) == 0x000008, "Wrong alignment on UX6EventMapSubsystem");
static_assert(sizeof(UX6EventMapSubsystem) == 0x000118, "Wrong size on UX6EventMapSubsystem");
static_assert(offsetof(UX6EventMapSubsystem, EditorPreviewGameVersion) == 0x000030, "Member 'UX6EventMapSubsystem::EditorPreviewGameVersion' has a wrong offset!");
static_assert(offsetof(UX6EventMapSubsystem, ProjectTagEnumPath) == 0x000038, "Member 'UX6EventMapSubsystem::ProjectTagEnumPath' has a wrong offset!");
static_assert(offsetof(UX6EventMapSubsystem, EditorPreviewLocation2SeasonProjectTagAlias) == 0x000058, "Member 'UX6EventMapSubsystem::EditorPreviewLocation2SeasonProjectTagAlias' has a wrong offset!");
static_assert(offsetof(UX6EventMapSubsystem, EditorPreviewEventMapProjectTagAliases) == 0x0000A8, "Member 'UX6EventMapSubsystem::EditorPreviewEventMapProjectTagAliases' has a wrong offset!");
static_assert(offsetof(UX6EventMapSubsystem, EditorPreviewLocation2SeasonProjectTag) == 0x0000B8, "Member 'UX6EventMapSubsystem::EditorPreviewLocation2SeasonProjectTag' has a wrong offset!");
static_assert(offsetof(UX6EventMapSubsystem, EditorPreviewEventMapProjectTags) == 0x000108, "Member 'UX6EventMapSubsystem::EditorPreviewEventMapProjectTags' has a wrong offset!");

}

