#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InteractiveActorComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "EInt32PlayerPawnStateTypes_structs.hpp"
#include "E_InteractiveActorType_structs.hpp"
#include "E_InteractiveStageEnum_structs.hpp"
#include "X6Game_structs.hpp"
#include "E_InteractionProcess_structs.hpp"


namespace SDK::Params
{

// Function BP_InteractiveActorComponent.BP_InteractiveActorComponent_C.UpdateCanInteract
// 0x0002 (0x0002 - 0x0000)
struct BP_InteractiveActorComponent_C_UpdateCanInteract final
{
public:
	bool                                          ShowInteractUI;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanInteract_0;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveActorComponent_C_UpdateCanInteract) == 0x000001, "Wrong alignment on BP_InteractiveActorComponent_C_UpdateCanInteract");
static_assert(sizeof(BP_InteractiveActorComponent_C_UpdateCanInteract) == 0x000002, "Wrong size on BP_InteractiveActorComponent_C_UpdateCanInteract");
static_assert(offsetof(BP_InteractiveActorComponent_C_UpdateCanInteract, ShowInteractUI) == 0x000000, "Member 'BP_InteractiveActorComponent_C_UpdateCanInteract::ShowInteractUI' has a wrong offset!");
static_assert(offsetof(BP_InteractiveActorComponent_C_UpdateCanInteract, CanInteract_0) == 0x000001, "Member 'BP_InteractiveActorComponent_C_UpdateCanInteract::CanInteract_0' has a wrong offset!");

// Function BP_InteractiveActorComponent.BP_InteractiveActorComponent_C.GetInteractiveActorType
// 0x0001 (0x0001 - 0x0000)
struct BP_InteractiveActorComponent_C_GetInteractiveActorType final
{
public:
	E_InteractiveActorType                        ActorType;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveActorComponent_C_GetInteractiveActorType) == 0x000001, "Wrong alignment on BP_InteractiveActorComponent_C_GetInteractiveActorType");
static_assert(sizeof(BP_InteractiveActorComponent_C_GetInteractiveActorType) == 0x000001, "Wrong size on BP_InteractiveActorComponent_C_GetInteractiveActorType");
static_assert(offsetof(BP_InteractiveActorComponent_C_GetInteractiveActorType, ActorType) == 0x000000, "Member 'BP_InteractiveActorComponent_C_GetInteractiveActorType::ActorType' has a wrong offset!");

// Function BP_InteractiveActorComponent.BP_InteractiveActorComponent_C.GetInteractiveActorConfigID
// 0x0008 (0x0008 - 0x0000)
struct BP_InteractiveActorComponent_C_GetInteractiveActorConfigID final
{
public:
	int64                                         ConfigID;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveActorComponent_C_GetInteractiveActorConfigID) == 0x000008, "Wrong alignment on BP_InteractiveActorComponent_C_GetInteractiveActorConfigID");
static_assert(sizeof(BP_InteractiveActorComponent_C_GetInteractiveActorConfigID) == 0x000008, "Wrong size on BP_InteractiveActorComponent_C_GetInteractiveActorConfigID");
static_assert(offsetof(BP_InteractiveActorComponent_C_GetInteractiveActorConfigID, ConfigID) == 0x000000, "Member 'BP_InteractiveActorComponent_C_GetInteractiveActorConfigID::ConfigID' has a wrong offset!");

// Function BP_InteractiveActorComponent.BP_InteractiveActorComponent_C.GetCanInteract
// 0x0001 (0x0001 - 0x0000)
struct BP_InteractiveActorComponent_C_GetCanInteract final
{
public:
	bool                                          Can;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveActorComponent_C_GetCanInteract) == 0x000001, "Wrong alignment on BP_InteractiveActorComponent_C_GetCanInteract");
static_assert(sizeof(BP_InteractiveActorComponent_C_GetCanInteract) == 0x000001, "Wrong size on BP_InteractiveActorComponent_C_GetCanInteract");
static_assert(offsetof(BP_InteractiveActorComponent_C_GetCanInteract, Can) == 0x000000, "Member 'BP_InteractiveActorComponent_C_GetCanInteract::Can' has a wrong offset!");

// Function BP_InteractiveActorComponent.BP_InteractiveActorComponent_C.BP_SetIsBlock
// 0x0001 (0x0001 - 0x0000)
struct BP_InteractiveActorComponent_C_BP_SetIsBlock final
{
public:
	bool                                          IsBlock;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveActorComponent_C_BP_SetIsBlock) == 0x000001, "Wrong alignment on BP_InteractiveActorComponent_C_BP_SetIsBlock");
static_assert(sizeof(BP_InteractiveActorComponent_C_BP_SetIsBlock) == 0x000001, "Wrong size on BP_InteractiveActorComponent_C_BP_SetIsBlock");
static_assert(offsetof(BP_InteractiveActorComponent_C_BP_SetIsBlock, IsBlock) == 0x000000, "Member 'BP_InteractiveActorComponent_C_BP_SetIsBlock::IsBlock' has a wrong offset!");

// Function BP_InteractiveActorComponent.BP_InteractiveActorComponent_C.BP_SetInteractWidgetOffset
// 0x0018 (0x0018 - 0x0000)
struct BP_InteractiveActorComponent_C_BP_SetInteractWidgetOffset final
{
public:
	struct FVector                                NewWidgetOffset;                                   // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveActorComponent_C_BP_SetInteractWidgetOffset) == 0x000008, "Wrong alignment on BP_InteractiveActorComponent_C_BP_SetInteractWidgetOffset");
static_assert(sizeof(BP_InteractiveActorComponent_C_BP_SetInteractWidgetOffset) == 0x000018, "Wrong size on BP_InteractiveActorComponent_C_BP_SetInteractWidgetOffset");
static_assert(offsetof(BP_InteractiveActorComponent_C_BP_SetInteractWidgetOffset, NewWidgetOffset) == 0x000000, "Member 'BP_InteractiveActorComponent_C_BP_SetInteractWidgetOffset::NewWidgetOffset' has a wrong offset!");

// Function BP_InteractiveActorComponent.BP_InteractiveActorComponent_C.BP_GetIsBlock
// 0x0001 (0x0001 - 0x0000)
struct BP_InteractiveActorComponent_C_BP_GetIsBlock final
{
public:
	bool                                          IsBlock;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveActorComponent_C_BP_GetIsBlock) == 0x000001, "Wrong alignment on BP_InteractiveActorComponent_C_BP_GetIsBlock");
static_assert(sizeof(BP_InteractiveActorComponent_C_BP_GetIsBlock) == 0x000001, "Wrong size on BP_InteractiveActorComponent_C_BP_GetIsBlock");
static_assert(offsetof(BP_InteractiveActorComponent_C_BP_GetIsBlock, IsBlock) == 0x000000, "Member 'BP_InteractiveActorComponent_C_BP_GetIsBlock::IsBlock' has a wrong offset!");

// Function BP_InteractiveActorComponent.BP_InteractiveActorComponent_C.BP_DynamicModifyWhitePointVisibility
// 0x0001 (0x0001 - 0x0000)
struct BP_InteractiveActorComponent_C_BP_DynamicModifyWhitePointVisibility final
{
public:
	bool                                          bShow;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveActorComponent_C_BP_DynamicModifyWhitePointVisibility) == 0x000001, "Wrong alignment on BP_InteractiveActorComponent_C_BP_DynamicModifyWhitePointVisibility");
static_assert(sizeof(BP_InteractiveActorComponent_C_BP_DynamicModifyWhitePointVisibility) == 0x000001, "Wrong size on BP_InteractiveActorComponent_C_BP_DynamicModifyWhitePointVisibility");
static_assert(offsetof(BP_InteractiveActorComponent_C_BP_DynamicModifyWhitePointVisibility, bShow) == 0x000000, "Member 'BP_InteractiveActorComponent_C_BP_DynamicModifyWhitePointVisibility::bShow' has a wrong offset!");

// Function BP_InteractiveActorComponent.BP_InteractiveActorComponent_C.BP_ConvertIkButtVector
// 0x0180 (0x0180 - 0x0000)
struct BP_InteractiveActorComponent_C_BP_ConvertIkButtVector final
{
public:
	struct FVector                                ArrowForwardVector;                                // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ActorYaw;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ArrowRelativeYaw;                                  // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                IkVector;                                          // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                caculateIkVector;                                  // 0x0040(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_3;                // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_1; // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_4;                // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_2; // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_3; // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_4; // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_1;           // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_2;           // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_3;           // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveActorComponent_C_BP_ConvertIkButtVector) == 0x000008, "Wrong alignment on BP_InteractiveActorComponent_C_BP_ConvertIkButtVector");
static_assert(sizeof(BP_InteractiveActorComponent_C_BP_ConvertIkButtVector) == 0x000180, "Wrong size on BP_InteractiveActorComponent_C_BP_ConvertIkButtVector");
static_assert(offsetof(BP_InteractiveActorComponent_C_BP_ConvertIkButtVector, ArrowForwardVector) == 0x000000, "Member 'BP_InteractiveActorComponent_C_BP_ConvertIkButtVector::ArrowForwardVector' has a wrong offset!");
static_assert(offsetof(BP_InteractiveActorComponent_C_BP_ConvertIkButtVector, ActorYaw) == 0x000018, "Member 'BP_InteractiveActorComponent_C_BP_ConvertIkButtVector::ActorYaw' has a wrong offset!");
static_assert(offsetof(BP_InteractiveActorComponent_C_BP_ConvertIkButtVector, ArrowRelativeYaw) == 0x000020, "Member 'BP_InteractiveActorComponent_C_BP_ConvertIkButtVector::ArrowRelativeYaw' has a wrong offset!");
static_assert(offsetof(BP_InteractiveActorComponent_C_BP_ConvertIkButtVector, IkVector) == 0x000028, "Member 'BP_InteractiveActorComponent_C_BP_ConvertIkButtVector::IkVector' has a wrong offset!");
static_assert(offsetof(BP_InteractiveActorComponent_C_BP_ConvertIkButtVector, caculateIkVector) == 0x000040, "Member 'BP_InteractiveActorComponent_C_BP_ConvertIkButtVector::caculateIkVector' has a wrong offset!");
static_assert(offsetof(BP_InteractiveActorComponent_C_BP_ConvertIkButtVector, CallFunc_MakeRotator_ReturnValue) == 0x000058, "Member 'BP_InteractiveActorComponent_C_BP_ConvertIkButtVector::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveActorComponent_C_BP_ConvertIkButtVector, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000070, "Member 'BP_InteractiveActorComponent_C_BP_ConvertIkButtVector::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveActorComponent_C_BP_ConvertIkButtVector, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000078, "Member 'BP_InteractiveActorComponent_C_BP_ConvertIkButtVector::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveActorComponent_C_BP_ConvertIkButtVector, CallFunc_MakeRotator_ReturnValue_1) == 0x000080, "Member 'BP_InteractiveActorComponent_C_BP_ConvertIkButtVector::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveActorComponent_C_BP_ConvertIkButtVector, CallFunc_MakeRotator_ReturnValue_2) == 0x000098, "Member 'BP_InteractiveActorComponent_C_BP_ConvertIkButtVector::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_InteractiveActorComponent_C_BP_ConvertIkButtVector, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x0000B0, "Member 'BP_InteractiveActorComponent_C_BP_ConvertIkButtVector::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveActorComponent_C_BP_ConvertIkButtVector, CallFunc_MakeRotator_ReturnValue_3) == 0x0000C8, "Member 'BP_InteractiveActorComponent_C_BP_ConvertIkButtVector::CallFunc_MakeRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_InteractiveActorComponent_C_BP_ConvertIkButtVector, CallFunc_GreaterGreater_VectorRotator_ReturnValue_1) == 0x0000E0, "Member 'BP_InteractiveActorComponent_C_BP_ConvertIkButtVector::CallFunc_GreaterGreater_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveActorComponent_C_BP_ConvertIkButtVector, CallFunc_MakeRotator_ReturnValue_4) == 0x0000F8, "Member 'BP_InteractiveActorComponent_C_BP_ConvertIkButtVector::CallFunc_MakeRotator_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_InteractiveActorComponent_C_BP_ConvertIkButtVector, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000110, "Member 'BP_InteractiveActorComponent_C_BP_ConvertIkButtVector::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveActorComponent_C_BP_ConvertIkButtVector, CallFunc_GreaterGreater_VectorRotator_ReturnValue_2) == 0x000128, "Member 'BP_InteractiveActorComponent_C_BP_ConvertIkButtVector::CallFunc_GreaterGreater_VectorRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_InteractiveActorComponent_C_BP_ConvertIkButtVector, CallFunc_GreaterGreater_VectorRotator_ReturnValue_3) == 0x000140, "Member 'BP_InteractiveActorComponent_C_BP_ConvertIkButtVector::CallFunc_GreaterGreater_VectorRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_InteractiveActorComponent_C_BP_ConvertIkButtVector, CallFunc_GreaterGreater_VectorRotator_ReturnValue_4) == 0x000158, "Member 'BP_InteractiveActorComponent_C_BP_ConvertIkButtVector::CallFunc_GreaterGreater_VectorRotator_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_InteractiveActorComponent_C_BP_ConvertIkButtVector, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000170, "Member 'BP_InteractiveActorComponent_C_BP_ConvertIkButtVector::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_InteractiveActorComponent_C_BP_ConvertIkButtVector, CallFunc_MakeRotator_Yaw_ImplicitCast_1) == 0x000174, "Member 'BP_InteractiveActorComponent_C_BP_ConvertIkButtVector::CallFunc_MakeRotator_Yaw_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveActorComponent_C_BP_ConvertIkButtVector, CallFunc_MakeRotator_Yaw_ImplicitCast_2) == 0x000178, "Member 'BP_InteractiveActorComponent_C_BP_ConvertIkButtVector::CallFunc_MakeRotator_Yaw_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_InteractiveActorComponent_C_BP_ConvertIkButtVector, CallFunc_MakeRotator_Yaw_ImplicitCast_3) == 0x00017C, "Member 'BP_InteractiveActorComponent_C_BP_ConvertIkButtVector::CallFunc_MakeRotator_Yaw_ImplicitCast_3' has a wrong offset!");

// Function BP_InteractiveActorComponent.BP_InteractiveActorComponent_C.BP_AddWhitePointWidgetComponent
// 0x0080 (0x0080 - 0x0000)
struct BP_InteractiveActorComponent_C_BP_AddWhitePointWidgetComponent final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_InteractiveWhitePointWidgetComponent_C* CallFunc_AddComponentByClass_ReturnValue;      // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveActorComponent_C_BP_AddWhitePointWidgetComponent) == 0x000010, "Wrong alignment on BP_InteractiveActorComponent_C_BP_AddWhitePointWidgetComponent");
static_assert(sizeof(BP_InteractiveActorComponent_C_BP_AddWhitePointWidgetComponent) == 0x000080, "Wrong size on BP_InteractiveActorComponent_C_BP_AddWhitePointWidgetComponent");
static_assert(offsetof(BP_InteractiveActorComponent_C_BP_AddWhitePointWidgetComponent, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_InteractiveActorComponent_C_BP_AddWhitePointWidgetComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveActorComponent_C_BP_AddWhitePointWidgetComponent, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'BP_InteractiveActorComponent_C_BP_AddWhitePointWidgetComponent::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveActorComponent_C_BP_AddWhitePointWidgetComponent, CallFunc_AddComponentByClass_ReturnValue) == 0x000070, "Member 'BP_InteractiveActorComponent_C_BP_AddWhitePointWidgetComponent::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");

// Function BP_InteractiveActorComponent.BP_InteractiveActorComponent_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct BP_InteractiveActorComponent_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveActorComponent_C_GetModuleName) == 0x000008, "Wrong alignment on BP_InteractiveActorComponent_C_GetModuleName");
static_assert(sizeof(BP_InteractiveActorComponent_C_GetModuleName) == 0x000010, "Wrong size on BP_InteractiveActorComponent_C_GetModuleName");
static_assert(offsetof(BP_InteractiveActorComponent_C_GetModuleName, ReturnValue) == 0x000000, "Member 'BP_InteractiveActorComponent_C_GetModuleName::ReturnValue' has a wrong offset!");

}

