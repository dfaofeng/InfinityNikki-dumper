#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SmartObjectsModule

#include "Basic.hpp"

#include "SmartObjectsModule_structs.hpp"
#include "AIModule_structs.hpp"
#include "TargetingSystem_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function SmartObjectsModule.SmartObjectBlueprintFunctionLibrary.AddMultipleSmartObjects
// 0x0018 (0x0018 - 0x0000)
struct SmartObjectBlueprintFunctionLibrary_AddMultipleSmartObjects final
{
public:
	TArray<class AActor*>                         SmartObjectActors;                                 // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectBlueprintFunctionLibrary_AddMultipleSmartObjects) == 0x000008, "Wrong alignment on SmartObjectBlueprintFunctionLibrary_AddMultipleSmartObjects");
static_assert(sizeof(SmartObjectBlueprintFunctionLibrary_AddMultipleSmartObjects) == 0x000018, "Wrong size on SmartObjectBlueprintFunctionLibrary_AddMultipleSmartObjects");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_AddMultipleSmartObjects, SmartObjectActors) == 0x000000, "Member 'SmartObjectBlueprintFunctionLibrary_AddMultipleSmartObjects::SmartObjectActors' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_AddMultipleSmartObjects, ReturnValue) == 0x000010, "Member 'SmartObjectBlueprintFunctionLibrary_AddMultipleSmartObjects::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectBlueprintFunctionLibrary.AddOrRemoveMultipleSmartObjects
// 0x0018 (0x0018 - 0x0000)
struct SmartObjectBlueprintFunctionLibrary_AddOrRemoveMultipleSmartObjects final
{
public:
	TArray<class AActor*>                         SmartObjectActors;                                 // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bAdd;                                              // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectBlueprintFunctionLibrary_AddOrRemoveMultipleSmartObjects) == 0x000008, "Wrong alignment on SmartObjectBlueprintFunctionLibrary_AddOrRemoveMultipleSmartObjects");
static_assert(sizeof(SmartObjectBlueprintFunctionLibrary_AddOrRemoveMultipleSmartObjects) == 0x000018, "Wrong size on SmartObjectBlueprintFunctionLibrary_AddOrRemoveMultipleSmartObjects");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_AddOrRemoveMultipleSmartObjects, SmartObjectActors) == 0x000000, "Member 'SmartObjectBlueprintFunctionLibrary_AddOrRemoveMultipleSmartObjects::SmartObjectActors' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_AddOrRemoveMultipleSmartObjects, bAdd) == 0x000010, "Member 'SmartObjectBlueprintFunctionLibrary_AddOrRemoveMultipleSmartObjects::bAdd' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_AddOrRemoveMultipleSmartObjects, ReturnValue) == 0x000011, "Member 'SmartObjectBlueprintFunctionLibrary_AddOrRemoveMultipleSmartObjects::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectBlueprintFunctionLibrary.AddOrRemoveSmartObject
// 0x0010 (0x0010 - 0x0000)
struct SmartObjectBlueprintFunctionLibrary_AddOrRemoveSmartObject final
{
public:
	class AActor*                                 SmartObject;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnabled;                                          // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectBlueprintFunctionLibrary_AddOrRemoveSmartObject) == 0x000008, "Wrong alignment on SmartObjectBlueprintFunctionLibrary_AddOrRemoveSmartObject");
static_assert(sizeof(SmartObjectBlueprintFunctionLibrary_AddOrRemoveSmartObject) == 0x000010, "Wrong size on SmartObjectBlueprintFunctionLibrary_AddOrRemoveSmartObject");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_AddOrRemoveSmartObject, SmartObject) == 0x000000, "Member 'SmartObjectBlueprintFunctionLibrary_AddOrRemoveSmartObject::SmartObject' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_AddOrRemoveSmartObject, bEnabled) == 0x000008, "Member 'SmartObjectBlueprintFunctionLibrary_AddOrRemoveSmartObject::bEnabled' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_AddOrRemoveSmartObject, ReturnValue) == 0x000009, "Member 'SmartObjectBlueprintFunctionLibrary_AddOrRemoveSmartObject::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectBlueprintFunctionLibrary.AddSmartObject
// 0x0010 (0x0010 - 0x0000)
struct SmartObjectBlueprintFunctionLibrary_AddSmartObject final
{
public:
	class AActor*                                 SmartObjectActor;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectBlueprintFunctionLibrary_AddSmartObject) == 0x000008, "Wrong alignment on SmartObjectBlueprintFunctionLibrary_AddSmartObject");
static_assert(sizeof(SmartObjectBlueprintFunctionLibrary_AddSmartObject) == 0x000010, "Wrong size on SmartObjectBlueprintFunctionLibrary_AddSmartObject");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_AddSmartObject, SmartObjectActor) == 0x000000, "Member 'SmartObjectBlueprintFunctionLibrary_AddSmartObject::SmartObjectActor' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_AddSmartObject, ReturnValue) == 0x000008, "Member 'SmartObjectBlueprintFunctionLibrary_AddSmartObject::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectBlueprintFunctionLibrary.Conv_SmartObjectClaimHandleToString
// 0x0030 (0x0030 - 0x0000)
struct SmartObjectBlueprintFunctionLibrary_Conv_SmartObjectClaimHandleToString final
{
public:
	struct FSmartObjectClaimHandle                Result;                                            // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectBlueprintFunctionLibrary_Conv_SmartObjectClaimHandleToString) == 0x000008, "Wrong alignment on SmartObjectBlueprintFunctionLibrary_Conv_SmartObjectClaimHandleToString");
static_assert(sizeof(SmartObjectBlueprintFunctionLibrary_Conv_SmartObjectClaimHandleToString) == 0x000030, "Wrong size on SmartObjectBlueprintFunctionLibrary_Conv_SmartObjectClaimHandleToString");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_Conv_SmartObjectClaimHandleToString, Result) == 0x000000, "Member 'SmartObjectBlueprintFunctionLibrary_Conv_SmartObjectClaimHandleToString::Result' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_Conv_SmartObjectClaimHandleToString, ReturnValue) == 0x000020, "Member 'SmartObjectBlueprintFunctionLibrary_Conv_SmartObjectClaimHandleToString::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectBlueprintFunctionLibrary.Conv_SmartObjectDefinitionToString
// 0x0018 (0x0018 - 0x0000)
struct SmartObjectBlueprintFunctionLibrary_Conv_SmartObjectDefinitionToString final
{
public:
	const class USmartObjectDefinition*           Definition;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectBlueprintFunctionLibrary_Conv_SmartObjectDefinitionToString) == 0x000008, "Wrong alignment on SmartObjectBlueprintFunctionLibrary_Conv_SmartObjectDefinitionToString");
static_assert(sizeof(SmartObjectBlueprintFunctionLibrary_Conv_SmartObjectDefinitionToString) == 0x000018, "Wrong size on SmartObjectBlueprintFunctionLibrary_Conv_SmartObjectDefinitionToString");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_Conv_SmartObjectDefinitionToString, Definition) == 0x000000, "Member 'SmartObjectBlueprintFunctionLibrary_Conv_SmartObjectDefinitionToString::Definition' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_Conv_SmartObjectDefinitionToString, ReturnValue) == 0x000008, "Member 'SmartObjectBlueprintFunctionLibrary_Conv_SmartObjectDefinitionToString::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectBlueprintFunctionLibrary.Conv_SmartObjectHandleToString
// 0x0018 (0x0018 - 0x0000)
struct SmartObjectBlueprintFunctionLibrary_Conv_SmartObjectHandleToString final
{
public:
	struct FSmartObjectHandle                     Handle;                                            // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectBlueprintFunctionLibrary_Conv_SmartObjectHandleToString) == 0x000008, "Wrong alignment on SmartObjectBlueprintFunctionLibrary_Conv_SmartObjectHandleToString");
static_assert(sizeof(SmartObjectBlueprintFunctionLibrary_Conv_SmartObjectHandleToString) == 0x000018, "Wrong size on SmartObjectBlueprintFunctionLibrary_Conv_SmartObjectHandleToString");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_Conv_SmartObjectHandleToString, Handle) == 0x000000, "Member 'SmartObjectBlueprintFunctionLibrary_Conv_SmartObjectHandleToString::Handle' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_Conv_SmartObjectHandleToString, ReturnValue) == 0x000008, "Member 'SmartObjectBlueprintFunctionLibrary_Conv_SmartObjectHandleToString::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectBlueprintFunctionLibrary.Conv_SmartObjectRequestResultToString
// 0x0028 (0x0028 - 0x0000)
struct SmartObjectBlueprintFunctionLibrary_Conv_SmartObjectRequestResultToString final
{
public:
	struct FSmartObjectRequestResult              Result;                                            // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectBlueprintFunctionLibrary_Conv_SmartObjectRequestResultToString) == 0x000008, "Wrong alignment on SmartObjectBlueprintFunctionLibrary_Conv_SmartObjectRequestResultToString");
static_assert(sizeof(SmartObjectBlueprintFunctionLibrary_Conv_SmartObjectRequestResultToString) == 0x000028, "Wrong size on SmartObjectBlueprintFunctionLibrary_Conv_SmartObjectRequestResultToString");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_Conv_SmartObjectRequestResultToString, Result) == 0x000000, "Member 'SmartObjectBlueprintFunctionLibrary_Conv_SmartObjectRequestResultToString::Result' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_Conv_SmartObjectRequestResultToString, ReturnValue) == 0x000018, "Member 'SmartObjectBlueprintFunctionLibrary_Conv_SmartObjectRequestResultToString::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectBlueprintFunctionLibrary.Conv_SmartObjectSlotHandleToString
// 0x0020 (0x0020 - 0x0000)
struct SmartObjectBlueprintFunctionLibrary_Conv_SmartObjectSlotHandleToString final
{
public:
	struct FSmartObjectSlotHandle                 Handle;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectBlueprintFunctionLibrary_Conv_SmartObjectSlotHandleToString) == 0x000008, "Wrong alignment on SmartObjectBlueprintFunctionLibrary_Conv_SmartObjectSlotHandleToString");
static_assert(sizeof(SmartObjectBlueprintFunctionLibrary_Conv_SmartObjectSlotHandleToString) == 0x000020, "Wrong size on SmartObjectBlueprintFunctionLibrary_Conv_SmartObjectSlotHandleToString");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_Conv_SmartObjectSlotHandleToString, Handle) == 0x000000, "Member 'SmartObjectBlueprintFunctionLibrary_Conv_SmartObjectSlotHandleToString::Handle' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_Conv_SmartObjectSlotHandleToString, ReturnValue) == 0x000010, "Member 'SmartObjectBlueprintFunctionLibrary_Conv_SmartObjectSlotHandleToString::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectBlueprintFunctionLibrary.Equal_SmartObjectHandleSmartObjectHandle
// 0x0018 (0x0018 - 0x0000)
struct SmartObjectBlueprintFunctionLibrary_Equal_SmartObjectHandleSmartObjectHandle final
{
public:
	struct FSmartObjectHandle                     A;                                                 // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSmartObjectHandle                     B;                                                 // 0x0008(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectBlueprintFunctionLibrary_Equal_SmartObjectHandleSmartObjectHandle) == 0x000008, "Wrong alignment on SmartObjectBlueprintFunctionLibrary_Equal_SmartObjectHandleSmartObjectHandle");
static_assert(sizeof(SmartObjectBlueprintFunctionLibrary_Equal_SmartObjectHandleSmartObjectHandle) == 0x000018, "Wrong size on SmartObjectBlueprintFunctionLibrary_Equal_SmartObjectHandleSmartObjectHandle");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_Equal_SmartObjectHandleSmartObjectHandle, A) == 0x000000, "Member 'SmartObjectBlueprintFunctionLibrary_Equal_SmartObjectHandleSmartObjectHandle::A' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_Equal_SmartObjectHandleSmartObjectHandle, B) == 0x000008, "Member 'SmartObjectBlueprintFunctionLibrary_Equal_SmartObjectHandleSmartObjectHandle::B' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_Equal_SmartObjectHandleSmartObjectHandle, ReturnValue) == 0x000010, "Member 'SmartObjectBlueprintFunctionLibrary_Equal_SmartObjectHandleSmartObjectHandle::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectBlueprintFunctionLibrary.Equal_SmartObjectSlotHandleSmartObjectSlotHandle
// 0x0028 (0x0028 - 0x0000)
struct SmartObjectBlueprintFunctionLibrary_Equal_SmartObjectSlotHandleSmartObjectSlotHandle final
{
public:
	struct FSmartObjectSlotHandle                 A;                                                 // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSmartObjectSlotHandle                 B;                                                 // 0x0010(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectBlueprintFunctionLibrary_Equal_SmartObjectSlotHandleSmartObjectSlotHandle) == 0x000008, "Wrong alignment on SmartObjectBlueprintFunctionLibrary_Equal_SmartObjectSlotHandleSmartObjectSlotHandle");
static_assert(sizeof(SmartObjectBlueprintFunctionLibrary_Equal_SmartObjectSlotHandleSmartObjectSlotHandle) == 0x000028, "Wrong size on SmartObjectBlueprintFunctionLibrary_Equal_SmartObjectSlotHandleSmartObjectSlotHandle");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_Equal_SmartObjectSlotHandleSmartObjectSlotHandle, A) == 0x000000, "Member 'SmartObjectBlueprintFunctionLibrary_Equal_SmartObjectSlotHandleSmartObjectSlotHandle::A' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_Equal_SmartObjectSlotHandleSmartObjectSlotHandle, B) == 0x000010, "Member 'SmartObjectBlueprintFunctionLibrary_Equal_SmartObjectSlotHandleSmartObjectSlotHandle::B' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_Equal_SmartObjectSlotHandleSmartObjectSlotHandle, ReturnValue) == 0x000020, "Member 'SmartObjectBlueprintFunctionLibrary_Equal_SmartObjectSlotHandleSmartObjectSlotHandle::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectBlueprintFunctionLibrary.FindSmartObjectsInActor
// 0x0120 (0x0120 - 0x0000)
struct SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInActor final
{
public:
	struct FSmartObjectRequestFilter              Filter;                                            // 0x0000(0x00F0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class AActor*                                 SearchActor;                                       // 0x00F0(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSmartObjectRequestResult>      OutResults;                                        // 0x00F8(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	const class AActor*                           UserActor;                                         // 0x0108(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0110(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_111[0xF];                                      // 0x0111(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInActor) == 0x000010, "Wrong alignment on SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInActor");
static_assert(sizeof(SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInActor) == 0x000120, "Wrong size on SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInActor");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInActor, Filter) == 0x000000, "Member 'SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInActor::Filter' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInActor, SearchActor) == 0x0000F0, "Member 'SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInActor::SearchActor' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInActor, OutResults) == 0x0000F8, "Member 'SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInActor::OutResults' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInActor, UserActor) == 0x000108, "Member 'SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInActor::UserActor' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInActor, ReturnValue) == 0x000110, "Member 'SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInActor::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectBlueprintFunctionLibrary.FindSmartObjectsInComponent
// 0x0120 (0x0120 - 0x0000)
struct SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInComponent final
{
public:
	struct FSmartObjectRequestFilter              Filter;                                            // 0x0000(0x00F0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class USmartObjectComponent*                  SmartObjectComponent;                              // 0x00F0(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSmartObjectRequestResult>      OutResults;                                        // 0x00F8(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	const class AActor*                           UserActor;                                         // 0x0108(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0110(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_111[0xF];                                      // 0x0111(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInComponent) == 0x000010, "Wrong alignment on SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInComponent");
static_assert(sizeof(SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInComponent) == 0x000120, "Wrong size on SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInComponent");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInComponent, Filter) == 0x000000, "Member 'SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInComponent::Filter' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInComponent, SmartObjectComponent) == 0x0000F0, "Member 'SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInComponent::SmartObjectComponent' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInComponent, OutResults) == 0x0000F8, "Member 'SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInComponent::OutResults' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInComponent, UserActor) == 0x000108, "Member 'SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInComponent::UserActor' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInComponent, ReturnValue) == 0x000110, "Member 'SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInComponent::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectBlueprintFunctionLibrary.FindSmartObjectsInList
// 0x0130 (0x0130 - 0x0000)
struct SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInList final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSmartObjectRequestFilter              Filter;                                            // 0x0010(0x00F0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class AActor*>                         ActorList;                                         // 0x0100(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<struct FSmartObjectRequestResult>      OutResults;                                        // 0x0110(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	const class AActor*                           UserActor;                                         // 0x0120(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0128(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInList) == 0x000010, "Wrong alignment on SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInList");
static_assert(sizeof(SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInList) == 0x000130, "Wrong size on SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInList");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInList, WorldContextObject) == 0x000000, "Member 'SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInList::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInList, Filter) == 0x000010, "Member 'SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInList::Filter' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInList, ActorList) == 0x000100, "Member 'SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInList::ActorList' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInList, OutResults) == 0x000110, "Member 'SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInList::OutResults' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInList, UserActor) == 0x000120, "Member 'SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInList::UserActor' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInList, ReturnValue) == 0x000128, "Member 'SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInList::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectBlueprintFunctionLibrary.FindSmartObjectsInTargetingRequest
// 0x0130 (0x0130 - 0x0000)
struct SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInTargetingRequest final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSmartObjectRequestFilter              Filter;                                            // 0x0010(0x00F0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FTargetingRequestHandle                TargetingHandle;                                   // 0x0100(0x0004)(ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSmartObjectRequestResult>      OutResults;                                        // 0x0108(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	const class AActor*                           UserActor;                                         // 0x0118(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0120(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_121[0xF];                                      // 0x0121(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInTargetingRequest) == 0x000010, "Wrong alignment on SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInTargetingRequest");
static_assert(sizeof(SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInTargetingRequest) == 0x000130, "Wrong size on SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInTargetingRequest");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInTargetingRequest, WorldContextObject) == 0x000000, "Member 'SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInTargetingRequest::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInTargetingRequest, Filter) == 0x000010, "Member 'SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInTargetingRequest::Filter' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInTargetingRequest, TargetingHandle) == 0x000100, "Member 'SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInTargetingRequest::TargetingHandle' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInTargetingRequest, OutResults) == 0x000108, "Member 'SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInTargetingRequest::OutResults' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInTargetingRequest, UserActor) == 0x000118, "Member 'SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInTargetingRequest::UserActor' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInTargetingRequest, ReturnValue) == 0x000120, "Member 'SmartObjectBlueprintFunctionLibrary_FindSmartObjectsInTargetingRequest::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectBlueprintFunctionLibrary.GetBlackboardValueAsSOClaimHandle
// 0x0050 (0x0050 - 0x0000)
struct SmartObjectBlueprintFunctionLibrary_GetBlackboardValueAsSOClaimHandle final
{
public:
	class UBTNode*                                NodeOwner;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                 Key;                                               // 0x0008(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FSmartObjectClaimHandle                ReturnValue;                                       // 0x0030(0x0020)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectBlueprintFunctionLibrary_GetBlackboardValueAsSOClaimHandle) == 0x000008, "Wrong alignment on SmartObjectBlueprintFunctionLibrary_GetBlackboardValueAsSOClaimHandle");
static_assert(sizeof(SmartObjectBlueprintFunctionLibrary_GetBlackboardValueAsSOClaimHandle) == 0x000050, "Wrong size on SmartObjectBlueprintFunctionLibrary_GetBlackboardValueAsSOClaimHandle");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_GetBlackboardValueAsSOClaimHandle, NodeOwner) == 0x000000, "Member 'SmartObjectBlueprintFunctionLibrary_GetBlackboardValueAsSOClaimHandle::NodeOwner' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_GetBlackboardValueAsSOClaimHandle, Key) == 0x000008, "Member 'SmartObjectBlueprintFunctionLibrary_GetBlackboardValueAsSOClaimHandle::Key' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_GetBlackboardValueAsSOClaimHandle, ReturnValue) == 0x000030, "Member 'SmartObjectBlueprintFunctionLibrary_GetBlackboardValueAsSOClaimHandle::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectBlueprintFunctionLibrary.GetValueAsSOClaimHandle
// 0x0030 (0x0030 - 0x0000)
struct SmartObjectBlueprintFunctionLibrary_GetValueAsSOClaimHandle final
{
public:
	class UBlackboardComponent*                   BlackboardComponent;                               // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   KeyName;                                           // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSmartObjectClaimHandle                ReturnValue;                                       // 0x0010(0x0020)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectBlueprintFunctionLibrary_GetValueAsSOClaimHandle) == 0x000008, "Wrong alignment on SmartObjectBlueprintFunctionLibrary_GetValueAsSOClaimHandle");
static_assert(sizeof(SmartObjectBlueprintFunctionLibrary_GetValueAsSOClaimHandle) == 0x000030, "Wrong size on SmartObjectBlueprintFunctionLibrary_GetValueAsSOClaimHandle");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_GetValueAsSOClaimHandle, BlackboardComponent) == 0x000000, "Member 'SmartObjectBlueprintFunctionLibrary_GetValueAsSOClaimHandle::BlackboardComponent' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_GetValueAsSOClaimHandle, KeyName) == 0x000008, "Member 'SmartObjectBlueprintFunctionLibrary_GetValueAsSOClaimHandle::KeyName' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_GetValueAsSOClaimHandle, ReturnValue) == 0x000010, "Member 'SmartObjectBlueprintFunctionLibrary_GetValueAsSOClaimHandle::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectBlueprintFunctionLibrary.IsValidSmartObjectClaimHandle
// 0x0028 (0x0028 - 0x0000)
struct SmartObjectBlueprintFunctionLibrary_IsValidSmartObjectClaimHandle final
{
public:
	struct FSmartObjectClaimHandle                Handle;                                            // 0x0000(0x0020)(ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectBlueprintFunctionLibrary_IsValidSmartObjectClaimHandle) == 0x000008, "Wrong alignment on SmartObjectBlueprintFunctionLibrary_IsValidSmartObjectClaimHandle");
static_assert(sizeof(SmartObjectBlueprintFunctionLibrary_IsValidSmartObjectClaimHandle) == 0x000028, "Wrong size on SmartObjectBlueprintFunctionLibrary_IsValidSmartObjectClaimHandle");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_IsValidSmartObjectClaimHandle, Handle) == 0x000000, "Member 'SmartObjectBlueprintFunctionLibrary_IsValidSmartObjectClaimHandle::Handle' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_IsValidSmartObjectClaimHandle, ReturnValue) == 0x000020, "Member 'SmartObjectBlueprintFunctionLibrary_IsValidSmartObjectClaimHandle::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectBlueprintFunctionLibrary.IsValidSmartObjectHandle
// 0x0010 (0x0010 - 0x0000)
struct SmartObjectBlueprintFunctionLibrary_IsValidSmartObjectHandle final
{
public:
	struct FSmartObjectHandle                     Handle;                                            // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectBlueprintFunctionLibrary_IsValidSmartObjectHandle) == 0x000008, "Wrong alignment on SmartObjectBlueprintFunctionLibrary_IsValidSmartObjectHandle");
static_assert(sizeof(SmartObjectBlueprintFunctionLibrary_IsValidSmartObjectHandle) == 0x000010, "Wrong size on SmartObjectBlueprintFunctionLibrary_IsValidSmartObjectHandle");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_IsValidSmartObjectHandle, Handle) == 0x000000, "Member 'SmartObjectBlueprintFunctionLibrary_IsValidSmartObjectHandle::Handle' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_IsValidSmartObjectHandle, ReturnValue) == 0x000008, "Member 'SmartObjectBlueprintFunctionLibrary_IsValidSmartObjectHandle::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectBlueprintFunctionLibrary.IsValidSmartObjectSlotHandle
// 0x0018 (0x0018 - 0x0000)
struct SmartObjectBlueprintFunctionLibrary_IsValidSmartObjectSlotHandle final
{
public:
	struct FSmartObjectSlotHandle                 Handle;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectBlueprintFunctionLibrary_IsValidSmartObjectSlotHandle) == 0x000008, "Wrong alignment on SmartObjectBlueprintFunctionLibrary_IsValidSmartObjectSlotHandle");
static_assert(sizeof(SmartObjectBlueprintFunctionLibrary_IsValidSmartObjectSlotHandle) == 0x000018, "Wrong size on SmartObjectBlueprintFunctionLibrary_IsValidSmartObjectSlotHandle");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_IsValidSmartObjectSlotHandle, Handle) == 0x000000, "Member 'SmartObjectBlueprintFunctionLibrary_IsValidSmartObjectSlotHandle::Handle' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_IsValidSmartObjectSlotHandle, ReturnValue) == 0x000010, "Member 'SmartObjectBlueprintFunctionLibrary_IsValidSmartObjectSlotHandle::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectBlueprintFunctionLibrary.MarkSmartObjectSlotAsClaimed
// 0x0048 (0x0048 - 0x0000)
struct SmartObjectBlueprintFunctionLibrary_MarkSmartObjectSlotAsClaimed final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSmartObjectSlotHandle                 SlotHandle;                                        // 0x0008(0x0010)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class AActor*                           UserActor;                                         // 0x0018(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESmartObjectClaimPriority                     ClaimPriority;                                     // 0x0020(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSmartObjectClaimHandle                ReturnValue;                                       // 0x0028(0x0020)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectBlueprintFunctionLibrary_MarkSmartObjectSlotAsClaimed) == 0x000008, "Wrong alignment on SmartObjectBlueprintFunctionLibrary_MarkSmartObjectSlotAsClaimed");
static_assert(sizeof(SmartObjectBlueprintFunctionLibrary_MarkSmartObjectSlotAsClaimed) == 0x000048, "Wrong size on SmartObjectBlueprintFunctionLibrary_MarkSmartObjectSlotAsClaimed");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_MarkSmartObjectSlotAsClaimed, WorldContextObject) == 0x000000, "Member 'SmartObjectBlueprintFunctionLibrary_MarkSmartObjectSlotAsClaimed::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_MarkSmartObjectSlotAsClaimed, SlotHandle) == 0x000008, "Member 'SmartObjectBlueprintFunctionLibrary_MarkSmartObjectSlotAsClaimed::SlotHandle' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_MarkSmartObjectSlotAsClaimed, UserActor) == 0x000018, "Member 'SmartObjectBlueprintFunctionLibrary_MarkSmartObjectSlotAsClaimed::UserActor' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_MarkSmartObjectSlotAsClaimed, ClaimPriority) == 0x000020, "Member 'SmartObjectBlueprintFunctionLibrary_MarkSmartObjectSlotAsClaimed::ClaimPriority' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_MarkSmartObjectSlotAsClaimed, ReturnValue) == 0x000028, "Member 'SmartObjectBlueprintFunctionLibrary_MarkSmartObjectSlotAsClaimed::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectBlueprintFunctionLibrary.MarkSmartObjectSlotAsFree
// 0x0030 (0x0030 - 0x0000)
struct SmartObjectBlueprintFunctionLibrary_MarkSmartObjectSlotAsFree final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSmartObjectClaimHandle                ClaimHandle;                                       // 0x0008(0x0020)(ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectBlueprintFunctionLibrary_MarkSmartObjectSlotAsFree) == 0x000008, "Wrong alignment on SmartObjectBlueprintFunctionLibrary_MarkSmartObjectSlotAsFree");
static_assert(sizeof(SmartObjectBlueprintFunctionLibrary_MarkSmartObjectSlotAsFree) == 0x000030, "Wrong size on SmartObjectBlueprintFunctionLibrary_MarkSmartObjectSlotAsFree");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_MarkSmartObjectSlotAsFree, WorldContextObject) == 0x000000, "Member 'SmartObjectBlueprintFunctionLibrary_MarkSmartObjectSlotAsFree::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_MarkSmartObjectSlotAsFree, ClaimHandle) == 0x000008, "Member 'SmartObjectBlueprintFunctionLibrary_MarkSmartObjectSlotAsFree::ClaimHandle' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_MarkSmartObjectSlotAsFree, ReturnValue) == 0x000028, "Member 'SmartObjectBlueprintFunctionLibrary_MarkSmartObjectSlotAsFree::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectBlueprintFunctionLibrary.MarkSmartObjectSlotAsOccupied
// 0x0038 (0x0038 - 0x0000)
struct SmartObjectBlueprintFunctionLibrary_MarkSmartObjectSlotAsOccupied final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSmartObjectClaimHandle                ClaimHandle;                                       // 0x0008(0x0020)(ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
	TSubclassOf<class USmartObjectBehaviorDefinition> DefinitionClass;                               // 0x0028(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class USmartObjectBehaviorDefinition*   ReturnValue;                                       // 0x0030(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectBlueprintFunctionLibrary_MarkSmartObjectSlotAsOccupied) == 0x000008, "Wrong alignment on SmartObjectBlueprintFunctionLibrary_MarkSmartObjectSlotAsOccupied");
static_assert(sizeof(SmartObjectBlueprintFunctionLibrary_MarkSmartObjectSlotAsOccupied) == 0x000038, "Wrong size on SmartObjectBlueprintFunctionLibrary_MarkSmartObjectSlotAsOccupied");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_MarkSmartObjectSlotAsOccupied, WorldContextObject) == 0x000000, "Member 'SmartObjectBlueprintFunctionLibrary_MarkSmartObjectSlotAsOccupied::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_MarkSmartObjectSlotAsOccupied, ClaimHandle) == 0x000008, "Member 'SmartObjectBlueprintFunctionLibrary_MarkSmartObjectSlotAsOccupied::ClaimHandle' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_MarkSmartObjectSlotAsOccupied, DefinitionClass) == 0x000028, "Member 'SmartObjectBlueprintFunctionLibrary_MarkSmartObjectSlotAsOccupied::DefinitionClass' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_MarkSmartObjectSlotAsOccupied, ReturnValue) == 0x000030, "Member 'SmartObjectBlueprintFunctionLibrary_MarkSmartObjectSlotAsOccupied::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectBlueprintFunctionLibrary.NotEqual_SmartObjectHandleSmartObjectHandle
// 0x0018 (0x0018 - 0x0000)
struct SmartObjectBlueprintFunctionLibrary_NotEqual_SmartObjectHandleSmartObjectHandle final
{
public:
	struct FSmartObjectHandle                     A;                                                 // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSmartObjectHandle                     B;                                                 // 0x0008(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectBlueprintFunctionLibrary_NotEqual_SmartObjectHandleSmartObjectHandle) == 0x000008, "Wrong alignment on SmartObjectBlueprintFunctionLibrary_NotEqual_SmartObjectHandleSmartObjectHandle");
static_assert(sizeof(SmartObjectBlueprintFunctionLibrary_NotEqual_SmartObjectHandleSmartObjectHandle) == 0x000018, "Wrong size on SmartObjectBlueprintFunctionLibrary_NotEqual_SmartObjectHandleSmartObjectHandle");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_NotEqual_SmartObjectHandleSmartObjectHandle, A) == 0x000000, "Member 'SmartObjectBlueprintFunctionLibrary_NotEqual_SmartObjectHandleSmartObjectHandle::A' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_NotEqual_SmartObjectHandleSmartObjectHandle, B) == 0x000008, "Member 'SmartObjectBlueprintFunctionLibrary_NotEqual_SmartObjectHandleSmartObjectHandle::B' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_NotEqual_SmartObjectHandleSmartObjectHandle, ReturnValue) == 0x000010, "Member 'SmartObjectBlueprintFunctionLibrary_NotEqual_SmartObjectHandleSmartObjectHandle::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectBlueprintFunctionLibrary.NotEqual_SmartObjectSlotHandleSmartObjectSlotHandle
// 0x0028 (0x0028 - 0x0000)
struct SmartObjectBlueprintFunctionLibrary_NotEqual_SmartObjectSlotHandleSmartObjectSlotHandle final
{
public:
	struct FSmartObjectSlotHandle                 A;                                                 // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSmartObjectSlotHandle                 B;                                                 // 0x0010(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectBlueprintFunctionLibrary_NotEqual_SmartObjectSlotHandleSmartObjectSlotHandle) == 0x000008, "Wrong alignment on SmartObjectBlueprintFunctionLibrary_NotEqual_SmartObjectSlotHandleSmartObjectSlotHandle");
static_assert(sizeof(SmartObjectBlueprintFunctionLibrary_NotEqual_SmartObjectSlotHandleSmartObjectSlotHandle) == 0x000028, "Wrong size on SmartObjectBlueprintFunctionLibrary_NotEqual_SmartObjectSlotHandleSmartObjectSlotHandle");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_NotEqual_SmartObjectSlotHandleSmartObjectSlotHandle, A) == 0x000000, "Member 'SmartObjectBlueprintFunctionLibrary_NotEqual_SmartObjectSlotHandleSmartObjectSlotHandle::A' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_NotEqual_SmartObjectSlotHandleSmartObjectSlotHandle, B) == 0x000010, "Member 'SmartObjectBlueprintFunctionLibrary_NotEqual_SmartObjectSlotHandleSmartObjectSlotHandle::B' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_NotEqual_SmartObjectSlotHandleSmartObjectSlotHandle, ReturnValue) == 0x000020, "Member 'SmartObjectBlueprintFunctionLibrary_NotEqual_SmartObjectSlotHandleSmartObjectSlotHandle::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectBlueprintFunctionLibrary.RemoveMultipleSmartObjects
// 0x0018 (0x0018 - 0x0000)
struct SmartObjectBlueprintFunctionLibrary_RemoveMultipleSmartObjects final
{
public:
	TArray<class AActor*>                         SmartObjectActors;                                 // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectBlueprintFunctionLibrary_RemoveMultipleSmartObjects) == 0x000008, "Wrong alignment on SmartObjectBlueprintFunctionLibrary_RemoveMultipleSmartObjects");
static_assert(sizeof(SmartObjectBlueprintFunctionLibrary_RemoveMultipleSmartObjects) == 0x000018, "Wrong size on SmartObjectBlueprintFunctionLibrary_RemoveMultipleSmartObjects");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_RemoveMultipleSmartObjects, SmartObjectActors) == 0x000000, "Member 'SmartObjectBlueprintFunctionLibrary_RemoveMultipleSmartObjects::SmartObjectActors' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_RemoveMultipleSmartObjects, ReturnValue) == 0x000010, "Member 'SmartObjectBlueprintFunctionLibrary_RemoveMultipleSmartObjects::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectBlueprintFunctionLibrary.RemoveSmartObject
// 0x0010 (0x0010 - 0x0000)
struct SmartObjectBlueprintFunctionLibrary_RemoveSmartObject final
{
public:
	class AActor*                                 SmartObjectActor;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectBlueprintFunctionLibrary_RemoveSmartObject) == 0x000008, "Wrong alignment on SmartObjectBlueprintFunctionLibrary_RemoveSmartObject");
static_assert(sizeof(SmartObjectBlueprintFunctionLibrary_RemoveSmartObject) == 0x000010, "Wrong size on SmartObjectBlueprintFunctionLibrary_RemoveSmartObject");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_RemoveSmartObject, SmartObjectActor) == 0x000000, "Member 'SmartObjectBlueprintFunctionLibrary_RemoveSmartObject::SmartObjectActor' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_RemoveSmartObject, ReturnValue) == 0x000008, "Member 'SmartObjectBlueprintFunctionLibrary_RemoveSmartObject::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectBlueprintFunctionLibrary.SetBlackboardValueAsSOClaimHandle
// 0x0050 (0x0050 - 0x0000)
struct SmartObjectBlueprintFunctionLibrary_SetBlackboardValueAsSOClaimHandle final
{
public:
	class UBTNode*                                NodeOwner;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                 Key;                                               // 0x0008(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FSmartObjectClaimHandle                Value;                                             // 0x0030(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectBlueprintFunctionLibrary_SetBlackboardValueAsSOClaimHandle) == 0x000008, "Wrong alignment on SmartObjectBlueprintFunctionLibrary_SetBlackboardValueAsSOClaimHandle");
static_assert(sizeof(SmartObjectBlueprintFunctionLibrary_SetBlackboardValueAsSOClaimHandle) == 0x000050, "Wrong size on SmartObjectBlueprintFunctionLibrary_SetBlackboardValueAsSOClaimHandle");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_SetBlackboardValueAsSOClaimHandle, NodeOwner) == 0x000000, "Member 'SmartObjectBlueprintFunctionLibrary_SetBlackboardValueAsSOClaimHandle::NodeOwner' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_SetBlackboardValueAsSOClaimHandle, Key) == 0x000008, "Member 'SmartObjectBlueprintFunctionLibrary_SetBlackboardValueAsSOClaimHandle::Key' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_SetBlackboardValueAsSOClaimHandle, Value) == 0x000030, "Member 'SmartObjectBlueprintFunctionLibrary_SetBlackboardValueAsSOClaimHandle::Value' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectBlueprintFunctionLibrary.SetMultipleSmartObjectsEnabled
// 0x0018 (0x0018 - 0x0000)
struct SmartObjectBlueprintFunctionLibrary_SetMultipleSmartObjectsEnabled final
{
public:
	TArray<class AActor*>                         SmartObjectActors;                                 // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bEnabled;                                          // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectBlueprintFunctionLibrary_SetMultipleSmartObjectsEnabled) == 0x000008, "Wrong alignment on SmartObjectBlueprintFunctionLibrary_SetMultipleSmartObjectsEnabled");
static_assert(sizeof(SmartObjectBlueprintFunctionLibrary_SetMultipleSmartObjectsEnabled) == 0x000018, "Wrong size on SmartObjectBlueprintFunctionLibrary_SetMultipleSmartObjectsEnabled");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_SetMultipleSmartObjectsEnabled, SmartObjectActors) == 0x000000, "Member 'SmartObjectBlueprintFunctionLibrary_SetMultipleSmartObjectsEnabled::SmartObjectActors' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_SetMultipleSmartObjectsEnabled, bEnabled) == 0x000010, "Member 'SmartObjectBlueprintFunctionLibrary_SetMultipleSmartObjectsEnabled::bEnabled' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_SetMultipleSmartObjectsEnabled, ReturnValue) == 0x000011, "Member 'SmartObjectBlueprintFunctionLibrary_SetMultipleSmartObjectsEnabled::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectBlueprintFunctionLibrary.SetSmartObjectEnabled
// 0x0010 (0x0010 - 0x0000)
struct SmartObjectBlueprintFunctionLibrary_SetSmartObjectEnabled final
{
public:
	class AActor*                                 SmartObjectActor;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnabled;                                          // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectBlueprintFunctionLibrary_SetSmartObjectEnabled) == 0x000008, "Wrong alignment on SmartObjectBlueprintFunctionLibrary_SetSmartObjectEnabled");
static_assert(sizeof(SmartObjectBlueprintFunctionLibrary_SetSmartObjectEnabled) == 0x000010, "Wrong size on SmartObjectBlueprintFunctionLibrary_SetSmartObjectEnabled");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_SetSmartObjectEnabled, SmartObjectActor) == 0x000000, "Member 'SmartObjectBlueprintFunctionLibrary_SetSmartObjectEnabled::SmartObjectActor' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_SetSmartObjectEnabled, bEnabled) == 0x000008, "Member 'SmartObjectBlueprintFunctionLibrary_SetSmartObjectEnabled::bEnabled' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_SetSmartObjectEnabled, ReturnValue) == 0x000009, "Member 'SmartObjectBlueprintFunctionLibrary_SetSmartObjectEnabled::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectBlueprintFunctionLibrary.SetValueAsSOClaimHandle
// 0x0030 (0x0030 - 0x0000)
struct SmartObjectBlueprintFunctionLibrary_SetValueAsSOClaimHandle final
{
public:
	class UBlackboardComponent*                   BlackboardComponent;                               // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   KeyName;                                           // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSmartObjectClaimHandle                Value;                                             // 0x0010(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectBlueprintFunctionLibrary_SetValueAsSOClaimHandle) == 0x000008, "Wrong alignment on SmartObjectBlueprintFunctionLibrary_SetValueAsSOClaimHandle");
static_assert(sizeof(SmartObjectBlueprintFunctionLibrary_SetValueAsSOClaimHandle) == 0x000030, "Wrong size on SmartObjectBlueprintFunctionLibrary_SetValueAsSOClaimHandle");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_SetValueAsSOClaimHandle, BlackboardComponent) == 0x000000, "Member 'SmartObjectBlueprintFunctionLibrary_SetValueAsSOClaimHandle::BlackboardComponent' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_SetValueAsSOClaimHandle, KeyName) == 0x000008, "Member 'SmartObjectBlueprintFunctionLibrary_SetValueAsSOClaimHandle::KeyName' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_SetValueAsSOClaimHandle, Value) == 0x000010, "Member 'SmartObjectBlueprintFunctionLibrary_SetValueAsSOClaimHandle::Value' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectBlueprintFunctionLibrary.SmartObjectClaimHandle_Invalid
// 0x0020 (0x0020 - 0x0000)
struct SmartObjectBlueprintFunctionLibrary_SmartObjectClaimHandle_Invalid final
{
public:
	struct FSmartObjectClaimHandle                ReturnValue;                                       // 0x0000(0x0020)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectBlueprintFunctionLibrary_SmartObjectClaimHandle_Invalid) == 0x000008, "Wrong alignment on SmartObjectBlueprintFunctionLibrary_SmartObjectClaimHandle_Invalid");
static_assert(sizeof(SmartObjectBlueprintFunctionLibrary_SmartObjectClaimHandle_Invalid) == 0x000020, "Wrong size on SmartObjectBlueprintFunctionLibrary_SmartObjectClaimHandle_Invalid");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_SmartObjectClaimHandle_Invalid, ReturnValue) == 0x000000, "Member 'SmartObjectBlueprintFunctionLibrary_SmartObjectClaimHandle_Invalid::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectComponent.ReceiveOnEvent
// 0x0040 (0x0040 - 0x0000)
struct SmartObjectComponent_ReceiveOnEvent final
{
public:
	struct FSmartObjectEventData                  EventData;                                         // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	const class AActor*                           Interactor;                                        // 0x0038(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectComponent_ReceiveOnEvent) == 0x000008, "Wrong alignment on SmartObjectComponent_ReceiveOnEvent");
static_assert(sizeof(SmartObjectComponent_ReceiveOnEvent) == 0x000040, "Wrong size on SmartObjectComponent_ReceiveOnEvent");
static_assert(offsetof(SmartObjectComponent_ReceiveOnEvent, EventData) == 0x000000, "Member 'SmartObjectComponent_ReceiveOnEvent::EventData' has a wrong offset!");
static_assert(offsetof(SmartObjectComponent_ReceiveOnEvent, Interactor) == 0x000038, "Member 'SmartObjectComponent_ReceiveOnEvent::Interactor' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectComponent.SetDefinition
// 0x0008 (0x0008 - 0x0000)
struct SmartObjectComponent_SetDefinition final
{
public:
	class USmartObjectDefinition*                 DefinitionAsset;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectComponent_SetDefinition) == 0x000008, "Wrong alignment on SmartObjectComponent_SetDefinition");
static_assert(sizeof(SmartObjectComponent_SetDefinition) == 0x000008, "Wrong size on SmartObjectComponent_SetDefinition");
static_assert(offsetof(SmartObjectComponent_SetDefinition, DefinitionAsset) == 0x000000, "Member 'SmartObjectComponent_SetDefinition::DefinitionAsset' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectComponent.GetDefinition
// 0x0008 (0x0008 - 0x0000)
struct SmartObjectComponent_GetDefinition final
{
public:
	const class USmartObjectDefinition*           ReturnValue;                                       // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectComponent_GetDefinition) == 0x000008, "Wrong alignment on SmartObjectComponent_GetDefinition");
static_assert(sizeof(SmartObjectComponent_GetDefinition) == 0x000008, "Wrong size on SmartObjectComponent_GetDefinition");
static_assert(offsetof(SmartObjectComponent_GetDefinition, ReturnValue) == 0x000000, "Member 'SmartObjectComponent_GetDefinition::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectComponent.IsBoundToSimulation
// 0x0001 (0x0001 - 0x0000)
struct SmartObjectComponent_IsBoundToSimulation final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectComponent_IsBoundToSimulation) == 0x000001, "Wrong alignment on SmartObjectComponent_IsBoundToSimulation");
static_assert(sizeof(SmartObjectComponent_IsBoundToSimulation) == 0x000001, "Wrong size on SmartObjectComponent_IsBoundToSimulation");
static_assert(offsetof(SmartObjectComponent_IsBoundToSimulation, ReturnValue) == 0x000000, "Member 'SmartObjectComponent_IsBoundToSimulation::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectComponent.IsSmartObjectEnabled
// 0x0001 (0x0001 - 0x0000)
struct SmartObjectComponent_IsSmartObjectEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectComponent_IsSmartObjectEnabled) == 0x000001, "Wrong alignment on SmartObjectComponent_IsSmartObjectEnabled");
static_assert(sizeof(SmartObjectComponent_IsSmartObjectEnabled) == 0x000001, "Wrong size on SmartObjectComponent_IsSmartObjectEnabled");
static_assert(offsetof(SmartObjectComponent_IsSmartObjectEnabled, ReturnValue) == 0x000000, "Member 'SmartObjectComponent_IsSmartObjectEnabled::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectComponent.IsSmartObjectEnabledForReason
// 0x000C (0x000C - 0x0000)
struct SmartObjectComponent_IsSmartObjectEnabledForReason final
{
public:
	struct FGameplayTag                           ReasonTag;                                         // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectComponent_IsSmartObjectEnabledForReason) == 0x000004, "Wrong alignment on SmartObjectComponent_IsSmartObjectEnabledForReason");
static_assert(sizeof(SmartObjectComponent_IsSmartObjectEnabledForReason) == 0x00000C, "Wrong size on SmartObjectComponent_IsSmartObjectEnabledForReason");
static_assert(offsetof(SmartObjectComponent_IsSmartObjectEnabledForReason, ReasonTag) == 0x000000, "Member 'SmartObjectComponent_IsSmartObjectEnabledForReason::ReasonTag' has a wrong offset!");
static_assert(offsetof(SmartObjectComponent_IsSmartObjectEnabledForReason, ReturnValue) == 0x000008, "Member 'SmartObjectComponent_IsSmartObjectEnabledForReason::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectComponent.SetSmartObjectEnabled
// 0x0002 (0x0002 - 0x0000)
struct SmartObjectComponent_SetSmartObjectEnabled final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectComponent_SetSmartObjectEnabled) == 0x000001, "Wrong alignment on SmartObjectComponent_SetSmartObjectEnabled");
static_assert(sizeof(SmartObjectComponent_SetSmartObjectEnabled) == 0x000002, "Wrong size on SmartObjectComponent_SetSmartObjectEnabled");
static_assert(offsetof(SmartObjectComponent_SetSmartObjectEnabled, bEnable) == 0x000000, "Member 'SmartObjectComponent_SetSmartObjectEnabled::bEnable' has a wrong offset!");
static_assert(offsetof(SmartObjectComponent_SetSmartObjectEnabled, ReturnValue) == 0x000001, "Member 'SmartObjectComponent_SetSmartObjectEnabled::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectComponent.SetSmartObjectEnabledForReason
// 0x000C (0x000C - 0x0000)
struct SmartObjectComponent_SetSmartObjectEnabledForReason final
{
public:
	struct FGameplayTag                           ReasonTag;                                         // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnabled;                                          // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectComponent_SetSmartObjectEnabledForReason) == 0x000004, "Wrong alignment on SmartObjectComponent_SetSmartObjectEnabledForReason");
static_assert(sizeof(SmartObjectComponent_SetSmartObjectEnabledForReason) == 0x00000C, "Wrong size on SmartObjectComponent_SetSmartObjectEnabledForReason");
static_assert(offsetof(SmartObjectComponent_SetSmartObjectEnabledForReason, ReasonTag) == 0x000000, "Member 'SmartObjectComponent_SetSmartObjectEnabledForReason::ReasonTag' has a wrong offset!");
static_assert(offsetof(SmartObjectComponent_SetSmartObjectEnabledForReason, bEnabled) == 0x000008, "Member 'SmartObjectComponent_SetSmartObjectEnabledForReason::bEnabled' has a wrong offset!");
static_assert(offsetof(SmartObjectComponent_SetSmartObjectEnabledForReason, ReturnValue) == 0x000009, "Member 'SmartObjectComponent_SetSmartObjectEnabledForReason::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectDefinition.GetMutableSlot
// 0x00E8 (0x00E8 - 0x0000)
struct SmartObjectDefinition_GetMutableSlot final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSmartObjectSlotDefinition             ReturnValue;                                       // 0x0008(0x00E0)(Parm, OutParm, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectDefinition_GetMutableSlot) == 0x000008, "Wrong alignment on SmartObjectDefinition_GetMutableSlot");
static_assert(sizeof(SmartObjectDefinition_GetMutableSlot) == 0x0000E8, "Wrong size on SmartObjectDefinition_GetMutableSlot");
static_assert(offsetof(SmartObjectDefinition_GetMutableSlot, Index_0) == 0x000000, "Member 'SmartObjectDefinition_GetMutableSlot::Index_0' has a wrong offset!");
static_assert(offsetof(SmartObjectDefinition_GetMutableSlot, ReturnValue) == 0x000008, "Member 'SmartObjectDefinition_GetMutableSlot::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectDefinition.SetUserTagFilter
// 0x0048 (0x0048 - 0x0000)
struct SmartObjectDefinition_SetUserTagFilter final
{
public:
	struct FGameplayTagQuery                      InUserTagFilter;                                   // 0x0000(0x0048)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectDefinition_SetUserTagFilter) == 0x000008, "Wrong alignment on SmartObjectDefinition_SetUserTagFilter");
static_assert(sizeof(SmartObjectDefinition_SetUserTagFilter) == 0x000048, "Wrong size on SmartObjectDefinition_SetUserTagFilter");
static_assert(offsetof(SmartObjectDefinition_SetUserTagFilter, InUserTagFilter) == 0x000000, "Member 'SmartObjectDefinition_SetUserTagFilter::InUserTagFilter' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectDefinition.GetActivityTags
// 0x0020 (0x0020 - 0x0000)
struct SmartObjectDefinition_GetActivityTags final
{
public:
	struct FGameplayTagContainer                  ReturnValue;                                       // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectDefinition_GetActivityTags) == 0x000008, "Wrong alignment on SmartObjectDefinition_GetActivityTags");
static_assert(sizeof(SmartObjectDefinition_GetActivityTags) == 0x000020, "Wrong size on SmartObjectDefinition_GetActivityTags");
static_assert(offsetof(SmartObjectDefinition_GetActivityTags, ReturnValue) == 0x000000, "Member 'SmartObjectDefinition_GetActivityTags::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectDefinition.GetBounds
// 0x0038 (0x0038 - 0x0000)
struct SmartObjectDefinition_GetBounds final
{
public:
	struct FBox                                   ReturnValue;                                       // 0x0000(0x0038)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectDefinition_GetBounds) == 0x000008, "Wrong alignment on SmartObjectDefinition_GetBounds");
static_assert(sizeof(SmartObjectDefinition_GetBounds) == 0x000038, "Wrong size on SmartObjectDefinition_GetBounds");
static_assert(offsetof(SmartObjectDefinition_GetBounds, ReturnValue) == 0x000000, "Member 'SmartObjectDefinition_GetBounds::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectDefinition.GetSlotActivityTags
// 0x0028 (0x0028 - 0x0000)
struct SmartObjectDefinition_GetSlotActivityTags final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  OutActivityTags;                                   // 0x0008(0x0020)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectDefinition_GetSlotActivityTags) == 0x000008, "Wrong alignment on SmartObjectDefinition_GetSlotActivityTags");
static_assert(sizeof(SmartObjectDefinition_GetSlotActivityTags) == 0x000028, "Wrong size on SmartObjectDefinition_GetSlotActivityTags");
static_assert(offsetof(SmartObjectDefinition_GetSlotActivityTags, SlotIndex) == 0x000000, "Member 'SmartObjectDefinition_GetSlotActivityTags::SlotIndex' has a wrong offset!");
static_assert(offsetof(SmartObjectDefinition_GetSlotActivityTags, OutActivityTags) == 0x000008, "Member 'SmartObjectDefinition_GetSlotActivityTags::OutActivityTags' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectDefinition.GetSlotWorldTransform
// 0x00D0 (0x00D0 - 0x0000)
struct SmartObjectDefinition_GetSlotWorldTransform final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0xC];                                        // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             OwnerTransform;                                    // 0x0010(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             ReturnValue;                                       // 0x0070(0x0060)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectDefinition_GetSlotWorldTransform) == 0x000010, "Wrong alignment on SmartObjectDefinition_GetSlotWorldTransform");
static_assert(sizeof(SmartObjectDefinition_GetSlotWorldTransform) == 0x0000D0, "Wrong size on SmartObjectDefinition_GetSlotWorldTransform");
static_assert(offsetof(SmartObjectDefinition_GetSlotWorldTransform, SlotIndex) == 0x000000, "Member 'SmartObjectDefinition_GetSlotWorldTransform::SlotIndex' has a wrong offset!");
static_assert(offsetof(SmartObjectDefinition_GetSlotWorldTransform, OwnerTransform) == 0x000010, "Member 'SmartObjectDefinition_GetSlotWorldTransform::OwnerTransform' has a wrong offset!");
static_assert(offsetof(SmartObjectDefinition_GetSlotWorldTransform, ReturnValue) == 0x000070, "Member 'SmartObjectDefinition_GetSlotWorldTransform::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectDefinition.GetUserTagFilter
// 0x0048 (0x0048 - 0x0000)
struct SmartObjectDefinition_GetUserTagFilter final
{
public:
	struct FGameplayTagQuery                      ReturnValue;                                       // 0x0000(0x0048)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectDefinition_GetUserTagFilter) == 0x000008, "Wrong alignment on SmartObjectDefinition_GetUserTagFilter");
static_assert(sizeof(SmartObjectDefinition_GetUserTagFilter) == 0x000048, "Wrong size on SmartObjectDefinition_GetUserTagFilter");
static_assert(offsetof(SmartObjectDefinition_GetUserTagFilter, ReturnValue) == 0x000000, "Member 'SmartObjectDefinition_GetUserTagFilter::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectDefinition.GetUserTagsFilteringPolicy
// 0x0001 (0x0001 - 0x0000)
struct SmartObjectDefinition_GetUserTagsFilteringPolicy final
{
public:
	ESmartObjectTagFilteringPolicy                ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectDefinition_GetUserTagsFilteringPolicy) == 0x000001, "Wrong alignment on SmartObjectDefinition_GetUserTagsFilteringPolicy");
static_assert(sizeof(SmartObjectDefinition_GetUserTagsFilteringPolicy) == 0x000001, "Wrong size on SmartObjectDefinition_GetUserTagsFilteringPolicy");
static_assert(offsetof(SmartObjectDefinition_GetUserTagsFilteringPolicy, ReturnValue) == 0x000000, "Member 'SmartObjectDefinition_GetUserTagsFilteringPolicy::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectDefinition.IsValidSlotIndex
// 0x0008 (0x0008 - 0x0000)
struct SmartObjectDefinition_IsValidSlotIndex final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectDefinition_IsValidSlotIndex) == 0x000004, "Wrong alignment on SmartObjectDefinition_IsValidSlotIndex");
static_assert(sizeof(SmartObjectDefinition_IsValidSlotIndex) == 0x000008, "Wrong size on SmartObjectDefinition_IsValidSlotIndex");
static_assert(offsetof(SmartObjectDefinition_IsValidSlotIndex, SlotIndex) == 0x000000, "Member 'SmartObjectDefinition_IsValidSlotIndex::SlotIndex' has a wrong offset!");
static_assert(offsetof(SmartObjectDefinition_IsValidSlotIndex, ReturnValue) == 0x000004, "Member 'SmartObjectDefinition_IsValidSlotIndex::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectDefinition.K2_GetSlots
// 0x0010 (0x0010 - 0x0000)
struct SmartObjectDefinition_K2_GetSlots final
{
public:
	TArray<struct FSmartObjectSlotDefinition>     ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectDefinition_K2_GetSlots) == 0x000008, "Wrong alignment on SmartObjectDefinition_K2_GetSlots");
static_assert(sizeof(SmartObjectDefinition_K2_GetSlots) == 0x000010, "Wrong size on SmartObjectDefinition_K2_GetSlots");
static_assert(offsetof(SmartObjectDefinition_K2_GetSlots, ReturnValue) == 0x000000, "Member 'SmartObjectDefinition_K2_GetSlots::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectSubsystem.AddTagToInstance
// 0x0010 (0x0010 - 0x0000)
struct SmartObjectSubsystem_AddTagToInstance final
{
public:
	struct FSmartObjectHandle                     Handle;                                            // 0x0000(0x0008)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           Tag;                                               // 0x0008(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectSubsystem_AddTagToInstance) == 0x000008, "Wrong alignment on SmartObjectSubsystem_AddTagToInstance");
static_assert(sizeof(SmartObjectSubsystem_AddTagToInstance) == 0x000010, "Wrong size on SmartObjectSubsystem_AddTagToInstance");
static_assert(offsetof(SmartObjectSubsystem_AddTagToInstance, Handle) == 0x000000, "Member 'SmartObjectSubsystem_AddTagToInstance::Handle' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_AddTagToInstance, Tag) == 0x000008, "Member 'SmartObjectSubsystem_AddTagToInstance::Tag' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectSubsystem.AddTagToSlot
// 0x0018 (0x0018 - 0x0000)
struct SmartObjectSubsystem_AddTagToSlot final
{
public:
	struct FSmartObjectSlotHandle                 SlotHandle;                                        // 0x0000(0x0010)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           Tag;                                               // 0x0010(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectSubsystem_AddTagToSlot) == 0x000008, "Wrong alignment on SmartObjectSubsystem_AddTagToSlot");
static_assert(sizeof(SmartObjectSubsystem_AddTagToSlot) == 0x000018, "Wrong size on SmartObjectSubsystem_AddTagToSlot");
static_assert(offsetof(SmartObjectSubsystem_AddTagToSlot, SlotHandle) == 0x000000, "Member 'SmartObjectSubsystem_AddTagToSlot::SlotHandle' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_AddTagToSlot, Tag) == 0x000010, "Member 'SmartObjectSubsystem_AddTagToSlot::Tag' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectSubsystem.Claim
// 0x0040 (0x0040 - 0x0000)
struct SmartObjectSubsystem_Claim final
{
public:
	struct FSmartObjectRequestResult              RequestResult;                                     // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	const class AActor*                           UserActor;                                         // 0x0018(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSmartObjectClaimHandle                ReturnValue;                                       // 0x0020(0x0020)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectSubsystem_Claim) == 0x000008, "Wrong alignment on SmartObjectSubsystem_Claim");
static_assert(sizeof(SmartObjectSubsystem_Claim) == 0x000040, "Wrong size on SmartObjectSubsystem_Claim");
static_assert(offsetof(SmartObjectSubsystem_Claim, RequestResult) == 0x000000, "Member 'SmartObjectSubsystem_Claim::RequestResult' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_Claim, UserActor) == 0x000018, "Member 'SmartObjectSubsystem_Claim::UserActor' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_Claim, ReturnValue) == 0x000020, "Member 'SmartObjectSubsystem_Claim::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectSubsystem.GetBehaviorDefinition
// 0x0030 (0x0030 - 0x0000)
struct SmartObjectSubsystem_GetBehaviorDefinition final
{
public:
	struct FSmartObjectClaimHandle                ClaimHandle;                                       // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TSubclassOf<class USmartObjectBehaviorDefinition> DefinitionClass;                               // 0x0020(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class USmartObjectBehaviorDefinition*   ReturnValue;                                       // 0x0028(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectSubsystem_GetBehaviorDefinition) == 0x000008, "Wrong alignment on SmartObjectSubsystem_GetBehaviorDefinition");
static_assert(sizeof(SmartObjectSubsystem_GetBehaviorDefinition) == 0x000030, "Wrong size on SmartObjectSubsystem_GetBehaviorDefinition");
static_assert(offsetof(SmartObjectSubsystem_GetBehaviorDefinition, ClaimHandle) == 0x000000, "Member 'SmartObjectSubsystem_GetBehaviorDefinition::ClaimHandle' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_GetBehaviorDefinition, DefinitionClass) == 0x000020, "Member 'SmartObjectSubsystem_GetBehaviorDefinition::DefinitionClass' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_GetBehaviorDefinition, ReturnValue) == 0x000028, "Member 'SmartObjectSubsystem_GetBehaviorDefinition::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectSubsystem.GetBehaviorDefinitionByRequestResult
// 0x0028 (0x0028 - 0x0000)
struct SmartObjectSubsystem_GetBehaviorDefinitionByRequestResult final
{
public:
	struct FSmartObjectRequestResult              RequestResult;                                     // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TSubclassOf<class USmartObjectBehaviorDefinition> DefinitionClass;                               // 0x0018(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class USmartObjectBehaviorDefinition*   ReturnValue;                                       // 0x0020(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectSubsystem_GetBehaviorDefinitionByRequestResult) == 0x000008, "Wrong alignment on SmartObjectSubsystem_GetBehaviorDefinitionByRequestResult");
static_assert(sizeof(SmartObjectSubsystem_GetBehaviorDefinitionByRequestResult) == 0x000028, "Wrong size on SmartObjectSubsystem_GetBehaviorDefinitionByRequestResult");
static_assert(offsetof(SmartObjectSubsystem_GetBehaviorDefinitionByRequestResult, RequestResult) == 0x000000, "Member 'SmartObjectSubsystem_GetBehaviorDefinitionByRequestResult::RequestResult' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_GetBehaviorDefinitionByRequestResult, DefinitionClass) == 0x000018, "Member 'SmartObjectSubsystem_GetBehaviorDefinitionByRequestResult::DefinitionClass' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_GetBehaviorDefinitionByRequestResult, ReturnValue) == 0x000020, "Member 'SmartObjectSubsystem_GetBehaviorDefinitionByRequestResult::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectSubsystem.Release
// 0x0028 (0x0028 - 0x0000)
struct SmartObjectSubsystem_Release final
{
public:
	struct FSmartObjectClaimHandle                ClaimHandle;                                       // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectSubsystem_Release) == 0x000008, "Wrong alignment on SmartObjectSubsystem_Release");
static_assert(sizeof(SmartObjectSubsystem_Release) == 0x000028, "Wrong size on SmartObjectSubsystem_Release");
static_assert(offsetof(SmartObjectSubsystem_Release, ClaimHandle) == 0x000000, "Member 'SmartObjectSubsystem_Release::ClaimHandle' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_Release, ReturnValue) == 0x000020, "Member 'SmartObjectSubsystem_Release::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectSubsystem.RemoveTagFromInstance
// 0x0010 (0x0010 - 0x0000)
struct SmartObjectSubsystem_RemoveTagFromInstance final
{
public:
	struct FSmartObjectHandle                     Handle;                                            // 0x0000(0x0008)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           Tag;                                               // 0x0008(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectSubsystem_RemoveTagFromInstance) == 0x000008, "Wrong alignment on SmartObjectSubsystem_RemoveTagFromInstance");
static_assert(sizeof(SmartObjectSubsystem_RemoveTagFromInstance) == 0x000010, "Wrong size on SmartObjectSubsystem_RemoveTagFromInstance");
static_assert(offsetof(SmartObjectSubsystem_RemoveTagFromInstance, Handle) == 0x000000, "Member 'SmartObjectSubsystem_RemoveTagFromInstance::Handle' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_RemoveTagFromInstance, Tag) == 0x000008, "Member 'SmartObjectSubsystem_RemoveTagFromInstance::Tag' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectSubsystem.RemoveTagFromSlot
// 0x0020 (0x0020 - 0x0000)
struct SmartObjectSubsystem_RemoveTagFromSlot final
{
public:
	struct FSmartObjectSlotHandle                 SlotHandle;                                        // 0x0000(0x0010)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           Tag;                                               // 0x0010(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectSubsystem_RemoveTagFromSlot) == 0x000008, "Wrong alignment on SmartObjectSubsystem_RemoveTagFromSlot");
static_assert(sizeof(SmartObjectSubsystem_RemoveTagFromSlot) == 0x000020, "Wrong size on SmartObjectSubsystem_RemoveTagFromSlot");
static_assert(offsetof(SmartObjectSubsystem_RemoveTagFromSlot, SlotHandle) == 0x000000, "Member 'SmartObjectSubsystem_RemoveTagFromSlot::SlotHandle' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_RemoveTagFromSlot, Tag) == 0x000010, "Member 'SmartObjectSubsystem_RemoveTagFromSlot::Tag' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_RemoveTagFromSlot, ReturnValue) == 0x000018, "Member 'SmartObjectSubsystem_RemoveTagFromSlot::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectSubsystem.SetEnabled
// 0x0010 (0x0010 - 0x0000)
struct SmartObjectSubsystem_SetEnabled final
{
public:
	struct FSmartObjectHandle                     Handle;                                            // 0x0000(0x0008)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnabled;                                          // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectSubsystem_SetEnabled) == 0x000008, "Wrong alignment on SmartObjectSubsystem_SetEnabled");
static_assert(sizeof(SmartObjectSubsystem_SetEnabled) == 0x000010, "Wrong size on SmartObjectSubsystem_SetEnabled");
static_assert(offsetof(SmartObjectSubsystem_SetEnabled, Handle) == 0x000000, "Member 'SmartObjectSubsystem_SetEnabled::Handle' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_SetEnabled, bEnabled) == 0x000008, "Member 'SmartObjectSubsystem_SetEnabled::bEnabled' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_SetEnabled, ReturnValue) == 0x000009, "Member 'SmartObjectSubsystem_SetEnabled::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectSubsystem.SetEnabledForReason
// 0x0018 (0x0018 - 0x0000)
struct SmartObjectSubsystem_SetEnabledForReason final
{
public:
	struct FSmartObjectHandle                     Handle;                                            // 0x0000(0x0008)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           ReasonTag;                                         // 0x0008(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnabled;                                          // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectSubsystem_SetEnabledForReason) == 0x000008, "Wrong alignment on SmartObjectSubsystem_SetEnabledForReason");
static_assert(sizeof(SmartObjectSubsystem_SetEnabledForReason) == 0x000018, "Wrong size on SmartObjectSubsystem_SetEnabledForReason");
static_assert(offsetof(SmartObjectSubsystem_SetEnabledForReason, Handle) == 0x000000, "Member 'SmartObjectSubsystem_SetEnabledForReason::Handle' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_SetEnabledForReason, ReasonTag) == 0x000008, "Member 'SmartObjectSubsystem_SetEnabledForReason::ReasonTag' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_SetEnabledForReason, bEnabled) == 0x000010, "Member 'SmartObjectSubsystem_SetEnabledForReason::bEnabled' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_SetEnabledForReason, ReturnValue) == 0x000011, "Member 'SmartObjectSubsystem_SetEnabledForReason::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectSubsystem.SetSlotEnabled
// 0x0018 (0x0018 - 0x0000)
struct SmartObjectSubsystem_SetSlotEnabled final
{
public:
	struct FSmartObjectSlotHandle                 SlotHandle;                                        // 0x0000(0x0010)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnabled;                                          // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectSubsystem_SetSlotEnabled) == 0x000008, "Wrong alignment on SmartObjectSubsystem_SetSlotEnabled");
static_assert(sizeof(SmartObjectSubsystem_SetSlotEnabled) == 0x000018, "Wrong size on SmartObjectSubsystem_SetSlotEnabled");
static_assert(offsetof(SmartObjectSubsystem_SetSlotEnabled, SlotHandle) == 0x000000, "Member 'SmartObjectSubsystem_SetSlotEnabled::SlotHandle' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_SetSlotEnabled, bEnabled) == 0x000010, "Member 'SmartObjectSubsystem_SetSlotEnabled::bEnabled' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_SetSlotEnabled, ReturnValue) == 0x000011, "Member 'SmartObjectSubsystem_SetSlotEnabled::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectSubsystem.Use
// 0x0030 (0x0030 - 0x0000)
struct SmartObjectSubsystem_Use final
{
public:
	struct FSmartObjectClaimHandle                ClaimHandle;                                       // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TSubclassOf<class USmartObjectBehaviorDefinition> DefinitionClass;                               // 0x0020(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class USmartObjectBehaviorDefinition*   ReturnValue;                                       // 0x0028(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectSubsystem_Use) == 0x000008, "Wrong alignment on SmartObjectSubsystem_Use");
static_assert(sizeof(SmartObjectSubsystem_Use) == 0x000030, "Wrong size on SmartObjectSubsystem_Use");
static_assert(offsetof(SmartObjectSubsystem_Use, ClaimHandle) == 0x000000, "Member 'SmartObjectSubsystem_Use::ClaimHandle' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_Use, DefinitionClass) == 0x000020, "Member 'SmartObjectSubsystem_Use::DefinitionClass' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_Use, ReturnValue) == 0x000028, "Member 'SmartObjectSubsystem_Use::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectSubsystem.FindSmartObject
// 0x0150 (0x0150 - 0x0000)
struct SmartObjectSubsystem_FindSmartObject final
{
public:
	struct FSmartObjectRequest                    Request;                                           // 0x0000(0x0130)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	const class AActor*                           UserActor;                                         // 0x0130(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSmartObjectRequestResult              ReturnValue;                                       // 0x0138(0x0018)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectSubsystem_FindSmartObject) == 0x000010, "Wrong alignment on SmartObjectSubsystem_FindSmartObject");
static_assert(sizeof(SmartObjectSubsystem_FindSmartObject) == 0x000150, "Wrong size on SmartObjectSubsystem_FindSmartObject");
static_assert(offsetof(SmartObjectSubsystem_FindSmartObject, Request) == 0x000000, "Member 'SmartObjectSubsystem_FindSmartObject::Request' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_FindSmartObject, UserActor) == 0x000130, "Member 'SmartObjectSubsystem_FindSmartObject::UserActor' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_FindSmartObject, ReturnValue) == 0x000138, "Member 'SmartObjectSubsystem_FindSmartObject::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectSubsystem.FindSmartObjects
// 0x0150 (0x0150 - 0x0000)
struct SmartObjectSubsystem_FindSmartObjects final
{
public:
	struct FSmartObjectRequest                    Request;                                           // 0x0000(0x0130)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<struct FSmartObjectRequestResult>      OutResults;                                        // 0x0130(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	const class AActor*                           UserActor;                                         // 0x0140(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0148(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectSubsystem_FindSmartObjects) == 0x000010, "Wrong alignment on SmartObjectSubsystem_FindSmartObjects");
static_assert(sizeof(SmartObjectSubsystem_FindSmartObjects) == 0x000150, "Wrong size on SmartObjectSubsystem_FindSmartObjects");
static_assert(offsetof(SmartObjectSubsystem_FindSmartObjects, Request) == 0x000000, "Member 'SmartObjectSubsystem_FindSmartObjects::Request' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_FindSmartObjects, OutResults) == 0x000130, "Member 'SmartObjectSubsystem_FindSmartObjects::OutResults' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_FindSmartObjects, UserActor) == 0x000140, "Member 'SmartObjectSubsystem_FindSmartObjects::UserActor' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_FindSmartObjects, ReturnValue) == 0x000148, "Member 'SmartObjectSubsystem_FindSmartObjects::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectSubsystem.FindSmartObjects_BP
// 0x0150 (0x0150 - 0x0000)
struct SmartObjectSubsystem_FindSmartObjects_BP final
{
public:
	struct FSmartObjectRequest                    Request;                                           // 0x0000(0x0130)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<struct FSmartObjectRequestResult>      OutResults;                                        // 0x0130(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	const class AActor*                           UserActor;                                         // 0x0140(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0148(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectSubsystem_FindSmartObjects_BP) == 0x000010, "Wrong alignment on SmartObjectSubsystem_FindSmartObjects_BP");
static_assert(sizeof(SmartObjectSubsystem_FindSmartObjects_BP) == 0x000150, "Wrong size on SmartObjectSubsystem_FindSmartObjects_BP");
static_assert(offsetof(SmartObjectSubsystem_FindSmartObjects_BP, Request) == 0x000000, "Member 'SmartObjectSubsystem_FindSmartObjects_BP::Request' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_FindSmartObjects_BP, OutResults) == 0x000130, "Member 'SmartObjectSubsystem_FindSmartObjects_BP::OutResults' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_FindSmartObjects_BP, UserActor) == 0x000140, "Member 'SmartObjectSubsystem_FindSmartObjects_BP::UserActor' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_FindSmartObjects_BP, ReturnValue) == 0x000148, "Member 'SmartObjectSubsystem_FindSmartObjects_BP::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectSubsystem.GetAllSlots
// 0x0018 (0x0018 - 0x0000)
struct SmartObjectSubsystem_GetAllSlots final
{
public:
	struct FSmartObjectHandle                     Handle;                                            // 0x0000(0x0008)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSmartObjectSlotHandle>         OutSlots;                                          // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectSubsystem_GetAllSlots) == 0x000008, "Wrong alignment on SmartObjectSubsystem_GetAllSlots");
static_assert(sizeof(SmartObjectSubsystem_GetAllSlots) == 0x000018, "Wrong size on SmartObjectSubsystem_GetAllSlots");
static_assert(offsetof(SmartObjectSubsystem_GetAllSlots, Handle) == 0x000000, "Member 'SmartObjectSubsystem_GetAllSlots::Handle' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_GetAllSlots, OutSlots) == 0x000008, "Member 'SmartObjectSubsystem_GetAllSlots::OutSlots' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectSubsystem.GetInstanceTags
// 0x0028 (0x0028 - 0x0000)
struct SmartObjectSubsystem_GetInstanceTags final
{
public:
	struct FSmartObjectHandle                     Handle;                                            // 0x0000(0x0008)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  ReturnValue;                                       // 0x0008(0x0020)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectSubsystem_GetInstanceTags) == 0x000008, "Wrong alignment on SmartObjectSubsystem_GetInstanceTags");
static_assert(sizeof(SmartObjectSubsystem_GetInstanceTags) == 0x000028, "Wrong size on SmartObjectSubsystem_GetInstanceTags");
static_assert(offsetof(SmartObjectSubsystem_GetInstanceTags, Handle) == 0x000000, "Member 'SmartObjectSubsystem_GetInstanceTags::Handle' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_GetInstanceTags, ReturnValue) == 0x000008, "Member 'SmartObjectSubsystem_GetInstanceTags::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectSubsystem.GetSlotLocation
// 0x0040 (0x0040 - 0x0000)
struct SmartObjectSubsystem_GetSlotLocation final
{
public:
	struct FSmartObjectClaimHandle                ClaimHandle;                                       // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                OutSlotLocation;                                   // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectSubsystem_GetSlotLocation) == 0x000008, "Wrong alignment on SmartObjectSubsystem_GetSlotLocation");
static_assert(sizeof(SmartObjectSubsystem_GetSlotLocation) == 0x000040, "Wrong size on SmartObjectSubsystem_GetSlotLocation");
static_assert(offsetof(SmartObjectSubsystem_GetSlotLocation, ClaimHandle) == 0x000000, "Member 'SmartObjectSubsystem_GetSlotLocation::ClaimHandle' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_GetSlotLocation, OutSlotLocation) == 0x000020, "Member 'SmartObjectSubsystem_GetSlotLocation::OutSlotLocation' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_GetSlotLocation, ReturnValue) == 0x000038, "Member 'SmartObjectSubsystem_GetSlotLocation::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectSubsystem.GetSlotState
// 0x0018 (0x0018 - 0x0000)
struct SmartObjectSubsystem_GetSlotState final
{
public:
	struct FSmartObjectSlotHandle                 SlotHandle;                                        // 0x0000(0x0010)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESmartObjectSlotState                         ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectSubsystem_GetSlotState) == 0x000008, "Wrong alignment on SmartObjectSubsystem_GetSlotState");
static_assert(sizeof(SmartObjectSubsystem_GetSlotState) == 0x000018, "Wrong size on SmartObjectSubsystem_GetSlotState");
static_assert(offsetof(SmartObjectSubsystem_GetSlotState, SlotHandle) == 0x000000, "Member 'SmartObjectSubsystem_GetSlotState::SlotHandle' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_GetSlotState, ReturnValue) == 0x000010, "Member 'SmartObjectSubsystem_GetSlotState::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectSubsystem.GetSlotTags
// 0x0030 (0x0030 - 0x0000)
struct SmartObjectSubsystem_GetSlotTags final
{
public:
	struct FSmartObjectSlotHandle                 SlotHandle;                                        // 0x0000(0x0010)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  ReturnValue;                                       // 0x0010(0x0020)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectSubsystem_GetSlotTags) == 0x000008, "Wrong alignment on SmartObjectSubsystem_GetSlotTags");
static_assert(sizeof(SmartObjectSubsystem_GetSlotTags) == 0x000030, "Wrong size on SmartObjectSubsystem_GetSlotTags");
static_assert(offsetof(SmartObjectSubsystem_GetSlotTags, SlotHandle) == 0x000000, "Member 'SmartObjectSubsystem_GetSlotTags::SlotHandle' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_GetSlotTags, ReturnValue) == 0x000010, "Member 'SmartObjectSubsystem_GetSlotTags::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectSubsystem.GetSlotTransform
// 0x0090 (0x0090 - 0x0000)
struct SmartObjectSubsystem_GetSlotTransform final
{
public:
	struct FSmartObjectClaimHandle                ClaimHandle;                                       // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                             OutSlotTransform;                                  // 0x0020(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0080(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0xF];                                       // 0x0081(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectSubsystem_GetSlotTransform) == 0x000010, "Wrong alignment on SmartObjectSubsystem_GetSlotTransform");
static_assert(sizeof(SmartObjectSubsystem_GetSlotTransform) == 0x000090, "Wrong size on SmartObjectSubsystem_GetSlotTransform");
static_assert(offsetof(SmartObjectSubsystem_GetSlotTransform, ClaimHandle) == 0x000000, "Member 'SmartObjectSubsystem_GetSlotTransform::ClaimHandle' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_GetSlotTransform, OutSlotTransform) == 0x000020, "Member 'SmartObjectSubsystem_GetSlotTransform::OutSlotTransform' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_GetSlotTransform, ReturnValue) == 0x000080, "Member 'SmartObjectSubsystem_GetSlotTransform::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectSubsystem.GetSlotTransformFromRequestResult
// 0x0090 (0x0090 - 0x0000)
struct SmartObjectSubsystem_GetSlotTransformFromRequestResult final
{
public:
	struct FSmartObjectRequestResult              RequestResult;                                     // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             OutSlotTransform;                                  // 0x0020(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0080(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0xF];                                       // 0x0081(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectSubsystem_GetSlotTransformFromRequestResult) == 0x000010, "Wrong alignment on SmartObjectSubsystem_GetSlotTransformFromRequestResult");
static_assert(sizeof(SmartObjectSubsystem_GetSlotTransformFromRequestResult) == 0x000090, "Wrong size on SmartObjectSubsystem_GetSlotTransformFromRequestResult");
static_assert(offsetof(SmartObjectSubsystem_GetSlotTransformFromRequestResult, RequestResult) == 0x000000, "Member 'SmartObjectSubsystem_GetSlotTransformFromRequestResult::RequestResult' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_GetSlotTransformFromRequestResult, OutSlotTransform) == 0x000020, "Member 'SmartObjectSubsystem_GetSlotTransformFromRequestResult::OutSlotTransform' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_GetSlotTransformFromRequestResult, ReturnValue) == 0x000080, "Member 'SmartObjectSubsystem_GetSlotTransformFromRequestResult::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectSubsystem.GetSmartObjectComponent
// 0x0030 (0x0030 - 0x0000)
struct SmartObjectSubsystem_GetSmartObjectComponent final
{
public:
	struct FSmartObjectClaimHandle                ClaimHandle;                                       // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	ETrySpawnActorIfDehydrated                    TrySpawnActorIfDehydrated;                         // 0x0020(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USmartObjectComponent*                  ReturnValue;                                       // 0x0028(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectSubsystem_GetSmartObjectComponent) == 0x000008, "Wrong alignment on SmartObjectSubsystem_GetSmartObjectComponent");
static_assert(sizeof(SmartObjectSubsystem_GetSmartObjectComponent) == 0x000030, "Wrong size on SmartObjectSubsystem_GetSmartObjectComponent");
static_assert(offsetof(SmartObjectSubsystem_GetSmartObjectComponent, ClaimHandle) == 0x000000, "Member 'SmartObjectSubsystem_GetSmartObjectComponent::ClaimHandle' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_GetSmartObjectComponent, TrySpawnActorIfDehydrated) == 0x000020, "Member 'SmartObjectSubsystem_GetSmartObjectComponent::TrySpawnActorIfDehydrated' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_GetSmartObjectComponent, ReturnValue) == 0x000028, "Member 'SmartObjectSubsystem_GetSmartObjectComponent::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectSubsystem.GetSmartObjectComponentByRequestResult
// 0x0028 (0x0028 - 0x0000)
struct SmartObjectSubsystem_GetSmartObjectComponentByRequestResult final
{
public:
	struct FSmartObjectRequestResult              Result;                                            // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	ETrySpawnActorIfDehydrated                    TrySpawnActorIfDehydrated;                         // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USmartObjectComponent*                  ReturnValue;                                       // 0x0020(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectSubsystem_GetSmartObjectComponentByRequestResult) == 0x000008, "Wrong alignment on SmartObjectSubsystem_GetSmartObjectComponentByRequestResult");
static_assert(sizeof(SmartObjectSubsystem_GetSmartObjectComponentByRequestResult) == 0x000028, "Wrong size on SmartObjectSubsystem_GetSmartObjectComponentByRequestResult");
static_assert(offsetof(SmartObjectSubsystem_GetSmartObjectComponentByRequestResult, Result) == 0x000000, "Member 'SmartObjectSubsystem_GetSmartObjectComponentByRequestResult::Result' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_GetSmartObjectComponentByRequestResult, TrySpawnActorIfDehydrated) == 0x000018, "Member 'SmartObjectSubsystem_GetSmartObjectComponentByRequestResult::TrySpawnActorIfDehydrated' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_GetSmartObjectComponentByRequestResult, ReturnValue) == 0x000020, "Member 'SmartObjectSubsystem_GetSmartObjectComponentByRequestResult::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectSubsystem.IsEnabled
// 0x0010 (0x0010 - 0x0000)
struct SmartObjectSubsystem_IsEnabled final
{
public:
	struct FSmartObjectHandle                     Handle;                                            // 0x0000(0x0008)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectSubsystem_IsEnabled) == 0x000008, "Wrong alignment on SmartObjectSubsystem_IsEnabled");
static_assert(sizeof(SmartObjectSubsystem_IsEnabled) == 0x000010, "Wrong size on SmartObjectSubsystem_IsEnabled");
static_assert(offsetof(SmartObjectSubsystem_IsEnabled, Handle) == 0x000000, "Member 'SmartObjectSubsystem_IsEnabled::Handle' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_IsEnabled, ReturnValue) == 0x000008, "Member 'SmartObjectSubsystem_IsEnabled::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectSubsystem.IsEnabledForReason
// 0x0018 (0x0018 - 0x0000)
struct SmartObjectSubsystem_IsEnabledForReason final
{
public:
	struct FSmartObjectHandle                     Handle;                                            // 0x0000(0x0008)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           ReasonTag;                                         // 0x0008(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectSubsystem_IsEnabledForReason) == 0x000008, "Wrong alignment on SmartObjectSubsystem_IsEnabledForReason");
static_assert(sizeof(SmartObjectSubsystem_IsEnabledForReason) == 0x000018, "Wrong size on SmartObjectSubsystem_IsEnabledForReason");
static_assert(offsetof(SmartObjectSubsystem_IsEnabledForReason, Handle) == 0x000000, "Member 'SmartObjectSubsystem_IsEnabledForReason::Handle' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_IsEnabledForReason, ReasonTag) == 0x000008, "Member 'SmartObjectSubsystem_IsEnabledForReason::ReasonTag' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_IsEnabledForReason, ReturnValue) == 0x000010, "Member 'SmartObjectSubsystem_IsEnabledForReason::ReturnValue' has a wrong offset!");

}

