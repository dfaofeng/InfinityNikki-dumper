#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SystemStateNotifyManager

#include "Basic.hpp"

#include "Enum_TimePeriodType_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SystemStateNotifyManager.BP_SystemStateNotifyManager_C
// 0x00A8 (0x0450 - 0x03A8)
class ABP_SystemStateNotifyManager_C final : public AActor
{
public:
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(int64 QuestID)> OnQuestFinished;                                   // 0x03B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(int64 QuestID, int32 InStageID)> OnQuestStageFinished;             // 0x03C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(int32 DlgID)>   OnDlgFinished;                                     // 0x03D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnWeatherChanged;                                  // 0x03E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnEnvTemperatureChanged;                           // 0x03F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnWindChanged;                                     // 0x0400(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnNikkiDiffTemperatureChanged;                     // 0x0410(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(bool bIsDayTime)> OnDayNightChanged;                               // 0x0420(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(Enum_TimePeriodType InGameTimePeriod)> OnGameTimePeriodChanged;    // 0x0430(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(bool bPaused)>  OnGamePauseStateChanged;                           // 0x0440(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SystemStateNotifyManager_C">();
	}
	static class ABP_SystemStateNotifyManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SystemStateNotifyManager_C>();
	}
};
static_assert(alignof(ABP_SystemStateNotifyManager_C) == 0x000008, "Wrong alignment on ABP_SystemStateNotifyManager_C");
static_assert(sizeof(ABP_SystemStateNotifyManager_C) == 0x000450, "Wrong size on ABP_SystemStateNotifyManager_C");
static_assert(offsetof(ABP_SystemStateNotifyManager_C, DefaultSceneRoot) == 0x0003A8, "Member 'ABP_SystemStateNotifyManager_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_SystemStateNotifyManager_C, OnQuestFinished) == 0x0003B0, "Member 'ABP_SystemStateNotifyManager_C::OnQuestFinished' has a wrong offset!");
static_assert(offsetof(ABP_SystemStateNotifyManager_C, OnQuestStageFinished) == 0x0003C0, "Member 'ABP_SystemStateNotifyManager_C::OnQuestStageFinished' has a wrong offset!");
static_assert(offsetof(ABP_SystemStateNotifyManager_C, OnDlgFinished) == 0x0003D0, "Member 'ABP_SystemStateNotifyManager_C::OnDlgFinished' has a wrong offset!");
static_assert(offsetof(ABP_SystemStateNotifyManager_C, OnWeatherChanged) == 0x0003E0, "Member 'ABP_SystemStateNotifyManager_C::OnWeatherChanged' has a wrong offset!");
static_assert(offsetof(ABP_SystemStateNotifyManager_C, OnEnvTemperatureChanged) == 0x0003F0, "Member 'ABP_SystemStateNotifyManager_C::OnEnvTemperatureChanged' has a wrong offset!");
static_assert(offsetof(ABP_SystemStateNotifyManager_C, OnWindChanged) == 0x000400, "Member 'ABP_SystemStateNotifyManager_C::OnWindChanged' has a wrong offset!");
static_assert(offsetof(ABP_SystemStateNotifyManager_C, OnNikkiDiffTemperatureChanged) == 0x000410, "Member 'ABP_SystemStateNotifyManager_C::OnNikkiDiffTemperatureChanged' has a wrong offset!");
static_assert(offsetof(ABP_SystemStateNotifyManager_C, OnDayNightChanged) == 0x000420, "Member 'ABP_SystemStateNotifyManager_C::OnDayNightChanged' has a wrong offset!");
static_assert(offsetof(ABP_SystemStateNotifyManager_C, OnGameTimePeriodChanged) == 0x000430, "Member 'ABP_SystemStateNotifyManager_C::OnGameTimePeriodChanged' has a wrong offset!");
static_assert(offsetof(ABP_SystemStateNotifyManager_C, OnGamePauseStateChanged) == 0x000440, "Member 'ABP_SystemStateNotifyManager_C::OnGamePauseStateChanged' has a wrong offset!");

}

