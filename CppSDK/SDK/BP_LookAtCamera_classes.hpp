#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LookAtCamera

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LookAtCamera.BP_LookAtCamera_C
// 0x0040 (0x0C80 - 0x0C40)
class ABP_LookAtCamera_C final : public ACameraActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0C40(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AActor*                                 TargetActor;                                       // 0x0C48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FVector                                CameraLocation;                                    // 0x0C50(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CameraRotation;                                    // 0x0C68(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void NewFunction_0();
	void ExecuteUbergraph_BP_LookAtCamera(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LookAtCamera_C">();
	}
	static class ABP_LookAtCamera_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LookAtCamera_C>();
	}
};
static_assert(alignof(ABP_LookAtCamera_C) == 0x000010, "Wrong alignment on ABP_LookAtCamera_C");
static_assert(sizeof(ABP_LookAtCamera_C) == 0x000C80, "Wrong size on ABP_LookAtCamera_C");
static_assert(offsetof(ABP_LookAtCamera_C, UberGraphFrame) == 0x000C40, "Member 'ABP_LookAtCamera_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_LookAtCamera_C, TargetActor) == 0x000C48, "Member 'ABP_LookAtCamera_C::TargetActor' has a wrong offset!");
static_assert(offsetof(ABP_LookAtCamera_C, CameraLocation) == 0x000C50, "Member 'ABP_LookAtCamera_C::CameraLocation' has a wrong offset!");
static_assert(offsetof(ABP_LookAtCamera_C, CameraRotation) == 0x000C68, "Member 'ABP_LookAtCamera_C::CameraRotation' has a wrong offset!");

}

