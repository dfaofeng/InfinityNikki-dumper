#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PropertyBindingUtils

#include "Basic.hpp"


namespace SDK
{

// Enum PropertyBindingUtils.EPropertyBindingAccessType
// NumValues: 0x0008
enum class EPropertyBindingAccessType : uint8
{
	Offset                                   = 0,
	Object                                   = 1,
	WeakObject                               = 2,
	SoftObject                               = 3,
	ObjectInstance                           = 4,
	StructInstance                           = 5,
	IndexArray                               = 6,
	EPropertyBindingAccessType_MAX           = 7,
};

// ScriptStruct PropertyBindingUtils.BindableStructDesc
// 0x0010 (0x0010 - 0x0000)
struct FBindableStructDesc final
{
public:
	class UStruct*                                Struct;                                            // 0x0000(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Name;                                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FBindableStructDesc) == 0x000008, "Wrong alignment on FBindableStructDesc");
static_assert(sizeof(FBindableStructDesc) == 0x000010, "Wrong size on FBindableStructDesc");
static_assert(offsetof(FBindableStructDesc, Struct) == 0x000000, "Member 'FBindableStructDesc::Struct' has a wrong offset!");
static_assert(offsetof(FBindableStructDesc, Name) == 0x000008, "Member 'FBindableStructDesc::Name' has a wrong offset!");

// ScriptStruct PropertyBindingUtils.PropertyBindingPathSegment
// 0x0018 (0x0018 - 0x0000)
struct FPropertyBindingPathSegment final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         ArrayIndex;                                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStruct*                                InstanceStruct;                                    // 0x0010(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
static_assert(alignof(FPropertyBindingPathSegment) == 0x000008, "Wrong alignment on FPropertyBindingPathSegment");
static_assert(sizeof(FPropertyBindingPathSegment) == 0x000018, "Wrong size on FPropertyBindingPathSegment");
static_assert(offsetof(FPropertyBindingPathSegment, Name) == 0x000000, "Member 'FPropertyBindingPathSegment::Name' has a wrong offset!");
static_assert(offsetof(FPropertyBindingPathSegment, ArrayIndex) == 0x000008, "Member 'FPropertyBindingPathSegment::ArrayIndex' has a wrong offset!");
static_assert(offsetof(FPropertyBindingPathSegment, InstanceStruct) == 0x000010, "Member 'FPropertyBindingPathSegment::InstanceStruct' has a wrong offset!");

// ScriptStruct PropertyBindingUtils.PropertyBindingPath
// 0x0010 (0x0010 - 0x0000)
struct FPropertyBindingPath final
{
public:
	TArray<struct FPropertyBindingPathSegment>    Segments;                                          // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
};
static_assert(alignof(FPropertyBindingPath) == 0x000008, "Wrong alignment on FPropertyBindingPath");
static_assert(sizeof(FPropertyBindingPath) == 0x000010, "Wrong size on FPropertyBindingPath");
static_assert(offsetof(FPropertyBindingPath, Segments) == 0x000000, "Member 'FPropertyBindingPath::Segments' has a wrong offset!");

}

