#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PaperMeshGrass

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// Class PaperMeshGrass.PaperMeshGrassManager
// 0x0098 (0x0478 - 0x03E0)
class APaperMeshGrassManager final : public AVolume
{
public:
	class USceneComponent*                        SceneComp;                                         // 0x03E0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UPaperMeshGrassMeshComponent*>   CachedGrassMeshComps;                              // 0x03E8(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UPaperMeshGrassMeshComponent*>   PendingRefreshGrassMeshComps;                      // 0x03F8(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_408[0x60];                                     // 0x0408(0x0060)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UHierarchicalInstancedStaticMeshComponent*> FoliageComponents;                      // 0x0468(0x0010)(ExportObject, ZeroConstructor, Transient, DuplicateTransient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PaperMeshGrassManager">();
	}
	static class APaperMeshGrassManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<APaperMeshGrassManager>();
	}
};
static_assert(alignof(APaperMeshGrassManager) == 0x000008, "Wrong alignment on APaperMeshGrassManager");
static_assert(sizeof(APaperMeshGrassManager) == 0x000478, "Wrong size on APaperMeshGrassManager");
static_assert(offsetof(APaperMeshGrassManager, SceneComp) == 0x0003E0, "Member 'APaperMeshGrassManager::SceneComp' has a wrong offset!");
static_assert(offsetof(APaperMeshGrassManager, CachedGrassMeshComps) == 0x0003E8, "Member 'APaperMeshGrassManager::CachedGrassMeshComps' has a wrong offset!");
static_assert(offsetof(APaperMeshGrassManager, PendingRefreshGrassMeshComps) == 0x0003F8, "Member 'APaperMeshGrassManager::PendingRefreshGrassMeshComps' has a wrong offset!");
static_assert(offsetof(APaperMeshGrassManager, FoliageComponents) == 0x000468, "Member 'APaperMeshGrassManager::FoliageComponents' has a wrong offset!");

// Class PaperMeshGrass.PaperMeshGrassMeshComponent
// 0x0150 (0x08F0 - 0x07A0)
class UPaperMeshGrassMeshComponent final : public UMeshGrassStaticMeshComponent
{
public:
	class UMaterialInterface*                     GrassGenerateMaterial;                             // 0x0798(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GrassWeightPixelWorldDistance;                     // 0x07A0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7A4[0x4];                                      // 0x07A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                TargetNormal;                                      // 0x07A8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RejectNormalBias;                                  // 0x07C0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7C4[0x4];                                      // 0x07C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               GrassGenerateMaterialMID;                          // 0x07C8(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasCachedTransform;                               // 0x07D0(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7D1[0x7];                                      // 0x07D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBoxSphereBounds                       LastGeneratedBoxSphereBound;                       // 0x07D8(0x0038)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                             LastCachedTransform;                               // 0x0810(0x0060)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FIntPoint                              PackedResolution;                                  // 0x0870(0x0008)(ZeroConstructor, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint16>                                PackedHeightData;                                  // 0x0878(0x0010)(ZeroConstructor, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<uint32>                                PackedGrassEncodedWeightData;                      // 0x0888(0x0010)(ZeroConstructor, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<uint32>                                PackedGrassEncodedDisturbData;                     // 0x0898(0x0010)(ZeroConstructor, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<int32>                                 PackedWeightIndices;                               // 0x08A8(0x0010)(ZeroConstructor, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<int32>                                 PackedDisturbIndices;                              // 0x08B8(0x0010)(ZeroConstructor, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<class ULandscapeGrassType*>            PackedGrassTypes;                                  // 0x08C8(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UTexture2D*>                     GrassGenerateTextures;                             // 0x08D8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                         Pad_8E8[0x8];                                      // 0x08E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ClearGrassWeight();
	void GenerateGrassWeights();
	void SetGrassGenerateTextures(const TArray<class UTexture2D*>& InTextures);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PaperMeshGrassMeshComponent">();
	}
	static class UPaperMeshGrassMeshComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPaperMeshGrassMeshComponent>();
	}
};
static_assert(alignof(UPaperMeshGrassMeshComponent) == 0x000010, "Wrong alignment on UPaperMeshGrassMeshComponent");
static_assert(sizeof(UPaperMeshGrassMeshComponent) == 0x0008F0, "Wrong size on UPaperMeshGrassMeshComponent");
static_assert(offsetof(UPaperMeshGrassMeshComponent, GrassGenerateMaterial) == 0x000798, "Member 'UPaperMeshGrassMeshComponent::GrassGenerateMaterial' has a wrong offset!");
static_assert(offsetof(UPaperMeshGrassMeshComponent, GrassWeightPixelWorldDistance) == 0x0007A0, "Member 'UPaperMeshGrassMeshComponent::GrassWeightPixelWorldDistance' has a wrong offset!");
static_assert(offsetof(UPaperMeshGrassMeshComponent, TargetNormal) == 0x0007A8, "Member 'UPaperMeshGrassMeshComponent::TargetNormal' has a wrong offset!");
static_assert(offsetof(UPaperMeshGrassMeshComponent, RejectNormalBias) == 0x0007C0, "Member 'UPaperMeshGrassMeshComponent::RejectNormalBias' has a wrong offset!");
static_assert(offsetof(UPaperMeshGrassMeshComponent, GrassGenerateMaterialMID) == 0x0007C8, "Member 'UPaperMeshGrassMeshComponent::GrassGenerateMaterialMID' has a wrong offset!");
static_assert(offsetof(UPaperMeshGrassMeshComponent, bHasCachedTransform) == 0x0007D0, "Member 'UPaperMeshGrassMeshComponent::bHasCachedTransform' has a wrong offset!");
static_assert(offsetof(UPaperMeshGrassMeshComponent, LastGeneratedBoxSphereBound) == 0x0007D8, "Member 'UPaperMeshGrassMeshComponent::LastGeneratedBoxSphereBound' has a wrong offset!");
static_assert(offsetof(UPaperMeshGrassMeshComponent, LastCachedTransform) == 0x000810, "Member 'UPaperMeshGrassMeshComponent::LastCachedTransform' has a wrong offset!");
static_assert(offsetof(UPaperMeshGrassMeshComponent, PackedResolution) == 0x000870, "Member 'UPaperMeshGrassMeshComponent::PackedResolution' has a wrong offset!");
static_assert(offsetof(UPaperMeshGrassMeshComponent, PackedHeightData) == 0x000878, "Member 'UPaperMeshGrassMeshComponent::PackedHeightData' has a wrong offset!");
static_assert(offsetof(UPaperMeshGrassMeshComponent, PackedGrassEncodedWeightData) == 0x000888, "Member 'UPaperMeshGrassMeshComponent::PackedGrassEncodedWeightData' has a wrong offset!");
static_assert(offsetof(UPaperMeshGrassMeshComponent, PackedGrassEncodedDisturbData) == 0x000898, "Member 'UPaperMeshGrassMeshComponent::PackedGrassEncodedDisturbData' has a wrong offset!");
static_assert(offsetof(UPaperMeshGrassMeshComponent, PackedWeightIndices) == 0x0008A8, "Member 'UPaperMeshGrassMeshComponent::PackedWeightIndices' has a wrong offset!");
static_assert(offsetof(UPaperMeshGrassMeshComponent, PackedDisturbIndices) == 0x0008B8, "Member 'UPaperMeshGrassMeshComponent::PackedDisturbIndices' has a wrong offset!");
static_assert(offsetof(UPaperMeshGrassMeshComponent, PackedGrassTypes) == 0x0008C8, "Member 'UPaperMeshGrassMeshComponent::PackedGrassTypes' has a wrong offset!");
static_assert(offsetof(UPaperMeshGrassMeshComponent, GrassGenerateTextures) == 0x0008D8, "Member 'UPaperMeshGrassMeshComponent::GrassGenerateTextures' has a wrong offset!");

}

