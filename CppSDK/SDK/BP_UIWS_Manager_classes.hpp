#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UIWS_Manager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_UIWS_Manager.BP_UIWS_Manager_C
// 0x00C8 (0x0470 - 0x03A8)
class ABP_UIWS_Manager_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPaperMeshCaptureComponent*             WaterInteratCapture;                               // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableInteractivity;                               // 0x03C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableForceControlByStaticHeight;                  // 0x03C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C2[0x2];                                      // 0x03C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxInteractor;                                     // 0x03C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LinearFadeHeight;                                  // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WaterHeightOffset;                                 // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_UIWS_Interactor_C*>          RegisteredFramed;                                  // 0x03D8(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	class UTextureRenderTarget2D*                 Height0;                                           // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 Height1;                                           // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 FX;                                                // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 Normal;                                            // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               ForceSplatInst;                                    // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               HeightSimInst;                                     // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               NormalMat;                                         // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CopyMat;                                           // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               EffectMat;                                         // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               AdvectionSimMat;                                   // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        AffectSize;                                        // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WaterSpeed;                                        // 0x0440(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FXFrameIndex;                                      // 0x0458(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InteractorFrameIndex;                              // 0x045C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              TimeStamp;                                         // 0x0460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 FrameTex;                                          // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AdvectionSim();
	void ApplyInteractivityForces();
	void ComputeNormal();
	void CopyNormal();
	void CulcDrawPos(const struct FVector& Velocity, const struct FVector& Position, const struct FVector2D& Size, double size_multiplier, struct FVector2D* OutSize, double* PosX, double* PosY, struct FLinearColor* SamplePos);
	void CulcForceIntensity(double HeightOffset, const struct FVector& Position, double Multiplier, bool OcclutionDetection, double* Intensity);
	void DrawForce(const struct FVector& Velocity, const struct FVector& Position, const struct FVector2D& Size, double size_multiplier, class UCanvas* Canvas, class UMaterialInstanceDynamic* MatInst);
	void ExecuteUbergraph_BP_UIWS_Manager(int32 EntryPoint);
	void GetPlayerPos(struct FVector* PlayerPos);
	void GetPlayerPos_LastFrame(struct FVector* PlayerPos);
	void InitMat();
	void InitRT();
	bool InPlayerRange(const struct FVector& B);
	void InteractCapture();
	void PropagateRipples();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void Register_Interactor(class UActorComponent* Interactor);
	void RemoveFromShowOnlyList(class AActor* Actor);
	void SetInteractivity(bool NewValue);
	void Unregister_Interactor(class UActorComponent* Interactor);
	void UpdatePos(const struct FVector& InteractorPos, bool* ActiveOut);
	void Use_High_Quality_Render_Target(bool NewValue);
	void Use2ChannelHeightMap(bool NewValue);
	void WaterInteractEnabled(bool* IsEnabled);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_UIWS_Manager_C">();
	}
	static class ABP_UIWS_Manager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_UIWS_Manager_C>();
	}
};
static_assert(alignof(ABP_UIWS_Manager_C) == 0x000008, "Wrong alignment on ABP_UIWS_Manager_C");
static_assert(sizeof(ABP_UIWS_Manager_C) == 0x000470, "Wrong size on ABP_UIWS_Manager_C");
static_assert(offsetof(ABP_UIWS_Manager_C, UberGraphFrame) == 0x0003A8, "Member 'ABP_UIWS_Manager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_UIWS_Manager_C, WaterInteratCapture) == 0x0003B0, "Member 'ABP_UIWS_Manager_C::WaterInteratCapture' has a wrong offset!");
static_assert(offsetof(ABP_UIWS_Manager_C, DefaultSceneRoot) == 0x0003B8, "Member 'ABP_UIWS_Manager_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_UIWS_Manager_C, EnableInteractivity) == 0x0003C0, "Member 'ABP_UIWS_Manager_C::EnableInteractivity' has a wrong offset!");
static_assert(offsetof(ABP_UIWS_Manager_C, EnableForceControlByStaticHeight) == 0x0003C1, "Member 'ABP_UIWS_Manager_C::EnableForceControlByStaticHeight' has a wrong offset!");
static_assert(offsetof(ABP_UIWS_Manager_C, MaxInteractor) == 0x0003C4, "Member 'ABP_UIWS_Manager_C::MaxInteractor' has a wrong offset!");
static_assert(offsetof(ABP_UIWS_Manager_C, LinearFadeHeight) == 0x0003C8, "Member 'ABP_UIWS_Manager_C::LinearFadeHeight' has a wrong offset!");
static_assert(offsetof(ABP_UIWS_Manager_C, WaterHeightOffset) == 0x0003D0, "Member 'ABP_UIWS_Manager_C::WaterHeightOffset' has a wrong offset!");
static_assert(offsetof(ABP_UIWS_Manager_C, RegisteredFramed) == 0x0003D8, "Member 'ABP_UIWS_Manager_C::RegisteredFramed' has a wrong offset!");
static_assert(offsetof(ABP_UIWS_Manager_C, Height0) == 0x0003E8, "Member 'ABP_UIWS_Manager_C::Height0' has a wrong offset!");
static_assert(offsetof(ABP_UIWS_Manager_C, Height1) == 0x0003F0, "Member 'ABP_UIWS_Manager_C::Height1' has a wrong offset!");
static_assert(offsetof(ABP_UIWS_Manager_C, FX) == 0x0003F8, "Member 'ABP_UIWS_Manager_C::FX' has a wrong offset!");
static_assert(offsetof(ABP_UIWS_Manager_C, Normal) == 0x000400, "Member 'ABP_UIWS_Manager_C::Normal' has a wrong offset!");
static_assert(offsetof(ABP_UIWS_Manager_C, ForceSplatInst) == 0x000408, "Member 'ABP_UIWS_Manager_C::ForceSplatInst' has a wrong offset!");
static_assert(offsetof(ABP_UIWS_Manager_C, HeightSimInst) == 0x000410, "Member 'ABP_UIWS_Manager_C::HeightSimInst' has a wrong offset!");
static_assert(offsetof(ABP_UIWS_Manager_C, NormalMat) == 0x000418, "Member 'ABP_UIWS_Manager_C::NormalMat' has a wrong offset!");
static_assert(offsetof(ABP_UIWS_Manager_C, CopyMat) == 0x000420, "Member 'ABP_UIWS_Manager_C::CopyMat' has a wrong offset!");
static_assert(offsetof(ABP_UIWS_Manager_C, EffectMat) == 0x000428, "Member 'ABP_UIWS_Manager_C::EffectMat' has a wrong offset!");
static_assert(offsetof(ABP_UIWS_Manager_C, AdvectionSimMat) == 0x000430, "Member 'ABP_UIWS_Manager_C::AdvectionSimMat' has a wrong offset!");
static_assert(offsetof(ABP_UIWS_Manager_C, AffectSize) == 0x000438, "Member 'ABP_UIWS_Manager_C::AffectSize' has a wrong offset!");
static_assert(offsetof(ABP_UIWS_Manager_C, WaterSpeed) == 0x000440, "Member 'ABP_UIWS_Manager_C::WaterSpeed' has a wrong offset!");
static_assert(offsetof(ABP_UIWS_Manager_C, FXFrameIndex) == 0x000458, "Member 'ABP_UIWS_Manager_C::FXFrameIndex' has a wrong offset!");
static_assert(offsetof(ABP_UIWS_Manager_C, InteractorFrameIndex) == 0x00045C, "Member 'ABP_UIWS_Manager_C::InteractorFrameIndex' has a wrong offset!");
static_assert(offsetof(ABP_UIWS_Manager_C, TimeStamp) == 0x000460, "Member 'ABP_UIWS_Manager_C::TimeStamp' has a wrong offset!");
static_assert(offsetof(ABP_UIWS_Manager_C, FrameTex) == 0x000468, "Member 'ABP_UIWS_Manager_C::FrameTex' has a wrong offset!");

}

