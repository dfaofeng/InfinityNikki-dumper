#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TT_TargetingSelectionAOEIncludeRotation

#include "Basic.hpp"

#include "TargetingSystem_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function TT_TargetingSelectionAOEIncludeRotation.TT_TargetingSelectionAOEIncludeRotation_C.BP_GetSourceMeshComp
// 0x0078 (0x0078 - 0x0000)
struct TT_TargetingSelectionAOEIncludeRotation_C_BP_GetSourceMeshComp final
{
public:
	struct FTargetingRequestHandle                TargetingHandle;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         MeshComp;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTargetingSubsystem*                    CallFunc_GetTargetingSubsystem_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTargetingSourceContext                CallFunc_GetTargetingSourceContext_ReturnValue;    // 0x0018(0x0048)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         K2Node_DynamicCast_AsMesh_Component;               // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TT_TargetingSelectionAOEIncludeRotation_C_BP_GetSourceMeshComp) == 0x000008, "Wrong alignment on TT_TargetingSelectionAOEIncludeRotation_C_BP_GetSourceMeshComp");
static_assert(sizeof(TT_TargetingSelectionAOEIncludeRotation_C_BP_GetSourceMeshComp) == 0x000078, "Wrong size on TT_TargetingSelectionAOEIncludeRotation_C_BP_GetSourceMeshComp");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_BP_GetSourceMeshComp, TargetingHandle) == 0x000000, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_BP_GetSourceMeshComp::TargetingHandle' has a wrong offset!");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_BP_GetSourceMeshComp, MeshComp) == 0x000008, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_BP_GetSourceMeshComp::MeshComp' has a wrong offset!");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_BP_GetSourceMeshComp, CallFunc_GetTargetingSubsystem_ReturnValue) == 0x000010, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_BP_GetSourceMeshComp::CallFunc_GetTargetingSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_BP_GetSourceMeshComp, CallFunc_GetTargetingSourceContext_ReturnValue) == 0x000018, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_BP_GetSourceMeshComp::CallFunc_GetTargetingSourceContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_BP_GetSourceMeshComp, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_BP_GetSourceMeshComp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_BP_GetSourceMeshComp, K2Node_DynamicCast_AsMesh_Component) == 0x000068, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_BP_GetSourceMeshComp::K2Node_DynamicCast_AsMesh_Component' has a wrong offset!");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_BP_GetSourceMeshComp, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_BP_GetSourceMeshComp::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function TT_TargetingSelectionAOEIncludeRotation.TT_TargetingSelectionAOEIncludeRotation_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct TT_TargetingSelectionAOEIncludeRotation_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TT_TargetingSelectionAOEIncludeRotation_C_GetModuleName) == 0x000008, "Wrong alignment on TT_TargetingSelectionAOEIncludeRotation_C_GetModuleName");
static_assert(sizeof(TT_TargetingSelectionAOEIncludeRotation_C_GetModuleName) == 0x000010, "Wrong size on TT_TargetingSelectionAOEIncludeRotation_C_GetModuleName");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_GetModuleName, ReturnValue) == 0x000000, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_GetModuleName::ReturnValue' has a wrong offset!");

// Function TT_TargetingSelectionAOEIncludeRotation.TT_TargetingSelectionAOEIncludeRotation_C.GetOffsetRotationInEditor
// 0x0200 (0x0200 - 0x0000)
struct TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor final
{
public:
	const class AActor*                           Actor;                                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  ReturnValue;                                       // 0x0010(0x0020)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 LocalActor;                                        // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78[0x8];                                       // 0x0078(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0080(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_TransformRotation_ReturnValue;            // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_118[0x8];                                      // 0x0118(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  CallFunc_Conv_RotatorToQuaternion_ReturnValue;     // 0x0120(0x0020)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0140(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_TransformRotation_ReturnValue_1;          // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B8[0x8];                                      // 0x01B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  CallFunc_Conv_RotatorToQuaternion_ReturnValue_1;   // 0x01C0(0x0020)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor) == 0x000010, "Wrong alignment on TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor");
static_assert(sizeof(TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor) == 0x000200, "Wrong size on TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor, Actor) == 0x000000, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor::Actor' has a wrong offset!");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor, ReturnValue) == 0x000010, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor::ReturnValue' has a wrong offset!");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor, LocalActor) == 0x000030, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor::LocalActor' has a wrong offset!");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor, CallFunc_BreakRotator_Roll) == 0x000038, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor, CallFunc_BreakRotator_Pitch) == 0x00003C, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor, CallFunc_BreakRotator_Yaw) == 0x000040, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000048, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor, CallFunc_BreakRotator_Roll_1) == 0x000060, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor, CallFunc_BreakRotator_Pitch_1) == 0x000064, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor, CallFunc_BreakRotator_Yaw_1) == 0x000068, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000070, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor, CallFunc_MakeTransform_ReturnValue) == 0x000080, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000E0, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor, CallFunc_TransformRotation_ReturnValue) == 0x0000E8, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor::CallFunc_TransformRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor, CallFunc_MakeRotator_ReturnValue) == 0x000100, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor, CallFunc_Conv_RotatorToQuaternion_ReturnValue) == 0x000120, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor::CallFunc_Conv_RotatorToQuaternion_ReturnValue' has a wrong offset!");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor, CallFunc_MakeTransform_ReturnValue_1) == 0x000140, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor, CallFunc_TransformRotation_ReturnValue_1) == 0x0001A0, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor::CallFunc_TransformRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor, CallFunc_Conv_RotatorToQuaternion_ReturnValue_1) == 0x0001C0, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor::CallFunc_Conv_RotatorToQuaternion_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0001E0, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x0001E8, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x0001F0, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x0001F4, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_GetOffsetRotationInEditor::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");

// Function TT_TargetingSelectionAOEIncludeRotation.TT_TargetingSelectionAOEIncludeRotation_C.GetSourceLocation
// 0x0060 (0x0060 - 0x0000)
struct TT_TargetingSelectionAOEIncludeRotation_C_GetSourceLocation final
{
public:
	struct FTargetingRequestHandle                TargetingHandle;                                   // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSourceLocation_ReturnValue;            // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         CallFunc_BP_GetSourceMeshComp_MeshComp;            // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSourceLocationFromMesh_ReturnValue;    // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TT_TargetingSelectionAOEIncludeRotation_C_GetSourceLocation) == 0x000008, "Wrong alignment on TT_TargetingSelectionAOEIncludeRotation_C_GetSourceLocation");
static_assert(sizeof(TT_TargetingSelectionAOEIncludeRotation_C_GetSourceLocation) == 0x000060, "Wrong size on TT_TargetingSelectionAOEIncludeRotation_C_GetSourceLocation");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_GetSourceLocation, TargetingHandle) == 0x000000, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_GetSourceLocation::TargetingHandle' has a wrong offset!");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_GetSourceLocation, ReturnValue) == 0x000008, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_GetSourceLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_GetSourceLocation, CallFunc_GetSourceLocation_ReturnValue) == 0x000020, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_GetSourceLocation::CallFunc_GetSourceLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_GetSourceLocation, CallFunc_BP_GetSourceMeshComp_MeshComp) == 0x000038, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_GetSourceLocation::CallFunc_BP_GetSourceMeshComp_MeshComp' has a wrong offset!");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_GetSourceLocation, CallFunc_GetSourceLocationFromMesh_ReturnValue) == 0x000040, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_GetSourceLocation::CallFunc_GetSourceLocationFromMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_GetSourceLocation, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_GetSourceLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function TT_TargetingSelectionAOEIncludeRotation.TT_TargetingSelectionAOEIncludeRotation_C.GetSourceLocationFromMesh
// 0x0028 (0x0028 - 0x0000)
struct TT_TargetingSelectionAOEIncludeRotation_C_GetSourceLocationFromMesh final
{
public:
	struct FTargetingRequestHandle                TargetingHandle;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         MeshComp;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TT_TargetingSelectionAOEIncludeRotation_C_GetSourceLocationFromMesh) == 0x000008, "Wrong alignment on TT_TargetingSelectionAOEIncludeRotation_C_GetSourceLocationFromMesh");
static_assert(sizeof(TT_TargetingSelectionAOEIncludeRotation_C_GetSourceLocationFromMesh) == 0x000028, "Wrong size on TT_TargetingSelectionAOEIncludeRotation_C_GetSourceLocationFromMesh");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_GetSourceLocationFromMesh, TargetingHandle) == 0x000000, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_GetSourceLocationFromMesh::TargetingHandle' has a wrong offset!");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_GetSourceLocationFromMesh, MeshComp) == 0x000008, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_GetSourceLocationFromMesh::MeshComp' has a wrong offset!");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_GetSourceLocationFromMesh, ReturnValue) == 0x000010, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_GetSourceLocationFromMesh::ReturnValue' has a wrong offset!");

// Function TT_TargetingSelectionAOEIncludeRotation.TT_TargetingSelectionAOEIncludeRotation_C.GetSourceOffset
// 0x0060 (0x0060 - 0x0000)
struct TT_TargetingSelectionAOEIncludeRotation_C_GetSourceOffset final
{
public:
	struct FTargetingRequestHandle                TargetingHandle;                                   // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         CallFunc_BP_GetSourceMeshComp_MeshComp;            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSourceOffset_ReturnValue;              // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSourceOffsetLocationFromMesh_ReturnValue; // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TT_TargetingSelectionAOEIncludeRotation_C_GetSourceOffset) == 0x000008, "Wrong alignment on TT_TargetingSelectionAOEIncludeRotation_C_GetSourceOffset");
static_assert(sizeof(TT_TargetingSelectionAOEIncludeRotation_C_GetSourceOffset) == 0x000060, "Wrong size on TT_TargetingSelectionAOEIncludeRotation_C_GetSourceOffset");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_GetSourceOffset, TargetingHandle) == 0x000000, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_GetSourceOffset::TargetingHandle' has a wrong offset!");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_GetSourceOffset, ReturnValue) == 0x000008, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_GetSourceOffset::ReturnValue' has a wrong offset!");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_GetSourceOffset, CallFunc_BP_GetSourceMeshComp_MeshComp) == 0x000020, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_GetSourceOffset::CallFunc_BP_GetSourceMeshComp_MeshComp' has a wrong offset!");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_GetSourceOffset, CallFunc_GetSourceOffset_ReturnValue) == 0x000028, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_GetSourceOffset::CallFunc_GetSourceOffset_ReturnValue' has a wrong offset!");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_GetSourceOffset, CallFunc_GetSourceOffsetLocationFromMesh_ReturnValue) == 0x000040, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_GetSourceOffset::CallFunc_GetSourceOffsetLocationFromMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_GetSourceOffset, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_GetSourceOffset::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_GetSourceOffset, CallFunc_BooleanAND_ReturnValue) == 0x000059, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_GetSourceOffset::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function TT_TargetingSelectionAOEIncludeRotation.TT_TargetingSelectionAOEIncludeRotation_C.GetSourceOffsetLocationFromMesh
// 0x0028 (0x0028 - 0x0000)
struct TT_TargetingSelectionAOEIncludeRotation_C_GetSourceOffsetLocationFromMesh final
{
public:
	struct FTargetingRequestHandle                TargetingHandle;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         MeshComp;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TT_TargetingSelectionAOEIncludeRotation_C_GetSourceOffsetLocationFromMesh) == 0x000008, "Wrong alignment on TT_TargetingSelectionAOEIncludeRotation_C_GetSourceOffsetLocationFromMesh");
static_assert(sizeof(TT_TargetingSelectionAOEIncludeRotation_C_GetSourceOffsetLocationFromMesh) == 0x000028, "Wrong size on TT_TargetingSelectionAOEIncludeRotation_C_GetSourceOffsetLocationFromMesh");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_GetSourceOffsetLocationFromMesh, TargetingHandle) == 0x000000, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_GetSourceOffsetLocationFromMesh::TargetingHandle' has a wrong offset!");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_GetSourceOffsetLocationFromMesh, MeshComp) == 0x000008, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_GetSourceOffsetLocationFromMesh::MeshComp' has a wrong offset!");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_GetSourceOffsetLocationFromMesh, ReturnValue) == 0x000010, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_GetSourceOffsetLocationFromMesh::ReturnValue' has a wrong offset!");

// Function TT_TargetingSelectionAOEIncludeRotation.TT_TargetingSelectionAOEIncludeRotation_C.GetSourceRotation
// 0x0030 (0x0030 - 0x0000)
struct TT_TargetingSelectionAOEIncludeRotation_C_GetSourceRotation final
{
public:
	struct FTargetingRequestHandle                TargetingHandle;                                   // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	uint8                                         Pad_4[0xC];                                        // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  ReturnValue;                                       // 0x0010(0x0020)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TT_TargetingSelectionAOEIncludeRotation_C_GetSourceRotation) == 0x000010, "Wrong alignment on TT_TargetingSelectionAOEIncludeRotation_C_GetSourceRotation");
static_assert(sizeof(TT_TargetingSelectionAOEIncludeRotation_C_GetSourceRotation) == 0x000030, "Wrong size on TT_TargetingSelectionAOEIncludeRotation_C_GetSourceRotation");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_GetSourceRotation, TargetingHandle) == 0x000000, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_GetSourceRotation::TargetingHandle' has a wrong offset!");
static_assert(offsetof(TT_TargetingSelectionAOEIncludeRotation_C_GetSourceRotation, ReturnValue) == 0x000010, "Member 'TT_TargetingSelectionAOEIncludeRotation_C_GetSourceRotation::ReturnValue' has a wrong offset!");

}

