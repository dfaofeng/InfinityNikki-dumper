#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EffectWindZone

#include "Basic.hpp"

#include "BP_EffectWindZone_classes.hpp"
#include "BP_EffectWindZone_parameters.hpp"


namespace SDK
{

// Function BP_EffectWindZone.BP_EffectWindZone_C.SetIntensity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Intensity                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EffectWindZone_C::SetIntensity(double Intensity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EffectWindZone_C", "SetIntensity");

	Params::BP_EffectWindZone_C_SetIntensity Parms{};

	Parms.Intensity = Intensity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EffectWindZone.BP_EffectWindZone_C.SetIsStatic
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bStatic                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EffectWindZone_C::SetIsStatic(bool bStatic)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EffectWindZone_C", "SetIsStatic");

	Params::BP_EffectWindZone_C_SetIsStatic Parms{};

	Parms.bStatic = bStatic;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EffectWindZone.BP_EffectWindZone_C.SetRadius
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Radius_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EffectWindZone_C::SetRadius(double Radius_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EffectWindZone_C", "SetRadius");

	Params::BP_EffectWindZone_C_SetRadius Parms{};

	Parms.Radius_0 = Radius_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EffectWindZone.BP_EffectWindZone_C.SetSize
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Size                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EffectWindZone_C::SetSize(double Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EffectWindZone_C", "SetSize");

	Params::BP_EffectWindZone_C_SetSize Parms{};

	Parms.Size = Size;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EffectWindZone.BP_EffectWindZone_C.SetStaticSpeed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Speed                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EffectWindZone_C::SetStaticSpeed(double Speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EffectWindZone_C", "SetStaticSpeed");

	Params::BP_EffectWindZone_C_SetStaticSpeed Parms{};

	Parms.Speed = Speed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EffectWindZone.BP_EffectWindZone_C.SetWaterEffectVelocity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Velocity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EffectWindZone_C::SetWaterEffectVelocity(const struct FVector& Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EffectWindZone_C", "SetWaterEffectVelocity");

	Params::BP_EffectWindZone_C_SetWaterEffectVelocity Parms{};

	Parms.Velocity = std::move(Velocity);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EffectWindZone.BP_EffectWindZone_C.GetModuleName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString ABP_EffectWindZone_C::GetModuleName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EffectWindZone_C", "GetModuleName");

	Params::BP_EffectWindZone_C_GetModuleName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

