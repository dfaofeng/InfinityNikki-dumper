#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: X6AsyncTask_QueryAreaEscapeLoc

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "X6Task_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass X6AsyncTask_QueryAreaEscapeLoc.X6AsyncTask_QueryAreaEscapeLoc_C
// 0x0070 (0x00B8 - 0x0048)
class UX6AsyncTask_QueryAreaEscapeLoc_C final : public UX6TaskAsyncBase
{
public:
	class AActor*                                 SelfActor;                                         // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class AActor*                                 StimuliSourceActor;                                // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FVector                                EscapeCenter;                                      // 0x0058(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        EscapeRadius;                                      // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        MinQueryRadius;                                    // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        MaxQueryRadius;                                    // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class UX6TaskAsyncBase* Task)> TaskBegin;                          // 0x0088(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(const struct FVector& Loc)> Success;                               // 0x0098(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              Fail;                                              // 0x00A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"X6AsyncTask_QueryAreaEscapeLoc_C">();
	}
	static class UX6AsyncTask_QueryAreaEscapeLoc_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UX6AsyncTask_QueryAreaEscapeLoc_C>();
	}
};
static_assert(alignof(UX6AsyncTask_QueryAreaEscapeLoc_C) == 0x000008, "Wrong alignment on UX6AsyncTask_QueryAreaEscapeLoc_C");
static_assert(sizeof(UX6AsyncTask_QueryAreaEscapeLoc_C) == 0x0000B8, "Wrong size on UX6AsyncTask_QueryAreaEscapeLoc_C");
static_assert(offsetof(UX6AsyncTask_QueryAreaEscapeLoc_C, SelfActor) == 0x000048, "Member 'UX6AsyncTask_QueryAreaEscapeLoc_C::SelfActor' has a wrong offset!");
static_assert(offsetof(UX6AsyncTask_QueryAreaEscapeLoc_C, StimuliSourceActor) == 0x000050, "Member 'UX6AsyncTask_QueryAreaEscapeLoc_C::StimuliSourceActor' has a wrong offset!");
static_assert(offsetof(UX6AsyncTask_QueryAreaEscapeLoc_C, EscapeCenter) == 0x000058, "Member 'UX6AsyncTask_QueryAreaEscapeLoc_C::EscapeCenter' has a wrong offset!");
static_assert(offsetof(UX6AsyncTask_QueryAreaEscapeLoc_C, EscapeRadius) == 0x000070, "Member 'UX6AsyncTask_QueryAreaEscapeLoc_C::EscapeRadius' has a wrong offset!");
static_assert(offsetof(UX6AsyncTask_QueryAreaEscapeLoc_C, MinQueryRadius) == 0x000078, "Member 'UX6AsyncTask_QueryAreaEscapeLoc_C::MinQueryRadius' has a wrong offset!");
static_assert(offsetof(UX6AsyncTask_QueryAreaEscapeLoc_C, MaxQueryRadius) == 0x000080, "Member 'UX6AsyncTask_QueryAreaEscapeLoc_C::MaxQueryRadius' has a wrong offset!");
static_assert(offsetof(UX6AsyncTask_QueryAreaEscapeLoc_C, TaskBegin) == 0x000088, "Member 'UX6AsyncTask_QueryAreaEscapeLoc_C::TaskBegin' has a wrong offset!");
static_assert(offsetof(UX6AsyncTask_QueryAreaEscapeLoc_C, Success) == 0x000098, "Member 'UX6AsyncTask_QueryAreaEscapeLoc_C::Success' has a wrong offset!");
static_assert(offsetof(UX6AsyncTask_QueryAreaEscapeLoc_C, Fail) == 0x0000A8, "Member 'UX6AsyncTask_QueryAreaEscapeLoc_C::Fail' has a wrong offset!");

}

