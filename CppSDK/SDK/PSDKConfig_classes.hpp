#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PSDKConfig

#include "Basic.hpp"

#include "PSDKConfig_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class PSDKConfig.PaperSDKGamePadSettings
// 0x0020 (0x0048 - 0x0028)
class UPaperSDKGamePadSettings final : public UObject
{
public:
	TArray<struct FChannelGamepadConfig>          ChannelGamepadConfigs;                             // 0x0028(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TArray<class FString>                         CloudChannels;                                     // 0x0038(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PaperSDKGamePadSettings">();
	}
	static class UPaperSDKGamePadSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPaperSDKGamePadSettings>();
	}
};
static_assert(alignof(UPaperSDKGamePadSettings) == 0x000008, "Wrong alignment on UPaperSDKGamePadSettings");
static_assert(sizeof(UPaperSDKGamePadSettings) == 0x000048, "Wrong size on UPaperSDKGamePadSettings");
static_assert(offsetof(UPaperSDKGamePadSettings, ChannelGamepadConfigs) == 0x000028, "Member 'UPaperSDKGamePadSettings::ChannelGamepadConfigs' has a wrong offset!");
static_assert(offsetof(UPaperSDKGamePadSettings, CloudChannels) == 0x000038, "Member 'UPaperSDKGamePadSettings::CloudChannels' has a wrong offset!");

// Class PSDKConfig.PaperSDKSettings
// 0x0188 (0x01B0 - 0x0028)
class UPaperSDKSettings final : public UObject
{
public:
	class FString                                 PackageName;                                       // 0x0028(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 TlogServer;                                        // 0x0038(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableBanShu;                                     // 0x0048(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPaperSDKGameArea                             GameArea;                                          // 0x0049(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 PsnClientId;                                       // 0x0050(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PsnClientSecret;                                   // 0x0060(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 CnAppleClientId;                                   // 0x0070(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 TapTapClientId;                                    // 0x0080(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AppleClientId;                                     // 0x0090(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 GoogleClientId;                                    // 0x00A0(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 FaceBookClientId;                                  // 0x00B0(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PSNOAuthClientId;                                  // 0x00C0(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ACEGameId;                                         // 0x00D0(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OverseasPaymentUrl;                                // 0x00E0(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 BiliAppId;                                         // 0x00F0(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 BiliAppKey;                                        // 0x0100(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 BiliServerId;                                      // 0x0110(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 BiliMerchantId;                                    // 0x0120(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          BiliEnableMultiOpen;                               // 0x0130(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RiskCaptchaUrl;                                    // 0x0138(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RiskCaptchaId;                                     // 0x0148(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 CdnWhiteKey;                                       // 0x0158(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESandboxEnv                                   SandboxEnv;                                        // 0x0168(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 AiHelpAppKey;                                      // 0x0170(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AiHelpDomain;                                      // 0x0180(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AiHelpAppId;                                       // 0x0190(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SteamWebApiKey;                                    // 0x01A0(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PaperSDKSettings">();
	}
	static class UPaperSDKSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPaperSDKSettings>();
	}
};
static_assert(alignof(UPaperSDKSettings) == 0x000008, "Wrong alignment on UPaperSDKSettings");
static_assert(sizeof(UPaperSDKSettings) == 0x0001B0, "Wrong size on UPaperSDKSettings");
static_assert(offsetof(UPaperSDKSettings, PackageName) == 0x000028, "Member 'UPaperSDKSettings::PackageName' has a wrong offset!");
static_assert(offsetof(UPaperSDKSettings, TlogServer) == 0x000038, "Member 'UPaperSDKSettings::TlogServer' has a wrong offset!");
static_assert(offsetof(UPaperSDKSettings, bEnableBanShu) == 0x000048, "Member 'UPaperSDKSettings::bEnableBanShu' has a wrong offset!");
static_assert(offsetof(UPaperSDKSettings, GameArea) == 0x000049, "Member 'UPaperSDKSettings::GameArea' has a wrong offset!");
static_assert(offsetof(UPaperSDKSettings, PsnClientId) == 0x000050, "Member 'UPaperSDKSettings::PsnClientId' has a wrong offset!");
static_assert(offsetof(UPaperSDKSettings, PsnClientSecret) == 0x000060, "Member 'UPaperSDKSettings::PsnClientSecret' has a wrong offset!");
static_assert(offsetof(UPaperSDKSettings, CnAppleClientId) == 0x000070, "Member 'UPaperSDKSettings::CnAppleClientId' has a wrong offset!");
static_assert(offsetof(UPaperSDKSettings, TapTapClientId) == 0x000080, "Member 'UPaperSDKSettings::TapTapClientId' has a wrong offset!");
static_assert(offsetof(UPaperSDKSettings, AppleClientId) == 0x000090, "Member 'UPaperSDKSettings::AppleClientId' has a wrong offset!");
static_assert(offsetof(UPaperSDKSettings, GoogleClientId) == 0x0000A0, "Member 'UPaperSDKSettings::GoogleClientId' has a wrong offset!");
static_assert(offsetof(UPaperSDKSettings, FaceBookClientId) == 0x0000B0, "Member 'UPaperSDKSettings::FaceBookClientId' has a wrong offset!");
static_assert(offsetof(UPaperSDKSettings, PSNOAuthClientId) == 0x0000C0, "Member 'UPaperSDKSettings::PSNOAuthClientId' has a wrong offset!");
static_assert(offsetof(UPaperSDKSettings, ACEGameId) == 0x0000D0, "Member 'UPaperSDKSettings::ACEGameId' has a wrong offset!");
static_assert(offsetof(UPaperSDKSettings, OverseasPaymentUrl) == 0x0000E0, "Member 'UPaperSDKSettings::OverseasPaymentUrl' has a wrong offset!");
static_assert(offsetof(UPaperSDKSettings, BiliAppId) == 0x0000F0, "Member 'UPaperSDKSettings::BiliAppId' has a wrong offset!");
static_assert(offsetof(UPaperSDKSettings, BiliAppKey) == 0x000100, "Member 'UPaperSDKSettings::BiliAppKey' has a wrong offset!");
static_assert(offsetof(UPaperSDKSettings, BiliServerId) == 0x000110, "Member 'UPaperSDKSettings::BiliServerId' has a wrong offset!");
static_assert(offsetof(UPaperSDKSettings, BiliMerchantId) == 0x000120, "Member 'UPaperSDKSettings::BiliMerchantId' has a wrong offset!");
static_assert(offsetof(UPaperSDKSettings, BiliEnableMultiOpen) == 0x000130, "Member 'UPaperSDKSettings::BiliEnableMultiOpen' has a wrong offset!");
static_assert(offsetof(UPaperSDKSettings, RiskCaptchaUrl) == 0x000138, "Member 'UPaperSDKSettings::RiskCaptchaUrl' has a wrong offset!");
static_assert(offsetof(UPaperSDKSettings, RiskCaptchaId) == 0x000148, "Member 'UPaperSDKSettings::RiskCaptchaId' has a wrong offset!");
static_assert(offsetof(UPaperSDKSettings, CdnWhiteKey) == 0x000158, "Member 'UPaperSDKSettings::CdnWhiteKey' has a wrong offset!");
static_assert(offsetof(UPaperSDKSettings, SandboxEnv) == 0x000168, "Member 'UPaperSDKSettings::SandboxEnv' has a wrong offset!");
static_assert(offsetof(UPaperSDKSettings, AiHelpAppKey) == 0x000170, "Member 'UPaperSDKSettings::AiHelpAppKey' has a wrong offset!");
static_assert(offsetof(UPaperSDKSettings, AiHelpDomain) == 0x000180, "Member 'UPaperSDKSettings::AiHelpDomain' has a wrong offset!");
static_assert(offsetof(UPaperSDKSettings, AiHelpAppId) == 0x000190, "Member 'UPaperSDKSettings::AiHelpAppId' has a wrong offset!");
static_assert(offsetof(UPaperSDKSettings, SteamWebApiKey) == 0x0001A0, "Member 'UPaperSDKSettings::SteamWebApiKey' has a wrong offset!");

}

