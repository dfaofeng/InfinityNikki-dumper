#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AndroidRuntimeSettings

#include "Basic.hpp"


namespace SDK
{

// Enum AndroidRuntimeSettings.EAndroidScreenOrientation
// NumValues: 0x0009
enum class EAndroidScreenOrientation : uint8
{
	Portrait                                 = 0,
	ReversePortrait                          = 1,
	SensorPortrait                           = 2,
	Landscape                                = 3,
	ReverseLandscape                         = 4,
	SensorLandscape                          = 5,
	Sensor                                   = 6,
	FullSensor                               = 7,
	EAndroidScreenOrientation_MAX            = 8,
};

// Enum AndroidRuntimeSettings.EAndroidDepthBufferPreference
// NumValues: 0x0005
enum class EAndroidDepthBufferPreference : uint8
{
	Default                                  = 0,
	Bits16                                   = 16,
	Bits24                                   = 24,
	Bits32                                   = 32,
	EAndroidDepthBufferPreference_MAX        = 33,
};

// Enum AndroidRuntimeSettings.EAndroidInstallLocation
// NumValues: 0x0004
enum class EAndroidInstallLocation : uint8
{
	InternalOnly                             = 0,
	PreferExternal                           = 1,
	Auto                                     = 2,
	EAndroidInstallLocation_MAX              = 3,
};

// Enum AndroidRuntimeSettings.EOculusMobileDevice
// NumValues: 0x0003
enum class EOculusMobileDevice : uint8
{
	Quest                                    = 1,
	Quest2                                   = 2,
	EOculusMobileDevice_MAX                  = 3,
};

// Enum AndroidRuntimeSettings.ETagForChildDirectedTreatment
// NumValues: 0x0004
enum class ETagForChildDirectedTreatment : uint8
{
	TAG_FOR_CHILD_DIRECTED_TREATMENT_UNSPECIFIED = 0,
	TAG_FOR_CHILD_DIRECTED_TREATMENT_TRUE    = 1,
	TAG_FOR_CHILD_DIRECTED_TREATMENT_FALSE   = 2,
	TAG_FOR_CHILD_DIRECTED_TREATMENT_MAX     = 3,
};

// Enum AndroidRuntimeSettings.ETagForUnderAgeOfConsent
// NumValues: 0x0004
enum class ETagForUnderAgeOfConsent : uint8
{
	TAG_FOR_UNDER_AGE_OF_CONSENT_UNSPECIFIED = 0,
	TAG_FOR_UNDER_AGE_OF_CONSENT_TRUE        = 1,
	TAG_FOR_UNDER_AGE_OF_CONSENT_FALSE       = 2,
	TAG_FOR_UNDER_AGE_OF_CONSENT_MAX         = 3,
};

// Enum AndroidRuntimeSettings.EMaxAdContentRating
// NumValues: 0x0005
enum class EMaxAdContentRating : uint8
{
	MAX_AD_CONTENT_RATING_G                  = 0,
	MAX_AD_CONTENT_RATING_PG                 = 1,
	MAX_AD_CONTENT_RATING_T                  = 2,
	MAX_AD_CONTENT_RATING_MA                 = 2,
	MAX_AD_CONTENT_RATING_MAX                = 3,
};

// Enum AndroidRuntimeSettings.EAndroidSimulatorDevice
// NumValues: 0x0005
enum class EAndroidSimulatorDevice : uint8
{
	Auto                                     = 0,
	Android_Adreno6xx                        = 1,
	Android_Adreno5xx                        = 2,
	Android_Adreno4xx                        = 3,
	EAndroidSimulatorDevice_MAX              = 4,
};

// Enum AndroidRuntimeSettings.EAndroidAudio
// NumValues: 0x0004
enum class EAndroidAudio : uint8
{
	Default                                  = 0,
	OGG                                      = 1,
	ADPCM                                    = 2,
	EAndroidAudio_MAX                        = 3,
};

// Enum AndroidRuntimeSettings.EAndroidGraphicsDebugger
// NumValues: 0x0004
enum class EAndroidGraphicsDebugger : uint8
{
	None                                     = 0,
	Mali                                     = 1,
	Adreno                                   = 2,
	EAndroidGraphicsDebugger_MAX             = 3,
};

// ScriptStruct AndroidRuntimeSettings.GooglePlayAchievementMapping
// 0x0020 (0x0020 - 0x0000)
struct FGooglePlayAchievementMapping final
{
public:
	class FString                                 Name;                                              // 0x0000(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AchievementID;                                     // 0x0010(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FGooglePlayAchievementMapping) == 0x000008, "Wrong alignment on FGooglePlayAchievementMapping");
static_assert(sizeof(FGooglePlayAchievementMapping) == 0x000020, "Wrong size on FGooglePlayAchievementMapping");
static_assert(offsetof(FGooglePlayAchievementMapping, Name) == 0x000000, "Member 'FGooglePlayAchievementMapping::Name' has a wrong offset!");
static_assert(offsetof(FGooglePlayAchievementMapping, AchievementID) == 0x000010, "Member 'FGooglePlayAchievementMapping::AchievementID' has a wrong offset!");

// ScriptStruct AndroidRuntimeSettings.GooglePlayLeaderboardMapping
// 0x0020 (0x0020 - 0x0000)
struct FGooglePlayLeaderboardMapping final
{
public:
	class FString                                 Name;                                              // 0x0000(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LeaderboardID;                                     // 0x0010(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FGooglePlayLeaderboardMapping) == 0x000008, "Wrong alignment on FGooglePlayLeaderboardMapping");
static_assert(sizeof(FGooglePlayLeaderboardMapping) == 0x000020, "Wrong size on FGooglePlayLeaderboardMapping");
static_assert(offsetof(FGooglePlayLeaderboardMapping, Name) == 0x000000, "Member 'FGooglePlayLeaderboardMapping::Name' has a wrong offset!");
static_assert(offsetof(FGooglePlayLeaderboardMapping, LeaderboardID) == 0x000010, "Member 'FGooglePlayLeaderboardMapping::LeaderboardID' has a wrong offset!");

}

