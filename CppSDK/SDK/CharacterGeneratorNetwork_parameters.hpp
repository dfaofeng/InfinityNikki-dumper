#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharacterGeneratorNetwork

#include "Basic.hpp"

#include "CharacterGeneratorNetwork_structs.hpp"


namespace SDK::Params
{

// Function CharacterGeneratorNetwork.CharacterNetworkHelper.ConvertPixelArrayToTexture2D
// 0x0018 (0x0018 - 0x0000)
struct CharacterNetworkHelper_ConvertPixelArrayToTexture2D final
{
public:
	TArray<struct FPicturePixel>                  Picture;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class UTexture2D*                             ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterNetworkHelper_ConvertPixelArrayToTexture2D) == 0x000008, "Wrong alignment on CharacterNetworkHelper_ConvertPixelArrayToTexture2D");
static_assert(sizeof(CharacterNetworkHelper_ConvertPixelArrayToTexture2D) == 0x000018, "Wrong size on CharacterNetworkHelper_ConvertPixelArrayToTexture2D");
static_assert(offsetof(CharacterNetworkHelper_ConvertPixelArrayToTexture2D, Picture) == 0x000000, "Member 'CharacterNetworkHelper_ConvertPixelArrayToTexture2D::Picture' has a wrong offset!");
static_assert(offsetof(CharacterNetworkHelper_ConvertPixelArrayToTexture2D, ReturnValue) == 0x000010, "Member 'CharacterNetworkHelper_ConvertPixelArrayToTexture2D::ReturnValue' has a wrong offset!");

// Function CharacterGeneratorNetwork.CharacterNetworkHelper.ConvertTexture2DToPixelArray
// 0x0018 (0x0018 - 0x0000)
struct CharacterNetworkHelper_ConvertTexture2DToPixelArray final
{
public:
	class UTexture2D*                             Texture;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPicturePixel>                  ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterNetworkHelper_ConvertTexture2DToPixelArray) == 0x000008, "Wrong alignment on CharacterNetworkHelper_ConvertTexture2DToPixelArray");
static_assert(sizeof(CharacterNetworkHelper_ConvertTexture2DToPixelArray) == 0x000018, "Wrong size on CharacterNetworkHelper_ConvertTexture2DToPixelArray");
static_assert(offsetof(CharacterNetworkHelper_ConvertTexture2DToPixelArray, Texture) == 0x000000, "Member 'CharacterNetworkHelper_ConvertTexture2DToPixelArray::Texture' has a wrong offset!");
static_assert(offsetof(CharacterNetworkHelper_ConvertTexture2DToPixelArray, ReturnValue) == 0x000008, "Member 'CharacterNetworkHelper_ConvertTexture2DToPixelArray::ReturnValue' has a wrong offset!");

// Function CharacterGeneratorNetwork.CharacterNetworkHelper.LoadImageAsTexture2D
// 0x0018 (0x0018 - 0x0000)
struct CharacterNetworkHelper_LoadImageAsTexture2D final
{
public:
	class FString                                 ImagePath;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterNetworkHelper_LoadImageAsTexture2D) == 0x000008, "Wrong alignment on CharacterNetworkHelper_LoadImageAsTexture2D");
static_assert(sizeof(CharacterNetworkHelper_LoadImageAsTexture2D) == 0x000018, "Wrong size on CharacterNetworkHelper_LoadImageAsTexture2D");
static_assert(offsetof(CharacterNetworkHelper_LoadImageAsTexture2D, ImagePath) == 0x000000, "Member 'CharacterNetworkHelper_LoadImageAsTexture2D::ImagePath' has a wrong offset!");
static_assert(offsetof(CharacterNetworkHelper_LoadImageAsTexture2D, ReturnValue) == 0x000010, "Member 'CharacterNetworkHelper_LoadImageAsTexture2D::ReturnValue' has a wrong offset!");

// Function CharacterGeneratorNetwork.CharacterNetworkHelper.MakeHttpRequest
// 0x0030 (0x0030 - 0x0000)
struct CharacterNetworkHelper_MakeHttpRequest final
{
public:
	class FString                                 RequestLink;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RequestVerb;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RequestContent;                                    // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterNetworkHelper_MakeHttpRequest) == 0x000008, "Wrong alignment on CharacterNetworkHelper_MakeHttpRequest");
static_assert(sizeof(CharacterNetworkHelper_MakeHttpRequest) == 0x000030, "Wrong size on CharacterNetworkHelper_MakeHttpRequest");
static_assert(offsetof(CharacterNetworkHelper_MakeHttpRequest, RequestLink) == 0x000000, "Member 'CharacterNetworkHelper_MakeHttpRequest::RequestLink' has a wrong offset!");
static_assert(offsetof(CharacterNetworkHelper_MakeHttpRequest, RequestVerb) == 0x000010, "Member 'CharacterNetworkHelper_MakeHttpRequest::RequestVerb' has a wrong offset!");
static_assert(offsetof(CharacterNetworkHelper_MakeHttpRequest, RequestContent) == 0x000020, "Member 'CharacterNetworkHelper_MakeHttpRequest::RequestContent' has a wrong offset!");

// Function CharacterGeneratorNetwork.CharacterNetworkHelper.OnHttpResponseFailure
// 0x0018 (0x0018 - 0x0000)
struct CharacterNetworkHelper_OnHttpResponseFailure final
{
public:
	class FString                                 Content;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResponseCode;                                      // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CharacterNetworkHelper_OnHttpResponseFailure) == 0x000008, "Wrong alignment on CharacterNetworkHelper_OnHttpResponseFailure");
static_assert(sizeof(CharacterNetworkHelper_OnHttpResponseFailure) == 0x000018, "Wrong size on CharacterNetworkHelper_OnHttpResponseFailure");
static_assert(offsetof(CharacterNetworkHelper_OnHttpResponseFailure, Content) == 0x000000, "Member 'CharacterNetworkHelper_OnHttpResponseFailure::Content' has a wrong offset!");
static_assert(offsetof(CharacterNetworkHelper_OnHttpResponseFailure, ResponseCode) == 0x000010, "Member 'CharacterNetworkHelper_OnHttpResponseFailure::ResponseCode' has a wrong offset!");

// Function CharacterGeneratorNetwork.CharacterNetworkHelper.OnHttpResponseSuccess
// 0x0018 (0x0018 - 0x0000)
struct CharacterNetworkHelper_OnHttpResponseSuccess final
{
public:
	class FString                                 Content;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResponseCode;                                      // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CharacterNetworkHelper_OnHttpResponseSuccess) == 0x000008, "Wrong alignment on CharacterNetworkHelper_OnHttpResponseSuccess");
static_assert(sizeof(CharacterNetworkHelper_OnHttpResponseSuccess) == 0x000018, "Wrong size on CharacterNetworkHelper_OnHttpResponseSuccess");
static_assert(offsetof(CharacterNetworkHelper_OnHttpResponseSuccess, Content) == 0x000000, "Member 'CharacterNetworkHelper_OnHttpResponseSuccess::Content' has a wrong offset!");
static_assert(offsetof(CharacterNetworkHelper_OnHttpResponseSuccess, ResponseCode) == 0x000010, "Member 'CharacterNetworkHelper_OnHttpResponseSuccess::ResponseCode' has a wrong offset!");

// Function CharacterGeneratorNetwork.CharacterNetworkHelper.SaveTextureAsAsset
// 0x0030 (0x0030 - 0x0000)
struct CharacterNetworkHelper_SaveTextureAsAsset final
{
public:
	class UTexture2D*                             Texture;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AssetPath;                                         // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AssetName;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CharacterNetworkHelper_SaveTextureAsAsset) == 0x000008, "Wrong alignment on CharacterNetworkHelper_SaveTextureAsAsset");
static_assert(sizeof(CharacterNetworkHelper_SaveTextureAsAsset) == 0x000030, "Wrong size on CharacterNetworkHelper_SaveTextureAsAsset");
static_assert(offsetof(CharacterNetworkHelper_SaveTextureAsAsset, Texture) == 0x000000, "Member 'CharacterNetworkHelper_SaveTextureAsAsset::Texture' has a wrong offset!");
static_assert(offsetof(CharacterNetworkHelper_SaveTextureAsAsset, AssetPath) == 0x000008, "Member 'CharacterNetworkHelper_SaveTextureAsAsset::AssetPath' has a wrong offset!");
static_assert(offsetof(CharacterNetworkHelper_SaveTextureAsAsset, AssetName) == 0x000018, "Member 'CharacterNetworkHelper_SaveTextureAsAsset::AssetName' has a wrong offset!");
static_assert(offsetof(CharacterNetworkHelper_SaveTextureAsAsset, ReturnValue) == 0x000028, "Member 'CharacterNetworkHelper_SaveTextureAsAsset::ReturnValue' has a wrong offset!");

}

