#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GamePadTrigger

#include "Basic.hpp"

#include "GamePadTrigger_classes.hpp"
#include "GamePadTrigger_parameters.hpp"


namespace SDK
{

// Function GamePadTrigger.GamePadTriggerBlueprintLibrary.ConvParam_FeedbackToPad
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGamePadTriggerEffectFeedbackParam&InFeedbackParam                                        (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FGamePadTriggerEffectParams      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGamePadTriggerEffectParams UGamePadTriggerBlueprintLibrary::ConvParam_FeedbackToPad(const struct FGamePadTriggerEffectFeedbackParam& InFeedbackParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GamePadTriggerBlueprintLibrary", "ConvParam_FeedbackToPad");

	Params::GamePadTriggerBlueprintLibrary_ConvParam_FeedbackToPad Parms{};

	Parms.InFeedbackParam = std::move(InFeedbackParam);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GamePadTrigger.GamePadTriggerBlueprintLibrary.ConvParam_MultiPosFeedbackToPad
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGamePadTriggerEffectMultiPositionFeedbackParam&InMultiPosFeedbackParam                                (Parm, NativeAccessSpecifierPublic)
// struct FGamePadTriggerEffectParams      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGamePadTriggerEffectParams UGamePadTriggerBlueprintLibrary::ConvParam_MultiPosFeedbackToPad(const struct FGamePadTriggerEffectMultiPositionFeedbackParam& InMultiPosFeedbackParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GamePadTriggerBlueprintLibrary", "ConvParam_MultiPosFeedbackToPad");

	Params::GamePadTriggerBlueprintLibrary_ConvParam_MultiPosFeedbackToPad Parms{};

	Parms.InMultiPosFeedbackParam = std::move(InMultiPosFeedbackParam);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GamePadTrigger.GamePadTriggerBlueprintLibrary.ConvParam_MultiPosVibrationToPad
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGamePadTriggerEffectMultiPositionVibrationParam&InMultiPosVibrationParam                               (Parm, NativeAccessSpecifierPublic)
// struct FGamePadTriggerEffectParams      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGamePadTriggerEffectParams UGamePadTriggerBlueprintLibrary::ConvParam_MultiPosVibrationToPad(const struct FGamePadTriggerEffectMultiPositionVibrationParam& InMultiPosVibrationParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GamePadTriggerBlueprintLibrary", "ConvParam_MultiPosVibrationToPad");

	Params::GamePadTriggerBlueprintLibrary_ConvParam_MultiPosVibrationToPad Parms{};

	Parms.InMultiPosVibrationParam = std::move(InMultiPosVibrationParam);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GamePadTrigger.GamePadTriggerBlueprintLibrary.ConvParam_OffToPad
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGamePadTriggerEffectOffParam&InOffParam                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FGamePadTriggerEffectParams      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGamePadTriggerEffectParams UGamePadTriggerBlueprintLibrary::ConvParam_OffToPad(const struct FGamePadTriggerEffectOffParam& InOffParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GamePadTriggerBlueprintLibrary", "ConvParam_OffToPad");

	Params::GamePadTriggerBlueprintLibrary_ConvParam_OffToPad Parms{};

	Parms.InOffParam = std::move(InOffParam);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GamePadTrigger.GamePadTriggerBlueprintLibrary.ConvParam_SlopeFeedbackToPad
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGamePadTriggerEffectSlopeFeedbackParam&InSlopeFeedbackParam                                   (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FGamePadTriggerEffectParams      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGamePadTriggerEffectParams UGamePadTriggerBlueprintLibrary::ConvParam_SlopeFeedbackToPad(const struct FGamePadTriggerEffectSlopeFeedbackParam& InSlopeFeedbackParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GamePadTriggerBlueprintLibrary", "ConvParam_SlopeFeedbackToPad");

	Params::GamePadTriggerBlueprintLibrary_ConvParam_SlopeFeedbackToPad Parms{};

	Parms.InSlopeFeedbackParam = std::move(InSlopeFeedbackParam);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GamePadTrigger.GamePadTriggerBlueprintLibrary.ConvParam_VibrationToPad
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGamePadTriggerEffectVibrationParam&InVibrationParam                                       (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FGamePadTriggerEffectParams      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGamePadTriggerEffectParams UGamePadTriggerBlueprintLibrary::ConvParam_VibrationToPad(const struct FGamePadTriggerEffectVibrationParam& InVibrationParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GamePadTriggerBlueprintLibrary", "ConvParam_VibrationToPad");

	Params::GamePadTriggerBlueprintLibrary_ConvParam_VibrationToPad Parms{};

	Parms.InVibrationParam = std::move(InVibrationParam);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GamePadTrigger.GamePadTriggerBlueprintLibrary.ConvParam_WeaponToPad
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGamePadTriggerEffectWeaponParam&InWeaponParam                                          (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FGamePadTriggerEffectParams      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGamePadTriggerEffectParams UGamePadTriggerBlueprintLibrary::ConvParam_WeaponToPad(const struct FGamePadTriggerEffectWeaponParam& InWeaponParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GamePadTriggerBlueprintLibrary", "ConvParam_WeaponToPad");

	Params::GamePadTriggerBlueprintLibrary_ConvParam_WeaponToPad Parms{};

	Parms.InWeaponParam = std::move(InWeaponParam);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GamePadTrigger.GamePadTriggerBlueprintLibrary.SetGamePadTriggerEffect
// (Final, BlueprintCosmetic, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EGamePadTriggerIndex                    InTriggerIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGamePadTriggerEffectMode               InMode                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGamePadTriggerEffectParams&InParams                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGamePadTriggerBlueprintLibrary::SetGamePadTriggerEffect(EGamePadTriggerIndex InTriggerIndex, EGamePadTriggerEffectMode InMode, const struct FGamePadTriggerEffectParams& InParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GamePadTriggerBlueprintLibrary", "SetGamePadTriggerEffect");

	Params::GamePadTriggerBlueprintLibrary_SetGamePadTriggerEffect Parms{};

	Parms.InTriggerIndex = InTriggerIndex;
	Parms.InMode = InMode;
	Parms.InParams = std::move(InParams);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

