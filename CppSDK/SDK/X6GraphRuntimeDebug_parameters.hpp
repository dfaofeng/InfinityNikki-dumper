#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: X6GraphRuntimeDebug

#include "Basic.hpp"


namespace SDK::Params
{

// Function X6GraphRuntimeDebug.X6GraphDebugNetSocketUtil.IsDebuggerConnected
// 0x0001 (0x0001 - 0x0000)
struct X6GraphDebugNetSocketUtil_IsDebuggerConnected final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(X6GraphDebugNetSocketUtil_IsDebuggerConnected) == 0x000001, "Wrong alignment on X6GraphDebugNetSocketUtil_IsDebuggerConnected");
static_assert(sizeof(X6GraphDebugNetSocketUtil_IsDebuggerConnected) == 0x000001, "Wrong size on X6GraphDebugNetSocketUtil_IsDebuggerConnected");
static_assert(offsetof(X6GraphDebugNetSocketUtil_IsDebuggerConnected, ReturnValue) == 0x000000, "Member 'X6GraphDebugNetSocketUtil_IsDebuggerConnected::ReturnValue' has a wrong offset!");

// Function X6GraphRuntimeDebug.X6GraphDebugNetSocketUtil.OnReciveDebuggerMsg
// 0x0018 (0x0018 - 0x0000)
struct X6GraphDebugNetSocketUtil_OnReciveDebuggerMsg final
{
public:
	int32                                         MsgType;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 MsgContent;                                        // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(X6GraphDebugNetSocketUtil_OnReciveDebuggerMsg) == 0x000008, "Wrong alignment on X6GraphDebugNetSocketUtil_OnReciveDebuggerMsg");
static_assert(sizeof(X6GraphDebugNetSocketUtil_OnReciveDebuggerMsg) == 0x000018, "Wrong size on X6GraphDebugNetSocketUtil_OnReciveDebuggerMsg");
static_assert(offsetof(X6GraphDebugNetSocketUtil_OnReciveDebuggerMsg, MsgType) == 0x000000, "Member 'X6GraphDebugNetSocketUtil_OnReciveDebuggerMsg::MsgType' has a wrong offset!");
static_assert(offsetof(X6GraphDebugNetSocketUtil_OnReciveDebuggerMsg, MsgContent) == 0x000008, "Member 'X6GraphDebugNetSocketUtil_OnReciveDebuggerMsg::MsgContent' has a wrong offset!");

// Function X6GraphRuntimeDebug.X6GraphDebugNetSocketUtil.SendMessageBytesToDebugger
// 0x0010 (0x0010 - 0x0000)
struct X6GraphDebugNetSocketUtil_SendMessageBytesToDebugger final
{
public:
	TArray<uint8>                                 MsgData;                                           // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(X6GraphDebugNetSocketUtil_SendMessageBytesToDebugger) == 0x000008, "Wrong alignment on X6GraphDebugNetSocketUtil_SendMessageBytesToDebugger");
static_assert(sizeof(X6GraphDebugNetSocketUtil_SendMessageBytesToDebugger) == 0x000010, "Wrong size on X6GraphDebugNetSocketUtil_SendMessageBytesToDebugger");
static_assert(offsetof(X6GraphDebugNetSocketUtil_SendMessageBytesToDebugger, MsgData) == 0x000000, "Member 'X6GraphDebugNetSocketUtil_SendMessageBytesToDebugger::MsgData' has a wrong offset!");

// Function X6GraphRuntimeDebug.X6GraphDebugNetSocketUtil.SendMessageToDebugger
// 0x0010 (0x0010 - 0x0000)
struct X6GraphDebugNetSocketUtil_SendMessageToDebugger final
{
public:
	class FString                                 MsgData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(X6GraphDebugNetSocketUtil_SendMessageToDebugger) == 0x000008, "Wrong alignment on X6GraphDebugNetSocketUtil_SendMessageToDebugger");
static_assert(sizeof(X6GraphDebugNetSocketUtil_SendMessageToDebugger) == 0x000010, "Wrong size on X6GraphDebugNetSocketUtil_SendMessageToDebugger");
static_assert(offsetof(X6GraphDebugNetSocketUtil_SendMessageToDebugger, MsgData) == 0x000000, "Member 'X6GraphDebugNetSocketUtil_SendMessageToDebugger::MsgData' has a wrong offset!");

// Function X6GraphRuntimeDebug.X6GraphRuntimeDebugBPLibrary.Conv_BytesToString
// 0x0020 (0x0020 - 0x0000)
struct X6GraphRuntimeDebugBPLibrary_Conv_BytesToString final
{
public:
	TArray<uint8>                                 Bytes;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(X6GraphRuntimeDebugBPLibrary_Conv_BytesToString) == 0x000008, "Wrong alignment on X6GraphRuntimeDebugBPLibrary_Conv_BytesToString");
static_assert(sizeof(X6GraphRuntimeDebugBPLibrary_Conv_BytesToString) == 0x000020, "Wrong size on X6GraphRuntimeDebugBPLibrary_Conv_BytesToString");
static_assert(offsetof(X6GraphRuntimeDebugBPLibrary_Conv_BytesToString, Bytes) == 0x000000, "Member 'X6GraphRuntimeDebugBPLibrary_Conv_BytesToString::Bytes' has a wrong offset!");
static_assert(offsetof(X6GraphRuntimeDebugBPLibrary_Conv_BytesToString, ReturnValue) == 0x000010, "Member 'X6GraphRuntimeDebugBPLibrary_Conv_BytesToString::ReturnValue' has a wrong offset!");

// Function X6GraphRuntimeDebug.X6GraphRuntimeDebugBPLibrary.Conv_StringToBytes
// 0x0020 (0x0020 - 0x0000)
struct X6GraphRuntimeDebugBPLibrary_Conv_StringToBytes final
{
public:
	class FString                                 InStr;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(X6GraphRuntimeDebugBPLibrary_Conv_StringToBytes) == 0x000008, "Wrong alignment on X6GraphRuntimeDebugBPLibrary_Conv_StringToBytes");
static_assert(sizeof(X6GraphRuntimeDebugBPLibrary_Conv_StringToBytes) == 0x000020, "Wrong size on X6GraphRuntimeDebugBPLibrary_Conv_StringToBytes");
static_assert(offsetof(X6GraphRuntimeDebugBPLibrary_Conv_StringToBytes, InStr) == 0x000000, "Member 'X6GraphRuntimeDebugBPLibrary_Conv_StringToBytes::InStr' has a wrong offset!");
static_assert(offsetof(X6GraphRuntimeDebugBPLibrary_Conv_StringToBytes, ReturnValue) == 0x000010, "Member 'X6GraphRuntimeDebugBPLibrary_Conv_StringToBytes::ReturnValue' has a wrong offset!");

// Function X6GraphRuntimeDebug.X6GraphRuntimeDebugBPLibrary.ConvInt_HToN
// 0x0018 (0x0018 - 0x0000)
struct X6GraphRuntimeDebugBPLibrary_ConvInt_HToN final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<uint8>                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(X6GraphRuntimeDebugBPLibrary_ConvInt_HToN) == 0x000008, "Wrong alignment on X6GraphRuntimeDebugBPLibrary_ConvInt_HToN");
static_assert(sizeof(X6GraphRuntimeDebugBPLibrary_ConvInt_HToN) == 0x000018, "Wrong size on X6GraphRuntimeDebugBPLibrary_ConvInt_HToN");
static_assert(offsetof(X6GraphRuntimeDebugBPLibrary_ConvInt_HToN, Value) == 0x000000, "Member 'X6GraphRuntimeDebugBPLibrary_ConvInt_HToN::Value' has a wrong offset!");
static_assert(offsetof(X6GraphRuntimeDebugBPLibrary_ConvInt_HToN, ReturnValue) == 0x000008, "Member 'X6GraphRuntimeDebugBPLibrary_ConvInt_HToN::ReturnValue' has a wrong offset!");

// Function X6GraphRuntimeDebug.X6GraphRuntimeDebugBPLibrary.ConvInt_NToH
// 0x0018 (0x0018 - 0x0000)
struct X6GraphRuntimeDebugBPLibrary_ConvInt_NToH final
{
public:
	TArray<uint8>                                 Bytes;                                             // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(X6GraphRuntimeDebugBPLibrary_ConvInt_NToH) == 0x000008, "Wrong alignment on X6GraphRuntimeDebugBPLibrary_ConvInt_NToH");
static_assert(sizeof(X6GraphRuntimeDebugBPLibrary_ConvInt_NToH) == 0x000018, "Wrong size on X6GraphRuntimeDebugBPLibrary_ConvInt_NToH");
static_assert(offsetof(X6GraphRuntimeDebugBPLibrary_ConvInt_NToH, Bytes) == 0x000000, "Member 'X6GraphRuntimeDebugBPLibrary_ConvInt_NToH::Bytes' has a wrong offset!");
static_assert(offsetof(X6GraphRuntimeDebugBPLibrary_ConvInt_NToH, ReturnValue) == 0x000010, "Member 'X6GraphRuntimeDebugBPLibrary_ConvInt_NToH::ReturnValue' has a wrong offset!");

// Function X6GraphRuntimeDebug.X6GraphRuntimeDebugBPLibrary.X6GraphRuntimeDebugSampleFunction
// 0x0008 (0x0008 - 0x0000)
struct X6GraphRuntimeDebugBPLibrary_X6GraphRuntimeDebugSampleFunction final
{
public:
	float                                         Param;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(X6GraphRuntimeDebugBPLibrary_X6GraphRuntimeDebugSampleFunction) == 0x000004, "Wrong alignment on X6GraphRuntimeDebugBPLibrary_X6GraphRuntimeDebugSampleFunction");
static_assert(sizeof(X6GraphRuntimeDebugBPLibrary_X6GraphRuntimeDebugSampleFunction) == 0x000008, "Wrong size on X6GraphRuntimeDebugBPLibrary_X6GraphRuntimeDebugSampleFunction");
static_assert(offsetof(X6GraphRuntimeDebugBPLibrary_X6GraphRuntimeDebugSampleFunction, Param) == 0x000000, "Member 'X6GraphRuntimeDebugBPLibrary_X6GraphRuntimeDebugSampleFunction::Param' has a wrong offset!");
static_assert(offsetof(X6GraphRuntimeDebugBPLibrary_X6GraphRuntimeDebugSampleFunction, ReturnValue) == 0x000004, "Member 'X6GraphRuntimeDebugBPLibrary_X6GraphRuntimeDebugSampleFunction::ReturnValue' has a wrong offset!");

}

