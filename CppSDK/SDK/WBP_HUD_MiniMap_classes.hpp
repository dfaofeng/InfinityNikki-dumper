#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HUD_MiniMap

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_HUD_MiniMap.WBP_HUD_MiniMap_C
// 0x00A8 (0x0398 - 0x02F0)
class UWBP_HUD_MiniMap_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FadeIn;                                            // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCustomShapeButton*                     Button_TouchArea;                                  // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_0;                                     // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Kuang;                                       // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Panel_OutObj;                                      // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           RetainerBox_0;                                     // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_MiniMap_C*                         WBP_MiniMap;                                       // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FString                                 ReturnValue_0;                                     // 0x0338(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0348(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 ReturnValue_1;                                     // 0x0358(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    FoundWidgets;                                      // 0x0368(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FVector2D                              bp_viewPortSize;                                   // 0x0378(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              bp_widgetviewPortSize;                             // 0x0388(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BeginUpdateMapScale();
	void BP_TraverseAllWidgets();
	void EndUpdateMapScale();
	void ExecuteUbergraph_WBP_HUD_MiniMap(int32 EntryPoint);
	void OnFadeInBegin();
	void OnFadeInEnd();
	void ReportException(const class FString& NewParam);
	void SequenceEvent__ENTRYPOINTWBP_HUD_MiniMap();
	void SequenceEvent__ENTRYPOINTWBP_HUD_MiniMap_0();
	void UpdateWidget(class UWidget* 目标);
	void UpteWidgetSize(class UWidget* NewParam);

	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_HUD_MiniMap_C">();
	}
	static class UWBP_HUD_MiniMap_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_HUD_MiniMap_C>();
	}
};
static_assert(alignof(UWBP_HUD_MiniMap_C) == 0x000008, "Wrong alignment on UWBP_HUD_MiniMap_C");
static_assert(sizeof(UWBP_HUD_MiniMap_C) == 0x000398, "Wrong size on UWBP_HUD_MiniMap_C");
static_assert(offsetof(UWBP_HUD_MiniMap_C, UberGraphFrame) == 0x0002F0, "Member 'UWBP_HUD_MiniMap_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_MiniMap_C, FadeIn) == 0x0002F8, "Member 'UWBP_HUD_MiniMap_C::FadeIn' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_MiniMap_C, Button_TouchArea) == 0x000300, "Member 'UWBP_HUD_MiniMap_C::Button_TouchArea' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_MiniMap_C, CanvasPanel_0) == 0x000308, "Member 'UWBP_HUD_MiniMap_C::CanvasPanel_0' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_MiniMap_C, Image) == 0x000310, "Member 'UWBP_HUD_MiniMap_C::Image' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_MiniMap_C, Image_Kuang) == 0x000318, "Member 'UWBP_HUD_MiniMap_C::Image_Kuang' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_MiniMap_C, Panel_OutObj) == 0x000320, "Member 'UWBP_HUD_MiniMap_C::Panel_OutObj' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_MiniMap_C, RetainerBox_0) == 0x000328, "Member 'UWBP_HUD_MiniMap_C::RetainerBox_0' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_MiniMap_C, WBP_MiniMap) == 0x000330, "Member 'UWBP_HUD_MiniMap_C::WBP_MiniMap' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_MiniMap_C, ReturnValue_0) == 0x000338, "Member 'UWBP_HUD_MiniMap_C::ReturnValue_0' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_MiniMap_C, ReturnValue) == 0x000348, "Member 'UWBP_HUD_MiniMap_C::ReturnValue' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_MiniMap_C, ReturnValue_1) == 0x000358, "Member 'UWBP_HUD_MiniMap_C::ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_MiniMap_C, FoundWidgets) == 0x000368, "Member 'UWBP_HUD_MiniMap_C::FoundWidgets' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_MiniMap_C, bp_viewPortSize) == 0x000378, "Member 'UWBP_HUD_MiniMap_C::bp_viewPortSize' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_MiniMap_C, bp_widgetviewPortSize) == 0x000388, "Member 'UWBP_HUD_MiniMap_C::bp_widgetviewPortSize' has a wrong offset!");

}

