#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FSM_QuadrupedAnimalReaction

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "EQuadrupedAnimalReactionState_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SMSystem_structs.hpp"


namespace SDK::Params
{

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.UpdateTurnByMontage
// 0x0230 (0x0230 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CurrentTurnAnim;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         OldMontagePosition;                                // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayLength_ReturnValue;                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      K2Node_DynamicCast_AsAnim_Sequence_Base;           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_ExtractRootMotionFromAnimation_ReturnValue; // 0x0050(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Multiply_RotatorFloat_ReturnValue;        // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_AddActorWorldRotation_SweepHitResult;  // 0x0110(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_FClamp_Max_ImplicitCast;                  // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Min_ImplicitCast;                  // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_RotatorFloat_B_ImplicitCast;     // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ExtractRootMotionFromAnimation_EndTime_ImplicitCast; // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_OldMontagePosition_ImplicitCast; // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage) == 0x000010, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage) == 0x000230, "Wrong size on FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage, DeltaTime) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage::DeltaTime' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage, CurrentTurnAnim) == 0x000008, "Member 'FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage::CurrentTurnAnim' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage, OldMontagePosition) == 0x000010, "Member 'FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage::OldMontagePosition' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage, CallFunc_GetPlayLength_ReturnValue) == 0x000014, "Member 'FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage::CallFunc_GetPlayLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000020, "Member 'FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage, K2Node_DynamicCast_AsAnim_Sequence_Base) == 0x000028, "Member 'FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage::K2Node_DynamicCast_AsAnim_Sequence_Base' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000038, "Member 'FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage, CallFunc_FClamp_ReturnValue) == 0x000040, "Member 'FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage, CallFunc_ExtractRootMotionFromAnimation_ReturnValue) == 0x000050, "Member 'FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage::CallFunc_ExtractRootMotionFromAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage, CallFunc_BreakTransform_Location) == 0x0000B0, "Member 'FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage, CallFunc_BreakTransform_Rotation) == 0x0000C8, "Member 'FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage, CallFunc_BreakTransform_Scale) == 0x0000E0, "Member 'FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage, CallFunc_Multiply_RotatorFloat_ReturnValue) == 0x0000F8, "Member 'FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage::CallFunc_Multiply_RotatorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage, CallFunc_K2_AddActorWorldRotation_SweepHitResult) == 0x000110, "Member 'FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage::CallFunc_K2_AddActorWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage, CallFunc_FClamp_Max_ImplicitCast) == 0x000208, "Member 'FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage::CallFunc_FClamp_Max_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage, CallFunc_FClamp_Min_ImplicitCast) == 0x000210, "Member 'FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage::CallFunc_FClamp_Min_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage, CallFunc_Multiply_RotatorFloat_B_ImplicitCast) == 0x000218, "Member 'FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage::CallFunc_Multiply_RotatorFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage, CallFunc_ExtractRootMotionFromAnimation_EndTime_ImplicitCast) == 0x00021C, "Member 'FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage::CallFunc_ExtractRootMotionFromAnimation_EndTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage, K2Node_VariableSet_OldMontagePosition_ImplicitCast) == 0x000220, "Member 'FSM_QuadrupedAnimalReaction_C_UpdateTurnByMontage::K2Node_VariableSet_OldMontagePosition_ImplicitCast' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.UpdateTurnByCurve
// 0x0068 (0x0068 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_UpdateTurnByCurve final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_UpdateTurnByCurve) == 0x000008, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_UpdateTurnByCurve");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_UpdateTurnByCurve) == 0x000068, "Wrong size on FSM_QuadrupedAnimalReaction_C_UpdateTurnByCurve");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_UpdateTurnByCurve, DeltaTime) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_UpdateTurnByCurve::DeltaTime' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_UpdateTurnByCurve, CallFunc_GetFloatValue_ReturnValue) == 0x000008, "Member 'FSM_QuadrupedAnimalReaction_C_UpdateTurnByCurve::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_UpdateTurnByCurve, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'FSM_QuadrupedAnimalReaction_C_UpdateTurnByCurve::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_UpdateTurnByCurve, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000018, "Member 'FSM_QuadrupedAnimalReaction_C_UpdateTurnByCurve::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_UpdateTurnByCurve, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'FSM_QuadrupedAnimalReaction_C_UpdateTurnByCurve::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_UpdateTurnByCurve, CallFunc_MakeRotator_ReturnValue) == 0x000028, "Member 'FSM_QuadrupedAnimalReaction_C_UpdateTurnByCurve::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_UpdateTurnByCurve, CallFunc_GetTimeRange_MinTime) == 0x000040, "Member 'FSM_QuadrupedAnimalReaction_C_UpdateTurnByCurve::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_UpdateTurnByCurve, CallFunc_GetTimeRange_MaxTime) == 0x000044, "Member 'FSM_QuadrupedAnimalReaction_C_UpdateTurnByCurve::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_UpdateTurnByCurve, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000048, "Member 'FSM_QuadrupedAnimalReaction_C_UpdateTurnByCurve::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_UpdateTurnByCurve, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000049, "Member 'FSM_QuadrupedAnimalReaction_C_UpdateTurnByCurve::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_UpdateTurnByCurve, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x00004C, "Member 'FSM_QuadrupedAnimalReaction_C_UpdateTurnByCurve::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_UpdateTurnByCurve, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000050, "Member 'FSM_QuadrupedAnimalReaction_C_UpdateTurnByCurve::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_UpdateTurnByCurve, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000058, "Member 'FSM_QuadrupedAnimalReaction_C_UpdateTurnByCurve::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_UpdateTurnByCurve, CallFunc_Greater_DoubleDouble_B_ImplicitCast) == 0x000060, "Member 'FSM_QuadrupedAnimalReaction_C_UpdateTurnByCurve::CallFunc_Greater_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.TryStartCuriousTurn
// 0x0140 (0x0140 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn final
{
public:
	bool                                          bTurnStarted;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TurnAngle_local;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimSequenceBase>       CallFunc_BP_GetGestureSoftRef_GestureSoftRef;      // 0x0020(0x0028)(HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_2;            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimSequenceBase>       CallFunc_BP_GetGestureSoftRef_GestureSoftRef_1;    // 0x0058(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_1; // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimSequenceBase>       CallFunc_BP_GetGestureSoftRef_GestureSoftRef_2;    // 0x0088(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_2; // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimSequenceBase>       CallFunc_BP_GetGestureSoftRef_GestureSoftRef_3;    // 0x00B8(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_3; // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_3;            // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_112[0x6];                                      // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetLookAtTargetTurnAngle_TurnAngle;       // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn) == 0x000008, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn) == 0x000140, "Wrong size on FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn, bTurnStarted) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn::bTurnStarted' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn, TurnAngle_local) == 0x000008, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn::TurnAngle_local' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn, CallFunc_GetAnimInstance_ReturnValue) == 0x000010, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000018, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn, CallFunc_BP_GetGestureSoftRef_GestureSoftRef) == 0x000020, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn::CallFunc_BP_GetGestureSoftRef_GestureSoftRef' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn, CallFunc_GetAnimInstance_ReturnValue_2) == 0x000048, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn::CallFunc_GetAnimInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000050, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn, CallFunc_BP_GetGestureSoftRef_GestureSoftRef_1) == 0x000058, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn::CallFunc_BP_GetGestureSoftRef_GestureSoftRef_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn, CallFunc_IsValidSoftObjectReference_ReturnValue_1) == 0x000080, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn::CallFunc_IsValidSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn, CallFunc_BP_GetGestureSoftRef_GestureSoftRef_2) == 0x000088, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn::CallFunc_BP_GetGestureSoftRef_GestureSoftRef_2' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn, CallFunc_IsValidSoftObjectReference_ReturnValue_2) == 0x0000B0, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn::CallFunc_IsValidSoftObjectReference_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn, CallFunc_BP_GetGestureSoftRef_GestureSoftRef_3) == 0x0000B8, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn::CallFunc_BP_GetGestureSoftRef_GestureSoftRef_3' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn, CallFunc_IsValidSoftObjectReference_ReturnValue_3) == 0x0000E0, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn::CallFunc_IsValidSoftObjectReference_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000E8, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000F0, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0000F8, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000100, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn, CallFunc_GetAnimInstance_ReturnValue_3) == 0x000108, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn::CallFunc_GetAnimInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000110, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000111, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000118, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000120, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn, CallFunc_GetLookAtTargetTurnAngle_TurnAngle) == 0x000128, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn::CallFunc_GetLookAtTargetTurnAngle_TurnAngle' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000130, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000138, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartCuriousTurn::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.TryStartAlertTurn
// 0x0120 (0x0120 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn final
{
public:
	bool                                          bTurnStarted;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TurnAngle_local;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimSequenceBase>       CallFunc_BP_GetGestureSoftRef_GestureSoftRef;      // 0x0010(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimSequenceBase>       CallFunc_BP_GetGestureSoftRef_GestureSoftRef_1;    // 0x0040(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_1; // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimSequenceBase>       CallFunc_BP_GetGestureSoftRef_GestureSoftRef_2;    // 0x0070(0x0028)(HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_2; // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimSequenceBase>       CallFunc_BP_GetGestureSoftRef_GestureSoftRef_3;    // 0x00A8(0x0028)(HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_3; // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetLookAtTargetTurnAngle_TurnAngle;       // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn) == 0x000008, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn) == 0x000120, "Wrong size on FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn, bTurnStarted) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn::bTurnStarted' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn, TurnAngle_local) == 0x000008, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn::TurnAngle_local' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn, CallFunc_BP_GetGestureSoftRef_GestureSoftRef) == 0x000010, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn::CallFunc_BP_GetGestureSoftRef_GestureSoftRef' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000038, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn, CallFunc_BP_GetGestureSoftRef_GestureSoftRef_1) == 0x000040, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn::CallFunc_BP_GetGestureSoftRef_GestureSoftRef_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn, CallFunc_IsValidSoftObjectReference_ReturnValue_1) == 0x000068, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn::CallFunc_IsValidSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn, CallFunc_BP_GetGestureSoftRef_GestureSoftRef_2) == 0x000070, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn::CallFunc_BP_GetGestureSoftRef_GestureSoftRef_2' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000098, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn, CallFunc_IsValidSoftObjectReference_ReturnValue_2) == 0x0000A0, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn::CallFunc_IsValidSoftObjectReference_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn, CallFunc_BP_GetGestureSoftRef_GestureSoftRef_3) == 0x0000A8, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn::CallFunc_BP_GetGestureSoftRef_GestureSoftRef_3' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000D0, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn, CallFunc_IsValidSoftObjectReference_ReturnValue_3) == 0x0000D8, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn::CallFunc_IsValidSoftObjectReference_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0000E0, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000E8, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0000E9, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000F0, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x0000F8, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000100, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn, CallFunc_GetLookAtTargetTurnAngle_TurnAngle) == 0x000108, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn::CallFunc_GetLookAtTargetTurnAngle_TurnAngle' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000110, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000118, "Member 'FSM_QuadrupedAnimalReaction_C_TryStartAlertTurn::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.TryFleeForReachMaxAlertDuration_OnTurnFinish
// 0x0001 (0x0001 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_TryFleeForReachMaxAlertDuration_OnTurnFinish final
{
public:
	bool                                          bTurnByCurve;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_TryFleeForReachMaxAlertDuration_OnTurnFinish) == 0x000001, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_TryFleeForReachMaxAlertDuration_OnTurnFinish");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_TryFleeForReachMaxAlertDuration_OnTurnFinish) == 0x000001, "Wrong size on FSM_QuadrupedAnimalReaction_C_TryFleeForReachMaxAlertDuration_OnTurnFinish");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryFleeForReachMaxAlertDuration_OnTurnFinish, bTurnByCurve) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_TryFleeForReachMaxAlertDuration_OnTurnFinish::bTurnByCurve' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.TryFleeForReachMaxAlertDuration_OnAnimTransitionEnd
// 0x0008 (0x0008 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_TryFleeForReachMaxAlertDuration_OnAnimTransitionEnd final
{
public:
	struct FGameplayTag                           StanceTag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_TryFleeForReachMaxAlertDuration_OnAnimTransitionEnd) == 0x000004, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_TryFleeForReachMaxAlertDuration_OnAnimTransitionEnd");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_TryFleeForReachMaxAlertDuration_OnAnimTransitionEnd) == 0x000008, "Wrong size on FSM_QuadrupedAnimalReaction_C_TryFleeForReachMaxAlertDuration_OnAnimTransitionEnd");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryFleeForReachMaxAlertDuration_OnAnimTransitionEnd, StanceTag) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_TryFleeForReachMaxAlertDuration_OnAnimTransitionEnd::StanceTag' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.TryEnterState
// 0x0004 (0x0004 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_TryEnterState final
{
public:
	EQuadrupedAnimalReactionState                 NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSuccess;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuadrupedAnimalReactionState                 CallFunc_GetCurrentState_State;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_TryEnterState) == 0x000001, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_TryEnterState");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_TryEnterState) == 0x000004, "Wrong size on FSM_QuadrupedAnimalReaction_C_TryEnterState");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryEnterState, NewState) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_TryEnterState::NewState' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryEnterState, bSuccess) == 0x000001, "Member 'FSM_QuadrupedAnimalReaction_C_TryEnterState::bSuccess' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryEnterState, CallFunc_GetCurrentState_State) == 0x000002, "Member 'FSM_QuadrupedAnimalReaction_C_TryEnterState::CallFunc_GetCurrentState_State' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TryEnterState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000003, "Member 'FSM_QuadrupedAnimalReaction_C_TryEnterState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.TaskBegin_B2F1FD674D016BAA6C715DA17E929405
// 0x0008 (0x0008 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_TaskBegin_B2F1FD674D016BAA6C715DA17E929405 final
{
public:
	class UX6TaskAsyncBase*                       Task;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_TaskBegin_B2F1FD674D016BAA6C715DA17E929405) == 0x000008, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_TaskBegin_B2F1FD674D016BAA6C715DA17E929405");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_TaskBegin_B2F1FD674D016BAA6C715DA17E929405) == 0x000008, "Wrong size on FSM_QuadrupedAnimalReaction_C_TaskBegin_B2F1FD674D016BAA6C715DA17E929405");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TaskBegin_B2F1FD674D016BAA6C715DA17E929405, Task) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_TaskBegin_B2F1FD674D016BAA6C715DA17E929405::Task' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.TaskBegin_51B4524846EAD7E8757D4D8F3326AF1B
// 0x0008 (0x0008 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_TaskBegin_51B4524846EAD7E8757D4D8F3326AF1B final
{
public:
	class UX6TaskAsyncBase*                       Task;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_TaskBegin_51B4524846EAD7E8757D4D8F3326AF1B) == 0x000008, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_TaskBegin_51B4524846EAD7E8757D4D8F3326AF1B");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_TaskBegin_51B4524846EAD7E8757D4D8F3326AF1B) == 0x000008, "Wrong size on FSM_QuadrupedAnimalReaction_C_TaskBegin_51B4524846EAD7E8757D4D8F3326AF1B");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_TaskBegin_51B4524846EAD7E8757D4D8F3326AF1B, Task) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_TaskBegin_51B4524846EAD7E8757D4D8F3326AF1B::Task' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.StartTurnCoolDown
// 0x0030 (0x0030 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_StartTurnCoolDown final
{
public:
	double                                        CoolDown;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TurnCoolDown;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_StartTurnCoolDown) == 0x000008, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_StartTurnCoolDown");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_StartTurnCoolDown) == 0x000030, "Wrong size on FSM_QuadrupedAnimalReaction_C_StartTurnCoolDown");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_StartTurnCoolDown, CoolDown) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_StartTurnCoolDown::CoolDown' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_StartTurnCoolDown, TurnCoolDown) == 0x000008, "Member 'FSM_QuadrupedAnimalReaction_C_StartTurnCoolDown::TurnCoolDown' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_StartTurnCoolDown, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'FSM_QuadrupedAnimalReaction_C_StartTurnCoolDown::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_StartTurnCoolDown, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'FSM_QuadrupedAnimalReaction_C_StartTurnCoolDown::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_StartTurnCoolDown, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000028, "Member 'FSM_QuadrupedAnimalReaction_C_StartTurnCoolDown::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_StartTurnCoolDown, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x00002C, "Member 'FSM_QuadrupedAnimalReaction_C_StartTurnCoolDown::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.StartCuriousStance
// 0x0001 (0x0001 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_StartCuriousStance final
{
public:
	bool                                          bFastTransition;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_StartCuriousStance) == 0x000001, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_StartCuriousStance");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_StartCuriousStance) == 0x000001, "Wrong size on FSM_QuadrupedAnimalReaction_C_StartCuriousStance");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_StartCuriousStance, bFastTransition) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_StartCuriousStance::bFastTransition' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.StartAlertStance
// 0x0001 (0x0001 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_StartAlertStance final
{
public:
	bool                                          bFastTransition;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_StartAlertStance) == 0x000001, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_StartAlertStance");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_StartAlertStance) == 0x000001, "Wrong size on FSM_QuadrupedAnimalReaction_C_StartAlertStance");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_StartAlertStance, bFastTransition) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_StartAlertStance::bFastTransition' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.SMGraphK2Node_StateUpdateNode_DBF695D848A31221905EBE8EEA8A25FB_Curious_EA5D754F46FCB72AEA1264B0593EA4EF
// 0x0004 (0x0004 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_SMGraphK2Node_StateUpdateNode_DBF695D848A31221905EBE8EEA8A25FB_Curious_EA5D754F46FCB72AEA1264B0593EA4EF final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_SMGraphK2Node_StateUpdateNode_DBF695D848A31221905EBE8EEA8A25FB_Curious_EA5D754F46FCB72AEA1264B0593EA4EF) == 0x000004, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_SMGraphK2Node_StateUpdateNode_DBF695D848A31221905EBE8EEA8A25FB_Curious_EA5D754F46FCB72AEA1264B0593EA4EF");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_SMGraphK2Node_StateUpdateNode_DBF695D848A31221905EBE8EEA8A25FB_Curious_EA5D754F46FCB72AEA1264B0593EA4EF) == 0x000004, "Wrong size on FSM_QuadrupedAnimalReaction_C_SMGraphK2Node_StateUpdateNode_DBF695D848A31221905EBE8EEA8A25FB_Curious_EA5D754F46FCB72AEA1264B0593EA4EF");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_SMGraphK2Node_StateUpdateNode_DBF695D848A31221905EBE8EEA8A25FB_Curious_EA5D754F46FCB72AEA1264B0593EA4EF, DeltaSeconds) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_SMGraphK2Node_StateUpdateNode_DBF695D848A31221905EBE8EEA8A25FB_Curious_EA5D754F46FCB72AEA1264B0593EA4EF::DeltaSeconds' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.SMGraphK2Node_StateUpdateNode_DBF695D848A31221905EBE8EEA8A25FB_Alert_B03E0BFC4F2299D81B147ABF5ED89194
// 0x0004 (0x0004 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_SMGraphK2Node_StateUpdateNode_DBF695D848A31221905EBE8EEA8A25FB_Alert_B03E0BFC4F2299D81B147ABF5ED89194 final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_SMGraphK2Node_StateUpdateNode_DBF695D848A31221905EBE8EEA8A25FB_Alert_B03E0BFC4F2299D81B147ABF5ED89194) == 0x000004, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_SMGraphK2Node_StateUpdateNode_DBF695D848A31221905EBE8EEA8A25FB_Alert_B03E0BFC4F2299D81B147ABF5ED89194");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_SMGraphK2Node_StateUpdateNode_DBF695D848A31221905EBE8EEA8A25FB_Alert_B03E0BFC4F2299D81B147ABF5ED89194) == 0x000004, "Wrong size on FSM_QuadrupedAnimalReaction_C_SMGraphK2Node_StateUpdateNode_DBF695D848A31221905EBE8EEA8A25FB_Alert_B03E0BFC4F2299D81B147ABF5ED89194");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_SMGraphK2Node_StateUpdateNode_DBF695D848A31221905EBE8EEA8A25FB_Alert_B03E0BFC4F2299D81B147ABF5ED89194, DeltaSeconds) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_SMGraphK2Node_StateUpdateNode_DBF695D848A31221905EBE8EEA8A25FB_Alert_B03E0BFC4F2299D81B147ABF5ED89194::DeltaSeconds' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.SetDataAsset
// 0x0008 (0x0008 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_SetDataAsset final
{
public:
	class UBP_QuadrupedAnimalReactionDefinition_C* DataAsset_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_SetDataAsset) == 0x000008, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_SetDataAsset");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_SetDataAsset) == 0x000008, "Wrong size on FSM_QuadrupedAnimalReaction_C_SetDataAsset");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_SetDataAsset, DataAsset_0) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_SetDataAsset::DataAsset_0' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.PostAIObjectInit
// 0x0003 (0x0003 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_PostAIObjectInit final
{
public:
	bool                                          CallFunc_HasStarted_ReturnValue;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuadrupedAnimalReactionState                 CallFunc_GetCurrentState_State;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_PostAIObjectInit) == 0x000001, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_PostAIObjectInit");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_PostAIObjectInit) == 0x000003, "Wrong size on FSM_QuadrupedAnimalReaction_C_PostAIObjectInit");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_PostAIObjectInit, CallFunc_HasStarted_ReturnValue) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_PostAIObjectInit::CallFunc_HasStarted_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_PostAIObjectInit, CallFunc_GetCurrentState_State) == 0x000001, "Member 'FSM_QuadrupedAnimalReaction_C_PostAIObjectInit::CallFunc_GetCurrentState_State' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_PostAIObjectInit, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'FSM_QuadrupedAnimalReaction_C_PostAIObjectInit::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OnTurnCoolDownFinished
// 0x0008 (0x0008 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_OnTurnCoolDownFinished final
{
public:
	double                                        TurnCoolDown;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_OnTurnCoolDownFinished) == 0x000008, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_OnTurnCoolDownFinished");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_OnTurnCoolDownFinished) == 0x000008, "Wrong size on FSM_QuadrupedAnimalReaction_C_OnTurnCoolDownFinished");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnTurnCoolDownFinished, TurnCoolDown) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_OnTurnCoolDownFinished::TurnCoolDown' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OnStateMachineStateChanged
// 0x0100 (0x0100 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_OnStateMachineStateChanged final
{
public:
	struct FSMStateInfo                           ToState;                                           // 0x0000(0x0080)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FSMStateInfo                           FromState;                                         // 0x0080(0x0080)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_OnStateMachineStateChanged) == 0x000008, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_OnStateMachineStateChanged");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_OnStateMachineStateChanged) == 0x000100, "Wrong size on FSM_QuadrupedAnimalReaction_C_OnStateMachineStateChanged");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnStateMachineStateChanged, ToState) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_OnStateMachineStateChanged::ToState' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnStateMachineStateChanged, FromState) == 0x000080, "Member 'FSM_QuadrupedAnimalReaction_C_OnStateMachineStateChanged::FromState' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OnStanceStop_Curious
// 0x0008 (0x0008 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_OnStanceStop_Curious final
{
public:
	struct FGameplayTag                           StanceTag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_OnStanceStop_Curious) == 0x000004, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_OnStanceStop_Curious");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_OnStanceStop_Curious) == 0x000008, "Wrong size on FSM_QuadrupedAnimalReaction_C_OnStanceStop_Curious");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnStanceStop_Curious, StanceTag) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_OnStanceStop_Curious::StanceTag' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OnStanceStop_Alert
// 0x0008 (0x0008 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_OnStanceStop_Alert final
{
public:
	struct FGameplayTag                           StanceTag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_OnStanceStop_Alert) == 0x000004, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_OnStanceStop_Alert");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_OnStanceStop_Alert) == 0x000008, "Wrong size on FSM_QuadrupedAnimalReaction_C_OnStanceStop_Alert");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnStanceStop_Alert, StanceTag) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_OnStanceStop_Alert::StanceTag' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OnLoaded_FEB03CB44437EDB029A7E590C7692481
// 0x0008 (0x0008 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_OnLoaded_FEB03CB44437EDB029A7E590C7692481 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_OnLoaded_FEB03CB44437EDB029A7E590C7692481) == 0x000008, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_OnLoaded_FEB03CB44437EDB029A7E590C7692481");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_OnLoaded_FEB03CB44437EDB029A7E590C7692481) == 0x000008, "Wrong size on FSM_QuadrupedAnimalReaction_C_OnLoaded_FEB03CB44437EDB029A7E590C7692481");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnLoaded_FEB03CB44437EDB029A7E590C7692481, Loaded) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_OnLoaded_FEB03CB44437EDB029A7E590C7692481::Loaded' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OnLoaded_A0C6596B46C0C8B8859ACEBEC7094AB5
// 0x0008 (0x0008 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_OnLoaded_A0C6596B46C0C8B8859ACEBEC7094AB5 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_OnLoaded_A0C6596B46C0C8B8859ACEBEC7094AB5) == 0x000008, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_OnLoaded_A0C6596B46C0C8B8859ACEBEC7094AB5");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_OnLoaded_A0C6596B46C0C8B8859ACEBEC7094AB5) == 0x000008, "Wrong size on FSM_QuadrupedAnimalReaction_C_OnLoaded_A0C6596B46C0C8B8859ACEBEC7094AB5");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnLoaded_A0C6596B46C0C8B8859ACEBEC7094AB5, Loaded) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_OnLoaded_A0C6596B46C0C8B8859ACEBEC7094AB5::Loaded' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OnLeaveAlertRangeEndOverlap
// 0x0020 (0x0020 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_OnLeaveAlertRangeEndOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_OnLeaveAlertRangeEndOverlap) == 0x000008, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_OnLeaveAlertRangeEndOverlap");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_OnLeaveAlertRangeEndOverlap) == 0x000020, "Wrong size on FSM_QuadrupedAnimalReaction_C_OnLeaveAlertRangeEndOverlap");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnLeaveAlertRangeEndOverlap, OverlappedComponent) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_OnLeaveAlertRangeEndOverlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnLeaveAlertRangeEndOverlap, OtherActor) == 0x000008, "Member 'FSM_QuadrupedAnimalReaction_C_OnLeaveAlertRangeEndOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnLeaveAlertRangeEndOverlap, OtherComp) == 0x000010, "Member 'FSM_QuadrupedAnimalReaction_C_OnLeaveAlertRangeEndOverlap::OtherComp' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnLeaveAlertRangeEndOverlap, OtherBodyIndex) == 0x000018, "Member 'FSM_QuadrupedAnimalReaction_C_OnLeaveAlertRangeEndOverlap::OtherBodyIndex' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OnLeaveAlertRangeBeginOverlap
// 0x0118 (0x0118 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_OnLeaveAlertRangeBeginOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_OnLeaveAlertRangeBeginOverlap) == 0x000008, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_OnLeaveAlertRangeBeginOverlap");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_OnLeaveAlertRangeBeginOverlap) == 0x000118, "Wrong size on FSM_QuadrupedAnimalReaction_C_OnLeaveAlertRangeBeginOverlap");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnLeaveAlertRangeBeginOverlap, OverlappedComponent) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_OnLeaveAlertRangeBeginOverlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnLeaveAlertRangeBeginOverlap, OtherActor) == 0x000008, "Member 'FSM_QuadrupedAnimalReaction_C_OnLeaveAlertRangeBeginOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnLeaveAlertRangeBeginOverlap, OtherComp) == 0x000010, "Member 'FSM_QuadrupedAnimalReaction_C_OnLeaveAlertRangeBeginOverlap::OtherComp' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnLeaveAlertRangeBeginOverlap, OtherBodyIndex) == 0x000018, "Member 'FSM_QuadrupedAnimalReaction_C_OnLeaveAlertRangeBeginOverlap::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnLeaveAlertRangeBeginOverlap, bFromSweep) == 0x00001C, "Member 'FSM_QuadrupedAnimalReaction_C_OnLeaveAlertRangeBeginOverlap::bFromSweep' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnLeaveAlertRangeBeginOverlap, SweepResult) == 0x000020, "Member 'FSM_QuadrupedAnimalReaction_C_OnLeaveAlertRangeBeginOverlap::SweepResult' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OnInRangeActorStopHoldingBrush
// 0x0008 (0x0008 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_OnInRangeActorStopHoldingBrush final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_OnInRangeActorStopHoldingBrush) == 0x000008, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_OnInRangeActorStopHoldingBrush");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_OnInRangeActorStopHoldingBrush) == 0x000008, "Wrong size on FSM_QuadrupedAnimalReaction_C_OnInRangeActorStopHoldingBrush");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnInRangeActorStopHoldingBrush, Actor) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_OnInRangeActorStopHoldingBrush::Actor' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OnInRangeActorStartHoldingBrush
// 0x0008 (0x0008 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_OnInRangeActorStartHoldingBrush final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_OnInRangeActorStartHoldingBrush) == 0x000008, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_OnInRangeActorStartHoldingBrush");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_OnInRangeActorStartHoldingBrush) == 0x000008, "Wrong size on FSM_QuadrupedAnimalReaction_C_OnInRangeActorStartHoldingBrush");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnInRangeActorStartHoldingBrush, Actor) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_OnInRangeActorStartHoldingBrush::Actor' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OnGestureEnd_HandleTurn
// 0x0028 (0x0028 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_OnGestureEnd_HandleTurn final
{
public:
	bool                                          bInterrupt;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Tag;                                               // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      CurrentTurnAnim_HandleTurn;                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_OnGestureEnd_HandleTurn) == 0x000008, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_OnGestureEnd_HandleTurn");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_OnGestureEnd_HandleTurn) == 0x000028, "Wrong size on FSM_QuadrupedAnimalReaction_C_OnGestureEnd_HandleTurn");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnGestureEnd_HandleTurn, bInterrupt) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_OnGestureEnd_HandleTurn::bInterrupt' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnGestureEnd_HandleTurn, Tag) == 0x000004, "Member 'FSM_QuadrupedAnimalReaction_C_OnGestureEnd_HandleTurn::Tag' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnGestureEnd_HandleTurn, CurrentTurnAnim_HandleTurn) == 0x000010, "Member 'FSM_QuadrupedAnimalReaction_C_OnGestureEnd_HandleTurn::CurrentTurnAnim_HandleTurn' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnGestureEnd_HandleTurn, CallFunc_GetAnimInstance_ReturnValue) == 0x000018, "Member 'FSM_QuadrupedAnimalReaction_C_OnGestureEnd_HandleTurn::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnGestureEnd_HandleTurn, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000020, "Member 'FSM_QuadrupedAnimalReaction_C_OnGestureEnd_HandleTurn::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OnFleeCollisionEndOverlap
// 0x0020 (0x0020 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_OnFleeCollisionEndOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_OnFleeCollisionEndOverlap) == 0x000008, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_OnFleeCollisionEndOverlap");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_OnFleeCollisionEndOverlap) == 0x000020, "Wrong size on FSM_QuadrupedAnimalReaction_C_OnFleeCollisionEndOverlap");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnFleeCollisionEndOverlap, OverlappedComponent) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_OnFleeCollisionEndOverlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnFleeCollisionEndOverlap, OtherActor) == 0x000008, "Member 'FSM_QuadrupedAnimalReaction_C_OnFleeCollisionEndOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnFleeCollisionEndOverlap, OtherComp) == 0x000010, "Member 'FSM_QuadrupedAnimalReaction_C_OnFleeCollisionEndOverlap::OtherComp' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnFleeCollisionEndOverlap, OtherBodyIndex) == 0x000018, "Member 'FSM_QuadrupedAnimalReaction_C_OnFleeCollisionEndOverlap::OtherBodyIndex' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OnFleeCollisionBeginOverlap
// 0x0118 (0x0118 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_OnFleeCollisionBeginOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_OnFleeCollisionBeginOverlap) == 0x000008, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_OnFleeCollisionBeginOverlap");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_OnFleeCollisionBeginOverlap) == 0x000118, "Wrong size on FSM_QuadrupedAnimalReaction_C_OnFleeCollisionBeginOverlap");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnFleeCollisionBeginOverlap, OverlappedComponent) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_OnFleeCollisionBeginOverlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnFleeCollisionBeginOverlap, OtherActor) == 0x000008, "Member 'FSM_QuadrupedAnimalReaction_C_OnFleeCollisionBeginOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnFleeCollisionBeginOverlap, OtherComp) == 0x000010, "Member 'FSM_QuadrupedAnimalReaction_C_OnFleeCollisionBeginOverlap::OtherComp' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnFleeCollisionBeginOverlap, OtherBodyIndex) == 0x000018, "Member 'FSM_QuadrupedAnimalReaction_C_OnFleeCollisionBeginOverlap::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnFleeCollisionBeginOverlap, bFromSweep) == 0x00001C, "Member 'FSM_QuadrupedAnimalReaction_C_OnFleeCollisionBeginOverlap::bFromSweep' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnFleeCollisionBeginOverlap, SweepResult) == 0x000020, "Member 'FSM_QuadrupedAnimalReaction_C_OnFleeCollisionBeginOverlap::SweepResult' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OnEnterAlertRangeEndOverlap
// 0x0020 (0x0020 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_OnEnterAlertRangeEndOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_OnEnterAlertRangeEndOverlap) == 0x000008, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_OnEnterAlertRangeEndOverlap");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_OnEnterAlertRangeEndOverlap) == 0x000020, "Wrong size on FSM_QuadrupedAnimalReaction_C_OnEnterAlertRangeEndOverlap");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnEnterAlertRangeEndOverlap, OverlappedComponent) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_OnEnterAlertRangeEndOverlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnEnterAlertRangeEndOverlap, OtherActor) == 0x000008, "Member 'FSM_QuadrupedAnimalReaction_C_OnEnterAlertRangeEndOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnEnterAlertRangeEndOverlap, OtherComp) == 0x000010, "Member 'FSM_QuadrupedAnimalReaction_C_OnEnterAlertRangeEndOverlap::OtherComp' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnEnterAlertRangeEndOverlap, OtherBodyIndex) == 0x000018, "Member 'FSM_QuadrupedAnimalReaction_C_OnEnterAlertRangeEndOverlap::OtherBodyIndex' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OnEnterAlertRangeBeginOverlap
// 0x0118 (0x0118 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_OnEnterAlertRangeBeginOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_OnEnterAlertRangeBeginOverlap) == 0x000008, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_OnEnterAlertRangeBeginOverlap");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_OnEnterAlertRangeBeginOverlap) == 0x000118, "Wrong size on FSM_QuadrupedAnimalReaction_C_OnEnterAlertRangeBeginOverlap");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnEnterAlertRangeBeginOverlap, OverlappedComponent) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_OnEnterAlertRangeBeginOverlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnEnterAlertRangeBeginOverlap, OtherActor) == 0x000008, "Member 'FSM_QuadrupedAnimalReaction_C_OnEnterAlertRangeBeginOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnEnterAlertRangeBeginOverlap, OtherComp) == 0x000010, "Member 'FSM_QuadrupedAnimalReaction_C_OnEnterAlertRangeBeginOverlap::OtherComp' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnEnterAlertRangeBeginOverlap, OtherBodyIndex) == 0x000018, "Member 'FSM_QuadrupedAnimalReaction_C_OnEnterAlertRangeBeginOverlap::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnEnterAlertRangeBeginOverlap, bFromSweep) == 0x00001C, "Member 'FSM_QuadrupedAnimalReaction_C_OnEnterAlertRangeBeginOverlap::bFromSweep' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnEnterAlertRangeBeginOverlap, SweepResult) == 0x000020, "Member 'FSM_QuadrupedAnimalReaction_C_OnEnterAlertRangeBeginOverlap::SweepResult' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OnCuriousCollisionEndOverlap
// 0x0020 (0x0020 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_OnCuriousCollisionEndOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_OnCuriousCollisionEndOverlap) == 0x000008, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_OnCuriousCollisionEndOverlap");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_OnCuriousCollisionEndOverlap) == 0x000020, "Wrong size on FSM_QuadrupedAnimalReaction_C_OnCuriousCollisionEndOverlap");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnCuriousCollisionEndOverlap, OverlappedComponent) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_OnCuriousCollisionEndOverlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnCuriousCollisionEndOverlap, OtherActor) == 0x000008, "Member 'FSM_QuadrupedAnimalReaction_C_OnCuriousCollisionEndOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnCuriousCollisionEndOverlap, OtherComp) == 0x000010, "Member 'FSM_QuadrupedAnimalReaction_C_OnCuriousCollisionEndOverlap::OtherComp' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnCuriousCollisionEndOverlap, OtherBodyIndex) == 0x000018, "Member 'FSM_QuadrupedAnimalReaction_C_OnCuriousCollisionEndOverlap::OtherBodyIndex' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OnCuriousCollisionBeginOverlap
// 0x0118 (0x0118 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_OnCuriousCollisionBeginOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_OnCuriousCollisionBeginOverlap) == 0x000008, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_OnCuriousCollisionBeginOverlap");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_OnCuriousCollisionBeginOverlap) == 0x000118, "Wrong size on FSM_QuadrupedAnimalReaction_C_OnCuriousCollisionBeginOverlap");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnCuriousCollisionBeginOverlap, OverlappedComponent) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_OnCuriousCollisionBeginOverlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnCuriousCollisionBeginOverlap, OtherActor) == 0x000008, "Member 'FSM_QuadrupedAnimalReaction_C_OnCuriousCollisionBeginOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnCuriousCollisionBeginOverlap, OtherComp) == 0x000010, "Member 'FSM_QuadrupedAnimalReaction_C_OnCuriousCollisionBeginOverlap::OtherComp' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnCuriousCollisionBeginOverlap, OtherBodyIndex) == 0x000018, "Member 'FSM_QuadrupedAnimalReaction_C_OnCuriousCollisionBeginOverlap::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnCuriousCollisionBeginOverlap, bFromSweep) == 0x00001C, "Member 'FSM_QuadrupedAnimalReaction_C_OnCuriousCollisionBeginOverlap::bFromSweep' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnCuriousCollisionBeginOverlap, SweepResult) == 0x000020, "Member 'FSM_QuadrupedAnimalReaction_C_OnCuriousCollisionBeginOverlap::SweepResult' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OnAnimTransitionEnd_ReturningNormal
// 0x0008 (0x0008 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_OnAnimTransitionEnd_ReturningNormal final
{
public:
	struct FGameplayTag                           StanceTag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_OnAnimTransitionEnd_ReturningNormal) == 0x000004, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_OnAnimTransitionEnd_ReturningNormal");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_OnAnimTransitionEnd_ReturningNormal) == 0x000008, "Wrong size on FSM_QuadrupedAnimalReaction_C_OnAnimTransitionEnd_ReturningNormal");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnAnimTransitionEnd_ReturningNormal, StanceTag) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_OnAnimTransitionEnd_ReturningNormal::StanceTag' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OnAnimTransitionEnd_Normal
// 0x0008 (0x0008 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_OnAnimTransitionEnd_Normal final
{
public:
	struct FGameplayTag                           StanceTag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_OnAnimTransitionEnd_Normal) == 0x000004, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_OnAnimTransitionEnd_Normal");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_OnAnimTransitionEnd_Normal) == 0x000008, "Wrong size on FSM_QuadrupedAnimalReaction_C_OnAnimTransitionEnd_Normal");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnAnimTransitionEnd_Normal, StanceTag) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_OnAnimTransitionEnd_Normal::StanceTag' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.OnAnimTransitionEnd_HandleStopStance
// 0x0008 (0x0008 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_OnAnimTransitionEnd_HandleStopStance final
{
public:
	struct FGameplayTag                           StanceTag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_OnAnimTransitionEnd_HandleStopStance) == 0x000004, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_OnAnimTransitionEnd_HandleStopStance");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_OnAnimTransitionEnd_HandleStopStance) == 0x000008, "Wrong size on FSM_QuadrupedAnimalReaction_C_OnAnimTransitionEnd_HandleStopStance");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_OnAnimTransitionEnd_HandleStopStance, StanceTag) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_OnAnimTransitionEnd_HandleStopStance::StanceTag' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.MarkTransitionStateDirty
// 0x0018 (0x0018 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_MarkTransitionStateDirty final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerForNextTickDelegate_ReturnValue; // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_MarkTransitionStateDirty) == 0x000008, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_MarkTransitionStateDirty");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_MarkTransitionStateDirty) == 0x000018, "Wrong size on FSM_QuadrupedAnimalReaction_C_MarkTransitionStateDirty");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_MarkTransitionStateDirty, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_MarkTransitionStateDirty::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_MarkTransitionStateDirty, CallFunc_K2_SetTimerForNextTickDelegate_ReturnValue) == 0x000010, "Member 'FSM_QuadrupedAnimalReaction_C_MarkTransitionStateDirty::CallFunc_K2_SetTimerForNextTickDelegate_ReturnValue' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.IsTurning
// 0x0002 (0x0002 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_IsTurning final
{
public:
	bool                                          bIsTurning;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_IsTurning) == 0x000001, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_IsTurning");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_IsTurning) == 0x000002, "Wrong size on FSM_QuadrupedAnimalReaction_C_IsTurning");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_IsTurning, bIsTurning) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_IsTurning::bIsTurning' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_IsTurning, CallFunc_BooleanOR_ReturnValue) == 0x000001, "Member 'FSM_QuadrupedAnimalReaction_C_IsTurning::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.IsCanTrigger
// 0x0028 (0x0028 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_IsCanTrigger final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        Comp;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCanTrigger_0;                                    // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerControllingRole_ControllingRole; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ComponentHasTag_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsX6GameNikkiVisitor_ret;                 // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_IsCanTrigger) == 0x000008, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_IsCanTrigger");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_IsCanTrigger) == 0x000028, "Wrong size on FSM_QuadrupedAnimalReaction_C_IsCanTrigger");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_IsCanTrigger, Actor) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_IsCanTrigger::Actor' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_IsCanTrigger, Comp) == 0x000008, "Member 'FSM_QuadrupedAnimalReaction_C_IsCanTrigger::Comp' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_IsCanTrigger, IsCanTrigger_0) == 0x000010, "Member 'FSM_QuadrupedAnimalReaction_C_IsCanTrigger::IsCanTrigger_0' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_IsCanTrigger, CallFunc_GetPlayerControllingRole_ControllingRole) == 0x000018, "Member 'FSM_QuadrupedAnimalReaction_C_IsCanTrigger::CallFunc_GetPlayerControllingRole_ControllingRole' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_IsCanTrigger, CallFunc_ComponentHasTag_ReturnValue) == 0x000020, "Member 'FSM_QuadrupedAnimalReaction_C_IsCanTrigger::CallFunc_ComponentHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_IsCanTrigger, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000021, "Member 'FSM_QuadrupedAnimalReaction_C_IsCanTrigger::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_IsCanTrigger, CallFunc_IsX6GameNikkiVisitor_ret) == 0x000022, "Member 'FSM_QuadrupedAnimalReaction_C_IsCanTrigger::CallFunc_IsX6GameNikkiVisitor_ret' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_IsCanTrigger, CallFunc_BooleanOR_ReturnValue) == 0x000023, "Member 'FSM_QuadrupedAnimalReaction_C_IsCanTrigger::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_IsCanTrigger, CallFunc_BooleanAND_ReturnValue) == 0x000024, "Member 'FSM_QuadrupedAnimalReaction_C_IsCanTrigger::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.InternalStartTurnByCurve
// 0x0058 (0x0058 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_InternalStartTurnByCurve final
{
public:
	double                                        TurnAngle_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            TurnCurve;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetHorizontalRotation_AdjustedRotator;    // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_TurnStartYaw_ImplicitCast;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_InternalStartTurnByCurve) == 0x000008, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_InternalStartTurnByCurve");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_InternalStartTurnByCurve) == 0x000058, "Wrong size on FSM_QuadrupedAnimalReaction_C_InternalStartTurnByCurve");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_InternalStartTurnByCurve, TurnAngle_0) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_InternalStartTurnByCurve::TurnAngle_0' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_InternalStartTurnByCurve, TurnCurve) == 0x000008, "Member 'FSM_QuadrupedAnimalReaction_C_InternalStartTurnByCurve::TurnCurve' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_InternalStartTurnByCurve, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000010, "Member 'FSM_QuadrupedAnimalReaction_C_InternalStartTurnByCurve::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_InternalStartTurnByCurve, CallFunc_GetHorizontalRotation_AdjustedRotator) == 0x000028, "Member 'FSM_QuadrupedAnimalReaction_C_InternalStartTurnByCurve::CallFunc_GetHorizontalRotation_AdjustedRotator' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_InternalStartTurnByCurve, CallFunc_BreakRotator_Roll) == 0x000040, "Member 'FSM_QuadrupedAnimalReaction_C_InternalStartTurnByCurve::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_InternalStartTurnByCurve, CallFunc_BreakRotator_Pitch) == 0x000044, "Member 'FSM_QuadrupedAnimalReaction_C_InternalStartTurnByCurve::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_InternalStartTurnByCurve, CallFunc_BreakRotator_Yaw) == 0x000048, "Member 'FSM_QuadrupedAnimalReaction_C_InternalStartTurnByCurve::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_InternalStartTurnByCurve, K2Node_VariableSet_TurnStartYaw_ImplicitCast) == 0x000050, "Member 'FSM_QuadrupedAnimalReaction_C_InternalStartTurnByCurve::K2Node_VariableSet_TurnStartYaw_ImplicitCast' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.InternalStartTurnByAnim
// 0x0040 (0x0040 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_InternalStartTurnByAnim final
{
public:
	struct FGameplayTag                           GestureTag;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	double                                        TurnScale;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimSequenceBase>       CallFunc_BP_GetGestureSoftRef_GestureSoftRef;      // 0x0018(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_InternalStartTurnByAnim) == 0x000008, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_InternalStartTurnByAnim");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_InternalStartTurnByAnim) == 0x000040, "Wrong size on FSM_QuadrupedAnimalReaction_C_InternalStartTurnByAnim");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_InternalStartTurnByAnim, GestureTag) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_InternalStartTurnByAnim::GestureTag' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_InternalStartTurnByAnim, TurnScale) == 0x000008, "Member 'FSM_QuadrupedAnimalReaction_C_InternalStartTurnByAnim::TurnScale' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_InternalStartTurnByAnim, CallFunc_Abs_ReturnValue) == 0x000010, "Member 'FSM_QuadrupedAnimalReaction_C_InternalStartTurnByAnim::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_InternalStartTurnByAnim, CallFunc_BP_GetGestureSoftRef_GestureSoftRef) == 0x000018, "Member 'FSM_QuadrupedAnimalReaction_C_InternalStartTurnByAnim::CallFunc_BP_GetGestureSoftRef_GestureSoftRef' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.GetTurnTime
// 0x0040 (0x0040 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_GetTurnTime final
{
public:
	double                                        TurnTime;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      K2Node_DynamicCast_AsAnim_Sequence_Base;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayLength_ReturnValue;                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_TurnTime_ImplicitCast;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_TurnTime_ImplicitCast_1;     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_GetTurnTime) == 0x000008, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_GetTurnTime");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_GetTurnTime) == 0x000040, "Wrong size on FSM_QuadrupedAnimalReaction_C_GetTurnTime");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetTurnTime, TurnTime) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_GetTurnTime::TurnTime' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetTurnTime, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'FSM_QuadrupedAnimalReaction_C_GetTurnTime::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetTurnTime, CallFunc_GetTimeRange_MinTime) == 0x00000C, "Member 'FSM_QuadrupedAnimalReaction_C_GetTurnTime::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetTurnTime, CallFunc_GetTimeRange_MaxTime) == 0x000010, "Member 'FSM_QuadrupedAnimalReaction_C_GetTurnTime::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetTurnTime, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000018, "Member 'FSM_QuadrupedAnimalReaction_C_GetTurnTime::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetTurnTime, K2Node_DynamicCast_AsAnim_Sequence_Base) == 0x000020, "Member 'FSM_QuadrupedAnimalReaction_C_GetTurnTime::K2Node_DynamicCast_AsAnim_Sequence_Base' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetTurnTime, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'FSM_QuadrupedAnimalReaction_C_GetTurnTime::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetTurnTime, CallFunc_IsValid_ReturnValue_1) == 0x000029, "Member 'FSM_QuadrupedAnimalReaction_C_GetTurnTime::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetTurnTime, CallFunc_GetPlayLength_ReturnValue) == 0x00002C, "Member 'FSM_QuadrupedAnimalReaction_C_GetTurnTime::CallFunc_GetPlayLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetTurnTime, K2Node_FunctionResult_TurnTime_ImplicitCast) == 0x000030, "Member 'FSM_QuadrupedAnimalReaction_C_GetTurnTime::K2Node_FunctionResult_TurnTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetTurnTime, K2Node_FunctionResult_TurnTime_ImplicitCast_1) == 0x000038, "Member 'FSM_QuadrupedAnimalReaction_C_GetTurnTime::K2Node_FunctionResult_TurnTime_ImplicitCast_1' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.GetStimuliSourceActor
// 0x0008 (0x0008 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_GetStimuliSourceActor final
{
public:
	class AActor*                                 StimuliSourceActor_0;                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_GetStimuliSourceActor) == 0x000008, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_GetStimuliSourceActor");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_GetStimuliSourceActor) == 0x000008, "Wrong size on FSM_QuadrupedAnimalReaction_C_GetStimuliSourceActor");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetStimuliSourceActor, StimuliSourceActor_0) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_GetStimuliSourceActor::StimuliSourceActor_0' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.GetLookAtTargetTurnAngle
// 0x00D8 (0x00D8 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_GetLookAtTargetTurnAngle final
{
public:
	double                                        TurnAngle_0;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetLocalPlayerPawn_LocalPlayerPawn;       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetHorizontalRotation_AdjustedRotator;    // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_GetLookAtTargetTurnAngle) == 0x000008, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_GetLookAtTargetTurnAngle");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_GetLookAtTargetTurnAngle) == 0x0000D8, "Wrong size on FSM_QuadrupedAnimalReaction_C_GetLookAtTargetTurnAngle");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetLookAtTargetTurnAngle, TurnAngle_0) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_GetLookAtTargetTurnAngle::TurnAngle_0' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetLookAtTargetTurnAngle, CallFunc_GetLocalPlayerPawn_LocalPlayerPawn) == 0x000008, "Member 'FSM_QuadrupedAnimalReaction_C_GetLookAtTargetTurnAngle::CallFunc_GetLocalPlayerPawn_LocalPlayerPawn' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetLookAtTargetTurnAngle, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'FSM_QuadrupedAnimalReaction_C_GetLookAtTargetTurnAngle::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetLookAtTargetTurnAngle, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000028, "Member 'FSM_QuadrupedAnimalReaction_C_GetLookAtTargetTurnAngle::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetLookAtTargetTurnAngle, CallFunc_BreakRotator_Roll) == 0x000040, "Member 'FSM_QuadrupedAnimalReaction_C_GetLookAtTargetTurnAngle::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetLookAtTargetTurnAngle, CallFunc_BreakRotator_Pitch) == 0x000044, "Member 'FSM_QuadrupedAnimalReaction_C_GetLookAtTargetTurnAngle::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetLookAtTargetTurnAngle, CallFunc_BreakRotator_Yaw) == 0x000048, "Member 'FSM_QuadrupedAnimalReaction_C_GetLookAtTargetTurnAngle::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetLookAtTargetTurnAngle, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000050, "Member 'FSM_QuadrupedAnimalReaction_C_GetLookAtTargetTurnAngle::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetLookAtTargetTurnAngle, CallFunc_FindLookAtRotation_ReturnValue) == 0x000068, "Member 'FSM_QuadrupedAnimalReaction_C_GetLookAtTargetTurnAngle::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetLookAtTargetTurnAngle, CallFunc_GetHorizontalRotation_AdjustedRotator) == 0x000080, "Member 'FSM_QuadrupedAnimalReaction_C_GetLookAtTargetTurnAngle::CallFunc_GetHorizontalRotation_AdjustedRotator' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetLookAtTargetTurnAngle, CallFunc_BreakRotator_Roll_1) == 0x000098, "Member 'FSM_QuadrupedAnimalReaction_C_GetLookAtTargetTurnAngle::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetLookAtTargetTurnAngle, CallFunc_BreakRotator_Pitch_1) == 0x00009C, "Member 'FSM_QuadrupedAnimalReaction_C_GetLookAtTargetTurnAngle::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetLookAtTargetTurnAngle, CallFunc_BreakRotator_Yaw_1) == 0x0000A0, "Member 'FSM_QuadrupedAnimalReaction_C_GetLookAtTargetTurnAngle::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetLookAtTargetTurnAngle, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'FSM_QuadrupedAnimalReaction_C_GetLookAtTargetTurnAngle::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetLookAtTargetTurnAngle, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'FSM_QuadrupedAnimalReaction_C_GetLookAtTargetTurnAngle::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetLookAtTargetTurnAngle, CallFunc_Percent_FloatFloat_ReturnValue) == 0x0000B8, "Member 'FSM_QuadrupedAnimalReaction_C_GetLookAtTargetTurnAngle::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetLookAtTargetTurnAngle, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0000C0, "Member 'FSM_QuadrupedAnimalReaction_C_GetLookAtTargetTurnAngle::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetLookAtTargetTurnAngle, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x0000C8, "Member 'FSM_QuadrupedAnimalReaction_C_GetLookAtTargetTurnAngle::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetLookAtTargetTurnAngle, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x0000D0, "Member 'FSM_QuadrupedAnimalReaction_C_GetLookAtTargetTurnAngle::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.GetHorizontalRotation
// 0x0090 (0x0090 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_GetHorizontalRotation final
{
public:
	struct FRotator                               Rotator;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               AdjustedRotator;                                   // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_GetHorizontalRotation) == 0x000008, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_GetHorizontalRotation");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_GetHorizontalRotation) == 0x000090, "Wrong size on FSM_QuadrupedAnimalReaction_C_GetHorizontalRotation");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetHorizontalRotation, Rotator) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_GetHorizontalRotation::Rotator' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetHorizontalRotation, AdjustedRotator) == 0x000018, "Member 'FSM_QuadrupedAnimalReaction_C_GetHorizontalRotation::AdjustedRotator' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetHorizontalRotation, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000030, "Member 'FSM_QuadrupedAnimalReaction_C_GetHorizontalRotation::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetHorizontalRotation, CallFunc_BreakVector_X) == 0x000048, "Member 'FSM_QuadrupedAnimalReaction_C_GetHorizontalRotation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetHorizontalRotation, CallFunc_BreakVector_Y) == 0x000050, "Member 'FSM_QuadrupedAnimalReaction_C_GetHorizontalRotation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetHorizontalRotation, CallFunc_BreakVector_Z) == 0x000058, "Member 'FSM_QuadrupedAnimalReaction_C_GetHorizontalRotation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetHorizontalRotation, CallFunc_MakeVector_ReturnValue) == 0x000060, "Member 'FSM_QuadrupedAnimalReaction_C_GetHorizontalRotation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetHorizontalRotation, CallFunc_MakeRotFromX_ReturnValue) == 0x000078, "Member 'FSM_QuadrupedAnimalReaction_C_GetHorizontalRotation::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.GetFleeSucceedDistance
// 0x0008 (0x0008 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_GetFleeSucceedDistance final
{
public:
	double                                        FleeSucceedDistance;                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_GetFleeSucceedDistance) == 0x000008, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_GetFleeSucceedDistance");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_GetFleeSucceedDistance) == 0x000008, "Wrong size on FSM_QuadrupedAnimalReaction_C_GetFleeSucceedDistance");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetFleeSucceedDistance, FleeSucceedDistance) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_GetFleeSucceedDistance::FleeSucceedDistance' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.GetFleeQueryParams
// 0x0030 (0x0030 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_GetFleeQueryParams final
{
public:
	struct FVector                                Center;                                            // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FleeRadius;                                        // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FleeStepDistMin;                                   // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FleeStepDistMax;                                   // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_GetFleeQueryParams) == 0x000008, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_GetFleeQueryParams");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_GetFleeQueryParams) == 0x000030, "Wrong size on FSM_QuadrupedAnimalReaction_C_GetFleeQueryParams");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetFleeQueryParams, Center) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_GetFleeQueryParams::Center' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetFleeQueryParams, FleeRadius) == 0x000018, "Member 'FSM_QuadrupedAnimalReaction_C_GetFleeQueryParams::FleeRadius' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetFleeQueryParams, FleeStepDistMin) == 0x000020, "Member 'FSM_QuadrupedAnimalReaction_C_GetFleeQueryParams::FleeStepDistMin' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetFleeQueryParams, FleeStepDistMax) == 0x000028, "Member 'FSM_QuadrupedAnimalReaction_C_GetFleeQueryParams::FleeStepDistMax' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.GetCurrentState
// 0x0001 (0x0001 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_GetCurrentState final
{
public:
	EQuadrupedAnimalReactionState                 State;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_GetCurrentState) == 0x000001, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_GetCurrentState");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_GetCurrentState) == 0x000001, "Wrong size on FSM_QuadrupedAnimalReaction_C_GetCurrentState");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetCurrentState, State) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_GetCurrentState::State' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.ExecuteUbergraph_FSM_QuadrupedAnimalReaction
// 0x0F40 (0x0F40 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& StanceTag)> K2Node_CreateDelegate_OutputDelegate;      // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UX6TaskAsyncBase*                       K2Node_CustomEvent_Task;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UX6AsyncTask_StartStance_C*             CallFunc_SpawnObject_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_InovkeAsyncTaskStart_EventName;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& StanceTag)> K2Node_CreateDelegate_OutputDelegate_1;    // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& StanceTag)> K2Node_CreateDelegate_OutputDelegate_2;    // 0x0040(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bTurnByCurve)>            K2Node_CreateDelegate_OutputDelegate_3;            // 0x0050(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0060(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& StanceTag)> K2Node_CreateDelegate_OutputDelegate_5;    // 0x0078(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      K2Node_DynamicCast_AsAnim_Sequence_Base;           // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      K2Node_DynamicCast_AsAnim_Sequence_Base_1;         // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate_6; // 0x00BC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)> K2Node_CreateDelegate_OutputDelegate_7; // 0x00CC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate_8; // 0x00DC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)> K2Node_CreateDelegate_OutputDelegate_9; // 0x00EC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate_10; // 0x00FC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)> K2Node_CreateDelegate_OutputDelegate_11; // 0x010C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate_12; // 0x011C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)> K2Node_CreateDelegate_OutputDelegate_13; // 0x012C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& StanceTag)> K2Node_CreateDelegate_OutputDelegate_14;   // 0x0158(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsInTransition_bInTransition;          // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x016B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_15;           // 0x016C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTurning_bIsTurning;                     // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x017D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x017E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x017F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsInTransition_bInTransition_1;        // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0183(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0185(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTurning_bIsTurning_1;                   // 0x0186(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0187(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x018B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& StanceTag)> K2Node_CreateDelegate_OutputDelegate_16;   // 0x018C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsInTransition_bInTransition_2;        // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x019D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x019E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x019F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTurning_bIsTurning_2;                   // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x01A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsInTransition_bInTransition_3;        // 0x01A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x01A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_9;                // 0x01A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_10;               // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTurning_bIsTurning_3;                   // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x01AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_11;               // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x01AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x01AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsInTransition_bInTransition_4;        // 0x01AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_11;                // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_12;               // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_12;                // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsInTransition_bInTransition_5;        // 0x01B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UX6AsyncTask_StartStance_C*             CallFunc_SpawnObject_ReturnValue_1;                // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_13;               // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x3];                                      // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_InovkeAsyncTaskStart_EventName_1;         // 0x01C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_14;               // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_13;                // 0x01CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTurning_bIsTurning_4;                   // 0x01CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_14;                // 0x01CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_15;               // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_15;                // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_16;                // 0x01D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x01D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_16;               // 0x01D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_17;                // 0x01D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_17;               // 0x01D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsInTransition_bInTransition_6;        // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTurning_bIsTurning_5;                   // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_18;               // 0x01DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_19;               // 0x01DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_18;                // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_19;                // 0x01DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsInTransition_bInTransition_7;        // 0x01DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTurning_bIsTurning_6;                   // 0x01DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_20;               // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_21;               // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_20;                // 0x01E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E3[0x5];                                      // 0x01E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UX6TaskAsyncBase*                       K2Node_CustomEvent_Task_1;                         // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_21;                // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsInTransition_bInTransition_8;        // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_22;               // 0x01F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_23;               // 0x01F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_24;               // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTurning_bIsTurning_7;                   // 0x01F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_22;                // 0x01F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_25;               // 0x01F7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_23;                // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_24;                // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_25;                // 0x01FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsInTransition_bInTransition_9;        // 0x01FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_26;               // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsInTransition_bInTransition_10;       // 0x01FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_26;                // 0x01FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_27;               // 0x01FF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue_1;         // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_28;               // 0x0202(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_29;               // 0x0203(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_27;                // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_28;                // 0x0205(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_30;               // 0x0206(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsInTransition_bInTransition_11;       // 0x0207(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_31;               // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTurning_bIsTurning_8;                   // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_29;                // 0x020A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_32;               // 0x020B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_DeltaSeconds_1;                 // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_30;                // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsInTransition_bInTransition_12;       // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_33;               // 0x0212(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_34;               // 0x0213(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTurning_bIsTurning_9;                   // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_31;                // 0x0215(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_35;               // 0x0216(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_32;                // 0x0217(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_33;                // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_34;                // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_X6RunBehaviorTree_ReturnValue;            // 0x021A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsInTransition_bInTransition_13;       // 0x021B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_17;           // 0x021C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryStartCuriousTurn_bTurnStarted;         // 0x022D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryStartCuriousTurn_bTurnStarted_1;       // 0x022E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsPlayingStance_bIsPlayingStance;      // 0x022F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_StanceTag_5;                    // 0x0230(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& StanceTag)> K2Node_CreateDelegate_OutputDelegate_18;   // 0x0238(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EvalTransitionsWithResult_bStateChanged;  // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EvalTransitionsWithResult_bStateChanged_1; // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFastTransition_1;              // 0x024A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24B[0x5];                                      // 0x024B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetTurnTime_TurnTime;                     // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0260(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_19;           // 0x0268(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UX6TaskAsyncBase* Task)> K2Node_CreateDelegate_OutputDelegate_20;           // 0x0278(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetLocalPlayerPawn_LocalPlayerPawn;       // 0x0288(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0290(0x0010)()
	bool                                          CallFunc_X6RunBehaviorTree_ReturnValue_1;          // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x02A8(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue;              // 0x02F0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0300(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_X6RunBehaviorTree_ReturnValue_2;          // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_349[0x7];                                      // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0350(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0360(0x0010)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_21;           // 0x0370(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0380(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_StanceTag_4;                    // 0x0390(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_22;           // 0x0398(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_23;           // 0x03A8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryStartAlertTurn_bTurnStarted;           // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsInTransition_bInTransition_14;       // 0x03B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryEnterState_bSuccess;                   // 0x03BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BB[0x1];                                      // 0x03BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_24;           // 0x03BC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x03CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CD[0x3];                                      // 0x03CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x03D0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryStartAlertTurn_bTurnStarted_1;         // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsPlayingStance_bIsPlayingStance_1;    // 0x03D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DA[0x2];                                      // 0x03DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_StanceTag_3;                    // 0x03DC(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_DeltaSeconds;                   // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& StanceTag)> K2Node_CreateDelegate_OutputDelegate_25;   // 0x03E8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EvalTransitionsWithResult_bStateChanged_2; // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EvalTransitionsWithResult_bStateChanged_3; // 0x03F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FA[0x2];                                      // 0x03FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_StanceTag_2;                    // 0x03FC(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryEnterState_bSuccess_1;                 // 0x0404(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bTurnByCurve;                   // 0x0405(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryEnterState_bSuccess_2;                 // 0x0406(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_407[0x1];                                      // 0x0407(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bTurnByCurve)>            K2Node_CreateDelegate_OutputDelegate_26;           // 0x0408(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& StanceTag)> K2Node_CreateDelegate_OutputDelegate_27;   // 0x0418(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFastTransition;                // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_429[0x7];                                      // 0x0429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetTurnTime_TurnTime_1;                   // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x0440(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_28;           // 0x0448(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UX6TaskAsyncBase* Task)> K2Node_CreateDelegate_OutputDelegate_29;           // 0x0458(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_StanceTag_1;                    // 0x0468(0x0008)(NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimSequenceBase>       CallFunc_BP_GetStanceSoftRef_StanceSoftRef;        // 0x0470(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimSequenceBase>       CallFunc_BP_GetStanceSoftRef_StanceSoftRef_1;      // 0x0498(0x0028)(HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_30;           // 0x04C0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x04D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent_7;          // 0x04D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor_7;                   // 0x04E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp_7;                    // 0x04E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex_7;               // 0x04F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFromSweep_3;                   // 0x04F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F5[0x3];                                      // 0x04F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult_3;                  // 0x04F8(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class USphereComponent*                       CallFunc_AddComponentByClass_ReturnValue;          // 0x05F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCanTrigger_IsCanTrigger;                // 0x05F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F9[0x7];                                      // 0x05F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent_6;          // 0x0600(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor_6;                   // 0x0608(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp_6;                    // 0x0610(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex_6;               // 0x0618(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCanTrigger_IsCanTrigger_1;              // 0x061C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61D[0x3];                                      // 0x061D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USphereComponent*                       CallFunc_AddComponentByClass_ReturnValue_1;        // 0x0620(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent_5;          // 0x0628(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor_5;                   // 0x0630(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp_5;                    // 0x0638(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex_5;               // 0x0640(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFromSweep_2;                   // 0x0644(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_645[0x3];                                      // 0x0645(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult_2;                  // 0x0648(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_31;           // 0x0740(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCanTrigger_IsCanTrigger_2;              // 0x0750(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_751[0x7];                                      // 0x0751(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent_4;          // 0x0758(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor_4;                   // 0x0760(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp_4;                    // 0x0768(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex_4;               // 0x0770(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCanTrigger_IsCanTrigger_3;              // 0x0774(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_775[0x3];                                      // 0x0775(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent_3;          // 0x0778(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor_3;                   // 0x0780(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp_3;                    // 0x0788(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex_3;               // 0x0790(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFromSweep_1;                   // 0x0794(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_795[0x3];                                      // 0x0795(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult_1;                  // 0x0798(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class USphereComponent*                       CallFunc_AddComponentByClass_ReturnValue_2;        // 0x0890(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCanTrigger_IsCanTrigger_4;              // 0x0898(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_899[0x7];                                      // 0x0899(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent_2;          // 0x08A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor_2;                   // 0x08A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp_2;                    // 0x08B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex_2;               // 0x08B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCanTrigger_IsCanTrigger_5;              // 0x08BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8BD[0x3];                                      // 0x08BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USphereComponent*                       CallFunc_AddComponentByClass_ReturnValue_3;        // 0x08C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_32;           // 0x08C8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent_1;          // 0x08D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor_1;                   // 0x08E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp_1;                    // 0x08E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex_1;               // 0x08F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFromSweep;                     // 0x08F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8F5[0x3];                                      // 0x08F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult;                    // 0x08F8(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent;            // 0x09F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x09F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp;                      // 0x0A00(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex;                 // 0x0A08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCanTrigger_IsCanTrigger_6;              // 0x0A0C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCanTrigger_IsCanTrigger_7;              // 0x0A0D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHoldingBrush_bHoldingBrush;             // 0x0A0E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A0F[0x1];                                      // 0x0A0F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CleaningAnimalComponent_V2_C*       CallFunc_GetComponentByClass_ReturnValue;          // 0x0A10(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0A18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHoldingBrush_bHoldingBrush_1;           // 0x0A19(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1A[0x6];                                      // 0x0A1A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CleaningAnimalComponent_V2_C*       CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0A20(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0A28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A29[0x3];                                      // 0x0A29(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* Actor)>          K2Node_CreateDelegate_OutputDelegate_33;           // 0x0A2C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* Actor)>          K2Node_CreateDelegate_OutputDelegate_34;           // 0x0A3C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* Actor)>          K2Node_CreateDelegate_OutputDelegate_35;           // 0x0A4C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* Actor)>          K2Node_CreateDelegate_OutputDelegate_36;           // 0x0A5C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A6C[0x4];                                      // 0x0A6C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array_1;                          // 0x0A70(0x0010)(ReferenceParm)
	TArray<class FName>                           K2Node_MakeArray_Array_2;                          // 0x0A80(0x0010)(ReferenceParm)
	TArray<class FName>                           K2Node_MakeArray_Array_3;                          // 0x0A90(0x0010)(ReferenceParm)
	TArray<class FName>                           K2Node_MakeArray_Array_4;                          // 0x0AA0(0x0010)(ReferenceParm)
	struct FSMStateInfo                           K2Node_Event_ToState;                              // 0x0AB0(0x0080)(ConstParm)
	struct FSMStateInfo                           K2Node_Event_FromState;                            // 0x0B30(0x0080)(ConstParm)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_37;           // 0x0BB0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0BC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuadrupedAnimalReactionState                 CallFunc_Map_Find_Value;                           // 0x0BC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0BC9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BCA[0x6];                                      // 0x0BCA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USMStateMachineComponent*               CallFunc_GetComponentOwner_ReturnValue;            // 0x0BD0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0BD8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_1;          // 0x0BE0(0x0010)()
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0BF0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0C00(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0C48(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0C58(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0CA0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0CB0(0x0010)()
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x0CC0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0CC8(0x0048)(HasGetValueTypeHash)
	class AX6AIController*                        K2Node_DynamicCast_AsX6AIController;               // 0x0D10(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0D18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D19[0x7];                                      // 0x0D19(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_5;                          // 0x0D20(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0D30(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0D40(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0D50(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsInTransition_bInTransition_15;       // 0x0D68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D69[0x3];                                      // 0x0D69(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_StanceTag;                      // 0x0D6C(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& StanceTag)> K2Node_CreateDelegate_OutputDelegate_38;   // 0x0D74(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bInterrupt, const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate_39; // 0x0D84(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bInterrupt, const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate_40; // 0x0D94(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA4[0x4];                                      // 0x0DA4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_2;          // 0x0DA8(0x0010)()
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2; // 0x0DB8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0DC8(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0E10(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0E20(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_3; // 0x0E68(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_3;          // 0x0E78(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x0E88(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_6;                          // 0x0ED0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0EE0(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x0EF0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateTurnByCurve_DeltaTime_ImplicitCast; // 0x0F00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateTurnByMontage_DeltaTime_ImplicitCast; // 0x0F08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0F10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_1;  // 0x0F14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateTurnByCurve_DeltaTime_ImplicitCast_1; // 0x0F18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateTurnByMontage_DeltaTime_ImplicitCast_1; // 0x0F20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_2;  // 0x0F28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast; // 0x0F2C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast_1; // 0x0F30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast_2; // 0x0F34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast_3; // 0x0F38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction) == 0x000008, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction) == 0x000F40, "Wrong size on FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, EntryPoint) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::EntryPoint' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_Task) == 0x000018, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_Task' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_SpawnObject_ReturnValue) == 0x000020, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_InovkeAsyncTaskStart_EventName) == 0x000028, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_InovkeAsyncTaskStart_EventName' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CreateDelegate_OutputDelegate_1) == 0x000030, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CreateDelegate_OutputDelegate_2) == 0x000040, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CreateDelegate_OutputDelegate_3) == 0x000050, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CreateDelegate_OutputDelegate_4) == 0x000060, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_Loaded_1) == 0x000070, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CreateDelegate_OutputDelegate_5) == 0x000078, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, Temp_object_Variable) == 0x000088, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_DynamicCast_AsAnim_Sequence_Base) == 0x000090, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_DynamicCast_AsAnim_Sequence_Base' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_Loaded) == 0x0000A0, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, Temp_object_Variable_1) == 0x0000A8, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_DynamicCast_AsAnim_Sequence_Base_1) == 0x0000B0, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_DynamicCast_AsAnim_Sequence_Base_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_DynamicCast_bSuccess_1) == 0x0000B8, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CreateDelegate_OutputDelegate_6) == 0x0000BC, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CreateDelegate_OutputDelegate_7) == 0x0000CC, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CreateDelegate_OutputDelegate_8) == 0x0000DC, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CreateDelegate_OutputDelegate_9) == 0x0000EC, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CreateDelegate_OutputDelegate_10) == 0x0000FC, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CreateDelegate_OutputDelegate_11) == 0x00010C, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CreateDelegate_OutputDelegate_12) == 0x00011C, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CreateDelegate_OutputDelegate_13) == 0x00012C, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_DynamicCast_AsCharacter) == 0x000140, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_DynamicCast_bSuccess_2) == 0x000148, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_GetAnimInstance_ReturnValue) == 0x000150, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CreateDelegate_OutputDelegate_14) == 0x000158, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BP_IsInTransition_bInTransition) == 0x000168, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BP_IsInTransition_bInTransition' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Not_PreBool_ReturnValue) == 0x000169, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Not_PreBool_ReturnValue_1) == 0x00016A, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00016B, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CreateDelegate_OutputDelegate_15) == 0x00016C, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_IsTurning_bIsTurning) == 0x00017C, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_IsTurning_bIsTurning' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BooleanOR_ReturnValue) == 0x00017D, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Not_PreBool_ReturnValue_2) == 0x00017E, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BooleanAND_ReturnValue) == 0x00017F, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BP_IsInTransition_bInTransition_1) == 0x000180, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BP_IsInTransition_bInTransition_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BooleanAND_ReturnValue_1) == 0x000181, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Not_PreBool_ReturnValue_3) == 0x000182, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BooleanAND_ReturnValue_2) == 0x000183, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Not_PreBool_ReturnValue_4) == 0x000184, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000185, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_IsTurning_bIsTurning_1) == 0x000186, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_IsTurning_bIsTurning_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BooleanOR_ReturnValue_1) == 0x000187, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Not_PreBool_ReturnValue_5) == 0x000188, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BooleanAND_ReturnValue_3) == 0x000189, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BooleanAND_ReturnValue_4) == 0x00018A, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BooleanAND_ReturnValue_5) == 0x00018B, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CreateDelegate_OutputDelegate_16) == 0x00018C, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BP_IsInTransition_bInTransition_2) == 0x00019C, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BP_IsInTransition_bInTransition_2' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Not_PreBool_ReturnValue_6) == 0x00019D, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Not_PreBool_ReturnValue_7) == 0x00019E, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00019F, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_IsTurning_bIsTurning_2) == 0x0001A0, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_IsTurning_bIsTurning_2' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BooleanOR_ReturnValue_2) == 0x0001A1, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Not_PreBool_ReturnValue_8) == 0x0001A2, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BooleanAND_ReturnValue_6) == 0x0001A3, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BooleanAND_ReturnValue_7) == 0x0001A4, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BP_IsInTransition_bInTransition_3) == 0x0001A5, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BP_IsInTransition_bInTransition_3' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BooleanAND_ReturnValue_8) == 0x0001A6, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Not_PreBool_ReturnValue_9) == 0x0001A7, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Not_PreBool_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Not_PreBool_ReturnValue_10) == 0x0001A8, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Not_PreBool_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0001A9, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_IsTurning_bIsTurning_3) == 0x0001AA, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_IsTurning_bIsTurning_3' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BooleanOR_ReturnValue_3) == 0x0001AB, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Not_PreBool_ReturnValue_11) == 0x0001AC, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Not_PreBool_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BooleanAND_ReturnValue_9) == 0x0001AD, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BooleanAND_ReturnValue_10) == 0x0001AE, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BP_IsInTransition_bInTransition_4) == 0x0001AF, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BP_IsInTransition_bInTransition_4' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BooleanAND_ReturnValue_11) == 0x0001B0, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BooleanAND_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Not_PreBool_ReturnValue_12) == 0x0001B1, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Not_PreBool_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BooleanAND_ReturnValue_12) == 0x0001B2, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BooleanAND_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BP_IsInTransition_bInTransition_5) == 0x0001B3, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BP_IsInTransition_bInTransition_5' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_SpawnObject_ReturnValue_1) == 0x0001B8, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_SpawnObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Not_PreBool_ReturnValue_13) == 0x0001C0, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Not_PreBool_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_InovkeAsyncTaskStart_EventName_1) == 0x0001C4, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_InovkeAsyncTaskStart_EventName_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Not_PreBool_ReturnValue_14) == 0x0001CC, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Not_PreBool_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BooleanAND_ReturnValue_13) == 0x0001CD, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BooleanAND_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_IsTurning_bIsTurning_4) == 0x0001CE, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_IsTurning_bIsTurning_4' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BooleanAND_ReturnValue_14) == 0x0001CF, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BooleanAND_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Not_PreBool_ReturnValue_15) == 0x0001D0, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Not_PreBool_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BooleanAND_ReturnValue_15) == 0x0001D1, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BooleanAND_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BooleanAND_ReturnValue_16) == 0x0001D2, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BooleanAND_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x0001D3, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x0001D4, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Not_PreBool_ReturnValue_16) == 0x0001D5, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Not_PreBool_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BooleanAND_ReturnValue_17) == 0x0001D6, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BooleanAND_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Not_PreBool_ReturnValue_17) == 0x0001D7, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Not_PreBool_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BP_IsInTransition_bInTransition_6) == 0x0001D8, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BP_IsInTransition_bInTransition_6' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_IsTurning_bIsTurning_5) == 0x0001D9, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_IsTurning_bIsTurning_5' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Not_PreBool_ReturnValue_18) == 0x0001DA, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Not_PreBool_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Not_PreBool_ReturnValue_19) == 0x0001DB, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Not_PreBool_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BooleanAND_ReturnValue_18) == 0x0001DC, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BooleanAND_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BooleanAND_ReturnValue_19) == 0x0001DD, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BooleanAND_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BP_IsInTransition_bInTransition_7) == 0x0001DE, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BP_IsInTransition_bInTransition_7' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_IsTurning_bIsTurning_6) == 0x0001DF, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_IsTurning_bIsTurning_6' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Not_PreBool_ReturnValue_20) == 0x0001E0, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Not_PreBool_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Not_PreBool_ReturnValue_21) == 0x0001E1, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Not_PreBool_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BooleanAND_ReturnValue_20) == 0x0001E2, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BooleanAND_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_Task_1) == 0x0001E8, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_Task_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BooleanAND_ReturnValue_21) == 0x0001F0, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BooleanAND_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BP_IsInTransition_bInTransition_8) == 0x0001F1, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BP_IsInTransition_bInTransition_8' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Not_PreBool_ReturnValue_22) == 0x0001F2, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Not_PreBool_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Not_PreBool_ReturnValue_23) == 0x0001F3, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Not_PreBool_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Not_PreBool_ReturnValue_24) == 0x0001F4, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Not_PreBool_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_IsTurning_bIsTurning_7) == 0x0001F5, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_IsTurning_bIsTurning_7' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BooleanAND_ReturnValue_22) == 0x0001F6, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BooleanAND_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Not_PreBool_ReturnValue_25) == 0x0001F7, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Not_PreBool_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BooleanAND_ReturnValue_23) == 0x0001F8, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BooleanAND_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BooleanAND_ReturnValue_24) == 0x0001F9, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BooleanAND_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BooleanAND_ReturnValue_25) == 0x0001FA, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BooleanAND_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BP_IsInTransition_bInTransition_9) == 0x0001FB, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BP_IsInTransition_bInTransition_9' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Not_PreBool_ReturnValue_26) == 0x0001FC, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Not_PreBool_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BP_IsInTransition_bInTransition_10) == 0x0001FD, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BP_IsInTransition_bInTransition_10' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BooleanAND_ReturnValue_26) == 0x0001FE, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BooleanAND_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Not_PreBool_ReturnValue_27) == 0x0001FF, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Not_PreBool_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000200, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_IsGameplayTagValid_ReturnValue_1) == 0x000201, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_IsGameplayTagValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Not_PreBool_ReturnValue_28) == 0x000202, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Not_PreBool_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Not_PreBool_ReturnValue_29) == 0x000203, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Not_PreBool_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BooleanAND_ReturnValue_27) == 0x000204, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BooleanAND_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BooleanAND_ReturnValue_28) == 0x000205, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BooleanAND_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Not_PreBool_ReturnValue_30) == 0x000206, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Not_PreBool_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BP_IsInTransition_bInTransition_11) == 0x000207, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BP_IsInTransition_bInTransition_11' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Not_PreBool_ReturnValue_31) == 0x000208, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Not_PreBool_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_IsTurning_bIsTurning_8) == 0x000209, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_IsTurning_bIsTurning_8' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BooleanAND_ReturnValue_29) == 0x00020A, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BooleanAND_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Not_PreBool_ReturnValue_32) == 0x00020B, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Not_PreBool_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_DeltaSeconds_1) == 0x00020C, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_DeltaSeconds_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BooleanAND_ReturnValue_30) == 0x000210, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BooleanAND_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BP_IsInTransition_bInTransition_12) == 0x000211, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BP_IsInTransition_bInTransition_12' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Not_PreBool_ReturnValue_33) == 0x000212, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Not_PreBool_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Not_PreBool_ReturnValue_34) == 0x000213, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Not_PreBool_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_IsTurning_bIsTurning_9) == 0x000214, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_IsTurning_bIsTurning_9' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BooleanAND_ReturnValue_31) == 0x000215, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BooleanAND_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Not_PreBool_ReturnValue_35) == 0x000216, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Not_PreBool_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BooleanAND_ReturnValue_32) == 0x000217, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BooleanAND_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BooleanAND_ReturnValue_33) == 0x000218, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BooleanAND_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BooleanAND_ReturnValue_34) == 0x000219, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BooleanAND_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_X6RunBehaviorTree_ReturnValue) == 0x00021A, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_X6RunBehaviorTree_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BP_IsInTransition_bInTransition_13) == 0x00021B, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BP_IsInTransition_bInTransition_13' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CreateDelegate_OutputDelegate_17) == 0x00021C, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CreateDelegate_OutputDelegate_17' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_IsValid_ReturnValue) == 0x00022C, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_TryStartCuriousTurn_bTurnStarted) == 0x00022D, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_TryStartCuriousTurn_bTurnStarted' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_TryStartCuriousTurn_bTurnStarted_1) == 0x00022E, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_TryStartCuriousTurn_bTurnStarted_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BP_IsPlayingStance_bIsPlayingStance) == 0x00022F, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BP_IsPlayingStance_bIsPlayingStance' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_StanceTag_5) == 0x000230, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_StanceTag_5' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CreateDelegate_OutputDelegate_18) == 0x000238, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CreateDelegate_OutputDelegate_18' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_EvalTransitionsWithResult_bStateChanged) == 0x000248, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_EvalTransitionsWithResult_bStateChanged' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_EvalTransitionsWithResult_bStateChanged_1) == 0x000249, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_EvalTransitionsWithResult_bStateChanged_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_bFastTransition_1) == 0x00024A, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_bFastTransition_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_GetTurnTime_TurnTime) == 0x000250, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_GetTurnTime_TurnTime' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000258, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000260, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CreateDelegate_OutputDelegate_19) == 0x000268, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CreateDelegate_OutputDelegate_19' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CreateDelegate_OutputDelegate_20) == 0x000278, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CreateDelegate_OutputDelegate_20' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_GetLocalPlayerPawn_LocalPlayerPawn) == 0x000288, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_GetLocalPlayerPawn_LocalPlayerPawn' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000290, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_X6RunBehaviorTree_ReturnValue_1) == 0x0002A0, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_X6RunBehaviorTree_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_MakeStruct_FormatArgumentData) == 0x0002A8, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Conv_BoolToText_ReturnValue) == 0x0002F0, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Conv_BoolToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_MakeStruct_FormatArgumentData_1) == 0x000300, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_X6RunBehaviorTree_ReturnValue_2) == 0x000348, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_X6RunBehaviorTree_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_MakeArray_Array) == 0x000350, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Format_ReturnValue) == 0x000360, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CreateDelegate_OutputDelegate_21) == 0x000370, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CreateDelegate_OutputDelegate_21' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Conv_TextToString_ReturnValue) == 0x000380, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_StanceTag_4) == 0x000390, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_StanceTag_4' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CreateDelegate_OutputDelegate_22) == 0x000398, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CreateDelegate_OutputDelegate_22' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CreateDelegate_OutputDelegate_23) == 0x0003A8, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CreateDelegate_OutputDelegate_23' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_TryStartAlertTurn_bTurnStarted) == 0x0003B8, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_TryStartAlertTurn_bTurnStarted' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BP_IsInTransition_bInTransition_14) == 0x0003B9, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BP_IsInTransition_bInTransition_14' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_TryEnterState_bSuccess) == 0x0003BA, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_TryEnterState_bSuccess' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CreateDelegate_OutputDelegate_24) == 0x0003BC, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CreateDelegate_OutputDelegate_24' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_IsValid_ReturnValue_1) == 0x0003CC, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x0003D0, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_TryStartAlertTurn_bTurnStarted_1) == 0x0003D8, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_TryStartAlertTurn_bTurnStarted_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BP_IsPlayingStance_bIsPlayingStance_1) == 0x0003D9, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BP_IsPlayingStance_bIsPlayingStance_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_StanceTag_3) == 0x0003DC, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_StanceTag_3' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_DeltaSeconds) == 0x0003E4, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CreateDelegate_OutputDelegate_25) == 0x0003E8, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CreateDelegate_OutputDelegate_25' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_EvalTransitionsWithResult_bStateChanged_2) == 0x0003F8, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_EvalTransitionsWithResult_bStateChanged_2' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_EvalTransitionsWithResult_bStateChanged_3) == 0x0003F9, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_EvalTransitionsWithResult_bStateChanged_3' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_StanceTag_2) == 0x0003FC, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_StanceTag_2' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_TryEnterState_bSuccess_1) == 0x000404, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_TryEnterState_bSuccess_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_bTurnByCurve) == 0x000405, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_bTurnByCurve' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_TryEnterState_bSuccess_2) == 0x000406, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_TryEnterState_bSuccess_2' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CreateDelegate_OutputDelegate_26) == 0x000408, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CreateDelegate_OutputDelegate_26' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CreateDelegate_OutputDelegate_27) == 0x000418, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CreateDelegate_OutputDelegate_27' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_bFastTransition) == 0x000428, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_bFastTransition' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_GetTurnTime_TurnTime_1) == 0x000430, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_GetTurnTime_TurnTime_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000438, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x000440, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CreateDelegate_OutputDelegate_28) == 0x000448, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CreateDelegate_OutputDelegate_28' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CreateDelegate_OutputDelegate_29) == 0x000458, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CreateDelegate_OutputDelegate_29' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_StanceTag_1) == 0x000468, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_StanceTag_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BP_GetStanceSoftRef_StanceSoftRef) == 0x000470, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BP_GetStanceSoftRef_StanceSoftRef' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BP_GetStanceSoftRef_StanceSoftRef_1) == 0x000498, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BP_GetStanceSoftRef_StanceSoftRef_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CreateDelegate_OutputDelegate_30) == 0x0004C0, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CreateDelegate_OutputDelegate_30' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Array_Add_ReturnValue) == 0x0004D0, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Array_Add_ReturnValue_1) == 0x0004D4, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_OverlappedComponent_7) == 0x0004D8, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_OverlappedComponent_7' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_OtherActor_7) == 0x0004E0, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_OtherActor_7' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_OtherComp_7) == 0x0004E8, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_OtherComp_7' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_OtherBodyIndex_7) == 0x0004F0, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_OtherBodyIndex_7' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_bFromSweep_3) == 0x0004F4, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_bFromSweep_3' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_SweepResult_3) == 0x0004F8, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_SweepResult_3' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_AddComponentByClass_ReturnValue) == 0x0005F0, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_IsCanTrigger_IsCanTrigger) == 0x0005F8, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_IsCanTrigger_IsCanTrigger' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_OverlappedComponent_6) == 0x000600, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_OverlappedComponent_6' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_OtherActor_6) == 0x000608, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_OtherActor_6' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_OtherComp_6) == 0x000610, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_OtherComp_6' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_OtherBodyIndex_6) == 0x000618, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_OtherBodyIndex_6' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_IsCanTrigger_IsCanTrigger_1) == 0x00061C, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_IsCanTrigger_IsCanTrigger_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_AddComponentByClass_ReturnValue_1) == 0x000620, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_AddComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_OverlappedComponent_5) == 0x000628, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_OverlappedComponent_5' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_OtherActor_5) == 0x000630, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_OtherActor_5' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_OtherComp_5) == 0x000638, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_OtherComp_5' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_OtherBodyIndex_5) == 0x000640, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_OtherBodyIndex_5' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_bFromSweep_2) == 0x000644, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_bFromSweep_2' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_SweepResult_2) == 0x000648, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_SweepResult_2' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CreateDelegate_OutputDelegate_31) == 0x000740, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CreateDelegate_OutputDelegate_31' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_IsCanTrigger_IsCanTrigger_2) == 0x000750, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_IsCanTrigger_IsCanTrigger_2' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_OverlappedComponent_4) == 0x000758, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_OverlappedComponent_4' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_OtherActor_4) == 0x000760, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_OtherActor_4' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_OtherComp_4) == 0x000768, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_OtherComp_4' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_OtherBodyIndex_4) == 0x000770, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_OtherBodyIndex_4' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_IsCanTrigger_IsCanTrigger_3) == 0x000774, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_IsCanTrigger_IsCanTrigger_3' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_OverlappedComponent_3) == 0x000778, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_OverlappedComponent_3' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_OtherActor_3) == 0x000780, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_OtherActor_3' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_OtherComp_3) == 0x000788, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_OtherComp_3' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_OtherBodyIndex_3) == 0x000790, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_OtherBodyIndex_3' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_bFromSweep_1) == 0x000794, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_SweepResult_1) == 0x000798, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_AddComponentByClass_ReturnValue_2) == 0x000890, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_AddComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_IsCanTrigger_IsCanTrigger_4) == 0x000898, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_IsCanTrigger_IsCanTrigger_4' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_OverlappedComponent_2) == 0x0008A0, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_OverlappedComponent_2' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_OtherActor_2) == 0x0008A8, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_OtherComp_2) == 0x0008B0, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_OtherComp_2' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_OtherBodyIndex_2) == 0x0008B8, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_OtherBodyIndex_2' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_IsCanTrigger_IsCanTrigger_5) == 0x0008BC, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_IsCanTrigger_IsCanTrigger_5' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_AddComponentByClass_ReturnValue_3) == 0x0008C0, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_AddComponentByClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CreateDelegate_OutputDelegate_32) == 0x0008C8, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CreateDelegate_OutputDelegate_32' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_OverlappedComponent_1) == 0x0008D8, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_OtherActor_1) == 0x0008E0, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_OtherComp_1) == 0x0008E8, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_OtherBodyIndex_1) == 0x0008F0, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_bFromSweep) == 0x0008F4, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_SweepResult) == 0x0008F8, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_OverlappedComponent) == 0x0009F0, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_OtherActor) == 0x0009F8, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_OtherComp) == 0x000A00, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_OtherBodyIndex) == 0x000A08, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_IsCanTrigger_IsCanTrigger_6) == 0x000A0C, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_IsCanTrigger_IsCanTrigger_6' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_IsCanTrigger_IsCanTrigger_7) == 0x000A0D, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_IsCanTrigger_IsCanTrigger_7' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_IsHoldingBrush_bHoldingBrush) == 0x000A0E, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_IsHoldingBrush_bHoldingBrush' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_GetComponentByClass_ReturnValue) == 0x000A10, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_IsValid_ReturnValue_2) == 0x000A18, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_IsHoldingBrush_bHoldingBrush_1) == 0x000A19, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_IsHoldingBrush_bHoldingBrush_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000A20, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_IsValid_ReturnValue_3) == 0x000A28, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CreateDelegate_OutputDelegate_33) == 0x000A2C, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CreateDelegate_OutputDelegate_33' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CreateDelegate_OutputDelegate_34) == 0x000A3C, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CreateDelegate_OutputDelegate_34' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CreateDelegate_OutputDelegate_35) == 0x000A4C, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CreateDelegate_OutputDelegate_35' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CreateDelegate_OutputDelegate_36) == 0x000A5C, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CreateDelegate_OutputDelegate_36' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_MakeArray_Array_1) == 0x000A70, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_MakeArray_Array_2) == 0x000A80, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_MakeArray_Array_3) == 0x000A90, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_MakeArray_Array_4) == 0x000AA0, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_Event_ToState) == 0x000AB0, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_Event_ToState' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_Event_FromState) == 0x000B30, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_Event_FromState' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CreateDelegate_OutputDelegate_37) == 0x000BB0, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CreateDelegate_OutputDelegate_37' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Conv_StringToName_ReturnValue) == 0x000BC0, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Map_Find_Value) == 0x000BC8, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Map_Find_ReturnValue) == 0x000BC9, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_GetComponentOwner_ReturnValue) == 0x000BD0, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_GetComponentOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_GetOwner_ReturnValue) == 0x000BD8, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Conv_ObjectToText_ReturnValue_1) == 0x000BE0, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Conv_ObjectToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000BF0, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_MakeStruct_FormatArgumentData_2) == 0x000C00, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Conv_StringToText_ReturnValue) == 0x000C48, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_MakeStruct_FormatArgumentData_3) == 0x000C58, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000CA0, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000CB0, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_GetAIController_ReturnValue) == 0x000CC0, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_GetAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_MakeStruct_FormatArgumentData_4) == 0x000CC8, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_DynamicCast_AsX6AIController) == 0x000D10, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_DynamicCast_AsX6AIController' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_DynamicCast_bSuccess_3) == 0x000D18, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_MakeArray_Array_5) == 0x000D20, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Format_ReturnValue_1) == 0x000D30, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000D40, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000D50, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_BP_IsInTransition_bInTransition_15) == 0x000D68, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_BP_IsInTransition_bInTransition_15' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CustomEvent_StanceTag) == 0x000D6C, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CustomEvent_StanceTag' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CreateDelegate_OutputDelegate_38) == 0x000D74, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CreateDelegate_OutputDelegate_38' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CreateDelegate_OutputDelegate_39) == 0x000D84, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CreateDelegate_OutputDelegate_39' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_CreateDelegate_OutputDelegate_40) == 0x000D94, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_CreateDelegate_OutputDelegate_40' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Conv_ObjectToText_ReturnValue_2) == 0x000DA8, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Conv_ObjectToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2) == 0x000DB8, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_MakeStruct_FormatArgumentData_5) == 0x000DC8, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000E10, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_MakeStruct_FormatArgumentData_6) == 0x000E20, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_3) == 0x000E68, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Conv_StringToText_ReturnValue_3) == 0x000E78, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Conv_StringToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_MakeStruct_FormatArgumentData_7) == 0x000E88, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, K2Node_MakeArray_Array_6) == 0x000ED0, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::K2Node_MakeArray_Array_6' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Format_ReturnValue_2) == 0x000EE0, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_Conv_TextToString_ReturnValue_2) == 0x000EF0, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_UpdateTurnByCurve_DeltaTime_ImplicitCast) == 0x000F00, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_UpdateTurnByCurve_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_UpdateTurnByMontage_DeltaTime_ImplicitCast) == 0x000F08, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_UpdateTurnByMontage_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000F10, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_1) == 0x000F14, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_UpdateTurnByCurve_DeltaTime_ImplicitCast_1) == 0x000F18, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_UpdateTurnByCurve_DeltaTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_UpdateTurnByMontage_DeltaTime_ImplicitCast_1) == 0x000F20, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_UpdateTurnByMontage_DeltaTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_2) == 0x000F28, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast) == 0x000F2C, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast_1) == 0x000F30, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast_2) == 0x000F34, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction, CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast_3) == 0x000F38, "Member 'FSM_QuadrupedAnimalReaction_C_ExecuteUbergraph_FSM_QuadrupedAnimalReaction::CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast_3' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.EvalTransitionsWithResult
// 0x0005 (0x0005 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_EvalTransitionsWithResult final
{
public:
	bool                                          bStateChanged;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuadrupedAnimalReactionState                 PrevState;                                         // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuadrupedAnimalReactionState                 CallFunc_GetCurrentState_State;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuadrupedAnimalReactionState                 CallFunc_GetCurrentState_State_1;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_EvalTransitionsWithResult) == 0x000001, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_EvalTransitionsWithResult");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_EvalTransitionsWithResult) == 0x000005, "Wrong size on FSM_QuadrupedAnimalReaction_C_EvalTransitionsWithResult");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_EvalTransitionsWithResult, bStateChanged) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_EvalTransitionsWithResult::bStateChanged' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_EvalTransitionsWithResult, PrevState) == 0x000001, "Member 'FSM_QuadrupedAnimalReaction_C_EvalTransitionsWithResult::PrevState' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_EvalTransitionsWithResult, CallFunc_GetCurrentState_State) == 0x000002, "Member 'FSM_QuadrupedAnimalReaction_C_EvalTransitionsWithResult::CallFunc_GetCurrentState_State' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_EvalTransitionsWithResult, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000003, "Member 'FSM_QuadrupedAnimalReaction_C_EvalTransitionsWithResult::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_EvalTransitionsWithResult, CallFunc_GetCurrentState_State_1) == 0x000004, "Member 'FSM_QuadrupedAnimalReaction_C_EvalTransitionsWithResult::CallFunc_GetCurrentState_State_1' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.BP_RequestStartStance
// 0x0008 (0x0008 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_BP_RequestStartStance final
{
public:
	struct FGameplayTag                           StanceTag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_BP_RequestStartStance) == 0x000004, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_BP_RequestStartStance");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_BP_RequestStartStance) == 0x000008, "Wrong size on FSM_QuadrupedAnimalReaction_C_BP_RequestStartStance");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_BP_RequestStartStance, StanceTag) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_BP_RequestStartStance::StanceTag' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.BP_RequestStartGesture
// 0x0008 (0x0008 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_BP_RequestStartGesture final
{
public:
	struct FGameplayTag                           GestureTag;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_BP_RequestStartGesture) == 0x000004, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_BP_RequestStartGesture");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_BP_RequestStartGesture) == 0x000008, "Wrong size on FSM_QuadrupedAnimalReaction_C_BP_RequestStartGesture");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_BP_RequestStartGesture, GestureTag) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_BP_RequestStartGesture::GestureTag' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.BP_IsPlayingStance
// 0x0001 (0x0001 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_BP_IsPlayingStance final
{
public:
	bool                                          bIsPlayingStance;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_BP_IsPlayingStance) == 0x000001, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_BP_IsPlayingStance");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_BP_IsPlayingStance) == 0x000001, "Wrong size on FSM_QuadrupedAnimalReaction_C_BP_IsPlayingStance");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_BP_IsPlayingStance, bIsPlayingStance) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_BP_IsPlayingStance::bIsPlayingStance' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.BP_IsInTransition
// 0x0001 (0x0001 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_BP_IsInTransition final
{
public:
	bool                                          bInTransition;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_BP_IsInTransition) == 0x000001, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_BP_IsInTransition");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_BP_IsInTransition) == 0x000001, "Wrong size on FSM_QuadrupedAnimalReaction_C_BP_IsInTransition");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_BP_IsInTransition, bInTransition) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_BP_IsInTransition::bInTransition' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.BP_GetStanceSoftRef
// 0x0030 (0x0030 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_BP_GetStanceSoftRef final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimSequenceBase>       StanceSoftRef;                                     // 0x0008(0x0028)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_BP_GetStanceSoftRef) == 0x000008, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_BP_GetStanceSoftRef");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_BP_GetStanceSoftRef) == 0x000030, "Wrong size on FSM_QuadrupedAnimalReaction_C_BP_GetStanceSoftRef");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_BP_GetStanceSoftRef, Tag) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_BP_GetStanceSoftRef::Tag' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_BP_GetStanceSoftRef, StanceSoftRef) == 0x000008, "Member 'FSM_QuadrupedAnimalReaction_C_BP_GetStanceSoftRef::StanceSoftRef' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.BP_GetGestureSoftRef
// 0x0030 (0x0030 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_BP_GetGestureSoftRef final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimSequenceBase>       GestureSoftRef;                                    // 0x0008(0x0028)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_BP_GetGestureSoftRef) == 0x000008, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_BP_GetGestureSoftRef");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_BP_GetGestureSoftRef) == 0x000030, "Wrong size on FSM_QuadrupedAnimalReaction_C_BP_GetGestureSoftRef");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_BP_GetGestureSoftRef, Tag) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_BP_GetGestureSoftRef::Tag' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_BP_GetGestureSoftRef, GestureSoftRef) == 0x000008, "Member 'FSM_QuadrupedAnimalReaction_C_BP_GetGestureSoftRef::GestureSoftRef' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.BP_ForceDestroyComponent
// 0x0008 (0x0008 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_BP_ForceDestroyComponent final
{
public:
	class USphereComponent*                       Comp;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_BP_ForceDestroyComponent) == 0x000008, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_BP_ForceDestroyComponent");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_BP_ForceDestroyComponent) == 0x000008, "Wrong size on FSM_QuadrupedAnimalReaction_C_BP_ForceDestroyComponent");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_BP_ForceDestroyComponent, Comp) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_BP_ForceDestroyComponent::Comp' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.BP_CanCurStanceTransitionToThisStance
// 0x000C (0x000C - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_BP_CanCurStanceTransitionToThisStance final
{
public:
	struct FGameplayTag                           StanceTag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bCanTransition;                                    // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_BP_CanCurStanceTransitionToThisStance) == 0x000004, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_BP_CanCurStanceTransitionToThisStance");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_BP_CanCurStanceTransitionToThisStance) == 0x00000C, "Wrong size on FSM_QuadrupedAnimalReaction_C_BP_CanCurStanceTransitionToThisStance");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_BP_CanCurStanceTransitionToThisStance, StanceTag) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_BP_CanCurStanceTransitionToThisStance::StanceTag' has a wrong offset!");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_BP_CanCurStanceTransitionToThisStance, bCanTransition) == 0x000008, "Member 'FSM_QuadrupedAnimalReaction_C_BP_CanCurStanceTransitionToThisStance::bCanTransition' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.BP_AddReactionCollision
// 0x0008 (0x0008 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_BP_AddReactionCollision final
{
public:
	class USphereComponent*                       Comp;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_BP_AddReactionCollision) == 0x000008, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_BP_AddReactionCollision");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_BP_AddReactionCollision) == 0x000008, "Wrong size on FSM_QuadrupedAnimalReaction_C_BP_AddReactionCollision");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_BP_AddReactionCollision, Comp) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_BP_AddReactionCollision::Comp' has a wrong offset!");

// Function FSM_QuadrupedAnimalReaction.FSM_QuadrupedAnimalReaction_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct FSM_QuadrupedAnimalReaction_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(FSM_QuadrupedAnimalReaction_C_GetModuleName) == 0x000008, "Wrong alignment on FSM_QuadrupedAnimalReaction_C_GetModuleName");
static_assert(sizeof(FSM_QuadrupedAnimalReaction_C_GetModuleName) == 0x000010, "Wrong size on FSM_QuadrupedAnimalReaction_C_GetModuleName");
static_assert(offsetof(FSM_QuadrupedAnimalReaction_C_GetModuleName, ReturnValue) == 0x000000, "Member 'FSM_QuadrupedAnimalReaction_C_GetModuleName::ReturnValue' has a wrong offset!");

}

