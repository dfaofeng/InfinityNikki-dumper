#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Player_RegularJump

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "X6Game_structs.hpp"
#include "X6Game_classes.hpp"
#include "ABP_Player_RegularJump_structs.hpp"
#include "EMantleType_structs.hpp"
#include "X6Animation_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Player_RegularJump.ABP_Player_RegularJump_C
// 0x2D30 (0x3230 - 0x0500)
class UABP_Player_RegularJump_C final : public UNikkiJumpLocomotionAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0500(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_Player_RegularJump::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;       // 0x0508(0x004C)(HasGetValueTypeHash)
	uint8                                         Pad_554[0x4];                                      // 0x0554(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0558(0x0008)()
	struct FAnimSubsystemInstance_NodeRelevancy   AnimBlueprintExtension_NodeRelevancy;              // 0x0560(0x00A8)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0608(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root_16;                             // 0x0610(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_5;                   // 0x0630(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_15;                             // 0x06E8(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_14;                             // 0x0708(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_13;                             // 0x0728(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_12;                             // 0x0748(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_4;                   // 0x0768(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_11;                             // 0x0820(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_3;                   // 0x0840(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_10;                             // 0x08F8(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_2;                   // 0x0918(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_9;                              // 0x09D0(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_8;                              // 0x09F0(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_41;                 // 0x0A10(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_40;                 // 0x0A38(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_39;                 // 0x0A60(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_38;                 // 0x0A88(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_37;                 // 0x0AB0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_36;                 // 0x0AD8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_35;                 // 0x0B00(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_34;                 // 0x0B28(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_33;                 // 0x0B50(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_32;                 // 0x0B78(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_31;                 // 0x0BA0(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_4;                   // 0x0BC8(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_9;                  // 0x0C10(0x0078)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_30;                 // 0x0C88(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_29;                 // 0x0CB0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_28;                 // 0x0CD8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_27;                 // 0x0D00(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x0D28(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_22;                      // 0x0D70(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_8;                  // 0x0D90(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_21;                      // 0x0E08(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_7;                  // 0x0E28(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_20;                      // 0x0EA0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_5;                      // 0x0EC0(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x0F88(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_4;                     // 0x0FB0(0x00C8)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_3;                     // 0x1078(0x00C8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_6;                  // 0x1140(0x0078)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_2;                     // 0x11B8(0x00C8)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_26;                 // 0x1280(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_25;                 // 0x12A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_24;                 // 0x12D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_23;                 // 0x12F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_22;                 // 0x1320(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_21;                 // 0x1348(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x1370(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x1398(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x13C0(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0x13E8(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_5;                  // 0x1430(0x0078)()
	struct FAnimNode_Mirror                       AnimGraphNode_Mirror_15;                           // 0x14A8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x14F0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_19;                      // 0x1538(0x0020)()
	struct FAnimNode_Mirror                       AnimGraphNode_Mirror_14;                           // 0x1558(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x15A0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_18;                      // 0x15E8(0x0020)()
	struct FAnimNode_Mirror                       AnimGraphNode_Mirror_13;                           // 0x1608(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x1650(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_17;                      // 0x1698(0x0020)()
	struct FAnimNode_Mirror                       AnimGraphNode_Mirror_12;                           // 0x16B8(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_4;                  // 0x1700(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_16;                      // 0x1778(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x1798(0x0028)()
	struct FAnimNode_Mirror                       AnimGraphNode_Mirror_11;                           // 0x17C0(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_3;                  // 0x1808(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_15;                      // 0x1880(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_4;                      // 0x18A0(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_14;                      // 0x1968(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x1988(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x19B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x19D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x1A00(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x1A28(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x1A50(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x1A78(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x1AA0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x1AC8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_13;                      // 0x1B10(0x0020)()
	struct FAnimNode_X6SequencePlayer             AnimGraphNode_X6SequencePlayer_1;                  // 0x1B30(0x0108)()
	struct FAnimNode_Mirror                       AnimGraphNode_Mirror_10;                           // 0x1C38(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_12;                      // 0x1C80(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x1CA0(0x0048)()
	struct FAnimNode_Mirror                       AnimGraphNode_Mirror_9;                            // 0x1CE8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x1D30(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x1D50(0x0048)()
	struct FAnimNode_Mirror                       AnimGraphNode_Mirror_8;                            // 0x1D98(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x1DE0(0x0020)()
	struct FAnimNode_Mirror                       AnimGraphNode_Mirror_7;                            // 0x1E00(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x1E48(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x1EC0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x1EE0(0x0048)()
	struct FAnimNode_Mirror                       AnimGraphNode_Mirror_6;                            // 0x1F28(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x1F70(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_3;                      // 0x1F90(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x2058(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x2078(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x20C0(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x2108(0x0048)()
	struct FAnimNode_Mirror                       AnimGraphNode_Mirror_5;                            // 0x2150(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x2198(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x21B8(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x2280(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x22A0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x22C8(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x22F0(0x00C8)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x23B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x23E0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x2408(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x2430(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x2458(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x2480(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x24A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x24D0(0x0028)()
	struct FAnimNode_PoseSnapshot                 AnimGraphNode_PoseSnapshot;                        // 0x24F8(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x2588(0x0020)()
	struct FAnimNode_X6SequencePlayer             AnimGraphNode_X6SequencePlayer;                    // 0x25A8(0x0108)()
	struct FAnimNode_Mirror                       AnimGraphNode_Mirror_4;                            // 0x26B0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x26F8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x2718(0x0048)()
	struct FAnimNode_Mirror                       AnimGraphNode_Mirror_3;                            // 0x2760(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x27A8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x27C8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x2810(0x0048)()
	struct FAnimNode_Mirror                       AnimGraphNode_Mirror_2;                            // 0x2858(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x28A0(0x0048)()
	struct FAnimNode_Mirror                       AnimGraphNode_Mirror_1;                            // 0x28E8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x2930(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x2950(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x2A18(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x2A38(0x00C8)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x2B00(0x00C8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x2BC8(0x0078)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x2C40(0x0080)()
	struct FAnimNode_Mirror                       AnimGraphNode_Mirror;                              // 0x2CC0(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x2D08(0x0078)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x2D80(0x0080)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose;                        // 0x2E00(0x0010)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x2E10(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x2E58(0x0048)()
	struct FAnimNode_Root                         AnimGraphNode_Root_7;                              // 0x2EA0(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_6;                              // 0x2EC0(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_5;                              // 0x2EE0(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_4;                              // 0x2F00(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_3;                              // 0x2F20(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_2;                              // 0x2F40(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_1;                   // 0x2F60(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x3018(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x3038(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x30F0(0x0020)()
	class UAnimSequence*                          K2Node_PropertyAccess_5;                           // 0x3110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          K2Node_PropertyAccess_4;                           // 0x3118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBlendSpace*                            K2Node_PropertyAccess_3;                           // 0x3120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBlendSpace*                            K2Node_PropertyAccess_2;                           // 0x3128(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UBlendSpace*                            K2Node_PropertyAccess_1;                           // 0x3130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBlendSpace*                            K2Node_PropertyAccess;                             // 0x3138(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UBP_PlayerMoveableComponent_C*          PlayerMoveableComp;                                // 0x3140(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ERegularFloatingJumpStage                     BP_PrevJumpStage;                                  // 0x3148(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERegularFloatingJumpStage                     BP_JumpStage;                                      // 0x3149(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_314A[0x6];                                     // 0x314A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        BP_FallSpeed;                                      // 0x3150(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CharacterMovement;                                 // 0x3158(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerInAirMoveableComponent_C*     InAirMovementComp;                                 // 0x3160(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletonMeshComp;                                  // 0x3168(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerAnimStatesComponent_C*        PlayerAnimState;                                   // 0x3170(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_StartToRightFoot;                               // 0x3178(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_AnimStartToRightFoot;                           // 0x3179(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_317A[0x6];                                     // 0x317A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        BP_SpeedAlpha;                                     // 0x3180(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERegularFloatingJumpStage                     BP_LastJumpStage;                                  // 0x3188(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERegularJumpMode                              BP_TakeOffMode;                                    // 0x3189(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_318A[0x6];                                     // 0x318A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        BP_RunSpeed;                                       // 0x3190(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BP_SprintSpeed;                                    // 0x3198(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerRegularMovementCompV3_C*      PlayerMovementComp;                                // 0x31A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_MainCharacterInAirMovementComp_C*   PlayerRegularInAir;                                // 0x31A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ERegularFloatingJumpStage                     BP_InJumpStage;                                    // 0x31B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31B1[0x7];                                     // 0x31B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        BP_UnStableSpeed;                                  // 0x31B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_IsUnStableState;                                // 0x31C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_IsInQuickJump;                                  // 0x31C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31C2[0x6];                                     // 0x31C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          BP_MentalTakeOff_Animation;                        // 0x31C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          BP_MentalFall_Animation;                           // 0x31D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UX6GeneralAnimationDataComponent*       X6GeneralAnimationDataComp;                        // 0x31D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_IsWoolenHeart;                                  // 0x31E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bp_IsNeedRejump;                                   // 0x31E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_IsNormalJumpInAir;                              // 0x31E2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31E3[0x1];                                     // 0x31E3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BP_JumpInAirAnimation_CurAccumulatedTime;          // 0x31E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BP_CurFloatBank_Angle;                             // 0x31E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BP_Rotation_Rate_Z__Yaw_;                          // 0x31F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31F4[0x4];                                     // 0x31F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        BP_FloatingShiftAnimDuration;                      // 0x31F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_bInputChanged;                                  // 0x3200(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_CanEnterBank;                                   // 0x3201(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3202[0x6];                                     // 0x3202(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_FloatingJumpAnimConfig_C*           BP_FloatingJumpAnimSet;                            // 0x3208(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          FloatAnimPrepared;                                 // 0x3210(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_IsPhxFloat;                                     // 0x3211(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_PhxUseJumpInAirToFloat;                         // 0x3212(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3213[0x5];                                     // 0x3213(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        BP_InputAmount;                                    // 0x3218(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_SkipFloatEnterAnim;                             // 0x3220(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_SkipJumpInAirAnim;                              // 0x3221(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AllowGaitChanged(ERegularLocomotionType NewGait, ERegularLocomotionType OldGait);
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void AnimLayer_AimOffset(const struct FPoseLink& InPoseForAimOffset, struct FPoseLink* AnimLayer_AimOffset_0);
	void AnimLayer_BehaviorAdditiveMode(const struct FPoseLink& InPoseForPlayerBehavior, struct FPoseLink* AnimLayer_BehaviorAdditiveMode_0);
	void AnimLayer_BehaviorConnectionMode(const struct FPoseLink& InPoseToConnectionMode, struct FPoseLink* AnimLayer_BehaviorConnectionMode_0);
	void AnimLayer_CombatMovement(struct FPoseLink* AnimLayer_CombatMovement_0);
	void AnimLayer_EquipmentAdditiveMode(const struct FPoseLink& InPoseForEquipment, struct FPoseLink* AnimLayer_EquipmentAdditiveMode_0);
	void AnimLayer_Jump(struct FPoseLink* AnimLayer_Jump_0);
	void AnimLayer_Land(struct FPoseLink* AnimLayer_Land_0);
	void AnimLayer_MovementDependObject(struct FPoseLink* AnimLayer_MovementDependObject_0);
	void AnimLayer_NPCAdditiveBehavior(const struct FPoseLink& InPose, struct FPoseLink* AnimLayer_NPCAdditiveBehavior_0);
	void AnimLayer_NPCBehavior(const struct FPoseLink& InPose_0, struct FPoseLink* AnimLayer_NPCBehavior_0);
	void AnimLayer_PlayerControllingTool(struct FPoseLink* AnimLayer_PlayerControllingTool_0);
	void AnimLayer_PlayerRegularMovement(struct FPoseLink* AnimLayer_PlayerRegularMovement_0);
	void AnimLayer_SpecialSurfaceMovement(struct FPoseLink* AnimLayer_SpecialSurfaceMovement_0);
	void AnimLayer_StrafeMovement(struct FPoseLink* AnimLayer_StrafeMovement_0);
	void AnimLayer_UsingCarrierMovement(struct FPoseLink* AnimLayer_UsingCarrierMovement_0);
	void AnimLayer_WhiteBoxMovement(struct FPoseLink* AnimLayer_WhiteBoxMovement_0);
	void AnimNotify_EnterFall();
	void AnimNotify_EnterJump();
	void AnimNotify_EnterQuickJump();
	void AnimNotify_EnterRejump();
	void AnimNotify_StartTransitToShift();
	void BlueprintBeginPlay();
	void BlueprintCustomPreUpdate(float DeltaSeconds);
	void BlueprintCustomUpdate(float DeltaSeconds);
	void BlueprintLinkedAnimationLayersInitialized();
	void DetermineFloatingShiftAnimDuration();
	void DetermineMentalAnimation();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_RegularJump_AnimGraphNode_ApplyAdditive_7543A7AD42193E96071CCFB357B824F4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_RegularJump_AnimGraphNode_ApplyAdditive_A9DB596749B6313B7B3042B64928A319();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_RegularJump_AnimGraphNode_ApplyAdditive_B6DA24D54F42E53FBA3B46A18CB680DB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_RegularJump_AnimGraphNode_ApplyAdditive_CA63C5B347401C54135A06B4429C36B8();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_RegularJump_AnimGraphNode_ApplyAdditive_EFFAE34F4FAFC2D541888EA427B13A2F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_RegularJump_AnimGraphNode_BlendListByBool_FE11C4F14F7BD5606D55309A13674F9D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_RegularJump_AnimGraphNode_BlendSpacePlayer_386201A64C0430D0ABD84BA65CF6A907();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_RegularJump_AnimGraphNode_BlendSpacePlayer_823AD69A4809161CBC74D4873C27E9E1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_RegularJump_AnimGraphNode_SequencePlayer_9B04E8CE48EE5B081BAEE0A75EB723EE();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_RegularJump_AnimGraphNode_TransitionResult_0C2F9B724F5361B482B943A188463C99();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_RegularJump_AnimGraphNode_TransitionResult_1AA0D8544B238D5D0DC48EB3B8CE2482();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_RegularJump_AnimGraphNode_TransitionResult_1F4E3D094669240DA7F546BAFF989CD3();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_RegularJump_AnimGraphNode_TransitionResult_2FDE8767410AB26AA767998977E52222();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_RegularJump_AnimGraphNode_TransitionResult_30BB92FA42A8B0125A5262861CCF49A1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_RegularJump_AnimGraphNode_TransitionResult_4836685840457F5C33B570A23B38EE30();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_RegularJump_AnimGraphNode_TransitionResult_4B61AF574BCFC30767ACC4ABEB3F8EA5();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_RegularJump_AnimGraphNode_TransitionResult_567BA0FC4DB9E730D2EB22A47613AF3C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_RegularJump_AnimGraphNode_TransitionResult_6146173149C6E5E8CD4C8983C8FA9C4E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_RegularJump_AnimGraphNode_TransitionResult_6C192E61430D1E59D4FAFB955B0297B8();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_RegularJump_AnimGraphNode_TransitionResult_786D07654E0625A738ECEB80DF5E55F8();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_RegularJump_AnimGraphNode_TransitionResult_86546C22450E98BEDCCC25966ECB13C1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_RegularJump_AnimGraphNode_TransitionResult_8CE86FCE4A7181AA89DF55B68BD0AC86();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_RegularJump_AnimGraphNode_TransitionResult_9E2E9BFC4FC36506E4E3659621138D16();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_RegularJump_AnimGraphNode_TransitionResult_A8B885274E0B301BDD860EBE4B08222C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_RegularJump_AnimGraphNode_TransitionResult_AB2E52614C054BD167EE589BC36B026F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_RegularJump_AnimGraphNode_TransitionResult_AF22FD524750B45CE14BEDAB7851D1AB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_RegularJump_AnimGraphNode_TransitionResult_D44EB81742F77423576A56AED74F692B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_RegularJump_AnimGraphNode_TransitionResult_D5F29FCF4887678E9258868144379357();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_RegularJump_AnimGraphNode_TransitionResult_DBB8D8284804E8A14147658518E20735();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_RegularJump_AnimGraphNode_TransitionResult_ED48A65F4B098596CE4559BEB5043134();
	void ExecuteUbergraph_ABP_Player_RegularJump(int32 EntryPoint);
	void FloatLoop_SP_FloatLoop_OnBecomeRelevant(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void InAirStateChanged(ERegularFloatingJumpStage NewStage, ERegularFloatingJumpStage OldStage);
	void InitFloatAnim();
	void JumpInAirToFloat_SP_JumpInAirAnimation_OnBecomeRelevant(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void JumpState_SP_JumpInAirAnimation_OnUpdate(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void On_Movement_Mode_Changed(EMovementMode Mode, EMovementMode PreMode);
	void On_Prepare_Finish();
	void OnContextualChanged(ECharacterSituationType CharacterSituationType, bool AddOrRemove);
	bool Prepare_Components();
	void Update_Values();
	void UpdateEssentialValues();
	void UpdateFloatingTurnAroundValue();
	void UpdateMovementData();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Player_RegularJump_C">();
	}
	static class UABP_Player_RegularJump_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Player_RegularJump_C>();
	}
};
static_assert(alignof(UABP_Player_RegularJump_C) == 0x000010, "Wrong alignment on UABP_Player_RegularJump_C");
static_assert(sizeof(UABP_Player_RegularJump_C) == 0x003230, "Wrong size on UABP_Player_RegularJump_C");
static_assert(offsetof(UABP_Player_RegularJump_C, UberGraphFrame) == 0x000500, "Member 'UABP_Player_RegularJump_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, __AnimBlueprintMutables) == 0x000508, "Member 'UABP_Player_RegularJump_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimBlueprintExtension_PropertyAccess) == 0x000558, "Member 'UABP_Player_RegularJump_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimBlueprintExtension_NodeRelevancy) == 0x000560, "Member 'UABP_Player_RegularJump_C::AnimBlueprintExtension_NodeRelevancy' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimBlueprintExtension_Base) == 0x000608, "Member 'UABP_Player_RegularJump_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_Root_16) == 0x000610, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_Root_16' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_LinkedInputPose_5) == 0x000630, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_LinkedInputPose_5' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_Root_15) == 0x0006E8, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_Root_15' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_Root_14) == 0x000708, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_Root_14' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_Root_13) == 0x000728, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_Root_13' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_Root_12) == 0x000748, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_Root_12' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_LinkedInputPose_4) == 0x000768, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_LinkedInputPose_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_Root_11) == 0x000820, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_Root_11' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_LinkedInputPose_3) == 0x000840, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_LinkedInputPose_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_Root_10) == 0x0008F8, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_Root_10' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_LinkedInputPose_2) == 0x000918, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_LinkedInputPose_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_Root_9) == 0x0009D0, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_Root_9' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_Root_8) == 0x0009F0, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_Root_8' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_TransitionResult_41) == 0x000A10, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_TransitionResult_41' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_TransitionResult_40) == 0x000A38, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_TransitionResult_40' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_TransitionResult_39) == 0x000A60, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_TransitionResult_39' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_TransitionResult_38) == 0x000A88, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_TransitionResult_38' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_TransitionResult_37) == 0x000AB0, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_TransitionResult_37' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_TransitionResult_36) == 0x000AD8, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_TransitionResult_36' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_TransitionResult_35) == 0x000B00, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_TransitionResult_35' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_TransitionResult_34) == 0x000B28, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_TransitionResult_34' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_TransitionResult_33) == 0x000B50, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_TransitionResult_33' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_TransitionResult_32) == 0x000B78, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_TransitionResult_32' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_TransitionResult_31) == 0x000BA0, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_TransitionResult_31' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_BlendListByBool_4) == 0x000BC8, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_BlendListByBool_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_BlendSpacePlayer_9) == 0x000C10, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_BlendSpacePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_TransitionResult_30) == 0x000C88, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_TransitionResult_30' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_TransitionResult_29) == 0x000CB0, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_TransitionResult_29' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_TransitionResult_28) == 0x000CD8, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_TransitionResult_28' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_TransitionResult_27) == 0x000D00, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_TransitionResult_27' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_SequencePlayer_13) == 0x000D28, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_StateResult_22) == 0x000D70, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_StateResult_22' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_BlendSpacePlayer_8) == 0x000D90, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_BlendSpacePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_StateResult_21) == 0x000E08, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_StateResult_21' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_BlendSpacePlayer_7) == 0x000E28, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_BlendSpacePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_StateResult_20) == 0x000EA0, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_StateResult_20' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_StateMachine_5) == 0x000EC0, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_StateMachine_5' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_UseCachedPose_1) == 0x000F88, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_ApplyAdditive_4) == 0x000FB0, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_ApplyAdditive_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_ApplyAdditive_3) == 0x001078, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_ApplyAdditive_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_BlendSpacePlayer_6) == 0x001140, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_BlendSpacePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_ApplyAdditive_2) == 0x0011B8, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_ApplyAdditive_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_TransitionResult_26) == 0x001280, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_TransitionResult_26' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_TransitionResult_25) == 0x0012A8, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_TransitionResult_25' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_TransitionResult_24) == 0x0012D0, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_TransitionResult_24' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_TransitionResult_23) == 0x0012F8, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_TransitionResult_23' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_TransitionResult_22) == 0x001320, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_TransitionResult_22' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_TransitionResult_21) == 0x001348, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_TransitionResult_21' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_TransitionResult_20) == 0x001370, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_TransitionResult_19) == 0x001398, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_TransitionResult_18) == 0x0013C0, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_BlendListByBool_3) == 0x0013E8, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_BlendSpacePlayer_5) == 0x001430, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_BlendSpacePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_Mirror_15) == 0x0014A8, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_Mirror_15' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_SequencePlayer_12) == 0x0014F0, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_StateResult_19) == 0x001538, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_StateResult_19' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_Mirror_14) == 0x001558, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_Mirror_14' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_SequencePlayer_11) == 0x0015A0, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_StateResult_18) == 0x0015E8, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_StateResult_18' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_Mirror_13) == 0x001608, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_Mirror_13' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_SequencePlayer_10) == 0x001650, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_StateResult_17) == 0x001698, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_StateResult_17' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_Mirror_12) == 0x0016B8, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_Mirror_12' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_BlendSpacePlayer_4) == 0x001700, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_BlendSpacePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_StateResult_16) == 0x001778, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_StateResult_16' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_TransitionResult_17) == 0x001798, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_Mirror_11) == 0x0017C0, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_Mirror_11' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_BlendSpacePlayer_3) == 0x001808, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_BlendSpacePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_StateResult_15) == 0x001880, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_StateResult_15' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_StateMachine_4) == 0x0018A0, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_StateMachine_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_StateResult_14) == 0x001968, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_StateResult_14' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_TransitionResult_16) == 0x001988, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_TransitionResult_15) == 0x0019B0, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_TransitionResult_14) == 0x0019D8, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_TransitionResult_13) == 0x001A00, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_TransitionResult_12) == 0x001A28, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_TransitionResult_11) == 0x001A50, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_TransitionResult_10) == 0x001A78, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_TransitionResult_9) == 0x001AA0, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_SequencePlayer_9) == 0x001AC8, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_StateResult_13) == 0x001B10, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_StateResult_13' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_X6SequencePlayer_1) == 0x001B30, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_X6SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_Mirror_10) == 0x001C38, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_Mirror_10' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_StateResult_12) == 0x001C80, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_StateResult_12' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_SequencePlayer_8) == 0x001CA0, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_Mirror_9) == 0x001CE8, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_Mirror_9' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_StateResult_11) == 0x001D30, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_SequencePlayer_7) == 0x001D50, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_Mirror_8) == 0x001D98, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_Mirror_8' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_StateResult_10) == 0x001DE0, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_Mirror_7) == 0x001E00, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_Mirror_7' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_BlendSpacePlayer_2) == 0x001E48, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_StateResult_9) == 0x001EC0, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_SequencePlayer_6) == 0x001EE0, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_Mirror_6) == 0x001F28, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_Mirror_6' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_StateResult_8) == 0x001F70, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_StateMachine_3) == 0x001F90, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_StateMachine_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_StateResult_7) == 0x002058, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_SequencePlayer_5) == 0x002078, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_SequencePlayer_4) == 0x0020C0, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_BlendListByBool_2) == 0x002108, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_Mirror_5) == 0x002150, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_Mirror_5' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_StateResult_6) == 0x002198, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_StateMachine_2) == 0x0021B8, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_StateResult_5) == 0x002280, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_TransitionResult_8) == 0x0022A0, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_UseCachedPose) == 0x0022C8, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_ApplyAdditive_1) == 0x0022F0, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_TransitionResult_7) == 0x0023B8, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_TransitionResult_6) == 0x0023E0, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_TransitionResult_5) == 0x002408, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_TransitionResult_4) == 0x002430, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_TransitionResult_3) == 0x002458, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_TransitionResult_2) == 0x002480, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_TransitionResult_1) == 0x0024A8, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_TransitionResult) == 0x0024D0, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_PoseSnapshot) == 0x0024F8, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_PoseSnapshot' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_StateResult_4) == 0x002588, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_X6SequencePlayer) == 0x0025A8, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_X6SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_Mirror_4) == 0x0026B0, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_Mirror_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_StateResult_3) == 0x0026F8, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_SequencePlayer_3) == 0x002718, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_Mirror_3) == 0x002760, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_Mirror_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_StateResult_2) == 0x0027A8, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_SequencePlayer_2) == 0x0027C8, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_SequencePlayer_1) == 0x002810, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_Mirror_2) == 0x002858, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_Mirror_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_BlendListByBool_1) == 0x0028A0, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_Mirror_1) == 0x0028E8, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_Mirror_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_StateResult_1) == 0x002930, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_StateMachine_1) == 0x002950, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_StateResult) == 0x002A18, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_StateMachine) == 0x002A38, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_ApplyAdditive) == 0x002B00, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_BlendSpacePlayer_1) == 0x002BC8, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_SaveCachedPose_1) == 0x002C40, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_Mirror) == 0x002CC0, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_Mirror' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_BlendSpacePlayer) == 0x002D08, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_SaveCachedPose) == 0x002D80, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_IdentityPose) == 0x002E00, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_IdentityPose' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_SequencePlayer) == 0x002E10, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_BlendListByBool) == 0x002E58, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_Root_7) == 0x002EA0, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_Root_7' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_Root_6) == 0x002EC0, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_Root_6' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_Root_5) == 0x002EE0, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_Root_5' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_Root_4) == 0x002F00, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_Root_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_Root_3) == 0x002F20, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_Root_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_Root_2) == 0x002F40, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_Root_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_LinkedInputPose_1) == 0x002F60, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_LinkedInputPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_Root_1) == 0x003018, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_LinkedInputPose) == 0x003038, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, AnimGraphNode_Root) == 0x0030F0, "Member 'UABP_Player_RegularJump_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, K2Node_PropertyAccess_5) == 0x003110, "Member 'UABP_Player_RegularJump_C::K2Node_PropertyAccess_5' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, K2Node_PropertyAccess_4) == 0x003118, "Member 'UABP_Player_RegularJump_C::K2Node_PropertyAccess_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, K2Node_PropertyAccess_3) == 0x003120, "Member 'UABP_Player_RegularJump_C::K2Node_PropertyAccess_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, K2Node_PropertyAccess_2) == 0x003128, "Member 'UABP_Player_RegularJump_C::K2Node_PropertyAccess_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, K2Node_PropertyAccess_1) == 0x003130, "Member 'UABP_Player_RegularJump_C::K2Node_PropertyAccess_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, K2Node_PropertyAccess) == 0x003138, "Member 'UABP_Player_RegularJump_C::K2Node_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, PlayerMoveableComp) == 0x003140, "Member 'UABP_Player_RegularJump_C::PlayerMoveableComp' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, BP_PrevJumpStage) == 0x003148, "Member 'UABP_Player_RegularJump_C::BP_PrevJumpStage' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, BP_JumpStage) == 0x003149, "Member 'UABP_Player_RegularJump_C::BP_JumpStage' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, BP_FallSpeed) == 0x003150, "Member 'UABP_Player_RegularJump_C::BP_FallSpeed' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, CharacterMovement) == 0x003158, "Member 'UABP_Player_RegularJump_C::CharacterMovement' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, InAirMovementComp) == 0x003160, "Member 'UABP_Player_RegularJump_C::InAirMovementComp' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, SkeletonMeshComp) == 0x003168, "Member 'UABP_Player_RegularJump_C::SkeletonMeshComp' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, PlayerAnimState) == 0x003170, "Member 'UABP_Player_RegularJump_C::PlayerAnimState' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, BP_StartToRightFoot) == 0x003178, "Member 'UABP_Player_RegularJump_C::BP_StartToRightFoot' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, BP_AnimStartToRightFoot) == 0x003179, "Member 'UABP_Player_RegularJump_C::BP_AnimStartToRightFoot' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, BP_SpeedAlpha) == 0x003180, "Member 'UABP_Player_RegularJump_C::BP_SpeedAlpha' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, BP_LastJumpStage) == 0x003188, "Member 'UABP_Player_RegularJump_C::BP_LastJumpStage' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, BP_TakeOffMode) == 0x003189, "Member 'UABP_Player_RegularJump_C::BP_TakeOffMode' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, BP_RunSpeed) == 0x003190, "Member 'UABP_Player_RegularJump_C::BP_RunSpeed' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, BP_SprintSpeed) == 0x003198, "Member 'UABP_Player_RegularJump_C::BP_SprintSpeed' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, PlayerMovementComp) == 0x0031A0, "Member 'UABP_Player_RegularJump_C::PlayerMovementComp' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, PlayerRegularInAir) == 0x0031A8, "Member 'UABP_Player_RegularJump_C::PlayerRegularInAir' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, BP_InJumpStage) == 0x0031B0, "Member 'UABP_Player_RegularJump_C::BP_InJumpStage' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, BP_UnStableSpeed) == 0x0031B8, "Member 'UABP_Player_RegularJump_C::BP_UnStableSpeed' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, BP_IsUnStableState) == 0x0031C0, "Member 'UABP_Player_RegularJump_C::BP_IsUnStableState' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, BP_IsInQuickJump) == 0x0031C1, "Member 'UABP_Player_RegularJump_C::BP_IsInQuickJump' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, BP_MentalTakeOff_Animation) == 0x0031C8, "Member 'UABP_Player_RegularJump_C::BP_MentalTakeOff_Animation' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, BP_MentalFall_Animation) == 0x0031D0, "Member 'UABP_Player_RegularJump_C::BP_MentalFall_Animation' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, X6GeneralAnimationDataComp) == 0x0031D8, "Member 'UABP_Player_RegularJump_C::X6GeneralAnimationDataComp' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, BP_IsWoolenHeart) == 0x0031E0, "Member 'UABP_Player_RegularJump_C::BP_IsWoolenHeart' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, bp_IsNeedRejump) == 0x0031E1, "Member 'UABP_Player_RegularJump_C::bp_IsNeedRejump' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, BP_IsNormalJumpInAir) == 0x0031E2, "Member 'UABP_Player_RegularJump_C::BP_IsNormalJumpInAir' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, BP_JumpInAirAnimation_CurAccumulatedTime) == 0x0031E4, "Member 'UABP_Player_RegularJump_C::BP_JumpInAirAnimation_CurAccumulatedTime' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, BP_CurFloatBank_Angle) == 0x0031E8, "Member 'UABP_Player_RegularJump_C::BP_CurFloatBank_Angle' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, BP_Rotation_Rate_Z__Yaw_) == 0x0031F0, "Member 'UABP_Player_RegularJump_C::BP_Rotation_Rate_Z__Yaw_' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, BP_FloatingShiftAnimDuration) == 0x0031F8, "Member 'UABP_Player_RegularJump_C::BP_FloatingShiftAnimDuration' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, BP_bInputChanged) == 0x003200, "Member 'UABP_Player_RegularJump_C::BP_bInputChanged' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, BP_CanEnterBank) == 0x003201, "Member 'UABP_Player_RegularJump_C::BP_CanEnterBank' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, BP_FloatingJumpAnimSet) == 0x003208, "Member 'UABP_Player_RegularJump_C::BP_FloatingJumpAnimSet' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, FloatAnimPrepared) == 0x003210, "Member 'UABP_Player_RegularJump_C::FloatAnimPrepared' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, BP_IsPhxFloat) == 0x003211, "Member 'UABP_Player_RegularJump_C::BP_IsPhxFloat' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, BP_PhxUseJumpInAirToFloat) == 0x003212, "Member 'UABP_Player_RegularJump_C::BP_PhxUseJumpInAirToFloat' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, BP_InputAmount) == 0x003218, "Member 'UABP_Player_RegularJump_C::BP_InputAmount' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, BP_SkipFloatEnterAnim) == 0x003220, "Member 'UABP_Player_RegularJump_C::BP_SkipFloatEnterAnim' has a wrong offset!");
static_assert(offsetof(UABP_Player_RegularJump_C, BP_SkipJumpInAirAnim) == 0x003221, "Member 'UABP_Player_RegularJump_C::BP_SkipJumpInAirAnim' has a wrong offset!");

}

