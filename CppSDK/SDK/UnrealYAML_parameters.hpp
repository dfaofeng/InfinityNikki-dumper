#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UnrealYAML

#include "Basic.hpp"

#include "UnrealYAML_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function UnrealYAML.YamlNodeHelpers.AsBool
// 0x0048 (0x0048 - 0x0000)
struct YamlNodeHelpers_AsBool final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          Default;                                           // 0x0040(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Value;                                             // 0x0041(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0042(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_AsBool) == 0x000008, "Wrong alignment on YamlNodeHelpers_AsBool");
static_assert(sizeof(YamlNodeHelpers_AsBool) == 0x000048, "Wrong size on YamlNodeHelpers_AsBool");
static_assert(offsetof(YamlNodeHelpers_AsBool, Node) == 0x000000, "Member 'YamlNodeHelpers_AsBool::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsBool, Default) == 0x000040, "Member 'YamlNodeHelpers_AsBool::Default' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsBool, Value) == 0x000041, "Member 'YamlNodeHelpers_AsBool::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsBool, ReturnValue) == 0x000042, "Member 'YamlNodeHelpers_AsBool::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.AsBoolArray
// 0x0068 (0x0068 - 0x0000)
struct YamlNodeHelpers_AsBoolArray final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<bool>                                  Default;                                           // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<bool>                                  Value;                                             // 0x0050(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_AsBoolArray) == 0x000008, "Wrong alignment on YamlNodeHelpers_AsBoolArray");
static_assert(sizeof(YamlNodeHelpers_AsBoolArray) == 0x000068, "Wrong size on YamlNodeHelpers_AsBoolArray");
static_assert(offsetof(YamlNodeHelpers_AsBoolArray, Node) == 0x000000, "Member 'YamlNodeHelpers_AsBoolArray::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsBoolArray, Default) == 0x000040, "Member 'YamlNodeHelpers_AsBoolArray::Default' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsBoolArray, Value) == 0x000050, "Member 'YamlNodeHelpers_AsBoolArray::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsBoolArray, ReturnValue) == 0x000060, "Member 'YamlNodeHelpers_AsBoolArray::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.AsByte
// 0x0048 (0x0048 - 0x0000)
struct YamlNodeHelpers_AsByte final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	uint8                                         Default;                                           // 0x0040(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Value;                                             // 0x0041(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0042(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_AsByte) == 0x000008, "Wrong alignment on YamlNodeHelpers_AsByte");
static_assert(sizeof(YamlNodeHelpers_AsByte) == 0x000048, "Wrong size on YamlNodeHelpers_AsByte");
static_assert(offsetof(YamlNodeHelpers_AsByte, Node) == 0x000000, "Member 'YamlNodeHelpers_AsByte::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsByte, Default) == 0x000040, "Member 'YamlNodeHelpers_AsByte::Default' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsByte, Value) == 0x000041, "Member 'YamlNodeHelpers_AsByte::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsByte, ReturnValue) == 0x000042, "Member 'YamlNodeHelpers_AsByte::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.AsByteArray
// 0x0068 (0x0068 - 0x0000)
struct YamlNodeHelpers_AsByteArray final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<uint8>                                 Default;                                           // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<uint8>                                 Value;                                             // 0x0050(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_AsByteArray) == 0x000008, "Wrong alignment on YamlNodeHelpers_AsByteArray");
static_assert(sizeof(YamlNodeHelpers_AsByteArray) == 0x000068, "Wrong size on YamlNodeHelpers_AsByteArray");
static_assert(offsetof(YamlNodeHelpers_AsByteArray, Node) == 0x000000, "Member 'YamlNodeHelpers_AsByteArray::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsByteArray, Default) == 0x000040, "Member 'YamlNodeHelpers_AsByteArray::Default' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsByteArray, Value) == 0x000050, "Member 'YamlNodeHelpers_AsByteArray::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsByteArray, ReturnValue) == 0x000060, "Member 'YamlNodeHelpers_AsByteArray::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.AsFloat
// 0x0050 (0x0050 - 0x0000)
struct YamlNodeHelpers_AsFloat final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         Default;                                           // 0x0040(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0044(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_AsFloat) == 0x000008, "Wrong alignment on YamlNodeHelpers_AsFloat");
static_assert(sizeof(YamlNodeHelpers_AsFloat) == 0x000050, "Wrong size on YamlNodeHelpers_AsFloat");
static_assert(offsetof(YamlNodeHelpers_AsFloat, Node) == 0x000000, "Member 'YamlNodeHelpers_AsFloat::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsFloat, Default) == 0x000040, "Member 'YamlNodeHelpers_AsFloat::Default' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsFloat, Value) == 0x000044, "Member 'YamlNodeHelpers_AsFloat::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsFloat, ReturnValue) == 0x000048, "Member 'YamlNodeHelpers_AsFloat::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.AsFloatArray
// 0x0068 (0x0068 - 0x0000)
struct YamlNodeHelpers_AsFloatArray final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<float>                                 Default;                                           // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<float>                                 Value;                                             // 0x0050(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_AsFloatArray) == 0x000008, "Wrong alignment on YamlNodeHelpers_AsFloatArray");
static_assert(sizeof(YamlNodeHelpers_AsFloatArray) == 0x000068, "Wrong size on YamlNodeHelpers_AsFloatArray");
static_assert(offsetof(YamlNodeHelpers_AsFloatArray, Node) == 0x000000, "Member 'YamlNodeHelpers_AsFloatArray::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsFloatArray, Default) == 0x000040, "Member 'YamlNodeHelpers_AsFloatArray::Default' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsFloatArray, Value) == 0x000050, "Member 'YamlNodeHelpers_AsFloatArray::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsFloatArray, ReturnValue) == 0x000060, "Member 'YamlNodeHelpers_AsFloatArray::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.AsInt
// 0x0050 (0x0050 - 0x0000)
struct YamlNodeHelpers_AsInt final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         Default;                                           // 0x0040(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Value;                                             // 0x0044(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_AsInt) == 0x000008, "Wrong alignment on YamlNodeHelpers_AsInt");
static_assert(sizeof(YamlNodeHelpers_AsInt) == 0x000050, "Wrong size on YamlNodeHelpers_AsInt");
static_assert(offsetof(YamlNodeHelpers_AsInt, Node) == 0x000000, "Member 'YamlNodeHelpers_AsInt::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsInt, Default) == 0x000040, "Member 'YamlNodeHelpers_AsInt::Default' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsInt, Value) == 0x000044, "Member 'YamlNodeHelpers_AsInt::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsInt, ReturnValue) == 0x000048, "Member 'YamlNodeHelpers_AsInt::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.AsIntArray
// 0x0068 (0x0068 - 0x0000)
struct YamlNodeHelpers_AsIntArray final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<int32>                                 Default;                                           // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<int32>                                 Value;                                             // 0x0050(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_AsIntArray) == 0x000008, "Wrong alignment on YamlNodeHelpers_AsIntArray");
static_assert(sizeof(YamlNodeHelpers_AsIntArray) == 0x000068, "Wrong size on YamlNodeHelpers_AsIntArray");
static_assert(offsetof(YamlNodeHelpers_AsIntArray, Node) == 0x000000, "Member 'YamlNodeHelpers_AsIntArray::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsIntArray, Default) == 0x000040, "Member 'YamlNodeHelpers_AsIntArray::Default' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsIntArray, Value) == 0x000050, "Member 'YamlNodeHelpers_AsIntArray::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsIntArray, ReturnValue) == 0x000060, "Member 'YamlNodeHelpers_AsIntArray::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.AsIntBoolMap
// 0x00E8 (0x00E8 - 0x0000)
struct YamlNodeHelpers_AsIntBoolMap final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TMap<int32, bool>                             Default;                                           // 0x0040(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TMap<int32, bool>                             Value;                                             // 0x0090(0x0050)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_AsIntBoolMap) == 0x000008, "Wrong alignment on YamlNodeHelpers_AsIntBoolMap");
static_assert(sizeof(YamlNodeHelpers_AsIntBoolMap) == 0x0000E8, "Wrong size on YamlNodeHelpers_AsIntBoolMap");
static_assert(offsetof(YamlNodeHelpers_AsIntBoolMap, Node) == 0x000000, "Member 'YamlNodeHelpers_AsIntBoolMap::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsIntBoolMap, Default) == 0x000040, "Member 'YamlNodeHelpers_AsIntBoolMap::Default' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsIntBoolMap, Value) == 0x000090, "Member 'YamlNodeHelpers_AsIntBoolMap::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsIntBoolMap, ReturnValue) == 0x0000E0, "Member 'YamlNodeHelpers_AsIntBoolMap::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.AsIntByteMap
// 0x00E8 (0x00E8 - 0x0000)
struct YamlNodeHelpers_AsIntByteMap final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TMap<int32, uint8>                            Default;                                           // 0x0040(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TMap<int32, uint8>                            Value;                                             // 0x0090(0x0050)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_AsIntByteMap) == 0x000008, "Wrong alignment on YamlNodeHelpers_AsIntByteMap");
static_assert(sizeof(YamlNodeHelpers_AsIntByteMap) == 0x0000E8, "Wrong size on YamlNodeHelpers_AsIntByteMap");
static_assert(offsetof(YamlNodeHelpers_AsIntByteMap, Node) == 0x000000, "Member 'YamlNodeHelpers_AsIntByteMap::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsIntByteMap, Default) == 0x000040, "Member 'YamlNodeHelpers_AsIntByteMap::Default' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsIntByteMap, Value) == 0x000090, "Member 'YamlNodeHelpers_AsIntByteMap::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsIntByteMap, ReturnValue) == 0x0000E0, "Member 'YamlNodeHelpers_AsIntByteMap::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.AsIntFloatMap
// 0x00E8 (0x00E8 - 0x0000)
struct YamlNodeHelpers_AsIntFloatMap final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TMap<int32, float>                            Default;                                           // 0x0040(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TMap<int32, float>                            Value;                                             // 0x0090(0x0050)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_AsIntFloatMap) == 0x000008, "Wrong alignment on YamlNodeHelpers_AsIntFloatMap");
static_assert(sizeof(YamlNodeHelpers_AsIntFloatMap) == 0x0000E8, "Wrong size on YamlNodeHelpers_AsIntFloatMap");
static_assert(offsetof(YamlNodeHelpers_AsIntFloatMap, Node) == 0x000000, "Member 'YamlNodeHelpers_AsIntFloatMap::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsIntFloatMap, Default) == 0x000040, "Member 'YamlNodeHelpers_AsIntFloatMap::Default' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsIntFloatMap, Value) == 0x000090, "Member 'YamlNodeHelpers_AsIntFloatMap::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsIntFloatMap, ReturnValue) == 0x0000E0, "Member 'YamlNodeHelpers_AsIntFloatMap::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.AsIntIntMap
// 0x00E8 (0x00E8 - 0x0000)
struct YamlNodeHelpers_AsIntIntMap final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TMap<int32, int32>                            Default;                                           // 0x0040(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TMap<int32, int32>                            Value;                                             // 0x0090(0x0050)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_AsIntIntMap) == 0x000008, "Wrong alignment on YamlNodeHelpers_AsIntIntMap");
static_assert(sizeof(YamlNodeHelpers_AsIntIntMap) == 0x0000E8, "Wrong size on YamlNodeHelpers_AsIntIntMap");
static_assert(offsetof(YamlNodeHelpers_AsIntIntMap, Node) == 0x000000, "Member 'YamlNodeHelpers_AsIntIntMap::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsIntIntMap, Default) == 0x000040, "Member 'YamlNodeHelpers_AsIntIntMap::Default' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsIntIntMap, Value) == 0x000090, "Member 'YamlNodeHelpers_AsIntIntMap::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsIntIntMap, ReturnValue) == 0x0000E0, "Member 'YamlNodeHelpers_AsIntIntMap::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.AsIntLongMap
// 0x00E8 (0x00E8 - 0x0000)
struct YamlNodeHelpers_AsIntLongMap final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TMap<int32, int64>                            Default;                                           // 0x0040(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TMap<int32, int64>                            Value;                                             // 0x0090(0x0050)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_AsIntLongMap) == 0x000008, "Wrong alignment on YamlNodeHelpers_AsIntLongMap");
static_assert(sizeof(YamlNodeHelpers_AsIntLongMap) == 0x0000E8, "Wrong size on YamlNodeHelpers_AsIntLongMap");
static_assert(offsetof(YamlNodeHelpers_AsIntLongMap, Node) == 0x000000, "Member 'YamlNodeHelpers_AsIntLongMap::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsIntLongMap, Default) == 0x000040, "Member 'YamlNodeHelpers_AsIntLongMap::Default' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsIntLongMap, Value) == 0x000090, "Member 'YamlNodeHelpers_AsIntLongMap::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsIntLongMap, ReturnValue) == 0x0000E0, "Member 'YamlNodeHelpers_AsIntLongMap::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.AsIntQuatMap
// 0x00E8 (0x00E8 - 0x0000)
struct YamlNodeHelpers_AsIntQuatMap final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TMap<int32, struct FQuat>                     Default;                                           // 0x0040(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TMap<int32, struct FQuat>                     Value;                                             // 0x0090(0x0050)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_AsIntQuatMap) == 0x000008, "Wrong alignment on YamlNodeHelpers_AsIntQuatMap");
static_assert(sizeof(YamlNodeHelpers_AsIntQuatMap) == 0x0000E8, "Wrong size on YamlNodeHelpers_AsIntQuatMap");
static_assert(offsetof(YamlNodeHelpers_AsIntQuatMap, Node) == 0x000000, "Member 'YamlNodeHelpers_AsIntQuatMap::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsIntQuatMap, Default) == 0x000040, "Member 'YamlNodeHelpers_AsIntQuatMap::Default' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsIntQuatMap, Value) == 0x000090, "Member 'YamlNodeHelpers_AsIntQuatMap::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsIntQuatMap, ReturnValue) == 0x0000E0, "Member 'YamlNodeHelpers_AsIntQuatMap::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.AsIntStringMap
// 0x00E8 (0x00E8 - 0x0000)
struct YamlNodeHelpers_AsIntStringMap final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TMap<int32, class FString>                    Default;                                           // 0x0040(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TMap<int32, class FString>                    Value;                                             // 0x0090(0x0050)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_AsIntStringMap) == 0x000008, "Wrong alignment on YamlNodeHelpers_AsIntStringMap");
static_assert(sizeof(YamlNodeHelpers_AsIntStringMap) == 0x0000E8, "Wrong size on YamlNodeHelpers_AsIntStringMap");
static_assert(offsetof(YamlNodeHelpers_AsIntStringMap, Node) == 0x000000, "Member 'YamlNodeHelpers_AsIntStringMap::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsIntStringMap, Default) == 0x000040, "Member 'YamlNodeHelpers_AsIntStringMap::Default' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsIntStringMap, Value) == 0x000090, "Member 'YamlNodeHelpers_AsIntStringMap::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsIntStringMap, ReturnValue) == 0x0000E0, "Member 'YamlNodeHelpers_AsIntStringMap::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.AsIntTextMap
// 0x00E8 (0x00E8 - 0x0000)
struct YamlNodeHelpers_AsIntTextMap final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TMap<int32, class FText>                      Default;                                           // 0x0040(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TMap<int32, class FText>                      Value;                                             // 0x0090(0x0050)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_AsIntTextMap) == 0x000008, "Wrong alignment on YamlNodeHelpers_AsIntTextMap");
static_assert(sizeof(YamlNodeHelpers_AsIntTextMap) == 0x0000E8, "Wrong size on YamlNodeHelpers_AsIntTextMap");
static_assert(offsetof(YamlNodeHelpers_AsIntTextMap, Node) == 0x000000, "Member 'YamlNodeHelpers_AsIntTextMap::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsIntTextMap, Default) == 0x000040, "Member 'YamlNodeHelpers_AsIntTextMap::Default' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsIntTextMap, Value) == 0x000090, "Member 'YamlNodeHelpers_AsIntTextMap::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsIntTextMap, ReturnValue) == 0x0000E0, "Member 'YamlNodeHelpers_AsIntTextMap::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.AsIntTransformMap
// 0x00E8 (0x00E8 - 0x0000)
struct YamlNodeHelpers_AsIntTransformMap final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TMap<int32, struct FTransform>                Default;                                           // 0x0040(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TMap<int32, struct FTransform>                Value;                                             // 0x0090(0x0050)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_AsIntTransformMap) == 0x000008, "Wrong alignment on YamlNodeHelpers_AsIntTransformMap");
static_assert(sizeof(YamlNodeHelpers_AsIntTransformMap) == 0x0000E8, "Wrong size on YamlNodeHelpers_AsIntTransformMap");
static_assert(offsetof(YamlNodeHelpers_AsIntTransformMap, Node) == 0x000000, "Member 'YamlNodeHelpers_AsIntTransformMap::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsIntTransformMap, Default) == 0x000040, "Member 'YamlNodeHelpers_AsIntTransformMap::Default' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsIntTransformMap, Value) == 0x000090, "Member 'YamlNodeHelpers_AsIntTransformMap::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsIntTransformMap, ReturnValue) == 0x0000E0, "Member 'YamlNodeHelpers_AsIntTransformMap::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.AsIntVectorMap
// 0x00E8 (0x00E8 - 0x0000)
struct YamlNodeHelpers_AsIntVectorMap final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TMap<int32, struct FVector>                   Default;                                           // 0x0040(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TMap<int32, struct FVector>                   Value;                                             // 0x0090(0x0050)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_AsIntVectorMap) == 0x000008, "Wrong alignment on YamlNodeHelpers_AsIntVectorMap");
static_assert(sizeof(YamlNodeHelpers_AsIntVectorMap) == 0x0000E8, "Wrong size on YamlNodeHelpers_AsIntVectorMap");
static_assert(offsetof(YamlNodeHelpers_AsIntVectorMap, Node) == 0x000000, "Member 'YamlNodeHelpers_AsIntVectorMap::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsIntVectorMap, Default) == 0x000040, "Member 'YamlNodeHelpers_AsIntVectorMap::Default' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsIntVectorMap, Value) == 0x000090, "Member 'YamlNodeHelpers_AsIntVectorMap::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsIntVectorMap, ReturnValue) == 0x0000E0, "Member 'YamlNodeHelpers_AsIntVectorMap::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.AsLong
// 0x0058 (0x0058 - 0x0000)
struct YamlNodeHelpers_AsLong final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int64                                         Default;                                           // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         Value;                                             // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_AsLong) == 0x000008, "Wrong alignment on YamlNodeHelpers_AsLong");
static_assert(sizeof(YamlNodeHelpers_AsLong) == 0x000058, "Wrong size on YamlNodeHelpers_AsLong");
static_assert(offsetof(YamlNodeHelpers_AsLong, Node) == 0x000000, "Member 'YamlNodeHelpers_AsLong::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsLong, Default) == 0x000040, "Member 'YamlNodeHelpers_AsLong::Default' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsLong, Value) == 0x000048, "Member 'YamlNodeHelpers_AsLong::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsLong, ReturnValue) == 0x000050, "Member 'YamlNodeHelpers_AsLong::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.AsLongArray
// 0x0068 (0x0068 - 0x0000)
struct YamlNodeHelpers_AsLongArray final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<int64>                                 Default;                                           // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<int64>                                 Value;                                             // 0x0050(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_AsLongArray) == 0x000008, "Wrong alignment on YamlNodeHelpers_AsLongArray");
static_assert(sizeof(YamlNodeHelpers_AsLongArray) == 0x000068, "Wrong size on YamlNodeHelpers_AsLongArray");
static_assert(offsetof(YamlNodeHelpers_AsLongArray, Node) == 0x000000, "Member 'YamlNodeHelpers_AsLongArray::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsLongArray, Default) == 0x000040, "Member 'YamlNodeHelpers_AsLongArray::Default' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsLongArray, Value) == 0x000050, "Member 'YamlNodeHelpers_AsLongArray::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsLongArray, ReturnValue) == 0x000060, "Member 'YamlNodeHelpers_AsLongArray::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.AsQuat
// 0x0090 (0x0090 - 0x0000)
struct YamlNodeHelpers_AsQuat final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FQuat                                  Default;                                           // 0x0040(0x0020)(Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FQuat                                  Value;                                             // 0x0060(0x0020)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0080(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0xF];                                       // 0x0081(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_AsQuat) == 0x000010, "Wrong alignment on YamlNodeHelpers_AsQuat");
static_assert(sizeof(YamlNodeHelpers_AsQuat) == 0x000090, "Wrong size on YamlNodeHelpers_AsQuat");
static_assert(offsetof(YamlNodeHelpers_AsQuat, Node) == 0x000000, "Member 'YamlNodeHelpers_AsQuat::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsQuat, Default) == 0x000040, "Member 'YamlNodeHelpers_AsQuat::Default' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsQuat, Value) == 0x000060, "Member 'YamlNodeHelpers_AsQuat::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsQuat, ReturnValue) == 0x000080, "Member 'YamlNodeHelpers_AsQuat::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.AsQuatArray
// 0x0068 (0x0068 - 0x0000)
struct YamlNodeHelpers_AsQuatArray final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<struct FQuat>                          Default;                                           // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<struct FQuat>                          Value;                                             // 0x0050(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_AsQuatArray) == 0x000008, "Wrong alignment on YamlNodeHelpers_AsQuatArray");
static_assert(sizeof(YamlNodeHelpers_AsQuatArray) == 0x000068, "Wrong size on YamlNodeHelpers_AsQuatArray");
static_assert(offsetof(YamlNodeHelpers_AsQuatArray, Node) == 0x000000, "Member 'YamlNodeHelpers_AsQuatArray::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsQuatArray, Default) == 0x000040, "Member 'YamlNodeHelpers_AsQuatArray::Default' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsQuatArray, Value) == 0x000050, "Member 'YamlNodeHelpers_AsQuatArray::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsQuatArray, ReturnValue) == 0x000060, "Member 'YamlNodeHelpers_AsQuatArray::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.AsString
// 0x0068 (0x0068 - 0x0000)
struct YamlNodeHelpers_AsString final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Default;                                           // 0x0040(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Value;                                             // 0x0050(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_AsString) == 0x000008, "Wrong alignment on YamlNodeHelpers_AsString");
static_assert(sizeof(YamlNodeHelpers_AsString) == 0x000068, "Wrong size on YamlNodeHelpers_AsString");
static_assert(offsetof(YamlNodeHelpers_AsString, Node) == 0x000000, "Member 'YamlNodeHelpers_AsString::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsString, Default) == 0x000040, "Member 'YamlNodeHelpers_AsString::Default' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsString, Value) == 0x000050, "Member 'YamlNodeHelpers_AsString::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsString, ReturnValue) == 0x000060, "Member 'YamlNodeHelpers_AsString::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.AsStringArray
// 0x0068 (0x0068 - 0x0000)
struct YamlNodeHelpers_AsStringArray final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class FString>                         Default;                                           // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class FString>                         Value;                                             // 0x0050(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_AsStringArray) == 0x000008, "Wrong alignment on YamlNodeHelpers_AsStringArray");
static_assert(sizeof(YamlNodeHelpers_AsStringArray) == 0x000068, "Wrong size on YamlNodeHelpers_AsStringArray");
static_assert(offsetof(YamlNodeHelpers_AsStringArray, Node) == 0x000000, "Member 'YamlNodeHelpers_AsStringArray::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsStringArray, Default) == 0x000040, "Member 'YamlNodeHelpers_AsStringArray::Default' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsStringArray, Value) == 0x000050, "Member 'YamlNodeHelpers_AsStringArray::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsStringArray, ReturnValue) == 0x000060, "Member 'YamlNodeHelpers_AsStringArray::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.AsStringBoolMap
// 0x00E8 (0x00E8 - 0x0000)
struct YamlNodeHelpers_AsStringBoolMap final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TMap<class FString, bool>                     Default;                                           // 0x0040(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TMap<class FString, bool>                     Value;                                             // 0x0090(0x0050)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_AsStringBoolMap) == 0x000008, "Wrong alignment on YamlNodeHelpers_AsStringBoolMap");
static_assert(sizeof(YamlNodeHelpers_AsStringBoolMap) == 0x0000E8, "Wrong size on YamlNodeHelpers_AsStringBoolMap");
static_assert(offsetof(YamlNodeHelpers_AsStringBoolMap, Node) == 0x000000, "Member 'YamlNodeHelpers_AsStringBoolMap::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsStringBoolMap, Default) == 0x000040, "Member 'YamlNodeHelpers_AsStringBoolMap::Default' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsStringBoolMap, Value) == 0x000090, "Member 'YamlNodeHelpers_AsStringBoolMap::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsStringBoolMap, ReturnValue) == 0x0000E0, "Member 'YamlNodeHelpers_AsStringBoolMap::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.AsStringByteMap
// 0x00E8 (0x00E8 - 0x0000)
struct YamlNodeHelpers_AsStringByteMap final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TMap<class FString, uint8>                    Default;                                           // 0x0040(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TMap<class FString, uint8>                    Value;                                             // 0x0090(0x0050)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_AsStringByteMap) == 0x000008, "Wrong alignment on YamlNodeHelpers_AsStringByteMap");
static_assert(sizeof(YamlNodeHelpers_AsStringByteMap) == 0x0000E8, "Wrong size on YamlNodeHelpers_AsStringByteMap");
static_assert(offsetof(YamlNodeHelpers_AsStringByteMap, Node) == 0x000000, "Member 'YamlNodeHelpers_AsStringByteMap::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsStringByteMap, Default) == 0x000040, "Member 'YamlNodeHelpers_AsStringByteMap::Default' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsStringByteMap, Value) == 0x000090, "Member 'YamlNodeHelpers_AsStringByteMap::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsStringByteMap, ReturnValue) == 0x0000E0, "Member 'YamlNodeHelpers_AsStringByteMap::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.AsStringFloatMap
// 0x00E8 (0x00E8 - 0x0000)
struct YamlNodeHelpers_AsStringFloatMap final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TMap<class FString, float>                    Default;                                           // 0x0040(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TMap<class FString, float>                    Value;                                             // 0x0090(0x0050)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_AsStringFloatMap) == 0x000008, "Wrong alignment on YamlNodeHelpers_AsStringFloatMap");
static_assert(sizeof(YamlNodeHelpers_AsStringFloatMap) == 0x0000E8, "Wrong size on YamlNodeHelpers_AsStringFloatMap");
static_assert(offsetof(YamlNodeHelpers_AsStringFloatMap, Node) == 0x000000, "Member 'YamlNodeHelpers_AsStringFloatMap::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsStringFloatMap, Default) == 0x000040, "Member 'YamlNodeHelpers_AsStringFloatMap::Default' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsStringFloatMap, Value) == 0x000090, "Member 'YamlNodeHelpers_AsStringFloatMap::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsStringFloatMap, ReturnValue) == 0x0000E0, "Member 'YamlNodeHelpers_AsStringFloatMap::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.AsStringIntMap
// 0x00E8 (0x00E8 - 0x0000)
struct YamlNodeHelpers_AsStringIntMap final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TMap<class FString, int32>                    Default;                                           // 0x0040(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TMap<class FString, int32>                    Value;                                             // 0x0090(0x0050)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_AsStringIntMap) == 0x000008, "Wrong alignment on YamlNodeHelpers_AsStringIntMap");
static_assert(sizeof(YamlNodeHelpers_AsStringIntMap) == 0x0000E8, "Wrong size on YamlNodeHelpers_AsStringIntMap");
static_assert(offsetof(YamlNodeHelpers_AsStringIntMap, Node) == 0x000000, "Member 'YamlNodeHelpers_AsStringIntMap::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsStringIntMap, Default) == 0x000040, "Member 'YamlNodeHelpers_AsStringIntMap::Default' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsStringIntMap, Value) == 0x000090, "Member 'YamlNodeHelpers_AsStringIntMap::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsStringIntMap, ReturnValue) == 0x0000E0, "Member 'YamlNodeHelpers_AsStringIntMap::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.AsStringLongMap
// 0x00E8 (0x00E8 - 0x0000)
struct YamlNodeHelpers_AsStringLongMap final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TMap<class FString, int64>                    Default;                                           // 0x0040(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TMap<class FString, int64>                    Value;                                             // 0x0090(0x0050)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_AsStringLongMap) == 0x000008, "Wrong alignment on YamlNodeHelpers_AsStringLongMap");
static_assert(sizeof(YamlNodeHelpers_AsStringLongMap) == 0x0000E8, "Wrong size on YamlNodeHelpers_AsStringLongMap");
static_assert(offsetof(YamlNodeHelpers_AsStringLongMap, Node) == 0x000000, "Member 'YamlNodeHelpers_AsStringLongMap::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsStringLongMap, Default) == 0x000040, "Member 'YamlNodeHelpers_AsStringLongMap::Default' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsStringLongMap, Value) == 0x000090, "Member 'YamlNodeHelpers_AsStringLongMap::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsStringLongMap, ReturnValue) == 0x0000E0, "Member 'YamlNodeHelpers_AsStringLongMap::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.AsStringQuatMap
// 0x00E8 (0x00E8 - 0x0000)
struct YamlNodeHelpers_AsStringQuatMap final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TMap<class FString, struct FQuat>             Default;                                           // 0x0040(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TMap<class FString, struct FQuat>             Value;                                             // 0x0090(0x0050)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_AsStringQuatMap) == 0x000008, "Wrong alignment on YamlNodeHelpers_AsStringQuatMap");
static_assert(sizeof(YamlNodeHelpers_AsStringQuatMap) == 0x0000E8, "Wrong size on YamlNodeHelpers_AsStringQuatMap");
static_assert(offsetof(YamlNodeHelpers_AsStringQuatMap, Node) == 0x000000, "Member 'YamlNodeHelpers_AsStringQuatMap::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsStringQuatMap, Default) == 0x000040, "Member 'YamlNodeHelpers_AsStringQuatMap::Default' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsStringQuatMap, Value) == 0x000090, "Member 'YamlNodeHelpers_AsStringQuatMap::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsStringQuatMap, ReturnValue) == 0x0000E0, "Member 'YamlNodeHelpers_AsStringQuatMap::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.AsStringStringMap
// 0x00E8 (0x00E8 - 0x0000)
struct YamlNodeHelpers_AsStringStringMap final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>            Default;                                           // 0x0040(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>            Value;                                             // 0x0090(0x0050)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_AsStringStringMap) == 0x000008, "Wrong alignment on YamlNodeHelpers_AsStringStringMap");
static_assert(sizeof(YamlNodeHelpers_AsStringStringMap) == 0x0000E8, "Wrong size on YamlNodeHelpers_AsStringStringMap");
static_assert(offsetof(YamlNodeHelpers_AsStringStringMap, Node) == 0x000000, "Member 'YamlNodeHelpers_AsStringStringMap::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsStringStringMap, Default) == 0x000040, "Member 'YamlNodeHelpers_AsStringStringMap::Default' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsStringStringMap, Value) == 0x000090, "Member 'YamlNodeHelpers_AsStringStringMap::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsStringStringMap, ReturnValue) == 0x0000E0, "Member 'YamlNodeHelpers_AsStringStringMap::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.AsStringTextMap
// 0x00E8 (0x00E8 - 0x0000)
struct YamlNodeHelpers_AsStringTextMap final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TMap<class FString, class FText>              Default;                                           // 0x0040(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TMap<class FString, class FText>              Value;                                             // 0x0090(0x0050)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_AsStringTextMap) == 0x000008, "Wrong alignment on YamlNodeHelpers_AsStringTextMap");
static_assert(sizeof(YamlNodeHelpers_AsStringTextMap) == 0x0000E8, "Wrong size on YamlNodeHelpers_AsStringTextMap");
static_assert(offsetof(YamlNodeHelpers_AsStringTextMap, Node) == 0x000000, "Member 'YamlNodeHelpers_AsStringTextMap::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsStringTextMap, Default) == 0x000040, "Member 'YamlNodeHelpers_AsStringTextMap::Default' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsStringTextMap, Value) == 0x000090, "Member 'YamlNodeHelpers_AsStringTextMap::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsStringTextMap, ReturnValue) == 0x0000E0, "Member 'YamlNodeHelpers_AsStringTextMap::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.AsStringTransformMap
// 0x00E8 (0x00E8 - 0x0000)
struct YamlNodeHelpers_AsStringTransformMap final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TMap<class FString, struct FTransform>        Default;                                           // 0x0040(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TMap<class FString, struct FTransform>        Value;                                             // 0x0090(0x0050)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_AsStringTransformMap) == 0x000008, "Wrong alignment on YamlNodeHelpers_AsStringTransformMap");
static_assert(sizeof(YamlNodeHelpers_AsStringTransformMap) == 0x0000E8, "Wrong size on YamlNodeHelpers_AsStringTransformMap");
static_assert(offsetof(YamlNodeHelpers_AsStringTransformMap, Node) == 0x000000, "Member 'YamlNodeHelpers_AsStringTransformMap::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsStringTransformMap, Default) == 0x000040, "Member 'YamlNodeHelpers_AsStringTransformMap::Default' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsStringTransformMap, Value) == 0x000090, "Member 'YamlNodeHelpers_AsStringTransformMap::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsStringTransformMap, ReturnValue) == 0x0000E0, "Member 'YamlNodeHelpers_AsStringTransformMap::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.AsStringVectorMap
// 0x00E8 (0x00E8 - 0x0000)
struct YamlNodeHelpers_AsStringVectorMap final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TMap<class FString, struct FVector>           Default;                                           // 0x0040(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TMap<class FString, struct FVector>           Value;                                             // 0x0090(0x0050)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_AsStringVectorMap) == 0x000008, "Wrong alignment on YamlNodeHelpers_AsStringVectorMap");
static_assert(sizeof(YamlNodeHelpers_AsStringVectorMap) == 0x0000E8, "Wrong size on YamlNodeHelpers_AsStringVectorMap");
static_assert(offsetof(YamlNodeHelpers_AsStringVectorMap, Node) == 0x000000, "Member 'YamlNodeHelpers_AsStringVectorMap::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsStringVectorMap, Default) == 0x000040, "Member 'YamlNodeHelpers_AsStringVectorMap::Default' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsStringVectorMap, Value) == 0x000090, "Member 'YamlNodeHelpers_AsStringVectorMap::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsStringVectorMap, ReturnValue) == 0x0000E0, "Member 'YamlNodeHelpers_AsStringVectorMap::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.AsText
// 0x0068 (0x0068 - 0x0000)
struct YamlNodeHelpers_AsText final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FText                                   Default;                                           // 0x0040(0x0010)(Parm, NativeAccessSpecifierPublic)
	class FText                                   Value;                                             // 0x0050(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_AsText) == 0x000008, "Wrong alignment on YamlNodeHelpers_AsText");
static_assert(sizeof(YamlNodeHelpers_AsText) == 0x000068, "Wrong size on YamlNodeHelpers_AsText");
static_assert(offsetof(YamlNodeHelpers_AsText, Node) == 0x000000, "Member 'YamlNodeHelpers_AsText::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsText, Default) == 0x000040, "Member 'YamlNodeHelpers_AsText::Default' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsText, Value) == 0x000050, "Member 'YamlNodeHelpers_AsText::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsText, ReturnValue) == 0x000060, "Member 'YamlNodeHelpers_AsText::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.AsTextArray
// 0x0068 (0x0068 - 0x0000)
struct YamlNodeHelpers_AsTextArray final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class FText>                           Default;                                           // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class FText>                           Value;                                             // 0x0050(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_AsTextArray) == 0x000008, "Wrong alignment on YamlNodeHelpers_AsTextArray");
static_assert(sizeof(YamlNodeHelpers_AsTextArray) == 0x000068, "Wrong size on YamlNodeHelpers_AsTextArray");
static_assert(offsetof(YamlNodeHelpers_AsTextArray, Node) == 0x000000, "Member 'YamlNodeHelpers_AsTextArray::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsTextArray, Default) == 0x000040, "Member 'YamlNodeHelpers_AsTextArray::Default' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsTextArray, Value) == 0x000050, "Member 'YamlNodeHelpers_AsTextArray::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsTextArray, ReturnValue) == 0x000060, "Member 'YamlNodeHelpers_AsTextArray::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.AsTransform
// 0x0110 (0x0110 - 0x0000)
struct YamlNodeHelpers_AsTransform final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FTransform                             Default;                                           // 0x0040(0x0060)(Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             Value;                                             // 0x00A0(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0100(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_101[0xF];                                      // 0x0101(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_AsTransform) == 0x000010, "Wrong alignment on YamlNodeHelpers_AsTransform");
static_assert(sizeof(YamlNodeHelpers_AsTransform) == 0x000110, "Wrong size on YamlNodeHelpers_AsTransform");
static_assert(offsetof(YamlNodeHelpers_AsTransform, Node) == 0x000000, "Member 'YamlNodeHelpers_AsTransform::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsTransform, Default) == 0x000040, "Member 'YamlNodeHelpers_AsTransform::Default' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsTransform, Value) == 0x0000A0, "Member 'YamlNodeHelpers_AsTransform::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsTransform, ReturnValue) == 0x000100, "Member 'YamlNodeHelpers_AsTransform::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.AsTransformArray
// 0x0068 (0x0068 - 0x0000)
struct YamlNodeHelpers_AsTransformArray final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<struct FTransform>                     Default;                                           // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<struct FTransform>                     Value;                                             // 0x0050(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_AsTransformArray) == 0x000008, "Wrong alignment on YamlNodeHelpers_AsTransformArray");
static_assert(sizeof(YamlNodeHelpers_AsTransformArray) == 0x000068, "Wrong size on YamlNodeHelpers_AsTransformArray");
static_assert(offsetof(YamlNodeHelpers_AsTransformArray, Node) == 0x000000, "Member 'YamlNodeHelpers_AsTransformArray::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsTransformArray, Default) == 0x000040, "Member 'YamlNodeHelpers_AsTransformArray::Default' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsTransformArray, Value) == 0x000050, "Member 'YamlNodeHelpers_AsTransformArray::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsTransformArray, ReturnValue) == 0x000060, "Member 'YamlNodeHelpers_AsTransformArray::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.AsVector
// 0x0078 (0x0078 - 0x0000)
struct YamlNodeHelpers_AsVector final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FVector                                Default;                                           // 0x0040(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Value;                                             // 0x0058(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_AsVector) == 0x000008, "Wrong alignment on YamlNodeHelpers_AsVector");
static_assert(sizeof(YamlNodeHelpers_AsVector) == 0x000078, "Wrong size on YamlNodeHelpers_AsVector");
static_assert(offsetof(YamlNodeHelpers_AsVector, Node) == 0x000000, "Member 'YamlNodeHelpers_AsVector::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsVector, Default) == 0x000040, "Member 'YamlNodeHelpers_AsVector::Default' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsVector, Value) == 0x000058, "Member 'YamlNodeHelpers_AsVector::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsVector, ReturnValue) == 0x000070, "Member 'YamlNodeHelpers_AsVector::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.AsVectorArray
// 0x0068 (0x0068 - 0x0000)
struct YamlNodeHelpers_AsVectorArray final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<struct FVector>                        Default;                                           // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<struct FVector>                        Value;                                             // 0x0050(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_AsVectorArray) == 0x000008, "Wrong alignment on YamlNodeHelpers_AsVectorArray");
static_assert(sizeof(YamlNodeHelpers_AsVectorArray) == 0x000068, "Wrong size on YamlNodeHelpers_AsVectorArray");
static_assert(offsetof(YamlNodeHelpers_AsVectorArray, Node) == 0x000000, "Member 'YamlNodeHelpers_AsVectorArray::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsVectorArray, Default) == 0x000040, "Member 'YamlNodeHelpers_AsVectorArray::Default' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsVectorArray, Value) == 0x000050, "Member 'YamlNodeHelpers_AsVectorArray::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_AsVectorArray, ReturnValue) == 0x000060, "Member 'YamlNodeHelpers_AsVectorArray::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.Equal
// 0x0088 (0x0088 - 0x0000)
struct YamlNodeHelpers_Equal final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FYamlNode                              Other;                                             // 0x0040(0x0040)(ConstParm, Parm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0080(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_Equal) == 0x000008, "Wrong alignment on YamlNodeHelpers_Equal");
static_assert(sizeof(YamlNodeHelpers_Equal) == 0x000088, "Wrong size on YamlNodeHelpers_Equal");
static_assert(offsetof(YamlNodeHelpers_Equal, Node) == 0x000000, "Member 'YamlNodeHelpers_Equal::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_Equal, Other) == 0x000040, "Member 'YamlNodeHelpers_Equal::Other' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_Equal, ReturnValue) == 0x000080, "Member 'YamlNodeHelpers_Equal::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.Get
// 0x0090 (0x0090 - 0x0000)
struct YamlNodeHelpers_Get final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0040(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FYamlNode                              ReturnValue;                                       // 0x0050(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlNodeHelpers_Get) == 0x000008, "Wrong alignment on YamlNodeHelpers_Get");
static_assert(sizeof(YamlNodeHelpers_Get) == 0x000090, "Wrong size on YamlNodeHelpers_Get");
static_assert(offsetof(YamlNodeHelpers_Get, Node) == 0x000000, "Member 'YamlNodeHelpers_Get::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_Get, Key) == 0x000040, "Member 'YamlNodeHelpers_Get::Key' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_Get, ReturnValue) == 0x000050, "Member 'YamlNodeHelpers_Get::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.GetContent
// 0x0050 (0x0050 - 0x0000)
struct YamlNodeHelpers_GetContent final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0040(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlNodeHelpers_GetContent) == 0x000008, "Wrong alignment on YamlNodeHelpers_GetContent");
static_assert(sizeof(YamlNodeHelpers_GetContent) == 0x000050, "Wrong size on YamlNodeHelpers_GetContent");
static_assert(offsetof(YamlNodeHelpers_GetContent, Node) == 0x000000, "Member 'YamlNodeHelpers_GetContent::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_GetContent, ReturnValue) == 0x000040, "Member 'YamlNodeHelpers_GetContent::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.GetIndex
// 0x0088 (0x0088 - 0x0000)
struct YamlNodeHelpers_GetIndex final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0040(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FYamlNode                              ReturnValue;                                       // 0x0048(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlNodeHelpers_GetIndex) == 0x000008, "Wrong alignment on YamlNodeHelpers_GetIndex");
static_assert(sizeof(YamlNodeHelpers_GetIndex) == 0x000088, "Wrong size on YamlNodeHelpers_GetIndex");
static_assert(offsetof(YamlNodeHelpers_GetIndex, Node) == 0x000000, "Member 'YamlNodeHelpers_GetIndex::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_GetIndex, Index_0) == 0x000040, "Member 'YamlNodeHelpers_GetIndex::Index_0' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_GetIndex, ReturnValue) == 0x000048, "Member 'YamlNodeHelpers_GetIndex::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.IsDefined
// 0x0048 (0x0048 - 0x0000)
struct YamlNodeHelpers_IsDefined final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_IsDefined) == 0x000008, "Wrong alignment on YamlNodeHelpers_IsDefined");
static_assert(sizeof(YamlNodeHelpers_IsDefined) == 0x000048, "Wrong size on YamlNodeHelpers_IsDefined");
static_assert(offsetof(YamlNodeHelpers_IsDefined, Node) == 0x000000, "Member 'YamlNodeHelpers_IsDefined::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_IsDefined, ReturnValue) == 0x000040, "Member 'YamlNodeHelpers_IsDefined::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.IsMap
// 0x0048 (0x0048 - 0x0000)
struct YamlNodeHelpers_IsMap final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_IsMap) == 0x000008, "Wrong alignment on YamlNodeHelpers_IsMap");
static_assert(sizeof(YamlNodeHelpers_IsMap) == 0x000048, "Wrong size on YamlNodeHelpers_IsMap");
static_assert(offsetof(YamlNodeHelpers_IsMap, Node) == 0x000000, "Member 'YamlNodeHelpers_IsMap::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_IsMap, ReturnValue) == 0x000040, "Member 'YamlNodeHelpers_IsMap::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.IsNull
// 0x0048 (0x0048 - 0x0000)
struct YamlNodeHelpers_IsNull final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_IsNull) == 0x000008, "Wrong alignment on YamlNodeHelpers_IsNull");
static_assert(sizeof(YamlNodeHelpers_IsNull) == 0x000048, "Wrong size on YamlNodeHelpers_IsNull");
static_assert(offsetof(YamlNodeHelpers_IsNull, Node) == 0x000000, "Member 'YamlNodeHelpers_IsNull::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_IsNull, ReturnValue) == 0x000040, "Member 'YamlNodeHelpers_IsNull::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.IsScalar
// 0x0048 (0x0048 - 0x0000)
struct YamlNodeHelpers_IsScalar final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_IsScalar) == 0x000008, "Wrong alignment on YamlNodeHelpers_IsScalar");
static_assert(sizeof(YamlNodeHelpers_IsScalar) == 0x000048, "Wrong size on YamlNodeHelpers_IsScalar");
static_assert(offsetof(YamlNodeHelpers_IsScalar, Node) == 0x000000, "Member 'YamlNodeHelpers_IsScalar::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_IsScalar, ReturnValue) == 0x000040, "Member 'YamlNodeHelpers_IsScalar::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.IsSequence
// 0x0048 (0x0048 - 0x0000)
struct YamlNodeHelpers_IsSequence final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_IsSequence) == 0x000008, "Wrong alignment on YamlNodeHelpers_IsSequence");
static_assert(sizeof(YamlNodeHelpers_IsSequence) == 0x000048, "Wrong size on YamlNodeHelpers_IsSequence");
static_assert(offsetof(YamlNodeHelpers_IsSequence, Node) == 0x000000, "Member 'YamlNodeHelpers_IsSequence::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_IsSequence, ReturnValue) == 0x000040, "Member 'YamlNodeHelpers_IsSequence::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.MakeFromBool
// 0x0048 (0x0048 - 0x0000)
struct YamlNodeHelpers_MakeFromBool final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FYamlNode                              ReturnValue;                                       // 0x0008(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlNodeHelpers_MakeFromBool) == 0x000008, "Wrong alignment on YamlNodeHelpers_MakeFromBool");
static_assert(sizeof(YamlNodeHelpers_MakeFromBool) == 0x000048, "Wrong size on YamlNodeHelpers_MakeFromBool");
static_assert(offsetof(YamlNodeHelpers_MakeFromBool, Value) == 0x000000, "Member 'YamlNodeHelpers_MakeFromBool::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_MakeFromBool, ReturnValue) == 0x000008, "Member 'YamlNodeHelpers_MakeFromBool::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.MakeFromBoolArray
// 0x0050 (0x0050 - 0x0000)
struct YamlNodeHelpers_MakeFromBoolArray final
{
public:
	TArray<bool>                                  Value;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FYamlNode                              ReturnValue;                                       // 0x0010(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlNodeHelpers_MakeFromBoolArray) == 0x000008, "Wrong alignment on YamlNodeHelpers_MakeFromBoolArray");
static_assert(sizeof(YamlNodeHelpers_MakeFromBoolArray) == 0x000050, "Wrong size on YamlNodeHelpers_MakeFromBoolArray");
static_assert(offsetof(YamlNodeHelpers_MakeFromBoolArray, Value) == 0x000000, "Member 'YamlNodeHelpers_MakeFromBoolArray::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_MakeFromBoolArray, ReturnValue) == 0x000010, "Member 'YamlNodeHelpers_MakeFromBoolArray::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.MakeFromByte
// 0x0048 (0x0048 - 0x0000)
struct YamlNodeHelpers_MakeFromByte final
{
public:
	uint8                                         Value;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FYamlNode                              ReturnValue;                                       // 0x0008(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlNodeHelpers_MakeFromByte) == 0x000008, "Wrong alignment on YamlNodeHelpers_MakeFromByte");
static_assert(sizeof(YamlNodeHelpers_MakeFromByte) == 0x000048, "Wrong size on YamlNodeHelpers_MakeFromByte");
static_assert(offsetof(YamlNodeHelpers_MakeFromByte, Value) == 0x000000, "Member 'YamlNodeHelpers_MakeFromByte::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_MakeFromByte, ReturnValue) == 0x000008, "Member 'YamlNodeHelpers_MakeFromByte::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.MakeFromByteArray
// 0x0050 (0x0050 - 0x0000)
struct YamlNodeHelpers_MakeFromByteArray final
{
public:
	TArray<uint8>                                 Value;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FYamlNode                              ReturnValue;                                       // 0x0010(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlNodeHelpers_MakeFromByteArray) == 0x000008, "Wrong alignment on YamlNodeHelpers_MakeFromByteArray");
static_assert(sizeof(YamlNodeHelpers_MakeFromByteArray) == 0x000050, "Wrong size on YamlNodeHelpers_MakeFromByteArray");
static_assert(offsetof(YamlNodeHelpers_MakeFromByteArray, Value) == 0x000000, "Member 'YamlNodeHelpers_MakeFromByteArray::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_MakeFromByteArray, ReturnValue) == 0x000010, "Member 'YamlNodeHelpers_MakeFromByteArray::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.MakeFromFloat
// 0x0048 (0x0048 - 0x0000)
struct YamlNodeHelpers_MakeFromFloat final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FYamlNode                              ReturnValue;                                       // 0x0008(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlNodeHelpers_MakeFromFloat) == 0x000008, "Wrong alignment on YamlNodeHelpers_MakeFromFloat");
static_assert(sizeof(YamlNodeHelpers_MakeFromFloat) == 0x000048, "Wrong size on YamlNodeHelpers_MakeFromFloat");
static_assert(offsetof(YamlNodeHelpers_MakeFromFloat, Value) == 0x000000, "Member 'YamlNodeHelpers_MakeFromFloat::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_MakeFromFloat, ReturnValue) == 0x000008, "Member 'YamlNodeHelpers_MakeFromFloat::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.MakeFromFloatArray
// 0x0050 (0x0050 - 0x0000)
struct YamlNodeHelpers_MakeFromFloatArray final
{
public:
	TArray<float>                                 Value;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FYamlNode                              ReturnValue;                                       // 0x0010(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlNodeHelpers_MakeFromFloatArray) == 0x000008, "Wrong alignment on YamlNodeHelpers_MakeFromFloatArray");
static_assert(sizeof(YamlNodeHelpers_MakeFromFloatArray) == 0x000050, "Wrong size on YamlNodeHelpers_MakeFromFloatArray");
static_assert(offsetof(YamlNodeHelpers_MakeFromFloatArray, Value) == 0x000000, "Member 'YamlNodeHelpers_MakeFromFloatArray::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_MakeFromFloatArray, ReturnValue) == 0x000010, "Member 'YamlNodeHelpers_MakeFromFloatArray::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.MakeFromInt
// 0x0048 (0x0048 - 0x0000)
struct YamlNodeHelpers_MakeFromInt final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FYamlNode                              ReturnValue;                                       // 0x0008(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlNodeHelpers_MakeFromInt) == 0x000008, "Wrong alignment on YamlNodeHelpers_MakeFromInt");
static_assert(sizeof(YamlNodeHelpers_MakeFromInt) == 0x000048, "Wrong size on YamlNodeHelpers_MakeFromInt");
static_assert(offsetof(YamlNodeHelpers_MakeFromInt, Value) == 0x000000, "Member 'YamlNodeHelpers_MakeFromInt::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_MakeFromInt, ReturnValue) == 0x000008, "Member 'YamlNodeHelpers_MakeFromInt::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.MakeFromIntArray
// 0x0050 (0x0050 - 0x0000)
struct YamlNodeHelpers_MakeFromIntArray final
{
public:
	TArray<int32>                                 Value;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FYamlNode                              ReturnValue;                                       // 0x0010(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlNodeHelpers_MakeFromIntArray) == 0x000008, "Wrong alignment on YamlNodeHelpers_MakeFromIntArray");
static_assert(sizeof(YamlNodeHelpers_MakeFromIntArray) == 0x000050, "Wrong size on YamlNodeHelpers_MakeFromIntArray");
static_assert(offsetof(YamlNodeHelpers_MakeFromIntArray, Value) == 0x000000, "Member 'YamlNodeHelpers_MakeFromIntArray::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_MakeFromIntArray, ReturnValue) == 0x000010, "Member 'YamlNodeHelpers_MakeFromIntArray::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.MakeFromIntBoolMap
// 0x0090 (0x0090 - 0x0000)
struct YamlNodeHelpers_MakeFromIntBoolMap final
{
public:
	TMap<int32, bool>                             Value;                                             // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FYamlNode                              ReturnValue;                                       // 0x0050(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlNodeHelpers_MakeFromIntBoolMap) == 0x000008, "Wrong alignment on YamlNodeHelpers_MakeFromIntBoolMap");
static_assert(sizeof(YamlNodeHelpers_MakeFromIntBoolMap) == 0x000090, "Wrong size on YamlNodeHelpers_MakeFromIntBoolMap");
static_assert(offsetof(YamlNodeHelpers_MakeFromIntBoolMap, Value) == 0x000000, "Member 'YamlNodeHelpers_MakeFromIntBoolMap::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_MakeFromIntBoolMap, ReturnValue) == 0x000050, "Member 'YamlNodeHelpers_MakeFromIntBoolMap::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.MakeFromIntByteMap
// 0x0090 (0x0090 - 0x0000)
struct YamlNodeHelpers_MakeFromIntByteMap final
{
public:
	TMap<int32, uint8>                            Value;                                             // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FYamlNode                              ReturnValue;                                       // 0x0050(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlNodeHelpers_MakeFromIntByteMap) == 0x000008, "Wrong alignment on YamlNodeHelpers_MakeFromIntByteMap");
static_assert(sizeof(YamlNodeHelpers_MakeFromIntByteMap) == 0x000090, "Wrong size on YamlNodeHelpers_MakeFromIntByteMap");
static_assert(offsetof(YamlNodeHelpers_MakeFromIntByteMap, Value) == 0x000000, "Member 'YamlNodeHelpers_MakeFromIntByteMap::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_MakeFromIntByteMap, ReturnValue) == 0x000050, "Member 'YamlNodeHelpers_MakeFromIntByteMap::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.MakeFromIntFloatMap
// 0x0090 (0x0090 - 0x0000)
struct YamlNodeHelpers_MakeFromIntFloatMap final
{
public:
	TMap<int32, float>                            Value;                                             // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FYamlNode                              ReturnValue;                                       // 0x0050(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlNodeHelpers_MakeFromIntFloatMap) == 0x000008, "Wrong alignment on YamlNodeHelpers_MakeFromIntFloatMap");
static_assert(sizeof(YamlNodeHelpers_MakeFromIntFloatMap) == 0x000090, "Wrong size on YamlNodeHelpers_MakeFromIntFloatMap");
static_assert(offsetof(YamlNodeHelpers_MakeFromIntFloatMap, Value) == 0x000000, "Member 'YamlNodeHelpers_MakeFromIntFloatMap::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_MakeFromIntFloatMap, ReturnValue) == 0x000050, "Member 'YamlNodeHelpers_MakeFromIntFloatMap::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.MakeFromIntIntMap
// 0x0090 (0x0090 - 0x0000)
struct YamlNodeHelpers_MakeFromIntIntMap final
{
public:
	TMap<int32, int32>                            Value;                                             // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FYamlNode                              ReturnValue;                                       // 0x0050(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlNodeHelpers_MakeFromIntIntMap) == 0x000008, "Wrong alignment on YamlNodeHelpers_MakeFromIntIntMap");
static_assert(sizeof(YamlNodeHelpers_MakeFromIntIntMap) == 0x000090, "Wrong size on YamlNodeHelpers_MakeFromIntIntMap");
static_assert(offsetof(YamlNodeHelpers_MakeFromIntIntMap, Value) == 0x000000, "Member 'YamlNodeHelpers_MakeFromIntIntMap::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_MakeFromIntIntMap, ReturnValue) == 0x000050, "Member 'YamlNodeHelpers_MakeFromIntIntMap::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.MakeFromIntLongMap
// 0x0090 (0x0090 - 0x0000)
struct YamlNodeHelpers_MakeFromIntLongMap final
{
public:
	TMap<int32, int64>                            Value;                                             // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FYamlNode                              ReturnValue;                                       // 0x0050(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlNodeHelpers_MakeFromIntLongMap) == 0x000008, "Wrong alignment on YamlNodeHelpers_MakeFromIntLongMap");
static_assert(sizeof(YamlNodeHelpers_MakeFromIntLongMap) == 0x000090, "Wrong size on YamlNodeHelpers_MakeFromIntLongMap");
static_assert(offsetof(YamlNodeHelpers_MakeFromIntLongMap, Value) == 0x000000, "Member 'YamlNodeHelpers_MakeFromIntLongMap::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_MakeFromIntLongMap, ReturnValue) == 0x000050, "Member 'YamlNodeHelpers_MakeFromIntLongMap::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.MakeFromIntQuatMap
// 0x0090 (0x0090 - 0x0000)
struct YamlNodeHelpers_MakeFromIntQuatMap final
{
public:
	TMap<int32, struct FQuat>                     Value;                                             // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FYamlNode                              ReturnValue;                                       // 0x0050(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlNodeHelpers_MakeFromIntQuatMap) == 0x000008, "Wrong alignment on YamlNodeHelpers_MakeFromIntQuatMap");
static_assert(sizeof(YamlNodeHelpers_MakeFromIntQuatMap) == 0x000090, "Wrong size on YamlNodeHelpers_MakeFromIntQuatMap");
static_assert(offsetof(YamlNodeHelpers_MakeFromIntQuatMap, Value) == 0x000000, "Member 'YamlNodeHelpers_MakeFromIntQuatMap::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_MakeFromIntQuatMap, ReturnValue) == 0x000050, "Member 'YamlNodeHelpers_MakeFromIntQuatMap::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.MakeFromIntStringMap
// 0x0090 (0x0090 - 0x0000)
struct YamlNodeHelpers_MakeFromIntStringMap final
{
public:
	TMap<int32, class FString>                    Value;                                             // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FYamlNode                              ReturnValue;                                       // 0x0050(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlNodeHelpers_MakeFromIntStringMap) == 0x000008, "Wrong alignment on YamlNodeHelpers_MakeFromIntStringMap");
static_assert(sizeof(YamlNodeHelpers_MakeFromIntStringMap) == 0x000090, "Wrong size on YamlNodeHelpers_MakeFromIntStringMap");
static_assert(offsetof(YamlNodeHelpers_MakeFromIntStringMap, Value) == 0x000000, "Member 'YamlNodeHelpers_MakeFromIntStringMap::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_MakeFromIntStringMap, ReturnValue) == 0x000050, "Member 'YamlNodeHelpers_MakeFromIntStringMap::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.MakeFromIntTextMap
// 0x0090 (0x0090 - 0x0000)
struct YamlNodeHelpers_MakeFromIntTextMap final
{
public:
	TMap<int32, class FText>                      Value;                                             // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FYamlNode                              ReturnValue;                                       // 0x0050(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlNodeHelpers_MakeFromIntTextMap) == 0x000008, "Wrong alignment on YamlNodeHelpers_MakeFromIntTextMap");
static_assert(sizeof(YamlNodeHelpers_MakeFromIntTextMap) == 0x000090, "Wrong size on YamlNodeHelpers_MakeFromIntTextMap");
static_assert(offsetof(YamlNodeHelpers_MakeFromIntTextMap, Value) == 0x000000, "Member 'YamlNodeHelpers_MakeFromIntTextMap::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_MakeFromIntTextMap, ReturnValue) == 0x000050, "Member 'YamlNodeHelpers_MakeFromIntTextMap::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.MakeFromIntTransformMap
// 0x0090 (0x0090 - 0x0000)
struct YamlNodeHelpers_MakeFromIntTransformMap final
{
public:
	TMap<int32, struct FTransform>                Value;                                             // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FYamlNode                              ReturnValue;                                       // 0x0050(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlNodeHelpers_MakeFromIntTransformMap) == 0x000008, "Wrong alignment on YamlNodeHelpers_MakeFromIntTransformMap");
static_assert(sizeof(YamlNodeHelpers_MakeFromIntTransformMap) == 0x000090, "Wrong size on YamlNodeHelpers_MakeFromIntTransformMap");
static_assert(offsetof(YamlNodeHelpers_MakeFromIntTransformMap, Value) == 0x000000, "Member 'YamlNodeHelpers_MakeFromIntTransformMap::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_MakeFromIntTransformMap, ReturnValue) == 0x000050, "Member 'YamlNodeHelpers_MakeFromIntTransformMap::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.MakeFromIntVectorMap
// 0x0090 (0x0090 - 0x0000)
struct YamlNodeHelpers_MakeFromIntVectorMap final
{
public:
	TMap<int32, struct FVector>                   Value;                                             // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FYamlNode                              ReturnValue;                                       // 0x0050(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlNodeHelpers_MakeFromIntVectorMap) == 0x000008, "Wrong alignment on YamlNodeHelpers_MakeFromIntVectorMap");
static_assert(sizeof(YamlNodeHelpers_MakeFromIntVectorMap) == 0x000090, "Wrong size on YamlNodeHelpers_MakeFromIntVectorMap");
static_assert(offsetof(YamlNodeHelpers_MakeFromIntVectorMap, Value) == 0x000000, "Member 'YamlNodeHelpers_MakeFromIntVectorMap::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_MakeFromIntVectorMap, ReturnValue) == 0x000050, "Member 'YamlNodeHelpers_MakeFromIntVectorMap::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.MakeFromLong
// 0x0048 (0x0048 - 0x0000)
struct YamlNodeHelpers_MakeFromLong final
{
public:
	int64                                         Value;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FYamlNode                              ReturnValue;                                       // 0x0008(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlNodeHelpers_MakeFromLong) == 0x000008, "Wrong alignment on YamlNodeHelpers_MakeFromLong");
static_assert(sizeof(YamlNodeHelpers_MakeFromLong) == 0x000048, "Wrong size on YamlNodeHelpers_MakeFromLong");
static_assert(offsetof(YamlNodeHelpers_MakeFromLong, Value) == 0x000000, "Member 'YamlNodeHelpers_MakeFromLong::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_MakeFromLong, ReturnValue) == 0x000008, "Member 'YamlNodeHelpers_MakeFromLong::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.MakeFromLongArray
// 0x0050 (0x0050 - 0x0000)
struct YamlNodeHelpers_MakeFromLongArray final
{
public:
	TArray<int64>                                 Value;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FYamlNode                              ReturnValue;                                       // 0x0010(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlNodeHelpers_MakeFromLongArray) == 0x000008, "Wrong alignment on YamlNodeHelpers_MakeFromLongArray");
static_assert(sizeof(YamlNodeHelpers_MakeFromLongArray) == 0x000050, "Wrong size on YamlNodeHelpers_MakeFromLongArray");
static_assert(offsetof(YamlNodeHelpers_MakeFromLongArray, Value) == 0x000000, "Member 'YamlNodeHelpers_MakeFromLongArray::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_MakeFromLongArray, ReturnValue) == 0x000010, "Member 'YamlNodeHelpers_MakeFromLongArray::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.MakeFromQuat
// 0x0060 (0x0060 - 0x0000)
struct YamlNodeHelpers_MakeFromQuat final
{
public:
	struct FQuat                                  Value;                                             // 0x0000(0x0020)(Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FYamlNode                              ReturnValue;                                       // 0x0020(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlNodeHelpers_MakeFromQuat) == 0x000010, "Wrong alignment on YamlNodeHelpers_MakeFromQuat");
static_assert(sizeof(YamlNodeHelpers_MakeFromQuat) == 0x000060, "Wrong size on YamlNodeHelpers_MakeFromQuat");
static_assert(offsetof(YamlNodeHelpers_MakeFromQuat, Value) == 0x000000, "Member 'YamlNodeHelpers_MakeFromQuat::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_MakeFromQuat, ReturnValue) == 0x000020, "Member 'YamlNodeHelpers_MakeFromQuat::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.MakeFromQuatArray
// 0x0050 (0x0050 - 0x0000)
struct YamlNodeHelpers_MakeFromQuatArray final
{
public:
	TArray<struct FQuat>                          Value;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FYamlNode                              ReturnValue;                                       // 0x0010(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlNodeHelpers_MakeFromQuatArray) == 0x000008, "Wrong alignment on YamlNodeHelpers_MakeFromQuatArray");
static_assert(sizeof(YamlNodeHelpers_MakeFromQuatArray) == 0x000050, "Wrong size on YamlNodeHelpers_MakeFromQuatArray");
static_assert(offsetof(YamlNodeHelpers_MakeFromQuatArray, Value) == 0x000000, "Member 'YamlNodeHelpers_MakeFromQuatArray::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_MakeFromQuatArray, ReturnValue) == 0x000010, "Member 'YamlNodeHelpers_MakeFromQuatArray::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.MakeFromString
// 0x0050 (0x0050 - 0x0000)
struct YamlNodeHelpers_MakeFromString final
{
public:
	class FString                                 Value;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FYamlNode                              ReturnValue;                                       // 0x0010(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlNodeHelpers_MakeFromString) == 0x000008, "Wrong alignment on YamlNodeHelpers_MakeFromString");
static_assert(sizeof(YamlNodeHelpers_MakeFromString) == 0x000050, "Wrong size on YamlNodeHelpers_MakeFromString");
static_assert(offsetof(YamlNodeHelpers_MakeFromString, Value) == 0x000000, "Member 'YamlNodeHelpers_MakeFromString::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_MakeFromString, ReturnValue) == 0x000010, "Member 'YamlNodeHelpers_MakeFromString::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.MakeFromStringArray
// 0x0050 (0x0050 - 0x0000)
struct YamlNodeHelpers_MakeFromStringArray final
{
public:
	TArray<class FString>                         Value;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FYamlNode                              ReturnValue;                                       // 0x0010(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlNodeHelpers_MakeFromStringArray) == 0x000008, "Wrong alignment on YamlNodeHelpers_MakeFromStringArray");
static_assert(sizeof(YamlNodeHelpers_MakeFromStringArray) == 0x000050, "Wrong size on YamlNodeHelpers_MakeFromStringArray");
static_assert(offsetof(YamlNodeHelpers_MakeFromStringArray, Value) == 0x000000, "Member 'YamlNodeHelpers_MakeFromStringArray::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_MakeFromStringArray, ReturnValue) == 0x000010, "Member 'YamlNodeHelpers_MakeFromStringArray::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.MakeFromStringBoolMap
// 0x0090 (0x0090 - 0x0000)
struct YamlNodeHelpers_MakeFromStringBoolMap final
{
public:
	TMap<class FString, bool>                     Value;                                             // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FYamlNode                              ReturnValue;                                       // 0x0050(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlNodeHelpers_MakeFromStringBoolMap) == 0x000008, "Wrong alignment on YamlNodeHelpers_MakeFromStringBoolMap");
static_assert(sizeof(YamlNodeHelpers_MakeFromStringBoolMap) == 0x000090, "Wrong size on YamlNodeHelpers_MakeFromStringBoolMap");
static_assert(offsetof(YamlNodeHelpers_MakeFromStringBoolMap, Value) == 0x000000, "Member 'YamlNodeHelpers_MakeFromStringBoolMap::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_MakeFromStringBoolMap, ReturnValue) == 0x000050, "Member 'YamlNodeHelpers_MakeFromStringBoolMap::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.MakeFromStringByteMap
// 0x0090 (0x0090 - 0x0000)
struct YamlNodeHelpers_MakeFromStringByteMap final
{
public:
	TMap<class FString, uint8>                    Value;                                             // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FYamlNode                              ReturnValue;                                       // 0x0050(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlNodeHelpers_MakeFromStringByteMap) == 0x000008, "Wrong alignment on YamlNodeHelpers_MakeFromStringByteMap");
static_assert(sizeof(YamlNodeHelpers_MakeFromStringByteMap) == 0x000090, "Wrong size on YamlNodeHelpers_MakeFromStringByteMap");
static_assert(offsetof(YamlNodeHelpers_MakeFromStringByteMap, Value) == 0x000000, "Member 'YamlNodeHelpers_MakeFromStringByteMap::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_MakeFromStringByteMap, ReturnValue) == 0x000050, "Member 'YamlNodeHelpers_MakeFromStringByteMap::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.MakeFromStringFloatMap
// 0x0090 (0x0090 - 0x0000)
struct YamlNodeHelpers_MakeFromStringFloatMap final
{
public:
	TMap<class FString, float>                    Value;                                             // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FYamlNode                              ReturnValue;                                       // 0x0050(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlNodeHelpers_MakeFromStringFloatMap) == 0x000008, "Wrong alignment on YamlNodeHelpers_MakeFromStringFloatMap");
static_assert(sizeof(YamlNodeHelpers_MakeFromStringFloatMap) == 0x000090, "Wrong size on YamlNodeHelpers_MakeFromStringFloatMap");
static_assert(offsetof(YamlNodeHelpers_MakeFromStringFloatMap, Value) == 0x000000, "Member 'YamlNodeHelpers_MakeFromStringFloatMap::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_MakeFromStringFloatMap, ReturnValue) == 0x000050, "Member 'YamlNodeHelpers_MakeFromStringFloatMap::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.MakeFromStringIntMap
// 0x0090 (0x0090 - 0x0000)
struct YamlNodeHelpers_MakeFromStringIntMap final
{
public:
	TMap<class FString, int32>                    Value;                                             // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FYamlNode                              ReturnValue;                                       // 0x0050(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlNodeHelpers_MakeFromStringIntMap) == 0x000008, "Wrong alignment on YamlNodeHelpers_MakeFromStringIntMap");
static_assert(sizeof(YamlNodeHelpers_MakeFromStringIntMap) == 0x000090, "Wrong size on YamlNodeHelpers_MakeFromStringIntMap");
static_assert(offsetof(YamlNodeHelpers_MakeFromStringIntMap, Value) == 0x000000, "Member 'YamlNodeHelpers_MakeFromStringIntMap::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_MakeFromStringIntMap, ReturnValue) == 0x000050, "Member 'YamlNodeHelpers_MakeFromStringIntMap::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.MakeFromStringLongMap
// 0x0090 (0x0090 - 0x0000)
struct YamlNodeHelpers_MakeFromStringLongMap final
{
public:
	TMap<class FString, int64>                    Value;                                             // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FYamlNode                              ReturnValue;                                       // 0x0050(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlNodeHelpers_MakeFromStringLongMap) == 0x000008, "Wrong alignment on YamlNodeHelpers_MakeFromStringLongMap");
static_assert(sizeof(YamlNodeHelpers_MakeFromStringLongMap) == 0x000090, "Wrong size on YamlNodeHelpers_MakeFromStringLongMap");
static_assert(offsetof(YamlNodeHelpers_MakeFromStringLongMap, Value) == 0x000000, "Member 'YamlNodeHelpers_MakeFromStringLongMap::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_MakeFromStringLongMap, ReturnValue) == 0x000050, "Member 'YamlNodeHelpers_MakeFromStringLongMap::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.MakeFromStringQuatMap
// 0x0090 (0x0090 - 0x0000)
struct YamlNodeHelpers_MakeFromStringQuatMap final
{
public:
	TMap<class FString, struct FQuat>             Value;                                             // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FYamlNode                              ReturnValue;                                       // 0x0050(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlNodeHelpers_MakeFromStringQuatMap) == 0x000008, "Wrong alignment on YamlNodeHelpers_MakeFromStringQuatMap");
static_assert(sizeof(YamlNodeHelpers_MakeFromStringQuatMap) == 0x000090, "Wrong size on YamlNodeHelpers_MakeFromStringQuatMap");
static_assert(offsetof(YamlNodeHelpers_MakeFromStringQuatMap, Value) == 0x000000, "Member 'YamlNodeHelpers_MakeFromStringQuatMap::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_MakeFromStringQuatMap, ReturnValue) == 0x000050, "Member 'YamlNodeHelpers_MakeFromStringQuatMap::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.MakeFromStringStringMap
// 0x0090 (0x0090 - 0x0000)
struct YamlNodeHelpers_MakeFromStringStringMap final
{
public:
	TMap<class FString, class FString>            Value;                                             // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FYamlNode                              ReturnValue;                                       // 0x0050(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlNodeHelpers_MakeFromStringStringMap) == 0x000008, "Wrong alignment on YamlNodeHelpers_MakeFromStringStringMap");
static_assert(sizeof(YamlNodeHelpers_MakeFromStringStringMap) == 0x000090, "Wrong size on YamlNodeHelpers_MakeFromStringStringMap");
static_assert(offsetof(YamlNodeHelpers_MakeFromStringStringMap, Value) == 0x000000, "Member 'YamlNodeHelpers_MakeFromStringStringMap::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_MakeFromStringStringMap, ReturnValue) == 0x000050, "Member 'YamlNodeHelpers_MakeFromStringStringMap::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.MakeFromStringTextMap
// 0x0090 (0x0090 - 0x0000)
struct YamlNodeHelpers_MakeFromStringTextMap final
{
public:
	TMap<class FString, class FText>              Value;                                             // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FYamlNode                              ReturnValue;                                       // 0x0050(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlNodeHelpers_MakeFromStringTextMap) == 0x000008, "Wrong alignment on YamlNodeHelpers_MakeFromStringTextMap");
static_assert(sizeof(YamlNodeHelpers_MakeFromStringTextMap) == 0x000090, "Wrong size on YamlNodeHelpers_MakeFromStringTextMap");
static_assert(offsetof(YamlNodeHelpers_MakeFromStringTextMap, Value) == 0x000000, "Member 'YamlNodeHelpers_MakeFromStringTextMap::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_MakeFromStringTextMap, ReturnValue) == 0x000050, "Member 'YamlNodeHelpers_MakeFromStringTextMap::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.MakeFromStringTransformMap
// 0x0090 (0x0090 - 0x0000)
struct YamlNodeHelpers_MakeFromStringTransformMap final
{
public:
	TMap<class FString, struct FTransform>        Value;                                             // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FYamlNode                              ReturnValue;                                       // 0x0050(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlNodeHelpers_MakeFromStringTransformMap) == 0x000008, "Wrong alignment on YamlNodeHelpers_MakeFromStringTransformMap");
static_assert(sizeof(YamlNodeHelpers_MakeFromStringTransformMap) == 0x000090, "Wrong size on YamlNodeHelpers_MakeFromStringTransformMap");
static_assert(offsetof(YamlNodeHelpers_MakeFromStringTransformMap, Value) == 0x000000, "Member 'YamlNodeHelpers_MakeFromStringTransformMap::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_MakeFromStringTransformMap, ReturnValue) == 0x000050, "Member 'YamlNodeHelpers_MakeFromStringTransformMap::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.MakeFromStringVectorMap
// 0x0090 (0x0090 - 0x0000)
struct YamlNodeHelpers_MakeFromStringVectorMap final
{
public:
	TMap<class FString, struct FVector>           Value;                                             // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FYamlNode                              ReturnValue;                                       // 0x0050(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlNodeHelpers_MakeFromStringVectorMap) == 0x000008, "Wrong alignment on YamlNodeHelpers_MakeFromStringVectorMap");
static_assert(sizeof(YamlNodeHelpers_MakeFromStringVectorMap) == 0x000090, "Wrong size on YamlNodeHelpers_MakeFromStringVectorMap");
static_assert(offsetof(YamlNodeHelpers_MakeFromStringVectorMap, Value) == 0x000000, "Member 'YamlNodeHelpers_MakeFromStringVectorMap::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_MakeFromStringVectorMap, ReturnValue) == 0x000050, "Member 'YamlNodeHelpers_MakeFromStringVectorMap::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.MakeFromText
// 0x0050 (0x0050 - 0x0000)
struct YamlNodeHelpers_MakeFromText final
{
public:
	class FText                                   Value;                                             // 0x0000(0x0010)(Parm, NativeAccessSpecifierPublic)
	struct FYamlNode                              ReturnValue;                                       // 0x0010(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlNodeHelpers_MakeFromText) == 0x000008, "Wrong alignment on YamlNodeHelpers_MakeFromText");
static_assert(sizeof(YamlNodeHelpers_MakeFromText) == 0x000050, "Wrong size on YamlNodeHelpers_MakeFromText");
static_assert(offsetof(YamlNodeHelpers_MakeFromText, Value) == 0x000000, "Member 'YamlNodeHelpers_MakeFromText::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_MakeFromText, ReturnValue) == 0x000010, "Member 'YamlNodeHelpers_MakeFromText::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.MakeFromTextArray
// 0x0050 (0x0050 - 0x0000)
struct YamlNodeHelpers_MakeFromTextArray final
{
public:
	TArray<class FText>                           Value;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FYamlNode                              ReturnValue;                                       // 0x0010(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlNodeHelpers_MakeFromTextArray) == 0x000008, "Wrong alignment on YamlNodeHelpers_MakeFromTextArray");
static_assert(sizeof(YamlNodeHelpers_MakeFromTextArray) == 0x000050, "Wrong size on YamlNodeHelpers_MakeFromTextArray");
static_assert(offsetof(YamlNodeHelpers_MakeFromTextArray, Value) == 0x000000, "Member 'YamlNodeHelpers_MakeFromTextArray::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_MakeFromTextArray, ReturnValue) == 0x000010, "Member 'YamlNodeHelpers_MakeFromTextArray::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.MakeFromTransform
// 0x00A0 (0x00A0 - 0x0000)
struct YamlNodeHelpers_MakeFromTransform final
{
public:
	struct FTransform                             Value;                                             // 0x0000(0x0060)(Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FYamlNode                              ReturnValue;                                       // 0x0060(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlNodeHelpers_MakeFromTransform) == 0x000010, "Wrong alignment on YamlNodeHelpers_MakeFromTransform");
static_assert(sizeof(YamlNodeHelpers_MakeFromTransform) == 0x0000A0, "Wrong size on YamlNodeHelpers_MakeFromTransform");
static_assert(offsetof(YamlNodeHelpers_MakeFromTransform, Value) == 0x000000, "Member 'YamlNodeHelpers_MakeFromTransform::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_MakeFromTransform, ReturnValue) == 0x000060, "Member 'YamlNodeHelpers_MakeFromTransform::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.MakeFromTransformArray
// 0x0050 (0x0050 - 0x0000)
struct YamlNodeHelpers_MakeFromTransformArray final
{
public:
	TArray<struct FTransform>                     Value;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FYamlNode                              ReturnValue;                                       // 0x0010(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlNodeHelpers_MakeFromTransformArray) == 0x000008, "Wrong alignment on YamlNodeHelpers_MakeFromTransformArray");
static_assert(sizeof(YamlNodeHelpers_MakeFromTransformArray) == 0x000050, "Wrong size on YamlNodeHelpers_MakeFromTransformArray");
static_assert(offsetof(YamlNodeHelpers_MakeFromTransformArray, Value) == 0x000000, "Member 'YamlNodeHelpers_MakeFromTransformArray::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_MakeFromTransformArray, ReturnValue) == 0x000010, "Member 'YamlNodeHelpers_MakeFromTransformArray::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.MakeFromVector
// 0x0058 (0x0058 - 0x0000)
struct YamlNodeHelpers_MakeFromVector final
{
public:
	struct FVector                                Value;                                             // 0x0000(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FYamlNode                              ReturnValue;                                       // 0x0018(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlNodeHelpers_MakeFromVector) == 0x000008, "Wrong alignment on YamlNodeHelpers_MakeFromVector");
static_assert(sizeof(YamlNodeHelpers_MakeFromVector) == 0x000058, "Wrong size on YamlNodeHelpers_MakeFromVector");
static_assert(offsetof(YamlNodeHelpers_MakeFromVector, Value) == 0x000000, "Member 'YamlNodeHelpers_MakeFromVector::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_MakeFromVector, ReturnValue) == 0x000018, "Member 'YamlNodeHelpers_MakeFromVector::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.MakeFromVectorArray
// 0x0050 (0x0050 - 0x0000)
struct YamlNodeHelpers_MakeFromVectorArray final
{
public:
	TArray<struct FVector>                        Value;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FYamlNode                              ReturnValue;                                       // 0x0010(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlNodeHelpers_MakeFromVectorArray) == 0x000008, "Wrong alignment on YamlNodeHelpers_MakeFromVectorArray");
static_assert(sizeof(YamlNodeHelpers_MakeFromVectorArray) == 0x000050, "Wrong size on YamlNodeHelpers_MakeFromVectorArray");
static_assert(offsetof(YamlNodeHelpers_MakeFromVectorArray, Value) == 0x000000, "Member 'YamlNodeHelpers_MakeFromVectorArray::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_MakeFromVectorArray, ReturnValue) == 0x000010, "Member 'YamlNodeHelpers_MakeFromVectorArray::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.MakeYamlNode
// 0x0040 (0x0040 - 0x0000)
struct YamlNodeHelpers_MakeYamlNode final
{
public:
	struct FYamlNode                              ReturnValue;                                       // 0x0000(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlNodeHelpers_MakeYamlNode) == 0x000008, "Wrong alignment on YamlNodeHelpers_MakeYamlNode");
static_assert(sizeof(YamlNodeHelpers_MakeYamlNode) == 0x000040, "Wrong size on YamlNodeHelpers_MakeYamlNode");
static_assert(offsetof(YamlNodeHelpers_MakeYamlNode, ReturnValue) == 0x000000, "Member 'YamlNodeHelpers_MakeYamlNode::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.Push
// 0x00C8 (0x00C8 - 0x0000)
struct YamlNodeHelpers_Push final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FYamlNode                              Element;                                           // 0x0040(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FYamlNode                              Out;                                               // 0x0080(0x0040)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_Push) == 0x000008, "Wrong alignment on YamlNodeHelpers_Push");
static_assert(sizeof(YamlNodeHelpers_Push) == 0x0000C8, "Wrong size on YamlNodeHelpers_Push");
static_assert(offsetof(YamlNodeHelpers_Push, Node) == 0x000000, "Member 'YamlNodeHelpers_Push::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_Push, Element) == 0x000040, "Member 'YamlNodeHelpers_Push::Element' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_Push, Out) == 0x000080, "Member 'YamlNodeHelpers_Push::Out' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_Push, ReturnValue) == 0x0000C0, "Member 'YamlNodeHelpers_Push::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.Reset
// 0x0048 (0x0048 - 0x0000)
struct YamlNodeHelpers_Reset final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_Reset) == 0x000008, "Wrong alignment on YamlNodeHelpers_Reset");
static_assert(sizeof(YamlNodeHelpers_Reset) == 0x000048, "Wrong size on YamlNodeHelpers_Reset");
static_assert(offsetof(YamlNodeHelpers_Reset, Node) == 0x000000, "Member 'YamlNodeHelpers_Reset::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_Reset, ReturnValue) == 0x000040, "Member 'YamlNodeHelpers_Reset::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.Set
// 0x00D8 (0x00D8 - 0x0000)
struct YamlNodeHelpers_Set final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0040(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FYamlNode                              Value;                                             // 0x0050(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FYamlNode                              Out;                                               // 0x0090(0x0040)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00D0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_Set) == 0x000008, "Wrong alignment on YamlNodeHelpers_Set");
static_assert(sizeof(YamlNodeHelpers_Set) == 0x0000D8, "Wrong size on YamlNodeHelpers_Set");
static_assert(offsetof(YamlNodeHelpers_Set, Node) == 0x000000, "Member 'YamlNodeHelpers_Set::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_Set, Key) == 0x000040, "Member 'YamlNodeHelpers_Set::Key' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_Set, Value) == 0x000050, "Member 'YamlNodeHelpers_Set::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_Set, Out) == 0x000090, "Member 'YamlNodeHelpers_Set::Out' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_Set, ReturnValue) == 0x0000D0, "Member 'YamlNodeHelpers_Set::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.SetIndex
// 0x00D0 (0x00D0 - 0x0000)
struct YamlNodeHelpers_SetIndex final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0040(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FYamlNode                              Value;                                             // 0x0048(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FYamlNode                              Out;                                               // 0x0088(0x0040)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00C8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_SetIndex) == 0x000008, "Wrong alignment on YamlNodeHelpers_SetIndex");
static_assert(sizeof(YamlNodeHelpers_SetIndex) == 0x0000D0, "Wrong size on YamlNodeHelpers_SetIndex");
static_assert(offsetof(YamlNodeHelpers_SetIndex, Node) == 0x000000, "Member 'YamlNodeHelpers_SetIndex::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_SetIndex, Index_0) == 0x000040, "Member 'YamlNodeHelpers_SetIndex::Index_0' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_SetIndex, Value) == 0x000048, "Member 'YamlNodeHelpers_SetIndex::Value' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_SetIndex, Out) == 0x000088, "Member 'YamlNodeHelpers_SetIndex::Out' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_SetIndex, ReturnValue) == 0x0000C8, "Member 'YamlNodeHelpers_SetIndex::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.SetStyle
// 0x0088 (0x0088 - 0x0000)
struct YamlNodeHelpers_SetStyle final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	EYamlEmitterStyle                             Style_0;                                           // 0x0040(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FYamlNode                              ReturnValue;                                       // 0x0048(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlNodeHelpers_SetStyle) == 0x000008, "Wrong alignment on YamlNodeHelpers_SetStyle");
static_assert(sizeof(YamlNodeHelpers_SetStyle) == 0x000088, "Wrong size on YamlNodeHelpers_SetStyle");
static_assert(offsetof(YamlNodeHelpers_SetStyle, Node) == 0x000000, "Member 'YamlNodeHelpers_SetStyle::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_SetStyle, Style_0) == 0x000040, "Member 'YamlNodeHelpers_SetStyle::Style_0' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_SetStyle, ReturnValue) == 0x000048, "Member 'YamlNodeHelpers_SetStyle::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.Size
// 0x0048 (0x0048 - 0x0000)
struct YamlNodeHelpers_Size final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0040(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_Size) == 0x000008, "Wrong alignment on YamlNodeHelpers_Size");
static_assert(sizeof(YamlNodeHelpers_Size) == 0x000048, "Wrong size on YamlNodeHelpers_Size");
static_assert(offsetof(YamlNodeHelpers_Size, Node) == 0x000000, "Member 'YamlNodeHelpers_Size::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_Size, ReturnValue) == 0x000040, "Member 'YamlNodeHelpers_Size::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.Style
// 0x0048 (0x0048 - 0x0000)
struct YamlNodeHelpers_Style final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	EYamlEmitterStyle                             ReturnValue;                                       // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_Style) == 0x000008, "Wrong alignment on YamlNodeHelpers_Style");
static_assert(sizeof(YamlNodeHelpers_Style) == 0x000048, "Wrong size on YamlNodeHelpers_Style");
static_assert(offsetof(YamlNodeHelpers_Style, Node) == 0x000000, "Member 'YamlNodeHelpers_Style::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_Style, ReturnValue) == 0x000040, "Member 'YamlNodeHelpers_Style::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlNodeHelpers.Type
// 0x0048 (0x0048 - 0x0000)
struct YamlNodeHelpers_Type final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	EYamlNodeType                                 ReturnValue;                                       // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlNodeHelpers_Type) == 0x000008, "Wrong alignment on YamlNodeHelpers_Type");
static_assert(sizeof(YamlNodeHelpers_Type) == 0x000048, "Wrong size on YamlNodeHelpers_Type");
static_assert(offsetof(YamlNodeHelpers_Type, Node) == 0x000000, "Member 'YamlNodeHelpers_Type::Node' has a wrong offset!");
static_assert(offsetof(YamlNodeHelpers_Type, ReturnValue) == 0x000040, "Member 'YamlNodeHelpers_Type::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlParsing.LoadYamlFromFile
// 0x0058 (0x0058 - 0x0000)
struct YamlParsing_LoadYamlFromFile final
{
public:
	class FString                                 Path;                                              // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FYamlNode                              Out;                                               // 0x0010(0x0040)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlParsing_LoadYamlFromFile) == 0x000008, "Wrong alignment on YamlParsing_LoadYamlFromFile");
static_assert(sizeof(YamlParsing_LoadYamlFromFile) == 0x000058, "Wrong size on YamlParsing_LoadYamlFromFile");
static_assert(offsetof(YamlParsing_LoadYamlFromFile, Path) == 0x000000, "Member 'YamlParsing_LoadYamlFromFile::Path' has a wrong offset!");
static_assert(offsetof(YamlParsing_LoadYamlFromFile, Out) == 0x000010, "Member 'YamlParsing_LoadYamlFromFile::Out' has a wrong offset!");
static_assert(offsetof(YamlParsing_LoadYamlFromFile, ReturnValue) == 0x000050, "Member 'YamlParsing_LoadYamlFromFile::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlParsing.ParseIntoStruct_BP
// 0x0048 (0x0048 - 0x0000)
struct YamlParsing_ParseIntoStruct_BP final
{
public:
	struct FYamlNode                              Node;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         Struct;                                            // 0x0040(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0044(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlParsing_ParseIntoStruct_BP) == 0x000008, "Wrong alignment on YamlParsing_ParseIntoStruct_BP");
static_assert(sizeof(YamlParsing_ParseIntoStruct_BP) == 0x000048, "Wrong size on YamlParsing_ParseIntoStruct_BP");
static_assert(offsetof(YamlParsing_ParseIntoStruct_BP, Node) == 0x000000, "Member 'YamlParsing_ParseIntoStruct_BP::Node' has a wrong offset!");
static_assert(offsetof(YamlParsing_ParseIntoStruct_BP, Struct) == 0x000040, "Member 'YamlParsing_ParseIntoStruct_BP::Struct' has a wrong offset!");
static_assert(offsetof(YamlParsing_ParseIntoStruct_BP, ReturnValue) == 0x000044, "Member 'YamlParsing_ParseIntoStruct_BP::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlParsing.ParseYaml
// 0x0058 (0x0058 - 0x0000)
struct YamlParsing_ParseYaml final
{
public:
	class FString                                 String;                                            // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FYamlNode                              Out;                                               // 0x0010(0x0040)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(YamlParsing_ParseYaml) == 0x000008, "Wrong alignment on YamlParsing_ParseYaml");
static_assert(sizeof(YamlParsing_ParseYaml) == 0x000058, "Wrong size on YamlParsing_ParseYaml");
static_assert(offsetof(YamlParsing_ParseYaml, String) == 0x000000, "Member 'YamlParsing_ParseYaml::String' has a wrong offset!");
static_assert(offsetof(YamlParsing_ParseYaml, Out) == 0x000010, "Member 'YamlParsing_ParseYaml::Out' has a wrong offset!");
static_assert(offsetof(YamlParsing_ParseYaml, ReturnValue) == 0x000050, "Member 'YamlParsing_ParseYaml::ReturnValue' has a wrong offset!");

// Function UnrealYAML.YamlParsing.WriteYamlToFile
// 0x0050 (0x0050 - 0x0000)
struct YamlParsing_WriteYamlToFile final
{
public:
	class FString                                 Path;                                              // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FYamlNode                              Node;                                              // 0x0010(0x0040)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(YamlParsing_WriteYamlToFile) == 0x000008, "Wrong alignment on YamlParsing_WriteYamlToFile");
static_assert(sizeof(YamlParsing_WriteYamlToFile) == 0x000050, "Wrong size on YamlParsing_WriteYamlToFile");
static_assert(offsetof(YamlParsing_WriteYamlToFile, Path) == 0x000000, "Member 'YamlParsing_WriteYamlToFile::Path' has a wrong offset!");
static_assert(offsetof(YamlParsing_WriteYamlToFile, Node) == 0x000010, "Member 'YamlParsing_WriteYamlToFile::Node' has a wrong offset!");

}

