#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_S0045D

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "NikkiPhysics_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "X6Animation_structs.hpp"
#include "X6Game_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_S0045D.ABP_S0045D_C
// 0x1A60 (0x1EB0 - 0x0450)
class UABP_S0045D_C final : public UNikkiClothAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0450(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0458(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0460(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0468(0x0020)()
	struct FAnimNode_CopyPoseFromMesh             AnimGraphNode_CopyPoseFromMesh;                    // 0x0488(0x0158)(ContainsInstancedReference)
	struct FAnimNode_NikkiPhysics                 AnimGraphNode_NikkiPhysics;                        // 0x05E0(0x11F0)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x17D0(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x17F0(0x0020)()
	struct FAnimNode_NikkiLiftLegRig              AnimGraphNode_NikkiLiftLegRig;                     // 0x1810(0x0060)()
	struct FAnimNode_NikkiHorizontalRig           AnimGraphNode_NikkiHorizontalRig;                  // 0x1870(0x05E0)()
	struct FVector                                External_Acceleration;                             // 0x1E50(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Skill_Time_Var;                                    // 0x1E68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FClothExternalData                     Out_Cloth_External_Data;                           // 0x1E70(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	int32                                         NikkiPhysicsPreDoStep;                             // 0x1E90(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E94[0x4];                                     // 0x1E94(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  Owner;                                             // 0x1E98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          NikkiPhysicsPartSelfCollsion;                      // 0x1EA0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENikki_HeightFieldMethod                      NikkiPhysicsHeightFieldMethod;                     // 0x1EA1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EA2[0x6];                                     // 0x1EA2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Rig_LiftLegAlpha;                                  // 0x1EA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void ExecuteUbergraph_ABP_S0045D(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_S0045D_C">();
	}
	static class UABP_S0045D_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_S0045D_C>();
	}
};
static_assert(alignof(UABP_S0045D_C) == 0x000010, "Wrong alignment on UABP_S0045D_C");
static_assert(sizeof(UABP_S0045D_C) == 0x001EB0, "Wrong size on UABP_S0045D_C");
static_assert(offsetof(UABP_S0045D_C, UberGraphFrame) == 0x000450, "Member 'UABP_S0045D_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_S0045D_C, AnimBlueprintExtension_PropertyAccess) == 0x000458, "Member 'UABP_S0045D_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_S0045D_C, AnimBlueprintExtension_Base) == 0x000460, "Member 'UABP_S0045D_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_S0045D_C, AnimGraphNode_Root) == 0x000468, "Member 'UABP_S0045D_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_S0045D_C, AnimGraphNode_CopyPoseFromMesh) == 0x000488, "Member 'UABP_S0045D_C::AnimGraphNode_CopyPoseFromMesh' has a wrong offset!");
static_assert(offsetof(UABP_S0045D_C, AnimGraphNode_NikkiPhysics) == 0x0005E0, "Member 'UABP_S0045D_C::AnimGraphNode_NikkiPhysics' has a wrong offset!");
static_assert(offsetof(UABP_S0045D_C, AnimGraphNode_LocalToComponentSpace) == 0x0017D0, "Member 'UABP_S0045D_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_S0045D_C, AnimGraphNode_ComponentToLocalSpace) == 0x0017F0, "Member 'UABP_S0045D_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_S0045D_C, AnimGraphNode_NikkiLiftLegRig) == 0x001810, "Member 'UABP_S0045D_C::AnimGraphNode_NikkiLiftLegRig' has a wrong offset!");
static_assert(offsetof(UABP_S0045D_C, AnimGraphNode_NikkiHorizontalRig) == 0x001870, "Member 'UABP_S0045D_C::AnimGraphNode_NikkiHorizontalRig' has a wrong offset!");
static_assert(offsetof(UABP_S0045D_C, External_Acceleration) == 0x001E50, "Member 'UABP_S0045D_C::External_Acceleration' has a wrong offset!");
static_assert(offsetof(UABP_S0045D_C, Skill_Time_Var) == 0x001E68, "Member 'UABP_S0045D_C::Skill_Time_Var' has a wrong offset!");
static_assert(offsetof(UABP_S0045D_C, Out_Cloth_External_Data) == 0x001E70, "Member 'UABP_S0045D_C::Out_Cloth_External_Data' has a wrong offset!");
static_assert(offsetof(UABP_S0045D_C, NikkiPhysicsPreDoStep) == 0x001E90, "Member 'UABP_S0045D_C::NikkiPhysicsPreDoStep' has a wrong offset!");
static_assert(offsetof(UABP_S0045D_C, Owner) == 0x001E98, "Member 'UABP_S0045D_C::Owner' has a wrong offset!");
static_assert(offsetof(UABP_S0045D_C, NikkiPhysicsPartSelfCollsion) == 0x001EA0, "Member 'UABP_S0045D_C::NikkiPhysicsPartSelfCollsion' has a wrong offset!");
static_assert(offsetof(UABP_S0045D_C, NikkiPhysicsHeightFieldMethod) == 0x001EA1, "Member 'UABP_S0045D_C::NikkiPhysicsHeightFieldMethod' has a wrong offset!");
static_assert(offsetof(UABP_S0045D_C, Rig_LiftLegAlpha) == 0x001EA8, "Member 'UABP_S0045D_C::Rig_LiftLegAlpha' has a wrong offset!");

}

