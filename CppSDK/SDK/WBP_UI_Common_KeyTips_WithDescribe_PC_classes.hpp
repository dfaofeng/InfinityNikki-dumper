#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_Common_KeyTips_WithDescribe_PC

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "InputCore_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_UI_Common_KeyTips_WithDescribe_PC.WBP_UI_Common_KeyTips_WithDescribe_PC_C
// 0x0080 (0x0370 - 0x02F0)
class UWBP_UI_Common_KeyTips_WithDescribe_PC_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWBP_UI_Common_KeyTips_PC_C*            BP_UI_Common_KeyTips_PC;                           // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Name;                                         // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_UI_Common_MultiKeyTips_PC_C*       WBP_UI_Common_MultiKeyTips_PC;                     // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WS_KeyTip;                                         // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UX6InputAction>          ShowInputAction;                                   // 0x0318(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class FText                                   ShowName;                                          // 0x0340(0x0010)(Edit, BlueprintVisible)
	struct FKey                                   ShowKey;                                           // 0x0350(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         KeyTip_Index;                                      // 0x0368(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_WBP_UI_Common_KeyTips_WithDescribe_PC(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_UI_Common_KeyTips_WithDescribe_PC_C">();
	}
	static class UWBP_UI_Common_KeyTips_WithDescribe_PC_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_UI_Common_KeyTips_WithDescribe_PC_C>();
	}
};
static_assert(alignof(UWBP_UI_Common_KeyTips_WithDescribe_PC_C) == 0x000008, "Wrong alignment on UWBP_UI_Common_KeyTips_WithDescribe_PC_C");
static_assert(sizeof(UWBP_UI_Common_KeyTips_WithDescribe_PC_C) == 0x000370, "Wrong size on UWBP_UI_Common_KeyTips_WithDescribe_PC_C");
static_assert(offsetof(UWBP_UI_Common_KeyTips_WithDescribe_PC_C, UberGraphFrame) == 0x0002F0, "Member 'UWBP_UI_Common_KeyTips_WithDescribe_PC_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Common_KeyTips_WithDescribe_PC_C, BP_UI_Common_KeyTips_PC) == 0x0002F8, "Member 'UWBP_UI_Common_KeyTips_WithDescribe_PC_C::BP_UI_Common_KeyTips_PC' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Common_KeyTips_WithDescribe_PC_C, Text_Name) == 0x000300, "Member 'UWBP_UI_Common_KeyTips_WithDescribe_PC_C::Text_Name' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Common_KeyTips_WithDescribe_PC_C, WBP_UI_Common_MultiKeyTips_PC) == 0x000308, "Member 'UWBP_UI_Common_KeyTips_WithDescribe_PC_C::WBP_UI_Common_MultiKeyTips_PC' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Common_KeyTips_WithDescribe_PC_C, WS_KeyTip) == 0x000310, "Member 'UWBP_UI_Common_KeyTips_WithDescribe_PC_C::WS_KeyTip' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Common_KeyTips_WithDescribe_PC_C, ShowInputAction) == 0x000318, "Member 'UWBP_UI_Common_KeyTips_WithDescribe_PC_C::ShowInputAction' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Common_KeyTips_WithDescribe_PC_C, ShowName) == 0x000340, "Member 'UWBP_UI_Common_KeyTips_WithDescribe_PC_C::ShowName' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Common_KeyTips_WithDescribe_PC_C, ShowKey) == 0x000350, "Member 'UWBP_UI_Common_KeyTips_WithDescribe_PC_C::ShowKey' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Common_KeyTips_WithDescribe_PC_C, KeyTip_Index) == 0x000368, "Member 'UWBP_UI_Common_KeyTips_WithDescribe_PC_C::KeyTip_Index' has a wrong offset!");

}

