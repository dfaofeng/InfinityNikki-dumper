#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PSDKBasic

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "PSDKBasic_structs.hpp"


namespace SDK::Params
{

// Function PSDKBasic.PSDKGamePadHelpersFunctionLibrary.GetCurrentInputType
// 0x0001 (0x0001 - 0x0000)
struct PSDKGamePadHelpersFunctionLibrary_GetCurrentInputType final
{
public:
	EPSDKInputType                                ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSDKGamePadHelpersFunctionLibrary_GetCurrentInputType) == 0x000001, "Wrong alignment on PSDKGamePadHelpersFunctionLibrary_GetCurrentInputType");
static_assert(sizeof(PSDKGamePadHelpersFunctionLibrary_GetCurrentInputType) == 0x000001, "Wrong size on PSDKGamePadHelpersFunctionLibrary_GetCurrentInputType");
static_assert(offsetof(PSDKGamePadHelpersFunctionLibrary_GetCurrentInputType, ReturnValue) == 0x000000, "Member 'PSDKGamePadHelpersFunctionLibrary_GetCurrentInputType::ReturnValue' has a wrong offset!");

// Function PSDKBasic.PSDKGamePadHelpersFunctionLibrary.IsCurrentGamePad
// 0x0001 (0x0001 - 0x0000)
struct PSDKGamePadHelpersFunctionLibrary_IsCurrentGamePad final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSDKGamePadHelpersFunctionLibrary_IsCurrentGamePad) == 0x000001, "Wrong alignment on PSDKGamePadHelpersFunctionLibrary_IsCurrentGamePad");
static_assert(sizeof(PSDKGamePadHelpersFunctionLibrary_IsCurrentGamePad) == 0x000001, "Wrong size on PSDKGamePadHelpersFunctionLibrary_IsCurrentGamePad");
static_assert(offsetof(PSDKGamePadHelpersFunctionLibrary_IsCurrentGamePad, ReturnValue) == 0x000000, "Member 'PSDKGamePadHelpersFunctionLibrary_IsCurrentGamePad::ReturnValue' has a wrong offset!");

// Function PSDKBasic.PSDKGamePadHelpersFunctionLibrary.IsSteamDeck
// 0x0001 (0x0001 - 0x0000)
struct PSDKGamePadHelpersFunctionLibrary_IsSteamDeck final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSDKGamePadHelpersFunctionLibrary_IsSteamDeck) == 0x000001, "Wrong alignment on PSDKGamePadHelpersFunctionLibrary_IsSteamDeck");
static_assert(sizeof(PSDKGamePadHelpersFunctionLibrary_IsSteamDeck) == 0x000001, "Wrong size on PSDKGamePadHelpersFunctionLibrary_IsSteamDeck");
static_assert(offsetof(PSDKGamePadHelpersFunctionLibrary_IsSteamDeck, ReturnValue) == 0x000000, "Member 'PSDKGamePadHelpersFunctionLibrary_IsSteamDeck::ReturnValue' has a wrong offset!");

// Function PSDKBasic.PSDKGamePadHelpersFunctionLibrary.IsTopWidgetInLayers
// 0x0010 (0x0010 - 0x0000)
struct PSDKGamePadHelpersFunctionLibrary_IsTopWidgetInLayers final
{
public:
	class UPSdkUIBaseWidget*                      UserWidget;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PSDKGamePadHelpersFunctionLibrary_IsTopWidgetInLayers) == 0x000008, "Wrong alignment on PSDKGamePadHelpersFunctionLibrary_IsTopWidgetInLayers");
static_assert(sizeof(PSDKGamePadHelpersFunctionLibrary_IsTopWidgetInLayers) == 0x000010, "Wrong size on PSDKGamePadHelpersFunctionLibrary_IsTopWidgetInLayers");
static_assert(offsetof(PSDKGamePadHelpersFunctionLibrary_IsTopWidgetInLayers, UserWidget) == 0x000000, "Member 'PSDKGamePadHelpersFunctionLibrary_IsTopWidgetInLayers::UserWidget' has a wrong offset!");
static_assert(offsetof(PSDKGamePadHelpersFunctionLibrary_IsTopWidgetInLayers, ReturnValue) == 0x000008, "Member 'PSDKGamePadHelpersFunctionLibrary_IsTopWidgetInLayers::ReturnValue' has a wrong offset!");

// Function PSDKBasic.PSDKGamePadHelpersFunctionLibrary.ShouldShowGamePadIcons
// 0x0010 (0x0010 - 0x0000)
struct PSDKGamePadHelpersFunctionLibrary_ShouldShowGamePadIcons final
{
public:
	class UPSdkUIBaseWidget*                      UserWidget;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PSDKGamePadHelpersFunctionLibrary_ShouldShowGamePadIcons) == 0x000008, "Wrong alignment on PSDKGamePadHelpersFunctionLibrary_ShouldShowGamePadIcons");
static_assert(sizeof(PSDKGamePadHelpersFunctionLibrary_ShouldShowGamePadIcons) == 0x000010, "Wrong size on PSDKGamePadHelpersFunctionLibrary_ShouldShowGamePadIcons");
static_assert(offsetof(PSDKGamePadHelpersFunctionLibrary_ShouldShowGamePadIcons, UserWidget) == 0x000000, "Member 'PSDKGamePadHelpersFunctionLibrary_ShouldShowGamePadIcons::UserWidget' has a wrong offset!");
static_assert(offsetof(PSDKGamePadHelpersFunctionLibrary_ShouldShowGamePadIcons, ReturnValue) == 0x000008, "Member 'PSDKGamePadHelpersFunctionLibrary_ShouldShowGamePadIcons::ReturnValue' has a wrong offset!");

// Function PSDKBasic.PSDKGamePadInterface.OnKeyDownTrigger
// 0x0040 (0x0040 - 0x0000)
struct PSDKGamePadInterface_OnKeyDownTrigger final
{
public:
	struct FKeyEvent                              KeyEvent;                                          // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSDKGamePadInterface_OnKeyDownTrigger) == 0x000008, "Wrong alignment on PSDKGamePadInterface_OnKeyDownTrigger");
static_assert(sizeof(PSDKGamePadInterface_OnKeyDownTrigger) == 0x000040, "Wrong size on PSDKGamePadInterface_OnKeyDownTrigger");
static_assert(offsetof(PSDKGamePadInterface_OnKeyDownTrigger, KeyEvent) == 0x000000, "Member 'PSDKGamePadInterface_OnKeyDownTrigger::KeyEvent' has a wrong offset!");

// Function PSDKBasic.PSDKGamePadInterface.OnKeyUpTrigger
// 0x0040 (0x0040 - 0x0000)
struct PSDKGamePadInterface_OnKeyUpTrigger final
{
public:
	struct FKeyEvent                              KeyEvent;                                          // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSDKGamePadInterface_OnKeyUpTrigger) == 0x000008, "Wrong alignment on PSDKGamePadInterface_OnKeyUpTrigger");
static_assert(sizeof(PSDKGamePadInterface_OnKeyUpTrigger) == 0x000040, "Wrong size on PSDKGamePadInterface_OnKeyUpTrigger");
static_assert(offsetof(PSDKGamePadInterface_OnKeyUpTrigger, KeyEvent) == 0x000000, "Member 'PSDKGamePadInterface_OnKeyUpTrigger::KeyEvent' has a wrong offset!");

// Function PSDKBasic.PSdkPS5BaseUI.OnGamepadButton
// 0x0040 (0x0040 - 0x0000)
struct PSdkPS5BaseUI_OnGamepadButton final
{
public:
	struct FKeyEvent                              KeyEvent;                                          // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSdkPS5BaseUI_OnGamepadButton) == 0x000008, "Wrong alignment on PSdkPS5BaseUI_OnGamepadButton");
static_assert(sizeof(PSdkPS5BaseUI_OnGamepadButton) == 0x000040, "Wrong size on PSdkPS5BaseUI_OnGamepadButton");
static_assert(offsetof(PSdkPS5BaseUI_OnGamepadButton, KeyEvent) == 0x000000, "Member 'PSdkPS5BaseUI_OnGamepadButton::KeyEvent' has a wrong offset!");

// Function PSDKBasic.PSWebBrowser.Handle
// 0x0010 (0x0010 - 0x0000)
struct PSWebBrowser_Handle final
{
public:
	class FString                                 Params_0;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSWebBrowser_Handle) == 0x000008, "Wrong alignment on PSWebBrowser_Handle");
static_assert(sizeof(PSWebBrowser_Handle) == 0x000010, "Wrong size on PSWebBrowser_Handle");
static_assert(offsetof(PSWebBrowser_Handle, Params_0) == 0x000000, "Member 'PSWebBrowser_Handle::Params_0' has a wrong offset!");

}

