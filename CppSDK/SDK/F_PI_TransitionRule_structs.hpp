#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: F_PI_TransitionRule

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "SMSystem_structs.hpp"


namespace SDK
{

// UserDefinedStruct F_PI_TransitionRule.F_PI_TransitionRule
// 0x0060 (0x0060 - 0x0000)
struct FF_PI_TransitionRule final
{
public:
	class FName                                   PreStanceTagName_17_BE774C7144610A2F752D35AA5E6D340F; // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   NextStanceTagName_18_A4DACDE24C7986797E121183562898C7; // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           LinkAnimTag_8_057E7F414EEE53934E25589C01880B97;    // 0x0010(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FSMBlendSetting                        BlendSetting_11_F0C454D54CAEDBA56E80218FA5B9799C;  // 0x0018(0x0020)(Edit, BlueprintVisible, NoDestructor)
	struct FGameplayTag                           FastLinkAnimTag_15_F25868B244CF07AC1F1C53A35D1C01C4; // 0x0038(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FSMBlendSetting                        FastBlendSetting_16_F202561D49F2C3E12BC6B88755DDD876; // 0x0040(0x0020)(Edit, BlueprintVisible, NoDestructor)
};
static_assert(alignof(FF_PI_TransitionRule) == 0x000008, "Wrong alignment on FF_PI_TransitionRule");
static_assert(sizeof(FF_PI_TransitionRule) == 0x000060, "Wrong size on FF_PI_TransitionRule");
static_assert(offsetof(FF_PI_TransitionRule, PreStanceTagName_17_BE774C7144610A2F752D35AA5E6D340F) == 0x000000, "Member 'FF_PI_TransitionRule::PreStanceTagName_17_BE774C7144610A2F752D35AA5E6D340F' has a wrong offset!");
static_assert(offsetof(FF_PI_TransitionRule, NextStanceTagName_18_A4DACDE24C7986797E121183562898C7) == 0x000008, "Member 'FF_PI_TransitionRule::NextStanceTagName_18_A4DACDE24C7986797E121183562898C7' has a wrong offset!");
static_assert(offsetof(FF_PI_TransitionRule, LinkAnimTag_8_057E7F414EEE53934E25589C01880B97) == 0x000010, "Member 'FF_PI_TransitionRule::LinkAnimTag_8_057E7F414EEE53934E25589C01880B97' has a wrong offset!");
static_assert(offsetof(FF_PI_TransitionRule, BlendSetting_11_F0C454D54CAEDBA56E80218FA5B9799C) == 0x000018, "Member 'FF_PI_TransitionRule::BlendSetting_11_F0C454D54CAEDBA56E80218FA5B9799C' has a wrong offset!");
static_assert(offsetof(FF_PI_TransitionRule, FastLinkAnimTag_15_F25868B244CF07AC1F1C53A35D1C01C4) == 0x000038, "Member 'FF_PI_TransitionRule::FastLinkAnimTag_15_F25868B244CF07AC1F1C53A35D1C01C4' has a wrong offset!");
static_assert(offsetof(FF_PI_TransitionRule, FastBlendSetting_16_F202561D49F2C3E12BC6B88755DDD876) == 0x000040, "Member 'FF_PI_TransitionRule::FastBlendSetting_16_F202561D49F2C3E12BC6B88755DDD876' has a wrong offset!");

}

