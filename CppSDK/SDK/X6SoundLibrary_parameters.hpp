#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: X6SoundLibrary

#include "Basic.hpp"


namespace SDK::Params
{

// Function X6SoundLibrary.X6SoundLibrary_C.StopStoryMusic
// 0x0010 (0x0010 - 0x0000)
struct X6SoundLibrary_C_StopStoryMusic final
{
public:
	class UAkAudioEvent*                          Event;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6SoundLibrary_C_StopStoryMusic) == 0x000008, "Wrong alignment on X6SoundLibrary_C_StopStoryMusic");
static_assert(sizeof(X6SoundLibrary_C_StopStoryMusic) == 0x000010, "Wrong size on X6SoundLibrary_C_StopStoryMusic");
static_assert(offsetof(X6SoundLibrary_C_StopStoryMusic, Event) == 0x000000, "Member 'X6SoundLibrary_C_StopStoryMusic::Event' has a wrong offset!");
static_assert(offsetof(X6SoundLibrary_C_StopStoryMusic, __WorldContext) == 0x000008, "Member 'X6SoundLibrary_C_StopStoryMusic::__WorldContext' has a wrong offset!");

// Function X6SoundLibrary.X6SoundLibrary_C.ResumeActorVolume
// 0x0010 (0x0010 - 0x0000)
struct X6SoundLibrary_C_ResumeActorVolume final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6SoundLibrary_C_ResumeActorVolume) == 0x000008, "Wrong alignment on X6SoundLibrary_C_ResumeActorVolume");
static_assert(sizeof(X6SoundLibrary_C_ResumeActorVolume) == 0x000010, "Wrong size on X6SoundLibrary_C_ResumeActorVolume");
static_assert(offsetof(X6SoundLibrary_C_ResumeActorVolume, Actor) == 0x000000, "Member 'X6SoundLibrary_C_ResumeActorVolume::Actor' has a wrong offset!");
static_assert(offsetof(X6SoundLibrary_C_ResumeActorVolume, __WorldContext) == 0x000008, "Member 'X6SoundLibrary_C_ResumeActorVolume::__WorldContext' has a wrong offset!");

// Function X6SoundLibrary.X6SoundLibrary_C.IsActorMuted
// 0x0018 (0x0018 - 0x0000)
struct X6SoundLibrary_C_IsActorMuted final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6SoundLibrary_C_IsActorMuted) == 0x000008, "Wrong alignment on X6SoundLibrary_C_IsActorMuted");
static_assert(sizeof(X6SoundLibrary_C_IsActorMuted) == 0x000018, "Wrong size on X6SoundLibrary_C_IsActorMuted");
static_assert(offsetof(X6SoundLibrary_C_IsActorMuted, Actor) == 0x000000, "Member 'X6SoundLibrary_C_IsActorMuted::Actor' has a wrong offset!");
static_assert(offsetof(X6SoundLibrary_C_IsActorMuted, __WorldContext) == 0x000008, "Member 'X6SoundLibrary_C_IsActorMuted::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6SoundLibrary_C_IsActorMuted, Result) == 0x000010, "Member 'X6SoundLibrary_C_IsActorMuted::Result' has a wrong offset!");

// Function X6SoundLibrary.X6SoundLibrary_C.GetDefaultEmitterActor
// 0x0010 (0x0010 - 0x0000)
struct X6SoundLibrary_C_GetDefaultEmitterActor final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6SoundLibrary_C_GetDefaultEmitterActor) == 0x000008, "Wrong alignment on X6SoundLibrary_C_GetDefaultEmitterActor");
static_assert(sizeof(X6SoundLibrary_C_GetDefaultEmitterActor) == 0x000010, "Wrong size on X6SoundLibrary_C_GetDefaultEmitterActor");
static_assert(offsetof(X6SoundLibrary_C_GetDefaultEmitterActor, __WorldContext) == 0x000000, "Member 'X6SoundLibrary_C_GetDefaultEmitterActor::__WorldContext' has a wrong offset!");
static_assert(offsetof(X6SoundLibrary_C_GetDefaultEmitterActor, Actor) == 0x000008, "Member 'X6SoundLibrary_C_GetDefaultEmitterActor::Actor' has a wrong offset!");

// Function X6SoundLibrary.X6SoundLibrary_C.DisableActorVolume
// 0x0018 (0x0018 - 0x0000)
struct X6SoundLibrary_C_DisableActorVolume final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        ResumeDelay;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6SoundLibrary_C_DisableActorVolume) == 0x000008, "Wrong alignment on X6SoundLibrary_C_DisableActorVolume");
static_assert(sizeof(X6SoundLibrary_C_DisableActorVolume) == 0x000018, "Wrong size on X6SoundLibrary_C_DisableActorVolume");
static_assert(offsetof(X6SoundLibrary_C_DisableActorVolume, Actor) == 0x000000, "Member 'X6SoundLibrary_C_DisableActorVolume::Actor' has a wrong offset!");
static_assert(offsetof(X6SoundLibrary_C_DisableActorVolume, ResumeDelay) == 0x000008, "Member 'X6SoundLibrary_C_DisableActorVolume::ResumeDelay' has a wrong offset!");
static_assert(offsetof(X6SoundLibrary_C_DisableActorVolume, __WorldContext) == 0x000010, "Member 'X6SoundLibrary_C_DisableActorVolume::__WorldContext' has a wrong offset!");

// Function X6SoundLibrary.X6SoundLibrary_C.ChangeStoryMusic
// 0x0020 (0x0020 - 0x0000)
struct X6SoundLibrary_C_ChangeStoryMusic final
{
public:
	class UAkAudioEvent*                          Event;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAkStateValue*                          State;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          EndEvent;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6SoundLibrary_C_ChangeStoryMusic) == 0x000008, "Wrong alignment on X6SoundLibrary_C_ChangeStoryMusic");
static_assert(sizeof(X6SoundLibrary_C_ChangeStoryMusic) == 0x000020, "Wrong size on X6SoundLibrary_C_ChangeStoryMusic");
static_assert(offsetof(X6SoundLibrary_C_ChangeStoryMusic, Event) == 0x000000, "Member 'X6SoundLibrary_C_ChangeStoryMusic::Event' has a wrong offset!");
static_assert(offsetof(X6SoundLibrary_C_ChangeStoryMusic, State) == 0x000008, "Member 'X6SoundLibrary_C_ChangeStoryMusic::State' has a wrong offset!");
static_assert(offsetof(X6SoundLibrary_C_ChangeStoryMusic, EndEvent) == 0x000010, "Member 'X6SoundLibrary_C_ChangeStoryMusic::EndEvent' has a wrong offset!");
static_assert(offsetof(X6SoundLibrary_C_ChangeStoryMusic, __WorldContext) == 0x000018, "Member 'X6SoundLibrary_C_ChangeStoryMusic::__WorldContext' has a wrong offset!");

// Function X6SoundLibrary.X6SoundLibrary_C.BP_SetAkSwitch
// 0x0010 (0x0010 - 0x0000)
struct X6SoundLibrary_C_BP_SetAkSwitch final
{
public:
	class UAkSwitchValue*                         SWITCH;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6SoundLibrary_C_BP_SetAkSwitch) == 0x000008, "Wrong alignment on X6SoundLibrary_C_BP_SetAkSwitch");
static_assert(sizeof(X6SoundLibrary_C_BP_SetAkSwitch) == 0x000010, "Wrong size on X6SoundLibrary_C_BP_SetAkSwitch");
static_assert(offsetof(X6SoundLibrary_C_BP_SetAkSwitch, SWITCH) == 0x000000, "Member 'X6SoundLibrary_C_BP_SetAkSwitch::SWITCH' has a wrong offset!");
static_assert(offsetof(X6SoundLibrary_C_BP_SetAkSwitch, __WorldContext) == 0x000008, "Member 'X6SoundLibrary_C_BP_SetAkSwitch::__WorldContext' has a wrong offset!");

// Function X6SoundLibrary.X6SoundLibrary_C.BP_PostEventAsync
// 0x0010 (0x0010 - 0x0000)
struct X6SoundLibrary_C_BP_PostEventAsync final
{
public:
	class UAkAudioEvent*                          Event;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6SoundLibrary_C_BP_PostEventAsync) == 0x000008, "Wrong alignment on X6SoundLibrary_C_BP_PostEventAsync");
static_assert(sizeof(X6SoundLibrary_C_BP_PostEventAsync) == 0x000010, "Wrong size on X6SoundLibrary_C_BP_PostEventAsync");
static_assert(offsetof(X6SoundLibrary_C_BP_PostEventAsync, Event) == 0x000000, "Member 'X6SoundLibrary_C_BP_PostEventAsync::Event' has a wrong offset!");
static_assert(offsetof(X6SoundLibrary_C_BP_PostEventAsync, __WorldContext) == 0x000008, "Member 'X6SoundLibrary_C_BP_PostEventAsync::__WorldContext' has a wrong offset!");

// Function X6SoundLibrary.X6SoundLibrary_C.BP_PostEvent
// 0x0010 (0x0010 - 0x0000)
struct X6SoundLibrary_C_BP_PostEvent final
{
public:
	class UAkAudioEvent*                          Event;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6SoundLibrary_C_BP_PostEvent) == 0x000008, "Wrong alignment on X6SoundLibrary_C_BP_PostEvent");
static_assert(sizeof(X6SoundLibrary_C_BP_PostEvent) == 0x000010, "Wrong size on X6SoundLibrary_C_BP_PostEvent");
static_assert(offsetof(X6SoundLibrary_C_BP_PostEvent, Event) == 0x000000, "Member 'X6SoundLibrary_C_BP_PostEvent::Event' has a wrong offset!");
static_assert(offsetof(X6SoundLibrary_C_BP_PostEvent, __WorldContext) == 0x000008, "Member 'X6SoundLibrary_C_BP_PostEvent::__WorldContext' has a wrong offset!");

// Function X6SoundLibrary.X6SoundLibrary_C.BP_PlayUIBtnSound
// 0x0010 (0x0010 - 0x0000)
struct X6SoundLibrary_C_BP_PlayUIBtnSound final
{
public:
	class UAkAudioEvent*                          Event;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(X6SoundLibrary_C_BP_PlayUIBtnSound) == 0x000008, "Wrong alignment on X6SoundLibrary_C_BP_PlayUIBtnSound");
static_assert(sizeof(X6SoundLibrary_C_BP_PlayUIBtnSound) == 0x000010, "Wrong size on X6SoundLibrary_C_BP_PlayUIBtnSound");
static_assert(offsetof(X6SoundLibrary_C_BP_PlayUIBtnSound, Event) == 0x000000, "Member 'X6SoundLibrary_C_BP_PlayUIBtnSound::Event' has a wrong offset!");
static_assert(offsetof(X6SoundLibrary_C_BP_PlayUIBtnSound, __WorldContext) == 0x000008, "Member 'X6SoundLibrary_C_BP_PlayUIBtnSound::__WorldContext' has a wrong offset!");

}

