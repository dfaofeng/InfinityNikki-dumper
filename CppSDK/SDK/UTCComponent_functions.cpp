#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UTCComponent

#include "Basic.hpp"

#include "UTCComponent_classes.hpp"
#include "UTCComponent_parameters.hpp"


namespace SDK
{

// Function UTCComponent.UTCComponent_C.Add Finger Location
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ETouchIndex                             Finger_Index                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCComponent_C::Add_Finger_Location(ETouchIndex Finger_Index, const struct FVector& Location, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCComponent_C", "Add Finger Location");

	Params::UTCComponent_C_Add_Finger_Location Parms{};

	Parms.Finger_Index = Finger_Index;
	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function UTCComponent.UTCComponent_C.BP_GetDeviceType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EDeviceScreenSizeType*                  NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCComponent_C::BP_GetDeviceType(EDeviceScreenSizeType* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCComponent_C", "BP_GetDeviceType");

	Params::UTCComponent_C_BP_GetDeviceType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function UTCComponent.UTCComponent_C.BP_GetJoystickOffset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector2D*                       Offset                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 Scale                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCComponent_C::BP_GetJoystickOffset(struct FVector2D* Offset, double* Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCComponent_C", "BP_GetJoystickOffset");

	Params::UTCComponent_C_BP_GetJoystickOffset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Offset != nullptr)
		*Offset = std::move(Parms.Offset);

	if (Scale != nullptr)
		*Scale = Parms.Scale;
}


// Function UTCComponent.UTCComponent_C.BP_GetPixelRateStandardToReal
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double*                                 Rate                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCComponent_C::BP_GetPixelRateStandardToReal(double* Rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCComponent_C", "BP_GetPixelRateStandardToReal");

	Params::UTCComponent_C_BP_GetPixelRateStandardToReal Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Rate != nullptr)
		*Rate = Parms.Rate;
}


// Function UTCComponent.UTCComponent_C.BP_GetTouchSensitivity
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double*                                 Rate                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCComponent_C::BP_GetTouchSensitivity(double* Rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCComponent_C", "BP_GetTouchSensitivity");

	Params::UTCComponent_C_BP_GetTouchSensitivity Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Rate != nullptr)
		*Rate = Parms.Rate;
}


// Function UTCComponent.UTCComponent_C.BP_UpdateCameraInputModifyStage
// (Public, BlueprintCallable, BlueprintEvent)

void UUTCComponent_C::BP_UpdateCameraInputModifyStage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCComponent_C", "BP_UpdateCameraInputModifyStage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UTCComponent.UTCComponent_C.Check Bounds
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   In_Bounds                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   out_Bounds                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   In_Bounds_by_X                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   In_Bounds_by_Y                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCComponent_C::Check_Bounds(const struct FVector& Location, bool* In_Bounds, bool* out_Bounds, bool* In_Bounds_by_X, bool* In_Bounds_by_Y)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCComponent_C", "Check Bounds");

	Params::UTCComponent_C_Check_Bounds Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);

	if (In_Bounds != nullptr)
		*In_Bounds = Parms.In_Bounds;

	if (out_Bounds != nullptr)
		*out_Bounds = Parms.out_Bounds;

	if (In_Bounds_by_X != nullptr)
		*In_Bounds_by_X = Parms.In_Bounds_by_X;

	if (In_Bounds_by_Y != nullptr)
		*In_Bounds_by_Y = Parms.In_Bounds_by_Y;
}


// Function UTCComponent.UTCComponent_C.Check Is Viewport Size Changed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCComponent_C::Check_Is_Viewport_Size_Changed(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCComponent_C", "Check Is Viewport Size Changed");

	Params::UTCComponent_C_Check_Is_Viewport_Size_Changed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function UTCComponent.UTCComponent_C.Disable Network Connection Checking
// (BlueprintCallable, BlueprintEvent)

void UUTCComponent_C::Disable_Network_Connection_Checking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCComponent_C", "Disable Network Connection Checking");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UTCComponent.UTCComponent_C.ExecuteUbergraph_UTCComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCComponent_C::ExecuteUbergraph_UTCComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCComponent_C", "ExecuteUbergraph_UTCComponent");

	Params::UTCComponent_C_ExecuteUbergraph_UTCComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCComponent.UTCComponent_C.Filter By Active
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class UUTCComponent_C*>&         UTCComponents                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// TArray<class UUTCComponent_C*>*         Active_Components                                      (Parm, OutParm, ContainsInstancedReference)

void UUTCComponent_C::Filter_By_Active(TArray<class UUTCComponent_C*>& UTCComponents, TArray<class UUTCComponent_C*>* Active_Components)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCComponent_C", "Filter By Active");

	Params::UTCComponent_C_Filter_By_Active Parms{};

	Parms.UTCComponents = std::move(UTCComponents);

	UObject::ProcessEvent(Func, &Parms);

	UTCComponents = std::move(Parms.UTCComponents);

	if (Active_Components != nullptr)
		*Active_Components = std::move(Parms.Active_Components);
}


// Function UTCComponent.UTCComponent_C.Get FingerIndex and Location by index
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETouchIndex*                            FingerIndex                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Is_Valid                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCComponent_C::Get_FingerIndex_and_Location_by_index(int32 Index_0, struct FVector* Location, ETouchIndex* FingerIndex, bool* Is_Valid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCComponent_C", "Get FingerIndex and Location by index");

	Params::UTCComponent_C_Get_FingerIndex_and_Location_by_index Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);

	if (FingerIndex != nullptr)
		*FingerIndex = Parms.FingerIndex;

	if (Is_Valid != nullptr)
		*Is_Valid = Parms.Is_Valid;
}


// Function UTCComponent.UTCComponent_C.Get Fingers Length
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32*                                  Length                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCComponent_C::Get_Fingers_Length(int32* Length)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCComponent_C", "Get Fingers Length");

	Params::UTCComponent_C_Get_Fingers_Length Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Length != nullptr)
		*Length = Parms.Length;
}


// Function UTCComponent.UTCComponent_C.Get Is Pawn Possessed by PC
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Is_Possessed_By_PC                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Is_Locally_Controlled                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCComponent_C::Get_Is_Pawn_Possessed_by_PC(bool* Is_Possessed_By_PC, bool* Is_Locally_Controlled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCComponent_C", "Get Is Pawn Possessed by PC");

	Params::UTCComponent_C_Get_Is_Pawn_Possessed_by_PC Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Is_Possessed_By_PC != nullptr)
		*Is_Possessed_By_PC = Parms.Is_Possessed_By_PC;

	if (Is_Locally_Controlled != nullptr)
		*Is_Locally_Controlled = Parms.Is_Locally_Controlled;
}


// Function UTCComponent.UTCComponent_C.Get Screen Size By Size In Percents
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector2D&                 InVec                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector2D UUTCComponent_C::Get_Screen_Size_By_Size_In_Percents(const struct FVector2D& InVec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCComponent_C", "Get Screen Size By Size In Percents");

	Params::UTCComponent_C_Get_Screen_Size_By_Size_In_Percents Parms{};

	Parms.InVec = std::move(InVec);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UTCComponent.UTCComponent_C.Is Bounding Enabled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UUTCComponent_C::Is_Bounding_Enabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCComponent_C", "Is Bounding Enabled");

	Params::UTCComponent_C_Is_Bounding_Enabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UTCComponent.UTCComponent_C.Is Finger Location Exists
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ETouchIndex                             Finger_Index                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCComponent_C::Is_Finger_Location_Exists(ETouchIndex Finger_Index, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCComponent_C", "Is Finger Location Exists");

	Params::UTCComponent_C_Is_Finger_Location_Exists Parms{};

	Parms.Finger_Index = Finger_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function UTCComponent.UTCComponent_C.Is Finger Slots Available
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UUTCComponent_C::Is_Finger_Slots_Available()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCComponent_C", "Is Finger Slots Available");

	Params::UTCComponent_C_Is_Finger_Slots_Available Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UTCComponent.UTCComponent_C.Is Pawn Possessed By PC
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Is_Possessed_0                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Is_Locally_Controlled                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCComponent_C::Is_Pawn_Possessed_By_PC(bool* Is_Possessed_0, bool* Is_Locally_Controlled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCComponent_C", "Is Pawn Possessed By PC");

	Params::UTCComponent_C_Is_Pawn_Possessed_By_PC Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Is_Possessed_0 != nullptr)
		*Is_Possessed_0 = Parms.Is_Possessed_0;

	if (Is_Locally_Controlled != nullptr)
		*Is_Locally_Controlled = Parms.Is_Locally_Controlled;
}


// Function UTCComponent.UTCComponent_C.Is Player Controller Loaded
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Is_Loaded                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCComponent_C::Is_Player_Controller_Loaded(bool* Is_Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCComponent_C", "Is Player Controller Loaded");

	Params::UTCComponent_C_Is_Player_Controller_Loaded Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Is_Loaded != nullptr)
		*Is_Loaded = Parms.Is_Loaded;
}


// Function UTCComponent.UTCComponent_C.On Event Touch Canceled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETouchIndex                             FingerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCComponent_C::On_Event_Touch_Canceled(const struct FVector& Location, ETouchIndex FingerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCComponent_C", "On Event Touch Canceled");

	Params::UTCComponent_C_On_Event_Touch_Canceled Parms{};

	Parms.Location = std::move(Location);
	Parms.FingerIndex = FingerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCComponent.UTCComponent_C.On Event Touch Moved
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETouchIndex                             FingerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCComponent_C::On_Event_Touch_Moved(const struct FVector& Location, ETouchIndex FingerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCComponent_C", "On Event Touch Moved");

	Params::UTCComponent_C_On_Event_Touch_Moved Parms{};

	Parms.Location = std::move(Location);
	Parms.FingerIndex = FingerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCComponent.UTCComponent_C.On Event Touch Pressed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETouchIndex                             FingerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCComponent_C::On_Event_Touch_Pressed(const struct FVector& Location, ETouchIndex FingerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCComponent_C", "On Event Touch Pressed");

	Params::UTCComponent_C_On_Event_Touch_Pressed Parms{};

	Parms.Location = std::move(Location);
	Parms.FingerIndex = FingerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCComponent.UTCComponent_C.On Event Touch Released
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETouchIndex                             FingerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCComponent_C::On_Event_Touch_Released(const struct FVector& Location, ETouchIndex FingerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCComponent_C", "On Event Touch Released");

	Params::UTCComponent_C_On_Event_Touch_Released Parms{};

	Parms.Location = std::move(Location);
	Parms.FingerIndex = FingerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCComponent.UTCComponent_C.On Pawn Possesed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      New_Controller                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UUTCComponent_C::On_Pawn_Possesed(class AController* New_Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCComponent_C", "On Pawn Possesed");

	Params::UTCComponent_C_On_Pawn_Possesed Parms{};

	Parms.New_Controller = New_Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCComponent.UTCComponent_C.On Pawn Unpossesed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Old_Controller                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UUTCComponent_C::On_Pawn_Unpossesed(class AController* Old_Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCComponent_C", "On Pawn Unpossesed");

	Params::UTCComponent_C_On_Pawn_Unpossesed Parms{};

	Parms.Old_Controller = Old_Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCComponent.UTCComponent_C.On Viewport Size Is Changed
// (Public, BlueprintCallable, BlueprintEvent)

void UUTCComponent_C::On_Viewport_Size_Is_Changed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCComponent_C", "On Viewport Size Is Changed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UTCComponent.UTCComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UUTCComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UTCComponent.UTCComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCComponent_C", "ReceiveTick");

	Params::UTCComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCComponent.UTCComponent_C.Remove Finger Location
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ETouchIndex                             Finger_Index                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCComponent_C::Remove_Finger_Location(ETouchIndex Finger_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCComponent_C", "Remove Finger Location");

	Params::UTCComponent_C_Remove_Finger_Location Parms{};

	Parms.Finger_Index = Finger_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCComponent.UTCComponent_C.Setup Background by Bounds
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Background_Widget_Class                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Hide_if_Pawn_Unpossessed                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCComponent_C::Setup_Background_by_Bounds(class UClass* Background_Widget_Class, bool Hide_if_Pawn_Unpossessed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCComponent_C", "Setup Background by Bounds");

	Params::UTCComponent_C_Setup_Background_by_Bounds Parms{};

	Parms.Background_Widget_Class = Background_Widget_Class;
	Parms.Hide_if_Pawn_Unpossessed = Hide_if_Pawn_Unpossessed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCComponent.UTCComponent_C.Setup Background by Size and Origin
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Widget_Class                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Hide_if_Pawn_Unpossessed                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 Origin                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Origin_In_Percent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 Size                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Size_In_Percent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Rectangular__by_greater_value_of_Size_                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCComponent_C::Setup_Background_by_Size_and_Origin(class UClass* Widget_Class, bool Hide_if_Pawn_Unpossessed, const struct FVector2D& Origin, bool Origin_In_Percent, const struct FVector2D& Size, bool Size_In_Percent, bool Rectangular__by_greater_value_of_Size_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCComponent_C", "Setup Background by Size and Origin");

	Params::UTCComponent_C_Setup_Background_by_Size_and_Origin Parms{};

	Parms.Widget_Class = Widget_Class;
	Parms.Hide_if_Pawn_Unpossessed = Hide_if_Pawn_Unpossessed;
	Parms.Origin = std::move(Origin);
	Parms.Origin_In_Percent = Origin_In_Percent;
	Parms.Size = std::move(Size);
	Parms.Size_In_Percent = Size_In_Percent;
	Parms.Rectangular__by_greater_value_of_Size_ = Rectangular__by_greater_value_of_Size_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCComponent.UTCComponent_C.Setup Background Widget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Background_Widget_Class                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Hide_if_Pawn_Unpossessed                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Use_Bounds_Size_and_Origin                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 Origin__if_you_re_not_using_bounds_                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Origin_In_Percent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 Size__if_you_re_not_using_bounds_                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Size_In_Percent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Rectangular__by_greater_value_of_Size_                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCComponent_C::Setup_Background_Widget(class UClass* Background_Widget_Class, bool Hide_if_Pawn_Unpossessed, bool Use_Bounds_Size_and_Origin, const struct FVector2D& Origin__if_you_re_not_using_bounds_, bool Origin_In_Percent, const struct FVector2D& Size__if_you_re_not_using_bounds_, bool Size_In_Percent, bool Rectangular__by_greater_value_of_Size_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCComponent_C", "Setup Background Widget");

	Params::UTCComponent_C_Setup_Background_Widget Parms{};

	Parms.Background_Widget_Class = Background_Widget_Class;
	Parms.Hide_if_Pawn_Unpossessed = Hide_if_Pawn_Unpossessed;
	Parms.Use_Bounds_Size_and_Origin = Use_Bounds_Size_and_Origin;
	Parms.Origin__if_you_re_not_using_bounds_ = std::move(Origin__if_you_re_not_using_bounds_);
	Parms.Origin_In_Percent = Origin_In_Percent;
	Parms.Size__if_you_re_not_using_bounds_ = std::move(Size__if_you_re_not_using_bounds_);
	Parms.Size_In_Percent = Size_In_Percent;
	Parms.Rectangular__by_greater_value_of_Size_ = Rectangular__by_greater_value_of_Size_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCComponent.UTCComponent_C.Setup Bounds
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Is_Enabled                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 Bounds_Origin_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 Bounds_Size_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    In_Percent                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Rect__by_greater_value_                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCComponent_C::Setup_Bounds(bool Is_Enabled, const struct FVector2D& Bounds_Origin_0, const struct FVector2D& Bounds_Size_0, bool In_Percent, bool Rect__by_greater_value_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCComponent_C", "Setup Bounds");

	Params::UTCComponent_C_Setup_Bounds Parms{};

	Parms.Is_Enabled = Is_Enabled;
	Parms.Bounds_Origin_0 = std::move(Bounds_Origin_0);
	Parms.Bounds_Size_0 = std::move(Bounds_Size_0);
	Parms.In_Percent = In_Percent;
	Parms.Rect__by_greater_value_ = Rect__by_greater_value_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCComponent.UTCComponent_C.Update Background Widget
// (Public, BlueprintCallable, BlueprintEvent)

void UUTCComponent_C::Update_Background_Widget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCComponent_C", "Update Background Widget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UTCComponent.UTCComponent_C.Update Bounds In Percent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Is_Viewport_Size_Changed                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCComponent_C::Update_Bounds_In_Percent(bool Is_Viewport_Size_Changed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCComponent_C", "Update Bounds In Percent");

	Params::UTCComponent_C_Update_Bounds_In_Percent Parms{};

	Parms.Is_Viewport_Size_Changed = Is_Viewport_Size_Changed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCComponent.UTCComponent_C.Update Finger Location
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ETouchIndex                             Finger_Index                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   New_Location                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUTCComponent_C::Update_Finger_Location(ETouchIndex Finger_Index, const struct FVector& New_Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCComponent_C", "Update Finger Location");

	Params::UTCComponent_C_Update_Finger_Location Parms{};

	Parms.Finger_Index = Finger_Index;
	Parms.New_Location = std::move(New_Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UTCComponent.UTCComponent_C.Filter By Bounds
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TArray<class UUTCComponent_C*>&         UTC_Components                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UUTCComponent_C*>*         In_Bounds                                              (Parm, OutParm, ContainsInstancedReference)
// TArray<class UUTCComponent_C*>*         out_Bounds                                             (Parm, OutParm, ContainsInstancedReference)
// TArray<class UUTCComponent_C*>*         Both                                                   (Parm, OutParm, ContainsInstancedReference)

void UUTCComponent_C::Filter_By_Bounds(TArray<class UUTCComponent_C*>& UTC_Components, const struct FVector& Location, TArray<class UUTCComponent_C*>* In_Bounds, TArray<class UUTCComponent_C*>* out_Bounds, TArray<class UUTCComponent_C*>* Both) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCComponent_C", "Filter By Bounds");

	Params::UTCComponent_C_Filter_By_Bounds Parms{};

	Parms.UTC_Components = std::move(UTC_Components);
	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);

	UTC_Components = std::move(Parms.UTC_Components);

	if (In_Bounds != nullptr)
		*In_Bounds = std::move(Parms.In_Bounds);

	if (out_Bounds != nullptr)
		*out_Bounds = std::move(Parms.out_Bounds);

	if (Both != nullptr)
		*Both = std::move(Parms.Both);
}


// Function UTCComponent.UTCComponent_C.GetModuleName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UUTCComponent_C::GetModuleName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCComponent_C", "GetModuleName");

	Params::UTCComponent_C_GetModuleName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UTCComponent.UTCComponent_C.Sort By Priority
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TArray<class UUTCComponent_C*>&         UTC_Components                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// TArray<class UUTCComponent_C*>*         _Higher_Priority                                       (Parm, OutParm, ContainsInstancedReference)

void UUTCComponent_C::Sort_By_Priority(TArray<class UUTCComponent_C*>& UTC_Components, TArray<class UUTCComponent_C*>* _Higher_Priority) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UTCComponent_C", "Sort By Priority");

	Params::UTCComponent_C_Sort_By_Priority Parms{};

	Parms.UTC_Components = std::move(UTC_Components);

	UObject::ProcessEvent(Func, &Parms);

	UTC_Components = std::move(Parms.UTC_Components);

	if (_Higher_Priority != nullptr)
		*_Higher_Priority = std::move(Parms._Higher_Priority);
}

}

