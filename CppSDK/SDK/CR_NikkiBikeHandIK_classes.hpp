#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CR_NikkiBikeHandIK

#include "Basic.hpp"

#include "ControlRig_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// RigVMBlueprintGeneratedClass CR_NikkiBikeHandIK.CR_NikkiBikeHandIK_C
// 0x0068 (0x0B10 - 0x0AA8)
class UCR_NikkiBikeHandIK_C final : public UControlRig
{
public:
	bool                                          bEnableHandIK;                                     // 0x0AA8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnableLHandIKRotation;                            // 0x0AA9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnableLHandIKPosition;                            // 0x0AAA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnableRHandIKRotation;                            // 0x0AAB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnableRHandIKPosition;                            // 0x0AAC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AAD[0x3];                                      // 0x0AAD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RHandIKPosition;                                   // 0x0AB0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RHandIKRotation;                                   // 0x0AC8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                LHandIKPosition;                                   // 0x0AE0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               LHandIKRotation;                                   // 0x0AF8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CR_NikkiBikeHandIK_C">();
	}
	static class UCR_NikkiBikeHandIK_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCR_NikkiBikeHandIK_C>();
	}
};
static_assert(alignof(UCR_NikkiBikeHandIK_C) == 0x000008, "Wrong alignment on UCR_NikkiBikeHandIK_C");
static_assert(sizeof(UCR_NikkiBikeHandIK_C) == 0x000B10, "Wrong size on UCR_NikkiBikeHandIK_C");
static_assert(offsetof(UCR_NikkiBikeHandIK_C, bEnableHandIK) == 0x000AA8, "Member 'UCR_NikkiBikeHandIK_C::bEnableHandIK' has a wrong offset!");
static_assert(offsetof(UCR_NikkiBikeHandIK_C, bEnableLHandIKRotation) == 0x000AA9, "Member 'UCR_NikkiBikeHandIK_C::bEnableLHandIKRotation' has a wrong offset!");
static_assert(offsetof(UCR_NikkiBikeHandIK_C, bEnableLHandIKPosition) == 0x000AAA, "Member 'UCR_NikkiBikeHandIK_C::bEnableLHandIKPosition' has a wrong offset!");
static_assert(offsetof(UCR_NikkiBikeHandIK_C, bEnableRHandIKRotation) == 0x000AAB, "Member 'UCR_NikkiBikeHandIK_C::bEnableRHandIKRotation' has a wrong offset!");
static_assert(offsetof(UCR_NikkiBikeHandIK_C, bEnableRHandIKPosition) == 0x000AAC, "Member 'UCR_NikkiBikeHandIK_C::bEnableRHandIKPosition' has a wrong offset!");
static_assert(offsetof(UCR_NikkiBikeHandIK_C, RHandIKPosition) == 0x000AB0, "Member 'UCR_NikkiBikeHandIK_C::RHandIKPosition' has a wrong offset!");
static_assert(offsetof(UCR_NikkiBikeHandIK_C, RHandIKRotation) == 0x000AC8, "Member 'UCR_NikkiBikeHandIK_C::RHandIKRotation' has a wrong offset!");
static_assert(offsetof(UCR_NikkiBikeHandIK_C, LHandIKPosition) == 0x000AE0, "Member 'UCR_NikkiBikeHandIK_C::LHandIKPosition' has a wrong offset!");
static_assert(offsetof(UCR_NikkiBikeHandIK_C, LHandIKRotation) == 0x000AF8, "Member 'UCR_NikkiBikeHandIK_C::LHandIKRotation' has a wrong offset!");

}

