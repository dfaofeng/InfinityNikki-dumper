#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NPCPhotoReactionLogicConfig_Template

#include "Basic.hpp"

#include "X6Game_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "Enum_HumanPositions_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_NPCPhotoReactionLogicConfig_Template.BP_NPCPhotoReactionLogicConfig_Template_C
// 0x00D8 (0x0108 - 0x0030)
class UBP_NPCPhotoReactionLogicConfig_Template_C final : public UPrimaryDataAsset
{
public:
	ELookAtEventType                              LookAtEventType;                                   // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMontageBlendSettings                  AnimationBlendInSetting;                           // 0x0038(0x0020)(Edit, BlueprintVisible, NoDestructor)
	struct FMontageBlendSettings                  AnimationBlendOutSetting;                          // 0x0058(0x0020)(Edit, BlueprintVisible, NoDestructor)
	TMap<Enum_HumanPositions, class FString>      HumanPositionFormat;                               // 0x0078(0x0050)(Edit, BlueprintVisible)
	struct FMontageBlendSettings                  AnimWithHandHeldBlendInSetting;                    // 0x00C8(0x0020)(Edit, BlueprintVisible, NoDestructor)
	struct FMontageBlendSettings                  AnimWithHandHeldBlendOutSetting;                   // 0x00E8(0x0020)(Edit, BlueprintVisible, NoDestructor)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_NPCPhotoReactionLogicConfig_Template_C">();
	}
	static class UBP_NPCPhotoReactionLogicConfig_Template_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_NPCPhotoReactionLogicConfig_Template_C>();
	}
};
static_assert(alignof(UBP_NPCPhotoReactionLogicConfig_Template_C) == 0x000008, "Wrong alignment on UBP_NPCPhotoReactionLogicConfig_Template_C");
static_assert(sizeof(UBP_NPCPhotoReactionLogicConfig_Template_C) == 0x000108, "Wrong size on UBP_NPCPhotoReactionLogicConfig_Template_C");
static_assert(offsetof(UBP_NPCPhotoReactionLogicConfig_Template_C, LookAtEventType) == 0x000030, "Member 'UBP_NPCPhotoReactionLogicConfig_Template_C::LookAtEventType' has a wrong offset!");
static_assert(offsetof(UBP_NPCPhotoReactionLogicConfig_Template_C, AnimationBlendInSetting) == 0x000038, "Member 'UBP_NPCPhotoReactionLogicConfig_Template_C::AnimationBlendInSetting' has a wrong offset!");
static_assert(offsetof(UBP_NPCPhotoReactionLogicConfig_Template_C, AnimationBlendOutSetting) == 0x000058, "Member 'UBP_NPCPhotoReactionLogicConfig_Template_C::AnimationBlendOutSetting' has a wrong offset!");
static_assert(offsetof(UBP_NPCPhotoReactionLogicConfig_Template_C, HumanPositionFormat) == 0x000078, "Member 'UBP_NPCPhotoReactionLogicConfig_Template_C::HumanPositionFormat' has a wrong offset!");
static_assert(offsetof(UBP_NPCPhotoReactionLogicConfig_Template_C, AnimWithHandHeldBlendInSetting) == 0x0000C8, "Member 'UBP_NPCPhotoReactionLogicConfig_Template_C::AnimWithHandHeldBlendInSetting' has a wrong offset!");
static_assert(offsetof(UBP_NPCPhotoReactionLogicConfig_Template_C, AnimWithHandHeldBlendOutSetting) == 0x0000E8, "Member 'UBP_NPCPhotoReactionLogicConfig_Template_C::AnimWithHandHeldBlendOutSetting' has a wrong offset!");

}

