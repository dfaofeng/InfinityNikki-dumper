#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_AbilityHit_Player

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "EHitPlayerState_structs.hpp"
#include "F_PlayerHitBackSet_structs.hpp"
#include "GA_AbilityHitBase_classes.hpp"
#include "ECombatHitDir_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_AbilityHit_Player.GA_AbilityHit_Player_C
// 0x0058 (0x05F8 - 0x05A0)
class UGA_AbilityHit_Player_C final : public UGA_AbilityHitBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_AbilityHit_Player_C;             // 0x05A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TMap<EHitPlayerState, struct FF_PlayerHitBackSet> BP_NikkiHitBackConfigs;                        // 0x05A8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void BP_ShouldFly(EHitPlayerState HitStateType, const struct FGameplayTag& HitBackTag, ECombatHitDir Direction, bool* bShouldFly);
	void ExecuteUbergraph_GA_AbilityHit_Player(int32 EntryPoint);
	void K2_ActivateAbility();

	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_AbilityHit_Player_C">();
	}
	static class UGA_AbilityHit_Player_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_AbilityHit_Player_C>();
	}
};
static_assert(alignof(UGA_AbilityHit_Player_C) == 0x000008, "Wrong alignment on UGA_AbilityHit_Player_C");
static_assert(sizeof(UGA_AbilityHit_Player_C) == 0x0005F8, "Wrong size on UGA_AbilityHit_Player_C");
static_assert(offsetof(UGA_AbilityHit_Player_C, UberGraphFrame_GA_AbilityHit_Player_C) == 0x0005A0, "Member 'UGA_AbilityHit_Player_C::UberGraphFrame_GA_AbilityHit_Player_C' has a wrong offset!");
static_assert(offsetof(UGA_AbilityHit_Player_C, BP_NikkiHitBackConfigs) == 0x0005A8, "Member 'UGA_AbilityHit_Player_C::BP_NikkiHitBackConfigs' has a wrong offset!");

}

