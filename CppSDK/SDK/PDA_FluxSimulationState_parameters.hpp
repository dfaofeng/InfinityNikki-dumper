#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PDA_FluxSimulationState

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "BS_FluxRectBlend_structs.hpp"


namespace SDK::Params
{

// Function PDA_FluxSimulationState.PDA_FluxSimulationState_C.ApplyNiagaraData
// 0x0080 (0x0080 - 0x0000)
struct PDA_FluxSimulationState_C_ApplyNiagaraData final
{
public:
	class UNiagaraComponent*                      NiagaraSystem;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          UseGround;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseSurface;                                        // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetDecodeVector_LinearColor;              // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               CallFunc_GetAreaBlendBorders_ReturnValue;          // 0x0030(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_IntPointToVector2D_ReturnValue;      // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue;      // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PDA_FluxSimulationState_C_ApplyNiagaraData) == 0x000010, "Wrong alignment on PDA_FluxSimulationState_C_ApplyNiagaraData");
static_assert(sizeof(PDA_FluxSimulationState_C_ApplyNiagaraData) == 0x000080, "Wrong size on PDA_FluxSimulationState_C_ApplyNiagaraData");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyNiagaraData, NiagaraSystem) == 0x000000, "Member 'PDA_FluxSimulationState_C_ApplyNiagaraData::NiagaraSystem' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyNiagaraData, UseGround) == 0x000008, "Member 'PDA_FluxSimulationState_C_ApplyNiagaraData::UseGround' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyNiagaraData, UseSurface) == 0x000009, "Member 'PDA_FluxSimulationState_C_ApplyNiagaraData::UseSurface' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyNiagaraData, CallFunc_GetDecodeVector_LinearColor) == 0x000010, "Member 'PDA_FluxSimulationState_C_ApplyNiagaraData::CallFunc_GetDecodeVector_LinearColor' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyNiagaraData, CallFunc_GetAreaBlendBorders_ReturnValue) == 0x000030, "Member 'PDA_FluxSimulationState_C_ApplyNiagaraData::CallFunc_GetAreaBlendBorders_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyNiagaraData, CallFunc_Conv_IntPointToVector2D_ReturnValue) == 0x000050, "Member 'PDA_FluxSimulationState_C_ApplyNiagaraData::CallFunc_Conv_IntPointToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyNiagaraData, CallFunc_Divide_Vector2DVector2D_ReturnValue) == 0x000060, "Member 'PDA_FluxSimulationState_C_ApplyNiagaraData::CallFunc_Divide_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyNiagaraData, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000070, "Member 'PDA_FluxSimulationState_C_ApplyNiagaraData::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");

// Function PDA_FluxSimulationState.PDA_FluxSimulationState_C.CopyPropertiesToObject
// 0x0028 (0x0028 - 0x0000)
struct PDA_FluxSimulationState_C_CopyPropertiesToObject final
{
public:
	class UObject*                                Destination;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Done;                                              // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPDA_FluxSimulationState_C*             TargetObject;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UPDA_FluxSimulationState_C*             K2Node_DynamicCast_AsPDA_Flux_Simulation_State;    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PDA_FluxSimulationState_C_CopyPropertiesToObject) == 0x000008, "Wrong alignment on PDA_FluxSimulationState_C_CopyPropertiesToObject");
static_assert(sizeof(PDA_FluxSimulationState_C_CopyPropertiesToObject) == 0x000028, "Wrong size on PDA_FluxSimulationState_C_CopyPropertiesToObject");
static_assert(offsetof(PDA_FluxSimulationState_C_CopyPropertiesToObject, Destination) == 0x000000, "Member 'PDA_FluxSimulationState_C_CopyPropertiesToObject::Destination' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_CopyPropertiesToObject, Done) == 0x000008, "Member 'PDA_FluxSimulationState_C_CopyPropertiesToObject::Done' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_CopyPropertiesToObject, TargetObject) == 0x000010, "Member 'PDA_FluxSimulationState_C_CopyPropertiesToObject::TargetObject' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_CopyPropertiesToObject, K2Node_DynamicCast_AsPDA_Flux_Simulation_State) == 0x000018, "Member 'PDA_FluxSimulationState_C_CopyPropertiesToObject::K2Node_DynamicCast_AsPDA_Flux_Simulation_State' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_CopyPropertiesToObject, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'PDA_FluxSimulationState_C_CopyPropertiesToObject::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function PDA_FluxSimulationState.PDA_FluxSimulationState_C.ExecuteUbergraph_PDA_FluxSimulationState
// 0x0004 (0x0004 - 0x0000)
struct PDA_FluxSimulationState_C_ExecuteUbergraph_PDA_FluxSimulationState final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PDA_FluxSimulationState_C_ExecuteUbergraph_PDA_FluxSimulationState) == 0x000004, "Wrong alignment on PDA_FluxSimulationState_C_ExecuteUbergraph_PDA_FluxSimulationState");
static_assert(sizeof(PDA_FluxSimulationState_C_ExecuteUbergraph_PDA_FluxSimulationState) == 0x000004, "Wrong size on PDA_FluxSimulationState_C_ExecuteUbergraph_PDA_FluxSimulationState");
static_assert(offsetof(PDA_FluxSimulationState_C_ExecuteUbergraph_PDA_FluxSimulationState, EntryPoint) == 0x000000, "Member 'PDA_FluxSimulationState_C_ExecuteUbergraph_PDA_FluxSimulationState::EntryPoint' has a wrong offset!");

// Function PDA_FluxSimulationState.PDA_FluxSimulationState_C.GetExternalFiles
// 0x0040 (0x0040 - 0x0000)
struct PDA_FluxSimulationState_C_GetExternalFiles final
{
public:
	TArray<class UTexture*>                       List;                                              // 0x0000(0x0010)(Parm, OutParm)
	TArray<class UTexture*>                       NewLocalVar_0;                                     // 0x0010(0x0010)(Edit, BlueprintVisible)
	const class UTexture*                         Temp_object_Variable;                              // 0x0020(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UTexture*>                       K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ReferenceParm)
};
static_assert(alignof(PDA_FluxSimulationState_C_GetExternalFiles) == 0x000008, "Wrong alignment on PDA_FluxSimulationState_C_GetExternalFiles");
static_assert(sizeof(PDA_FluxSimulationState_C_GetExternalFiles) == 0x000040, "Wrong size on PDA_FluxSimulationState_C_GetExternalFiles");
static_assert(offsetof(PDA_FluxSimulationState_C_GetExternalFiles, List) == 0x000000, "Member 'PDA_FluxSimulationState_C_GetExternalFiles::List' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetExternalFiles, NewLocalVar_0) == 0x000010, "Member 'PDA_FluxSimulationState_C_GetExternalFiles::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetExternalFiles, Temp_object_Variable) == 0x000020, "Member 'PDA_FluxSimulationState_C_GetExternalFiles::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetExternalFiles, CallFunc_Array_RemoveItem_ReturnValue) == 0x000028, "Member 'PDA_FluxSimulationState_C_GetExternalFiles::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetExternalFiles, K2Node_MakeArray_Array) == 0x000030, "Member 'PDA_FluxSimulationState_C_GetExternalFiles::K2Node_MakeArray_Array' has a wrong offset!");

// Function PDA_FluxSimulationState.PDA_FluxSimulationState_C.GetExternalReferences
// 0x0040 (0x0040 - 0x0000)
struct PDA_FluxSimulationState_C_GetExternalReferences final
{
public:
	TArray<class UTexture*>                       Objects;                                           // 0x0000(0x0010)(Parm, OutParm)
	TArray<class UTexture*>                       Temp;                                              // 0x0010(0x0010)(Edit, BlueprintVisible)
	const class UTexture*                         Temp_object_Variable;                              // 0x0020(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UTexture*>                       K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ReferenceParm)
};
static_assert(alignof(PDA_FluxSimulationState_C_GetExternalReferences) == 0x000008, "Wrong alignment on PDA_FluxSimulationState_C_GetExternalReferences");
static_assert(sizeof(PDA_FluxSimulationState_C_GetExternalReferences) == 0x000040, "Wrong size on PDA_FluxSimulationState_C_GetExternalReferences");
static_assert(offsetof(PDA_FluxSimulationState_C_GetExternalReferences, Objects) == 0x000000, "Member 'PDA_FluxSimulationState_C_GetExternalReferences::Objects' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetExternalReferences, Temp) == 0x000010, "Member 'PDA_FluxSimulationState_C_GetExternalReferences::Temp' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetExternalReferences, Temp_object_Variable) == 0x000020, "Member 'PDA_FluxSimulationState_C_GetExternalReferences::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetExternalReferences, CallFunc_Array_RemoveItem_ReturnValue) == 0x000028, "Member 'PDA_FluxSimulationState_C_GetExternalReferences::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetExternalReferences, K2Node_MakeArray_Array) == 0x000030, "Member 'PDA_FluxSimulationState_C_GetExternalReferences::K2Node_MakeArray_Array' has a wrong offset!");

// Function PDA_FluxSimulationState.PDA_FluxSimulationState_C.GetLODScale
// 0x0020 (0x0020 - 0x0000)
struct PDA_FluxSimulationState_C_GetLODScale final
{
public:
	int32                                         Integer;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PDA_FluxSimulationState_C_GetLODScale) == 0x000008, "Wrong alignment on PDA_FluxSimulationState_C_GetLODScale");
static_assert(sizeof(PDA_FluxSimulationState_C_GetLODScale) == 0x000020, "Wrong size on PDA_FluxSimulationState_C_GetLODScale");
static_assert(offsetof(PDA_FluxSimulationState_C_GetLODScale, Integer) == 0x000000, "Member 'PDA_FluxSimulationState_C_GetLODScale::Integer' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetLODScale, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000008, "Member 'PDA_FluxSimulationState_C_GetLODScale::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetLODScale, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000010, "Member 'PDA_FluxSimulationState_C_GetLODScale::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetLODScale, CallFunc_FTrunc_ReturnValue) == 0x000018, "Member 'PDA_FluxSimulationState_C_GetLODScale::CallFunc_FTrunc_ReturnValue' has a wrong offset!");

// Function PDA_FluxSimulationState.PDA_FluxSimulationState_C.GetPathNames
// 0x0078 (0x0078 - 0x0000)
struct PDA_FluxSimulationState_C_GetPathNames final
{
public:
	TArray<class FString>                         Output_Get;                                        // 0x0000(0x0010)(Parm, OutParm)
	TArray<class FString>                         Output;                                            // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_FluxExportData_C> CallFunc_GetExternalReferences_self_CastInput;     // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UTexture*>                       CallFunc_GetExternalReferences_Objects;            // 0x0040(0x0010)(ReferenceParm)
	class UTexture*                               CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPathName_ReturnValue;                  // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PDA_FluxSimulationState_C_GetPathNames) == 0x000008, "Wrong alignment on PDA_FluxSimulationState_C_GetPathNames");
static_assert(sizeof(PDA_FluxSimulationState_C_GetPathNames) == 0x000078, "Wrong size on PDA_FluxSimulationState_C_GetPathNames");
static_assert(offsetof(PDA_FluxSimulationState_C_GetPathNames, Output_Get) == 0x000000, "Member 'PDA_FluxSimulationState_C_GetPathNames::Output_Get' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetPathNames, Output) == 0x000010, "Member 'PDA_FluxSimulationState_C_GetPathNames::Output' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetPathNames, Temp_int_Array_Index_Variable) == 0x000020, "Member 'PDA_FluxSimulationState_C_GetPathNames::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetPathNames, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'PDA_FluxSimulationState_C_GetPathNames::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetPathNames, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'PDA_FluxSimulationState_C_GetPathNames::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetPathNames, CallFunc_GetExternalReferences_self_CastInput) == 0x000030, "Member 'PDA_FluxSimulationState_C_GetPathNames::CallFunc_GetExternalReferences_self_CastInput' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetPathNames, CallFunc_GetExternalReferences_Objects) == 0x000040, "Member 'PDA_FluxSimulationState_C_GetPathNames::CallFunc_GetExternalReferences_Objects' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetPathNames, CallFunc_Array_Get_Item) == 0x000050, "Member 'PDA_FluxSimulationState_C_GetPathNames::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetPathNames, CallFunc_GetPathName_ReturnValue) == 0x000058, "Member 'PDA_FluxSimulationState_C_GetPathNames::CallFunc_GetPathName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetPathNames, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'PDA_FluxSimulationState_C_GetPathNames::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetPathNames, CallFunc_Array_AddUnique_ReturnValue) == 0x00006C, "Member 'PDA_FluxSimulationState_C_GetPathNames::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetPathNames, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'PDA_FluxSimulationState_C_GetPathNames::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function PDA_FluxSimulationState.PDA_FluxSimulationState_C.GetVolumeTransform
// 0x0170 (0x0170 - 0x0000)
struct PDA_FluxSimulationState_C_GetVolumeTransform final
{
public:
	struct FVector                                ExtraSize;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Scale;                                             // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ZOffsetScale;                                      // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             NewParam;                                          // 0x0040(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_108[0x8];                                      // 0x0108(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0110(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PDA_FluxSimulationState_C_GetVolumeTransform) == 0x000010, "Wrong alignment on PDA_FluxSimulationState_C_GetVolumeTransform");
static_assert(sizeof(PDA_FluxSimulationState_C_GetVolumeTransform) == 0x000170, "Wrong size on PDA_FluxSimulationState_C_GetVolumeTransform");
static_assert(offsetof(PDA_FluxSimulationState_C_GetVolumeTransform, ExtraSize) == 0x000000, "Member 'PDA_FluxSimulationState_C_GetVolumeTransform::ExtraSize' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetVolumeTransform, Scale) == 0x000018, "Member 'PDA_FluxSimulationState_C_GetVolumeTransform::Scale' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetVolumeTransform, ZOffsetScale) == 0x000030, "Member 'PDA_FluxSimulationState_C_GetVolumeTransform::ZOffsetScale' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetVolumeTransform, NewParam) == 0x000040, "Member 'PDA_FluxSimulationState_C_GetVolumeTransform::NewParam' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetVolumeTransform, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A0, "Member 'PDA_FluxSimulationState_C_GetVolumeTransform::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetVolumeTransform, CallFunc_BreakVector_X) == 0x0000B8, "Member 'PDA_FluxSimulationState_C_GetVolumeTransform::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetVolumeTransform, CallFunc_BreakVector_Y) == 0x0000C0, "Member 'PDA_FluxSimulationState_C_GetVolumeTransform::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetVolumeTransform, CallFunc_BreakVector_Z) == 0x0000C8, "Member 'PDA_FluxSimulationState_C_GetVolumeTransform::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetVolumeTransform, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000D0, "Member 'PDA_FluxSimulationState_C_GetVolumeTransform::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetVolumeTransform, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000E8, "Member 'PDA_FluxSimulationState_C_GetVolumeTransform::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetVolumeTransform, CallFunc_MakeVector_ReturnValue) == 0x0000F0, "Member 'PDA_FluxSimulationState_C_GetVolumeTransform::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetVolumeTransform, CallFunc_MakeTransform_ReturnValue) == 0x000110, "Member 'PDA_FluxSimulationState_C_GetVolumeTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function PDA_FluxSimulationState.PDA_FluxSimulationState_C.SetSimulationTextures
// 0x0018 (0x0018 - 0x0000)
struct PDA_FluxSimulationState_C_SetSimulationTextures final
{
public:
	class UTexture*                               surface;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Ground;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Velocity;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PDA_FluxSimulationState_C_SetSimulationTextures) == 0x000008, "Wrong alignment on PDA_FluxSimulationState_C_SetSimulationTextures");
static_assert(sizeof(PDA_FluxSimulationState_C_SetSimulationTextures) == 0x000018, "Wrong size on PDA_FluxSimulationState_C_SetSimulationTextures");
static_assert(offsetof(PDA_FluxSimulationState_C_SetSimulationTextures, surface) == 0x000000, "Member 'PDA_FluxSimulationState_C_SetSimulationTextures::surface' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_SetSimulationTextures, Ground) == 0x000008, "Member 'PDA_FluxSimulationState_C_SetSimulationTextures::Ground' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_SetSimulationTextures, Velocity) == 0x000010, "Member 'PDA_FluxSimulationState_C_SetSimulationTextures::Velocity' has a wrong offset!");

// Function PDA_FluxSimulationState.PDA_FluxSimulationState_C.SetSimulationWorld
// 0x0058 (0x0058 - 0x0000)
struct PDA_FluxSimulationState_C_SetSimulationWorld final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Size;                                              // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Frame;                                             // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              Resolution_0;                                      // 0x0034(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBS_FluxRectBlend                      Blend;                                             // 0x003C(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DepthOffset;                                       // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PDA_FluxSimulationState_C_SetSimulationWorld) == 0x000008, "Wrong alignment on PDA_FluxSimulationState_C_SetSimulationWorld");
static_assert(sizeof(PDA_FluxSimulationState_C_SetSimulationWorld) == 0x000058, "Wrong size on PDA_FluxSimulationState_C_SetSimulationWorld");
static_assert(offsetof(PDA_FluxSimulationState_C_SetSimulationWorld, Location) == 0x000000, "Member 'PDA_FluxSimulationState_C_SetSimulationWorld::Location' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_SetSimulationWorld, Size) == 0x000018, "Member 'PDA_FluxSimulationState_C_SetSimulationWorld::Size' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_SetSimulationWorld, Frame) == 0x000030, "Member 'PDA_FluxSimulationState_C_SetSimulationWorld::Frame' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_SetSimulationWorld, Resolution_0) == 0x000034, "Member 'PDA_FluxSimulationState_C_SetSimulationWorld::Resolution_0' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_SetSimulationWorld, Blend) == 0x00003C, "Member 'PDA_FluxSimulationState_C_SetSimulationWorld::Blend' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_SetSimulationWorld, DepthOffset) == 0x000050, "Member 'PDA_FluxSimulationState_C_SetSimulationWorld::DepthOffset' has a wrong offset!");

// Function PDA_FluxSimulationState.PDA_FluxSimulationState_C.SetStateConfing
// 0x0020 (0x0020 - 0x0000)
struct PDA_FluxSimulationState_C_SetStateConfing final
{
public:
	bool                                          StaticFrame;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        VelocityNormalization;                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HeightNormalization;                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LevelOfDetail_0;                                   // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Compression_0;                                     // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PDA_FluxSimulationState_C_SetStateConfing) == 0x000008, "Wrong alignment on PDA_FluxSimulationState_C_SetStateConfing");
static_assert(sizeof(PDA_FluxSimulationState_C_SetStateConfing) == 0x000020, "Wrong size on PDA_FluxSimulationState_C_SetStateConfing");
static_assert(offsetof(PDA_FluxSimulationState_C_SetStateConfing, StaticFrame) == 0x000000, "Member 'PDA_FluxSimulationState_C_SetStateConfing::StaticFrame' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_SetStateConfing, VelocityNormalization) == 0x000008, "Member 'PDA_FluxSimulationState_C_SetStateConfing::VelocityNormalization' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_SetStateConfing, HeightNormalization) == 0x000010, "Member 'PDA_FluxSimulationState_C_SetStateConfing::HeightNormalization' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_SetStateConfing, LevelOfDetail_0) == 0x000018, "Member 'PDA_FluxSimulationState_C_SetStateConfing::LevelOfDetail_0' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_SetStateConfing, Compression_0) == 0x00001C, "Member 'PDA_FluxSimulationState_C_SetStateConfing::Compression_0' has a wrong offset!");

// Function PDA_FluxSimulationState.PDA_FluxSimulationState_C.ApplyMaterialData
// 0x0270 (0x0270 - 0x0000)
struct PDA_FluxSimulationState_C_ApplyMaterialData final
{
public:
	TArray<class UMaterialInstanceDynamic*>       MaterialInstances;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FBox2D                                 NewLocalVar_0;                                     // 0x0010(0x0028)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_10;                              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_11;                              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_11;                // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0xB];                                       // 0x00A5(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               CallFunc_GetAreaBlendBorders_ReturnValue;          // 0x00B0(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector4_X;                           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector4_Y;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector4_Z;                           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector4_W;                           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_1;                         // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_2;                         // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_3;                         // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_4;                         // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17D[0x3];                                      // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetDecodeVector_LinearColor;              // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_5;                         // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BD[0x3];                                      // 0x01BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_6;                         // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CD[0x3];                                      // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_7;                         // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DD[0x3];                                      // 0x01DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_8;                         // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_8;                // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1ED[0x3];                                      // 0x01ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_9;                         // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_9;                // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FD[0x3];                                      // 0x01FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_10;                        // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_10;              // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_10;               // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20D[0x3];                                      // 0x020D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x0210(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_11;                        // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_11;              // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_11;               // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22D[0x3];                                      // 0x022D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetPixelSize_WorldToSimulationUV;         // 0x0230(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetWorldToTextureUV_WorldToTextureUV;     // 0x0240(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_ImplicitCast;                  // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast;                  // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_ImplicitCast;                  // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast;                  // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_3; // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PDA_FluxSimulationState_C_ApplyMaterialData) == 0x000010, "Wrong alignment on PDA_FluxSimulationState_C_ApplyMaterialData");
static_assert(sizeof(PDA_FluxSimulationState_C_ApplyMaterialData) == 0x000270, "Wrong size on PDA_FluxSimulationState_C_ApplyMaterialData");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, MaterialInstances) == 0x000000, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::MaterialInstances' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, NewLocalVar_0) == 0x000010, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, Temp_int_Variable) == 0x000038, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, Temp_int_Variable_1) == 0x00003C, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, Temp_int_Variable_2) == 0x000048, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, Temp_int_Variable_3) == 0x00004C, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Add_IntInt_ReturnValue_2) == 0x000050, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Add_IntInt_ReturnValue_3) == 0x000054, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, Temp_int_Variable_4) == 0x000058, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, Temp_int_Variable_5) == 0x00005C, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Add_IntInt_ReturnValue_4) == 0x000060, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Add_IntInt_ReturnValue_5) == 0x000064, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, Temp_int_Variable_6) == 0x000068, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, Temp_int_Variable_7) == 0x00006C, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Add_IntInt_ReturnValue_6) == 0x000070, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Add_IntInt_ReturnValue_7) == 0x000074, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, Temp_int_Variable_8) == 0x000078, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, Temp_int_Variable_9) == 0x00007C, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Add_IntInt_ReturnValue_8) == 0x000080, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Add_IntInt_ReturnValue_9) == 0x000084, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, Temp_int_Variable_10) == 0x000088, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, Temp_int_Variable_11) == 0x00008C, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Add_IntInt_ReturnValue_10) == 0x000090, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Add_IntInt_ReturnValue_11) == 0x000094, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Add_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Array_Get_Item) == 0x000098, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Less_IntInt_ReturnValue) == 0x0000A4, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_GetAreaBlendBorders_ReturnValue) == 0x0000B0, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_GetAreaBlendBorders_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_BreakVector4_X) == 0x0000D0, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_BreakVector4_X' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_BreakVector4_Y) == 0x0000D8, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_BreakVector4_Y' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_BreakVector4_Z) == 0x0000E0, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_BreakVector4_Z' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_BreakVector4_W) == 0x0000E8, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_BreakVector4_W' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, K2Node_MakeStruct_LinearColor) == 0x0000F0, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Array_Get_Item_1) == 0x000100, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Array_Length_ReturnValue_1) == 0x000108, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Less_IntInt_ReturnValue_1) == 0x00010C, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_BreakVector_X) == 0x000110, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_BreakVector_Y) == 0x000118, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_BreakVector_Z) == 0x000120, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Array_Get_Item_2) == 0x000128, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Array_Length_ReturnValue_2) == 0x000130, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Less_IntInt_ReturnValue_2) == 0x000134, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Array_Get_Item_3) == 0x000138, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Array_Length_ReturnValue_3) == 0x000140, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Less_IntInt_ReturnValue_3) == 0x000144, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000148, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_BreakVector_X_1) == 0x000150, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_BreakVector_Y_1) == 0x000158, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_BreakVector_Z_1) == 0x000160, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000168, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Array_Get_Item_4) == 0x000170, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Array_Length_ReturnValue_4) == 0x000178, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Less_IntInt_ReturnValue_4) == 0x00017C, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_GetDecodeVector_LinearColor) == 0x000180, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_GetDecodeVector_LinearColor' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000198, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x0001A8, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Array_Get_Item_5) == 0x0001B0, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Array_Length_ReturnValue_5) == 0x0001B8, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Less_IntInt_ReturnValue_5) == 0x0001BC, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Array_Get_Item_6) == 0x0001C0, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Array_Length_ReturnValue_6) == 0x0001C8, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Less_IntInt_ReturnValue_6) == 0x0001CC, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Array_Get_Item_7) == 0x0001D0, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Array_Length_ReturnValue_7) == 0x0001D8, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Less_IntInt_ReturnValue_7) == 0x0001DC, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Array_Get_Item_8) == 0x0001E0, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Array_Length_ReturnValue_8) == 0x0001E8, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Less_IntInt_ReturnValue_8) == 0x0001EC, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Less_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Array_Get_Item_9) == 0x0001F0, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Array_Length_ReturnValue_9) == 0x0001F8, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Less_IntInt_ReturnValue_9) == 0x0001FC, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Less_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Array_Get_Item_10) == 0x000200, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Array_Length_ReturnValue_10) == 0x000208, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Array_Length_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Less_IntInt_ReturnValue_10) == 0x00020C, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Less_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x000210, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Array_Get_Item_11) == 0x000220, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Array_Get_Item_11' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Array_Length_ReturnValue_11) == 0x000228, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Array_Length_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_Less_IntInt_ReturnValue_11) == 0x00022C, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_Less_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_GetPixelSize_WorldToSimulationUV) == 0x000230, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_GetPixelSize_WorldToSimulationUV' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_GetWorldToTextureUV_WorldToTextureUV) == 0x000240, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_GetWorldToTextureUV_WorldToTextureUV' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000250, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, K2Node_MakeStruct_R_ImplicitCast) == 0x000254, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::K2Node_MakeStruct_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, K2Node_MakeStruct_G_ImplicitCast) == 0x000258, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::K2Node_MakeStruct_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, K2Node_MakeStruct_B_ImplicitCast) == 0x00025C, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::K2Node_MakeStruct_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, K2Node_MakeStruct_A_ImplicitCast) == 0x000260, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::K2Node_MakeStruct_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000264, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x000268, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_ApplyMaterialData, CallFunc_SetScalarParameterValue_Value_ImplicitCast_3) == 0x00026C, "Member 'PDA_FluxSimulationState_C_ApplyMaterialData::CallFunc_SetScalarParameterValue_Value_ImplicitCast_3' has a wrong offset!");

// Function PDA_FluxSimulationState.PDA_FluxSimulationState_C.GetAreaBlendBorders
// 0x00A0 (0x00A0 - 0x0000)
struct PDA_FluxSimulationState_C_GetAreaBlendBorders final
{
public:
	struct FVector4                               ReturnValue;                                       // 0x0000(0x0020)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_1;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_2;                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_3;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector4                               CallFunc_MakeVector4_ReturnValue;                  // 0x0060(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_A_ImplicitCast;                      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_A_ImplicitCast_1;                    // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_A_ImplicitCast_2;                    // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_A_ImplicitCast_3;                    // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PDA_FluxSimulationState_C_GetAreaBlendBorders) == 0x000010, "Wrong alignment on PDA_FluxSimulationState_C_GetAreaBlendBorders");
static_assert(sizeof(PDA_FluxSimulationState_C_GetAreaBlendBorders) == 0x0000A0, "Wrong size on PDA_FluxSimulationState_C_GetAreaBlendBorders");
static_assert(offsetof(PDA_FluxSimulationState_C_GetAreaBlendBorders, ReturnValue) == 0x000000, "Member 'PDA_FluxSimulationState_C_GetAreaBlendBorders::ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetAreaBlendBorders, CallFunc_FMax_ReturnValue) == 0x000020, "Member 'PDA_FluxSimulationState_C_GetAreaBlendBorders::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetAreaBlendBorders, CallFunc_FMax_ReturnValue_1) == 0x000028, "Member 'PDA_FluxSimulationState_C_GetAreaBlendBorders::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetAreaBlendBorders, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000030, "Member 'PDA_FluxSimulationState_C_GetAreaBlendBorders::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetAreaBlendBorders, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'PDA_FluxSimulationState_C_GetAreaBlendBorders::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetAreaBlendBorders, CallFunc_FMax_ReturnValue_2) == 0x000040, "Member 'PDA_FluxSimulationState_C_GetAreaBlendBorders::CallFunc_FMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetAreaBlendBorders, CallFunc_FMax_ReturnValue_3) == 0x000048, "Member 'PDA_FluxSimulationState_C_GetAreaBlendBorders::CallFunc_FMax_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetAreaBlendBorders, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000050, "Member 'PDA_FluxSimulationState_C_GetAreaBlendBorders::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetAreaBlendBorders, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000058, "Member 'PDA_FluxSimulationState_C_GetAreaBlendBorders::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetAreaBlendBorders, CallFunc_MakeVector4_ReturnValue) == 0x000060, "Member 'PDA_FluxSimulationState_C_GetAreaBlendBorders::CallFunc_MakeVector4_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetAreaBlendBorders, CallFunc_FMax_A_ImplicitCast) == 0x000080, "Member 'PDA_FluxSimulationState_C_GetAreaBlendBorders::CallFunc_FMax_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetAreaBlendBorders, CallFunc_FMax_A_ImplicitCast_1) == 0x000088, "Member 'PDA_FluxSimulationState_C_GetAreaBlendBorders::CallFunc_FMax_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetAreaBlendBorders, CallFunc_FMax_A_ImplicitCast_2) == 0x000090, "Member 'PDA_FluxSimulationState_C_GetAreaBlendBorders::CallFunc_FMax_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetAreaBlendBorders, CallFunc_FMax_A_ImplicitCast_3) == 0x000098, "Member 'PDA_FluxSimulationState_C_GetAreaBlendBorders::CallFunc_FMax_A_ImplicitCast_3' has a wrong offset!");

// Function PDA_FluxSimulationState.PDA_FluxSimulationState_C.GetDecodeVector
// 0x0038 (0x0038 - 0x0000)
struct PDA_FluxSimulationState_C_GetDecodeVector final
{
public:
	struct FVector                                LinearColor;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PDA_FluxSimulationState_C_GetDecodeVector) == 0x000008, "Wrong alignment on PDA_FluxSimulationState_C_GetDecodeVector");
static_assert(sizeof(PDA_FluxSimulationState_C_GetDecodeVector) == 0x000038, "Wrong size on PDA_FluxSimulationState_C_GetDecodeVector");
static_assert(offsetof(PDA_FluxSimulationState_C_GetDecodeVector, LinearColor) == 0x000000, "Member 'PDA_FluxSimulationState_C_GetDecodeVector::LinearColor' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetDecodeVector, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x000018, "Member 'PDA_FluxSimulationState_C_GetDecodeVector::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetDecodeVector, CallFunc_MakeVector_ReturnValue) == 0x000020, "Member 'PDA_FluxSimulationState_C_GetDecodeVector::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function PDA_FluxSimulationState.PDA_FluxSimulationState_C.GetEncodeVector
// 0x0060 (0x0060 - 0x0000)
struct PDA_FluxSimulationState_C_GetEncodeVector final
{
public:
	struct FLinearColor                           LinearColor;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_ImplicitCast;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PDA_FluxSimulationState_C_GetEncodeVector) == 0x000008, "Wrong alignment on PDA_FluxSimulationState_C_GetEncodeVector");
static_assert(sizeof(PDA_FluxSimulationState_C_GetEncodeVector) == 0x000060, "Wrong size on PDA_FluxSimulationState_C_GetEncodeVector");
static_assert(offsetof(PDA_FluxSimulationState_C_GetEncodeVector, LinearColor) == 0x000000, "Member 'PDA_FluxSimulationState_C_GetEncodeVector::LinearColor' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetEncodeVector, Temp_bool_Variable) == 0x000010, "Member 'PDA_FluxSimulationState_C_GetEncodeVector::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetEncodeVector, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'PDA_FluxSimulationState_C_GetEncodeVector::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetEncodeVector, K2Node_MakeStruct_LinearColor) == 0x000020, "Member 'PDA_FluxSimulationState_C_GetEncodeVector::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetEncodeVector, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'PDA_FluxSimulationState_C_GetEncodeVector::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetEncodeVector, K2Node_MakeStruct_LinearColor_1) == 0x000038, "Member 'PDA_FluxSimulationState_C_GetEncodeVector::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetEncodeVector, K2Node_Select_Default) == 0x000048, "Member 'PDA_FluxSimulationState_C_GetEncodeVector::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetEncodeVector, K2Node_MakeStruct_B_ImplicitCast) == 0x000058, "Member 'PDA_FluxSimulationState_C_GetEncodeVector::K2Node_MakeStruct_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetEncodeVector, K2Node_MakeStruct_G_ImplicitCast) == 0x00005C, "Member 'PDA_FluxSimulationState_C_GetEncodeVector::K2Node_MakeStruct_G_ImplicitCast' has a wrong offset!");

// Function PDA_FluxSimulationState.PDA_FluxSimulationState_C.GetPixelSize
// 0x0070 (0x0070 - 0x0000)
struct PDA_FluxSimulationState_C_GetPixelSize final
{
public:
	struct FLinearColor                           WorldToSimulationUV;                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_IntPointToVector2D_ReturnValue;      // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue;      // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_B_ImplicitCast;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_A_ImplicitCast;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_R_ImplicitCast;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_G_ImplicitCast;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PDA_FluxSimulationState_C_GetPixelSize) == 0x000008, "Wrong alignment on PDA_FluxSimulationState_C_GetPixelSize");
static_assert(sizeof(PDA_FluxSimulationState_C_GetPixelSize) == 0x000070, "Wrong size on PDA_FluxSimulationState_C_GetPixelSize");
static_assert(offsetof(PDA_FluxSimulationState_C_GetPixelSize, WorldToSimulationUV) == 0x000000, "Member 'PDA_FluxSimulationState_C_GetPixelSize::WorldToSimulationUV' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetPixelSize, CallFunc_Conv_IntPointToVector2D_ReturnValue) == 0x000010, "Member 'PDA_FluxSimulationState_C_GetPixelSize::CallFunc_Conv_IntPointToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetPixelSize, CallFunc_Divide_Vector2DVector2D_ReturnValue) == 0x000020, "Member 'PDA_FluxSimulationState_C_GetPixelSize::CallFunc_Divide_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetPixelSize, CallFunc_BreakVector2D_X) == 0x000030, "Member 'PDA_FluxSimulationState_C_GetPixelSize::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetPixelSize, CallFunc_BreakVector2D_Y) == 0x000038, "Member 'PDA_FluxSimulationState_C_GetPixelSize::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetPixelSize, CallFunc_BreakVector2D_X_1) == 0x000040, "Member 'PDA_FluxSimulationState_C_GetPixelSize::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetPixelSize, CallFunc_BreakVector2D_Y_1) == 0x000048, "Member 'PDA_FluxSimulationState_C_GetPixelSize::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetPixelSize, CallFunc_MakeColor_ReturnValue) == 0x000050, "Member 'PDA_FluxSimulationState_C_GetPixelSize::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetPixelSize, CallFunc_MakeColor_B_ImplicitCast) == 0x000060, "Member 'PDA_FluxSimulationState_C_GetPixelSize::CallFunc_MakeColor_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetPixelSize, CallFunc_MakeColor_A_ImplicitCast) == 0x000064, "Member 'PDA_FluxSimulationState_C_GetPixelSize::CallFunc_MakeColor_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetPixelSize, CallFunc_MakeColor_R_ImplicitCast) == 0x000068, "Member 'PDA_FluxSimulationState_C_GetPixelSize::CallFunc_MakeColor_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetPixelSize, CallFunc_MakeColor_G_ImplicitCast) == 0x00006C, "Member 'PDA_FluxSimulationState_C_GetPixelSize::CallFunc_MakeColor_G_ImplicitCast' has a wrong offset!");

// Function PDA_FluxSimulationState.PDA_FluxSimulationState_C.GetTextureSize
// 0x0040 (0x0040 - 0x0000)
struct PDA_FluxSimulationState_C_GetTextureSize final
{
public:
	struct FIntPoint                              Resolution_0;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 K2Node_DynamicCast_AsTexture_Render_Target_2D;     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Blueprint_GetSizeY_ReturnValue;           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Blueprint_GetSizeX_ReturnValue;           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint_1;                      // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PDA_FluxSimulationState_C_GetTextureSize) == 0x000008, "Wrong alignment on PDA_FluxSimulationState_C_GetTextureSize");
static_assert(sizeof(PDA_FluxSimulationState_C_GetTextureSize) == 0x000040, "Wrong size on PDA_FluxSimulationState_C_GetTextureSize");
static_assert(offsetof(PDA_FluxSimulationState_C_GetTextureSize, Resolution_0) == 0x000000, "Member 'PDA_FluxSimulationState_C_GetTextureSize::Resolution_0' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetTextureSize, K2Node_DynamicCast_AsTexture_2D) == 0x000008, "Member 'PDA_FluxSimulationState_C_GetTextureSize::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetTextureSize, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'PDA_FluxSimulationState_C_GetTextureSize::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetTextureSize, K2Node_DynamicCast_AsTexture_Render_Target_2D) == 0x000018, "Member 'PDA_FluxSimulationState_C_GetTextureSize::K2Node_DynamicCast_AsTexture_Render_Target_2D' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetTextureSize, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'PDA_FluxSimulationState_C_GetTextureSize::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetTextureSize, CallFunc_Blueprint_GetSizeY_ReturnValue) == 0x000024, "Member 'PDA_FluxSimulationState_C_GetTextureSize::CallFunc_Blueprint_GetSizeY_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetTextureSize, CallFunc_Blueprint_GetSizeX_ReturnValue) == 0x000028, "Member 'PDA_FluxSimulationState_C_GetTextureSize::CallFunc_Blueprint_GetSizeX_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetTextureSize, K2Node_MakeStruct_IntPoint) == 0x00002C, "Member 'PDA_FluxSimulationState_C_GetTextureSize::K2Node_MakeStruct_IntPoint' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetTextureSize, K2Node_MakeStruct_IntPoint_1) == 0x000034, "Member 'PDA_FluxSimulationState_C_GetTextureSize::K2Node_MakeStruct_IntPoint_1' has a wrong offset!");

// Function PDA_FluxSimulationState.PDA_FluxSimulationState_C.GetWorldToTextureUV
// 0x0090 (0x0090 - 0x0000)
struct PDA_FluxSimulationState_C_GetWorldToTextureUV final
{
public:
	struct FLinearColor                           WorldToTextureUV;                                  // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_B_ImplicitCast;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_A_ImplicitCast;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_R_ImplicitCast;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_G_ImplicitCast;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PDA_FluxSimulationState_C_GetWorldToTextureUV) == 0x000008, "Wrong alignment on PDA_FluxSimulationState_C_GetWorldToTextureUV");
static_assert(sizeof(PDA_FluxSimulationState_C_GetWorldToTextureUV) == 0x000090, "Wrong size on PDA_FluxSimulationState_C_GetWorldToTextureUV");
static_assert(offsetof(PDA_FluxSimulationState_C_GetWorldToTextureUV, WorldToTextureUV) == 0x000000, "Member 'PDA_FluxSimulationState_C_GetWorldToTextureUV::WorldToTextureUV' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetWorldToTextureUV, CallFunc_BreakVector_X) == 0x000010, "Member 'PDA_FluxSimulationState_C_GetWorldToTextureUV::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetWorldToTextureUV, CallFunc_BreakVector_Y) == 0x000018, "Member 'PDA_FluxSimulationState_C_GetWorldToTextureUV::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetWorldToTextureUV, CallFunc_BreakVector_Z) == 0x000020, "Member 'PDA_FluxSimulationState_C_GetWorldToTextureUV::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetWorldToTextureUV, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000028, "Member 'PDA_FluxSimulationState_C_GetWorldToTextureUV::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetWorldToTextureUV, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000040, "Member 'PDA_FluxSimulationState_C_GetWorldToTextureUV::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetWorldToTextureUV, CallFunc_BreakVector_X_1) == 0x000058, "Member 'PDA_FluxSimulationState_C_GetWorldToTextureUV::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetWorldToTextureUV, CallFunc_BreakVector_Y_1) == 0x000060, "Member 'PDA_FluxSimulationState_C_GetWorldToTextureUV::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetWorldToTextureUV, CallFunc_BreakVector_Z_1) == 0x000068, "Member 'PDA_FluxSimulationState_C_GetWorldToTextureUV::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetWorldToTextureUV, CallFunc_MakeColor_ReturnValue) == 0x000070, "Member 'PDA_FluxSimulationState_C_GetWorldToTextureUV::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetWorldToTextureUV, CallFunc_MakeColor_B_ImplicitCast) == 0x000080, "Member 'PDA_FluxSimulationState_C_GetWorldToTextureUV::CallFunc_MakeColor_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetWorldToTextureUV, CallFunc_MakeColor_A_ImplicitCast) == 0x000084, "Member 'PDA_FluxSimulationState_C_GetWorldToTextureUV::CallFunc_MakeColor_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetWorldToTextureUV, CallFunc_MakeColor_R_ImplicitCast) == 0x000088, "Member 'PDA_FluxSimulationState_C_GetWorldToTextureUV::CallFunc_MakeColor_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PDA_FluxSimulationState_C_GetWorldToTextureUV, CallFunc_MakeColor_G_ImplicitCast) == 0x00008C, "Member 'PDA_FluxSimulationState_C_GetWorldToTextureUV::CallFunc_MakeColor_G_ImplicitCast' has a wrong offset!");

}

