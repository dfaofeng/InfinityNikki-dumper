#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NikkiGameInstance_BP

#include "Basic.hpp"

#include "NikkiGameInstance_BP_classes.hpp"
#include "NikkiGameInstance_BP_parameters.hpp"


namespace SDK
{

// Function NikkiGameInstance_BP.NikkiGameInstance_BP_C.ExecuteUbergraph_NikkiGameInstance_BP
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UNikkiGameInstance_BP_C::ExecuteUbergraph_NikkiGameInstance_BP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NikkiGameInstance_BP_C", "ExecuteUbergraph_NikkiGameInstance_BP");

	Params::NikkiGameInstance_BP_C_ExecuteUbergraph_NikkiGameInstance_BP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NikkiGameInstance_BP.NikkiGameInstance_BP_C.GetDirLightVecFromDyEnv
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector*                         LightVector                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UNikkiGameInstance_BP_C::GetDirLightVecFromDyEnv(struct FVector* LightVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NikkiGameInstance_BP_C", "GetDirLightVecFromDyEnv");

	Params::NikkiGameInstance_BP_C_GetDirLightVecFromDyEnv Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (LightVector != nullptr)
		*LightVector = std::move(Parms.LightVector);
}


// Function NikkiGameInstance_BP.NikkiGameInstance_BP_C.GetLoadingUI
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UUserWidget**                     LoadingUI                                              (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UNikkiGameInstance_BP_C::GetLoadingUI(class UUserWidget** LoadingUI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NikkiGameInstance_BP_C", "GetLoadingUI");

	Params::NikkiGameInstance_BP_C_GetLoadingUI Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (LoadingUI != nullptr)
		*LoadingUI = Parms.LoadingUI;
}


// Function NikkiGameInstance_BP.NikkiGameInstance_BP_C.GetSystemStateNotifyManager
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_SystemStateNotifyManager_C**  SystemStateNotifyMgr                                   (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UNikkiGameInstance_BP_C::GetSystemStateNotifyManager(class ABP_SystemStateNotifyManager_C** SystemStateNotifyMgr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NikkiGameInstance_BP_C", "GetSystemStateNotifyManager");

	Params::NikkiGameInstance_BP_C_GetSystemStateNotifyManager Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SystemStateNotifyMgr != nullptr)
		*SystemStateNotifyMgr = Parms.SystemStateNotifyMgr;
}


// Function NikkiGameInstance_BP.NikkiGameInstance_BP_C.GetTODTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double*                                 Progress                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UNikkiGameInstance_BP_C::GetTODTime(double* Progress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NikkiGameInstance_BP_C", "GetTODTime");

	Params::NikkiGameInstance_BP_C_GetTODTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Progress != nullptr)
		*Progress = Parms.Progress;
}


// Function NikkiGameInstance_BP.NikkiGameInstance_BP_C.ReceiveInit
// (Event, Public, BlueprintEvent)

void UNikkiGameInstance_BP_C::ReceiveInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NikkiGameInstance_BP_C", "ReceiveInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NikkiGameInstance_BP.NikkiGameInstance_BP_C.SetLoadingUI
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget*                      LoadingUI                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UNikkiGameInstance_BP_C::SetLoadingUI(class UUserWidget* LoadingUI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NikkiGameInstance_BP_C", "SetLoadingUI");

	Params::NikkiGameInstance_BP_C_SetLoadingUI Parms{};

	Parms.LoadingUI = LoadingUI;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NikkiGameInstance_BP.NikkiGameInstance_BP_C.SetSystemStateNotifyManager
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_SystemStateNotifyManager_C*   SystemStateNotifyMgr                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UNikkiGameInstance_BP_C::SetSystemStateNotifyManager(class ABP_SystemStateNotifyManager_C* SystemStateNotifyMgr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NikkiGameInstance_BP_C", "SetSystemStateNotifyManager");

	Params::NikkiGameInstance_BP_C_SetSystemStateNotifyManager Parms{};

	Parms.SystemStateNotifyMgr = SystemStateNotifyMgr;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NikkiGameInstance_BP.NikkiGameInstance_BP_C.SetTODTime
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Progress                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UNikkiGameInstance_BP_C::SetTODTime(double Progress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NikkiGameInstance_BP_C", "SetTODTime");

	Params::NikkiGameInstance_BP_C_SetTODTime Parms{};

	Parms.Progress = Progress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NikkiGameInstance_BP.NikkiGameInstance_BP_C.GetModuleName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UNikkiGameInstance_BP_C::GetModuleName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NikkiGameInstance_BP_C", "GetModuleName");

	Params::NikkiGameInstance_BP_C_GetModuleName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

