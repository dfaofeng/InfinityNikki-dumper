#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PaperDissolveManager

#include "Basic.hpp"

#include "BP_PaperDissolveManager_classes.hpp"
#include "BP_PaperDissolveManager_parameters.hpp"


namespace SDK
{

// Function BP_PaperDissolveManager.BP_PaperDissolveManager_C.ExecuteUbergraph_BP_PaperDissolveManager
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PaperDissolveManager_C::ExecuteUbergraph_BP_PaperDissolveManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PaperDissolveManager_C", "ExecuteUbergraph_BP_PaperDissolveManager");

	Params::BP_PaperDissolveManager_C_ExecuteUbergraph_BP_PaperDissolveManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PaperDissolveManager.BP_PaperDissolveManager_C.Is Actor Dissolveable Item
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   CanDissolve                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor**                          OutActor                                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Dissolving                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_DissolveActorComponent_C**    DissolveActor                                          (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_PaperDissolveManager_C::Is_Actor_Dissolveable_Item(class AActor* Actor, bool* CanDissolve, class AActor** OutActor, bool* Dissolving, class UBP_DissolveActorComponent_C** DissolveActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PaperDissolveManager_C", "Is Actor Dissolveable Item");

	Params::BP_PaperDissolveManager_C_Is_Actor_Dissolveable_Item Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (CanDissolve != nullptr)
		*CanDissolve = Parms.CanDissolve;

	if (OutActor != nullptr)
		*OutActor = Parms.OutActor;

	if (Dissolving != nullptr)
		*Dissolving = Parms.Dissolving;

	if (DissolveActor != nullptr)
		*DissolveActor = Parms.DissolveActor;
}


// Function BP_PaperDissolveManager.BP_PaperDissolveManager_C.Is Actor Instanced Foliage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   CanDissolve                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PaperDissolveManager_C::Is_Actor_Instanced_Foliage(class AActor* Actor, bool* CanDissolve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PaperDissolveManager_C", "Is Actor Instanced Foliage");

	Params::BP_PaperDissolveManager_C_Is_Actor_Instanced_Foliage Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (CanDissolve != nullptr)
		*CanDissolve = Parms.CanDissolve;
}


// Function BP_PaperDissolveManager.BP_PaperDissolveManager_C.OnInstancedFoliageDissolve
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<struct FNeedDissolveItemInfo>&ISMs                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void ABP_PaperDissolveManager_C::OnInstancedFoliageDissolve(const TArray<struct FNeedDissolveItemInfo>& ISMs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PaperDissolveManager_C", "OnInstancedFoliageDissolve");

	Params::BP_PaperDissolveManager_C_OnInstancedFoliageDissolve Parms{};

	Parms.ISMs = std::move(ISMs);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PaperDissolveManager.BP_PaperDissolveManager_C.Return
// (BlueprintCallable, BlueprintEvent)

void ABP_PaperDissolveManager_C::Return()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PaperDissolveManager_C", "Return");

	UObject::ProcessEvent(Func, nullptr);
}

}

