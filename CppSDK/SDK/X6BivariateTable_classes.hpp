#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: X6BivariateTable

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class X6BivariateTable.X6BivariateTable
// 0x0098 (0x00C0 - 0x0028)
class UX6BivariateTable final : public UObject
{
public:
	uint8                                         Pad_28[0x29];                                      // 0x0028(0x0029)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bEnumAsGameplayTag;                                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_52[0x56];                                      // 0x0052(0x0056)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           GameplayTagNameArray;                              // 0x00A8(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B8[0x8];                                       // 0x00B8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"X6BivariateTable">();
	}
	static class UX6BivariateTable* GetDefaultObj()
	{
		return GetDefaultObjImpl<UX6BivariateTable>();
	}
};
static_assert(alignof(UX6BivariateTable) == 0x000008, "Wrong alignment on UX6BivariateTable");
static_assert(sizeof(UX6BivariateTable) == 0x0000C0, "Wrong size on UX6BivariateTable");
static_assert(offsetof(UX6BivariateTable, bEnumAsGameplayTag) == 0x000051, "Member 'UX6BivariateTable::bEnumAsGameplayTag' has a wrong offset!");
static_assert(offsetof(UX6BivariateTable, GameplayTagNameArray) == 0x0000A8, "Member 'UX6BivariateTable::GameplayTagNameArray' has a wrong offset!");

// Class X6BivariateTable.X6BivariateTableFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UX6BivariateTableFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static int32 GetCellDataAsInt(const class UX6BivariateTable* InTable, class FName RowName, class FName ColumnName);
	static int32 GetCellDataAsInt_ByIndex(const class UX6BivariateTable* InTable, int32 RowIndex, int32 ColumnIndex);
	static int32 GetRowOrColumnNum(const class UX6BivariateTable* InTable);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"X6BivariateTableFunctionLibrary">();
	}
	static class UX6BivariateTableFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UX6BivariateTableFunctionLibrary>();
	}
};
static_assert(alignof(UX6BivariateTableFunctionLibrary) == 0x000008, "Wrong alignment on UX6BivariateTableFunctionLibrary");
static_assert(sizeof(UX6BivariateTableFunctionLibrary) == 0x000028, "Wrong size on UX6BivariateTableFunctionLibrary");

}

