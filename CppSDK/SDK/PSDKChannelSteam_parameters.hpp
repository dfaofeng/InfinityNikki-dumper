#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PSDKChannelSteam

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function PSDKChannelSteam.PSdkLoginUIBindExistingAccountSteam.OnCheckedButton
// 0x0001 (0x0001 - 0x0000)
struct PSdkLoginUIBindExistingAccountSteam_OnCheckedButton final
{
public:
	bool                                          checked;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSdkLoginUIBindExistingAccountSteam_OnCheckedButton) == 0x000001, "Wrong alignment on PSdkLoginUIBindExistingAccountSteam_OnCheckedButton");
static_assert(sizeof(PSdkLoginUIBindExistingAccountSteam_OnCheckedButton) == 0x000001, "Wrong size on PSdkLoginUIBindExistingAccountSteam_OnCheckedButton");
static_assert(offsetof(PSdkLoginUIBindExistingAccountSteam_OnCheckedButton, checked) == 0x000000, "Member 'PSdkLoginUIBindExistingAccountSteam_OnCheckedButton::checked' has a wrong offset!");

// Function PSDKChannelSteam.PSdkLoginUIBindExistingAccountSteam.OnDelegate
// 0x0001 (0x0001 - 0x0000)
struct PSdkLoginUIBindExistingAccountSteam_OnDelegate final
{
public:
	bool                                          bRes;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSdkLoginUIBindExistingAccountSteam_OnDelegate) == 0x000001, "Wrong alignment on PSdkLoginUIBindExistingAccountSteam_OnDelegate");
static_assert(sizeof(PSdkLoginUIBindExistingAccountSteam_OnDelegate) == 0x000001, "Wrong size on PSdkLoginUIBindExistingAccountSteam_OnDelegate");
static_assert(offsetof(PSdkLoginUIBindExistingAccountSteam_OnDelegate, bRes) == 0x000000, "Member 'PSdkLoginUIBindExistingAccountSteam_OnDelegate::bRes' has a wrong offset!");

// Function PSDKChannelSteam.PSdkLoginUIBindExistingAccountSteam.TextBoxInputAccountCommit
// 0x0018 (0x0018 - 0x0000)
struct PSdkLoginUIBindExistingAccountSteam_TextBoxInputAccountCommit final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   Type;                                              // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PSdkLoginUIBindExistingAccountSteam_TextBoxInputAccountCommit) == 0x000008, "Wrong alignment on PSdkLoginUIBindExistingAccountSteam_TextBoxInputAccountCommit");
static_assert(sizeof(PSdkLoginUIBindExistingAccountSteam_TextBoxInputAccountCommit) == 0x000018, "Wrong size on PSdkLoginUIBindExistingAccountSteam_TextBoxInputAccountCommit");
static_assert(offsetof(PSdkLoginUIBindExistingAccountSteam_TextBoxInputAccountCommit, Text) == 0x000000, "Member 'PSdkLoginUIBindExistingAccountSteam_TextBoxInputAccountCommit::Text' has a wrong offset!");
static_assert(offsetof(PSdkLoginUIBindExistingAccountSteam_TextBoxInputAccountCommit, Type) == 0x000010, "Member 'PSdkLoginUIBindExistingAccountSteam_TextBoxInputAccountCommit::Type' has a wrong offset!");

// Function PSDKChannelSteam.PSdkLoginUIBindExistingAccountSteam.TextBoxInputPasswordCommit
// 0x0018 (0x0018 - 0x0000)
struct PSdkLoginUIBindExistingAccountSteam_TextBoxInputPasswordCommit final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   Type;                                              // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PSdkLoginUIBindExistingAccountSteam_TextBoxInputPasswordCommit) == 0x000008, "Wrong alignment on PSdkLoginUIBindExistingAccountSteam_TextBoxInputPasswordCommit");
static_assert(sizeof(PSdkLoginUIBindExistingAccountSteam_TextBoxInputPasswordCommit) == 0x000018, "Wrong size on PSdkLoginUIBindExistingAccountSteam_TextBoxInputPasswordCommit");
static_assert(offsetof(PSdkLoginUIBindExistingAccountSteam_TextBoxInputPasswordCommit, Text) == 0x000000, "Member 'PSdkLoginUIBindExistingAccountSteam_TextBoxInputPasswordCommit::Text' has a wrong offset!");
static_assert(offsetof(PSdkLoginUIBindExistingAccountSteam_TextBoxInputPasswordCommit, Type) == 0x000010, "Member 'PSdkLoginUIBindExistingAccountSteam_TextBoxInputPasswordCommit::Type' has a wrong offset!");

// Function PSDKChannelSteam.PSdkLoginUIBindExistingAccountSteamKr.OnCheckedButton
// 0x0001 (0x0001 - 0x0000)
struct PSdkLoginUIBindExistingAccountSteamKr_OnCheckedButton final
{
public:
	bool                                          checked;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSdkLoginUIBindExistingAccountSteamKr_OnCheckedButton) == 0x000001, "Wrong alignment on PSdkLoginUIBindExistingAccountSteamKr_OnCheckedButton");
static_assert(sizeof(PSdkLoginUIBindExistingAccountSteamKr_OnCheckedButton) == 0x000001, "Wrong size on PSdkLoginUIBindExistingAccountSteamKr_OnCheckedButton");
static_assert(offsetof(PSdkLoginUIBindExistingAccountSteamKr_OnCheckedButton, checked) == 0x000000, "Member 'PSdkLoginUIBindExistingAccountSteamKr_OnCheckedButton::checked' has a wrong offset!");

// Function PSDKChannelSteam.PSdkLoginUIBindExistingAccountSteamKr.OnDelegate
// 0x0001 (0x0001 - 0x0000)
struct PSdkLoginUIBindExistingAccountSteamKr_OnDelegate final
{
public:
	bool                                          bRes;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSdkLoginUIBindExistingAccountSteamKr_OnDelegate) == 0x000001, "Wrong alignment on PSdkLoginUIBindExistingAccountSteamKr_OnDelegate");
static_assert(sizeof(PSdkLoginUIBindExistingAccountSteamKr_OnDelegate) == 0x000001, "Wrong size on PSdkLoginUIBindExistingAccountSteamKr_OnDelegate");
static_assert(offsetof(PSdkLoginUIBindExistingAccountSteamKr_OnDelegate, bRes) == 0x000000, "Member 'PSdkLoginUIBindExistingAccountSteamKr_OnDelegate::bRes' has a wrong offset!");

// Function PSDKChannelSteam.PSdkLoginUIBindExistingAccountSteamKr.TextBoxInputAccountCommit
// 0x0018 (0x0018 - 0x0000)
struct PSdkLoginUIBindExistingAccountSteamKr_TextBoxInputAccountCommit final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   Type;                                              // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PSdkLoginUIBindExistingAccountSteamKr_TextBoxInputAccountCommit) == 0x000008, "Wrong alignment on PSdkLoginUIBindExistingAccountSteamKr_TextBoxInputAccountCommit");
static_assert(sizeof(PSdkLoginUIBindExistingAccountSteamKr_TextBoxInputAccountCommit) == 0x000018, "Wrong size on PSdkLoginUIBindExistingAccountSteamKr_TextBoxInputAccountCommit");
static_assert(offsetof(PSdkLoginUIBindExistingAccountSteamKr_TextBoxInputAccountCommit, Text) == 0x000000, "Member 'PSdkLoginUIBindExistingAccountSteamKr_TextBoxInputAccountCommit::Text' has a wrong offset!");
static_assert(offsetof(PSdkLoginUIBindExistingAccountSteamKr_TextBoxInputAccountCommit, Type) == 0x000010, "Member 'PSdkLoginUIBindExistingAccountSteamKr_TextBoxInputAccountCommit::Type' has a wrong offset!");

// Function PSDKChannelSteam.PSdkLoginUIBindExistingAccountSteamKr.TextBoxInputPasswordCommit
// 0x0018 (0x0018 - 0x0000)
struct PSdkLoginUIBindExistingAccountSteamKr_TextBoxInputPasswordCommit final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   Type;                                              // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PSdkLoginUIBindExistingAccountSteamKr_TextBoxInputPasswordCommit) == 0x000008, "Wrong alignment on PSdkLoginUIBindExistingAccountSteamKr_TextBoxInputPasswordCommit");
static_assert(sizeof(PSdkLoginUIBindExistingAccountSteamKr_TextBoxInputPasswordCommit) == 0x000018, "Wrong size on PSdkLoginUIBindExistingAccountSteamKr_TextBoxInputPasswordCommit");
static_assert(offsetof(PSdkLoginUIBindExistingAccountSteamKr_TextBoxInputPasswordCommit, Text) == 0x000000, "Member 'PSdkLoginUIBindExistingAccountSteamKr_TextBoxInputPasswordCommit::Text' has a wrong offset!");
static_assert(offsetof(PSdkLoginUIBindExistingAccountSteamKr_TextBoxInputPasswordCommit, Type) == 0x000010, "Member 'PSdkLoginUIBindExistingAccountSteamKr_TextBoxInputPasswordCommit::Type' has a wrong offset!");

// Function PSDKChannelSteam.PSdkLoginUIRegisterAndBindSteam.OnCheckedButton
// 0x0001 (0x0001 - 0x0000)
struct PSdkLoginUIRegisterAndBindSteam_OnCheckedButton final
{
public:
	bool                                          checked;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSdkLoginUIRegisterAndBindSteam_OnCheckedButton) == 0x000001, "Wrong alignment on PSdkLoginUIRegisterAndBindSteam_OnCheckedButton");
static_assert(sizeof(PSdkLoginUIRegisterAndBindSteam_OnCheckedButton) == 0x000001, "Wrong size on PSdkLoginUIRegisterAndBindSteam_OnCheckedButton");
static_assert(offsetof(PSdkLoginUIRegisterAndBindSteam_OnCheckedButton, checked) == 0x000000, "Member 'PSdkLoginUIRegisterAndBindSteam_OnCheckedButton::checked' has a wrong offset!");

// Function PSDKChannelSteam.PSdkLoginUIRegisterAndBindSteam.OnDelegate
// 0x0001 (0x0001 - 0x0000)
struct PSdkLoginUIRegisterAndBindSteam_OnDelegate final
{
public:
	bool                                          bRes;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSdkLoginUIRegisterAndBindSteam_OnDelegate) == 0x000001, "Wrong alignment on PSdkLoginUIRegisterAndBindSteam_OnDelegate");
static_assert(sizeof(PSdkLoginUIRegisterAndBindSteam_OnDelegate) == 0x000001, "Wrong size on PSdkLoginUIRegisterAndBindSteam_OnDelegate");
static_assert(offsetof(PSdkLoginUIRegisterAndBindSteam_OnDelegate, bRes) == 0x000000, "Member 'PSdkLoginUIRegisterAndBindSteam_OnDelegate::bRes' has a wrong offset!");

// Function PSDKChannelSteam.PSdkLoginUIRegisterAndBindSteam.TextBoxInputAccountCommit
// 0x0018 (0x0018 - 0x0000)
struct PSdkLoginUIRegisterAndBindSteam_TextBoxInputAccountCommit final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   Type;                                              // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PSdkLoginUIRegisterAndBindSteam_TextBoxInputAccountCommit) == 0x000008, "Wrong alignment on PSdkLoginUIRegisterAndBindSteam_TextBoxInputAccountCommit");
static_assert(sizeof(PSdkLoginUIRegisterAndBindSteam_TextBoxInputAccountCommit) == 0x000018, "Wrong size on PSdkLoginUIRegisterAndBindSteam_TextBoxInputAccountCommit");
static_assert(offsetof(PSdkLoginUIRegisterAndBindSteam_TextBoxInputAccountCommit, Text) == 0x000000, "Member 'PSdkLoginUIRegisterAndBindSteam_TextBoxInputAccountCommit::Text' has a wrong offset!");
static_assert(offsetof(PSdkLoginUIRegisterAndBindSteam_TextBoxInputAccountCommit, Type) == 0x000010, "Member 'PSdkLoginUIRegisterAndBindSteam_TextBoxInputAccountCommit::Type' has a wrong offset!");

// Function PSDKChannelSteam.PSdkLoginUIRegisterAndBindSteam.TextBoxInputCodeChanged
// 0x0010 (0x0010 - 0x0000)
struct PSdkLoginUIRegisterAndBindSteam_TextBoxInputCodeChanged final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSdkLoginUIRegisterAndBindSteam_TextBoxInputCodeChanged) == 0x000008, "Wrong alignment on PSdkLoginUIRegisterAndBindSteam_TextBoxInputCodeChanged");
static_assert(sizeof(PSdkLoginUIRegisterAndBindSteam_TextBoxInputCodeChanged) == 0x000010, "Wrong size on PSdkLoginUIRegisterAndBindSteam_TextBoxInputCodeChanged");
static_assert(offsetof(PSdkLoginUIRegisterAndBindSteam_TextBoxInputCodeChanged, Text) == 0x000000, "Member 'PSdkLoginUIRegisterAndBindSteam_TextBoxInputCodeChanged::Text' has a wrong offset!");

// Function PSDKChannelSteam.PSdkLoginUIRegisterAndBindSteam.TextBoxInputCodeCommit
// 0x0018 (0x0018 - 0x0000)
struct PSdkLoginUIRegisterAndBindSteam_TextBoxInputCodeCommit final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   Type;                                              // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PSdkLoginUIRegisterAndBindSteam_TextBoxInputCodeCommit) == 0x000008, "Wrong alignment on PSdkLoginUIRegisterAndBindSteam_TextBoxInputCodeCommit");
static_assert(sizeof(PSdkLoginUIRegisterAndBindSteam_TextBoxInputCodeCommit) == 0x000018, "Wrong size on PSdkLoginUIRegisterAndBindSteam_TextBoxInputCodeCommit");
static_assert(offsetof(PSdkLoginUIRegisterAndBindSteam_TextBoxInputCodeCommit, Text) == 0x000000, "Member 'PSdkLoginUIRegisterAndBindSteam_TextBoxInputCodeCommit::Text' has a wrong offset!");
static_assert(offsetof(PSdkLoginUIRegisterAndBindSteam_TextBoxInputCodeCommit, Type) == 0x000010, "Member 'PSdkLoginUIRegisterAndBindSteam_TextBoxInputCodeCommit::Type' has a wrong offset!");

// Function PSDKChannelSteam.PSdkLoginUIRegisterAndBindSteam.TextBoxInputPassword2Changed
// 0x0010 (0x0010 - 0x0000)
struct PSdkLoginUIRegisterAndBindSteam_TextBoxInputPassword2Changed final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSdkLoginUIRegisterAndBindSteam_TextBoxInputPassword2Changed) == 0x000008, "Wrong alignment on PSdkLoginUIRegisterAndBindSteam_TextBoxInputPassword2Changed");
static_assert(sizeof(PSdkLoginUIRegisterAndBindSteam_TextBoxInputPassword2Changed) == 0x000010, "Wrong size on PSdkLoginUIRegisterAndBindSteam_TextBoxInputPassword2Changed");
static_assert(offsetof(PSdkLoginUIRegisterAndBindSteam_TextBoxInputPassword2Changed, Text) == 0x000000, "Member 'PSdkLoginUIRegisterAndBindSteam_TextBoxInputPassword2Changed::Text' has a wrong offset!");

// Function PSDKChannelSteam.PSdkLoginUIRegisterAndBindSteam.TextBoxInputPassword2Commit
// 0x0018 (0x0018 - 0x0000)
struct PSdkLoginUIRegisterAndBindSteam_TextBoxInputPassword2Commit final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   Type;                                              // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PSdkLoginUIRegisterAndBindSteam_TextBoxInputPassword2Commit) == 0x000008, "Wrong alignment on PSdkLoginUIRegisterAndBindSteam_TextBoxInputPassword2Commit");
static_assert(sizeof(PSdkLoginUIRegisterAndBindSteam_TextBoxInputPassword2Commit) == 0x000018, "Wrong size on PSdkLoginUIRegisterAndBindSteam_TextBoxInputPassword2Commit");
static_assert(offsetof(PSdkLoginUIRegisterAndBindSteam_TextBoxInputPassword2Commit, Text) == 0x000000, "Member 'PSdkLoginUIRegisterAndBindSteam_TextBoxInputPassword2Commit::Text' has a wrong offset!");
static_assert(offsetof(PSdkLoginUIRegisterAndBindSteam_TextBoxInputPassword2Commit, Type) == 0x000010, "Member 'PSdkLoginUIRegisterAndBindSteam_TextBoxInputPassword2Commit::Type' has a wrong offset!");

// Function PSDKChannelSteam.PSdkLoginUIRegisterAndBindSteam.TextBoxInputPasswordChanged
// 0x0010 (0x0010 - 0x0000)
struct PSdkLoginUIRegisterAndBindSteam_TextBoxInputPasswordChanged final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSdkLoginUIRegisterAndBindSteam_TextBoxInputPasswordChanged) == 0x000008, "Wrong alignment on PSdkLoginUIRegisterAndBindSteam_TextBoxInputPasswordChanged");
static_assert(sizeof(PSdkLoginUIRegisterAndBindSteam_TextBoxInputPasswordChanged) == 0x000010, "Wrong size on PSdkLoginUIRegisterAndBindSteam_TextBoxInputPasswordChanged");
static_assert(offsetof(PSdkLoginUIRegisterAndBindSteam_TextBoxInputPasswordChanged, Text) == 0x000000, "Member 'PSdkLoginUIRegisterAndBindSteam_TextBoxInputPasswordChanged::Text' has a wrong offset!");

// Function PSDKChannelSteam.PSdkLoginUIRegisterAndBindSteam.TextBoxInputPasswordCommit
// 0x0018 (0x0018 - 0x0000)
struct PSdkLoginUIRegisterAndBindSteam_TextBoxInputPasswordCommit final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   Type;                                              // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PSdkLoginUIRegisterAndBindSteam_TextBoxInputPasswordCommit) == 0x000008, "Wrong alignment on PSdkLoginUIRegisterAndBindSteam_TextBoxInputPasswordCommit");
static_assert(sizeof(PSdkLoginUIRegisterAndBindSteam_TextBoxInputPasswordCommit) == 0x000018, "Wrong size on PSdkLoginUIRegisterAndBindSteam_TextBoxInputPasswordCommit");
static_assert(offsetof(PSdkLoginUIRegisterAndBindSteam_TextBoxInputPasswordCommit, Text) == 0x000000, "Member 'PSdkLoginUIRegisterAndBindSteam_TextBoxInputPasswordCommit::Text' has a wrong offset!");
static_assert(offsetof(PSdkLoginUIRegisterAndBindSteam_TextBoxInputPasswordCommit, Type) == 0x000010, "Member 'PSdkLoginUIRegisterAndBindSteam_TextBoxInputPasswordCommit::Type' has a wrong offset!");

// Function PSDKChannelSteam.PSdkLoginUIRegisterAndBindSteamKr.OnDelegate
// 0x0001 (0x0001 - 0x0000)
struct PSdkLoginUIRegisterAndBindSteamKr_OnDelegate final
{
public:
	bool                                          bRes;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSdkLoginUIRegisterAndBindSteamKr_OnDelegate) == 0x000001, "Wrong alignment on PSdkLoginUIRegisterAndBindSteamKr_OnDelegate");
static_assert(sizeof(PSdkLoginUIRegisterAndBindSteamKr_OnDelegate) == 0x000001, "Wrong size on PSdkLoginUIRegisterAndBindSteamKr_OnDelegate");
static_assert(offsetof(PSdkLoginUIRegisterAndBindSteamKr_OnDelegate, bRes) == 0x000000, "Member 'PSdkLoginUIRegisterAndBindSteamKr_OnDelegate::bRes' has a wrong offset!");

// Function PSDKChannelSteam.PSdkLoginUIRegisterAndBindSteamKr.TextBoxInputAccountCommit
// 0x0018 (0x0018 - 0x0000)
struct PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputAccountCommit final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   Type;                                              // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputAccountCommit) == 0x000008, "Wrong alignment on PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputAccountCommit");
static_assert(sizeof(PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputAccountCommit) == 0x000018, "Wrong size on PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputAccountCommit");
static_assert(offsetof(PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputAccountCommit, Text) == 0x000000, "Member 'PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputAccountCommit::Text' has a wrong offset!");
static_assert(offsetof(PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputAccountCommit, Type) == 0x000010, "Member 'PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputAccountCommit::Type' has a wrong offset!");

// Function PSDKChannelSteam.PSdkLoginUIRegisterAndBindSteamKr.TextBoxInputCodeChanged
// 0x0010 (0x0010 - 0x0000)
struct PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputCodeChanged final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputCodeChanged) == 0x000008, "Wrong alignment on PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputCodeChanged");
static_assert(sizeof(PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputCodeChanged) == 0x000010, "Wrong size on PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputCodeChanged");
static_assert(offsetof(PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputCodeChanged, Text) == 0x000000, "Member 'PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputCodeChanged::Text' has a wrong offset!");

// Function PSDKChannelSteam.PSdkLoginUIRegisterAndBindSteamKr.TextBoxInputCodeCommit
// 0x0018 (0x0018 - 0x0000)
struct PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputCodeCommit final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   Type;                                              // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputCodeCommit) == 0x000008, "Wrong alignment on PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputCodeCommit");
static_assert(sizeof(PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputCodeCommit) == 0x000018, "Wrong size on PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputCodeCommit");
static_assert(offsetof(PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputCodeCommit, Text) == 0x000000, "Member 'PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputCodeCommit::Text' has a wrong offset!");
static_assert(offsetof(PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputCodeCommit, Type) == 0x000010, "Member 'PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputCodeCommit::Type' has a wrong offset!");

// Function PSDKChannelSteam.PSdkLoginUIRegisterAndBindSteamKr.TextBoxInputPassword2Changed
// 0x0010 (0x0010 - 0x0000)
struct PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputPassword2Changed final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputPassword2Changed) == 0x000008, "Wrong alignment on PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputPassword2Changed");
static_assert(sizeof(PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputPassword2Changed) == 0x000010, "Wrong size on PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputPassword2Changed");
static_assert(offsetof(PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputPassword2Changed, Text) == 0x000000, "Member 'PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputPassword2Changed::Text' has a wrong offset!");

// Function PSDKChannelSteam.PSdkLoginUIRegisterAndBindSteamKr.TextBoxInputPassword2Commit
// 0x0018 (0x0018 - 0x0000)
struct PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputPassword2Commit final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   Type;                                              // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputPassword2Commit) == 0x000008, "Wrong alignment on PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputPassword2Commit");
static_assert(sizeof(PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputPassword2Commit) == 0x000018, "Wrong size on PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputPassword2Commit");
static_assert(offsetof(PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputPassword2Commit, Text) == 0x000000, "Member 'PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputPassword2Commit::Text' has a wrong offset!");
static_assert(offsetof(PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputPassword2Commit, Type) == 0x000010, "Member 'PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputPassword2Commit::Type' has a wrong offset!");

// Function PSDKChannelSteam.PSdkLoginUIRegisterAndBindSteamKr.TextBoxInputPasswordChanged
// 0x0010 (0x0010 - 0x0000)
struct PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputPasswordChanged final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputPasswordChanged) == 0x000008, "Wrong alignment on PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputPasswordChanged");
static_assert(sizeof(PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputPasswordChanged) == 0x000010, "Wrong size on PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputPasswordChanged");
static_assert(offsetof(PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputPasswordChanged, Text) == 0x000000, "Member 'PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputPasswordChanged::Text' has a wrong offset!");

// Function PSDKChannelSteam.PSdkLoginUIRegisterAndBindSteamKr.TextBoxInputPasswordCommit
// 0x0018 (0x0018 - 0x0000)
struct PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputPasswordCommit final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   Type;                                              // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputPasswordCommit) == 0x000008, "Wrong alignment on PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputPasswordCommit");
static_assert(sizeof(PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputPasswordCommit) == 0x000018, "Wrong size on PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputPasswordCommit");
static_assert(offsetof(PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputPasswordCommit, Text) == 0x000000, "Member 'PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputPasswordCommit::Text' has a wrong offset!");
static_assert(offsetof(PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputPasswordCommit, Type) == 0x000010, "Member 'PSdkLoginUIRegisterAndBindSteamKr_TextBoxInputPasswordCommit::Type' has a wrong offset!");

}

