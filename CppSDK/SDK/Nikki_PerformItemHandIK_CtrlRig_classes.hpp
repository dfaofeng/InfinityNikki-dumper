#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Nikki_PerformItemHandIK_CtrlRig

#include "Basic.hpp"

#include "ControlRig_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// ControlRigBlueprintGeneratedClass Nikki_PerformItemHandIK_CtrlRig.Nikki_PerformItemHandIK_CtrlRig_C
// 0x0098 (0x0B40 - 0x0AA8)
class UNikki_PerformItemHandIK_CtrlRig_C final : public UControlRig
{
public:
	bool                                          bEnableLeftHandIK;                                 // 0x0AA8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnableRightHandIK;                                // 0x0AA9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AAA[0x6];                                      // 0x0AAA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        HeelHeight;                                        // 0x0AB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AB8[0x8];                                      // 0x0AB8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             OriginalRootMTransform;                            // 0x0AC0(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HeelOffset;                                        // 0x0B20(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Nikki_PerformItemHandIK_CtrlRig_C">();
	}
	static class UNikki_PerformItemHandIK_CtrlRig_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNikki_PerformItemHandIK_CtrlRig_C>();
	}
};
static_assert(alignof(UNikki_PerformItemHandIK_CtrlRig_C) == 0x000010, "Wrong alignment on UNikki_PerformItemHandIK_CtrlRig_C");
static_assert(sizeof(UNikki_PerformItemHandIK_CtrlRig_C) == 0x000B40, "Wrong size on UNikki_PerformItemHandIK_CtrlRig_C");
static_assert(offsetof(UNikki_PerformItemHandIK_CtrlRig_C, bEnableLeftHandIK) == 0x000AA8, "Member 'UNikki_PerformItemHandIK_CtrlRig_C::bEnableLeftHandIK' has a wrong offset!");
static_assert(offsetof(UNikki_PerformItemHandIK_CtrlRig_C, bEnableRightHandIK) == 0x000AA9, "Member 'UNikki_PerformItemHandIK_CtrlRig_C::bEnableRightHandIK' has a wrong offset!");
static_assert(offsetof(UNikki_PerformItemHandIK_CtrlRig_C, HeelHeight) == 0x000AB0, "Member 'UNikki_PerformItemHandIK_CtrlRig_C::HeelHeight' has a wrong offset!");
static_assert(offsetof(UNikki_PerformItemHandIK_CtrlRig_C, OriginalRootMTransform) == 0x000AC0, "Member 'UNikki_PerformItemHandIK_CtrlRig_C::OriginalRootMTransform' has a wrong offset!");
static_assert(offsetof(UNikki_PerformItemHandIK_CtrlRig_C, HeelOffset) == 0x000B20, "Member 'UNikki_PerformItemHandIK_CtrlRig_C::HeelOffset' has a wrong offset!");

}

